// Dafny program the_program compiled into C#
// To recompile, you will need the libraries
//     System.Runtime.Numerics.dll System.Collections.Immutable.dll
// but the 'dotnet' tool in net6.0 should pick those up automatically.
// Optionally, you may want to include compiler switches like
//     /debug /nowarn:162,164,168,183,219,436,1717,1718

using System;
using System.Numerics;
using System.Collections;
namespace Formatting {

  public partial class __default {
    public static System.String ReindentProgramFromFirstToken(Microsoft.Dafny.IToken firstToken, Formatting.IIndentationFormatter reindent)
    {
      System.String s = default(System.String);
      Microsoft.Dafny.IToken token;
      token = firstToken;
      System.Text.StringBuilder sb;
      System.Text.StringBuilder _nw0 = new System.Text.StringBuilder();
      sb = _nw0;
      while ((token) != (object) ((Microsoft.Dafny.IToken)null)) {
        System.String newLeadingTrivia;
        newLeadingTrivia = (reindent).GetNewLeadingTrivia(token);
        System.String newTrailingTrivia;
        newTrailingTrivia = (reindent).GetNewTrailingTrivia(token);
        (sb).Append(newLeadingTrivia);
        (sb).Append(token.val);
        (sb).Append(newTrailingTrivia);
        token = token.Next;
      }
      System.String _out0;
      _out0 = (sb).ToString().ToString();
      s = _out0;
      return s;
    }
  }

  public interface IIndentationFormatter {
    System.String GetNewLeadingTrivia(Microsoft.Dafny.IToken token);
    System.String GetNewTrailingTrivia(Microsoft.Dafny.IToken token);
  }
  public class _Companion_IIndentationFormatter {
  }
} // end of namespace Formatting


namespace Std.Wrappers {

  public partial class __default {
    public static Std.Wrappers._IOutcomeResult<__E> Need<__E>(bool condition, __E error)
    {
      if (condition) {
        return Std.Wrappers.OutcomeResult<__E>.create_Pass_k();
      } else {
        return Std.Wrappers.OutcomeResult<__E>.create_Fail_k(error);
      }
    }
  }

  public interface _IOption<out T> {
    bool is_None { get; }
    bool is_Some { get; }
    T dtor_value { get; }
    _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    bool IsFailure();
    Std.Wrappers._IOption<__U> PropagateFailure<__U>();
    T Extract();
    Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error);
    Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error);
  }
  public abstract class Option<T> : _IOption<T> {
    public Option() {
    }
    public static Std.Wrappers._IOption<T> Default() {
      return create_None();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOption<T>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOption<T>>(Std.Wrappers.Option<T>.Default());
    }
    public static _IOption<T> create_None() {
      return new Option_None<T>();
    }
    public static _IOption<T> create_Some(T @value) {
      return new Option_Some<T>(@value);
    }
    public bool is_None { get { return this is Option_None<T>; } }
    public bool is_Some { get { return this is Option_Some<T>; } }
    public T dtor_value {
      get {
        var d = this;
        return ((Option_Some<T>)d)._value;
      }
    }
    public abstract _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    public bool IsFailure() {
      return (this).is_None;
    }
    public Std.Wrappers._IOption<__U> PropagateFailure<__U>() {
      return Std.Wrappers.Option<__U>.create_None();
    }
    public T Extract() {
      return (this).dtor_value;
    }
    public static T GetOr(Std.Wrappers._IOption<T> _this, T @default) {
      Std.Wrappers._IOption<T> _source0 = _this;
      if (_source0.is_None) {
        return @default;
      } else {
        T __mcc_h0 = _source0.dtor_value;
        T v = __mcc_h0;
        return v;
      }
    }
    public Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error) {
      Std.Wrappers._IOption<T> _source1 = this;
      if (_source1.is_None) {
        return Std.Wrappers.Result<T, __E>.create_Failure(error);
      } else {
        T __mcc_h0 = _source1.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Result<T, __E>.create_Success(v);
      }
    }
    public Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error) {
      Std.Wrappers._IOption<T> _source2 = this;
      if (_source2.is_None) {
        return Std.Wrappers.Outcome<__E>.create_Fail(error);
      } else {
        T __mcc_h0 = _source2.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Outcome<__E>.create_Pass();
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOption<T> _this, Func<Std.Wrappers._IOption<T>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOption<T>, __FC>>(rewrap)(_this);
    }
  }
  public class Option_None<T> : Option<T> {
    public Option_None() : base() {
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_None<__T>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_None<T>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.None";
      return s;
    }
  }
  public class Option_Some<T> : Option<T> {
    public readonly T _value;
    public Option_Some(T @value) : base() {
      this._value = @value;
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_Some<__T>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_Some<T>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.Some";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }

  public interface _IResult<out R, out E> {
    bool is_Success { get; }
    bool is_Failure { get; }
    R dtor_value { get; }
    E dtor_error { get; }
    _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
    R Extract();
    Std.Wrappers._IOption<R> ToOption();
    Std.Wrappers._IOutcome<E> ToOutcome();
  }
  public abstract class Result<R, E> : _IResult<R, E> {
    public Result() {
    }
    public static Std.Wrappers._IResult<R, E> Default(R _default_R) {
      return create_Success(_default_R);
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>> _TypeDescriptor(Dafny.TypeDescriptor<R> _td_R) {
      return new Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>>(Std.Wrappers.Result<R, E>.Default(_td_R.Default()));
    }
    public static _IResult<R, E> create_Success(R @value) {
      return new Result_Success<R, E>(@value);
    }
    public static _IResult<R, E> create_Failure(E error) {
      return new Result_Failure<R, E>(error);
    }
    public bool is_Success { get { return this is Result_Success<R, E>; } }
    public bool is_Failure { get { return this is Result_Failure<R, E>; } }
    public R dtor_value {
      get {
        var d = this;
        return ((Result_Success<R, E>)d)._value;
      }
    }
    public E dtor_error {
      get {
        var d = this;
        return ((Result_Failure<R, E>)d)._error;
      }
    }
    public abstract _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    public bool IsFailure() {
      return (this).is_Failure;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
    public R Extract() {
      return (this).dtor_value;
    }
    public static R GetOr(Std.Wrappers._IResult<R, E> _this, R @default) {
      Std.Wrappers._IResult<R, E> _source3 = _this;
      if (_source3.is_Success) {
        R _10___mcc_h0 = _source3.dtor_value;
        R _11_s = _10___mcc_h0;
        return _11_s;
      } else {
        E _12___mcc_h1 = _source3.dtor_error;
        E _13_e = _12___mcc_h1;
        return @default;
      }
    }
    public Std.Wrappers._IOption<R> ToOption() {
      Std.Wrappers._IResult<R, E> _source4 = this;
      if (_source4.is_Success) {
        R _14___mcc_h0 = _source4.dtor_value;
        R _15_s = _14___mcc_h0;
        return Std.Wrappers.Option<R>.create_Some(_15_s);
      } else {
        E _16___mcc_h1 = _source4.dtor_error;
        E _17_e = _16___mcc_h1;
        return Std.Wrappers.Option<R>.create_None();
      }
    }
    public Std.Wrappers._IOutcome<E> ToOutcome() {
      Std.Wrappers._IResult<R, E> _source5 = this;
      if (_source5.is_Success) {
        R _18___mcc_h0 = _source5.dtor_value;
        R _19_s = _18___mcc_h0;
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        E _20___mcc_h1 = _source5.dtor_error;
        E _21_e = _20___mcc_h1;
        return Std.Wrappers.Outcome<E>.create_Fail(_21_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IResult<R, E> _this, Func<Std.Wrappers._IResult<R, E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IResult<R, E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<R, __NewE> MapFailure<__NewE>(Std.Wrappers._IResult<R, E> _this, Func<E, __NewE> reWrap) {
      Std.Wrappers._IResult<R, E> _source6 = _this;
      if (_source6.is_Success) {
        R _22___mcc_h0 = _source6.dtor_value;
        R _23_s = _22___mcc_h0;
        return Std.Wrappers.Result<R, __NewE>.create_Success(_23_s);
      } else {
        E _24___mcc_h1 = _source6.dtor_error;
        E _25_e = _24___mcc_h1;
        return Std.Wrappers.Result<R, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(reWrap)(_25_e));
      }
    }
  }
  public class Result_Success<R, E> : Result<R, E> {
    public readonly R _value;
    public Result_Success(R @value) : base() {
      this._value = @value;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Success<__R, __E>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Success<R, E>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Success";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Result_Failure<R, E> : Result<R, E> {
    public readonly E _error;
    public Result_Failure(E error) : base() {
      this._error = error;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Failure<__R, __E>(converter1(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Failure<R, E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Failure";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcome<out E> {
    bool is_Pass { get; }
    bool is_Fail { get; }
    E dtor_error { get; }
    _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IOutcome<E> PropagateFailure();
    Std.Wrappers._IOption<__R> ToOption<__R>(__R r);
    Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r);
  }
  public abstract class Outcome<E> : _IOutcome<E> {
    public Outcome() {
    }
    public static Std.Wrappers._IOutcome<E> Default() {
      return create_Pass();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>>(Std.Wrappers.Outcome<E>.Default());
    }
    public static _IOutcome<E> create_Pass() {
      return new Outcome_Pass<E>();
    }
    public static _IOutcome<E> create_Fail(E error) {
      return new Outcome_Fail<E>(error);
    }
    public bool is_Pass { get { return this is Outcome_Pass<E>; } }
    public bool is_Fail { get { return this is Outcome_Fail<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((Outcome_Fail<E>)d)._error;
      }
    }
    public abstract _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail;
    }
    public Std.Wrappers._IOutcome<E> PropagateFailure() {
      return this;
    }
    public Std.Wrappers._IOption<__R> ToOption<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source7 = this;
      if (_source7.is_Pass) {
        return Std.Wrappers.Option<__R>.create_Some(r);
      } else {
        E _26___mcc_h0 = _source7.dtor_error;
        E _27_e = _26___mcc_h0;
        return Std.Wrappers.Option<__R>.create_None();
      }
    }
    public Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source8 = this;
      if (_source8.is_Pass) {
        return Std.Wrappers.Result<__R, E>.create_Success(r);
      } else {
        E _28___mcc_h0 = _source8.dtor_error;
        E _29_e = _28___mcc_h0;
        return Std.Wrappers.Result<__R, E>.create_Failure(_29_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOutcome<E> _this, Func<Std.Wrappers._IOutcome<E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOutcome<E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<__T, __NewE> MapFailure<__T, __NewE>(Std.Wrappers._IOutcome<E> _this, Func<E, __NewE> rewrap, __T @default)
    {
      Std.Wrappers._IOutcome<E> _source9 = _this;
      if (_source9.is_Pass) {
        return Std.Wrappers.Result<__T, __NewE>.create_Success(@default);
      } else {
        E _30___mcc_h0 = _source9.dtor_error;
        E _31_e = _30___mcc_h0;
        return Std.Wrappers.Result<__T, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(rewrap)(_31_e));
      }
    }
    public static Std.Wrappers._IOutcome<E> Need(bool condition, E error)
    {
      if (condition) {
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        return Std.Wrappers.Outcome<E>.create_Fail(error);
      }
    }
  }
  public class Outcome_Pass<E> : Outcome<E> {
    public Outcome_Pass() : base() {
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Pass<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Pass<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Pass";
      return s;
    }
  }
  public class Outcome_Fail<E> : Outcome<E> {
    public readonly E _error;
    public Outcome_Fail(E error) : base() {
      this._error = error;
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Fail<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Fail<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Fail";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcomeResult<out E> {
    bool is_Pass_k { get; }
    bool is_Fail_k { get; }
    E dtor_error { get; }
    _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
  }
  public abstract class OutcomeResult<E> : _IOutcomeResult<E> {
    public OutcomeResult() {
    }
    public static Std.Wrappers._IOutcomeResult<E> Default() {
      return create_Pass_k();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>>(Std.Wrappers.OutcomeResult<E>.Default());
    }
    public static _IOutcomeResult<E> create_Pass_k() {
      return new OutcomeResult_Pass_k<E>();
    }
    public static _IOutcomeResult<E> create_Fail_k(E error) {
      return new OutcomeResult_Fail_k<E>(error);
    }
    public bool is_Pass_k { get { return this is OutcomeResult_Pass_k<E>; } }
    public bool is_Fail_k { get { return this is OutcomeResult_Fail_k<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((OutcomeResult_Fail_k<E>)d)._error;
      }
    }
    public abstract _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail_k;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
  }
  public class OutcomeResult_Pass_k<E> : OutcomeResult<E> {
    public OutcomeResult_Pass_k() : base() {
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Pass_k<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Pass_k<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Pass'";
      return s;
    }
  }
  public class OutcomeResult_Fail_k<E> : OutcomeResult<E> {
    public readonly E _error;
    public OutcomeResult_Fail_k(E error) : base() {
      this._error = error;
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Fail_k<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Fail_k<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Fail'";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }
} // end of namespace Std.Wrappers
namespace Std.Math {

  public partial class __default {
    public static BigInteger Min(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return a;
      } else {
        return b;
      }
    }
    public static BigInteger Min3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Min(a, Std.Math.__default.Min(b, c));
    }
    public static BigInteger Max(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return b;
      } else {
        return a;
      }
    }
    public static BigInteger Max3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Max(a, Std.Math.__default.Max(b, c));
    }
    public static BigInteger Abs(BigInteger a) {
      if ((a).Sign == -1) {
        return (BigInteger.Zero) - (a);
      } else {
        return a;
      }
    }
  }
} // end of namespace Std.Math
namespace Std.Collections.Seq {

  public partial class __default {
    public static __T First<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select(BigInteger.Zero);
    }
    public static Dafny.ISequence<__T> DropFirst<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Drop(BigInteger.One);
    }
    public static __T Last<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static Dafny.ISequence<__T> DropLast<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static __T[] ToArray<__T>(Dafny.ISequence<__T> xs)
    {
      __T[] a = new __T[0];
      Func<BigInteger, __T> _init2 = Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Func<BigInteger, __T>>>((_83_xs) => ((System.Func<BigInteger, __T>)((_84_i) => {
        return (_83_xs).Select(_84_i);
      })))(xs);
      __T[] _nw3 = new __T[Dafny.Helpers.ToIntChecked(new BigInteger((xs).Count), "array size exceeds memory limit")];
      for (var _i0_2 = 0; _i0_2 < new BigInteger(_nw3.Length); _i0_2++) {
        _nw3[(int)(_i0_2)] = _init2(_i0_2);
      }
      a = _nw3;
      return a;
    }
    public static Dafny.ISet<__T> ToSet<__T>(Dafny.ISequence<__T> xs) {
      return Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Dafny.ISet<__T>>>((_85_xs) => ((System.Func<Dafny.ISet<__T>>)(() => {
        var _coll0 = new System.Collections.Generic.List<__T>();
        foreach (__T _compr_0 in (_85_xs).CloneAsArray()) {
          __T _86_x = (__T)_compr_0;
          if ((_85_xs).Contains(_86_x)) {
            _coll0.Add(_86_x);
          }
        }
        return Dafny.Set<__T>.FromCollection(_coll0);
      }))())(xs);
    }
    public static BigInteger IndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      BigInteger _87___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select(BigInteger.Zero), v)) {
        return (BigInteger.Zero) + (_87___accumulator);
      } else {
        _87___accumulator = (_87___accumulator) + (BigInteger.One);
        Dafny.ISequence<__T> _in0 = (xs).Drop(BigInteger.One);
        __T _in1 = v;
        xs = _in0;
        v = _in1;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> IndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.IndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_88_v) => ((System.Func<__T, bool>)((_89_x) => {
        return object.Equals(_89_x, _88_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> IndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select(BigInteger.Zero))) {
        return Std.Wrappers.Option<BigInteger>.create_Some(BigInteger.Zero);
      } else {
        Std.Wrappers._IOption<BigInteger> _90_o_k = Std.Collections.Seq.__default.IndexByOption<__T>((xs).Drop(BigInteger.One), p);
        if ((_90_o_k).is_Some) {
          return Std.Wrappers.Option<BigInteger>.create_Some(((_90_o_k).dtor_value) + (BigInteger.One));
        } else {
          return Std.Wrappers.Option<BigInteger>.create_None();
        }
      }
    }
    public static BigInteger LastIndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)), v)) {
        return (new BigInteger((xs).Count)) - (BigInteger.One);
      } else {
        Dafny.ISequence<__T> _in2 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        __T _in3 = v;
        xs = _in2;
        v = _in3;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.LastIndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_91_v) => ((System.Func<__T, bool>)((_92_x) => {
        return object.Equals(_92_x, _91_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)))) {
        return Std.Wrappers.Option<BigInteger>.create_Some((new BigInteger((xs).Count)) - (BigInteger.One));
      } else {
        Dafny.ISequence<__T> _in4 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        Func<__T, bool> _in5 = p;
        xs = _in4;
        p = _in5;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Remove<__T>(Dafny.ISequence<__T> xs, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat((xs).Take(pos), (xs).Drop((pos) + (BigInteger.One)));
    }
    public static Dafny.ISequence<__T> RemoveValue<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      if (!(xs).Contains(v)) {
        return xs;
      } else {
        BigInteger _93_i = Std.Collections.Seq.__default.IndexOf<__T>(xs, v);
        return Dafny.Sequence<__T>.Concat((xs).Take(_93_i), (xs).Drop((_93_i) + (BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Insert<__T>(Dafny.ISequence<__T> xs, __T a, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.Concat((xs).Take(pos), Dafny.Sequence<__T>.FromElements(a)), (xs).Drop(pos));
    }
    public static Dafny.ISequence<__T> Reverse<__T>(Dafny.ISequence<__T> xs) {
      Dafny.ISequence<__T> _94___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((xs).Equals(Dafny.Sequence<__T>.FromElements())) {
        return Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _94___accumulator = Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One))));
        Dafny.ISequence<__T> _in6 = (xs).Subsequence(BigInteger.Zero, (new BigInteger((xs).Count)) - (BigInteger.One));
        xs = _in6;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Repeat<__T>(__T v, BigInteger length)
    {
      Dafny.ISequence<__T> _95___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((length).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _95___accumulator = Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements(v));
        __T _in7 = v;
        BigInteger _in8 = (length) - (BigInteger.One);
        v = _in7;
        length = _in8;
        goto TAIL_CALL_START;
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> Unzip<__A, __B>(Dafny.ISequence<_System._ITuple2<__A, __B>> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.FromElements(), Dafny.Sequence<__B>.FromElements());
      } else {
        _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> _let_tmp_rhs0 = Std.Collections.Seq.__default.Unzip<__A, __B>(Std.Collections.Seq.__default.DropLast<_System._ITuple2<__A, __B>>(xs));
        Dafny.ISequence<__A> _96_a = _let_tmp_rhs0.dtor__0;
        Dafny.ISequence<__B> _97_b = _let_tmp_rhs0.dtor__1;
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.Concat(_96_a, Dafny.Sequence<__A>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__0)), Dafny.Sequence<__B>.Concat(_97_b, Dafny.Sequence<__B>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__1)));
      }
    }
    public static Dafny.ISequence<_System._ITuple2<__A, __B>> Zip<__A, __B>(Dafny.ISequence<__A> xs, Dafny.ISequence<__B> ys)
    {
      Dafny.ISequence<_System._ITuple2<__A, __B>> _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(), _98___accumulator);
      } else {
        _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(_System.Tuple2<__A, __B>.create(Std.Collections.Seq.__default.Last<__A>(xs), Std.Collections.Seq.__default.Last<__B>(ys))), _98___accumulator);
        Dafny.ISequence<__A> _in9 = Std.Collections.Seq.__default.DropLast<__A>(xs);
        Dafny.ISequence<__B> _in10 = Std.Collections.Seq.__default.DropLast<__B>(ys);
        xs = _in9;
        ys = _in10;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger Max(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Max((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Max((xs).Drop(BigInteger.One)));
      }
    }
    public static BigInteger Min(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Min((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Min((xs).Drop(BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Flatten<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _99___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_99___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _99___accumulator = Dafny.Sequence<__T>.Concat(_99___accumulator, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<Dafny.ISequence<__T>> _in11 = (xs).Drop(BigInteger.One);
        xs = _in11;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> FlattenReverse<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _100___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.FromElements(), _100___accumulator);
      } else {
        _100___accumulator = Dafny.Sequence<__T>.Concat(Std.Collections.Seq.__default.Last<Dafny.ISequence<__T>>(xs), _100___accumulator);
        Dafny.ISequence<Dafny.ISequence<__T>> _in12 = Std.Collections.Seq.__default.DropLast<Dafny.ISequence<__T>>(xs);
        xs = _in12;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Join<__T>(Dafny.ISequence<Dafny.ISequence<__T>> seqs, Dafny.ISequence<__T> separator)
    {
      Dafny.ISequence<__T> _101___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((seqs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.FromElements());
      } else if ((new BigInteger((seqs).Count)) == (BigInteger.One)) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, (seqs).Select(BigInteger.Zero));
      } else {
        _101___accumulator = Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.Concat((seqs).Select(BigInteger.Zero), separator));
        Dafny.ISequence<Dafny.ISequence<__T>> _in13 = (seqs).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in14 = separator;
        seqs = _in13;
        separator = _in14;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.ISequence<__T>> Split<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Dafny.ISequence<Dafny.ISequence<__T>> _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.FromElements();
    TAIL_CALL_START: ;
      Std.Wrappers._IOption<BigInteger> _103_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_103_i).is_Some) {
        _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements((s).Take((_103_i).dtor_value)));
        Dafny.ISequence<__T> _in15 = (s).Drop(((_103_i).dtor_value) + (BigInteger.One));
        __T _in16 = delim;
        s = _in15;
        delim = _in16;
        goto TAIL_CALL_START;
      } else {
        return Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements(s));
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>> SplitOnce<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _104_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      return _System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take((_104_i).dtor_value), (s).Drop(((_104_i).dtor_value) + (BigInteger.One)));
    }
    public static Std.Wrappers._IOption<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>> SplitOnceOption<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _105_valueOrError0 = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_105_valueOrError0).IsFailure()) {
        return (_105_valueOrError0).PropagateFailure<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>();
      } else {
        BigInteger _106_i = (_105_valueOrError0).Extract();
        return Std.Wrappers.Option<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>.create_Some(_System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take(_106_i), (s).Drop((_106_i) + (BigInteger.One))));
      }
    }
    public static Dafny.ISequence<__R> Map<__T, __R>(Func<__T, __R> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__R> _107___accumulator = Dafny.Sequence<__R>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements());
      } else {
        _107___accumulator = Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements(Dafny.Helpers.Id<Func<__T, __R>>(f)((xs).Select(BigInteger.Zero))));
        Func<__T, __R> _in17 = f;
        Dafny.ISequence<__T> _in18 = (xs).Drop(BigInteger.One);
        f = _in17;
        xs = _in18;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> MapWithResult<__T, __R, __E>(Func<__T, Std.Wrappers._IResult<__R, __E>> f, Dafny.ISequence<__T> xs)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.FromElements());
      } else {
        Std.Wrappers._IResult<__R, __E> _108_valueOrError0 = Dafny.Helpers.Id<Func<__T, Std.Wrappers._IResult<__R, __E>>>(f)((xs).Select(BigInteger.Zero));
        if ((_108_valueOrError0).IsFailure()) {
          return (_108_valueOrError0).PropagateFailure<Dafny.ISequence<__R>>();
        } else {
          __R _109_head = (_108_valueOrError0).Extract();
          Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> _110_valueOrError1 = Std.Collections.Seq.__default.MapWithResult<__T, __R, __E>(f, (xs).Drop(BigInteger.One));
          if ((_110_valueOrError1).IsFailure()) {
            return (_110_valueOrError1).PropagateFailure<Dafny.ISequence<__R>>();
          } else {
            Dafny.ISequence<__R> _111_tail = (_110_valueOrError1).Extract();
            return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.Concat(Dafny.Sequence<__R>.FromElements(_109_head), _111_tail));
          }
        }
      }
    }
    public static Dafny.ISequence<__T> Filter<__T>(Func<__T, bool> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__T> _112___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_112___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _112___accumulator = Dafny.Sequence<__T>.Concat(_112___accumulator, ((Dafny.Helpers.Id<Func<__T, bool>>(f)((xs).Select(BigInteger.Zero))) ? (Dafny.Sequence<__T>.FromElements((xs).Select(BigInteger.Zero))) : (Dafny.Sequence<__T>.FromElements())));
        Func<__T, bool> _in19 = f;
        Dafny.ISequence<__T> _in20 = (xs).Drop(BigInteger.One);
        f = _in19;
        xs = _in20;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldLeft<__A, __T>(Func<__A, __T, __A> f, __A init, Dafny.ISequence<__T> xs)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        Func<__A, __T, __A> _in21 = f;
        __A _in22 = Dafny.Helpers.Id<Func<__A, __T, __A>>(f)(init, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<__T> _in23 = (xs).Drop(BigInteger.One);
        f = _in21;
        init = _in22;
        xs = _in23;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldRight<__A, __T>(Func<__T, __A, __A> f, Dafny.ISequence<__T> xs, __A init)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        return Dafny.Helpers.Id<Func<__T, __A, __A>>(f)((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.FoldRight<__A, __T>(f, (xs).Drop(BigInteger.One), init));
      }
    }
    public static Dafny.ISequence<__T> SetToSeq<__T>(Dafny.ISet<__T> s)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      xs = Dafny.Sequence<__T>.FromElements();
      Dafny.ISet<__T> _113_left;
      _113_left = s;
      while (!(_113_left).Equals(Dafny.Set<__T>.FromElements())) {
        __T _114_x;
        foreach (__T _assign_such_that_0 in (_113_left).Elements) {
          _114_x = (__T)_assign_such_that_0;
          if ((_113_left).Contains(_114_x)) {
            goto after__ASSIGN_SUCH_THAT_0;
          }
        }
        throw new System.Exception("assign-such-that search produced no value (line 7247)");
      after__ASSIGN_SUCH_THAT_0: ;
        _113_left = Dafny.Set<__T>.Difference(_113_left, Dafny.Set<__T>.FromElements(_114_x));
        xs = Dafny.Sequence<__T>.Concat(xs, Dafny.Sequence<__T>.FromElements(_114_x));
      }
      return xs;
    }
    public static Dafny.ISequence<__T> SetToSortedSeq<__T>(Dafny.ISet<__T> s, Func<__T, __T, bool> R)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      Dafny.ISequence<__T> _out6;
      _out6 = Std.Collections.Seq.__default.SetToSeq<__T>(s);
      xs = _out6;
      xs = Std.Collections.Seq.__default.MergeSortBy<__T>(R, xs);
      return xs;
    }
    public static Dafny.ISequence<__T> MergeSortBy<__T>(Func<__T, __T, bool> lessThanOrEq, Dafny.ISequence<__T> a)
    {
      if ((new BigInteger((a).Count)) <= (BigInteger.One)) {
        return a;
      } else {
        BigInteger _115_splitIndex = Dafny.Helpers.EuclideanDivision(new BigInteger((a).Count), new BigInteger(2));
        Dafny.ISequence<__T> _116_left = (a).Take(_115_splitIndex);
        Dafny.ISequence<__T> _117_right = (a).Drop(_115_splitIndex);
        Dafny.ISequence<__T> _118_leftSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _116_left);
        Dafny.ISequence<__T> _119_rightSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _117_right);
        return Std.Collections.Seq.__default.MergeSortedWith<__T>(_118_leftSorted, _119_rightSorted, lessThanOrEq);
      }
    }
    public static Dafny.ISequence<__T> MergeSortedWith<__T>(Dafny.ISequence<__T> left, Dafny.ISequence<__T> right, Func<__T, __T, bool> lessThanOrEq)
    {
      Dafny.ISequence<__T> _120___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((left).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, right);
      } else if ((new BigInteger((right).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, left);
      } else if (Dafny.Helpers.Id<Func<__T, __T, bool>>(lessThanOrEq)((left).Select(BigInteger.Zero), (right).Select(BigInteger.Zero))) {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((left).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in24 = (left).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in25 = right;
        Func<__T, __T, bool> _in26 = lessThanOrEq;
        left = _in24;
        right = _in25;
        lessThanOrEq = _in26;
        goto TAIL_CALL_START;
      } else {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((right).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in27 = left;
        Dafny.ISequence<__T> _in28 = (right).Drop(BigInteger.One);
        Func<__T, __T, bool> _in29 = lessThanOrEq;
        left = _in27;
        right = _in28;
        lessThanOrEq = _in29;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Collections.Seq
namespace Std.Arithmetic.GeneralInternals {

} // end of namespace Std.Arithmetic.GeneralInternals
namespace Std.Arithmetic.MulInternalsNonlinear {

} // end of namespace Std.Arithmetic.MulInternalsNonlinear
namespace Std.Arithmetic.MulInternals {

  public partial class __default {
    public static BigInteger MulPos(BigInteger x, BigInteger y)
    {
      BigInteger _149___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == 0) {
        return (BigInteger.Zero) + (_149___accumulator);
      } else {
        _149___accumulator = (_149___accumulator) + (y);
        BigInteger _in32 = (x) - (BigInteger.One);
        BigInteger _in33 = y;
        x = _in32;
        y = _in33;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger MulRecursive(BigInteger x, BigInteger y)
    {
      if ((x).Sign != -1) {
        return Std.Arithmetic.MulInternals.__default.MulPos(x, y);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.MulInternals.__default.MulPos((new BigInteger(-1)) * (x), y));
      }
    }
  }
} // end of namespace Std.Arithmetic.MulInternals
namespace Std.Arithmetic.Mul {

} // end of namespace Std.Arithmetic.Mul
namespace Std.Arithmetic.ModInternalsNonlinear {

} // end of namespace Std.Arithmetic.ModInternalsNonlinear
namespace Std.Arithmetic.DivInternalsNonlinear {

} // end of namespace Std.Arithmetic.DivInternalsNonlinear
namespace Std.Arithmetic.ModInternals {

  public partial class __default {
    public static BigInteger ModRecursive(BigInteger x, BigInteger d)
    {
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        BigInteger _in34 = (d) + (x);
        BigInteger _in35 = d;
        x = _in34;
        d = _in35;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return x;
      } else {
        BigInteger _in36 = (x) - (d);
        BigInteger _in37 = d;
        x = _in36;
        d = _in37;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.ModInternals
namespace Std.Arithmetic.DivInternals {

  public partial class __default {
    public static BigInteger DivPos(BigInteger x, BigInteger d)
    {
      BigInteger _150___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        _150___accumulator = (_150___accumulator) + (new BigInteger(-1));
        BigInteger _in38 = (x) + (d);
        BigInteger _in39 = d;
        x = _in38;
        d = _in39;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return (BigInteger.Zero) + (_150___accumulator);
      } else {
        _150___accumulator = (_150___accumulator) + (BigInteger.One);
        BigInteger _in40 = (x) - (d);
        BigInteger _in41 = d;
        x = _in40;
        d = _in41;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger DivRecursive(BigInteger x, BigInteger d)
    {
      if ((d).Sign == 1) {
        return Std.Arithmetic.DivInternals.__default.DivPos(x, d);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.DivInternals.__default.DivPos(x, (new BigInteger(-1)) * (d)));
      }
    }
  }
} // end of namespace Std.Arithmetic.DivInternals
namespace Std.Arithmetic.DivMod {

  public partial class __default {
    public static bool MultiplesVanish(BigInteger a, BigInteger b, BigInteger m)
    {
      return (Dafny.Helpers.EuclideanModulus(((m) * (a)) + (b), m)) == (Dafny.Helpers.EuclideanModulus(b, m));
    }
  }
} // end of namespace Std.Arithmetic.DivMod
namespace Std.Arithmetic.Power {

  public partial class __default {
    public static BigInteger Pow(BigInteger b, BigInteger e)
    {
      BigInteger _151___accumulator = BigInteger.One;
    TAIL_CALL_START: ;
      if ((e).Sign == 0) {
        return (BigInteger.One) * (_151___accumulator);
      } else {
        _151___accumulator = (_151___accumulator) * (b);
        BigInteger _in42 = b;
        BigInteger _in43 = (e) - (BigInteger.One);
        b = _in42;
        e = _in43;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Power
namespace Std.Arithmetic.Logarithm {

  public partial class __default {
    public static BigInteger Log(BigInteger @base, BigInteger pow)
    {
      BigInteger _152___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((pow) < (@base)) {
        return (BigInteger.Zero) + (_152___accumulator);
      } else {
        _152___accumulator = (_152___accumulator) + (BigInteger.One);
        BigInteger _in44 = @base;
        BigInteger _in45 = Dafny.Helpers.EuclideanDivision(pow, @base);
        @base = _in44;
        pow = _in45;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Logarithm
namespace Std.Arithmetic.Power2 {

  public partial class __default {
    public static BigInteger Pow2(BigInteger e) {
      return Std.Arithmetic.Power.__default.Pow(new BigInteger(2), e);
    }
  }
} // end of namespace Std.Arithmetic.Power2
namespace Std.Arithmetic {

} // end of namespace Std.Arithmetic
namespace Std.Strings.HexConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.HexConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.HexConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _153___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _153___accumulator);
      } else {
        _153___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _153___accumulator);
        Dafny.ISequence<BigInteger> _in46 = (digits).Drop(BigInteger.One);
        digits = _in46;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.HexConversion.__default.OfDigits(Std.Strings.HexConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.HexConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_154_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_154_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_1) => {
        Dafny.Rune _155_c = (Dafny.Rune)_forall_var_1;
        return !(((_154_str).Drop(BigInteger.One)).Contains(_155_c)) || (Std.Strings.HexConversion.__default.IsDigitChar(_155_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.HexConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.HexConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _156_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.HexConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.HexConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.HexConversion.__default.charToDigit,_156_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.HexConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.HexConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.HexConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.HexConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _157___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_157___accumulator);
      } else {
        _157___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.HexConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_157___accumulator);
        Dafny.ISequence<BigInteger> _in47 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in47;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _158___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _158___accumulator = Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.HexConversion.__default.BASE())));
        BigInteger _in48 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.HexConversion.__default.BASE());
        n = _in48;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in49 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in50 = n;
        xs = _in49;
        n = _in50;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _159_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.HexConversion.__default.SeqExtend(xs, _159_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.HexConversion.__default.SeqExtend(Std.Strings.HexConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _160_xs = Std.Strings.HexConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _160_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs1 = Std.Strings.HexConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _161_zs_k = _let_tmp_rhs1.dtor__0;
        BigInteger _162_cin = _let_tmp_rhs1.dtor__1;
        BigInteger _163_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_162_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs2 = (((_163_sum) < (Std.Strings.HexConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_163_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_163_sum) - (Std.Strings.HexConversion.__default.BASE()), BigInteger.One)));
        BigInteger _164_sum__out = _let_tmp_rhs2.dtor__0;
        BigInteger _165_cout = _let_tmp_rhs2.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_161_zs_k, Dafny.Sequence<BigInteger>.FromElements(_164_sum__out)), _165_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs3 = Std.Strings.HexConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _166_zs = _let_tmp_rhs3.dtor__0;
        BigInteger _167_cin = _let_tmp_rhs3.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs4 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_167_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.HexConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.One)));
        BigInteger _168_diff__out = _let_tmp_rhs4.dtor__0;
        BigInteger _169_cout = _let_tmp_rhs4.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_166_zs, Dafny.Sequence<BigInteger>.FromElements(_168_diff__out)), _169_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> HEX__DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789ABCDEF");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.HexConversion.__default.HEX__DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.HexConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('a'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('b'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('c'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('d'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('e'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('f'), new BigInteger(15)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('A'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('B'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('C'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('D'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('E'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('F'), new BigInteger(15)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _170_chars = __source;
      return (new BigInteger((_170_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _171_i = __source;
      if (_System.nat._Is(_171_i)) {
        return ((_171_i).Sign != -1) && ((_171_i) < (Std.Strings.HexConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.HexConversion
namespace Std.Strings.DecimalConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.DecimalConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.DecimalConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _172___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _172___accumulator);
      } else {
        _172___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _172___accumulator);
        Dafny.ISequence<BigInteger> _in51 = (digits).Drop(BigInteger.One);
        digits = _in51;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.DecimalConversion.__default.OfDigits(Std.Strings.DecimalConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.DecimalConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_173_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_173_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_2) => {
        Dafny.Rune _174_c = (Dafny.Rune)_forall_var_2;
        return !(((_173_str).Drop(BigInteger.One)).Contains(_174_c)) || (Std.Strings.DecimalConversion.__default.IsDigitChar(_174_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.DecimalConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.DecimalConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _175_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.DecimalConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.DecimalConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.DecimalConversion.__default.charToDigit,_175_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.DecimalConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.DecimalConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.DecimalConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.DecimalConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _176___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_176___accumulator);
      } else {
        _176___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.DecimalConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_176___accumulator);
        Dafny.ISequence<BigInteger> _in52 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in52;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _177___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _177___accumulator = Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.DecimalConversion.__default.BASE())));
        BigInteger _in53 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.DecimalConversion.__default.BASE());
        n = _in53;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in54 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in55 = n;
        xs = _in54;
        n = _in55;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _178_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.DecimalConversion.__default.SeqExtend(xs, _178_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.DecimalConversion.__default.SeqExtend(Std.Strings.DecimalConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _179_xs = Std.Strings.DecimalConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _179_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs5 = Std.Strings.DecimalConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _180_zs_k = _let_tmp_rhs5.dtor__0;
        BigInteger _181_cin = _let_tmp_rhs5.dtor__1;
        BigInteger _182_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_181_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs6 = (((_182_sum) < (Std.Strings.DecimalConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_182_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_182_sum) - (Std.Strings.DecimalConversion.__default.BASE()), BigInteger.One)));
        BigInteger _183_sum__out = _let_tmp_rhs6.dtor__0;
        BigInteger _184_cout = _let_tmp_rhs6.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_180_zs_k, Dafny.Sequence<BigInteger>.FromElements(_183_sum__out)), _184_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs7 = Std.Strings.DecimalConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _185_zs = _let_tmp_rhs7.dtor__0;
        BigInteger _186_cin = _let_tmp_rhs7.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs8 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_186_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.DecimalConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.One)));
        BigInteger _187_diff__out = _let_tmp_rhs8.dtor__0;
        BigInteger _188_cout = _let_tmp_rhs8.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_185_zs, Dafny.Sequence<BigInteger>.FromElements(_187_diff__out)), _188_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.DecimalConversion.__default.DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.DecimalConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _189_chars = __source;
      return (new BigInteger((_189_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _190_i = __source;
      if (_System.nat._Is(_190_i)) {
        return ((_190_i).Sign != -1) && ((_190_i) < (Std.Strings.DecimalConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.DecimalConversion
namespace Std.Strings.CharStrEscaping {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> Escape(Dafny.ISequence<Dafny.Rune> str, Dafny.ISet<Dafny.Rune> mustEscape, Dafny.Rune escape)
    {
      Dafny.ISequence<Dafny.Rune> _191___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, str);
      } else if ((mustEscape).Contains((str).Select(BigInteger.Zero))) {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements(escape, (str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in56 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in57 = mustEscape;
        Dafny.Rune _in58 = escape;
        str = _in56;
        mustEscape = _in57;
        escape = _in58;
        goto TAIL_CALL_START;
      } else {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in59 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in60 = mustEscape;
        Dafny.Rune _in61 = escape;
        str = _in59;
        mustEscape = _in60;
        escape = _in61;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> Unescape(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune escape)
    {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(str);
      } else if (((str).Select(BigInteger.Zero)) == (escape)) {
        if ((new BigInteger((str).Count)) > (BigInteger.One)) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _192_valueOrError0 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(new BigInteger(2)), escape);
          if ((_192_valueOrError0).IsFailure()) {
            return (_192_valueOrError0).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
          } else {
            Dafny.ISequence<Dafny.Rune> _193_tl = (_192_valueOrError0).Extract();
            return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.One)), _193_tl));
          }
        } else {
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
        }
      } else {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _194_valueOrError1 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(BigInteger.One), escape);
        if ((_194_valueOrError1).IsFailure()) {
          return (_194_valueOrError1).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
        } else {
          Dafny.ISequence<Dafny.Rune> _195_tl = (_194_valueOrError1).Extract();
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)), _195_tl));
        }
      }
    }
  }
} // end of namespace Std.Strings.CharStrEscaping
namespace Std.Strings {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfNat(n);
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfInt(n, new Dafny.Rune('-'));
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToNat(str);
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToInt(str, new Dafny.Rune('-'));
    }
    public static Dafny.ISequence<Dafny.Rune> EscapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Escape(str, Dafny.Set<Dafny.Rune>.FromElements(new Dafny.Rune('\"'), new Dafny.Rune('\'')), new Dafny.Rune('\\'));
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> UnescapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Unescape(str, new Dafny.Rune('\\'));
    }
    public static Dafny.ISequence<Dafny.Rune> OfBool(bool b) {
      if (b) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfChar(Dafny.Rune c) {
      return Dafny.Sequence<Dafny.Rune>.FromElements(c);
    }
  }
} // end of namespace Std.Strings

namespace DAST.Format {

  public partial class __default {
    public static BigInteger SeqToHeight<__T>(Dafny.ISequence<__T> s, Func<__T, BigInteger> f)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        BigInteger _828_i = Dafny.Helpers.Id<Func<__T, BigInteger>>(f)((s).Select(BigInteger.Zero));
        BigInteger _829_j = DAST.Format.__default.SeqToHeight<__T>((s).Drop(BigInteger.One), f);
        if ((_828_i) < (_829_j)) {
          return _829_j;
        } else {
          return _828_i;
        }
      }
    }
  }

  public interface _IUnOpFormat {
    bool is_NoFormat { get; }
    bool is_CombineNotInner { get; }
    _IUnOpFormat DowncastClone();
  }
  public abstract class UnOpFormat : _IUnOpFormat {
    public UnOpFormat() {
    }
    private static readonly DAST.Format._IUnOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IUnOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IUnOpFormat>(DAST.Format.UnOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnOpFormat create_NoFormat() {
      return new UnOpFormat_NoFormat();
    }
    public static _IUnOpFormat create_CombineNotInner() {
      return new UnOpFormat_CombineNotInner();
    }
    public bool is_NoFormat { get { return this is UnOpFormat_NoFormat; } }
    public bool is_CombineNotInner { get { return this is UnOpFormat_CombineNotInner; } }
    public static System.Collections.Generic.IEnumerable<_IUnOpFormat> AllSingletonConstructors {
      get {
        yield return UnOpFormat.create_NoFormat();
        yield return UnOpFormat.create_CombineNotInner();
      }
    }
    public abstract _IUnOpFormat DowncastClone();
  }
  public class UnOpFormat_NoFormat : UnOpFormat {
    public UnOpFormat_NoFormat() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.NoFormat";
      return s;
    }
  }
  public class UnOpFormat_CombineNotInner : UnOpFormat {
    public UnOpFormat_CombineNotInner() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_CombineNotInner();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_CombineNotInner;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.CombineNotInner";
      return s;
    }
  }

  public interface _IBinOpFormat {
    bool is_NoFormat { get; }
    bool is_ImpliesFormat { get; }
    bool is_Equivalence { get; }
    bool is_ReverseOperands { get; }
    _IBinOpFormat DowncastClone();
  }
  public abstract class BinOpFormat : _IBinOpFormat {
    public BinOpFormat() {
    }
    private static readonly DAST.Format._IBinOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IBinOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IBinOpFormat>(DAST.Format.BinOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOpFormat create_NoFormat() {
      return new BinOpFormat_NoFormat();
    }
    public static _IBinOpFormat create_ImpliesFormat() {
      return new BinOpFormat_ImpliesFormat();
    }
    public static _IBinOpFormat create_Equivalence() {
      return new BinOpFormat_Equivalence();
    }
    public static _IBinOpFormat create_ReverseOperands() {
      return new BinOpFormat_ReverseOperands();
    }
    public bool is_NoFormat { get { return this is BinOpFormat_NoFormat; } }
    public bool is_ImpliesFormat { get { return this is BinOpFormat_ImpliesFormat; } }
    public bool is_Equivalence { get { return this is BinOpFormat_Equivalence; } }
    public bool is_ReverseOperands { get { return this is BinOpFormat_ReverseOperands; } }
    public static System.Collections.Generic.IEnumerable<_IBinOpFormat> AllSingletonConstructors {
      get {
        yield return BinOpFormat.create_NoFormat();
        yield return BinOpFormat.create_ImpliesFormat();
        yield return BinOpFormat.create_Equivalence();
        yield return BinOpFormat.create_ReverseOperands();
      }
    }
    public abstract _IBinOpFormat DowncastClone();
  }
  public class BinOpFormat_NoFormat : BinOpFormat {
    public BinOpFormat_NoFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.NoFormat";
      return s;
    }
  }
  public class BinOpFormat_ImpliesFormat : BinOpFormat {
    public BinOpFormat_ImpliesFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ImpliesFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ImpliesFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ImpliesFormat";
      return s;
    }
  }
  public class BinOpFormat_Equivalence : BinOpFormat {
    public BinOpFormat_Equivalence() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_Equivalence();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_Equivalence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.Equivalence";
      return s;
    }
  }
  public class BinOpFormat_ReverseOperands : BinOpFormat {
    public BinOpFormat_ReverseOperands() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ReverseOperands();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ReverseOperands;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ReverseOperands";
      return s;
    }
  }
} // end of namespace DAST.Format
namespace DAST {


  public interface _IModule {
    bool is_Module { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    bool dtor_isExtern { get; }
    Dafny.ISequence<DAST._IModuleItem> dtor_body { get; }
    _IModule DowncastClone();
  }
  public class Module : _IModule {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly bool _isExtern;
    public readonly Dafny.ISequence<DAST._IModuleItem> _body;
    public Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      this._name = name;
      this._isExtern = isExtern;
      this._body = body;
    }
    public _IModule DowncastClone() {
      if (this is _IModule dt) { return dt; }
      return new Module(_name, _isExtern, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Module;
      return oth != null && object.Equals(this._name, oth._name) && this._isExtern == oth._isExtern && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isExtern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Module.Module";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isExtern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly DAST._IModule theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, false, Dafny.Sequence<DAST._IModuleItem>.Empty);
    public static DAST._IModule Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModule> _TYPE = new Dafny.TypeDescriptor<DAST._IModule>(DAST.Module.Default());
    public static Dafny.TypeDescriptor<DAST._IModule> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModule create(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return new Module(name, isExtern, body);
    }
    public static _IModule create_Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return create(name, isExtern, body);
    }
    public bool is_Module { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public bool dtor_isExtern {
      get {
        return this._isExtern;
      }
    }
    public Dafny.ISequence<DAST._IModuleItem> dtor_body {
      get {
        return this._body;
      }
    }
  }

  public interface _IModuleItem {
    bool is_Module { get; }
    bool is_Class { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    bool is_Datatype { get; }
    DAST._IModule dtor_Module_a0 { get; }
    DAST._IClass dtor_Class_a0 { get; }
    DAST._ITrait dtor_Trait_a0 { get; }
    DAST._INewtype dtor_Newtype_a0 { get; }
    DAST._IDatatype dtor_Datatype_a0 { get; }
    _IModuleItem DowncastClone();
  }
  public abstract class ModuleItem : _IModuleItem {
    public ModuleItem() {
    }
    private static readonly DAST._IModuleItem theDefault = create_Module(DAST.Module.Default());
    public static DAST._IModuleItem Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModuleItem> _TYPE = new Dafny.TypeDescriptor<DAST._IModuleItem>(DAST.ModuleItem.Default());
    public static Dafny.TypeDescriptor<DAST._IModuleItem> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModuleItem create_Module(DAST._IModule _a0) {
      return new ModuleItem_Module(_a0);
    }
    public static _IModuleItem create_Class(DAST._IClass _a0) {
      return new ModuleItem_Class(_a0);
    }
    public static _IModuleItem create_Trait(DAST._ITrait _a0) {
      return new ModuleItem_Trait(_a0);
    }
    public static _IModuleItem create_Newtype(DAST._INewtype _a0) {
      return new ModuleItem_Newtype(_a0);
    }
    public static _IModuleItem create_Datatype(DAST._IDatatype _a0) {
      return new ModuleItem_Datatype(_a0);
    }
    public bool is_Module { get { return this is ModuleItem_Module; } }
    public bool is_Class { get { return this is ModuleItem_Class; } }
    public bool is_Trait { get { return this is ModuleItem_Trait; } }
    public bool is_Newtype { get { return this is ModuleItem_Newtype; } }
    public bool is_Datatype { get { return this is ModuleItem_Datatype; } }
    public DAST._IModule dtor_Module_a0 {
      get {
        var d = this;
        return ((ModuleItem_Module)d)._a0;
      }
    }
    public DAST._IClass dtor_Class_a0 {
      get {
        var d = this;
        return ((ModuleItem_Class)d)._a0;
      }
    }
    public DAST._ITrait dtor_Trait_a0 {
      get {
        var d = this;
        return ((ModuleItem_Trait)d)._a0;
      }
    }
    public DAST._INewtype dtor_Newtype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Newtype)d)._a0;
      }
    }
    public DAST._IDatatype dtor_Datatype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Datatype)d)._a0;
      }
    }
    public abstract _IModuleItem DowncastClone();
  }
  public class ModuleItem_Module : ModuleItem {
    public readonly DAST._IModule _a0;
    public ModuleItem_Module(DAST._IModule _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Module(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Module;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Module";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Class : ModuleItem {
    public readonly DAST._IClass _a0;
    public ModuleItem_Class(DAST._IClass _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Class(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Class;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Class";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Trait : ModuleItem {
    public readonly DAST._ITrait _a0;
    public ModuleItem_Trait(DAST._ITrait _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Trait(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Trait;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Newtype : ModuleItem {
    public readonly DAST._INewtype _a0;
    public ModuleItem_Newtype(DAST._INewtype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Newtype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Newtype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Datatype : ModuleItem {
    public readonly DAST._IDatatype _a0;
    public ModuleItem_Datatype(DAST._IDatatype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Datatype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Datatype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IType {
    bool is_Path { get; }
    bool is_Nullable { get; }
    bool is_Tuple { get; }
    bool is_Array { get; }
    bool is_Seq { get; }
    bool is_Set { get; }
    bool is_Multiset { get; }
    bool is_Map { get; }
    bool is_SetBuilder { get; }
    bool is_MapBuilder { get; }
    bool is_Arrow { get; }
    bool is_Primitive { get; }
    bool is_Passthrough { get; }
    bool is_TypeArg { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    DAST._IResolvedType dtor_resolved { get; }
    DAST._IType dtor_Nullable_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_Tuple_a0 { get; }
    DAST._IType dtor_element { get; }
    BigInteger dtor_dims { get; }
    DAST._IType dtor_key { get; }
    DAST._IType dtor_value { get; }
    Dafny.ISequence<DAST._IType> dtor_args { get; }
    DAST._IType dtor_result { get; }
    DAST._IPrimitive dtor_Primitive_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 { get; }
    _IType DowncastClone();
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly DAST._IType theDefault = create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.ResolvedType.Default());
    public static DAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IType> _TYPE = new Dafny.TypeDescriptor<DAST._IType>(DAST.Type.Default());
    public static Dafny.TypeDescriptor<DAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) {
      return new Type_Path(_a0, typeArgs, resolved);
    }
    public static _IType create_Nullable(DAST._IType _a0) {
      return new Type_Nullable(_a0);
    }
    public static _IType create_Tuple(Dafny.ISequence<DAST._IType> _a0) {
      return new Type_Tuple(_a0);
    }
    public static _IType create_Array(DAST._IType element, BigInteger dims) {
      return new Type_Array(element, dims);
    }
    public static _IType create_Seq(DAST._IType element) {
      return new Type_Seq(element);
    }
    public static _IType create_Set(DAST._IType element) {
      return new Type_Set(element);
    }
    public static _IType create_Multiset(DAST._IType element) {
      return new Type_Multiset(element);
    }
    public static _IType create_Map(DAST._IType key, DAST._IType @value) {
      return new Type_Map(key, @value);
    }
    public static _IType create_SetBuilder(DAST._IType element) {
      return new Type_SetBuilder(element);
    }
    public static _IType create_MapBuilder(DAST._IType key, DAST._IType @value) {
      return new Type_MapBuilder(key, @value);
    }
    public static _IType create_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) {
      return new Type_Arrow(args, result);
    }
    public static _IType create_Primitive(DAST._IPrimitive _a0) {
      return new Type_Primitive(_a0);
    }
    public static _IType create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_Passthrough(_a0);
    }
    public static _IType create_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_TypeArg(_a0);
    }
    public bool is_Path { get { return this is Type_Path; } }
    public bool is_Nullable { get { return this is Type_Nullable; } }
    public bool is_Tuple { get { return this is Type_Tuple; } }
    public bool is_Array { get { return this is Type_Array; } }
    public bool is_Seq { get { return this is Type_Seq; } }
    public bool is_Set { get { return this is Type_Set; } }
    public bool is_Multiset { get { return this is Type_Multiset; } }
    public bool is_Map { get { return this is Type_Map; } }
    public bool is_SetBuilder { get { return this is Type_SetBuilder; } }
    public bool is_MapBuilder { get { return this is Type_MapBuilder; } }
    public bool is_Arrow { get { return this is Type_Arrow; } }
    public bool is_Primitive { get { return this is Type_Primitive; } }
    public bool is_Passthrough { get { return this is Type_Passthrough; } }
    public bool is_TypeArg { get { return this is Type_TypeArg; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 {
      get {
        var d = this;
        return ((Type_Path)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Type_Path)d)._typeArgs;
      }
    }
    public DAST._IResolvedType dtor_resolved {
      get {
        var d = this;
        return ((Type_Path)d)._resolved;
      }
    }
    public DAST._IType dtor_Nullable_a0 {
      get {
        var d = this;
        return ((Type_Nullable)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Type_Tuple)d)._a0;
      }
    }
    public DAST._IType dtor_element {
      get {
        var d = this;
        if (d is Type_Array) { return ((Type_Array)d)._element; }
        if (d is Type_Seq) { return ((Type_Seq)d)._element; }
        if (d is Type_Set) { return ((Type_Set)d)._element; }
        if (d is Type_Multiset) { return ((Type_Multiset)d)._element; }
        return ((Type_SetBuilder)d)._element;
      }
    }
    public BigInteger dtor_dims {
      get {
        var d = this;
        return ((Type_Array)d)._dims;
      }
    }
    public DAST._IType dtor_key {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._key; }
        return ((Type_MapBuilder)d)._key;
      }
    }
    public DAST._IType dtor_value {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._value; }
        return ((Type_MapBuilder)d)._value;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_args {
      get {
        var d = this;
        return ((Type_Arrow)d)._args;
      }
    }
    public DAST._IType dtor_result {
      get {
        var d = this;
        return ((Type_Arrow)d)._result;
      }
    }
    public DAST._IPrimitive dtor_Primitive_a0 {
      get {
        var d = this;
        return ((Type_Primitive)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((Type_Passthrough)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 {
      get {
        var d = this;
        return ((Type_TypeArg)d)._a0;
      }
    }
    public abstract _IType DowncastClone();
  }
  public class Type_Path : Type {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly DAST._IResolvedType _resolved;
    public Type_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) : base() {
      this._a0 = _a0;
      this._typeArgs = typeArgs;
      this._resolved = resolved;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Path(_a0, _typeArgs, _resolved);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Path;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._resolved, oth._resolved);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._resolved));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Path";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._resolved);
      s += ")";
      return s;
    }
  }
  public class Type_Nullable : Type {
    public readonly DAST._IType _a0;
    public Type_Nullable(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Nullable(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Nullable;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Nullable";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Tuple : Type {
    public readonly Dafny.ISequence<DAST._IType> _a0;
    public Type_Tuple(Dafny.ISequence<DAST._IType> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Array : Type {
    public readonly DAST._IType _element;
    public readonly BigInteger _dims;
    public Type_Array(DAST._IType element, BigInteger dims) : base() {
      this._element = element;
      this._dims = dims;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Array(_element, _dims);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Array;
      return oth != null && object.Equals(this._element, oth._element) && this._dims == oth._dims;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Array";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dims);
      s += ")";
      return s;
    }
  }
  public class Type_Seq : Type {
    public readonly DAST._IType _element;
    public Type_Seq(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Seq(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Seq;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Seq";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Set : Type {
    public readonly DAST._IType _element;
    public Type_Set(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Set(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Set;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Set";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Multiset : Type {
    public readonly DAST._IType _element;
    public Type_Multiset(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Multiset(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Multiset;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Multiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Map : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_Map(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Map(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Map;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Map";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_SetBuilder : Type {
    public readonly DAST._IType _element;
    public Type_SetBuilder(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SetBuilder(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_SetBuilder;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_MapBuilder : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_MapBuilder(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_MapBuilder(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_MapBuilder;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_Arrow : Type {
    public readonly Dafny.ISequence<DAST._IType> _args;
    public readonly DAST._IType _result;
    public Type_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) : base() {
      this._args = args;
      this._result = result;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Arrow(_args, _result);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Arrow;
      return oth != null && object.Equals(this._args, oth._args) && object.Equals(this._result, oth._result);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._result));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Arrow";
      s += "(";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._result);
      s += ")";
      return s;
    }
  }
  public class Type_Primitive : Type {
    public readonly DAST._IPrimitive _a0;
    public Type_Primitive(DAST._IPrimitive _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Primitive(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Primitive;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Primitive";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Passthrough : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeArg : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeArg(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_TypeArg;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.TypeArg";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IPrimitive {
    bool is_Int { get; }
    bool is_Real { get; }
    bool is_String { get; }
    bool is_Bool { get; }
    bool is_Char { get; }
    _IPrimitive DowncastClone();
  }
  public abstract class Primitive : _IPrimitive {
    public Primitive() {
    }
    private static readonly DAST._IPrimitive theDefault = create_Int();
    public static DAST._IPrimitive Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IPrimitive> _TYPE = new Dafny.TypeDescriptor<DAST._IPrimitive>(DAST.Primitive.Default());
    public static Dafny.TypeDescriptor<DAST._IPrimitive> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrimitive create_Int() {
      return new Primitive_Int();
    }
    public static _IPrimitive create_Real() {
      return new Primitive_Real();
    }
    public static _IPrimitive create_String() {
      return new Primitive_String();
    }
    public static _IPrimitive create_Bool() {
      return new Primitive_Bool();
    }
    public static _IPrimitive create_Char() {
      return new Primitive_Char();
    }
    public bool is_Int { get { return this is Primitive_Int; } }
    public bool is_Real { get { return this is Primitive_Real; } }
    public bool is_String { get { return this is Primitive_String; } }
    public bool is_Bool { get { return this is Primitive_Bool; } }
    public bool is_Char { get { return this is Primitive_Char; } }
    public static System.Collections.Generic.IEnumerable<_IPrimitive> AllSingletonConstructors {
      get {
        yield return Primitive.create_Int();
        yield return Primitive.create_Real();
        yield return Primitive.create_String();
        yield return Primitive.create_Bool();
        yield return Primitive.create_Char();
      }
    }
    public abstract _IPrimitive DowncastClone();
  }
  public class Primitive_Int : Primitive {
    public Primitive_Int() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Int();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Int;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Int";
      return s;
    }
  }
  public class Primitive_Real : Primitive {
    public Primitive_Real() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Real();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Real;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Real";
      return s;
    }
  }
  public class Primitive_String : Primitive {
    public Primitive_String() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_String();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_String;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.String";
      return s;
    }
  }
  public class Primitive_Bool : Primitive {
    public Primitive_Bool() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Bool";
      return s;
    }
  }
  public class Primitive_Char : Primitive {
    public Primitive_Char() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Char();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Char;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Char";
      return s;
    }
  }

  public interface _INewtypeRange {
    bool is_U8 { get; }
    bool is_I8 { get; }
    bool is_U16 { get; }
    bool is_I16 { get; }
    bool is_U32 { get; }
    bool is_I32 { get; }
    bool is_U64 { get; }
    bool is_I64 { get; }
    bool is_U128 { get; }
    bool is_I128 { get; }
    bool is_BigInt { get; }
    bool is_NoRange { get; }
    _INewtypeRange DowncastClone();
  }
  public abstract class NewtypeRange : _INewtypeRange {
    public NewtypeRange() {
    }
    private static readonly DAST._INewtypeRange theDefault = create_U8();
    public static DAST._INewtypeRange Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtypeRange> _TYPE = new Dafny.TypeDescriptor<DAST._INewtypeRange>(DAST.NewtypeRange.Default());
    public static Dafny.TypeDescriptor<DAST._INewtypeRange> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtypeRange create_U8() {
      return new NewtypeRange_U8();
    }
    public static _INewtypeRange create_I8() {
      return new NewtypeRange_I8();
    }
    public static _INewtypeRange create_U16() {
      return new NewtypeRange_U16();
    }
    public static _INewtypeRange create_I16() {
      return new NewtypeRange_I16();
    }
    public static _INewtypeRange create_U32() {
      return new NewtypeRange_U32();
    }
    public static _INewtypeRange create_I32() {
      return new NewtypeRange_I32();
    }
    public static _INewtypeRange create_U64() {
      return new NewtypeRange_U64();
    }
    public static _INewtypeRange create_I64() {
      return new NewtypeRange_I64();
    }
    public static _INewtypeRange create_U128() {
      return new NewtypeRange_U128();
    }
    public static _INewtypeRange create_I128() {
      return new NewtypeRange_I128();
    }
    public static _INewtypeRange create_BigInt() {
      return new NewtypeRange_BigInt();
    }
    public static _INewtypeRange create_NoRange() {
      return new NewtypeRange_NoRange();
    }
    public bool is_U8 { get { return this is NewtypeRange_U8; } }
    public bool is_I8 { get { return this is NewtypeRange_I8; } }
    public bool is_U16 { get { return this is NewtypeRange_U16; } }
    public bool is_I16 { get { return this is NewtypeRange_I16; } }
    public bool is_U32 { get { return this is NewtypeRange_U32; } }
    public bool is_I32 { get { return this is NewtypeRange_I32; } }
    public bool is_U64 { get { return this is NewtypeRange_U64; } }
    public bool is_I64 { get { return this is NewtypeRange_I64; } }
    public bool is_U128 { get { return this is NewtypeRange_U128; } }
    public bool is_I128 { get { return this is NewtypeRange_I128; } }
    public bool is_BigInt { get { return this is NewtypeRange_BigInt; } }
    public bool is_NoRange { get { return this is NewtypeRange_NoRange; } }
    public static System.Collections.Generic.IEnumerable<_INewtypeRange> AllSingletonConstructors {
      get {
        yield return NewtypeRange.create_U8();
        yield return NewtypeRange.create_I8();
        yield return NewtypeRange.create_U16();
        yield return NewtypeRange.create_I16();
        yield return NewtypeRange.create_U32();
        yield return NewtypeRange.create_I32();
        yield return NewtypeRange.create_U64();
        yield return NewtypeRange.create_I64();
        yield return NewtypeRange.create_U128();
        yield return NewtypeRange.create_I128();
        yield return NewtypeRange.create_BigInt();
        yield return NewtypeRange.create_NoRange();
      }
    }
    public abstract _INewtypeRange DowncastClone();
  }
  public class NewtypeRange_U8 : NewtypeRange {
    public NewtypeRange_U8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U8";
      return s;
    }
  }
  public class NewtypeRange_I8 : NewtypeRange {
    public NewtypeRange_I8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I8";
      return s;
    }
  }
  public class NewtypeRange_U16 : NewtypeRange {
    public NewtypeRange_U16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U16";
      return s;
    }
  }
  public class NewtypeRange_I16 : NewtypeRange {
    public NewtypeRange_I16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I16";
      return s;
    }
  }
  public class NewtypeRange_U32 : NewtypeRange {
    public NewtypeRange_U32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U32";
      return s;
    }
  }
  public class NewtypeRange_I32 : NewtypeRange {
    public NewtypeRange_I32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I32";
      return s;
    }
  }
  public class NewtypeRange_U64 : NewtypeRange {
    public NewtypeRange_U64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U64";
      return s;
    }
  }
  public class NewtypeRange_I64 : NewtypeRange {
    public NewtypeRange_I64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I64";
      return s;
    }
  }
  public class NewtypeRange_U128 : NewtypeRange {
    public NewtypeRange_U128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U128";
      return s;
    }
  }
  public class NewtypeRange_I128 : NewtypeRange {
    public NewtypeRange_I128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I128";
      return s;
    }
  }
  public class NewtypeRange_BigInt : NewtypeRange {
    public NewtypeRange_BigInt() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_BigInt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_BigInt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.BigInt";
      return s;
    }
  }
  public class NewtypeRange_NoRange : NewtypeRange {
    public NewtypeRange_NoRange() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_NoRange();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_NoRange;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.NoRange";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_Attribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args { get; }
    _IAttribute DowncastClone();
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _args;
    public Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      this._name = name;
      this._args = args;
    }
    public _IAttribute DowncastClone() {
      if (this is _IAttribute dt) { return dt; }
      return new Attribute(_name, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Attribute;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Attribute.Attribute";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
    private static readonly DAST._IAttribute theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty);
    public static DAST._IAttribute Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAttribute> _TYPE = new Dafny.TypeDescriptor<DAST._IAttribute>(DAST.Attribute.Default());
    public static Dafny.TypeDescriptor<DAST._IAttribute> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return new Attribute(name, args);
    }
    public static _IAttribute create_Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return create(name, args);
    }
    public bool is_Attribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args {
      get {
        return this._args;
      }
    }
  }

  public interface _IDatatypeType {
    bool is_DatatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatypeType DowncastClone();
  }
  public class DatatypeType : _IDatatypeType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._path = path;
      this._attributes = attributes;
    }
    public _IDatatypeType DowncastClone() {
      if (this is _IDatatypeType dt) { return dt; }
      return new DatatypeType(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeType;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeType.DatatypeType";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeType theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatypeType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeType> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeType>(DAST.DatatypeType.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeType create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new DatatypeType(path, attributes);
    }
    public static _IDatatypeType create_DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(path, attributes);
    }
    public bool is_DatatypeType { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        return this._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IResolvedType {
    bool is_AllocatedDatatype { get; }
    bool is_Datatype { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    DAST._IType dtor_baseType { get; }
    DAST._INewtypeRange dtor_range { get; }
    bool dtor_erase { get; }
    _IResolvedType DowncastClone();
  }
  public abstract class ResolvedType : _IResolvedType {
    public ResolvedType() {
    }
    private static readonly DAST._IResolvedType theDefault = create_AllocatedDatatype(DAST.DatatypeType.Default());
    public static DAST._IResolvedType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IResolvedType> _TYPE = new Dafny.TypeDescriptor<DAST._IResolvedType>(DAST.ResolvedType.Default());
    public static Dafny.TypeDescriptor<DAST._IResolvedType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IResolvedType create_AllocatedDatatype(DAST._IDatatypeType datatypeType) {
      return new ResolvedType_AllocatedDatatype(datatypeType);
    }
    public static _IResolvedType create_Datatype(DAST._IDatatypeType datatypeType) {
      return new ResolvedType_Datatype(datatypeType);
    }
    public static _IResolvedType create_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Trait(path, attributes);
    }
    public static _IResolvedType create_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Newtype(baseType, range, erase, attributes);
    }
    public bool is_AllocatedDatatype { get { return this is ResolvedType_AllocatedDatatype; } }
    public bool is_Datatype { get { return this is ResolvedType_Datatype; } }
    public bool is_Trait { get { return this is ResolvedType_Trait; } }
    public bool is_Newtype { get { return this is ResolvedType_Newtype; } }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        if (d is ResolvedType_AllocatedDatatype) { return ((ResolvedType_AllocatedDatatype)d)._datatypeType; }
        return ((ResolvedType_Datatype)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((ResolvedType_Trait)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        var d = this;
        if (d is ResolvedType_Trait) { return ((ResolvedType_Trait)d)._attributes; }
        return ((ResolvedType_Newtype)d)._attributes;
      }
    }
    public DAST._IType dtor_baseType {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._baseType;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._range;
      }
    }
    public bool dtor_erase {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._erase;
      }
    }
    public abstract _IResolvedType DowncastClone();
  }
  public class ResolvedType_AllocatedDatatype : ResolvedType {
    public readonly DAST._IDatatypeType _datatypeType;
    public ResolvedType_AllocatedDatatype(DAST._IDatatypeType datatypeType) : base() {
      this._datatypeType = datatypeType;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_AllocatedDatatype(_datatypeType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_AllocatedDatatype;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.AllocatedDatatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Datatype : ResolvedType {
    public readonly DAST._IDatatypeType _datatypeType;
    public ResolvedType_Datatype(DAST._IDatatypeType datatypeType) : base() {
      this._datatypeType = datatypeType;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Datatype(_datatypeType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Datatype;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Trait : ResolvedType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._path = path;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Trait(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Trait;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Newtype : ResolvedType {
    public readonly DAST._IType _baseType;
    public readonly DAST._INewtypeRange _range;
    public readonly bool _erase;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._baseType = baseType;
      this._range = range;
      this._erase = erase;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Newtype(_baseType, _range, _erase, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Newtype;
      return oth != null && object.Equals(this._baseType, oth._baseType) && object.Equals(this._range, oth._range) && this._erase == oth._erase && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._erase));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._erase);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }

  public interface _IIdent {
    bool is_Ident { get; }
    Dafny.ISequence<Dafny.Rune> dtor_id { get; }
  }
  public class Ident : _IIdent {
    public readonly Dafny.ISequence<Dafny.Rune> _id;
    public Ident(Dafny.ISequence<Dafny.Rune> id) {
      this._id = id;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Ident;
      return oth != null && object.Equals(this._id, oth._id);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._id));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Ident.Ident";
      s += "(";
      s += this._id.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IIdent create(Dafny.ISequence<Dafny.Rune> id) {
      return new Ident(id);
    }
    public static _IIdent create_Ident(Dafny.ISequence<Dafny.Rune> id) {
      return create(id);
    }
    public bool is_Ident { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_id {
      get {
        return this._id;
      }
    }
  }

  public interface _IClass {
    bool is_Class { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IType> dtor_superClasses { get; }
    Dafny.ISequence<DAST._IField> dtor_fields { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IClass DowncastClone();
  }
  public class Class : _IClass {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IType> _superClasses;
    public readonly Dafny.ISequence<DAST._IField> _fields;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._superClasses = superClasses;
      this._fields = fields;
      this._body = body;
      this._attributes = attributes;
    }
    public _IClass DowncastClone() {
      if (this is _IClass dt) { return dt; }
      return new Class(_name, _enclosingModule, _typeParams, _superClasses, _fields, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Class;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._superClasses, oth._superClasses) && object.Equals(this._fields, oth._fields) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._superClasses));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Class.Class";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._superClasses);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IClass theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IField>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IClass Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IClass> _TYPE = new Dafny.TypeDescriptor<DAST._IClass>(DAST.Class.Default());
    public static Dafny.TypeDescriptor<DAST._IClass> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClass create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Class(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public static _IClass create_Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public bool is_Class { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_superClasses {
      get {
        return this._superClasses;
      }
    }
    public Dafny.ISequence<DAST._IField> dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _ITrait DowncastClone();
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._body = body;
      this._attributes = attributes;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_name, _typeParams, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Trait;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Trait.Trait";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._ITrait theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ITrait> _TYPE = new Dafny.TypeDescriptor<DAST._ITrait>(DAST.Trait.Default());
    public static Dafny.TypeDescriptor<DAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Trait(name, typeParams, body, attributes);
    }
    public static _ITrait create_Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, body, attributes);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatype {
    bool is_Datatype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatype DowncastClone();
  }
  public class Datatype : _IDatatype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IDatatypeCtor> _ctors;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._ctors = ctors;
      this._body = body;
      this._isCo = isCo;
      this._attributes = attributes;
    }
    public _IDatatype DowncastClone() {
      if (this is _IDatatype dt) { return dt; }
      return new Datatype(_name, _enclosingModule, _typeParams, _ctors, _body, _isCo, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Datatype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._ctors, oth._ctors) && object.Equals(this._body, oth._body) && this._isCo == oth._isCo && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ctors));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Datatype.Datatype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._ctors);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IDatatypeCtor>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, false, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatype> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatype>(DAST.Datatype.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Datatype(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public static _IDatatype create_Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public bool is_Datatype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors {
      get {
        return this._ctors;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public bool dtor_isCo {
      get {
        return this._isCo;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatypeCtor {
    bool is_DatatypeCtor { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IFormal> dtor_args { get; }
    bool dtor_hasAnyArgs { get; }
    _IDatatypeCtor DowncastClone();
  }
  public class DatatypeCtor : _IDatatypeCtor {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IFormal> _args;
    public readonly bool _hasAnyArgs;
    public DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      this._name = name;
      this._args = args;
      this._hasAnyArgs = hasAnyArgs;
    }
    public _IDatatypeCtor DowncastClone() {
      if (this is _IDatatypeCtor dt) { return dt; }
      return new DatatypeCtor(_name, _args, _hasAnyArgs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeCtor;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args) && this._hasAnyArgs == oth._hasAnyArgs;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasAnyArgs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeCtor.DatatypeCtor";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasAnyArgs);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeCtor theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, false);
    public static DAST._IDatatypeCtor Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeCtor>(DAST.DatatypeCtor.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeCtor create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return new DatatypeCtor(name, args, hasAnyArgs);
    }
    public static _IDatatypeCtor create_DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return create(name, args, hasAnyArgs);
    }
    public bool is_DatatypeCtor { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_args {
      get {
        return this._args;
      }
    }
    public bool dtor_hasAnyArgs {
      get {
        return this._hasAnyArgs;
      }
    }
  }

  public interface _INewtype {
    bool is_Newtype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    DAST._IType dtor_base { get; }
    DAST._INewtypeRange dtor_range { get; }
    Dafny.ISequence<DAST._IStatement> dtor_witnessStmts { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _INewtype DowncastClone();
  }
  public class Newtype : _INewtype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly DAST._IType _base;
    public readonly DAST._INewtypeRange _range;
    public readonly Dafny.ISequence<DAST._IStatement> _witnessStmts;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _witnessExpr;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._base = @base;
      this._range = range;
      this._witnessStmts = witnessStmts;
      this._witnessExpr = witnessExpr;
      this._attributes = attributes;
    }
    public _INewtype DowncastClone() {
      if (this is _INewtype dt) { return dt; }
      return new Newtype(_name, _typeParams, _base, _range, _witnessStmts, _witnessExpr, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Newtype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._base, oth._base) && object.Equals(this._range, oth._range) && object.Equals(this._witnessStmts, oth._witnessStmts) && object.Equals(this._witnessExpr, oth._witnessExpr) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessStmts));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Newtype.Newtype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessStmts);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._INewtype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.Type.Default(), DAST.NewtypeRange.Default(), Dafny.Sequence<DAST._IStatement>.Empty, Std.Wrappers.Option<DAST._IExpression>.Default(), Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._INewtype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtype> _TYPE = new Dafny.TypeDescriptor<DAST._INewtype>(DAST.Newtype.Default());
    public static Dafny.TypeDescriptor<DAST._INewtype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Newtype(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public static _INewtype create_Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public bool is_Newtype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public DAST._IType dtor_base {
      get {
        return this._base;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        return this._range;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_witnessStmts {
      get {
        return this._witnessStmts;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr {
      get {
        return this._witnessExpr;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IClassItem {
    bool is_Method { get; }
    DAST._IMethod dtor_Method_a0 { get; }
  }
  public class ClassItem : _IClassItem {
    public readonly DAST._IMethod _a0;
    public ClassItem(DAST._IMethod _a0) {
      this._a0 = _a0;
    }
    public static DAST._IMethod DowncastClone(DAST._IMethod _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ClassItem;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ClassItem.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = DAST.Method.Default();
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClassItem create(DAST._IMethod _a0) {
      return new ClassItem(_a0);
    }
    public static _IClassItem create_Method(DAST._IMethod _a0) {
      return create(_a0);
    }
    public bool is_Method { get { return true; } }
    public DAST._IMethod dtor_Method_a0 {
      get {
        return this._a0;
      }
    }
  }

  public interface _IField {
    bool is_Field { get; }
    DAST._IFormal dtor_formal { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue { get; }
    _IField DowncastClone();
  }
  public class Field : _IField {
    public readonly DAST._IFormal _formal;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _defaultValue;
    public Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      this._formal = formal;
      this._defaultValue = defaultValue;
    }
    public _IField DowncastClone() {
      if (this is _IField dt) { return dt; }
      return new Field(_formal, _defaultValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Field;
      return oth != null && object.Equals(this._formal, oth._formal) && object.Equals(this._defaultValue, oth._defaultValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formal));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._defaultValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Field.Field";
      s += "(";
      s += Dafny.Helpers.ToString(this._formal);
      s += ", ";
      s += Dafny.Helpers.ToString(this._defaultValue);
      s += ")";
      return s;
    }
    private static readonly DAST._IField theDefault = create(DAST.Formal.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IField> _TYPE = new Dafny.TypeDescriptor<DAST._IField>(DAST.Field.Default());
    public static Dafny.TypeDescriptor<DAST._IField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IField create(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return new Field(formal, defaultValue);
    }
    public static _IField create_Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return create(formal, defaultValue);
    }
    public bool is_Field { get { return true; } }
    public DAST._IFormal dtor_formal {
      get {
        return this._formal;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue {
      get {
        return this._defaultValue;
      }
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    _IFormal DowncastClone();
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      this._name = name;
      this._typ = typ;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
    private static readonly DAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default());
    public static DAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IFormal> _TYPE = new Dafny.TypeDescriptor<DAST._IFormal>(DAST.Formal.Default());
    public static Dafny.TypeDescriptor<DAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return new Formal(name, typ);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return create(name, typ);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        return this._typ;
      }
    }
  }

  public interface _IMethod {
    bool is_Method { get; }
    bool dtor_isStatic { get; }
    bool dtor_hasBody { get; }
    bool dtor_outVarsAreUninitFieldsToAssign { get; }
    bool dtor_wasFunction { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<DAST._IType> dtor_outTypes { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars { get; }
    _IMethod DowncastClone();
  }
  public class Method : _IMethod {
    public readonly bool _isStatic;
    public readonly bool _hasBody;
    public readonly bool _outVarsAreUninitFieldsToAssign;
    public readonly bool _wasFunction;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _overridingPath;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public readonly Dafny.ISequence<DAST._IType> _outTypes;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outVars;
    public Method(bool isStatic, bool hasBody, bool outVarsAreUninitFieldsToAssign, bool wasFunction, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      this._isStatic = isStatic;
      this._hasBody = hasBody;
      this._outVarsAreUninitFieldsToAssign = outVarsAreUninitFieldsToAssign;
      this._wasFunction = wasFunction;
      this._overridingPath = overridingPath;
      this._name = name;
      this._typeParams = typeParams;
      this._params = @params;
      this._body = body;
      this._outTypes = outTypes;
      this._outVars = outVars;
    }
    public _IMethod DowncastClone() {
      if (this is _IMethod dt) { return dt; }
      return new Method(_isStatic, _hasBody, _outVarsAreUninitFieldsToAssign, _wasFunction, _overridingPath, _name, _typeParams, _params, _body, _outTypes, _outVars);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Method;
      return oth != null && this._isStatic == oth._isStatic && this._hasBody == oth._hasBody && this._outVarsAreUninitFieldsToAssign == oth._outVarsAreUninitFieldsToAssign && this._wasFunction == oth._wasFunction && object.Equals(this._overridingPath, oth._overridingPath) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._params, oth._params) && object.Equals(this._body, oth._body) && object.Equals(this._outTypes, oth._outTypes) && object.Equals(this._outVars, oth._outVars);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasBody));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outVarsAreUninitFieldsToAssign));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._wasFunction));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._overridingPath));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outTypes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outVars));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Method.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasBody);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outVarsAreUninitFieldsToAssign);
      s += ", ";
      s += Dafny.Helpers.ToString(this._wasFunction);
      s += ", ";
      s += Dafny.Helpers.ToString(this._overridingPath);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outTypes);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outVars);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = create(false, false, false, false, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, Dafny.Sequence<DAST._IStatement>.Empty, Dafny.Sequence<DAST._IType>.Empty, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default());
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMethod create(bool isStatic, bool hasBody, bool outVarsAreUninitFieldsToAssign, bool wasFunction, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return new Method(isStatic, hasBody, outVarsAreUninitFieldsToAssign, wasFunction, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public static _IMethod create_Method(bool isStatic, bool hasBody, bool outVarsAreUninitFieldsToAssign, bool wasFunction, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return create(isStatic, hasBody, outVarsAreUninitFieldsToAssign, wasFunction, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public bool is_Method { get { return true; } }
    public bool dtor_isStatic {
      get {
        return this._isStatic;
      }
    }
    public bool dtor_hasBody {
      get {
        return this._hasBody;
      }
    }
    public bool dtor_outVarsAreUninitFieldsToAssign {
      get {
        return this._outVarsAreUninitFieldsToAssign;
      }
    }
    public bool dtor_wasFunction {
      get {
        return this._wasFunction;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath {
      get {
        return this._overridingPath;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        return this._params;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_outTypes {
      get {
        return this._outTypes;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars {
      get {
        return this._outVars;
      }
    }
  }

  public interface _ICallSignature {
    bool is_CallSignature { get; }
    Dafny.ISequence<DAST._IFormal> dtor_parameters { get; }
  }
  public class CallSignature : _ICallSignature {
    public readonly Dafny.ISequence<DAST._IFormal> _parameters;
    public CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      this._parameters = parameters;
    }
    public static Dafny.ISequence<DAST._IFormal> DowncastClone(Dafny.ISequence<DAST._IFormal> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallSignature;
      return oth != null && object.Equals(this._parameters, oth._parameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._parameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallSignature.CallSignature";
      s += "(";
      s += Dafny.Helpers.ToString(this._parameters);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<DAST._IFormal> theDefault = Dafny.Sequence<DAST._IFormal>.Empty;
    public static Dafny.ISequence<DAST._IFormal> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>>(Dafny.Sequence<DAST._IFormal>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallSignature create(Dafny.ISequence<DAST._IFormal> parameters) {
      return new CallSignature(parameters);
    }
    public static _ICallSignature create_CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      return create(parameters);
    }
    public bool is_CallSignature { get { return true; } }
    public Dafny.ISequence<DAST._IFormal> dtor_parameters {
      get {
        return this._parameters;
      }
    }
  }

  public interface _ICallName {
    bool is_Name { get; }
    bool is_MapBuilderAdd { get; }
    bool is_MapBuilderBuild { get; }
    bool is_SetBuilderAdd { get; }
    bool is_SetBuilderBuild { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Std.Wrappers._IOption<DAST._IType> dtor_onType { get; }
    Dafny.ISequence<DAST._IFormal> dtor_signature { get; }
    _ICallName DowncastClone();
  }
  public abstract class CallName : _ICallName {
    public CallName() {
    }
    private static readonly DAST._ICallName theDefault = create_Name(Dafny.Sequence<Dafny.Rune>.Empty, Std.Wrappers.Option<DAST._IType>.Default(), Dafny.Sequence<DAST._IFormal>.Empty);
    public static DAST._ICallName Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICallName> _TYPE = new Dafny.TypeDescriptor<DAST._ICallName>(DAST.CallName.Default());
    public static Dafny.TypeDescriptor<DAST._ICallName> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallName create_Name(Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<DAST._IType> onType, Dafny.ISequence<DAST._IFormal> signature) {
      return new CallName_Name(name, onType, signature);
    }
    public static _ICallName create_MapBuilderAdd() {
      return new CallName_MapBuilderAdd();
    }
    public static _ICallName create_MapBuilderBuild() {
      return new CallName_MapBuilderBuild();
    }
    public static _ICallName create_SetBuilderAdd() {
      return new CallName_SetBuilderAdd();
    }
    public static _ICallName create_SetBuilderBuild() {
      return new CallName_SetBuilderBuild();
    }
    public bool is_Name { get { return this is CallName_Name; } }
    public bool is_MapBuilderAdd { get { return this is CallName_MapBuilderAdd; } }
    public bool is_MapBuilderBuild { get { return this is CallName_MapBuilderBuild; } }
    public bool is_SetBuilderAdd { get { return this is CallName_SetBuilderAdd; } }
    public bool is_SetBuilderBuild { get { return this is CallName_SetBuilderBuild; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((CallName_Name)d)._name;
      }
    }
    public Std.Wrappers._IOption<DAST._IType> dtor_onType {
      get {
        var d = this;
        return ((CallName_Name)d)._onType;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_signature {
      get {
        var d = this;
        return ((CallName_Name)d)._signature;
      }
    }
    public abstract _ICallName DowncastClone();
  }
  public class CallName_Name : CallName {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Std.Wrappers._IOption<DAST._IType> _onType;
    public readonly Dafny.ISequence<DAST._IFormal> _signature;
    public CallName_Name(Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<DAST._IType> onType, Dafny.ISequence<DAST._IFormal> signature) : base() {
      this._name = name;
      this._onType = onType;
      this._signature = signature;
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_Name(_name, _onType, _signature);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_Name;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._onType, oth._onType) && object.Equals(this._signature, oth._signature);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._signature));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.Name";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._signature);
      s += ")";
      return s;
    }
  }
  public class CallName_MapBuilderAdd : CallName {
    public CallName_MapBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderAdd";
      return s;
    }
  }
  public class CallName_MapBuilderBuild : CallName {
    public CallName_MapBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderBuild";
      return s;
    }
  }
  public class CallName_SetBuilderAdd : CallName {
    public CallName_SetBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderAdd";
      return s;
    }
  }
  public class CallName_SetBuilderBuild : CallName {
    public CallName_SetBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderBuild";
      return s;
    }
  }

  public interface _IStatement {
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_If { get; }
    bool is_Labeled { get; }
    bool is_While { get; }
    bool is_Foreach { get; }
    bool is_Call { get; }
    bool is_Return { get; }
    bool is_EarlyReturn { get; }
    bool is_Break { get; }
    bool is_TailRecursive { get; }
    bool is_JumpTailCallStart { get; }
    bool is_Halt { get; }
    bool is_Print { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue { get; }
    DAST._IAssignLhs dtor_lhs { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IExpression dtor_cond { get; }
    Dafny.ISequence<DAST._IStatement> dtor_thn { get; }
    Dafny.ISequence<DAST._IStatement> dtor_els { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_boundName { get; }
    DAST._IType dtor_boundType { get; }
    DAST._IExpression dtor_over { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs { get; }
    DAST._IExpression dtor_expr { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel { get; }
    DAST._IExpression dtor_Print_a0 { get; }
    _IStatement DowncastClone();
  }
  public abstract class Statement : _IStatement {
    public Statement() {
    }
    private static readonly DAST._IStatement theDefault = create_DeclareVar(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IStatement Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IStatement> _TYPE = new Dafny.TypeDescriptor<DAST._IStatement>(DAST.Statement.Default());
    public static Dafny.TypeDescriptor<DAST._IStatement> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStatement create_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) {
      return new Statement_DeclareVar(name, typ, maybeValue);
    }
    public static _IStatement create_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) {
      return new Statement_Assign(lhs, @value);
    }
    public static _IStatement create_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) {
      return new Statement_If(cond, thn, els);
    }
    public static _IStatement create_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Labeled(lbl, body);
    }
    public static _IStatement create_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_While(cond, body);
    }
    public static _IStatement create_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Foreach(boundName, boundType, over, body);
    }
    public static _IStatement create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) {
      return new Statement_Call(@on, callName, typeArgs, args, outs);
    }
    public static _IStatement create_Return(DAST._IExpression expr) {
      return new Statement_Return(expr);
    }
    public static _IStatement create_EarlyReturn() {
      return new Statement_EarlyReturn();
    }
    public static _IStatement create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) {
      return new Statement_Break(toLabel);
    }
    public static _IStatement create_TailRecursive(Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_TailRecursive(body);
    }
    public static _IStatement create_JumpTailCallStart() {
      return new Statement_JumpTailCallStart();
    }
    public static _IStatement create_Halt() {
      return new Statement_Halt();
    }
    public static _IStatement create_Print(DAST._IExpression _a0) {
      return new Statement_Print(_a0);
    }
    public bool is_DeclareVar { get { return this is Statement_DeclareVar; } }
    public bool is_Assign { get { return this is Statement_Assign; } }
    public bool is_If { get { return this is Statement_If; } }
    public bool is_Labeled { get { return this is Statement_Labeled; } }
    public bool is_While { get { return this is Statement_While; } }
    public bool is_Foreach { get { return this is Statement_Foreach; } }
    public bool is_Call { get { return this is Statement_Call; } }
    public bool is_Return { get { return this is Statement_Return; } }
    public bool is_EarlyReturn { get { return this is Statement_EarlyReturn; } }
    public bool is_Break { get { return this is Statement_Break; } }
    public bool is_TailRecursive { get { return this is Statement_TailRecursive; } }
    public bool is_JumpTailCallStart { get { return this is Statement_JumpTailCallStart; } }
    public bool is_Halt { get { return this is Statement_Halt; } }
    public bool is_Print { get { return this is Statement_Print; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._typ;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._maybeValue;
      }
    }
    public DAST._IAssignLhs dtor_lhs {
      get {
        var d = this;
        return ((Statement_Assign)d)._lhs;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        return ((Statement_Assign)d)._value;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        if (d is Statement_If) { return ((Statement_If)d)._cond; }
        return ((Statement_While)d)._cond;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_thn {
      get {
        var d = this;
        return ((Statement_If)d)._thn;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_els {
      get {
        var d = this;
        return ((Statement_If)d)._els;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Statement_Labeled)d)._lbl;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        if (d is Statement_Labeled) { return ((Statement_Labeled)d)._body; }
        if (d is Statement_While) { return ((Statement_While)d)._body; }
        if (d is Statement_Foreach) { return ((Statement_Foreach)d)._body; }
        return ((Statement_TailRecursive)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_boundName {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundName;
      }
    }
    public DAST._IType dtor_boundType {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundType;
      }
    }
    public DAST._IExpression dtor_over {
      get {
        var d = this;
        return ((Statement_Foreach)d)._over;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        return ((Statement_Call)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Statement_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Statement_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        return ((Statement_Call)d)._args;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs {
      get {
        var d = this;
        return ((Statement_Call)d)._outs;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        return ((Statement_Return)d)._expr;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel {
      get {
        var d = this;
        return ((Statement_Break)d)._toLabel;
      }
    }
    public DAST._IExpression dtor_Print_a0 {
      get {
        var d = this;
        return ((Statement_Print)d)._a0;
      }
    }
    public abstract _IStatement DowncastClone();
  }
  public class Statement_DeclareVar : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _maybeValue;
    public Statement_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) : base() {
      this._name = name;
      this._typ = typ;
      this._maybeValue = maybeValue;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_DeclareVar(_name, _typ, _maybeValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_DeclareVar;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._maybeValue, oth._maybeValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._maybeValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.DeclareVar";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._maybeValue);
      s += ")";
      return s;
    }
  }
  public class Statement_Assign : Statement {
    public readonly DAST._IAssignLhs _lhs;
    public readonly DAST._IExpression _value;
    public Statement_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) : base() {
      this._lhs = lhs;
      this._value = @value;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Assign(_lhs, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Assign;
      return oth != null && object.Equals(this._lhs, oth._lhs) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lhs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._lhs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Statement_If : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _thn;
    public readonly Dafny.ISequence<DAST._IStatement> _els;
    public Statement_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_If(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_If;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.If";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Statement_Labeled : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._lbl = lbl;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Labeled(_lbl, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Labeled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Labeled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_While : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._cond = cond;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_While(_cond, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_While;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.While";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Foreach : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _boundName;
    public readonly DAST._IType _boundType;
    public readonly DAST._IExpression _over;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._boundName = boundName;
      this._boundType = boundType;
      this._over = over;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Foreach(_boundName, _boundType, _over, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Foreach;
      return oth != null && object.Equals(this._boundName, oth._boundName) && object.Equals(this._boundType, oth._boundType) && object.Equals(this._over, oth._over) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._over));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Foreach";
      s += "(";
      s += this._boundName.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._boundType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._over);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Call : Statement {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outs;
    public Statement_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
      this._outs = outs;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Call(_on, _callName, _typeArgs, _args, _outs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args) && object.Equals(this._outs, oth._outs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outs);
      s += ")";
      return s;
    }
  }
  public class Statement_Return : Statement {
    public readonly DAST._IExpression _expr;
    public Statement_Return(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Return(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Return;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Statement_EarlyReturn : Statement {
    public Statement_EarlyReturn() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_EarlyReturn();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_EarlyReturn;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.EarlyReturn";
      return s;
    }
  }
  public class Statement_Break : Statement {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _toLabel;
    public Statement_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) : base() {
      this._toLabel = toLabel;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Break(_toLabel);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Break;
      return oth != null && object.Equals(this._toLabel, oth._toLabel);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._toLabel));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._toLabel);
      s += ")";
      return s;
    }
  }
  public class Statement_TailRecursive : Statement {
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_TailRecursive(Dafny.ISequence<DAST._IStatement> body) : base() {
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_TailRecursive(_body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_TailRecursive;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.TailRecursive";
      s += "(";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_JumpTailCallStart : Statement {
    public Statement_JumpTailCallStart() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_JumpTailCallStart();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_JumpTailCallStart;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.JumpTailCallStart";
      return s;
    }
  }
  public class Statement_Halt : Statement {
    public Statement_Halt() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Halt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Halt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Halt";
      return s;
    }
  }
  public class Statement_Print : Statement {
    public readonly DAST._IExpression _a0;
    public Statement_Print(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Print(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Print;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Print";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IAssignLhs {
    bool is_Ident { get; }
    bool is_Select { get; }
    bool is_Index { get; }
    Dafny.ISequence<Dafny.Rune> dtor_ident { get; }
    DAST._IExpression dtor_expr { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    _IAssignLhs DowncastClone();
  }
  public abstract class AssignLhs : _IAssignLhs {
    public AssignLhs() {
    }
    private static readonly DAST._IAssignLhs theDefault = create_Ident(Dafny.Sequence<Dafny.Rune>.Empty);
    public static DAST._IAssignLhs Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAssignLhs> _TYPE = new Dafny.TypeDescriptor<DAST._IAssignLhs>(DAST.AssignLhs.Default());
    public static Dafny.TypeDescriptor<DAST._IAssignLhs> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignLhs create_Ident(Dafny.ISequence<Dafny.Rune> ident) {
      return new AssignLhs_Ident(ident);
    }
    public static _IAssignLhs create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) {
      return new AssignLhs_Select(expr, field);
    }
    public static _IAssignLhs create_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) {
      return new AssignLhs_Index(expr, indices);
    }
    public bool is_Ident { get { return this is AssignLhs_Ident; } }
    public bool is_Select { get { return this is AssignLhs_Select; } }
    public bool is_Index { get { return this is AssignLhs_Index; } }
    public Dafny.ISequence<Dafny.Rune> dtor_ident {
      get {
        var d = this;
        return ((AssignLhs_Ident)d)._ident;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is AssignLhs_Select) { return ((AssignLhs_Select)d)._expr; }
        return ((AssignLhs_Index)d)._expr;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        return ((AssignLhs_Select)d)._field;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((AssignLhs_Index)d)._indices;
      }
    }
    public abstract _IAssignLhs DowncastClone();
  }
  public class AssignLhs_Ident : AssignLhs {
    public readonly Dafny.ISequence<Dafny.Rune> _ident;
    public AssignLhs_Ident(Dafny.ISequence<Dafny.Rune> ident) : base() {
      this._ident = ident;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Ident(_ident);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Ident;
      return oth != null && object.Equals(this._ident, oth._ident);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ident));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Ident";
      s += "(";
      s += Dafny.Helpers.ToString(this._ident);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Select : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public AssignLhs_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) : base() {
      this._expr = expr;
      this._field = field;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Select(_expr, _field);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Index : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public AssignLhs_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._indices = indices;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Index(_expr, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }

  public interface _ICollKind {
    bool is_Seq { get; }
    bool is_Array { get; }
    bool is_Map { get; }
    _ICollKind DowncastClone();
  }
  public abstract class CollKind : _ICollKind {
    public CollKind() {
    }
    private static readonly DAST._ICollKind theDefault = create_Seq();
    public static DAST._ICollKind Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICollKind> _TYPE = new Dafny.TypeDescriptor<DAST._ICollKind>(DAST.CollKind.Default());
    public static Dafny.TypeDescriptor<DAST._ICollKind> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICollKind create_Seq() {
      return new CollKind_Seq();
    }
    public static _ICollKind create_Array() {
      return new CollKind_Array();
    }
    public static _ICollKind create_Map() {
      return new CollKind_Map();
    }
    public bool is_Seq { get { return this is CollKind_Seq; } }
    public bool is_Array { get { return this is CollKind_Array; } }
    public bool is_Map { get { return this is CollKind_Map; } }
    public static System.Collections.Generic.IEnumerable<_ICollKind> AllSingletonConstructors {
      get {
        yield return CollKind.create_Seq();
        yield return CollKind.create_Array();
        yield return CollKind.create_Map();
      }
    }
    public abstract _ICollKind DowncastClone();
  }
  public class CollKind_Seq : CollKind {
    public CollKind_Seq() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Seq();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Seq;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Seq";
      return s;
    }
  }
  public class CollKind_Array : CollKind {
    public CollKind_Array() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Array();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Array;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Array";
      return s;
    }
  }
  public class CollKind_Map : CollKind {
    public CollKind_Map() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Map();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Map;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Map";
      return s;
    }
  }

  public interface _IBinOp {
    bool is_Eq { get; }
    bool is_Div { get; }
    bool is_EuclidianDiv { get; }
    bool is_Mod { get; }
    bool is_EuclidianMod { get; }
    bool is_Lt { get; }
    bool is_LtChar { get; }
    bool is_Plus { get; }
    bool is_Minus { get; }
    bool is_Times { get; }
    bool is_BitwiseAnd { get; }
    bool is_BitwiseOr { get; }
    bool is_BitwiseXor { get; }
    bool is_BitwiseShiftRight { get; }
    bool is_BitwiseShiftLeft { get; }
    bool is_And { get; }
    bool is_Or { get; }
    bool is_In { get; }
    bool is_SeqProperPrefix { get; }
    bool is_SeqPrefix { get; }
    bool is_SetMerge { get; }
    bool is_SetSubtraction { get; }
    bool is_SetIntersection { get; }
    bool is_Subset { get; }
    bool is_ProperSubset { get; }
    bool is_SetDisjoint { get; }
    bool is_MapMerge { get; }
    bool is_MapSubtraction { get; }
    bool is_MultisetMerge { get; }
    bool is_MultisetSubtraction { get; }
    bool is_MultisetIntersection { get; }
    bool is_Submultiset { get; }
    bool is_ProperSubmultiset { get; }
    bool is_MultisetDisjoint { get; }
    bool is_Concat { get; }
    bool is_Passthrough { get; }
    bool dtor_referential { get; }
    bool dtor_nullable { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    _IBinOp DowncastClone();
  }
  public abstract class BinOp : _IBinOp {
    public BinOp() {
    }
    private static readonly DAST._IBinOp theDefault = create_Eq(false, false);
    public static DAST._IBinOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IBinOp> _TYPE = new Dafny.TypeDescriptor<DAST._IBinOp>(DAST.BinOp.Default());
    public static Dafny.TypeDescriptor<DAST._IBinOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOp create_Eq(bool referential, bool nullable) {
      return new BinOp_Eq(referential, nullable);
    }
    public static _IBinOp create_Div() {
      return new BinOp_Div();
    }
    public static _IBinOp create_EuclidianDiv() {
      return new BinOp_EuclidianDiv();
    }
    public static _IBinOp create_Mod() {
      return new BinOp_Mod();
    }
    public static _IBinOp create_EuclidianMod() {
      return new BinOp_EuclidianMod();
    }
    public static _IBinOp create_Lt() {
      return new BinOp_Lt();
    }
    public static _IBinOp create_LtChar() {
      return new BinOp_LtChar();
    }
    public static _IBinOp create_Plus() {
      return new BinOp_Plus();
    }
    public static _IBinOp create_Minus() {
      return new BinOp_Minus();
    }
    public static _IBinOp create_Times() {
      return new BinOp_Times();
    }
    public static _IBinOp create_BitwiseAnd() {
      return new BinOp_BitwiseAnd();
    }
    public static _IBinOp create_BitwiseOr() {
      return new BinOp_BitwiseOr();
    }
    public static _IBinOp create_BitwiseXor() {
      return new BinOp_BitwiseXor();
    }
    public static _IBinOp create_BitwiseShiftRight() {
      return new BinOp_BitwiseShiftRight();
    }
    public static _IBinOp create_BitwiseShiftLeft() {
      return new BinOp_BitwiseShiftLeft();
    }
    public static _IBinOp create_And() {
      return new BinOp_And();
    }
    public static _IBinOp create_Or() {
      return new BinOp_Or();
    }
    public static _IBinOp create_In() {
      return new BinOp_In();
    }
    public static _IBinOp create_SeqProperPrefix() {
      return new BinOp_SeqProperPrefix();
    }
    public static _IBinOp create_SeqPrefix() {
      return new BinOp_SeqPrefix();
    }
    public static _IBinOp create_SetMerge() {
      return new BinOp_SetMerge();
    }
    public static _IBinOp create_SetSubtraction() {
      return new BinOp_SetSubtraction();
    }
    public static _IBinOp create_SetIntersection() {
      return new BinOp_SetIntersection();
    }
    public static _IBinOp create_Subset() {
      return new BinOp_Subset();
    }
    public static _IBinOp create_ProperSubset() {
      return new BinOp_ProperSubset();
    }
    public static _IBinOp create_SetDisjoint() {
      return new BinOp_SetDisjoint();
    }
    public static _IBinOp create_MapMerge() {
      return new BinOp_MapMerge();
    }
    public static _IBinOp create_MapSubtraction() {
      return new BinOp_MapSubtraction();
    }
    public static _IBinOp create_MultisetMerge() {
      return new BinOp_MultisetMerge();
    }
    public static _IBinOp create_MultisetSubtraction() {
      return new BinOp_MultisetSubtraction();
    }
    public static _IBinOp create_MultisetIntersection() {
      return new BinOp_MultisetIntersection();
    }
    public static _IBinOp create_Submultiset() {
      return new BinOp_Submultiset();
    }
    public static _IBinOp create_ProperSubmultiset() {
      return new BinOp_ProperSubmultiset();
    }
    public static _IBinOp create_MultisetDisjoint() {
      return new BinOp_MultisetDisjoint();
    }
    public static _IBinOp create_Concat() {
      return new BinOp_Concat();
    }
    public static _IBinOp create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new BinOp_Passthrough(_a0);
    }
    public bool is_Eq { get { return this is BinOp_Eq; } }
    public bool is_Div { get { return this is BinOp_Div; } }
    public bool is_EuclidianDiv { get { return this is BinOp_EuclidianDiv; } }
    public bool is_Mod { get { return this is BinOp_Mod; } }
    public bool is_EuclidianMod { get { return this is BinOp_EuclidianMod; } }
    public bool is_Lt { get { return this is BinOp_Lt; } }
    public bool is_LtChar { get { return this is BinOp_LtChar; } }
    public bool is_Plus { get { return this is BinOp_Plus; } }
    public bool is_Minus { get { return this is BinOp_Minus; } }
    public bool is_Times { get { return this is BinOp_Times; } }
    public bool is_BitwiseAnd { get { return this is BinOp_BitwiseAnd; } }
    public bool is_BitwiseOr { get { return this is BinOp_BitwiseOr; } }
    public bool is_BitwiseXor { get { return this is BinOp_BitwiseXor; } }
    public bool is_BitwiseShiftRight { get { return this is BinOp_BitwiseShiftRight; } }
    public bool is_BitwiseShiftLeft { get { return this is BinOp_BitwiseShiftLeft; } }
    public bool is_And { get { return this is BinOp_And; } }
    public bool is_Or { get { return this is BinOp_Or; } }
    public bool is_In { get { return this is BinOp_In; } }
    public bool is_SeqProperPrefix { get { return this is BinOp_SeqProperPrefix; } }
    public bool is_SeqPrefix { get { return this is BinOp_SeqPrefix; } }
    public bool is_SetMerge { get { return this is BinOp_SetMerge; } }
    public bool is_SetSubtraction { get { return this is BinOp_SetSubtraction; } }
    public bool is_SetIntersection { get { return this is BinOp_SetIntersection; } }
    public bool is_Subset { get { return this is BinOp_Subset; } }
    public bool is_ProperSubset { get { return this is BinOp_ProperSubset; } }
    public bool is_SetDisjoint { get { return this is BinOp_SetDisjoint; } }
    public bool is_MapMerge { get { return this is BinOp_MapMerge; } }
    public bool is_MapSubtraction { get { return this is BinOp_MapSubtraction; } }
    public bool is_MultisetMerge { get { return this is BinOp_MultisetMerge; } }
    public bool is_MultisetSubtraction { get { return this is BinOp_MultisetSubtraction; } }
    public bool is_MultisetIntersection { get { return this is BinOp_MultisetIntersection; } }
    public bool is_Submultiset { get { return this is BinOp_Submultiset; } }
    public bool is_ProperSubmultiset { get { return this is BinOp_ProperSubmultiset; } }
    public bool is_MultisetDisjoint { get { return this is BinOp_MultisetDisjoint; } }
    public bool is_Concat { get { return this is BinOp_Concat; } }
    public bool is_Passthrough { get { return this is BinOp_Passthrough; } }
    public bool dtor_referential {
      get {
        var d = this;
        return ((BinOp_Eq)d)._referential;
      }
    }
    public bool dtor_nullable {
      get {
        var d = this;
        return ((BinOp_Eq)d)._nullable;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((BinOp_Passthrough)d)._a0;
      }
    }
    public abstract _IBinOp DowncastClone();
  }
  public class BinOp_Eq : BinOp {
    public readonly bool _referential;
    public readonly bool _nullable;
    public BinOp_Eq(bool referential, bool nullable) : base() {
      this._referential = referential;
      this._nullable = nullable;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Eq(_referential, _nullable);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Eq;
      return oth != null && this._referential == oth._referential && this._nullable == oth._nullable;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._referential));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._nullable));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Eq";
      s += "(";
      s += Dafny.Helpers.ToString(this._referential);
      s += ", ";
      s += Dafny.Helpers.ToString(this._nullable);
      s += ")";
      return s;
    }
  }
  public class BinOp_Div : BinOp {
    public BinOp_Div() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Div();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Div;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Div";
      return s;
    }
  }
  public class BinOp_EuclidianDiv : BinOp {
    public BinOp_EuclidianDiv() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianDiv();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianDiv;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianDiv";
      return s;
    }
  }
  public class BinOp_Mod : BinOp {
    public BinOp_Mod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Mod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Mod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Mod";
      return s;
    }
  }
  public class BinOp_EuclidianMod : BinOp {
    public BinOp_EuclidianMod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianMod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianMod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianMod";
      return s;
    }
  }
  public class BinOp_Lt : BinOp {
    public BinOp_Lt() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Lt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Lt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Lt";
      return s;
    }
  }
  public class BinOp_LtChar : BinOp {
    public BinOp_LtChar() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_LtChar();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_LtChar;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.LtChar";
      return s;
    }
  }
  public class BinOp_Plus : BinOp {
    public BinOp_Plus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Plus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Plus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Plus";
      return s;
    }
  }
  public class BinOp_Minus : BinOp {
    public BinOp_Minus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Minus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Minus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Minus";
      return s;
    }
  }
  public class BinOp_Times : BinOp {
    public BinOp_Times() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Times();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Times;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Times";
      return s;
    }
  }
  public class BinOp_BitwiseAnd : BinOp {
    public BinOp_BitwiseAnd() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseAnd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseAnd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseAnd";
      return s;
    }
  }
  public class BinOp_BitwiseOr : BinOp {
    public BinOp_BitwiseOr() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseOr();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseOr;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseOr";
      return s;
    }
  }
  public class BinOp_BitwiseXor : BinOp {
    public BinOp_BitwiseXor() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseXor();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseXor;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseXor";
      return s;
    }
  }
  public class BinOp_BitwiseShiftRight : BinOp {
    public BinOp_BitwiseShiftRight() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftRight();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftRight";
      return s;
    }
  }
  public class BinOp_BitwiseShiftLeft : BinOp {
    public BinOp_BitwiseShiftLeft() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftLeft();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftLeft";
      return s;
    }
  }
  public class BinOp_And : BinOp {
    public BinOp_And() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_And();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_And;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.And";
      return s;
    }
  }
  public class BinOp_Or : BinOp {
    public BinOp_Or() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Or();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Or;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Or";
      return s;
    }
  }
  public class BinOp_In : BinOp {
    public BinOp_In() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_In();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_In;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.In";
      return s;
    }
  }
  public class BinOp_SeqProperPrefix : BinOp {
    public BinOp_SeqProperPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqProperPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqProperPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqProperPrefix";
      return s;
    }
  }
  public class BinOp_SeqPrefix : BinOp {
    public BinOp_SeqPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqPrefix";
      return s;
    }
  }
  public class BinOp_SetMerge : BinOp {
    public BinOp_SetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetMerge";
      return s;
    }
  }
  public class BinOp_SetSubtraction : BinOp {
    public BinOp_SetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetSubtraction";
      return s;
    }
  }
  public class BinOp_SetIntersection : BinOp {
    public BinOp_SetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetIntersection";
      return s;
    }
  }
  public class BinOp_Subset : BinOp {
    public BinOp_Subset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Subset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Subset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Subset";
      return s;
    }
  }
  public class BinOp_ProperSubset : BinOp {
    public BinOp_ProperSubset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubset";
      return s;
    }
  }
  public class BinOp_SetDisjoint : BinOp {
    public BinOp_SetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetDisjoint";
      return s;
    }
  }
  public class BinOp_MapMerge : BinOp {
    public BinOp_MapMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapMerge";
      return s;
    }
  }
  public class BinOp_MapSubtraction : BinOp {
    public BinOp_MapSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetMerge : BinOp {
    public BinOp_MultisetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetMerge";
      return s;
    }
  }
  public class BinOp_MultisetSubtraction : BinOp {
    public BinOp_MultisetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetIntersection : BinOp {
    public BinOp_MultisetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetIntersection";
      return s;
    }
  }
  public class BinOp_Submultiset : BinOp {
    public BinOp_Submultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Submultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Submultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Submultiset";
      return s;
    }
  }
  public class BinOp_ProperSubmultiset : BinOp {
    public BinOp_ProperSubmultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubmultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubmultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubmultiset";
      return s;
    }
  }
  public class BinOp_MultisetDisjoint : BinOp {
    public BinOp_MultisetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetDisjoint";
      return s;
    }
  }
  public class BinOp_Concat : BinOp {
    public BinOp_Concat() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Concat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Concat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Concat";
      return s;
    }
  }
  public class BinOp_Passthrough : BinOp {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public BinOp_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IExpression {
    bool is_Literal { get; }
    bool is_Ident { get; }
    bool is_Companion { get; }
    bool is_Tuple { get; }
    bool is_New { get; }
    bool is_NewArray { get; }
    bool is_DatatypeValue { get; }
    bool is_Convert { get; }
    bool is_SeqConstruct { get; }
    bool is_SeqValue { get; }
    bool is_SetValue { get; }
    bool is_MultisetValue { get; }
    bool is_MapValue { get; }
    bool is_MapBuilder { get; }
    bool is_SeqUpdate { get; }
    bool is_MapUpdate { get; }
    bool is_SetBuilder { get; }
    bool is_ToMultiset { get; }
    bool is_This { get; }
    bool is_Ite { get; }
    bool is_UnOp { get; }
    bool is_BinOp { get; }
    bool is_ArrayLen { get; }
    bool is_MapKeys { get; }
    bool is_MapValues { get; }
    bool is_Select { get; }
    bool is_SelectFn { get; }
    bool is_Index { get; }
    bool is_IndexRange { get; }
    bool is_TupleSelect { get; }
    bool is_Call { get; }
    bool is_Lambda { get; }
    bool is_BetaRedex { get; }
    bool is_IIFE { get; }
    bool is_Apply { get; }
    bool is_TypeTest { get; }
    bool is_InitializationValue { get; }
    bool is_BoolBoundedPool { get; }
    bool is_SetBoundedPool { get; }
    bool is_SeqBoundedPool { get; }
    bool is_IntRange { get; }
    DAST._ILiteral dtor_Literal_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 { get; }
    Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Dafny.ISequence<DAST._IExpression> dtor_dims { get; }
    DAST._IType dtor_typ { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_variant { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IType dtor_from { get; }
    DAST._IExpression dtor_length { get; }
    DAST._IExpression dtor_elem { get; }
    Dafny.ISequence<DAST._IExpression> dtor_elements { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems { get; }
    DAST._IType dtor_keyType { get; }
    DAST._IType dtor_valueType { get; }
    DAST._IExpression dtor_expr { get; }
    DAST._IExpression dtor_indexExpr { get; }
    DAST._IType dtor_elemType { get; }
    DAST._IExpression dtor_ToMultiset_a0 { get; }
    DAST._IExpression dtor_cond { get; }
    DAST._IExpression dtor_thn { get; }
    DAST._IExpression dtor_els { get; }
    DAST._IUnaryOp dtor_unOp { get; }
    DAST.Format._IUnOpFormat dtor_format1 { get; }
    DAST._IBinOp dtor_op { get; }
    DAST._IExpression dtor_left { get; }
    DAST._IExpression dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    BigInteger dtor_dim { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    bool dtor_isConstant { get; }
    bool dtor_onDatatype { get; }
    bool dtor_isStatic { get; }
    BigInteger dtor_arity { get; }
    DAST._ICollKind dtor_collKind { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    bool dtor_isArray { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_low { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_high { get; }
    BigInteger dtor_index { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    DAST._IType dtor_retType { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IExpression dtor_iifeBody { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType { get; }
    DAST._IExpression dtor_of { get; }
    bool dtor_includeDuplicates { get; }
    DAST._IExpression dtor_lo { get; }
    DAST._IExpression dtor_hi { get; }
    _IExpression DowncastClone();
  }
  public abstract class Expression : _IExpression {
    public Expression() {
    }
    private static readonly DAST._IExpression theDefault = create_Literal(DAST.Literal.Default());
    public static DAST._IExpression Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IExpression> _TYPE = new Dafny.TypeDescriptor<DAST._IExpression>(DAST.Expression.Default());
    public static Dafny.TypeDescriptor<DAST._IExpression> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpression create_Literal(DAST._ILiteral _a0) {
      return new Expression_Literal(_a0);
    }
    public static _IExpression create_Ident(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Expression_Ident(_a0);
    }
    public static _IExpression create_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) {
      return new Expression_Companion(_a0);
    }
    public static _IExpression create_Tuple(Dafny.ISequence<DAST._IExpression> _a0) {
      return new Expression_Tuple(_a0);
    }
    public static _IExpression create_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_New(path, typeArgs, args);
    }
    public static _IExpression create_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) {
      return new Expression_NewArray(dims, typ);
    }
    public static _IExpression create_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) {
      return new Expression_DatatypeValue(datatypeType, typeArgs, variant, isCo, contents);
    }
    public static _IExpression create_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) {
      return new Expression_Convert(@value, @from, typ);
    }
    public static _IExpression create_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) {
      return new Expression_SeqConstruct(length, elem);
    }
    public static _IExpression create_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) {
      return new Expression_SeqValue(elements, typ);
    }
    public static _IExpression create_SetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_SetValue(elements);
    }
    public static _IExpression create_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_MultisetValue(elements);
    }
    public static _IExpression create_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) {
      return new Expression_MapValue(mapElems);
    }
    public static _IExpression create_MapBuilder(DAST._IType keyType, DAST._IType valueType) {
      return new Expression_MapBuilder(keyType, valueType);
    }
    public static _IExpression create_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_SeqUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_MapUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_SetBuilder(DAST._IType elemType) {
      return new Expression_SetBuilder(elemType);
    }
    public static _IExpression create_ToMultiset(DAST._IExpression _a0) {
      return new Expression_ToMultiset(_a0);
    }
    public static _IExpression create_This() {
      return new Expression_This();
    }
    public static _IExpression create_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) {
      return new Expression_Ite(cond, thn, els);
    }
    public static _IExpression create_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) {
      return new Expression_UnOp(unOp, expr, format1);
    }
    public static _IExpression create_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) {
      return new Expression_BinOp(op, left, right, format2);
    }
    public static _IExpression create_ArrayLen(DAST._IExpression expr, BigInteger dim) {
      return new Expression_ArrayLen(expr, dim);
    }
    public static _IExpression create_MapKeys(DAST._IExpression expr) {
      return new Expression_MapKeys(expr);
    }
    public static _IExpression create_MapValues(DAST._IExpression expr) {
      return new Expression_MapValues(expr);
    }
    public static _IExpression create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) {
      return new Expression_Select(expr, field, isConstant, onDatatype);
    }
    public static _IExpression create_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) {
      return new Expression_SelectFn(expr, field, onDatatype, isStatic, arity);
    }
    public static _IExpression create_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) {
      return new Expression_Index(expr, collKind, indices);
    }
    public static _IExpression create_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) {
      return new Expression_IndexRange(expr, isArray, low, high);
    }
    public static _IExpression create_TupleSelect(DAST._IExpression expr, BigInteger index) {
      return new Expression_TupleSelect(expr, index);
    }
    public static _IExpression create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Call(@on, callName, typeArgs, args);
    }
    public static _IExpression create_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) {
      return new Expression_Lambda(@params, retType, body);
    }
    public static _IExpression create_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) {
      return new Expression_BetaRedex(values, retType, expr);
    }
    public static _IExpression create_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) {
      return new Expression_IIFE(name, typ, @value, iifeBody);
    }
    public static _IExpression create_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Apply(expr, args);
    }
    public static _IExpression create_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) {
      return new Expression_TypeTest(@on, dType, variant);
    }
    public static _IExpression create_InitializationValue(DAST._IType typ) {
      return new Expression_InitializationValue(typ);
    }
    public static _IExpression create_BoolBoundedPool() {
      return new Expression_BoolBoundedPool();
    }
    public static _IExpression create_SetBoundedPool(DAST._IExpression of) {
      return new Expression_SetBoundedPool(of);
    }
    public static _IExpression create_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) {
      return new Expression_SeqBoundedPool(of, includeDuplicates);
    }
    public static _IExpression create_IntRange(DAST._IExpression lo, DAST._IExpression hi) {
      return new Expression_IntRange(lo, hi);
    }
    public bool is_Literal { get { return this is Expression_Literal; } }
    public bool is_Ident { get { return this is Expression_Ident; } }
    public bool is_Companion { get { return this is Expression_Companion; } }
    public bool is_Tuple { get { return this is Expression_Tuple; } }
    public bool is_New { get { return this is Expression_New; } }
    public bool is_NewArray { get { return this is Expression_NewArray; } }
    public bool is_DatatypeValue { get { return this is Expression_DatatypeValue; } }
    public bool is_Convert { get { return this is Expression_Convert; } }
    public bool is_SeqConstruct { get { return this is Expression_SeqConstruct; } }
    public bool is_SeqValue { get { return this is Expression_SeqValue; } }
    public bool is_SetValue { get { return this is Expression_SetValue; } }
    public bool is_MultisetValue { get { return this is Expression_MultisetValue; } }
    public bool is_MapValue { get { return this is Expression_MapValue; } }
    public bool is_MapBuilder { get { return this is Expression_MapBuilder; } }
    public bool is_SeqUpdate { get { return this is Expression_SeqUpdate; } }
    public bool is_MapUpdate { get { return this is Expression_MapUpdate; } }
    public bool is_SetBuilder { get { return this is Expression_SetBuilder; } }
    public bool is_ToMultiset { get { return this is Expression_ToMultiset; } }
    public bool is_This { get { return this is Expression_This; } }
    public bool is_Ite { get { return this is Expression_Ite; } }
    public bool is_UnOp { get { return this is Expression_UnOp; } }
    public bool is_BinOp { get { return this is Expression_BinOp; } }
    public bool is_ArrayLen { get { return this is Expression_ArrayLen; } }
    public bool is_MapKeys { get { return this is Expression_MapKeys; } }
    public bool is_MapValues { get { return this is Expression_MapValues; } }
    public bool is_Select { get { return this is Expression_Select; } }
    public bool is_SelectFn { get { return this is Expression_SelectFn; } }
    public bool is_Index { get { return this is Expression_Index; } }
    public bool is_IndexRange { get { return this is Expression_IndexRange; } }
    public bool is_TupleSelect { get { return this is Expression_TupleSelect; } }
    public bool is_Call { get { return this is Expression_Call; } }
    public bool is_Lambda { get { return this is Expression_Lambda; } }
    public bool is_BetaRedex { get { return this is Expression_BetaRedex; } }
    public bool is_IIFE { get { return this is Expression_IIFE; } }
    public bool is_Apply { get { return this is Expression_Apply; } }
    public bool is_TypeTest { get { return this is Expression_TypeTest; } }
    public bool is_InitializationValue { get { return this is Expression_InitializationValue; } }
    public bool is_BoolBoundedPool { get { return this is Expression_BoolBoundedPool; } }
    public bool is_SetBoundedPool { get { return this is Expression_SetBoundedPool; } }
    public bool is_SeqBoundedPool { get { return this is Expression_SeqBoundedPool; } }
    public bool is_IntRange { get { return this is Expression_IntRange; } }
    public DAST._ILiteral dtor_Literal_a0 {
      get {
        var d = this;
        return ((Expression_Literal)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 {
      get {
        var d = this;
        return ((Expression_Ident)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 {
      get {
        var d = this;
        return ((Expression_Companion)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Expression_Tuple)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((Expression_New)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._typeArgs; }
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._typeArgs; }
        return ((Expression_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._args; }
        if (d is Expression_Call) { return ((Expression_Call)d)._args; }
        return ((Expression_Apply)d)._args;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_dims {
      get {
        var d = this;
        return ((Expression_NewArray)d)._dims;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        if (d is Expression_NewArray) { return ((Expression_NewArray)d)._typ; }
        if (d is Expression_Convert) { return ((Expression_Convert)d)._typ; }
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._typ; }
        if (d is Expression_IIFE) { return ((Expression_IIFE)d)._typ; }
        return ((Expression_InitializationValue)d)._typ;
      }
    }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_variant {
      get {
        var d = this;
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._variant; }
        return ((Expression_TypeTest)d)._variant;
      }
    }
    public bool dtor_isCo {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._isCo;
      }
    }
    public Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._contents;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        if (d is Expression_Convert) { return ((Expression_Convert)d)._value; }
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._value; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._value; }
        return ((Expression_IIFE)d)._value;
      }
    }
    public DAST._IType dtor_from {
      get {
        var d = this;
        return ((Expression_Convert)d)._from;
      }
    }
    public DAST._IExpression dtor_length {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._length;
      }
    }
    public DAST._IExpression dtor_elem {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._elem;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_elements {
      get {
        var d = this;
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._elements; }
        if (d is Expression_SetValue) { return ((Expression_SetValue)d)._elements; }
        return ((Expression_MultisetValue)d)._elements;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems {
      get {
        var d = this;
        return ((Expression_MapValue)d)._mapElems;
      }
    }
    public DAST._IType dtor_keyType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._keyType;
      }
    }
    public DAST._IType dtor_valueType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._valueType;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._expr; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._expr; }
        if (d is Expression_UnOp) { return ((Expression_UnOp)d)._expr; }
        if (d is Expression_ArrayLen) { return ((Expression_ArrayLen)d)._expr; }
        if (d is Expression_MapKeys) { return ((Expression_MapKeys)d)._expr; }
        if (d is Expression_MapValues) { return ((Expression_MapValues)d)._expr; }
        if (d is Expression_Select) { return ((Expression_Select)d)._expr; }
        if (d is Expression_SelectFn) { return ((Expression_SelectFn)d)._expr; }
        if (d is Expression_Index) { return ((Expression_Index)d)._expr; }
        if (d is Expression_IndexRange) { return ((Expression_IndexRange)d)._expr; }
        if (d is Expression_TupleSelect) { return ((Expression_TupleSelect)d)._expr; }
        if (d is Expression_BetaRedex) { return ((Expression_BetaRedex)d)._expr; }
        return ((Expression_Apply)d)._expr;
      }
    }
    public DAST._IExpression dtor_indexExpr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._indexExpr; }
        return ((Expression_MapUpdate)d)._indexExpr;
      }
    }
    public DAST._IType dtor_elemType {
      get {
        var d = this;
        return ((Expression_SetBuilder)d)._elemType;
      }
    }
    public DAST._IExpression dtor_ToMultiset_a0 {
      get {
        var d = this;
        return ((Expression_ToMultiset)d)._a0;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        return ((Expression_Ite)d)._cond;
      }
    }
    public DAST._IExpression dtor_thn {
      get {
        var d = this;
        return ((Expression_Ite)d)._thn;
      }
    }
    public DAST._IExpression dtor_els {
      get {
        var d = this;
        return ((Expression_Ite)d)._els;
      }
    }
    public DAST._IUnaryOp dtor_unOp {
      get {
        var d = this;
        return ((Expression_UnOp)d)._unOp;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format1 {
      get {
        var d = this;
        return ((Expression_UnOp)d)._format1;
      }
    }
    public DAST._IBinOp dtor_op {
      get {
        var d = this;
        return ((Expression_BinOp)d)._op;
      }
    }
    public DAST._IExpression dtor_left {
      get {
        var d = this;
        return ((Expression_BinOp)d)._left;
      }
    }
    public DAST._IExpression dtor_right {
      get {
        var d = this;
        return ((Expression_BinOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expression_BinOp)d)._format2;
      }
    }
    public BigInteger dtor_dim {
      get {
        var d = this;
        return ((Expression_ArrayLen)d)._dim;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._field; }
        return ((Expression_SelectFn)d)._field;
      }
    }
    public bool dtor_isConstant {
      get {
        var d = this;
        return ((Expression_Select)d)._isConstant;
      }
    }
    public bool dtor_onDatatype {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._onDatatype; }
        return ((Expression_SelectFn)d)._onDatatype;
      }
    }
    public bool dtor_isStatic {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._isStatic;
      }
    }
    public BigInteger dtor_arity {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._arity;
      }
    }
    public DAST._ICollKind dtor_collKind {
      get {
        var d = this;
        return ((Expression_Index)d)._collKind;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((Expression_Index)d)._indices;
      }
    }
    public bool dtor_isArray {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._isArray;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_low {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._low;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_high {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._high;
      }
    }
    public BigInteger dtor_index {
      get {
        var d = this;
        return ((Expression_TupleSelect)d)._index;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        if (d is Expression_Call) { return ((Expression_Call)d)._on; }
        return ((Expression_TypeTest)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Expression_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        var d = this;
        return ((Expression_Lambda)d)._params;
      }
    }
    public DAST._IType dtor_retType {
      get {
        var d = this;
        if (d is Expression_Lambda) { return ((Expression_Lambda)d)._retType; }
        return ((Expression_BetaRedex)d)._retType;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        return ((Expression_Lambda)d)._body;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values {
      get {
        var d = this;
        return ((Expression_BetaRedex)d)._values;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Expression_IIFE)d)._name;
      }
    }
    public DAST._IExpression dtor_iifeBody {
      get {
        var d = this;
        return ((Expression_IIFE)d)._iifeBody;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType {
      get {
        var d = this;
        return ((Expression_TypeTest)d)._dType;
      }
    }
    public DAST._IExpression dtor_of {
      get {
        var d = this;
        if (d is Expression_SetBoundedPool) { return ((Expression_SetBoundedPool)d)._of; }
        return ((Expression_SeqBoundedPool)d)._of;
      }
    }
    public bool dtor_includeDuplicates {
      get {
        var d = this;
        return ((Expression_SeqBoundedPool)d)._includeDuplicates;
      }
    }
    public DAST._IExpression dtor_lo {
      get {
        var d = this;
        return ((Expression_IntRange)d)._lo;
      }
    }
    public DAST._IExpression dtor_hi {
      get {
        var d = this;
        return ((Expression_IntRange)d)._hi;
      }
    }
    public abstract _IExpression DowncastClone();
  }
  public class Expression_Literal : Expression {
    public readonly DAST._ILiteral _a0;
    public Expression_Literal(DAST._ILiteral _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Literal(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Literal;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Literal";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Ident : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Expression_Ident(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ident(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ident;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ident";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_Companion : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public Expression_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Companion(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Companion;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Companion";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Tuple : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _a0;
    public Expression_Tuple(Dafny.ISequence<DAST._IExpression> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_New : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._path = path;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_New(_path, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_New;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.New";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_NewArray : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _dims;
    public readonly DAST._IType _typ;
    public Expression_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) : base() {
      this._dims = dims;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_NewArray(_dims, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_NewArray;
      return oth != null && object.Equals(this._dims, oth._dims) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.NewArray";
      s += "(";
      s += Dafny.Helpers.ToString(this._dims);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_DatatypeValue : Expression {
    public readonly DAST._IDatatypeType _datatypeType;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _contents;
    public Expression_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) : base() {
      this._datatypeType = datatypeType;
      this._typeArgs = typeArgs;
      this._variant = variant;
      this._isCo = isCo;
      this._contents = contents;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_DatatypeValue(_datatypeType, _typeArgs, _variant, _isCo, _contents);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_DatatypeValue;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._variant, oth._variant) && this._isCo == oth._isCo && object.Equals(this._contents, oth._contents);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._contents));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.DatatypeValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._contents);
      s += ")";
      return s;
    }
  }
  public class Expression_Convert : Expression {
    public readonly DAST._IExpression _value;
    public readonly DAST._IType _from;
    public readonly DAST._IType _typ;
    public Expression_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) : base() {
      this._value = @value;
      this._from = @from;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Convert(_value, _from, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Convert;
      return oth != null && object.Equals(this._value, oth._value) && object.Equals(this._from, oth._from) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._from));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Convert";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._from);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqConstruct : Expression {
    public readonly DAST._IExpression _length;
    public readonly DAST._IExpression _elem;
    public Expression_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) : base() {
      this._length = length;
      this._elem = elem;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqConstruct(_length, _elem);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqConstruct;
      return oth != null && object.Equals(this._length, oth._length) && object.Equals(this._elem, oth._elem);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._length));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elem));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqConstruct";
      s += "(";
      s += Dafny.Helpers.ToString(this._length);
      s += ", ";
      s += Dafny.Helpers.ToString(this._elem);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public readonly DAST._IType _typ;
    public Expression_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) : base() {
      this._elements = elements;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqValue(_elements, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqValue;
      return oth != null && object.Equals(this._elements, oth._elements) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_SetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MultisetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MultisetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MultisetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MultisetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValue : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _mapElems;
    public Expression_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) : base() {
      this._mapElems = mapElems;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValue(_mapElems);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValue;
      return oth != null && object.Equals(this._mapElems, oth._mapElems);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mapElems));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._mapElems);
      s += ")";
      return s;
    }
  }
  public class Expression_MapBuilder : Expression {
    public readonly DAST._IType _keyType;
    public readonly DAST._IType _valueType;
    public Expression_MapBuilder(DAST._IType keyType, DAST._IType valueType) : base() {
      this._keyType = keyType;
      this._valueType = valueType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapBuilder(_keyType, _valueType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapBuilder;
      return oth != null && object.Equals(this._keyType, oth._keyType) && object.Equals(this._valueType, oth._valueType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._keyType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._valueType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._keyType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._valueType);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_MapUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_SetBuilder : Expression {
    public readonly DAST._IType _elemType;
    public Expression_SetBuilder(DAST._IType elemType) : base() {
      this._elemType = elemType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBuilder(_elemType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBuilder;
      return oth != null && object.Equals(this._elemType, oth._elemType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elemType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._elemType);
      s += ")";
      return s;
    }
  }
  public class Expression_ToMultiset : Expression {
    public readonly DAST._IExpression _a0;
    public Expression_ToMultiset(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ToMultiset(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ToMultiset;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ToMultiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_This : Expression {
    public Expression_This() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_This();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_This;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.This";
      return s;
    }
  }
  public class Expression_Ite : Expression {
    public readonly DAST._IExpression _cond;
    public readonly DAST._IExpression _thn;
    public readonly DAST._IExpression _els;
    public Expression_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ite(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ite;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ite";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expression_UnOp : Expression {
    public readonly DAST._IUnaryOp _unOp;
    public readonly DAST._IExpression _expr;
    public readonly DAST.Format._IUnOpFormat _format1;
    public Expression_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) : base() {
      this._unOp = unOp;
      this._expr = expr;
      this._format1 = format1;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_UnOp(_unOp, _expr, _format1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_UnOp;
      return oth != null && object.Equals(this._unOp, oth._unOp) && object.Equals(this._expr, oth._expr) && object.Equals(this._format1, oth._format1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._unOp));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.UnOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._unOp);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format1);
      s += ")";
      return s;
    }
  }
  public class Expression_BinOp : Expression {
    public readonly DAST._IBinOp _op;
    public readonly DAST._IExpression _left;
    public readonly DAST._IExpression _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expression_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) : base() {
      this._op = op;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BinOp(_op, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BinOp;
      return oth != null && object.Equals(this._op, oth._op) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BinOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._op);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expression_ArrayLen : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _dim;
    public Expression_ArrayLen(DAST._IExpression expr, BigInteger dim) : base() {
      this._expr = expr;
      this._dim = dim;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ArrayLen(_expr, _dim);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ArrayLen;
      return oth != null && object.Equals(this._expr, oth._expr) && this._dim == oth._dim;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dim));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ArrayLen";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dim);
      s += ")";
      return s;
    }
  }
  public class Expression_MapKeys : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapKeys(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapKeys(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapKeys;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapKeys";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValues : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapValues(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValues(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValues;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValues";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_Select : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _isConstant;
    public readonly bool _onDatatype;
    public Expression_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) : base() {
      this._expr = expr;
      this._field = field;
      this._isConstant = isConstant;
      this._onDatatype = onDatatype;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Select(_expr, _field, _isConstant, _onDatatype);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._isConstant == oth._isConstant && this._onDatatype == oth._onDatatype;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isConstant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isConstant);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ")";
      return s;
    }
  }
  public class Expression_SelectFn : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _onDatatype;
    public readonly bool _isStatic;
    public readonly BigInteger _arity;
    public Expression_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) : base() {
      this._expr = expr;
      this._field = field;
      this._onDatatype = onDatatype;
      this._isStatic = isStatic;
      this._arity = arity;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SelectFn(_expr, _field, _onDatatype, _isStatic, _arity);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SelectFn;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._onDatatype == oth._onDatatype && this._isStatic == oth._isStatic && this._arity == oth._arity;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SelectFn";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arity);
      s += ")";
      return s;
    }
  }
  public class Expression_Index : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._ICollKind _collKind;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public Expression_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._collKind = collKind;
      this._indices = indices;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Index(_expr, _collKind, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._collKind, oth._collKind) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._collKind));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._collKind);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }
  public class Expression_IndexRange : Expression {
    public readonly DAST._IExpression _expr;
    public readonly bool _isArray;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _low;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _high;
    public Expression_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) : base() {
      this._expr = expr;
      this._isArray = isArray;
      this._low = low;
      this._high = high;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IndexRange(_expr, _isArray, _low, _high);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IndexRange;
      return oth != null && object.Equals(this._expr, oth._expr) && this._isArray == oth._isArray && object.Equals(this._low, oth._low) && object.Equals(this._high, oth._high);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isArray));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._low));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._high));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IndexRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isArray);
      s += ", ";
      s += Dafny.Helpers.ToString(this._low);
      s += ", ";
      s += Dafny.Helpers.ToString(this._high);
      s += ")";
      return s;
    }
  }
  public class Expression_TupleSelect : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _index;
    public Expression_TupleSelect(DAST._IExpression expr, BigInteger index) : base() {
      this._expr = expr;
      this._index = index;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TupleSelect(_expr, _index);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TupleSelect;
      return oth != null && object.Equals(this._expr, oth._expr) && this._index == oth._index;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._index));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TupleSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._index);
      s += ")";
      return s;
    }
  }
  public class Expression_Call : Expression {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Call(_on, _callName, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_Lambda : Expression {
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly DAST._IType _retType;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Expression_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._params = @params;
      this._retType = retType;
      this._body = body;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Lambda(_params, _retType, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Lambda;
      return oth != null && object.Equals(this._params, oth._params) && object.Equals(this._retType, oth._retType) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Lambda";
      s += "(";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expression_BetaRedex : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _values;
    public readonly DAST._IType _retType;
    public readonly DAST._IExpression _expr;
    public Expression_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) : base() {
      this._values = values;
      this._retType = retType;
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BetaRedex(_values, _retType, _expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BetaRedex;
      return oth != null && object.Equals(this._values, oth._values) && object.Equals(this._retType, oth._retType) && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._values));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BetaRedex";
      s += "(";
      s += Dafny.Helpers.ToString(this._values);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_IIFE : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly DAST._IExpression _value;
    public readonly DAST._IExpression _iifeBody;
    public Expression_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) : base() {
      this._name = name;
      this._typ = typ;
      this._value = @value;
      this._iifeBody = iifeBody;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IIFE(_name, _typ, _value, _iifeBody);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IIFE;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._value, oth._value) && object.Equals(this._iifeBody, oth._iifeBody);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._iifeBody));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IIFE";
      s += "(";
      s += Dafny.Helpers.ToString(this._name);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._iifeBody);
      s += ")";
      return s;
    }
  }
  public class Expression_Apply : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._expr = expr;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Apply(_expr, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Apply;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Apply";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_TypeTest : Expression {
    public readonly DAST._IExpression _on;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _dType;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public Expression_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) : base() {
      this._on = @on;
      this._dType = dType;
      this._variant = variant;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TypeTest(_on, _dType, _variant);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TypeTest;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._dType, oth._dType) && object.Equals(this._variant, oth._variant);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TypeTest";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dType);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_InitializationValue : Expression {
    public readonly DAST._IType _typ;
    public Expression_InitializationValue(DAST._IType typ) : base() {
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_InitializationValue(_typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_InitializationValue;
      return oth != null && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 36;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.InitializationValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_BoolBoundedPool : Expression {
    public Expression_BoolBoundedPool() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BoolBoundedPool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BoolBoundedPool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 37;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BoolBoundedPool";
      return s;
    }
  }
  public class Expression_SetBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public Expression_SetBoundedPool(DAST._IExpression of) : base() {
      this._of = of;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBoundedPool(_of);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBoundedPool;
      return oth != null && object.Equals(this._of, oth._of);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 38;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public readonly bool _includeDuplicates;
    public Expression_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) : base() {
      this._of = of;
      this._includeDuplicates = includeDuplicates;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqBoundedPool(_of, _includeDuplicates);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqBoundedPool;
      return oth != null && object.Equals(this._of, oth._of) && this._includeDuplicates == oth._includeDuplicates;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 39;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._includeDuplicates));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ", ";
      s += Dafny.Helpers.ToString(this._includeDuplicates);
      s += ")";
      return s;
    }
  }
  public class Expression_IntRange : Expression {
    public readonly DAST._IExpression _lo;
    public readonly DAST._IExpression _hi;
    public Expression_IntRange(DAST._IExpression lo, DAST._IExpression hi) : base() {
      this._lo = lo;
      this._hi = hi;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IntRange(_lo, _hi);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IntRange;
      return oth != null && object.Equals(this._lo, oth._lo) && object.Equals(this._hi, oth._hi);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 40;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hi));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IntRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._lo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hi);
      s += ")";
      return s;
    }
  }

  public interface _IUnaryOp {
    bool is_Not { get; }
    bool is_BitwiseNot { get; }
    bool is_Cardinality { get; }
    _IUnaryOp DowncastClone();
  }
  public abstract class UnaryOp : _IUnaryOp {
    public UnaryOp() {
    }
    private static readonly DAST._IUnaryOp theDefault = create_Not();
    public static DAST._IUnaryOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IUnaryOp> _TYPE = new Dafny.TypeDescriptor<DAST._IUnaryOp>(DAST.UnaryOp.Default());
    public static Dafny.TypeDescriptor<DAST._IUnaryOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnaryOp create_Not() {
      return new UnaryOp_Not();
    }
    public static _IUnaryOp create_BitwiseNot() {
      return new UnaryOp_BitwiseNot();
    }
    public static _IUnaryOp create_Cardinality() {
      return new UnaryOp_Cardinality();
    }
    public bool is_Not { get { return this is UnaryOp_Not; } }
    public bool is_BitwiseNot { get { return this is UnaryOp_BitwiseNot; } }
    public bool is_Cardinality { get { return this is UnaryOp_Cardinality; } }
    public static System.Collections.Generic.IEnumerable<_IUnaryOp> AllSingletonConstructors {
      get {
        yield return UnaryOp.create_Not();
        yield return UnaryOp.create_BitwiseNot();
        yield return UnaryOp.create_Cardinality();
      }
    }
    public abstract _IUnaryOp DowncastClone();
  }
  public class UnaryOp_Not : UnaryOp {
    public UnaryOp_Not() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Not();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Not;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Not";
      return s;
    }
  }
  public class UnaryOp_BitwiseNot : UnaryOp {
    public UnaryOp_BitwiseNot() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_BitwiseNot();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_BitwiseNot;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.BitwiseNot";
      return s;
    }
  }
  public class UnaryOp_Cardinality : UnaryOp {
    public UnaryOp_Cardinality() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Cardinality();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Cardinality;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Cardinality";
      return s;
    }
  }

  public interface _ILiteral {
    bool is_BoolLiteral { get; }
    bool is_IntLiteral { get; }
    bool is_DecLiteral { get; }
    bool is_StringLiteral { get; }
    bool is_CharLiteral { get; }
    bool is_Null { get; }
    bool dtor_BoolLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 { get; }
    DAST._IType dtor_IntLiteral_a1 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 { get; }
    DAST._IType dtor_DecLiteral_a2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 { get; }
    Dafny.Rune dtor_CharLiteral_a0 { get; }
    DAST._IType dtor_Null_a0 { get; }
    _ILiteral DowncastClone();
  }
  public abstract class Literal : _ILiteral {
    public Literal() {
    }
    private static readonly DAST._ILiteral theDefault = create_BoolLiteral(false);
    public static DAST._ILiteral Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ILiteral> _TYPE = new Dafny.TypeDescriptor<DAST._ILiteral>(DAST.Literal.Default());
    public static Dafny.TypeDescriptor<DAST._ILiteral> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ILiteral create_BoolLiteral(bool _a0) {
      return new Literal_BoolLiteral(_a0);
    }
    public static _ILiteral create_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) {
      return new Literal_IntLiteral(_a0, _a1);
    }
    public static _ILiteral create_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) {
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public static _ILiteral create_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Literal_StringLiteral(_a0);
    }
    public static _ILiteral create_CharLiteral(Dafny.Rune _a0) {
      return new Literal_CharLiteral(_a0);
    }
    public static _ILiteral create_Null(DAST._IType _a0) {
      return new Literal_Null(_a0);
    }
    public bool is_BoolLiteral { get { return this is Literal_BoolLiteral; } }
    public bool is_IntLiteral { get { return this is Literal_IntLiteral; } }
    public bool is_DecLiteral { get { return this is Literal_DecLiteral; } }
    public bool is_StringLiteral { get { return this is Literal_StringLiteral; } }
    public bool is_CharLiteral { get { return this is Literal_CharLiteral; } }
    public bool is_Null { get { return this is Literal_Null; } }
    public bool dtor_BoolLiteral_a0 {
      get {
        var d = this;
        return ((Literal_BoolLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_IntLiteral_a1 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a1;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a1;
      }
    }
    public DAST._IType dtor_DecLiteral_a2 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 {
      get {
        var d = this;
        return ((Literal_StringLiteral)d)._a0;
      }
    }
    public Dafny.Rune dtor_CharLiteral_a0 {
      get {
        var d = this;
        return ((Literal_CharLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_Null_a0 {
      get {
        var d = this;
        return ((Literal_Null)d)._a0;
      }
    }
    public abstract _ILiteral DowncastClone();
  }
  public class Literal_BoolLiteral : Literal {
    public readonly bool _a0;
    public Literal_BoolLiteral(bool _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_BoolLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_BoolLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.BoolLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_IntLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly DAST._IType _a1;
    public Literal_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_IntLiteral(_a0, _a1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_IntLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.IntLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a1);
      s += ")";
      return s;
    }
  }
  public class Literal_DecLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly Dafny.ISequence<Dafny.Rune> _a1;
    public readonly DAST._IType _a2;
    public Literal_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
      this._a2 = _a2;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_DecLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1) && object.Equals(this._a2, oth._a2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.DecLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += this._a1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a2);
      s += ")";
      return s;
    }
  }
  public class Literal_StringLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Literal_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_StringLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_StringLiteral;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.StringLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Literal_CharLiteral : Literal {
    public readonly Dafny.Rune _a0;
    public Literal_CharLiteral(Dafny.Rune _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_CharLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_CharLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.CharLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_Null : Literal {
    public readonly DAST._IType _a0;
    public Literal_Null(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_Null(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_Null;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.Null";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
} // end of namespace DAST

namespace D2DPrettyPrinter {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> PrettyPrint(Dafny.ISequence<DAST._IModule> d)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Microsoft.Dafny.Compilers.WrapException.Throw();
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Not Implemented Yet");
      return s;
    }
  }
} // end of namespace D2DPrettyPrinter
namespace ResolvedDesugaredExecutableDafnyPlugin {


  public partial class COMP {
    public COMP() {
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISequence<Dafny.Rune> _out14;
      _out14 = D2DPrettyPrinter.__default.PrettyPrint(p);
      s = _out14;
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      return s;
    }
  }
} // end of namespace ResolvedDesugaredExecutableDafnyPlugin
namespace RAST {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> SeqToString<__T>(Dafny.ISequence<__T> s, Func<__T, Dafny.ISequence<Dafny.Rune>> f, Dafny.ISequence<Dafny.Rune> separator)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Helpers.Id<Func<__T, Dafny.ISequence<Dafny.Rune>>>(f)((s).Select(BigInteger.Zero)), (((new BigInteger((s).Count)) > (BigInteger.One)) ? (Dafny.Sequence<Dafny.Rune>.Concat(separator, RAST.__default.SeqToString<__T>((s).Drop(BigInteger.One), f, separator))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
      }
    }
    public static RAST._IType Rc(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType RefCell(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType Vec(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Vec")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IExpr NewVec(Dafny.ISequence<RAST._IExpr> elements) {
      return (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec!"))).Apply(elements);
    }
    public static RAST._IExpr Clone(RAST._IExpr underlying) {
      return (RAST.Expr.create_Select(underlying, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    }
    public static RAST._IExpr Borrow(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IExpr BorrowMut(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IType RawType(Dafny.ISequence<Dafny.Rune> content) {
      return RAST.Type.create_TIdentifier(content);
    }
    public static RAST._IType MaybePlaceboType(RAST._IType underlying) {
      return ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).Apply1(underlying);
    }
    public static Dafny.ISequence<Dafny.Rune> AddIndent(Dafny.ISequence<Dafny.Rune> raw, Dafny.ISequence<Dafny.Rune> ind)
    {
      Dafny.ISequence<Dafny.Rune> _830___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((raw).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, raw);
      } else if ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[({")).Contains((raw).Select(BigInteger.Zero))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in103 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in104 = Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND);
        raw = _in103;
        ind = _in104;
        goto TAIL_CALL_START;
      } else if (((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("})]")).Contains((raw).Select(BigInteger.Zero))) && ((new BigInteger((ind).Count)) > (new BigInteger(2)))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in105 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in106 = (ind).Take((new BigInteger((ind).Count)) - (new BigInteger(2)));
        raw = _in105;
        ind = _in106;
        goto TAIL_CALL_START;
      } else if (((raw).Select(BigInteger.Zero)) == (new Dafny.Rune('\n'))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)), ind));
        Dafny.ISequence<Dafny.Rune> _in107 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in108 = ind;
        raw = _in107;
        ind = _in108;
        goto TAIL_CALL_START;
      } else {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in109 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in110 = ind;
        raw = _in109;
        ind = _in110;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger max(BigInteger i, BigInteger j)
    {
      if ((i) < (j)) {
        return j;
      } else {
        return i;
      }
    }
    public static RAST._IExpr AssignVar(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr rhs)
    {
      return RAST.Expr.create_Assign(Std.Wrappers.Option<RAST._IAssignLhs>.create_Some(RAST.AssignLhs.create_LocalVar(name)), rhs);
    }
    public static RAST._IExpr AssignMember(RAST._IExpr @on, Dafny.ISequence<Dafny.Rune> field, RAST._IExpr rhs)
    {
      return RAST.Expr.create_Assign(Std.Wrappers.Option<RAST._IAssignLhs>.create_Some(RAST.AssignLhs.create_SelectMember(@on, field)), rhs);
    }
    public static RAST._IExpr MaybePlacebo(RAST._IExpr underlying) {
      return (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from"))).Apply1(underlying);
    }
    public static RAST._IExpr RcNew(RAST._IExpr underlying) {
      return RAST.Expr.create_Call(RAST.__default.std__rc__Rc__new, Dafny.Sequence<RAST._IExpr>.FromElements(underlying));
    }
    public static RAST._IType SelfBorrowed { get {
      return RAST.Type.create_Borrowed(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfBorrowedMut { get {
      return RAST.Type.create_BorrowedMut(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfPointer { get {
      return RAST.Type.create_Pointer(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfPointerMut { get {
      return RAST.Type.create_PointerMut(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType global__type { get {
      return RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IType std__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IType CloneTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Clone"));
    } }
    public static RAST._IType DafnyPrintTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint"));
    } }
    public static RAST._IType DefaultTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default"));
    } }
    public static RAST._IType StaticTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'static"));
    } }
    public static RAST._IType cell__type { get {
      return (RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"));
    } }
    public static RAST._IType refcell__type { get {
      return (RAST.__default.cell__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"));
    } }
    public static RAST._IType dafny__runtime__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("  ");
    } }
    public static RAST._IExpr self { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"));
    } }
    public static RAST._IExpr @global { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IExpr dafny__runtime { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static RAST._IExpr dafny__runtime__Set { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set"));
    } }
    public static RAST._IExpr dafny__runtime__Set__from__array { get {
      return (RAST.__default.dafny__runtime__Set).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Sequence { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"));
    } }
    public static RAST._IExpr Sequence__from__array__owned { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array_owned"));
    } }
    public static RAST._IExpr Sequence__from__array { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset__from__array { get {
      return (RAST.__default.dafny__runtime__Multiset).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr std { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IExpr std__rc { get {
      return (RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"));
    } }
    public static RAST._IExpr std__rc__Rc { get {
      return (RAST.__default.std__rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc"));
    } }
    public static RAST._IExpr std__rc__Rc__new { get {
      return (RAST.__default.std__rc__Rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
    } }
    public static RAST._IExpr std__Default__default { get {
      return ((((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    } }
  }

  public interface _IMod {
    bool is_Mod { get; }
    bool is_ExternMod { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._IModDecl> dtor_body { get; }
    _IMod DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Mod : _IMod {
    public Mod() {
    }
    private static readonly RAST._IMod theDefault = create_Mod(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IModDecl>.Empty);
    public static RAST._IMod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMod> _TYPE = new Dafny.TypeDescriptor<RAST._IMod>(RAST.Mod.Default());
    public static Dafny.TypeDescriptor<RAST._IMod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMod create_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) {
      return new Mod_Mod(name, body);
    }
    public static _IMod create_ExternMod(Dafny.ISequence<Dafny.Rune> name) {
      return new Mod_ExternMod(name);
    }
    public bool is_Mod { get { return this is Mod_Mod; } }
    public bool is_ExternMod { get { return this is Mod_ExternMod; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Mod_Mod) { return ((Mod_Mod)d)._name; }
        return ((Mod_ExternMod)d)._name;
      }
    }
    public Dafny.ISequence<RAST._IModDecl> dtor_body {
      get {
        var d = this;
        return ((Mod_Mod)d)._body;
      }
    }
    public abstract _IMod DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IMod _source25 = this;
      if (_source25.is_Mod) {
        Dafny.ISequence<Dafny.Rune> _831___mcc_h0 = _source25.dtor_name;
        Dafny.ISequence<RAST._IModDecl> _832___mcc_h1 = _source25.dtor_body;
        Dafny.ISequence<RAST._IModDecl> _833_body = _832___mcc_h1;
        Dafny.ISequence<Dafny.Rune> _834_name = _831___mcc_h0;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _834_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), RAST.__default.IND), RAST.__default.SeqToString<RAST._IModDecl>(_833_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>>>((_835_ind) => ((System.Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>)((_836_modDecl) => {
          return (_836_modDecl)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_835_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _837___mcc_h2 = _source25.dtor_name;
        Dafny.ISequence<Dafny.Rune> _838_name = _837___mcc_h2;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _838_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      }
    }
  }
  public class Mod_Mod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._IModDecl> _body;
    public Mod_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) : base() {
      this._name = name;
      this._body = body;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_Mod(_name, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_Mod;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.Mod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Mod_ExternMod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Mod_ExternMod(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_ExternMod(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_ExternMod;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.ExternMod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IModDecl {
    bool is_RawDecl { get; }
    bool is_ModDecl { get; }
    bool is_StructDecl { get; }
    bool is_EnumDecl { get; }
    bool is_ImplDecl { get; }
    bool is_TraitDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_body { get; }
    RAST._IMod dtor_mod { get; }
    RAST._IStruct dtor_struct { get; }
    RAST._IEnum dtor_enum { get; }
    RAST._IImpl dtor_impl { get; }
    RAST._ITrait dtor_tr { get; }
    _IModDecl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ModDecl : _IModDecl {
    public ModDecl() {
    }
    private static readonly RAST._IModDecl theDefault = create_RawDecl(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IModDecl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IModDecl> _TYPE = new Dafny.TypeDescriptor<RAST._IModDecl>(RAST.ModDecl.Default());
    public static Dafny.TypeDescriptor<RAST._IModDecl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModDecl create_RawDecl(Dafny.ISequence<Dafny.Rune> body) {
      return new ModDecl_RawDecl(body);
    }
    public static _IModDecl create_ModDecl(RAST._IMod mod) {
      return new ModDecl_ModDecl(mod);
    }
    public static _IModDecl create_StructDecl(RAST._IStruct @struct) {
      return new ModDecl_StructDecl(@struct);
    }
    public static _IModDecl create_EnumDecl(RAST._IEnum @enum) {
      return new ModDecl_EnumDecl(@enum);
    }
    public static _IModDecl create_ImplDecl(RAST._IImpl impl) {
      return new ModDecl_ImplDecl(impl);
    }
    public static _IModDecl create_TraitDecl(RAST._ITrait tr) {
      return new ModDecl_TraitDecl(tr);
    }
    public bool is_RawDecl { get { return this is ModDecl_RawDecl; } }
    public bool is_ModDecl { get { return this is ModDecl_ModDecl; } }
    public bool is_StructDecl { get { return this is ModDecl_StructDecl; } }
    public bool is_EnumDecl { get { return this is ModDecl_EnumDecl; } }
    public bool is_ImplDecl { get { return this is ModDecl_ImplDecl; } }
    public bool is_TraitDecl { get { return this is ModDecl_TraitDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_body {
      get {
        var d = this;
        return ((ModDecl_RawDecl)d)._body;
      }
    }
    public RAST._IMod dtor_mod {
      get {
        var d = this;
        return ((ModDecl_ModDecl)d)._mod;
      }
    }
    public RAST._IStruct dtor_struct {
      get {
        var d = this;
        return ((ModDecl_StructDecl)d)._struct;
      }
    }
    public RAST._IEnum dtor_enum {
      get {
        var d = this;
        return ((ModDecl_EnumDecl)d)._enum;
      }
    }
    public RAST._IImpl dtor_impl {
      get {
        var d = this;
        return ((ModDecl_ImplDecl)d)._impl;
      }
    }
    public RAST._ITrait dtor_tr {
      get {
        var d = this;
        return ((ModDecl_TraitDecl)d)._tr;
      }
    }
    public abstract _IModDecl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_ModDecl) {
        return ((this).dtor_mod)._ToString(ind);
      } else if ((this).is_StructDecl) {
        return ((this).dtor_struct)._ToString(ind);
      } else if ((this).is_ImplDecl) {
        return ((this).dtor_impl)._ToString(ind);
      } else if ((this).is_EnumDecl) {
        return ((this).dtor_enum)._ToString(ind);
      } else if ((this).is_TraitDecl) {
        return ((this).dtor_tr)._ToString(ind);
      } else {
        return (this).dtor_body;
      }
    }
  }
  public class ModDecl_RawDecl : ModDecl {
    public readonly Dafny.ISequence<Dafny.Rune> _body;
    public ModDecl_RawDecl(Dafny.ISequence<Dafny.Rune> body) : base() {
      this._body = body;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_RawDecl(_body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_RawDecl;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.RawDecl";
      s += "(";
      s += this._body.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ModDecl : ModDecl {
    public readonly RAST._IMod _mod;
    public ModDecl_ModDecl(RAST._IMod mod) : base() {
      this._mod = mod;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ModDecl(_mod);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ModDecl;
      return oth != null && object.Equals(this._mod, oth._mod);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mod));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ModDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._mod);
      s += ")";
      return s;
    }
  }
  public class ModDecl_StructDecl : ModDecl {
    public readonly RAST._IStruct _struct;
    public ModDecl_StructDecl(RAST._IStruct @struct) : base() {
      this._struct = @struct;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_StructDecl(_struct);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_StructDecl;
      return oth != null && object.Equals(this._struct, oth._struct);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._struct));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.StructDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._struct);
      s += ")";
      return s;
    }
  }
  public class ModDecl_EnumDecl : ModDecl {
    public readonly RAST._IEnum _enum;
    public ModDecl_EnumDecl(RAST._IEnum @enum) : base() {
      this._enum = @enum;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_EnumDecl(_enum);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_EnumDecl;
      return oth != null && object.Equals(this._enum, oth._enum);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enum));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.EnumDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._enum);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ImplDecl : ModDecl {
    public readonly RAST._IImpl _impl;
    public ModDecl_ImplDecl(RAST._IImpl impl) : base() {
      this._impl = impl;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ImplDecl(_impl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ImplDecl;
      return oth != null && object.Equals(this._impl, oth._impl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._impl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ImplDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._impl);
      s += ")";
      return s;
    }
  }
  public class ModDecl_TraitDecl : ModDecl {
    public readonly RAST._ITrait _tr;
    public ModDecl_TraitDecl(RAST._ITrait tr) : base() {
      this._tr = tr;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_TraitDecl(_tr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_TraitDecl;
      return oth != null && object.Equals(this._tr, oth._tr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.TraitDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._tr);
      s += ")";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_RawAttribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Attribute(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Attribute;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Attribute.RawAttribute";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> content) {
      return new Attribute(content);
    }
    public static _IAttribute create_RawAttribute(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawAttribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> ind)
    {
      return RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(attributes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>>((_839_ind) => ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_840_attribute) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_840_attribute), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _839_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    }
  }

  public interface _IStruct {
    bool is_Struct { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IFields dtor_fields { get; }
    _IStruct DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Struct : _IStruct {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IFields _fields;
    public Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._fields = fields;
    }
    public _IStruct DowncastClone() {
      if (this is _IStruct dt) { return dt; }
      return new Struct(_attributes, _name, _typeParams, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Struct;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Struct.Struct";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IStruct theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Fields.Default());
    public static RAST._IStruct Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IStruct> _TYPE = new Dafny.TypeDescriptor<RAST._IStruct>(RAST.Struct.Default());
    public static Dafny.TypeDescriptor<RAST._IStruct> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStruct create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      return new Struct(attributes, name, typeParams, fields);
    }
    public static _IStruct create_Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      return create(attributes, name, typeParams, fields);
    }
    public bool is_Struct { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IFields dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub struct ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_fields)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND), ((this).dtor_fields).is_NamedFields)), ((((this).dtor_fields).is_NamelessFields) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
    }
  }

  public interface _INamelessField {
    bool is_NamelessField { get; }
    RAST._IVisibility dtor_visibility { get; }
    RAST._IType dtor_tpe { get; }
    _INamelessField DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class NamelessField : _INamelessField {
    public readonly RAST._IVisibility _visibility;
    public readonly RAST._IType _tpe;
    public NamelessField(RAST._IVisibility visibility, RAST._IType tpe) {
      this._visibility = visibility;
      this._tpe = tpe;
    }
    public _INamelessField DowncastClone() {
      if (this is _INamelessField dt) { return dt; }
      return new NamelessField(_visibility, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.NamelessField;
      return oth != null && object.Equals(this._visibility, oth._visibility) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._visibility));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.NamelessField.NamelessField";
      s += "(";
      s += Dafny.Helpers.ToString(this._visibility);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._INamelessField theDefault = create(RAST.Visibility.Default(), RAST.Type.Default());
    public static RAST._INamelessField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._INamelessField> _TYPE = new Dafny.TypeDescriptor<RAST._INamelessField>(RAST.NamelessField.Default());
    public static Dafny.TypeDescriptor<RAST._INamelessField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INamelessField create(RAST._IVisibility visibility, RAST._IType tpe) {
      return new NamelessField(visibility, tpe);
    }
    public static _INamelessField create_NamelessField(RAST._IVisibility visibility, RAST._IType tpe) {
      return create(visibility, tpe);
    }
    public bool is_NamelessField { get { return true; } }
    public RAST._IVisibility dtor_visibility {
      get {
        return this._visibility;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_visibility, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_tpe)._ToString(ind));
    }
  }

  public interface _IField {
    bool is_Field { get; }
    RAST._IVisibility dtor_visibility { get; }
    RAST._IFormal dtor_formal { get; }
    _IField DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Field : _IField {
    public readonly RAST._IVisibility _visibility;
    public readonly RAST._IFormal _formal;
    public Field(RAST._IVisibility visibility, RAST._IFormal formal) {
      this._visibility = visibility;
      this._formal = formal;
    }
    public _IField DowncastClone() {
      if (this is _IField dt) { return dt; }
      return new Field(_visibility, _formal);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Field;
      return oth != null && object.Equals(this._visibility, oth._visibility) && object.Equals(this._formal, oth._formal);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._visibility));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formal));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Field.Field";
      s += "(";
      s += Dafny.Helpers.ToString(this._visibility);
      s += ", ";
      s += Dafny.Helpers.ToString(this._formal);
      s += ")";
      return s;
    }
    private static readonly RAST._IField theDefault = create(RAST.Visibility.Default(), RAST.Formal.Default());
    public static RAST._IField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IField> _TYPE = new Dafny.TypeDescriptor<RAST._IField>(RAST.Field.Default());
    public static Dafny.TypeDescriptor<RAST._IField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IField create(RAST._IVisibility visibility, RAST._IFormal formal) {
      return new Field(visibility, formal);
    }
    public static _IField create_Field(RAST._IVisibility visibility, RAST._IFormal formal) {
      return create(visibility, formal);
    }
    public bool is_Field { get { return true; } }
    public RAST._IVisibility dtor_visibility {
      get {
        return this._visibility;
      }
    }
    public RAST._IFormal dtor_formal {
      get {
        return this._formal;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_visibility, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_formal)._ToString(ind));
    }
  }

  public interface _IFields {
    bool is_NamedFields { get; }
    bool is_NamelessFields { get; }
    Dafny.ISequence<RAST._IField> dtor_fields { get; }
    Dafny.ISequence<RAST._INamelessField> dtor_types { get; }
    _IFields DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public abstract class Fields : _IFields {
    public Fields() {
    }
    private static readonly RAST._IFields theDefault = create_NamedFields(Dafny.Sequence<RAST._IField>.Empty);
    public static RAST._IFields Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFields> _TYPE = new Dafny.TypeDescriptor<RAST._IFields>(RAST.Fields.Default());
    public static Dafny.TypeDescriptor<RAST._IFields> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFields create_NamedFields(Dafny.ISequence<RAST._IField> fields) {
      return new Fields_NamedFields(fields);
    }
    public static _IFields create_NamelessFields(Dafny.ISequence<RAST._INamelessField> types) {
      return new Fields_NamelessFields(types);
    }
    public bool is_NamedFields { get { return this is Fields_NamedFields; } }
    public bool is_NamelessFields { get { return this is Fields_NamelessFields; } }
    public Dafny.ISequence<RAST._IField> dtor_fields {
      get {
        var d = this;
        return ((Fields_NamedFields)d)._fields;
      }
    }
    public Dafny.ISequence<RAST._INamelessField> dtor_types {
      get {
        var d = this;
        return ((Fields_NamelessFields)d)._types;
      }
    }
    public abstract _IFields DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      if ((this).is_NamedFields) {
        Dafny.ISequence<Dafny.Rune> _841_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs40 = (((newLine) && ((new BigInteger(((this).dtor_fields).Count)).Sign == 1)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind))) : ((((new BigInteger(((this).dtor_fields).Count)).Sign == 1) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))))));
        Dafny.ISequence<Dafny.Rune> _842_beginSpace = _let_tmp_rhs40.dtor__0;
        Dafny.ISequence<Dafny.Rune> _843_endSpace = _let_tmp_rhs40.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {"), _842_beginSpace), RAST.__default.SeqToString<RAST._IField>((this).dtor_fields, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IField, Dafny.ISequence<Dafny.Rune>>>>((_844_ind) => ((System.Func<RAST._IField, Dafny.ISequence<Dafny.Rune>>)((_845_field) => {
          return (_845_field)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_844_ind, RAST.__default.IND));
        })))(ind), _841_separator)), _843_endSpace), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _846_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._INamelessField>((this).dtor_types, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._INamelessField, Dafny.ISequence<Dafny.Rune>>>>((_847_ind) => ((System.Func<RAST._INamelessField, Dafny.ISequence<Dafny.Rune>>)((_848_t) => {
          return (_848_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_847_ind, RAST.__default.IND));
        })))(ind), _846_separator)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      }
    }
  }
  public class Fields_NamedFields : Fields {
    public readonly Dafny.ISequence<RAST._IField> _fields;
    public Fields_NamedFields(Dafny.ISequence<RAST._IField> fields) : base() {
      this._fields = fields;
    }
    public override _IFields DowncastClone() {
      if (this is _IFields dt) { return dt; }
      return new Fields_NamedFields(_fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fields_NamedFields;
      return oth != null && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fields.NamedFields";
      s += "(";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
  }
  public class Fields_NamelessFields : Fields {
    public readonly Dafny.ISequence<RAST._INamelessField> _types;
    public Fields_NamelessFields(Dafny.ISequence<RAST._INamelessField> types) : base() {
      this._types = types;
    }
    public override _IFields DowncastClone() {
      if (this is _IFields dt) { return dt; }
      return new Fields_NamelessFields(_types);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fields_NamelessFields;
      return oth != null && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fields.NamelessFields";
      s += "(";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
  }

  public interface _IEnumCase {
    bool is_EnumCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IFields dtor_fields { get; }
    _IEnumCase DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public class EnumCase : _IEnumCase {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IFields _fields;
    public EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      this._name = name;
      this._fields = fields;
    }
    public _IEnumCase DowncastClone() {
      if (this is _IEnumCase dt) { return dt; }
      return new EnumCase(_name, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.EnumCase;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.EnumCase.EnumCase";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnumCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Fields.Default());
    public static RAST._IEnumCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnumCase> _TYPE = new Dafny.TypeDescriptor<RAST._IEnumCase>(RAST.EnumCase.Default());
    public static Dafny.TypeDescriptor<RAST._IEnumCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnumCase create(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      return new EnumCase(name, fields);
    }
    public static _IEnumCase create_EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      return create(name, fields);
    }
    public bool is_EnumCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IFields dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, ((this).dtor_fields)._ToString(ind, newLine));
    }
  }

  public interface _IEnum {
    bool is_Enum { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IEnumCase> dtor_variants { get; }
    _IEnum DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Enum : _IEnum {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IEnumCase> _variants;
    public Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._variants = variants;
    }
    public _IEnum DowncastClone() {
      if (this is _IEnum dt) { return dt; }
      return new Enum(_attributes, _name, _typeParams, _variants);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Enum;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._variants, oth._variants);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variants));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Enum.Enum";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._variants);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnum theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IEnumCase>.Empty);
    public static RAST._IEnum Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnum> _TYPE = new Dafny.TypeDescriptor<RAST._IEnum>(RAST.Enum.Default());
    public static Dafny.TypeDescriptor<RAST._IEnum> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnum create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return new Enum(attributes, name, typeParams, variants);
    }
    public static _IEnum create_Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return create(attributes, name, typeParams, variants);
    }
    public bool is_Enum { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IEnumCase> dtor_variants {
      get {
        return this._variants;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub enum ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IEnumCase>((this).dtor_variants, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>>>((_849_ind) => ((System.Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>)((_850_variant) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _849_ind), RAST.__default.IND), (_850_variant)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_849_ind, RAST.__default.IND), false));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _ITypeParam {
    bool is_RawTypeParam { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    Dafny.ISequence<RAST._IType> dtor_constraints { get; }
    _ITypeParam DowncastClone();
    RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints);
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class TypeParam : _ITypeParam {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public readonly Dafny.ISequence<RAST._IType> _constraints;
    public TypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      this._content = content;
      this._constraints = constraints;
    }
    public _ITypeParam DowncastClone() {
      if (this is _ITypeParam dt) { return dt; }
      return new TypeParam(_content, _constraints);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.TypeParam;
      return oth != null && object.Equals(this._content, oth._content) && object.Equals(this._constraints, oth._constraints);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._constraints));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.TypeParam.RawTypeParam";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._constraints);
      s += ")";
      return s;
    }
    private static readonly RAST._ITypeParam theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IType>.Empty);
    public static RAST._ITypeParam Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITypeParam> _TYPE = new Dafny.TypeDescriptor<RAST._ITypeParam>(RAST.TypeParam.Default());
    public static Dafny.TypeDescriptor<RAST._ITypeParam> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITypeParam create(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return new TypeParam(content, constraints);
    }
    public static _ITypeParam create_RawTypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return create(content, constraints);
    }
    public bool is_RawTypeParam { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_constraints {
      get {
        return this._constraints;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<Dafny.Rune> ind)
    {
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._ITypeParam>(typeParams, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>>>((_851_ind) => ((System.Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>)((_852_t) => {
          return (_852_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_851_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
      }
    }
    public static Dafny.ISequence<RAST._ITypeParam> AddConstraintsMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IType> constraints)
    {
      Dafny.ISequence<RAST._ITypeParam> _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements());
      } else {
        _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements(((typeParams).Select(BigInteger.Zero)).AddConstraints(constraints)));
        Dafny.ISequence<RAST._ITypeParam> _in111 = (typeParams).Drop(BigInteger.One);
        Dafny.ISequence<RAST._IType> _in112 = constraints;
        typeParams = _in111;
        constraints = _in112;
        goto TAIL_CALL_START;
      }
    }
    public RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints) {
      RAST._ITypeParam _854_dt__update__tmp_h0 = this;
      Dafny.ISequence<RAST._IType> _855_dt__update_hconstraints_h0 = Dafny.Sequence<RAST._IType>.Concat((this).dtor_constraints, constraints);
      return RAST.TypeParam.create((_854_dt__update__tmp_h0).dtor_content, _855_dt__update_hconstraints_h0);
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_content, (((new BigInteger(((this).dtor_constraints).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), RAST.__default.SeqToString<RAST._IType>((this).dtor_constraints, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_856_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_857_t) => {
        return (_857_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_856_ind, RAST.__default.IND));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + "))))));
    }
  }

  public interface _IType {
    bool is_SelfOwned { get; }
    bool is_U8 { get; }
    bool is_U16 { get; }
    bool is_U32 { get; }
    bool is_U64 { get; }
    bool is_U128 { get; }
    bool is_I8 { get; }
    bool is_I16 { get; }
    bool is_I32 { get; }
    bool is_I64 { get; }
    bool is_I128 { get; }
    bool is_Bool { get; }
    bool is_TIdentifier { get; }
    bool is_TMemberSelect { get; }
    bool is_TypeApp { get; }
    bool is_Borrowed { get; }
    bool is_BorrowedMut { get; }
    bool is_Pointer { get; }
    bool is_PointerMut { get; }
    bool is_ImplType { get; }
    bool is_DynType { get; }
    bool is_TupleType { get; }
    bool is_FnType { get; }
    bool is_IntersectionType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_base { get; }
    RAST._IType dtor_baseName { get; }
    Dafny.ISequence<RAST._IType> dtor_arguments { get; }
    RAST._IType dtor_underlying { get; }
    RAST._IType dtor_returnType { get; }
    RAST._IType dtor_left { get; }
    RAST._IType dtor_right { get; }
    _IType DowncastClone();
    bool HasCopySemantics();
    bool IsSelfPointer();
    Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IType Apply1(RAST._IType arg);
    RAST._IType Apply(Dafny.ISequence<RAST._IType> args);
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly RAST._IType theDefault = create_SelfOwned();
    public static RAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IType> _TYPE = new Dafny.TypeDescriptor<RAST._IType>(RAST.Type.Default());
    public static Dafny.TypeDescriptor<RAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_SelfOwned() {
      return new Type_SelfOwned();
    }
    public static _IType create_U8() {
      return new Type_U8();
    }
    public static _IType create_U16() {
      return new Type_U16();
    }
    public static _IType create_U32() {
      return new Type_U32();
    }
    public static _IType create_U64() {
      return new Type_U64();
    }
    public static _IType create_U128() {
      return new Type_U128();
    }
    public static _IType create_I8() {
      return new Type_I8();
    }
    public static _IType create_I16() {
      return new Type_I16();
    }
    public static _IType create_I32() {
      return new Type_I32();
    }
    public static _IType create_I64() {
      return new Type_I64();
    }
    public static _IType create_I128() {
      return new Type_I128();
    }
    public static _IType create_Bool() {
      return new Type_Bool();
    }
    public static _IType create_TIdentifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TIdentifier(name);
    }
    public static _IType create_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TMemberSelect(@base, name);
    }
    public static _IType create_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TypeApp(baseName, arguments);
    }
    public static _IType create_Borrowed(RAST._IType underlying) {
      return new Type_Borrowed(underlying);
    }
    public static _IType create_BorrowedMut(RAST._IType underlying) {
      return new Type_BorrowedMut(underlying);
    }
    public static _IType create_Pointer(RAST._IType underlying) {
      return new Type_Pointer(underlying);
    }
    public static _IType create_PointerMut(RAST._IType underlying) {
      return new Type_PointerMut(underlying);
    }
    public static _IType create_ImplType(RAST._IType underlying) {
      return new Type_ImplType(underlying);
    }
    public static _IType create_DynType(RAST._IType underlying) {
      return new Type_DynType(underlying);
    }
    public static _IType create_TupleType(Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TupleType(arguments);
    }
    public static _IType create_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) {
      return new Type_FnType(arguments, returnType);
    }
    public static _IType create_IntersectionType(RAST._IType left, RAST._IType right) {
      return new Type_IntersectionType(left, right);
    }
    public bool is_SelfOwned { get { return this is Type_SelfOwned; } }
    public bool is_U8 { get { return this is Type_U8; } }
    public bool is_U16 { get { return this is Type_U16; } }
    public bool is_U32 { get { return this is Type_U32; } }
    public bool is_U64 { get { return this is Type_U64; } }
    public bool is_U128 { get { return this is Type_U128; } }
    public bool is_I8 { get { return this is Type_I8; } }
    public bool is_I16 { get { return this is Type_I16; } }
    public bool is_I32 { get { return this is Type_I32; } }
    public bool is_I64 { get { return this is Type_I64; } }
    public bool is_I128 { get { return this is Type_I128; } }
    public bool is_Bool { get { return this is Type_Bool; } }
    public bool is_TIdentifier { get { return this is Type_TIdentifier; } }
    public bool is_TMemberSelect { get { return this is Type_TMemberSelect; } }
    public bool is_TypeApp { get { return this is Type_TypeApp; } }
    public bool is_Borrowed { get { return this is Type_Borrowed; } }
    public bool is_BorrowedMut { get { return this is Type_BorrowedMut; } }
    public bool is_Pointer { get { return this is Type_Pointer; } }
    public bool is_PointerMut { get { return this is Type_PointerMut; } }
    public bool is_ImplType { get { return this is Type_ImplType; } }
    public bool is_DynType { get { return this is Type_DynType; } }
    public bool is_TupleType { get { return this is Type_TupleType; } }
    public bool is_FnType { get { return this is Type_FnType; } }
    public bool is_IntersectionType { get { return this is Type_IntersectionType; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Type_TIdentifier) { return ((Type_TIdentifier)d)._name; }
        return ((Type_TMemberSelect)d)._name;
      }
    }
    public RAST._IType dtor_base {
      get {
        var d = this;
        return ((Type_TMemberSelect)d)._base;
      }
    }
    public RAST._IType dtor_baseName {
      get {
        var d = this;
        return ((Type_TypeApp)d)._baseName;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_arguments {
      get {
        var d = this;
        if (d is Type_TypeApp) { return ((Type_TypeApp)d)._arguments; }
        if (d is Type_TupleType) { return ((Type_TupleType)d)._arguments; }
        return ((Type_FnType)d)._arguments;
      }
    }
    public RAST._IType dtor_underlying {
      get {
        var d = this;
        if (d is Type_Borrowed) { return ((Type_Borrowed)d)._underlying; }
        if (d is Type_BorrowedMut) { return ((Type_BorrowedMut)d)._underlying; }
        if (d is Type_Pointer) { return ((Type_Pointer)d)._underlying; }
        if (d is Type_PointerMut) { return ((Type_PointerMut)d)._underlying; }
        if (d is Type_ImplType) { return ((Type_ImplType)d)._underlying; }
        return ((Type_DynType)d)._underlying;
      }
    }
    public RAST._IType dtor_returnType {
      get {
        var d = this;
        return ((Type_FnType)d)._returnType;
      }
    }
    public RAST._IType dtor_left {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._left;
      }
    }
    public RAST._IType dtor_right {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._right;
      }
    }
    public abstract _IType DowncastClone();
    public bool HasCopySemantics() {
      return (((((((((((((this).is_U8) || ((this).is_U16)) || ((this).is_U32)) || ((this).is_U64)) || ((this).is_U128)) || ((this).is_I8)) || ((this).is_I16)) || ((this).is_I32)) || ((this).is_I64)) || ((this).is_I128)) || ((this).is_Bool)) || ((this).is_Pointer)) || ((this).is_PointerMut);
    }
    public bool IsSelfPointer() {
      return (((((this).is_Borrowed) && (((this).dtor_underlying).is_PointerMut)) && ((((this).dtor_underlying).dtor_underlying).is_SelfOwned)) || (((this).is_PointerMut) && (((this).dtor_underlying).is_SelfOwned))) || (((((this).is_PointerMut) && (((this).dtor_underlying).is_TypeApp)) && ((new BigInteger((((this).dtor_underlying).dtor_arguments).Count)).Sign == 0)) && ((((this).dtor_underlying).dtor_baseName).is_SelfOwned));
    }
    public Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo() {
      RAST._IType _source26 = this;
      if (_source26.is_SelfOwned) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_Bool) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _858___mcc_h0 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TMemberSelect) {
        RAST._IType _859___mcc_h2 = _source26.dtor_base;
        Dafny.ISequence<Dafny.Rune> _860___mcc_h3 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TypeApp) {
        RAST._IType _861___mcc_h6 = _source26.dtor_baseName;
        Dafny.ISequence<RAST._IType> _862___mcc_h7 = _source26.dtor_arguments;
        Dafny.ISequence<RAST._IType> _863_arguments = _862___mcc_h7;
        RAST._IType _864_wrapper = _861___mcc_h6;
        if (((object.Equals(_864_wrapper, RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo")))) || (object.Equals(_864_wrapper, (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))))) && ((new BigInteger((_863_arguments).Count)) == (BigInteger.One))) {
          return Std.Wrappers.Option<RAST._IType>.create_Some((_863_arguments).Select(BigInteger.Zero));
        } else {
          return Std.Wrappers.Option<RAST._IType>.create_None();
        }
      } else if (_source26.is_Borrowed) {
        RAST._IType _865___mcc_h10 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_BorrowedMut) {
        RAST._IType _866___mcc_h12 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_Pointer) {
        RAST._IType _867___mcc_h14 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_PointerMut) {
        RAST._IType _868___mcc_h16 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_ImplType) {
        RAST._IType _869___mcc_h18 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_DynType) {
        RAST._IType _870___mcc_h20 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TupleType) {
        Dafny.ISequence<RAST._IType> _871___mcc_h22 = _source26.dtor_arguments;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_FnType) {
        Dafny.ISequence<RAST._IType> _872___mcc_h24 = _source26.dtor_arguments;
        RAST._IType _873___mcc_h25 = _source26.dtor_returnType;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        RAST._IType _874___mcc_h28 = _source26.dtor_left;
        RAST._IType _875___mcc_h29 = _source26.dtor_right;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IType _source27 = this;
      if (_source27.is_SelfOwned) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self");
      } else if (_source27.is_U8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8");
      } else if (_source27.is_U16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16");
      } else if (_source27.is_U32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32");
      } else if (_source27.is_U64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64");
      } else if (_source27.is_U128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128");
      } else if (_source27.is_I8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8");
      } else if (_source27.is_I16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16");
      } else if (_source27.is_I32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32");
      } else if (_source27.is_I64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64");
      } else if (_source27.is_I128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128");
      } else if (_source27.is_Bool) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("bool");
      } else if (_source27.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _876___mcc_h0 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _877_underlying = _876___mcc_h0;
        return _877_underlying;
      } else if (_source27.is_TMemberSelect) {
        RAST._IType _878___mcc_h1 = _source27.dtor_base;
        Dafny.ISequence<Dafny.Rune> _879___mcc_h2 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _880_name = _879___mcc_h2;
        RAST._IType _881_underlying = _878___mcc_h1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_881_underlying)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _880_name);
      } else if (_source27.is_TypeApp) {
        RAST._IType _882___mcc_h3 = _source27.dtor_baseName;
        Dafny.ISequence<RAST._IType> _883___mcc_h4 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _884_args = _883___mcc_h4;
        RAST._IType _885_base = _882___mcc_h3;
        return Dafny.Sequence<Dafny.Rune>.Concat((_885_base)._ToString(ind), (((_884_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._IType>(_884_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_886_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_887_arg) => {
          return (_887_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_886_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">")))));
      } else if (_source27.is_Borrowed) {
        RAST._IType _888___mcc_h5 = _source27.dtor_underlying;
        RAST._IType _889_underlying = _888___mcc_h5;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), (_889_underlying)._ToString(ind));
      } else if (_source27.is_BorrowedMut) {
        RAST._IType _890___mcc_h6 = _source27.dtor_underlying;
        RAST._IType _891_underlying = _890___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut "), (_891_underlying)._ToString(ind));
      } else if (_source27.is_Pointer) {
        RAST._IType _892___mcc_h7 = _source27.dtor_underlying;
        RAST._IType _893_underlying = _892___mcc_h7;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*const "), (_893_underlying)._ToString(ind));
      } else if (_source27.is_PointerMut) {
        RAST._IType _894___mcc_h8 = _source27.dtor_underlying;
        RAST._IType _895_underlying = _894___mcc_h8;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*mut "), (_895_underlying)._ToString(ind));
      } else if (_source27.is_ImplType) {
        RAST._IType _896___mcc_h9 = _source27.dtor_underlying;
        RAST._IType _897_underlying = _896___mcc_h9;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), (_897_underlying)._ToString(ind));
      } else if (_source27.is_DynType) {
        RAST._IType _898___mcc_h10 = _source27.dtor_underlying;
        RAST._IType _899_underlying = _898___mcc_h10;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn "), (_899_underlying)._ToString(ind));
      } else if (_source27.is_TupleType) {
        Dafny.ISequence<RAST._IType> _900___mcc_h11 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _901_args = _900___mcc_h11;
        if ((_901_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()");
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IType>(_901_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_902_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_903_arg) => {
            return (_903_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_902_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
        }
      } else if (_source27.is_FnType) {
        Dafny.ISequence<RAST._IType> _904___mcc_h12 = _source27.dtor_arguments;
        RAST._IType _905___mcc_h13 = _source27.dtor_returnType;
        RAST._IType _906_returnType = _905___mcc_h13;
        Dafny.ISequence<RAST._IType> _907_arguments = _904___mcc_h12;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Fn("), RAST.__default.SeqToString<RAST._IType>(_907_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_908_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_909_arg) => {
          return (_909_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_908_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_906_returnType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      } else {
        RAST._IType _910___mcc_h14 = _source27.dtor_left;
        RAST._IType _911___mcc_h15 = _source27.dtor_right;
        RAST._IType _912_right = _911___mcc_h15;
        RAST._IType _913_left = _910___mcc_h14;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_913_left)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + ")), (_912_right)._ToString(ind));
      }
    }
    public RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Type.create_TMemberSelect(this, name);
    }
    public RAST._IType Apply1(RAST._IType arg) {
      return RAST.Type.create_TypeApp(this, Dafny.Sequence<RAST._IType>.FromElements(arg));
    }
    public RAST._IType Apply(Dafny.ISequence<RAST._IType> args) {
      return RAST.Type.create_TypeApp(this, args);
    }
  }
  public class Type_SelfOwned : Type {
    public Type_SelfOwned() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SelfOwned();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_SelfOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.SelfOwned";
      return s;
    }
  }
  public class Type_U8 : Type {
    public Type_U8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U8";
      return s;
    }
  }
  public class Type_U16 : Type {
    public Type_U16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U16";
      return s;
    }
  }
  public class Type_U32 : Type {
    public Type_U32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U32";
      return s;
    }
  }
  public class Type_U64 : Type {
    public Type_U64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U64";
      return s;
    }
  }
  public class Type_U128 : Type {
    public Type_U128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U128";
      return s;
    }
  }
  public class Type_I8 : Type {
    public Type_I8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I8";
      return s;
    }
  }
  public class Type_I16 : Type {
    public Type_I16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I16";
      return s;
    }
  }
  public class Type_I32 : Type {
    public Type_I32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I32";
      return s;
    }
  }
  public class Type_I64 : Type {
    public Type_I64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I64";
      return s;
    }
  }
  public class Type_I128 : Type {
    public Type_I128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I128";
      return s;
    }
  }
  public class Type_Bool : Type {
    public Type_Bool() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Bool";
      return s;
    }
  }
  public class Type_TIdentifier : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TIdentifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TIdentifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TIdentifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TIdentifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TMemberSelect : Type {
    public readonly RAST._IType _base;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._base = @base;
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TMemberSelect(_base, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TMemberSelect;
      return oth != null && object.Equals(this._base, oth._base) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TMemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeApp : Type {
    public readonly RAST._IType _baseName;
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) : base() {
      this._baseName = baseName;
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeApp(_baseName, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TypeApp;
      return oth != null && object.Equals(this._baseName, oth._baseName) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TypeApp";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_Borrowed : Type {
    public readonly RAST._IType _underlying;
    public Type_Borrowed(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Borrowed(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Borrowed;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Borrowed";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_BorrowedMut : Type {
    public readonly RAST._IType _underlying;
    public Type_BorrowedMut(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_BorrowedMut(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_BorrowedMut;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.BorrowedMut";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_Pointer : Type {
    public readonly RAST._IType _underlying;
    public Type_Pointer(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Pointer(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Pointer;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Pointer";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_PointerMut : Type {
    public readonly RAST._IType _underlying;
    public Type_PointerMut(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_PointerMut(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_PointerMut;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.PointerMut";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_ImplType : Type {
    public readonly RAST._IType _underlying;
    public Type_ImplType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_ImplType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_ImplType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.ImplType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_DynType : Type {
    public readonly RAST._IType _underlying;
    public Type_DynType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_DynType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_DynType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.DynType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_TupleType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TupleType(Dafny.ISequence<RAST._IType> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TupleType(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TupleType;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TupleType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_FnType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public readonly RAST._IType _returnType;
    public Type_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) : base() {
      this._arguments = arguments;
      this._returnType = returnType;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_FnType(_arguments, _returnType);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_FnType;
      return oth != null && object.Equals(this._arguments, oth._arguments) && object.Equals(this._returnType, oth._returnType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.FnType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ")";
      return s;
    }
  }
  public class Type_IntersectionType : Type {
    public readonly RAST._IType _left;
    public readonly RAST._IType _right;
    public Type_IntersectionType(RAST._IType left, RAST._IType right) : base() {
      this._left = left;
      this._right = right;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_IntersectionType(_left, _right);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_IntersectionType;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.IntersectionType";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ")";
      return s;
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _ITrait DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Trait;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Trait.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._ITrait theDefault = create(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITrait> _TYPE = new Dafny.TypeDescriptor<RAST._ITrait>(RAST.Trait.Default());
    public static Dafny.TypeDescriptor<RAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Trait(typeParams, tpe, @where, body);
    }
    public static _ITrait create_Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return create(typeParams, tpe, @where, body);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub trait "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_914_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_915_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _914_ind), RAST.__default.IND), (_915_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_914_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _IImpl {
    bool is_ImplFor { get; }
    bool is_Impl { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    RAST._IType dtor_forType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _IImpl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Impl : _IImpl {
    public Impl() {
    }
    private static readonly RAST._IImpl theDefault = create_ImplFor(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._IImpl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImpl> _TYPE = new Dafny.TypeDescriptor<RAST._IImpl>(RAST.Impl.Default());
    public static Dafny.TypeDescriptor<RAST._IImpl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImpl create_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_ImplFor(typeParams, tpe, forType, @where, body);
    }
    public static _IImpl create_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_Impl(typeParams, tpe, @where, body);
    }
    public bool is_ImplFor { get { return this is Impl_ImplFor; } }
    public bool is_Impl { get { return this is Impl_Impl; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._typeParams; }
        return ((Impl_Impl)d)._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._tpe; }
        return ((Impl_Impl)d)._tpe;
      }
    }
    public RAST._IType dtor_forType {
      get {
        var d = this;
        return ((Impl_ImplFor)d)._forType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._where; }
        return ((Impl_Impl)d)._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._body; }
        return ((Impl_Impl)d)._body;
      }
    }
    public abstract _IImpl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), (((this).is_ImplFor) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" for "), ((this).dtor_forType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_916_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_917_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _916_ind), RAST.__default.IND), (_917_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_916_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }
  public class Impl_ImplFor : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly RAST._IType _forType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._forType = forType;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_ImplFor(_typeParams, _tpe, _forType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_ImplFor;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._forType, oth._forType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._forType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.ImplFor";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += Dafny.Helpers.ToString(this._forType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Impl_Impl : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_Impl(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_Impl;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.Impl";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }

  public interface _IImplMember {
    bool is_RawImplMember { get; }
    bool is_FnDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IVisibility dtor_pub { get; }
    RAST._IFn dtor_fun { get; }
    _IImplMember DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ImplMember : _IImplMember {
    public ImplMember() {
    }
    private static readonly RAST._IImplMember theDefault = create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IImplMember Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImplMember> _TYPE = new Dafny.TypeDescriptor<RAST._IImplMember>(RAST.ImplMember.Default());
    public static Dafny.TypeDescriptor<RAST._IImplMember> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImplMember create_RawImplMember(Dafny.ISequence<Dafny.Rune> content) {
      return new ImplMember_RawImplMember(content);
    }
    public static _IImplMember create_FnDecl(RAST._IVisibility pub, RAST._IFn fun) {
      return new ImplMember_FnDecl(pub, fun);
    }
    public bool is_RawImplMember { get { return this is ImplMember_RawImplMember; } }
    public bool is_FnDecl { get { return this is ImplMember_FnDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((ImplMember_RawImplMember)d)._content;
      }
    }
    public RAST._IVisibility dtor_pub {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._pub;
      }
    }
    public RAST._IFn dtor_fun {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._fun;
      }
    }
    public abstract _IImplMember DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_FnDecl) {
        return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_pub, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_fun)._ToString(ind));
      } else {
        return (this).dtor_content;
      }
    }
  }
  public class ImplMember_RawImplMember : ImplMember {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public ImplMember_RawImplMember(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_RawImplMember(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_RawImplMember;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.RawImplMember";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ImplMember_FnDecl : ImplMember {
    public readonly RAST._IVisibility _pub;
    public readonly RAST._IFn _fun;
    public ImplMember_FnDecl(RAST._IVisibility pub, RAST._IFn fun) : base() {
      this._pub = pub;
      this._fun = fun;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_FnDecl(_pub, _fun);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_FnDecl;
      return oth != null && object.Equals(this._pub, oth._pub) && object.Equals(this._fun, oth._fun);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pub));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fun));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.FnDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._pub);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fun);
      s += ")";
      return s;
    }
  }

  public interface _IVisibility {
    bool is_PUB { get; }
    bool is_PRIV { get; }
    _IVisibility DowncastClone();
  }
  public abstract class Visibility : _IVisibility {
    public Visibility() {
    }
    private static readonly RAST._IVisibility theDefault = create_PUB();
    public static RAST._IVisibility Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IVisibility> _TYPE = new Dafny.TypeDescriptor<RAST._IVisibility>(RAST.Visibility.Default());
    public static Dafny.TypeDescriptor<RAST._IVisibility> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IVisibility create_PUB() {
      return new Visibility_PUB();
    }
    public static _IVisibility create_PRIV() {
      return new Visibility_PRIV();
    }
    public bool is_PUB { get { return this is Visibility_PUB; } }
    public bool is_PRIV { get { return this is Visibility_PRIV; } }
    public static System.Collections.Generic.IEnumerable<_IVisibility> AllSingletonConstructors {
      get {
        yield return Visibility.create_PUB();
        yield return Visibility.create_PRIV();
      }
    }
    public abstract _IVisibility DowncastClone();
  }
  public class Visibility_PUB : Visibility {
    public Visibility_PUB() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PUB();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PUB;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PUB";
      return s;
    }
  }
  public class Visibility_PRIV : Visibility {
    public Visibility_PRIV() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PRIV();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PRIV;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PRIV";
      return s;
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_tpe { get; }
    _IFormal DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IType _tpe;
    public Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      this._name = name;
      this._tpe = tpe;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Type.Default());
    public static RAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFormal> _TYPE = new Dafny.TypeDescriptor<RAST._IFormal>(RAST.Formal.Default());
    public static Dafny.TypeDescriptor<RAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return new Formal(name, tpe);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return create(name, tpe);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && (object.Equals((this).dtor_tpe, RAST.Type.create_SelfOwned()))) {
        return (this).dtor_name;
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && (object.Equals((this).dtor_tpe, RAST.__default.SelfBorrowed))) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), (this).dtor_name);
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && (object.Equals((this).dtor_tpe, RAST.__default.SelfBorrowedMut))) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut "), (this).dtor_name);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_tpe)._ToString(ind));
      }
    }
    public static RAST._IFormal selfBorrowed { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.__default.SelfBorrowed);
    } }
    public static RAST._IFormal selfOwned { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_SelfOwned());
    } }
    public static RAST._IFormal selfBorrowedMut { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.__default.SelfBorrowedMut);
    } }
  }

  public interface _IPattern {
    bool is_RawPattern { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Pattern : _IPattern {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Pattern(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Pattern;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Pattern.RawPattern";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPattern create(Dafny.ISequence<Dafny.Rune> content) {
      return new Pattern(content);
    }
    public static _IPattern create_RawPattern(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawPattern { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> _this, Dafny.ISequence<Dafny.Rune> ind) {
      return (_this);
    }
  }

  public interface _IMatchCase {
    bool is_MatchCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_pattern { get; }
    RAST._IExpr dtor_rhs { get; }
    _IMatchCase DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class MatchCase : _IMatchCase {
    public readonly Dafny.ISequence<Dafny.Rune> _pattern;
    public readonly RAST._IExpr _rhs;
    public MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      this._pattern = pattern;
      this._rhs = rhs;
    }
    public _IMatchCase DowncastClone() {
      if (this is _IMatchCase dt) { return dt; }
      return new MatchCase(_pattern, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.MatchCase;
      return oth != null && object.Equals(this._pattern, oth._pattern) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pattern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.MatchCase.MatchCase";
      s += "(";
      s += Dafny.Helpers.ToString(this._pattern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IMatchCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IMatchCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMatchCase> _TYPE = new Dafny.TypeDescriptor<RAST._IMatchCase>(RAST.MatchCase.Default());
    public static Dafny.TypeDescriptor<RAST._IMatchCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMatchCase create(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return new MatchCase(pattern, rhs);
    }
    public static _IMatchCase create_MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return create(pattern, rhs);
    }
    public bool is_MatchCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_pattern {
      get {
        return this._pattern;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      Dafny.ISequence<Dafny.Rune> _918_newIndent = ((((this).dtor_rhs).is_Block) ? (ind) : (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      Dafny.ISequence<Dafny.Rune> _919_rhsString = ((this).dtor_rhs)._ToString(_918_newIndent);
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Pattern._ToString((this).dtor_pattern, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" =>")), ((((_919_rhsString).Contains(new Dafny.Rune('\n'))) && (((_919_rhsString).Select(BigInteger.Zero)) != (new Dafny.Rune('{')))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), _919_rhsString)) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _919_rhsString))));
    }
  }

  public interface _IAssignIdentifier {
    bool is_AssignIdentifier { get; }
    Dafny.ISequence<Dafny.Rune> dtor_identifier { get; }
    RAST._IExpr dtor_rhs { get; }
    _IAssignIdentifier DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class AssignIdentifier : _IAssignIdentifier {
    public readonly Dafny.ISequence<Dafny.Rune> _identifier;
    public readonly RAST._IExpr _rhs;
    public AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      this._identifier = identifier;
      this._rhs = rhs;
    }
    public _IAssignIdentifier DowncastClone() {
      if (this is _IAssignIdentifier dt) { return dt; }
      return new AssignIdentifier(_identifier, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.AssignIdentifier;
      return oth != null && object.Equals(this._identifier, oth._identifier) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._identifier));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.AssignIdentifier.AssignIdentifier";
      s += "(";
      s += this._identifier.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IAssignIdentifier theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IAssignIdentifier Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TYPE = new Dafny.TypeDescriptor<RAST._IAssignIdentifier>(RAST.AssignIdentifier.Default());
    public static Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignIdentifier create(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return new AssignIdentifier(identifier, rhs);
    }
    public static _IAssignIdentifier create_AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return create(identifier, rhs);
    }
    public bool is_AssignIdentifier { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_identifier {
      get {
        return this._identifier;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_identifier, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_rhs)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
    }
  }

  public interface _IDeclareType {
    bool is_MUT { get; }
    bool is_CONST { get; }
    _IDeclareType DowncastClone();
  }
  public abstract class DeclareType : _IDeclareType {
    public DeclareType() {
    }
    private static readonly RAST._IDeclareType theDefault = create_MUT();
    public static RAST._IDeclareType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IDeclareType> _TYPE = new Dafny.TypeDescriptor<RAST._IDeclareType>(RAST.DeclareType.Default());
    public static Dafny.TypeDescriptor<RAST._IDeclareType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDeclareType create_MUT() {
      return new DeclareType_MUT();
    }
    public static _IDeclareType create_CONST() {
      return new DeclareType_CONST();
    }
    public bool is_MUT { get { return this is DeclareType_MUT; } }
    public bool is_CONST { get { return this is DeclareType_CONST; } }
    public static System.Collections.Generic.IEnumerable<_IDeclareType> AllSingletonConstructors {
      get {
        yield return DeclareType.create_MUT();
        yield return DeclareType.create_CONST();
      }
    }
    public abstract _IDeclareType DowncastClone();
  }
  public class DeclareType_MUT : DeclareType {
    public DeclareType_MUT() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_MUT();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_MUT;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.MUT";
      return s;
    }
  }
  public class DeclareType_CONST : DeclareType {
    public DeclareType_CONST() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_CONST();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_CONST;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.CONST";
      return s;
    }
  }

  public interface _IAssociativity {
    bool is_LeftToRight { get; }
    bool is_RightToLeft { get; }
    bool is_RequiresParentheses { get; }
    _IAssociativity DowncastClone();
  }
  public abstract class Associativity : _IAssociativity {
    public Associativity() {
    }
    private static readonly RAST._IAssociativity theDefault = create_LeftToRight();
    public static RAST._IAssociativity Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssociativity> _TYPE = new Dafny.TypeDescriptor<RAST._IAssociativity>(RAST.Associativity.Default());
    public static Dafny.TypeDescriptor<RAST._IAssociativity> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssociativity create_LeftToRight() {
      return new Associativity_LeftToRight();
    }
    public static _IAssociativity create_RightToLeft() {
      return new Associativity_RightToLeft();
    }
    public static _IAssociativity create_RequiresParentheses() {
      return new Associativity_RequiresParentheses();
    }
    public bool is_LeftToRight { get { return this is Associativity_LeftToRight; } }
    public bool is_RightToLeft { get { return this is Associativity_RightToLeft; } }
    public bool is_RequiresParentheses { get { return this is Associativity_RequiresParentheses; } }
    public static System.Collections.Generic.IEnumerable<_IAssociativity> AllSingletonConstructors {
      get {
        yield return Associativity.create_LeftToRight();
        yield return Associativity.create_RightToLeft();
        yield return Associativity.create_RequiresParentheses();
      }
    }
    public abstract _IAssociativity DowncastClone();
  }
  public class Associativity_LeftToRight : Associativity {
    public Associativity_LeftToRight() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_LeftToRight();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_LeftToRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.LeftToRight";
      return s;
    }
  }
  public class Associativity_RightToLeft : Associativity {
    public Associativity_RightToLeft() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RightToLeft();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RightToLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RightToLeft";
      return s;
    }
  }
  public class Associativity_RequiresParentheses : Associativity {
    public Associativity_RequiresParentheses() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RequiresParentheses();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RequiresParentheses;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RequiresParentheses";
      return s;
    }
  }

  public interface _IPrintingInfo {
    bool is_UnknownPrecedence { get; }
    bool is_Precedence { get; }
    bool is_SuffixPrecedence { get; }
    bool is_PrecedenceAssociativity { get; }
    BigInteger dtor_precedence { get; }
    RAST._IAssociativity dtor_associativity { get; }
    _IPrintingInfo DowncastClone();
    bool NeedParenthesesFor(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForRight(RAST._IPrintingInfo underlying);
  }
  public abstract class PrintingInfo : _IPrintingInfo {
    public PrintingInfo() {
    }
    private static readonly RAST._IPrintingInfo theDefault = create_UnknownPrecedence();
    public static RAST._IPrintingInfo Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IPrintingInfo> _TYPE = new Dafny.TypeDescriptor<RAST._IPrintingInfo>(RAST.PrintingInfo.Default());
    public static Dafny.TypeDescriptor<RAST._IPrintingInfo> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrintingInfo create_UnknownPrecedence() {
      return new PrintingInfo_UnknownPrecedence();
    }
    public static _IPrintingInfo create_Precedence(BigInteger precedence) {
      return new PrintingInfo_Precedence(precedence);
    }
    public static _IPrintingInfo create_SuffixPrecedence(BigInteger precedence) {
      return new PrintingInfo_SuffixPrecedence(precedence);
    }
    public static _IPrintingInfo create_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) {
      return new PrintingInfo_PrecedenceAssociativity(precedence, associativity);
    }
    public bool is_UnknownPrecedence { get { return this is PrintingInfo_UnknownPrecedence; } }
    public bool is_Precedence { get { return this is PrintingInfo_Precedence; } }
    public bool is_SuffixPrecedence { get { return this is PrintingInfo_SuffixPrecedence; } }
    public bool is_PrecedenceAssociativity { get { return this is PrintingInfo_PrecedenceAssociativity; } }
    public BigInteger dtor_precedence {
      get {
        var d = this;
        if (d is PrintingInfo_Precedence) { return ((PrintingInfo_Precedence)d)._precedence; }
        if (d is PrintingInfo_SuffixPrecedence) { return ((PrintingInfo_SuffixPrecedence)d)._precedence; }
        return ((PrintingInfo_PrecedenceAssociativity)d)._precedence;
      }
    }
    public RAST._IAssociativity dtor_associativity {
      get {
        var d = this;
        return ((PrintingInfo_PrecedenceAssociativity)d)._associativity;
      }
    }
    public abstract _IPrintingInfo DowncastClone();
    public bool NeedParenthesesFor(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return true;
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_LeftToRight));
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForRight(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_RightToLeft));
      } else {
        return false;
      }
    }
  }
  public class PrintingInfo_UnknownPrecedence : PrintingInfo {
    public PrintingInfo_UnknownPrecedence() : base() {
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_UnknownPrecedence();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_UnknownPrecedence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.UnknownPrecedence";
      return s;
    }
  }
  public class PrintingInfo_Precedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_Precedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_Precedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_Precedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.Precedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_SuffixPrecedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_SuffixPrecedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_SuffixPrecedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_SuffixPrecedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.SuffixPrecedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_PrecedenceAssociativity : PrintingInfo {
    public readonly BigInteger _precedence;
    public readonly RAST._IAssociativity _associativity;
    public PrintingInfo_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) : base() {
      this._precedence = precedence;
      this._associativity = associativity;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_PrecedenceAssociativity(_precedence, _associativity);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_PrecedenceAssociativity;
      return oth != null && this._precedence == oth._precedence && object.Equals(this._associativity, oth._associativity);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._associativity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.PrecedenceAssociativity";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ", ";
      s += Dafny.Helpers.ToString(this._associativity);
      s += ")";
      return s;
    }
  }

  public interface _IAssignLhs {
    bool is_LocalVar { get; }
    bool is_SelectMember { get; }
    bool is_ExtractTuple { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IExpr dtor_on { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    _IAssignLhs DowncastClone();
  }
  public abstract class AssignLhs : _IAssignLhs {
    public AssignLhs() {
    }
    private static readonly RAST._IAssignLhs theDefault = create_LocalVar(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IAssignLhs Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssignLhs> _TYPE = new Dafny.TypeDescriptor<RAST._IAssignLhs>(RAST.AssignLhs.Default());
    public static Dafny.TypeDescriptor<RAST._IAssignLhs> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignLhs create_LocalVar(Dafny.ISequence<Dafny.Rune> name) {
      return new AssignLhs_LocalVar(name);
    }
    public static _IAssignLhs create_SelectMember(RAST._IExpr @on, Dafny.ISequence<Dafny.Rune> field) {
      return new AssignLhs_SelectMember(@on, field);
    }
    public static _IAssignLhs create_ExtractTuple(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names) {
      return new AssignLhs_ExtractTuple(names);
    }
    public bool is_LocalVar { get { return this is AssignLhs_LocalVar; } }
    public bool is_SelectMember { get { return this is AssignLhs_SelectMember; } }
    public bool is_ExtractTuple { get { return this is AssignLhs_ExtractTuple; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((AssignLhs_LocalVar)d)._name;
      }
    }
    public RAST._IExpr dtor_on {
      get {
        var d = this;
        return ((AssignLhs_SelectMember)d)._on;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        return ((AssignLhs_SelectMember)d)._field;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        var d = this;
        return ((AssignLhs_ExtractTuple)d)._names;
      }
    }
    public abstract _IAssignLhs DowncastClone();
  }
  public class AssignLhs_LocalVar : AssignLhs {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public AssignLhs_LocalVar(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_LocalVar(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.AssignLhs_LocalVar;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.AssignLhs.LocalVar";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_SelectMember : AssignLhs {
    public readonly RAST._IExpr _on;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public AssignLhs_SelectMember(RAST._IExpr @on, Dafny.ISequence<Dafny.Rune> field) : base() {
      this._on = @on;
      this._field = field;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_SelectMember(_on, _field);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.AssignLhs_SelectMember;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._field, oth._field);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.AssignLhs.SelectMember";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_ExtractTuple : AssignLhs {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public AssignLhs_ExtractTuple(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names) : base() {
      this._names = names;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_ExtractTuple(_names);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.AssignLhs_ExtractTuple;
      return oth != null && object.Equals(this._names, oth._names);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.AssignLhs.ExtractTuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ")";
      return s;
    }
  }

  public interface _IExpr {
    bool is_RawExpr { get; }
    bool is_ExprFromType { get; }
    bool is_Identifier { get; }
    bool is_Match { get; }
    bool is_StmtExpr { get; }
    bool is_Block { get; }
    bool is_StructBuild { get; }
    bool is_Tuple { get; }
    bool is_UnaryOp { get; }
    bool is_BinaryOp { get; }
    bool is_TypeAscription { get; }
    bool is_LiteralInt { get; }
    bool is_LiteralBool { get; }
    bool is_LiteralString { get; }
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_IfExpr { get; }
    bool is_Loop { get; }
    bool is_For { get; }
    bool is_Labelled { get; }
    bool is_Break { get; }
    bool is_Continue { get; }
    bool is_Return { get; }
    bool is_CallType { get; }
    bool is_Call { get; }
    bool is_Select { get; }
    bool is_MemberSelect { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IExpr dtor_matchee { get; }
    Dafny.ISequence<RAST._IMatchCase> dtor_cases { get; }
    RAST._IExpr dtor_stmt { get; }
    RAST._IExpr dtor_rhs { get; }
    RAST._IExpr dtor_underlying { get; }
    Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments { get; }
    Dafny.ISequence<RAST._IExpr> dtor_arguments { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op1 { get; }
    DAST.Format._IUnOpFormat dtor_format { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op2 { get; }
    RAST._IExpr dtor_left { get; }
    RAST._IExpr dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_value { get; }
    bool dtor_bvalue { get; }
    bool dtor_binary { get; }
    RAST._IDeclareType dtor_declareType { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_optType { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs { get; }
    Std.Wrappers._IOption<RAST._IAssignLhs> dtor_names { get; }
    RAST._IExpr dtor_cond { get; }
    RAST._IExpr dtor_thn { get; }
    RAST._IExpr dtor_els { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optCond { get; }
    RAST._IExpr dtor_range { get; }
    RAST._IExpr dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr { get; }
    RAST._IExpr dtor_obj { get; }
    Dafny.ISequence<RAST._IType> dtor_typeParameters { get; }
    _IExpr DowncastClone();
    bool NoExtraSemicolonAfter();
    RAST._IPrintingInfo printingInfo { get; }
    BigInteger Height();
    RAST._IExpr Optimize();
    bool LeftRequiresParentheses(RAST._IExpr left);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left);
    bool RightRequiresParentheses(RAST._IExpr right);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right);
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IExpr Then(RAST._IExpr rhs2);
    RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters);
    RAST._IExpr ApplyType1(RAST._IType typeParameter);
    RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments);
    RAST._IExpr Apply1(RAST._IExpr argument);
  }
  public abstract class Expr : _IExpr {
    public Expr() {
    }
    private static readonly RAST._IExpr theDefault = create_RawExpr(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IExpr Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IExpr> _TYPE = new Dafny.TypeDescriptor<RAST._IExpr>(RAST.Expr.Default());
    public static Dafny.TypeDescriptor<RAST._IExpr> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpr create_RawExpr(Dafny.ISequence<Dafny.Rune> content) {
      return new Expr_RawExpr(content);
    }
    public static _IExpr create_ExprFromType(RAST._IType tpe) {
      return new Expr_ExprFromType(tpe);
    }
    public static _IExpr create_Identifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Identifier(name);
    }
    public static _IExpr create_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) {
      return new Expr_Match(matchee, cases);
    }
    public static _IExpr create_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) {
      return new Expr_StmtExpr(stmt, rhs);
    }
    public static _IExpr create_Block(RAST._IExpr underlying) {
      return new Expr_Block(underlying);
    }
    public static _IExpr create_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) {
      return new Expr_StructBuild(underlying, assignments);
    }
    public static _IExpr create_Tuple(Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Tuple(arguments);
    }
    public static _IExpr create_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) {
      return new Expr_UnaryOp(op1, underlying, format);
    }
    public static _IExpr create_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) {
      return new Expr_BinaryOp(op2, left, right, format2);
    }
    public static _IExpr create_TypeAscription(RAST._IExpr left, RAST._IType tpe) {
      return new Expr_TypeAscription(left, tpe);
    }
    public static _IExpr create_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) {
      return new Expr_LiteralInt(@value);
    }
    public static _IExpr create_LiteralBool(bool bvalue) {
      return new Expr_LiteralBool(bvalue);
    }
    public static _IExpr create_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) {
      return new Expr_LiteralString(@value, binary);
    }
    public static _IExpr create_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) {
      return new Expr_DeclareVar(declareType, name, optType, optRhs);
    }
    public static _IExpr create_Assign(Std.Wrappers._IOption<RAST._IAssignLhs> names, RAST._IExpr rhs) {
      return new Expr_Assign(names, rhs);
    }
    public static _IExpr create_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) {
      return new Expr_IfExpr(cond, thn, els);
    }
    public static _IExpr create_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) {
      return new Expr_Loop(optCond, underlying);
    }
    public static _IExpr create_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) {
      return new Expr_For(name, range, body);
    }
    public static _IExpr create_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) {
      return new Expr_Labelled(lbl, underlying);
    }
    public static _IExpr create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Break(optLbl);
    }
    public static _IExpr create_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Continue(optLbl);
    }
    public static _IExpr create_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) {
      return new Expr_Return(optExpr);
    }
    public static _IExpr create_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) {
      return new Expr_CallType(obj, typeParameters);
    }
    public static _IExpr create_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Call(obj, arguments);
    }
    public static _IExpr create_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Select(obj, name);
    }
    public static _IExpr create_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_MemberSelect(obj, name);
    }
    public bool is_RawExpr { get { return this is Expr_RawExpr; } }
    public bool is_ExprFromType { get { return this is Expr_ExprFromType; } }
    public bool is_Identifier { get { return this is Expr_Identifier; } }
    public bool is_Match { get { return this is Expr_Match; } }
    public bool is_StmtExpr { get { return this is Expr_StmtExpr; } }
    public bool is_Block { get { return this is Expr_Block; } }
    public bool is_StructBuild { get { return this is Expr_StructBuild; } }
    public bool is_Tuple { get { return this is Expr_Tuple; } }
    public bool is_UnaryOp { get { return this is Expr_UnaryOp; } }
    public bool is_BinaryOp { get { return this is Expr_BinaryOp; } }
    public bool is_TypeAscription { get { return this is Expr_TypeAscription; } }
    public bool is_LiteralInt { get { return this is Expr_LiteralInt; } }
    public bool is_LiteralBool { get { return this is Expr_LiteralBool; } }
    public bool is_LiteralString { get { return this is Expr_LiteralString; } }
    public bool is_DeclareVar { get { return this is Expr_DeclareVar; } }
    public bool is_Assign { get { return this is Expr_Assign; } }
    public bool is_IfExpr { get { return this is Expr_IfExpr; } }
    public bool is_Loop { get { return this is Expr_Loop; } }
    public bool is_For { get { return this is Expr_For; } }
    public bool is_Labelled { get { return this is Expr_Labelled; } }
    public bool is_Break { get { return this is Expr_Break; } }
    public bool is_Continue { get { return this is Expr_Continue; } }
    public bool is_Return { get { return this is Expr_Return; } }
    public bool is_CallType { get { return this is Expr_CallType; } }
    public bool is_Call { get { return this is Expr_Call; } }
    public bool is_Select { get { return this is Expr_Select; } }
    public bool is_MemberSelect { get { return this is Expr_MemberSelect; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((Expr_RawExpr)d)._content;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Expr_ExprFromType) { return ((Expr_ExprFromType)d)._tpe; }
        return ((Expr_TypeAscription)d)._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Expr_Identifier) { return ((Expr_Identifier)d)._name; }
        if (d is Expr_DeclareVar) { return ((Expr_DeclareVar)d)._name; }
        if (d is Expr_For) { return ((Expr_For)d)._name; }
        if (d is Expr_Select) { return ((Expr_Select)d)._name; }
        return ((Expr_MemberSelect)d)._name;
      }
    }
    public RAST._IExpr dtor_matchee {
      get {
        var d = this;
        return ((Expr_Match)d)._matchee;
      }
    }
    public Dafny.ISequence<RAST._IMatchCase> dtor_cases {
      get {
        var d = this;
        return ((Expr_Match)d)._cases;
      }
    }
    public RAST._IExpr dtor_stmt {
      get {
        var d = this;
        return ((Expr_StmtExpr)d)._stmt;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        var d = this;
        if (d is Expr_StmtExpr) { return ((Expr_StmtExpr)d)._rhs; }
        return ((Expr_Assign)d)._rhs;
      }
    }
    public RAST._IExpr dtor_underlying {
      get {
        var d = this;
        if (d is Expr_Block) { return ((Expr_Block)d)._underlying; }
        if (d is Expr_StructBuild) { return ((Expr_StructBuild)d)._underlying; }
        if (d is Expr_UnaryOp) { return ((Expr_UnaryOp)d)._underlying; }
        if (d is Expr_Loop) { return ((Expr_Loop)d)._underlying; }
        return ((Expr_Labelled)d)._underlying;
      }
    }
    public Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments {
      get {
        var d = this;
        return ((Expr_StructBuild)d)._assignments;
      }
    }
    public Dafny.ISequence<RAST._IExpr> dtor_arguments {
      get {
        var d = this;
        if (d is Expr_Tuple) { return ((Expr_Tuple)d)._arguments; }
        return ((Expr_Call)d)._arguments;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op1 {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._op1;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._format;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._op2;
      }
    }
    public RAST._IExpr dtor_left {
      get {
        var d = this;
        if (d is Expr_BinaryOp) { return ((Expr_BinaryOp)d)._left; }
        return ((Expr_TypeAscription)d)._left;
      }
    }
    public RAST._IExpr dtor_right {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._format2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_value {
      get {
        var d = this;
        if (d is Expr_LiteralInt) { return ((Expr_LiteralInt)d)._value; }
        return ((Expr_LiteralString)d)._value;
      }
    }
    public bool dtor_bvalue {
      get {
        var d = this;
        return ((Expr_LiteralBool)d)._bvalue;
      }
    }
    public bool dtor_binary {
      get {
        var d = this;
        return ((Expr_LiteralString)d)._binary;
      }
    }
    public RAST._IDeclareType dtor_declareType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._declareType;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_optType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optType;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optRhs;
      }
    }
    public Std.Wrappers._IOption<RAST._IAssignLhs> dtor_names {
      get {
        var d = this;
        return ((Expr_Assign)d)._names;
      }
    }
    public RAST._IExpr dtor_cond {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._cond;
      }
    }
    public RAST._IExpr dtor_thn {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._thn;
      }
    }
    public RAST._IExpr dtor_els {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._els;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optCond {
      get {
        var d = this;
        return ((Expr_Loop)d)._optCond;
      }
    }
    public RAST._IExpr dtor_range {
      get {
        var d = this;
        return ((Expr_For)d)._range;
      }
    }
    public RAST._IExpr dtor_body {
      get {
        var d = this;
        return ((Expr_For)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Expr_Labelled)d)._lbl;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl {
      get {
        var d = this;
        if (d is Expr_Break) { return ((Expr_Break)d)._optLbl; }
        return ((Expr_Continue)d)._optLbl;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr {
      get {
        var d = this;
        return ((Expr_Return)d)._optExpr;
      }
    }
    public RAST._IExpr dtor_obj {
      get {
        var d = this;
        if (d is Expr_CallType) { return ((Expr_CallType)d)._obj; }
        if (d is Expr_Call) { return ((Expr_Call)d)._obj; }
        if (d is Expr_Select) { return ((Expr_Select)d)._obj; }
        return ((Expr_MemberSelect)d)._obj;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_typeParameters {
      get {
        var d = this;
        return ((Expr_CallType)d)._typeParameters;
      }
    }
    public abstract _IExpr DowncastClone();
    public bool NoExtraSemicolonAfter() {
      return ((((((this).is_DeclareVar) || ((this).is_Assign)) || ((this).is_Break)) || ((this).is_Continue)) || ((this).is_Return)) || ((((this).is_RawExpr) && ((new BigInteger(((this).dtor_content).Count)).Sign == 1)) && ((((this).dtor_content).Select((new BigInteger(((this).dtor_content).Count)) - (BigInteger.One))) == (new Dafny.Rune(';'))));
    }
    public BigInteger Height() {
      RAST._IExpr _source28 = this;
      if (_source28.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _920___mcc_h0 = _source28.dtor_content;
        return BigInteger.One;
      } else if (_source28.is_ExprFromType) {
        RAST._IType _921___mcc_h2 = _source28.dtor_tpe;
        return BigInteger.One;
      } else if (_source28.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _922___mcc_h4 = _source28.dtor_name;
        return BigInteger.One;
      } else if (_source28.is_Match) {
        RAST._IExpr _923___mcc_h6 = _source28.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _924___mcc_h7 = _source28.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _925_cases = _924___mcc_h7;
        RAST._IExpr _926_matchee = _923___mcc_h6;
        return (BigInteger.One) + (RAST.__default.max((_926_matchee).Height(), DAST.Format.__default.SeqToHeight<RAST._IMatchCase>(_925_cases, ((System.Func<RAST._IMatchCase, BigInteger>)((_927_oneCase) => {
          return (_927_oneCase).Height();
        })))));
      } else if (_source28.is_StmtExpr) {
        RAST._IExpr _928___mcc_h10 = _source28.dtor_stmt;
        RAST._IExpr _929___mcc_h11 = _source28.dtor_rhs;
        RAST._IExpr _930_rhs = _929___mcc_h11;
        RAST._IExpr _931_stmt = _928___mcc_h10;
        BigInteger _932_default = (BigInteger.One) + (RAST.__default.max((_931_stmt).Height(), (_930_rhs).Height()));
        RAST._IExpr _source29 = this;
        if (_source29.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _933___mcc_h102 = _source29.dtor_content;
          return _932_default;
        } else if (_source29.is_ExprFromType) {
          RAST._IType _934___mcc_h104 = _source29.dtor_tpe;
          return _932_default;
        } else if (_source29.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _935___mcc_h106 = _source29.dtor_name;
          return _932_default;
        } else if (_source29.is_Match) {
          RAST._IExpr _936___mcc_h108 = _source29.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _937___mcc_h109 = _source29.dtor_cases;
          return _932_default;
        } else if (_source29.is_StmtExpr) {
          RAST._IExpr _938___mcc_h112 = _source29.dtor_stmt;
          RAST._IExpr _939___mcc_h113 = _source29.dtor_rhs;
          RAST._IExpr _source30 = _938___mcc_h112;
          if (_source30.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _940___mcc_h116 = _source30.dtor_content;
            return _932_default;
          } else if (_source30.is_ExprFromType) {
            RAST._IType _941___mcc_h118 = _source30.dtor_tpe;
            return _932_default;
          } else if (_source30.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _942___mcc_h120 = _source30.dtor_name;
            return _932_default;
          } else if (_source30.is_Match) {
            RAST._IExpr _943___mcc_h122 = _source30.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _944___mcc_h123 = _source30.dtor_cases;
            return _932_default;
          } else if (_source30.is_StmtExpr) {
            RAST._IExpr _945___mcc_h126 = _source30.dtor_stmt;
            RAST._IExpr _946___mcc_h127 = _source30.dtor_rhs;
            return _932_default;
          } else if (_source30.is_Block) {
            RAST._IExpr _947___mcc_h130 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_StructBuild) {
            RAST._IExpr _948___mcc_h132 = _source30.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _949___mcc_h133 = _source30.dtor_assignments;
            return _932_default;
          } else if (_source30.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _950___mcc_h136 = _source30.dtor_arguments;
            return _932_default;
          } else if (_source30.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _951___mcc_h138 = _source30.dtor_op1;
            RAST._IExpr _952___mcc_h139 = _source30.dtor_underlying;
            DAST.Format._IUnOpFormat _953___mcc_h140 = _source30.dtor_format;
            return _932_default;
          } else if (_source30.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _954___mcc_h144 = _source30.dtor_op2;
            RAST._IExpr _955___mcc_h145 = _source30.dtor_left;
            RAST._IExpr _956___mcc_h146 = _source30.dtor_right;
            DAST.Format._IBinOpFormat _957___mcc_h147 = _source30.dtor_format2;
            return _932_default;
          } else if (_source30.is_TypeAscription) {
            RAST._IExpr _958___mcc_h152 = _source30.dtor_left;
            RAST._IType _959___mcc_h153 = _source30.dtor_tpe;
            return _932_default;
          } else if (_source30.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _960___mcc_h156 = _source30.dtor_value;
            return _932_default;
          } else if (_source30.is_LiteralBool) {
            bool _961___mcc_h158 = _source30.dtor_bvalue;
            return _932_default;
          } else if (_source30.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _962___mcc_h160 = _source30.dtor_value;
            bool _963___mcc_h161 = _source30.dtor_binary;
            return _932_default;
          } else if (_source30.is_DeclareVar) {
            RAST._IDeclareType _964___mcc_h164 = _source30.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _965___mcc_h165 = _source30.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _966___mcc_h166 = _source30.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _967___mcc_h167 = _source30.dtor_optRhs;
            Std.Wrappers._IOption<RAST._IType> _source31 = _966___mcc_h166;
            if (_source31.is_None) {
              return _932_default;
            } else {
              RAST._IType _968___mcc_h172 = _source31.dtor_value;
              Std.Wrappers._IOption<RAST._IExpr> _source32 = _967___mcc_h167;
              if (_source32.is_None) {
                RAST._IExpr _source33 = _939___mcc_h113;
                if (_source33.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _969___mcc_h174 = _source33.dtor_content;
                  return _932_default;
                } else if (_source33.is_ExprFromType) {
                  RAST._IType _970___mcc_h176 = _source33.dtor_tpe;
                  return _932_default;
                } else if (_source33.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _971___mcc_h178 = _source33.dtor_name;
                  return _932_default;
                } else if (_source33.is_Match) {
                  RAST._IExpr _972___mcc_h180 = _source33.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _973___mcc_h181 = _source33.dtor_cases;
                  return _932_default;
                } else if (_source33.is_StmtExpr) {
                  RAST._IExpr _974___mcc_h184 = _source33.dtor_stmt;
                  RAST._IExpr _975___mcc_h185 = _source33.dtor_rhs;
                  RAST._IExpr _source34 = _974___mcc_h184;
                  if (_source34.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _976___mcc_h188 = _source34.dtor_content;
                    return _932_default;
                  } else if (_source34.is_ExprFromType) {
                    RAST._IType _977___mcc_h190 = _source34.dtor_tpe;
                    return _932_default;
                  } else if (_source34.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _978___mcc_h192 = _source34.dtor_name;
                    return _932_default;
                  } else if (_source34.is_Match) {
                    RAST._IExpr _979___mcc_h194 = _source34.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _980___mcc_h195 = _source34.dtor_cases;
                    return _932_default;
                  } else if (_source34.is_StmtExpr) {
                    RAST._IExpr _981___mcc_h198 = _source34.dtor_stmt;
                    RAST._IExpr _982___mcc_h199 = _source34.dtor_rhs;
                    return _932_default;
                  } else if (_source34.is_Block) {
                    RAST._IExpr _983___mcc_h202 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_StructBuild) {
                    RAST._IExpr _984___mcc_h204 = _source34.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _985___mcc_h205 = _source34.dtor_assignments;
                    return _932_default;
                  } else if (_source34.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _986___mcc_h208 = _source34.dtor_arguments;
                    return _932_default;
                  } else if (_source34.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _987___mcc_h210 = _source34.dtor_op1;
                    RAST._IExpr _988___mcc_h211 = _source34.dtor_underlying;
                    DAST.Format._IUnOpFormat _989___mcc_h212 = _source34.dtor_format;
                    return _932_default;
                  } else if (_source34.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _990___mcc_h216 = _source34.dtor_op2;
                    RAST._IExpr _991___mcc_h217 = _source34.dtor_left;
                    RAST._IExpr _992___mcc_h218 = _source34.dtor_right;
                    DAST.Format._IBinOpFormat _993___mcc_h219 = _source34.dtor_format2;
                    return _932_default;
                  } else if (_source34.is_TypeAscription) {
                    RAST._IExpr _994___mcc_h224 = _source34.dtor_left;
                    RAST._IType _995___mcc_h225 = _source34.dtor_tpe;
                    return _932_default;
                  } else if (_source34.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _996___mcc_h228 = _source34.dtor_value;
                    return _932_default;
                  } else if (_source34.is_LiteralBool) {
                    bool _997___mcc_h230 = _source34.dtor_bvalue;
                    return _932_default;
                  } else if (_source34.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _998___mcc_h232 = _source34.dtor_value;
                    bool _999___mcc_h233 = _source34.dtor_binary;
                    return _932_default;
                  } else if (_source34.is_DeclareVar) {
                    RAST._IDeclareType _1000___mcc_h236 = _source34.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _1001___mcc_h237 = _source34.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _1002___mcc_h238 = _source34.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _1003___mcc_h239 = _source34.dtor_optRhs;
                    return _932_default;
                  } else if (_source34.is_Assign) {
                    Std.Wrappers._IOption<RAST._IAssignLhs> _1004___mcc_h244 = _source34.dtor_names;
                    RAST._IExpr _1005___mcc_h245 = _source34.dtor_rhs;
                    RAST._IExpr _1006_last = _975___mcc_h185;
                    RAST._IExpr _1007_rhs = _1005___mcc_h245;
                    Std.Wrappers._IOption<RAST._IAssignLhs> _1008_name2 = _1004___mcc_h244;
                    RAST._IType _1009_tpe = _968___mcc_h172;
                    Dafny.ISequence<Dafny.Rune> _1010_name = _965___mcc_h165;
                    RAST._IDeclareType _1011_mod = _964___mcc_h164;
                    if (object.Equals(_1008_name2, Std.Wrappers.Option<RAST._IAssignLhs>.create_Some(RAST.AssignLhs.create_LocalVar(_1010_name)))) {
                      return (BigInteger.One) + (_932_default);
                    } else {
                      return _932_default;
                    }
                  } else if (_source34.is_IfExpr) {
                    RAST._IExpr _1012___mcc_h248 = _source34.dtor_cond;
                    RAST._IExpr _1013___mcc_h249 = _source34.dtor_thn;
                    RAST._IExpr _1014___mcc_h250 = _source34.dtor_els;
                    return _932_default;
                  } else if (_source34.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1015___mcc_h254 = _source34.dtor_optCond;
                    RAST._IExpr _1016___mcc_h255 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1017___mcc_h258 = _source34.dtor_name;
                    RAST._IExpr _1018___mcc_h259 = _source34.dtor_range;
                    RAST._IExpr _1019___mcc_h260 = _source34.dtor_body;
                    return _932_default;
                  } else if (_source34.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1020___mcc_h264 = _source34.dtor_lbl;
                    RAST._IExpr _1021___mcc_h265 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1022___mcc_h268 = _source34.dtor_optLbl;
                    return _932_default;
                  } else if (_source34.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1023___mcc_h270 = _source34.dtor_optLbl;
                    return _932_default;
                  } else if (_source34.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1024___mcc_h272 = _source34.dtor_optExpr;
                    return _932_default;
                  } else if (_source34.is_CallType) {
                    RAST._IExpr _1025___mcc_h274 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1026___mcc_h275 = _source34.dtor_typeParameters;
                    return _932_default;
                  } else if (_source34.is_Call) {
                    RAST._IExpr _1027___mcc_h278 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1028___mcc_h279 = _source34.dtor_arguments;
                    return _932_default;
                  } else if (_source34.is_Select) {
                    RAST._IExpr _1029___mcc_h282 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1030___mcc_h283 = _source34.dtor_name;
                    return _932_default;
                  } else {
                    RAST._IExpr _1031___mcc_h286 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1032___mcc_h287 = _source34.dtor_name;
                    return _932_default;
                  }
                } else if (_source33.is_Block) {
                  RAST._IExpr _1033___mcc_h290 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_StructBuild) {
                  RAST._IExpr _1034___mcc_h292 = _source33.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1035___mcc_h293 = _source33.dtor_assignments;
                  return _932_default;
                } else if (_source33.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1036___mcc_h296 = _source33.dtor_arguments;
                  return _932_default;
                } else if (_source33.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1037___mcc_h298 = _source33.dtor_op1;
                  RAST._IExpr _1038___mcc_h299 = _source33.dtor_underlying;
                  DAST.Format._IUnOpFormat _1039___mcc_h300 = _source33.dtor_format;
                  return _932_default;
                } else if (_source33.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1040___mcc_h304 = _source33.dtor_op2;
                  RAST._IExpr _1041___mcc_h305 = _source33.dtor_left;
                  RAST._IExpr _1042___mcc_h306 = _source33.dtor_right;
                  DAST.Format._IBinOpFormat _1043___mcc_h307 = _source33.dtor_format2;
                  return _932_default;
                } else if (_source33.is_TypeAscription) {
                  RAST._IExpr _1044___mcc_h312 = _source33.dtor_left;
                  RAST._IType _1045___mcc_h313 = _source33.dtor_tpe;
                  return _932_default;
                } else if (_source33.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1046___mcc_h316 = _source33.dtor_value;
                  return _932_default;
                } else if (_source33.is_LiteralBool) {
                  bool _1047___mcc_h318 = _source33.dtor_bvalue;
                  return _932_default;
                } else if (_source33.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1048___mcc_h320 = _source33.dtor_value;
                  bool _1049___mcc_h321 = _source33.dtor_binary;
                  return _932_default;
                } else if (_source33.is_DeclareVar) {
                  RAST._IDeclareType _1050___mcc_h324 = _source33.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1051___mcc_h325 = _source33.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1052___mcc_h326 = _source33.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1053___mcc_h327 = _source33.dtor_optRhs;
                  return _932_default;
                } else if (_source33.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _1054___mcc_h332 = _source33.dtor_names;
                  RAST._IExpr _1055___mcc_h333 = _source33.dtor_rhs;
                  return _932_default;
                } else if (_source33.is_IfExpr) {
                  RAST._IExpr _1056___mcc_h336 = _source33.dtor_cond;
                  RAST._IExpr _1057___mcc_h337 = _source33.dtor_thn;
                  RAST._IExpr _1058___mcc_h338 = _source33.dtor_els;
                  return _932_default;
                } else if (_source33.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1059___mcc_h342 = _source33.dtor_optCond;
                  RAST._IExpr _1060___mcc_h343 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1061___mcc_h346 = _source33.dtor_name;
                  RAST._IExpr _1062___mcc_h347 = _source33.dtor_range;
                  RAST._IExpr _1063___mcc_h348 = _source33.dtor_body;
                  return _932_default;
                } else if (_source33.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1064___mcc_h352 = _source33.dtor_lbl;
                  RAST._IExpr _1065___mcc_h353 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1066___mcc_h356 = _source33.dtor_optLbl;
                  return _932_default;
                } else if (_source33.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1067___mcc_h358 = _source33.dtor_optLbl;
                  return _932_default;
                } else if (_source33.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1068___mcc_h360 = _source33.dtor_optExpr;
                  return _932_default;
                } else if (_source33.is_CallType) {
                  RAST._IExpr _1069___mcc_h362 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1070___mcc_h363 = _source33.dtor_typeParameters;
                  return _932_default;
                } else if (_source33.is_Call) {
                  RAST._IExpr _1071___mcc_h366 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1072___mcc_h367 = _source33.dtor_arguments;
                  return _932_default;
                } else if (_source33.is_Select) {
                  RAST._IExpr _1073___mcc_h370 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1074___mcc_h371 = _source33.dtor_name;
                  return _932_default;
                } else {
                  RAST._IExpr _1075___mcc_h374 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1076___mcc_h375 = _source33.dtor_name;
                  return _932_default;
                }
              } else {
                RAST._IExpr _1077___mcc_h378 = _source32.dtor_value;
                return _932_default;
              }
            }
          } else if (_source30.is_Assign) {
            Std.Wrappers._IOption<RAST._IAssignLhs> _1078___mcc_h380 = _source30.dtor_names;
            RAST._IExpr _1079___mcc_h381 = _source30.dtor_rhs;
            return _932_default;
          } else if (_source30.is_IfExpr) {
            RAST._IExpr _1080___mcc_h384 = _source30.dtor_cond;
            RAST._IExpr _1081___mcc_h385 = _source30.dtor_thn;
            RAST._IExpr _1082___mcc_h386 = _source30.dtor_els;
            RAST._IExpr _source35 = _1080___mcc_h384;
            if (_source35.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1083___mcc_h390 = _source35.dtor_content;
              return _932_default;
            } else if (_source35.is_ExprFromType) {
              RAST._IType _1084___mcc_h392 = _source35.dtor_tpe;
              return _932_default;
            } else if (_source35.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1085___mcc_h394 = _source35.dtor_name;
              return _932_default;
            } else if (_source35.is_Match) {
              RAST._IExpr _1086___mcc_h396 = _source35.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1087___mcc_h397 = _source35.dtor_cases;
              return _932_default;
            } else if (_source35.is_StmtExpr) {
              RAST._IExpr _1088___mcc_h400 = _source35.dtor_stmt;
              RAST._IExpr _1089___mcc_h401 = _source35.dtor_rhs;
              return _932_default;
            } else if (_source35.is_Block) {
              RAST._IExpr _1090___mcc_h404 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_StructBuild) {
              RAST._IExpr _1091___mcc_h406 = _source35.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1092___mcc_h407 = _source35.dtor_assignments;
              return _932_default;
            } else if (_source35.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1093___mcc_h410 = _source35.dtor_arguments;
              return _932_default;
            } else if (_source35.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1094___mcc_h412 = _source35.dtor_op1;
              RAST._IExpr _1095___mcc_h413 = _source35.dtor_underlying;
              DAST.Format._IUnOpFormat _1096___mcc_h414 = _source35.dtor_format;
              if (object.Equals(_1094___mcc_h412, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
                RAST._IExpr _source36 = _1095___mcc_h413;
                if (_source36.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1097___mcc_h418 = _source36.dtor_content;
                  return _932_default;
                } else if (_source36.is_ExprFromType) {
                  RAST._IType _1098___mcc_h420 = _source36.dtor_tpe;
                  return _932_default;
                } else if (_source36.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1099___mcc_h422 = _source36.dtor_name;
                  return _932_default;
                } else if (_source36.is_Match) {
                  RAST._IExpr _1100___mcc_h424 = _source36.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1101___mcc_h425 = _source36.dtor_cases;
                  return _932_default;
                } else if (_source36.is_StmtExpr) {
                  RAST._IExpr _1102___mcc_h428 = _source36.dtor_stmt;
                  RAST._IExpr _1103___mcc_h429 = _source36.dtor_rhs;
                  return _932_default;
                } else if (_source36.is_Block) {
                  RAST._IExpr _1104___mcc_h432 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_StructBuild) {
                  RAST._IExpr _1105___mcc_h434 = _source36.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1106___mcc_h435 = _source36.dtor_assignments;
                  return _932_default;
                } else if (_source36.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1107___mcc_h438 = _source36.dtor_arguments;
                  return _932_default;
                } else if (_source36.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1108___mcc_h440 = _source36.dtor_op1;
                  RAST._IExpr _1109___mcc_h441 = _source36.dtor_underlying;
                  DAST.Format._IUnOpFormat _1110___mcc_h442 = _source36.dtor_format;
                  return _932_default;
                } else if (_source36.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1111___mcc_h446 = _source36.dtor_op2;
                  RAST._IExpr _1112___mcc_h447 = _source36.dtor_left;
                  RAST._IExpr _1113___mcc_h448 = _source36.dtor_right;
                  DAST.Format._IBinOpFormat _1114___mcc_h449 = _source36.dtor_format2;
                  if (object.Equals(_1111___mcc_h446, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                    RAST._IExpr _source37 = _1081___mcc_h385;
                    if (_source37.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _1115___mcc_h454 = _source37.dtor_content;
                      if (object.Equals(_1115___mcc_h454, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                        RAST._IExpr _source38 = _1082___mcc_h386;
                        if (_source38.is_RawExpr) {
                          Dafny.ISequence<Dafny.Rune> _1116___mcc_h456 = _source38.dtor_content;
                          if (object.Equals(_1116___mcc_h456, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                            RAST._IExpr _1117_last = _939___mcc_h113;
                            DAST.Format._IUnOpFormat _1118_of = _1096___mcc_h414;
                            DAST.Format._IBinOpFormat _1119_f = _1114___mcc_h449;
                            RAST._IExpr _1120_b = _1113___mcc_h448;
                            RAST._IExpr _1121_a = _1112___mcc_h447;
                            return (BigInteger.One) + (_932_default);
                          } else {
                            return _932_default;
                          }
                        } else if (_source38.is_ExprFromType) {
                          RAST._IType _1122___mcc_h458 = _source38.dtor_tpe;
                          return _932_default;
                        } else if (_source38.is_Identifier) {
                          Dafny.ISequence<Dafny.Rune> _1123___mcc_h460 = _source38.dtor_name;
                          return _932_default;
                        } else if (_source38.is_Match) {
                          RAST._IExpr _1124___mcc_h462 = _source38.dtor_matchee;
                          Dafny.ISequence<RAST._IMatchCase> _1125___mcc_h463 = _source38.dtor_cases;
                          return _932_default;
                        } else if (_source38.is_StmtExpr) {
                          RAST._IExpr _1126___mcc_h466 = _source38.dtor_stmt;
                          RAST._IExpr _1127___mcc_h467 = _source38.dtor_rhs;
                          return _932_default;
                        } else if (_source38.is_Block) {
                          RAST._IExpr _1128___mcc_h470 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_StructBuild) {
                          RAST._IExpr _1129___mcc_h472 = _source38.dtor_underlying;
                          Dafny.ISequence<RAST._IAssignIdentifier> _1130___mcc_h473 = _source38.dtor_assignments;
                          return _932_default;
                        } else if (_source38.is_Tuple) {
                          Dafny.ISequence<RAST._IExpr> _1131___mcc_h476 = _source38.dtor_arguments;
                          return _932_default;
                        } else if (_source38.is_UnaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1132___mcc_h478 = _source38.dtor_op1;
                          RAST._IExpr _1133___mcc_h479 = _source38.dtor_underlying;
                          DAST.Format._IUnOpFormat _1134___mcc_h480 = _source38.dtor_format;
                          return _932_default;
                        } else if (_source38.is_BinaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1135___mcc_h484 = _source38.dtor_op2;
                          RAST._IExpr _1136___mcc_h485 = _source38.dtor_left;
                          RAST._IExpr _1137___mcc_h486 = _source38.dtor_right;
                          DAST.Format._IBinOpFormat _1138___mcc_h487 = _source38.dtor_format2;
                          return _932_default;
                        } else if (_source38.is_TypeAscription) {
                          RAST._IExpr _1139___mcc_h492 = _source38.dtor_left;
                          RAST._IType _1140___mcc_h493 = _source38.dtor_tpe;
                          return _932_default;
                        } else if (_source38.is_LiteralInt) {
                          Dafny.ISequence<Dafny.Rune> _1141___mcc_h496 = _source38.dtor_value;
                          return _932_default;
                        } else if (_source38.is_LiteralBool) {
                          bool _1142___mcc_h498 = _source38.dtor_bvalue;
                          return _932_default;
                        } else if (_source38.is_LiteralString) {
                          Dafny.ISequence<Dafny.Rune> _1143___mcc_h500 = _source38.dtor_value;
                          bool _1144___mcc_h501 = _source38.dtor_binary;
                          return _932_default;
                        } else if (_source38.is_DeclareVar) {
                          RAST._IDeclareType _1145___mcc_h504 = _source38.dtor_declareType;
                          Dafny.ISequence<Dafny.Rune> _1146___mcc_h505 = _source38.dtor_name;
                          Std.Wrappers._IOption<RAST._IType> _1147___mcc_h506 = _source38.dtor_optType;
                          Std.Wrappers._IOption<RAST._IExpr> _1148___mcc_h507 = _source38.dtor_optRhs;
                          return _932_default;
                        } else if (_source38.is_Assign) {
                          Std.Wrappers._IOption<RAST._IAssignLhs> _1149___mcc_h512 = _source38.dtor_names;
                          RAST._IExpr _1150___mcc_h513 = _source38.dtor_rhs;
                          return _932_default;
                        } else if (_source38.is_IfExpr) {
                          RAST._IExpr _1151___mcc_h516 = _source38.dtor_cond;
                          RAST._IExpr _1152___mcc_h517 = _source38.dtor_thn;
                          RAST._IExpr _1153___mcc_h518 = _source38.dtor_els;
                          return _932_default;
                        } else if (_source38.is_Loop) {
                          Std.Wrappers._IOption<RAST._IExpr> _1154___mcc_h522 = _source38.dtor_optCond;
                          RAST._IExpr _1155___mcc_h523 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_For) {
                          Dafny.ISequence<Dafny.Rune> _1156___mcc_h526 = _source38.dtor_name;
                          RAST._IExpr _1157___mcc_h527 = _source38.dtor_range;
                          RAST._IExpr _1158___mcc_h528 = _source38.dtor_body;
                          return _932_default;
                        } else if (_source38.is_Labelled) {
                          Dafny.ISequence<Dafny.Rune> _1159___mcc_h532 = _source38.dtor_lbl;
                          RAST._IExpr _1160___mcc_h533 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_Break) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1161___mcc_h536 = _source38.dtor_optLbl;
                          return _932_default;
                        } else if (_source38.is_Continue) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1162___mcc_h538 = _source38.dtor_optLbl;
                          return _932_default;
                        } else if (_source38.is_Return) {
                          Std.Wrappers._IOption<RAST._IExpr> _1163___mcc_h540 = _source38.dtor_optExpr;
                          return _932_default;
                        } else if (_source38.is_CallType) {
                          RAST._IExpr _1164___mcc_h542 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IType> _1165___mcc_h543 = _source38.dtor_typeParameters;
                          return _932_default;
                        } else if (_source38.is_Call) {
                          RAST._IExpr _1166___mcc_h546 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IExpr> _1167___mcc_h547 = _source38.dtor_arguments;
                          return _932_default;
                        } else if (_source38.is_Select) {
                          RAST._IExpr _1168___mcc_h550 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1169___mcc_h551 = _source38.dtor_name;
                          return _932_default;
                        } else {
                          RAST._IExpr _1170___mcc_h554 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1171___mcc_h555 = _source38.dtor_name;
                          return _932_default;
                        }
                      } else {
                        return _932_default;
                      }
                    } else if (_source37.is_ExprFromType) {
                      RAST._IType _1172___mcc_h558 = _source37.dtor_tpe;
                      return _932_default;
                    } else if (_source37.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _1173___mcc_h560 = _source37.dtor_name;
                      return _932_default;
                    } else if (_source37.is_Match) {
                      RAST._IExpr _1174___mcc_h562 = _source37.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _1175___mcc_h563 = _source37.dtor_cases;
                      return _932_default;
                    } else if (_source37.is_StmtExpr) {
                      RAST._IExpr _1176___mcc_h566 = _source37.dtor_stmt;
                      RAST._IExpr _1177___mcc_h567 = _source37.dtor_rhs;
                      return _932_default;
                    } else if (_source37.is_Block) {
                      RAST._IExpr _1178___mcc_h570 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_StructBuild) {
                      RAST._IExpr _1179___mcc_h572 = _source37.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _1180___mcc_h573 = _source37.dtor_assignments;
                      return _932_default;
                    } else if (_source37.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _1181___mcc_h576 = _source37.dtor_arguments;
                      return _932_default;
                    } else if (_source37.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1182___mcc_h578 = _source37.dtor_op1;
                      RAST._IExpr _1183___mcc_h579 = _source37.dtor_underlying;
                      DAST.Format._IUnOpFormat _1184___mcc_h580 = _source37.dtor_format;
                      return _932_default;
                    } else if (_source37.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1185___mcc_h584 = _source37.dtor_op2;
                      RAST._IExpr _1186___mcc_h585 = _source37.dtor_left;
                      RAST._IExpr _1187___mcc_h586 = _source37.dtor_right;
                      DAST.Format._IBinOpFormat _1188___mcc_h587 = _source37.dtor_format2;
                      return _932_default;
                    } else if (_source37.is_TypeAscription) {
                      RAST._IExpr _1189___mcc_h592 = _source37.dtor_left;
                      RAST._IType _1190___mcc_h593 = _source37.dtor_tpe;
                      return _932_default;
                    } else if (_source37.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _1191___mcc_h596 = _source37.dtor_value;
                      return _932_default;
                    } else if (_source37.is_LiteralBool) {
                      bool _1192___mcc_h598 = _source37.dtor_bvalue;
                      return _932_default;
                    } else if (_source37.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _1193___mcc_h600 = _source37.dtor_value;
                      bool _1194___mcc_h601 = _source37.dtor_binary;
                      return _932_default;
                    } else if (_source37.is_DeclareVar) {
                      RAST._IDeclareType _1195___mcc_h604 = _source37.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _1196___mcc_h605 = _source37.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _1197___mcc_h606 = _source37.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _1198___mcc_h607 = _source37.dtor_optRhs;
                      return _932_default;
                    } else if (_source37.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _1199___mcc_h612 = _source37.dtor_names;
                      RAST._IExpr _1200___mcc_h613 = _source37.dtor_rhs;
                      return _932_default;
                    } else if (_source37.is_IfExpr) {
                      RAST._IExpr _1201___mcc_h616 = _source37.dtor_cond;
                      RAST._IExpr _1202___mcc_h617 = _source37.dtor_thn;
                      RAST._IExpr _1203___mcc_h618 = _source37.dtor_els;
                      return _932_default;
                    } else if (_source37.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _1204___mcc_h622 = _source37.dtor_optCond;
                      RAST._IExpr _1205___mcc_h623 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_For) {
                      Dafny.ISequence<Dafny.Rune> _1206___mcc_h626 = _source37.dtor_name;
                      RAST._IExpr _1207___mcc_h627 = _source37.dtor_range;
                      RAST._IExpr _1208___mcc_h628 = _source37.dtor_body;
                      return _932_default;
                    } else if (_source37.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _1209___mcc_h632 = _source37.dtor_lbl;
                      RAST._IExpr _1210___mcc_h633 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1211___mcc_h636 = _source37.dtor_optLbl;
                      return _932_default;
                    } else if (_source37.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1212___mcc_h638 = _source37.dtor_optLbl;
                      return _932_default;
                    } else if (_source37.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _1213___mcc_h640 = _source37.dtor_optExpr;
                      return _932_default;
                    } else if (_source37.is_CallType) {
                      RAST._IExpr _1214___mcc_h642 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IType> _1215___mcc_h643 = _source37.dtor_typeParameters;
                      return _932_default;
                    } else if (_source37.is_Call) {
                      RAST._IExpr _1216___mcc_h646 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _1217___mcc_h647 = _source37.dtor_arguments;
                      return _932_default;
                    } else if (_source37.is_Select) {
                      RAST._IExpr _1218___mcc_h650 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1219___mcc_h651 = _source37.dtor_name;
                      return _932_default;
                    } else {
                      RAST._IExpr _1220___mcc_h654 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1221___mcc_h655 = _source37.dtor_name;
                      return _932_default;
                    }
                  } else {
                    return _932_default;
                  }
                } else if (_source36.is_TypeAscription) {
                  RAST._IExpr _1222___mcc_h658 = _source36.dtor_left;
                  RAST._IType _1223___mcc_h659 = _source36.dtor_tpe;
                  return _932_default;
                } else if (_source36.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1224___mcc_h662 = _source36.dtor_value;
                  return _932_default;
                } else if (_source36.is_LiteralBool) {
                  bool _1225___mcc_h664 = _source36.dtor_bvalue;
                  return _932_default;
                } else if (_source36.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1226___mcc_h666 = _source36.dtor_value;
                  bool _1227___mcc_h667 = _source36.dtor_binary;
                  return _932_default;
                } else if (_source36.is_DeclareVar) {
                  RAST._IDeclareType _1228___mcc_h670 = _source36.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1229___mcc_h671 = _source36.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1230___mcc_h672 = _source36.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1231___mcc_h673 = _source36.dtor_optRhs;
                  return _932_default;
                } else if (_source36.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _1232___mcc_h678 = _source36.dtor_names;
                  RAST._IExpr _1233___mcc_h679 = _source36.dtor_rhs;
                  return _932_default;
                } else if (_source36.is_IfExpr) {
                  RAST._IExpr _1234___mcc_h682 = _source36.dtor_cond;
                  RAST._IExpr _1235___mcc_h683 = _source36.dtor_thn;
                  RAST._IExpr _1236___mcc_h684 = _source36.dtor_els;
                  return _932_default;
                } else if (_source36.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1237___mcc_h688 = _source36.dtor_optCond;
                  RAST._IExpr _1238___mcc_h689 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1239___mcc_h692 = _source36.dtor_name;
                  RAST._IExpr _1240___mcc_h693 = _source36.dtor_range;
                  RAST._IExpr _1241___mcc_h694 = _source36.dtor_body;
                  return _932_default;
                } else if (_source36.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1242___mcc_h698 = _source36.dtor_lbl;
                  RAST._IExpr _1243___mcc_h699 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1244___mcc_h702 = _source36.dtor_optLbl;
                  return _932_default;
                } else if (_source36.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1245___mcc_h704 = _source36.dtor_optLbl;
                  return _932_default;
                } else if (_source36.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1246___mcc_h706 = _source36.dtor_optExpr;
                  return _932_default;
                } else if (_source36.is_CallType) {
                  RAST._IExpr _1247___mcc_h708 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1248___mcc_h709 = _source36.dtor_typeParameters;
                  return _932_default;
                } else if (_source36.is_Call) {
                  RAST._IExpr _1249___mcc_h712 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1250___mcc_h713 = _source36.dtor_arguments;
                  return _932_default;
                } else if (_source36.is_Select) {
                  RAST._IExpr _1251___mcc_h716 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1252___mcc_h717 = _source36.dtor_name;
                  return _932_default;
                } else {
                  RAST._IExpr _1253___mcc_h720 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1254___mcc_h721 = _source36.dtor_name;
                  return _932_default;
                }
              } else {
                return _932_default;
              }
            } else if (_source35.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1255___mcc_h724 = _source35.dtor_op2;
              RAST._IExpr _1256___mcc_h725 = _source35.dtor_left;
              RAST._IExpr _1257___mcc_h726 = _source35.dtor_right;
              DAST.Format._IBinOpFormat _1258___mcc_h727 = _source35.dtor_format2;
              return _932_default;
            } else if (_source35.is_TypeAscription) {
              RAST._IExpr _1259___mcc_h732 = _source35.dtor_left;
              RAST._IType _1260___mcc_h733 = _source35.dtor_tpe;
              return _932_default;
            } else if (_source35.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1261___mcc_h736 = _source35.dtor_value;
              return _932_default;
            } else if (_source35.is_LiteralBool) {
              bool _1262___mcc_h738 = _source35.dtor_bvalue;
              return _932_default;
            } else if (_source35.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1263___mcc_h740 = _source35.dtor_value;
              bool _1264___mcc_h741 = _source35.dtor_binary;
              return _932_default;
            } else if (_source35.is_DeclareVar) {
              RAST._IDeclareType _1265___mcc_h744 = _source35.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1266___mcc_h745 = _source35.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1267___mcc_h746 = _source35.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1268___mcc_h747 = _source35.dtor_optRhs;
              return _932_default;
            } else if (_source35.is_Assign) {
              Std.Wrappers._IOption<RAST._IAssignLhs> _1269___mcc_h752 = _source35.dtor_names;
              RAST._IExpr _1270___mcc_h753 = _source35.dtor_rhs;
              return _932_default;
            } else if (_source35.is_IfExpr) {
              RAST._IExpr _1271___mcc_h756 = _source35.dtor_cond;
              RAST._IExpr _1272___mcc_h757 = _source35.dtor_thn;
              RAST._IExpr _1273___mcc_h758 = _source35.dtor_els;
              return _932_default;
            } else if (_source35.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1274___mcc_h762 = _source35.dtor_optCond;
              RAST._IExpr _1275___mcc_h763 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_For) {
              Dafny.ISequence<Dafny.Rune> _1276___mcc_h766 = _source35.dtor_name;
              RAST._IExpr _1277___mcc_h767 = _source35.dtor_range;
              RAST._IExpr _1278___mcc_h768 = _source35.dtor_body;
              return _932_default;
            } else if (_source35.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1279___mcc_h772 = _source35.dtor_lbl;
              RAST._IExpr _1280___mcc_h773 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1281___mcc_h776 = _source35.dtor_optLbl;
              return _932_default;
            } else if (_source35.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1282___mcc_h778 = _source35.dtor_optLbl;
              return _932_default;
            } else if (_source35.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1283___mcc_h780 = _source35.dtor_optExpr;
              return _932_default;
            } else if (_source35.is_CallType) {
              RAST._IExpr _1284___mcc_h782 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IType> _1285___mcc_h783 = _source35.dtor_typeParameters;
              return _932_default;
            } else if (_source35.is_Call) {
              RAST._IExpr _1286___mcc_h786 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1287___mcc_h787 = _source35.dtor_arguments;
              return _932_default;
            } else if (_source35.is_Select) {
              RAST._IExpr _1288___mcc_h790 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1289___mcc_h791 = _source35.dtor_name;
              return _932_default;
            } else {
              RAST._IExpr _1290___mcc_h794 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1291___mcc_h795 = _source35.dtor_name;
              return _932_default;
            }
          } else if (_source30.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1292___mcc_h798 = _source30.dtor_optCond;
            RAST._IExpr _1293___mcc_h799 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_For) {
            Dafny.ISequence<Dafny.Rune> _1294___mcc_h802 = _source30.dtor_name;
            RAST._IExpr _1295___mcc_h803 = _source30.dtor_range;
            RAST._IExpr _1296___mcc_h804 = _source30.dtor_body;
            return _932_default;
          } else if (_source30.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1297___mcc_h808 = _source30.dtor_lbl;
            RAST._IExpr _1298___mcc_h809 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1299___mcc_h812 = _source30.dtor_optLbl;
            return _932_default;
          } else if (_source30.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1300___mcc_h814 = _source30.dtor_optLbl;
            return _932_default;
          } else if (_source30.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1301___mcc_h816 = _source30.dtor_optExpr;
            return _932_default;
          } else if (_source30.is_CallType) {
            RAST._IExpr _1302___mcc_h818 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IType> _1303___mcc_h819 = _source30.dtor_typeParameters;
            return _932_default;
          } else if (_source30.is_Call) {
            RAST._IExpr _1304___mcc_h822 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1305___mcc_h823 = _source30.dtor_arguments;
            return _932_default;
          } else if (_source30.is_Select) {
            RAST._IExpr _1306___mcc_h826 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1307___mcc_h827 = _source30.dtor_name;
            return _932_default;
          } else {
            RAST._IExpr _1308___mcc_h830 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1309___mcc_h831 = _source30.dtor_name;
            return _932_default;
          }
        } else if (_source29.is_Block) {
          RAST._IExpr _1310___mcc_h834 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_StructBuild) {
          RAST._IExpr _1311___mcc_h836 = _source29.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1312___mcc_h837 = _source29.dtor_assignments;
          return _932_default;
        } else if (_source29.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1313___mcc_h840 = _source29.dtor_arguments;
          return _932_default;
        } else if (_source29.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1314___mcc_h842 = _source29.dtor_op1;
          RAST._IExpr _1315___mcc_h843 = _source29.dtor_underlying;
          DAST.Format._IUnOpFormat _1316___mcc_h844 = _source29.dtor_format;
          return _932_default;
        } else if (_source29.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1317___mcc_h848 = _source29.dtor_op2;
          RAST._IExpr _1318___mcc_h849 = _source29.dtor_left;
          RAST._IExpr _1319___mcc_h850 = _source29.dtor_right;
          DAST.Format._IBinOpFormat _1320___mcc_h851 = _source29.dtor_format2;
          return _932_default;
        } else if (_source29.is_TypeAscription) {
          RAST._IExpr _1321___mcc_h856 = _source29.dtor_left;
          RAST._IType _1322___mcc_h857 = _source29.dtor_tpe;
          return _932_default;
        } else if (_source29.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1323___mcc_h860 = _source29.dtor_value;
          return _932_default;
        } else if (_source29.is_LiteralBool) {
          bool _1324___mcc_h862 = _source29.dtor_bvalue;
          return _932_default;
        } else if (_source29.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1325___mcc_h864 = _source29.dtor_value;
          bool _1326___mcc_h865 = _source29.dtor_binary;
          return _932_default;
        } else if (_source29.is_DeclareVar) {
          RAST._IDeclareType _1327___mcc_h868 = _source29.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1328___mcc_h869 = _source29.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1329___mcc_h870 = _source29.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1330___mcc_h871 = _source29.dtor_optRhs;
          return _932_default;
        } else if (_source29.is_Assign) {
          Std.Wrappers._IOption<RAST._IAssignLhs> _1331___mcc_h876 = _source29.dtor_names;
          RAST._IExpr _1332___mcc_h877 = _source29.dtor_rhs;
          return _932_default;
        } else if (_source29.is_IfExpr) {
          RAST._IExpr _1333___mcc_h880 = _source29.dtor_cond;
          RAST._IExpr _1334___mcc_h881 = _source29.dtor_thn;
          RAST._IExpr _1335___mcc_h882 = _source29.dtor_els;
          return _932_default;
        } else if (_source29.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1336___mcc_h886 = _source29.dtor_optCond;
          RAST._IExpr _1337___mcc_h887 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_For) {
          Dafny.ISequence<Dafny.Rune> _1338___mcc_h890 = _source29.dtor_name;
          RAST._IExpr _1339___mcc_h891 = _source29.dtor_range;
          RAST._IExpr _1340___mcc_h892 = _source29.dtor_body;
          return _932_default;
        } else if (_source29.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1341___mcc_h896 = _source29.dtor_lbl;
          RAST._IExpr _1342___mcc_h897 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1343___mcc_h900 = _source29.dtor_optLbl;
          return _932_default;
        } else if (_source29.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1344___mcc_h902 = _source29.dtor_optLbl;
          return _932_default;
        } else if (_source29.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1345___mcc_h904 = _source29.dtor_optExpr;
          return _932_default;
        } else if (_source29.is_CallType) {
          RAST._IExpr _1346___mcc_h906 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IType> _1347___mcc_h907 = _source29.dtor_typeParameters;
          return _932_default;
        } else if (_source29.is_Call) {
          RAST._IExpr _1348___mcc_h910 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1349___mcc_h911 = _source29.dtor_arguments;
          return _932_default;
        } else if (_source29.is_Select) {
          RAST._IExpr _1350___mcc_h914 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1351___mcc_h915 = _source29.dtor_name;
          return _932_default;
        } else {
          RAST._IExpr _1352___mcc_h918 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1353___mcc_h919 = _source29.dtor_name;
          return _932_default;
        }
      } else if (_source28.is_Block) {
        RAST._IExpr _1354___mcc_h14 = _source28.dtor_underlying;
        RAST._IExpr _1355_underlying = _1354___mcc_h14;
        return (BigInteger.One) + ((_1355_underlying).Height());
      } else if (_source28.is_StructBuild) {
        RAST._IExpr _1356___mcc_h16 = _source28.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1357___mcc_h17 = _source28.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _1358_assignments = _1357___mcc_h17;
        RAST._IExpr _1359_name = _1356___mcc_h16;
        return (BigInteger.One) + (RAST.__default.max((_1359_name).Height(), DAST.Format.__default.SeqToHeight<RAST._IAssignIdentifier>(_1358_assignments, ((System.Func<RAST._IAssignIdentifier, BigInteger>)((_1360_assignment) => {
          return (_1360_assignment).Height();
        })))));
      } else if (_source28.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1361___mcc_h20 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1362_arguments = _1361___mcc_h20;
        return (BigInteger.One) + (DAST.Format.__default.SeqToHeight<RAST._IExpr>(_1362_arguments, ((System.Func<RAST._IExpr, BigInteger>)((_1363_argument) => {
          return (_1363_argument).Height();
        }))));
      } else if (_source28.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1364___mcc_h22 = _source28.dtor_op1;
        RAST._IExpr _1365___mcc_h23 = _source28.dtor_underlying;
        DAST.Format._IUnOpFormat _1366___mcc_h24 = _source28.dtor_format;
        RAST._IExpr _1367_underlying = _1365___mcc_h23;
        return (BigInteger.One) + ((_1367_underlying).Height());
      } else if (_source28.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1368___mcc_h28 = _source28.dtor_op2;
        RAST._IExpr _1369___mcc_h29 = _source28.dtor_left;
        RAST._IExpr _1370___mcc_h30 = _source28.dtor_right;
        DAST.Format._IBinOpFormat _1371___mcc_h31 = _source28.dtor_format2;
        DAST.Format._IBinOpFormat _1372_format = _1371___mcc_h31;
        RAST._IExpr _1373_right = _1370___mcc_h30;
        RAST._IExpr _1374_left = _1369___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _1375_op = _1368___mcc_h28;
        return (BigInteger.One) + (RAST.__default.max((_1374_left).Height(), (_1373_right).Height()));
      } else if (_source28.is_TypeAscription) {
        RAST._IExpr _1376___mcc_h36 = _source28.dtor_left;
        RAST._IType _1377___mcc_h37 = _source28.dtor_tpe;
        RAST._IType _1378_tpe = _1377___mcc_h37;
        RAST._IExpr _1379_left = _1376___mcc_h36;
        return (BigInteger.One) + ((_1379_left).Height());
      } else if (_source28.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _1380___mcc_h40 = _source28.dtor_value;
        return BigInteger.One;
      } else if (_source28.is_LiteralBool) {
        bool _1381___mcc_h42 = _source28.dtor_bvalue;
        return BigInteger.One;
      } else if (_source28.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _1382___mcc_h44 = _source28.dtor_value;
        bool _1383___mcc_h45 = _source28.dtor_binary;
        return BigInteger.One;
      } else if (_source28.is_DeclareVar) {
        RAST._IDeclareType _1384___mcc_h48 = _source28.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _1385___mcc_h49 = _source28.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _1386___mcc_h50 = _source28.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _1387___mcc_h51 = _source28.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _1388_expr = _1387___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _1389_tpe = _1386___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _1390_name = _1385___mcc_h49;
        RAST._IDeclareType _1391_declareType = _1384___mcc_h48;
        return (BigInteger.One) + (((System.Func<Std.Wrappers._IOption<RAST._IExpr>, BigInteger>)((_source39) => {
          if (_source39.is_None) {
            return BigInteger.Zero;
          } else {
            RAST._IExpr _1392___mcc_h922 = _source39.dtor_value;
            RAST._IExpr _1393_e = _1392___mcc_h922;
            return (_1393_e).Height();
          }
        }))(_1388_expr));
      } else if (_source28.is_Assign) {
        Std.Wrappers._IOption<RAST._IAssignLhs> _1394___mcc_h56 = _source28.dtor_names;
        RAST._IExpr _1395___mcc_h57 = _source28.dtor_rhs;
        RAST._IExpr _1396_expr = _1395___mcc_h57;
        Std.Wrappers._IOption<RAST._IAssignLhs> _1397_names = _1394___mcc_h56;
        Std.Wrappers._IOption<RAST._IAssignLhs> _source40 = _1397_names;
        if (_source40.is_None) {
          return (BigInteger.One) + ((_1396_expr).Height());
        } else {
          RAST._IAssignLhs _1398___mcc_h923 = _source40.dtor_value;
          RAST._IAssignLhs _source41 = _1398___mcc_h923;
          if (_source41.is_LocalVar) {
            Dafny.ISequence<Dafny.Rune> _1399___mcc_h925 = _source41.dtor_name;
            return (BigInteger.One) + ((_1396_expr).Height());
          } else if (_source41.is_SelectMember) {
            RAST._IExpr _1400___mcc_h927 = _source41.dtor_on;
            Dafny.ISequence<Dafny.Rune> _1401___mcc_h928 = _source41.dtor_field;
            Dafny.ISequence<Dafny.Rune> _1402_field = _1401___mcc_h928;
            RAST._IExpr _1403_on = _1400___mcc_h927;
            return (BigInteger.One) + (RAST.__default.max((_1403_on).Height(), (_1396_expr).Height()));
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1404___mcc_h931 = _source41.dtor_names;
            return (BigInteger.One) + ((_1396_expr).Height());
          }
        }
      } else if (_source28.is_IfExpr) {
        RAST._IExpr _1405___mcc_h60 = _source28.dtor_cond;
        RAST._IExpr _1406___mcc_h61 = _source28.dtor_thn;
        RAST._IExpr _1407___mcc_h62 = _source28.dtor_els;
        RAST._IExpr _1408_els = _1407___mcc_h62;
        RAST._IExpr _1409_thn = _1406___mcc_h61;
        RAST._IExpr _1410_cond = _1405___mcc_h60;
        return (BigInteger.One) + (RAST.__default.max((_1410_cond).Height(), RAST.__default.max((_1409_thn).Height(), (_1408_els).Height())));
      } else if (_source28.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _1411___mcc_h66 = _source28.dtor_optCond;
        RAST._IExpr _1412___mcc_h67 = _source28.dtor_underlying;
        RAST._IExpr _1413_underlying = _1412___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _1414_optCond = _1411___mcc_h66;
        return (BigInteger.One) + ((((_1414_optCond).is_Some) ? (RAST.__default.max(((_1414_optCond).dtor_value).Height(), (_1413_underlying).Height())) : ((_1413_underlying).Height())));
      } else if (_source28.is_For) {
        Dafny.ISequence<Dafny.Rune> _1415___mcc_h70 = _source28.dtor_name;
        RAST._IExpr _1416___mcc_h71 = _source28.dtor_range;
        RAST._IExpr _1417___mcc_h72 = _source28.dtor_body;
        RAST._IExpr _1418_body = _1417___mcc_h72;
        RAST._IExpr _1419_range = _1416___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _1420_name = _1415___mcc_h70;
        return (BigInteger.One) + (RAST.__default.max((_1419_range).Height(), (_1418_body).Height()));
      } else if (_source28.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _1421___mcc_h76 = _source28.dtor_lbl;
        RAST._IExpr _1422___mcc_h77 = _source28.dtor_underlying;
        RAST._IExpr _1423_underlying = _1422___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _1424_lbl = _1421___mcc_h76;
        return (BigInteger.One) + ((_1423_underlying).Height());
      } else if (_source28.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1425___mcc_h80 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1426___mcc_h82 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _1427___mcc_h84 = _source28.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _1428_optExpr = _1427___mcc_h84;
        if ((_1428_optExpr).is_Some) {
          return (BigInteger.One) + (((_1428_optExpr).dtor_value).Height());
        } else {
          return BigInteger.One;
        }
      } else if (_source28.is_CallType) {
        RAST._IExpr _1429___mcc_h86 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IType> _1430___mcc_h87 = _source28.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _1431_tpes = _1430___mcc_h87;
        RAST._IExpr _1432_obj = _1429___mcc_h86;
        return (BigInteger.One) + (RAST.__default.max((_1432_obj).Height(), DAST.Format.__default.SeqToHeight<RAST._IType>(_1431_tpes, ((System.Func<RAST._IType, BigInteger>)((_1433_tpe) => {
          return BigInteger.One;
        })))));
      } else if (_source28.is_Call) {
        RAST._IExpr _1434___mcc_h90 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _1435___mcc_h91 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1436_args = _1435___mcc_h91;
        RAST._IExpr _1437_obj = _1434___mcc_h90;
        return (BigInteger.One) + (RAST.__default.max((_1437_obj).Height(), DAST.Format.__default.SeqToHeight<RAST._IExpr>(_1436_args, ((System.Func<RAST._IExpr, BigInteger>)((_1438_arg) => {
          return (_1438_arg).Height();
        })))));
      } else if (_source28.is_Select) {
        RAST._IExpr _1439___mcc_h94 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1440___mcc_h95 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1441_name = _1440___mcc_h95;
        RAST._IExpr _1442_expression = _1439___mcc_h94;
        return (BigInteger.One) + ((_1442_expression).Height());
      } else {
        RAST._IExpr _1443___mcc_h98 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1444___mcc_h99 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1445_name = _1444___mcc_h99;
        RAST._IExpr _1446_expression = _1443___mcc_h98;
        return (BigInteger.One) + ((_1446_expression).Height());
      }
    }
    public RAST._IExpr Optimize() {
      RAST._IExpr _source42 = this;
      if (_source42.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _1447___mcc_h0 = _source42.dtor_content;
        return this;
      } else if (_source42.is_ExprFromType) {
        RAST._IType _1448___mcc_h2 = _source42.dtor_tpe;
        return this;
      } else if (_source42.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _1449___mcc_h4 = _source42.dtor_name;
        return this;
      } else if (_source42.is_Match) {
        RAST._IExpr _1450___mcc_h6 = _source42.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _1451___mcc_h7 = _source42.dtor_cases;
        return this;
      } else if (_source42.is_StmtExpr) {
        RAST._IExpr _1452___mcc_h10 = _source42.dtor_stmt;
        RAST._IExpr _1453___mcc_h11 = _source42.dtor_rhs;
        RAST._IExpr _source43 = _1452___mcc_h10;
        if (_source43.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _1454___mcc_h14 = _source43.dtor_content;
          return this;
        } else if (_source43.is_ExprFromType) {
          RAST._IType _1455___mcc_h16 = _source43.dtor_tpe;
          return this;
        } else if (_source43.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _1456___mcc_h18 = _source43.dtor_name;
          return this;
        } else if (_source43.is_Match) {
          RAST._IExpr _1457___mcc_h20 = _source43.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _1458___mcc_h21 = _source43.dtor_cases;
          return this;
        } else if (_source43.is_StmtExpr) {
          RAST._IExpr _1459___mcc_h24 = _source43.dtor_stmt;
          RAST._IExpr _1460___mcc_h25 = _source43.dtor_rhs;
          return this;
        } else if (_source43.is_Block) {
          RAST._IExpr _1461___mcc_h28 = _source43.dtor_underlying;
          return this;
        } else if (_source43.is_StructBuild) {
          RAST._IExpr _1462___mcc_h30 = _source43.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1463___mcc_h31 = _source43.dtor_assignments;
          return this;
        } else if (_source43.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1464___mcc_h34 = _source43.dtor_arguments;
          return this;
        } else if (_source43.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1465___mcc_h36 = _source43.dtor_op1;
          RAST._IExpr _1466___mcc_h37 = _source43.dtor_underlying;
          DAST.Format._IUnOpFormat _1467___mcc_h38 = _source43.dtor_format;
          return this;
        } else if (_source43.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1468___mcc_h42 = _source43.dtor_op2;
          RAST._IExpr _1469___mcc_h43 = _source43.dtor_left;
          RAST._IExpr _1470___mcc_h44 = _source43.dtor_right;
          DAST.Format._IBinOpFormat _1471___mcc_h45 = _source43.dtor_format2;
          return this;
        } else if (_source43.is_TypeAscription) {
          RAST._IExpr _1472___mcc_h50 = _source43.dtor_left;
          RAST._IType _1473___mcc_h51 = _source43.dtor_tpe;
          return this;
        } else if (_source43.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1474___mcc_h54 = _source43.dtor_value;
          return this;
        } else if (_source43.is_LiteralBool) {
          bool _1475___mcc_h56 = _source43.dtor_bvalue;
          return this;
        } else if (_source43.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1476___mcc_h58 = _source43.dtor_value;
          bool _1477___mcc_h59 = _source43.dtor_binary;
          return this;
        } else if (_source43.is_DeclareVar) {
          RAST._IDeclareType _1478___mcc_h62 = _source43.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1479___mcc_h63 = _source43.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1480___mcc_h64 = _source43.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1481___mcc_h65 = _source43.dtor_optRhs;
          Std.Wrappers._IOption<RAST._IType> _source44 = _1480___mcc_h64;
          if (_source44.is_None) {
            return this;
          } else {
            RAST._IType _1482___mcc_h70 = _source44.dtor_value;
            Std.Wrappers._IOption<RAST._IExpr> _source45 = _1481___mcc_h65;
            if (_source45.is_None) {
              RAST._IExpr _source46 = _1453___mcc_h11;
              if (_source46.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1483___mcc_h72 = _source46.dtor_content;
                return this;
              } else if (_source46.is_ExprFromType) {
                RAST._IType _1484___mcc_h74 = _source46.dtor_tpe;
                return this;
              } else if (_source46.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1485___mcc_h76 = _source46.dtor_name;
                return this;
              } else if (_source46.is_Match) {
                RAST._IExpr _1486___mcc_h78 = _source46.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1487___mcc_h79 = _source46.dtor_cases;
                return this;
              } else if (_source46.is_StmtExpr) {
                RAST._IExpr _1488___mcc_h82 = _source46.dtor_stmt;
                RAST._IExpr _1489___mcc_h83 = _source46.dtor_rhs;
                RAST._IExpr _source47 = _1488___mcc_h82;
                if (_source47.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1490___mcc_h86 = _source47.dtor_content;
                  return this;
                } else if (_source47.is_ExprFromType) {
                  RAST._IType _1491___mcc_h88 = _source47.dtor_tpe;
                  return this;
                } else if (_source47.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1492___mcc_h90 = _source47.dtor_name;
                  return this;
                } else if (_source47.is_Match) {
                  RAST._IExpr _1493___mcc_h92 = _source47.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1494___mcc_h93 = _source47.dtor_cases;
                  return this;
                } else if (_source47.is_StmtExpr) {
                  RAST._IExpr _1495___mcc_h96 = _source47.dtor_stmt;
                  RAST._IExpr _1496___mcc_h97 = _source47.dtor_rhs;
                  return this;
                } else if (_source47.is_Block) {
                  RAST._IExpr _1497___mcc_h100 = _source47.dtor_underlying;
                  return this;
                } else if (_source47.is_StructBuild) {
                  RAST._IExpr _1498___mcc_h102 = _source47.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1499___mcc_h103 = _source47.dtor_assignments;
                  return this;
                } else if (_source47.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1500___mcc_h106 = _source47.dtor_arguments;
                  return this;
                } else if (_source47.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1501___mcc_h108 = _source47.dtor_op1;
                  RAST._IExpr _1502___mcc_h109 = _source47.dtor_underlying;
                  DAST.Format._IUnOpFormat _1503___mcc_h110 = _source47.dtor_format;
                  return this;
                } else if (_source47.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1504___mcc_h114 = _source47.dtor_op2;
                  RAST._IExpr _1505___mcc_h115 = _source47.dtor_left;
                  RAST._IExpr _1506___mcc_h116 = _source47.dtor_right;
                  DAST.Format._IBinOpFormat _1507___mcc_h117 = _source47.dtor_format2;
                  return this;
                } else if (_source47.is_TypeAscription) {
                  RAST._IExpr _1508___mcc_h122 = _source47.dtor_left;
                  RAST._IType _1509___mcc_h123 = _source47.dtor_tpe;
                  return this;
                } else if (_source47.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1510___mcc_h126 = _source47.dtor_value;
                  return this;
                } else if (_source47.is_LiteralBool) {
                  bool _1511___mcc_h128 = _source47.dtor_bvalue;
                  return this;
                } else if (_source47.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1512___mcc_h130 = _source47.dtor_value;
                  bool _1513___mcc_h131 = _source47.dtor_binary;
                  return this;
                } else if (_source47.is_DeclareVar) {
                  RAST._IDeclareType _1514___mcc_h134 = _source47.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1515___mcc_h135 = _source47.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1516___mcc_h136 = _source47.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1517___mcc_h137 = _source47.dtor_optRhs;
                  return this;
                } else if (_source47.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _1518___mcc_h142 = _source47.dtor_names;
                  RAST._IExpr _1519___mcc_h143 = _source47.dtor_rhs;
                  RAST._IExpr _1520_last = _1489___mcc_h83;
                  RAST._IExpr _1521_rhs = _1519___mcc_h143;
                  Std.Wrappers._IOption<RAST._IAssignLhs> _1522_name2 = _1518___mcc_h142;
                  RAST._IType _1523_tpe = _1482___mcc_h70;
                  Dafny.ISequence<Dafny.Rune> _1524_name = _1479___mcc_h63;
                  RAST._IDeclareType _1525_mod = _1478___mcc_h62;
                  if (object.Equals(_1522_name2, Std.Wrappers.Option<RAST._IAssignLhs>.create_Some(RAST.AssignLhs.create_LocalVar(_1524_name)))) {
                    RAST._IExpr _1526_rewriting = RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(_1525_mod, _1524_name, Std.Wrappers.Option<RAST._IType>.create_Some(_1523_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_1521_rhs)), _1520_last);
                    return _1526_rewriting;
                  } else {
                    return this;
                  }
                } else if (_source47.is_IfExpr) {
                  RAST._IExpr _1527___mcc_h146 = _source47.dtor_cond;
                  RAST._IExpr _1528___mcc_h147 = _source47.dtor_thn;
                  RAST._IExpr _1529___mcc_h148 = _source47.dtor_els;
                  return this;
                } else if (_source47.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1530___mcc_h152 = _source47.dtor_optCond;
                  RAST._IExpr _1531___mcc_h153 = _source47.dtor_underlying;
                  return this;
                } else if (_source47.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1532___mcc_h156 = _source47.dtor_name;
                  RAST._IExpr _1533___mcc_h157 = _source47.dtor_range;
                  RAST._IExpr _1534___mcc_h158 = _source47.dtor_body;
                  return this;
                } else if (_source47.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1535___mcc_h162 = _source47.dtor_lbl;
                  RAST._IExpr _1536___mcc_h163 = _source47.dtor_underlying;
                  return this;
                } else if (_source47.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1537___mcc_h166 = _source47.dtor_optLbl;
                  return this;
                } else if (_source47.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1538___mcc_h168 = _source47.dtor_optLbl;
                  return this;
                } else if (_source47.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1539___mcc_h170 = _source47.dtor_optExpr;
                  return this;
                } else if (_source47.is_CallType) {
                  RAST._IExpr _1540___mcc_h172 = _source47.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1541___mcc_h173 = _source47.dtor_typeParameters;
                  return this;
                } else if (_source47.is_Call) {
                  RAST._IExpr _1542___mcc_h176 = _source47.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1543___mcc_h177 = _source47.dtor_arguments;
                  return this;
                } else if (_source47.is_Select) {
                  RAST._IExpr _1544___mcc_h180 = _source47.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1545___mcc_h181 = _source47.dtor_name;
                  return this;
                } else {
                  RAST._IExpr _1546___mcc_h184 = _source47.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1547___mcc_h185 = _source47.dtor_name;
                  return this;
                }
              } else if (_source46.is_Block) {
                RAST._IExpr _1548___mcc_h188 = _source46.dtor_underlying;
                return this;
              } else if (_source46.is_StructBuild) {
                RAST._IExpr _1549___mcc_h190 = _source46.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1550___mcc_h191 = _source46.dtor_assignments;
                return this;
              } else if (_source46.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1551___mcc_h194 = _source46.dtor_arguments;
                return this;
              } else if (_source46.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1552___mcc_h196 = _source46.dtor_op1;
                RAST._IExpr _1553___mcc_h197 = _source46.dtor_underlying;
                DAST.Format._IUnOpFormat _1554___mcc_h198 = _source46.dtor_format;
                return this;
              } else if (_source46.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1555___mcc_h202 = _source46.dtor_op2;
                RAST._IExpr _1556___mcc_h203 = _source46.dtor_left;
                RAST._IExpr _1557___mcc_h204 = _source46.dtor_right;
                DAST.Format._IBinOpFormat _1558___mcc_h205 = _source46.dtor_format2;
                return this;
              } else if (_source46.is_TypeAscription) {
                RAST._IExpr _1559___mcc_h210 = _source46.dtor_left;
                RAST._IType _1560___mcc_h211 = _source46.dtor_tpe;
                return this;
              } else if (_source46.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1561___mcc_h214 = _source46.dtor_value;
                return this;
              } else if (_source46.is_LiteralBool) {
                bool _1562___mcc_h216 = _source46.dtor_bvalue;
                return this;
              } else if (_source46.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1563___mcc_h218 = _source46.dtor_value;
                bool _1564___mcc_h219 = _source46.dtor_binary;
                return this;
              } else if (_source46.is_DeclareVar) {
                RAST._IDeclareType _1565___mcc_h222 = _source46.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1566___mcc_h223 = _source46.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1567___mcc_h224 = _source46.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1568___mcc_h225 = _source46.dtor_optRhs;
                return this;
              } else if (_source46.is_Assign) {
                Std.Wrappers._IOption<RAST._IAssignLhs> _1569___mcc_h230 = _source46.dtor_names;
                RAST._IExpr _1570___mcc_h231 = _source46.dtor_rhs;
                return this;
              } else if (_source46.is_IfExpr) {
                RAST._IExpr _1571___mcc_h234 = _source46.dtor_cond;
                RAST._IExpr _1572___mcc_h235 = _source46.dtor_thn;
                RAST._IExpr _1573___mcc_h236 = _source46.dtor_els;
                return this;
              } else if (_source46.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1574___mcc_h240 = _source46.dtor_optCond;
                RAST._IExpr _1575___mcc_h241 = _source46.dtor_underlying;
                return this;
              } else if (_source46.is_For) {
                Dafny.ISequence<Dafny.Rune> _1576___mcc_h244 = _source46.dtor_name;
                RAST._IExpr _1577___mcc_h245 = _source46.dtor_range;
                RAST._IExpr _1578___mcc_h246 = _source46.dtor_body;
                return this;
              } else if (_source46.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1579___mcc_h250 = _source46.dtor_lbl;
                RAST._IExpr _1580___mcc_h251 = _source46.dtor_underlying;
                return this;
              } else if (_source46.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1581___mcc_h254 = _source46.dtor_optLbl;
                return this;
              } else if (_source46.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1582___mcc_h256 = _source46.dtor_optLbl;
                return this;
              } else if (_source46.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1583___mcc_h258 = _source46.dtor_optExpr;
                return this;
              } else if (_source46.is_CallType) {
                RAST._IExpr _1584___mcc_h260 = _source46.dtor_obj;
                Dafny.ISequence<RAST._IType> _1585___mcc_h261 = _source46.dtor_typeParameters;
                return this;
              } else if (_source46.is_Call) {
                RAST._IExpr _1586___mcc_h264 = _source46.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1587___mcc_h265 = _source46.dtor_arguments;
                return this;
              } else if (_source46.is_Select) {
                RAST._IExpr _1588___mcc_h268 = _source46.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1589___mcc_h269 = _source46.dtor_name;
                return this;
              } else {
                RAST._IExpr _1590___mcc_h272 = _source46.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1591___mcc_h273 = _source46.dtor_name;
                return this;
              }
            } else {
              RAST._IExpr _1592___mcc_h276 = _source45.dtor_value;
              return this;
            }
          }
        } else if (_source43.is_Assign) {
          Std.Wrappers._IOption<RAST._IAssignLhs> _1593___mcc_h278 = _source43.dtor_names;
          RAST._IExpr _1594___mcc_h279 = _source43.dtor_rhs;
          return this;
        } else if (_source43.is_IfExpr) {
          RAST._IExpr _1595___mcc_h282 = _source43.dtor_cond;
          RAST._IExpr _1596___mcc_h283 = _source43.dtor_thn;
          RAST._IExpr _1597___mcc_h284 = _source43.dtor_els;
          RAST._IExpr _source48 = _1595___mcc_h282;
          if (_source48.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1598___mcc_h288 = _source48.dtor_content;
            return this;
          } else if (_source48.is_ExprFromType) {
            RAST._IType _1599___mcc_h290 = _source48.dtor_tpe;
            return this;
          } else if (_source48.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1600___mcc_h292 = _source48.dtor_name;
            return this;
          } else if (_source48.is_Match) {
            RAST._IExpr _1601___mcc_h294 = _source48.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1602___mcc_h295 = _source48.dtor_cases;
            return this;
          } else if (_source48.is_StmtExpr) {
            RAST._IExpr _1603___mcc_h298 = _source48.dtor_stmt;
            RAST._IExpr _1604___mcc_h299 = _source48.dtor_rhs;
            return this;
          } else if (_source48.is_Block) {
            RAST._IExpr _1605___mcc_h302 = _source48.dtor_underlying;
            return this;
          } else if (_source48.is_StructBuild) {
            RAST._IExpr _1606___mcc_h304 = _source48.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1607___mcc_h305 = _source48.dtor_assignments;
            return this;
          } else if (_source48.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1608___mcc_h308 = _source48.dtor_arguments;
            return this;
          } else if (_source48.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1609___mcc_h310 = _source48.dtor_op1;
            RAST._IExpr _1610___mcc_h311 = _source48.dtor_underlying;
            DAST.Format._IUnOpFormat _1611___mcc_h312 = _source48.dtor_format;
            if (object.Equals(_1609___mcc_h310, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
              RAST._IExpr _source49 = _1610___mcc_h311;
              if (_source49.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1612___mcc_h316 = _source49.dtor_content;
                return this;
              } else if (_source49.is_ExprFromType) {
                RAST._IType _1613___mcc_h318 = _source49.dtor_tpe;
                return this;
              } else if (_source49.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1614___mcc_h320 = _source49.dtor_name;
                return this;
              } else if (_source49.is_Match) {
                RAST._IExpr _1615___mcc_h322 = _source49.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1616___mcc_h323 = _source49.dtor_cases;
                return this;
              } else if (_source49.is_StmtExpr) {
                RAST._IExpr _1617___mcc_h326 = _source49.dtor_stmt;
                RAST._IExpr _1618___mcc_h327 = _source49.dtor_rhs;
                return this;
              } else if (_source49.is_Block) {
                RAST._IExpr _1619___mcc_h330 = _source49.dtor_underlying;
                return this;
              } else if (_source49.is_StructBuild) {
                RAST._IExpr _1620___mcc_h332 = _source49.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1621___mcc_h333 = _source49.dtor_assignments;
                return this;
              } else if (_source49.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1622___mcc_h336 = _source49.dtor_arguments;
                return this;
              } else if (_source49.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1623___mcc_h338 = _source49.dtor_op1;
                RAST._IExpr _1624___mcc_h339 = _source49.dtor_underlying;
                DAST.Format._IUnOpFormat _1625___mcc_h340 = _source49.dtor_format;
                return this;
              } else if (_source49.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1626___mcc_h344 = _source49.dtor_op2;
                RAST._IExpr _1627___mcc_h345 = _source49.dtor_left;
                RAST._IExpr _1628___mcc_h346 = _source49.dtor_right;
                DAST.Format._IBinOpFormat _1629___mcc_h347 = _source49.dtor_format2;
                if (object.Equals(_1626___mcc_h344, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                  RAST._IExpr _source50 = _1596___mcc_h283;
                  if (_source50.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _1630___mcc_h352 = _source50.dtor_content;
                    if (object.Equals(_1630___mcc_h352, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                      RAST._IExpr _source51 = _1597___mcc_h284;
                      if (_source51.is_RawExpr) {
                        Dafny.ISequence<Dafny.Rune> _1631___mcc_h354 = _source51.dtor_content;
                        if (object.Equals(_1631___mcc_h354, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                          RAST._IExpr _1632_last = _1453___mcc_h11;
                          DAST.Format._IUnOpFormat _1633_of = _1611___mcc_h312;
                          DAST.Format._IBinOpFormat _1634_f = _1629___mcc_h347;
                          RAST._IExpr _1635_b = _1628___mcc_h346;
                          RAST._IExpr _1636_a = _1627___mcc_h345;
                          RAST._IExpr _1637_rewriting = RAST.Expr.create_StmtExpr((RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("assert_eq!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_1636_a, _1635_b)), _1632_last);
                          return _1637_rewriting;
                        } else {
                          return this;
                        }
                      } else if (_source51.is_ExprFromType) {
                        RAST._IType _1638___mcc_h356 = _source51.dtor_tpe;
                        return this;
                      } else if (_source51.is_Identifier) {
                        Dafny.ISequence<Dafny.Rune> _1639___mcc_h358 = _source51.dtor_name;
                        return this;
                      } else if (_source51.is_Match) {
                        RAST._IExpr _1640___mcc_h360 = _source51.dtor_matchee;
                        Dafny.ISequence<RAST._IMatchCase> _1641___mcc_h361 = _source51.dtor_cases;
                        return this;
                      } else if (_source51.is_StmtExpr) {
                        RAST._IExpr _1642___mcc_h364 = _source51.dtor_stmt;
                        RAST._IExpr _1643___mcc_h365 = _source51.dtor_rhs;
                        return this;
                      } else if (_source51.is_Block) {
                        RAST._IExpr _1644___mcc_h368 = _source51.dtor_underlying;
                        return this;
                      } else if (_source51.is_StructBuild) {
                        RAST._IExpr _1645___mcc_h370 = _source51.dtor_underlying;
                        Dafny.ISequence<RAST._IAssignIdentifier> _1646___mcc_h371 = _source51.dtor_assignments;
                        return this;
                      } else if (_source51.is_Tuple) {
                        Dafny.ISequence<RAST._IExpr> _1647___mcc_h374 = _source51.dtor_arguments;
                        return this;
                      } else if (_source51.is_UnaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1648___mcc_h376 = _source51.dtor_op1;
                        RAST._IExpr _1649___mcc_h377 = _source51.dtor_underlying;
                        DAST.Format._IUnOpFormat _1650___mcc_h378 = _source51.dtor_format;
                        return this;
                      } else if (_source51.is_BinaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1651___mcc_h382 = _source51.dtor_op2;
                        RAST._IExpr _1652___mcc_h383 = _source51.dtor_left;
                        RAST._IExpr _1653___mcc_h384 = _source51.dtor_right;
                        DAST.Format._IBinOpFormat _1654___mcc_h385 = _source51.dtor_format2;
                        return this;
                      } else if (_source51.is_TypeAscription) {
                        RAST._IExpr _1655___mcc_h390 = _source51.dtor_left;
                        RAST._IType _1656___mcc_h391 = _source51.dtor_tpe;
                        return this;
                      } else if (_source51.is_LiteralInt) {
                        Dafny.ISequence<Dafny.Rune> _1657___mcc_h394 = _source51.dtor_value;
                        return this;
                      } else if (_source51.is_LiteralBool) {
                        bool _1658___mcc_h396 = _source51.dtor_bvalue;
                        return this;
                      } else if (_source51.is_LiteralString) {
                        Dafny.ISequence<Dafny.Rune> _1659___mcc_h398 = _source51.dtor_value;
                        bool _1660___mcc_h399 = _source51.dtor_binary;
                        return this;
                      } else if (_source51.is_DeclareVar) {
                        RAST._IDeclareType _1661___mcc_h402 = _source51.dtor_declareType;
                        Dafny.ISequence<Dafny.Rune> _1662___mcc_h403 = _source51.dtor_name;
                        Std.Wrappers._IOption<RAST._IType> _1663___mcc_h404 = _source51.dtor_optType;
                        Std.Wrappers._IOption<RAST._IExpr> _1664___mcc_h405 = _source51.dtor_optRhs;
                        return this;
                      } else if (_source51.is_Assign) {
                        Std.Wrappers._IOption<RAST._IAssignLhs> _1665___mcc_h410 = _source51.dtor_names;
                        RAST._IExpr _1666___mcc_h411 = _source51.dtor_rhs;
                        return this;
                      } else if (_source51.is_IfExpr) {
                        RAST._IExpr _1667___mcc_h414 = _source51.dtor_cond;
                        RAST._IExpr _1668___mcc_h415 = _source51.dtor_thn;
                        RAST._IExpr _1669___mcc_h416 = _source51.dtor_els;
                        return this;
                      } else if (_source51.is_Loop) {
                        Std.Wrappers._IOption<RAST._IExpr> _1670___mcc_h420 = _source51.dtor_optCond;
                        RAST._IExpr _1671___mcc_h421 = _source51.dtor_underlying;
                        return this;
                      } else if (_source51.is_For) {
                        Dafny.ISequence<Dafny.Rune> _1672___mcc_h424 = _source51.dtor_name;
                        RAST._IExpr _1673___mcc_h425 = _source51.dtor_range;
                        RAST._IExpr _1674___mcc_h426 = _source51.dtor_body;
                        return this;
                      } else if (_source51.is_Labelled) {
                        Dafny.ISequence<Dafny.Rune> _1675___mcc_h430 = _source51.dtor_lbl;
                        RAST._IExpr _1676___mcc_h431 = _source51.dtor_underlying;
                        return this;
                      } else if (_source51.is_Break) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1677___mcc_h434 = _source51.dtor_optLbl;
                        return this;
                      } else if (_source51.is_Continue) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1678___mcc_h436 = _source51.dtor_optLbl;
                        return this;
                      } else if (_source51.is_Return) {
                        Std.Wrappers._IOption<RAST._IExpr> _1679___mcc_h438 = _source51.dtor_optExpr;
                        return this;
                      } else if (_source51.is_CallType) {
                        RAST._IExpr _1680___mcc_h440 = _source51.dtor_obj;
                        Dafny.ISequence<RAST._IType> _1681___mcc_h441 = _source51.dtor_typeParameters;
                        return this;
                      } else if (_source51.is_Call) {
                        RAST._IExpr _1682___mcc_h444 = _source51.dtor_obj;
                        Dafny.ISequence<RAST._IExpr> _1683___mcc_h445 = _source51.dtor_arguments;
                        return this;
                      } else if (_source51.is_Select) {
                        RAST._IExpr _1684___mcc_h448 = _source51.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1685___mcc_h449 = _source51.dtor_name;
                        return this;
                      } else {
                        RAST._IExpr _1686___mcc_h452 = _source51.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1687___mcc_h453 = _source51.dtor_name;
                        return this;
                      }
                    } else {
                      return this;
                    }
                  } else if (_source50.is_ExprFromType) {
                    RAST._IType _1688___mcc_h456 = _source50.dtor_tpe;
                    return this;
                  } else if (_source50.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _1689___mcc_h458 = _source50.dtor_name;
                    return this;
                  } else if (_source50.is_Match) {
                    RAST._IExpr _1690___mcc_h460 = _source50.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _1691___mcc_h461 = _source50.dtor_cases;
                    return this;
                  } else if (_source50.is_StmtExpr) {
                    RAST._IExpr _1692___mcc_h464 = _source50.dtor_stmt;
                    RAST._IExpr _1693___mcc_h465 = _source50.dtor_rhs;
                    return this;
                  } else if (_source50.is_Block) {
                    RAST._IExpr _1694___mcc_h468 = _source50.dtor_underlying;
                    return this;
                  } else if (_source50.is_StructBuild) {
                    RAST._IExpr _1695___mcc_h470 = _source50.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _1696___mcc_h471 = _source50.dtor_assignments;
                    return this;
                  } else if (_source50.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _1697___mcc_h474 = _source50.dtor_arguments;
                    return this;
                  } else if (_source50.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1698___mcc_h476 = _source50.dtor_op1;
                    RAST._IExpr _1699___mcc_h477 = _source50.dtor_underlying;
                    DAST.Format._IUnOpFormat _1700___mcc_h478 = _source50.dtor_format;
                    return this;
                  } else if (_source50.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1701___mcc_h482 = _source50.dtor_op2;
                    RAST._IExpr _1702___mcc_h483 = _source50.dtor_left;
                    RAST._IExpr _1703___mcc_h484 = _source50.dtor_right;
                    DAST.Format._IBinOpFormat _1704___mcc_h485 = _source50.dtor_format2;
                    return this;
                  } else if (_source50.is_TypeAscription) {
                    RAST._IExpr _1705___mcc_h490 = _source50.dtor_left;
                    RAST._IType _1706___mcc_h491 = _source50.dtor_tpe;
                    return this;
                  } else if (_source50.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _1707___mcc_h494 = _source50.dtor_value;
                    return this;
                  } else if (_source50.is_LiteralBool) {
                    bool _1708___mcc_h496 = _source50.dtor_bvalue;
                    return this;
                  } else if (_source50.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _1709___mcc_h498 = _source50.dtor_value;
                    bool _1710___mcc_h499 = _source50.dtor_binary;
                    return this;
                  } else if (_source50.is_DeclareVar) {
                    RAST._IDeclareType _1711___mcc_h502 = _source50.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _1712___mcc_h503 = _source50.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _1713___mcc_h504 = _source50.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _1714___mcc_h505 = _source50.dtor_optRhs;
                    return this;
                  } else if (_source50.is_Assign) {
                    Std.Wrappers._IOption<RAST._IAssignLhs> _1715___mcc_h510 = _source50.dtor_names;
                    RAST._IExpr _1716___mcc_h511 = _source50.dtor_rhs;
                    return this;
                  } else if (_source50.is_IfExpr) {
                    RAST._IExpr _1717___mcc_h514 = _source50.dtor_cond;
                    RAST._IExpr _1718___mcc_h515 = _source50.dtor_thn;
                    RAST._IExpr _1719___mcc_h516 = _source50.dtor_els;
                    return this;
                  } else if (_source50.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1720___mcc_h520 = _source50.dtor_optCond;
                    RAST._IExpr _1721___mcc_h521 = _source50.dtor_underlying;
                    return this;
                  } else if (_source50.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1722___mcc_h524 = _source50.dtor_name;
                    RAST._IExpr _1723___mcc_h525 = _source50.dtor_range;
                    RAST._IExpr _1724___mcc_h526 = _source50.dtor_body;
                    return this;
                  } else if (_source50.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1725___mcc_h530 = _source50.dtor_lbl;
                    RAST._IExpr _1726___mcc_h531 = _source50.dtor_underlying;
                    return this;
                  } else if (_source50.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1727___mcc_h534 = _source50.dtor_optLbl;
                    return this;
                  } else if (_source50.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1728___mcc_h536 = _source50.dtor_optLbl;
                    return this;
                  } else if (_source50.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1729___mcc_h538 = _source50.dtor_optExpr;
                    return this;
                  } else if (_source50.is_CallType) {
                    RAST._IExpr _1730___mcc_h540 = _source50.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1731___mcc_h541 = _source50.dtor_typeParameters;
                    return this;
                  } else if (_source50.is_Call) {
                    RAST._IExpr _1732___mcc_h544 = _source50.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1733___mcc_h545 = _source50.dtor_arguments;
                    return this;
                  } else if (_source50.is_Select) {
                    RAST._IExpr _1734___mcc_h548 = _source50.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1735___mcc_h549 = _source50.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _1736___mcc_h552 = _source50.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1737___mcc_h553 = _source50.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              } else if (_source49.is_TypeAscription) {
                RAST._IExpr _1738___mcc_h556 = _source49.dtor_left;
                RAST._IType _1739___mcc_h557 = _source49.dtor_tpe;
                return this;
              } else if (_source49.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1740___mcc_h560 = _source49.dtor_value;
                return this;
              } else if (_source49.is_LiteralBool) {
                bool _1741___mcc_h562 = _source49.dtor_bvalue;
                return this;
              } else if (_source49.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1742___mcc_h564 = _source49.dtor_value;
                bool _1743___mcc_h565 = _source49.dtor_binary;
                return this;
              } else if (_source49.is_DeclareVar) {
                RAST._IDeclareType _1744___mcc_h568 = _source49.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1745___mcc_h569 = _source49.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1746___mcc_h570 = _source49.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1747___mcc_h571 = _source49.dtor_optRhs;
                return this;
              } else if (_source49.is_Assign) {
                Std.Wrappers._IOption<RAST._IAssignLhs> _1748___mcc_h576 = _source49.dtor_names;
                RAST._IExpr _1749___mcc_h577 = _source49.dtor_rhs;
                return this;
              } else if (_source49.is_IfExpr) {
                RAST._IExpr _1750___mcc_h580 = _source49.dtor_cond;
                RAST._IExpr _1751___mcc_h581 = _source49.dtor_thn;
                RAST._IExpr _1752___mcc_h582 = _source49.dtor_els;
                return this;
              } else if (_source49.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1753___mcc_h586 = _source49.dtor_optCond;
                RAST._IExpr _1754___mcc_h587 = _source49.dtor_underlying;
                return this;
              } else if (_source49.is_For) {
                Dafny.ISequence<Dafny.Rune> _1755___mcc_h590 = _source49.dtor_name;
                RAST._IExpr _1756___mcc_h591 = _source49.dtor_range;
                RAST._IExpr _1757___mcc_h592 = _source49.dtor_body;
                return this;
              } else if (_source49.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1758___mcc_h596 = _source49.dtor_lbl;
                RAST._IExpr _1759___mcc_h597 = _source49.dtor_underlying;
                return this;
              } else if (_source49.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1760___mcc_h600 = _source49.dtor_optLbl;
                return this;
              } else if (_source49.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1761___mcc_h602 = _source49.dtor_optLbl;
                return this;
              } else if (_source49.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1762___mcc_h604 = _source49.dtor_optExpr;
                return this;
              } else if (_source49.is_CallType) {
                RAST._IExpr _1763___mcc_h606 = _source49.dtor_obj;
                Dafny.ISequence<RAST._IType> _1764___mcc_h607 = _source49.dtor_typeParameters;
                return this;
              } else if (_source49.is_Call) {
                RAST._IExpr _1765___mcc_h610 = _source49.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1766___mcc_h611 = _source49.dtor_arguments;
                return this;
              } else if (_source49.is_Select) {
                RAST._IExpr _1767___mcc_h614 = _source49.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1768___mcc_h615 = _source49.dtor_name;
                return this;
              } else {
                RAST._IExpr _1769___mcc_h618 = _source49.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1770___mcc_h619 = _source49.dtor_name;
                return this;
              }
            } else {
              return this;
            }
          } else if (_source48.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1771___mcc_h622 = _source48.dtor_op2;
            RAST._IExpr _1772___mcc_h623 = _source48.dtor_left;
            RAST._IExpr _1773___mcc_h624 = _source48.dtor_right;
            DAST.Format._IBinOpFormat _1774___mcc_h625 = _source48.dtor_format2;
            return this;
          } else if (_source48.is_TypeAscription) {
            RAST._IExpr _1775___mcc_h630 = _source48.dtor_left;
            RAST._IType _1776___mcc_h631 = _source48.dtor_tpe;
            return this;
          } else if (_source48.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1777___mcc_h634 = _source48.dtor_value;
            return this;
          } else if (_source48.is_LiteralBool) {
            bool _1778___mcc_h636 = _source48.dtor_bvalue;
            return this;
          } else if (_source48.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1779___mcc_h638 = _source48.dtor_value;
            bool _1780___mcc_h639 = _source48.dtor_binary;
            return this;
          } else if (_source48.is_DeclareVar) {
            RAST._IDeclareType _1781___mcc_h642 = _source48.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1782___mcc_h643 = _source48.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1783___mcc_h644 = _source48.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1784___mcc_h645 = _source48.dtor_optRhs;
            return this;
          } else if (_source48.is_Assign) {
            Std.Wrappers._IOption<RAST._IAssignLhs> _1785___mcc_h650 = _source48.dtor_names;
            RAST._IExpr _1786___mcc_h651 = _source48.dtor_rhs;
            return this;
          } else if (_source48.is_IfExpr) {
            RAST._IExpr _1787___mcc_h654 = _source48.dtor_cond;
            RAST._IExpr _1788___mcc_h655 = _source48.dtor_thn;
            RAST._IExpr _1789___mcc_h656 = _source48.dtor_els;
            return this;
          } else if (_source48.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1790___mcc_h660 = _source48.dtor_optCond;
            RAST._IExpr _1791___mcc_h661 = _source48.dtor_underlying;
            return this;
          } else if (_source48.is_For) {
            Dafny.ISequence<Dafny.Rune> _1792___mcc_h664 = _source48.dtor_name;
            RAST._IExpr _1793___mcc_h665 = _source48.dtor_range;
            RAST._IExpr _1794___mcc_h666 = _source48.dtor_body;
            return this;
          } else if (_source48.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1795___mcc_h670 = _source48.dtor_lbl;
            RAST._IExpr _1796___mcc_h671 = _source48.dtor_underlying;
            return this;
          } else if (_source48.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1797___mcc_h674 = _source48.dtor_optLbl;
            return this;
          } else if (_source48.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1798___mcc_h676 = _source48.dtor_optLbl;
            return this;
          } else if (_source48.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1799___mcc_h678 = _source48.dtor_optExpr;
            return this;
          } else if (_source48.is_CallType) {
            RAST._IExpr _1800___mcc_h680 = _source48.dtor_obj;
            Dafny.ISequence<RAST._IType> _1801___mcc_h681 = _source48.dtor_typeParameters;
            return this;
          } else if (_source48.is_Call) {
            RAST._IExpr _1802___mcc_h684 = _source48.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1803___mcc_h685 = _source48.dtor_arguments;
            return this;
          } else if (_source48.is_Select) {
            RAST._IExpr _1804___mcc_h688 = _source48.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1805___mcc_h689 = _source48.dtor_name;
            return this;
          } else {
            RAST._IExpr _1806___mcc_h692 = _source48.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1807___mcc_h693 = _source48.dtor_name;
            return this;
          }
        } else if (_source43.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1808___mcc_h696 = _source43.dtor_optCond;
          RAST._IExpr _1809___mcc_h697 = _source43.dtor_underlying;
          return this;
        } else if (_source43.is_For) {
          Dafny.ISequence<Dafny.Rune> _1810___mcc_h700 = _source43.dtor_name;
          RAST._IExpr _1811___mcc_h701 = _source43.dtor_range;
          RAST._IExpr _1812___mcc_h702 = _source43.dtor_body;
          return this;
        } else if (_source43.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1813___mcc_h706 = _source43.dtor_lbl;
          RAST._IExpr _1814___mcc_h707 = _source43.dtor_underlying;
          return this;
        } else if (_source43.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1815___mcc_h710 = _source43.dtor_optLbl;
          return this;
        } else if (_source43.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1816___mcc_h712 = _source43.dtor_optLbl;
          return this;
        } else if (_source43.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1817___mcc_h714 = _source43.dtor_optExpr;
          return this;
        } else if (_source43.is_CallType) {
          RAST._IExpr _1818___mcc_h716 = _source43.dtor_obj;
          Dafny.ISequence<RAST._IType> _1819___mcc_h717 = _source43.dtor_typeParameters;
          return this;
        } else if (_source43.is_Call) {
          RAST._IExpr _1820___mcc_h720 = _source43.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1821___mcc_h721 = _source43.dtor_arguments;
          return this;
        } else if (_source43.is_Select) {
          RAST._IExpr _1822___mcc_h724 = _source43.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1823___mcc_h725 = _source43.dtor_name;
          return this;
        } else {
          RAST._IExpr _1824___mcc_h728 = _source43.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1825___mcc_h729 = _source43.dtor_name;
          return this;
        }
      } else if (_source42.is_Block) {
        RAST._IExpr _1826___mcc_h732 = _source42.dtor_underlying;
        return this;
      } else if (_source42.is_StructBuild) {
        RAST._IExpr _1827___mcc_h734 = _source42.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1828___mcc_h735 = _source42.dtor_assignments;
        return this;
      } else if (_source42.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1829___mcc_h738 = _source42.dtor_arguments;
        return this;
      } else if (_source42.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1830___mcc_h740 = _source42.dtor_op1;
        RAST._IExpr _1831___mcc_h741 = _source42.dtor_underlying;
        DAST.Format._IUnOpFormat _1832___mcc_h742 = _source42.dtor_format;
        if (object.Equals(_1830___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          RAST._IExpr _source52 = _1831___mcc_h741;
          if (_source52.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1833___mcc_h746 = _source52.dtor_content;
            return this;
          } else if (_source52.is_ExprFromType) {
            RAST._IType _1834___mcc_h748 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1835___mcc_h750 = _source52.dtor_name;
            return this;
          } else if (_source52.is_Match) {
            RAST._IExpr _1836___mcc_h752 = _source52.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1837___mcc_h753 = _source52.dtor_cases;
            return this;
          } else if (_source52.is_StmtExpr) {
            RAST._IExpr _1838___mcc_h756 = _source52.dtor_stmt;
            RAST._IExpr _1839___mcc_h757 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_Block) {
            RAST._IExpr _1840___mcc_h760 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_StructBuild) {
            RAST._IExpr _1841___mcc_h762 = _source52.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1842___mcc_h763 = _source52.dtor_assignments;
            return this;
          } else if (_source52.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1843___mcc_h766 = _source52.dtor_arguments;
            return this;
          } else if (_source52.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1844___mcc_h768 = _source52.dtor_op1;
            RAST._IExpr _1845___mcc_h769 = _source52.dtor_underlying;
            DAST.Format._IUnOpFormat _1846___mcc_h770 = _source52.dtor_format;
            return this;
          } else if (_source52.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1847___mcc_h774 = _source52.dtor_op2;
            RAST._IExpr _1848___mcc_h775 = _source52.dtor_left;
            RAST._IExpr _1849___mcc_h776 = _source52.dtor_right;
            DAST.Format._IBinOpFormat _1850___mcc_h777 = _source52.dtor_format2;
            return this;
          } else if (_source52.is_TypeAscription) {
            RAST._IExpr _1851___mcc_h782 = _source52.dtor_left;
            RAST._IType _1852___mcc_h783 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1853___mcc_h786 = _source52.dtor_value;
            return this;
          } else if (_source52.is_LiteralBool) {
            bool _1854___mcc_h788 = _source52.dtor_bvalue;
            return this;
          } else if (_source52.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1855___mcc_h790 = _source52.dtor_value;
            bool _1856___mcc_h791 = _source52.dtor_binary;
            return this;
          } else if (_source52.is_DeclareVar) {
            RAST._IDeclareType _1857___mcc_h794 = _source52.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1858___mcc_h795 = _source52.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1859___mcc_h796 = _source52.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1860___mcc_h797 = _source52.dtor_optRhs;
            return this;
          } else if (_source52.is_Assign) {
            Std.Wrappers._IOption<RAST._IAssignLhs> _1861___mcc_h802 = _source52.dtor_names;
            RAST._IExpr _1862___mcc_h803 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_IfExpr) {
            RAST._IExpr _1863___mcc_h806 = _source52.dtor_cond;
            RAST._IExpr _1864___mcc_h807 = _source52.dtor_thn;
            RAST._IExpr _1865___mcc_h808 = _source52.dtor_els;
            return this;
          } else if (_source52.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1866___mcc_h812 = _source52.dtor_optCond;
            RAST._IExpr _1867___mcc_h813 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_For) {
            Dafny.ISequence<Dafny.Rune> _1868___mcc_h816 = _source52.dtor_name;
            RAST._IExpr _1869___mcc_h817 = _source52.dtor_range;
            RAST._IExpr _1870___mcc_h818 = _source52.dtor_body;
            return this;
          } else if (_source52.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1871___mcc_h822 = _source52.dtor_lbl;
            RAST._IExpr _1872___mcc_h823 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1873___mcc_h826 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1874___mcc_h828 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1875___mcc_h830 = _source52.dtor_optExpr;
            return this;
          } else if (_source52.is_CallType) {
            RAST._IExpr _1876___mcc_h832 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IType> _1877___mcc_h833 = _source52.dtor_typeParameters;
            return this;
          } else if (_source52.is_Call) {
            RAST._IExpr _1878___mcc_h836 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1879___mcc_h837 = _source52.dtor_arguments;
            RAST._IExpr _source53 = _1878___mcc_h836;
            if (_source53.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1880___mcc_h840 = _source53.dtor_content;
              return this;
            } else if (_source53.is_ExprFromType) {
              RAST._IType _1881___mcc_h842 = _source53.dtor_tpe;
              return this;
            } else if (_source53.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1882___mcc_h844 = _source53.dtor_name;
              return this;
            } else if (_source53.is_Match) {
              RAST._IExpr _1883___mcc_h846 = _source53.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1884___mcc_h847 = _source53.dtor_cases;
              return this;
            } else if (_source53.is_StmtExpr) {
              RAST._IExpr _1885___mcc_h850 = _source53.dtor_stmt;
              RAST._IExpr _1886___mcc_h851 = _source53.dtor_rhs;
              return this;
            } else if (_source53.is_Block) {
              RAST._IExpr _1887___mcc_h854 = _source53.dtor_underlying;
              return this;
            } else if (_source53.is_StructBuild) {
              RAST._IExpr _1888___mcc_h856 = _source53.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1889___mcc_h857 = _source53.dtor_assignments;
              return this;
            } else if (_source53.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1890___mcc_h860 = _source53.dtor_arguments;
              return this;
            } else if (_source53.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1891___mcc_h862 = _source53.dtor_op1;
              RAST._IExpr _1892___mcc_h863 = _source53.dtor_underlying;
              DAST.Format._IUnOpFormat _1893___mcc_h864 = _source53.dtor_format;
              return this;
            } else if (_source53.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1894___mcc_h868 = _source53.dtor_op2;
              RAST._IExpr _1895___mcc_h869 = _source53.dtor_left;
              RAST._IExpr _1896___mcc_h870 = _source53.dtor_right;
              DAST.Format._IBinOpFormat _1897___mcc_h871 = _source53.dtor_format2;
              return this;
            } else if (_source53.is_TypeAscription) {
              RAST._IExpr _1898___mcc_h876 = _source53.dtor_left;
              RAST._IType _1899___mcc_h877 = _source53.dtor_tpe;
              return this;
            } else if (_source53.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1900___mcc_h880 = _source53.dtor_value;
              return this;
            } else if (_source53.is_LiteralBool) {
              bool _1901___mcc_h882 = _source53.dtor_bvalue;
              return this;
            } else if (_source53.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1902___mcc_h884 = _source53.dtor_value;
              bool _1903___mcc_h885 = _source53.dtor_binary;
              return this;
            } else if (_source53.is_DeclareVar) {
              RAST._IDeclareType _1904___mcc_h888 = _source53.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1905___mcc_h889 = _source53.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1906___mcc_h890 = _source53.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1907___mcc_h891 = _source53.dtor_optRhs;
              return this;
            } else if (_source53.is_Assign) {
              Std.Wrappers._IOption<RAST._IAssignLhs> _1908___mcc_h896 = _source53.dtor_names;
              RAST._IExpr _1909___mcc_h897 = _source53.dtor_rhs;
              return this;
            } else if (_source53.is_IfExpr) {
              RAST._IExpr _1910___mcc_h900 = _source53.dtor_cond;
              RAST._IExpr _1911___mcc_h901 = _source53.dtor_thn;
              RAST._IExpr _1912___mcc_h902 = _source53.dtor_els;
              return this;
            } else if (_source53.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1913___mcc_h906 = _source53.dtor_optCond;
              RAST._IExpr _1914___mcc_h907 = _source53.dtor_underlying;
              return this;
            } else if (_source53.is_For) {
              Dafny.ISequence<Dafny.Rune> _1915___mcc_h910 = _source53.dtor_name;
              RAST._IExpr _1916___mcc_h911 = _source53.dtor_range;
              RAST._IExpr _1917___mcc_h912 = _source53.dtor_body;
              return this;
            } else if (_source53.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1918___mcc_h916 = _source53.dtor_lbl;
              RAST._IExpr _1919___mcc_h917 = _source53.dtor_underlying;
              return this;
            } else if (_source53.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1920___mcc_h920 = _source53.dtor_optLbl;
              return this;
            } else if (_source53.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1921___mcc_h922 = _source53.dtor_optLbl;
              return this;
            } else if (_source53.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1922___mcc_h924 = _source53.dtor_optExpr;
              return this;
            } else if (_source53.is_CallType) {
              RAST._IExpr _1923___mcc_h926 = _source53.dtor_obj;
              Dafny.ISequence<RAST._IType> _1924___mcc_h927 = _source53.dtor_typeParameters;
              return this;
            } else if (_source53.is_Call) {
              RAST._IExpr _1925___mcc_h930 = _source53.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1926___mcc_h931 = _source53.dtor_arguments;
              return this;
            } else if (_source53.is_Select) {
              RAST._IExpr _1927___mcc_h934 = _source53.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1928___mcc_h935 = _source53.dtor_name;
              if (object.Equals(_1928___mcc_h935, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))) {
                DAST.Format._IUnOpFormat _1929_format = _1832___mcc_h742;
                Dafny.ISequence<RAST._IExpr> _1930_args = _1879___mcc_h837;
                RAST._IExpr _1931_underlying = _1927___mcc_h934;
                if ((_1930_args).Equals(Dafny.Sequence<RAST._IExpr>.FromElements())) {
                  return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _1931_underlying, _1929_format);
                } else {
                  return this;
                }
              } else {
                return this;
              }
            } else {
              RAST._IExpr _1932___mcc_h938 = _source53.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1933___mcc_h939 = _source53.dtor_name;
              return this;
            }
          } else if (_source52.is_Select) {
            RAST._IExpr _1934___mcc_h942 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1935___mcc_h943 = _source52.dtor_name;
            return this;
          } else {
            RAST._IExpr _1936___mcc_h946 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1937___mcc_h947 = _source52.dtor_name;
            return this;
          }
        } else if (object.Equals(_1830___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          RAST._IExpr _source54 = _1831___mcc_h741;
          if (_source54.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1938___mcc_h950 = _source54.dtor_content;
            return this;
          } else if (_source54.is_ExprFromType) {
            RAST._IType _1939___mcc_h952 = _source54.dtor_tpe;
            return this;
          } else if (_source54.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1940___mcc_h954 = _source54.dtor_name;
            return this;
          } else if (_source54.is_Match) {
            RAST._IExpr _1941___mcc_h956 = _source54.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1942___mcc_h957 = _source54.dtor_cases;
            return this;
          } else if (_source54.is_StmtExpr) {
            RAST._IExpr _1943___mcc_h960 = _source54.dtor_stmt;
            RAST._IExpr _1944___mcc_h961 = _source54.dtor_rhs;
            return this;
          } else if (_source54.is_Block) {
            RAST._IExpr _1945___mcc_h964 = _source54.dtor_underlying;
            return this;
          } else if (_source54.is_StructBuild) {
            RAST._IExpr _1946___mcc_h966 = _source54.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1947___mcc_h967 = _source54.dtor_assignments;
            return this;
          } else if (_source54.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1948___mcc_h970 = _source54.dtor_arguments;
            return this;
          } else if (_source54.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1949___mcc_h972 = _source54.dtor_op1;
            RAST._IExpr _1950___mcc_h973 = _source54.dtor_underlying;
            DAST.Format._IUnOpFormat _1951___mcc_h974 = _source54.dtor_format;
            return this;
          } else if (_source54.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1952___mcc_h978 = _source54.dtor_op2;
            RAST._IExpr _1953___mcc_h979 = _source54.dtor_left;
            RAST._IExpr _1954___mcc_h980 = _source54.dtor_right;
            DAST.Format._IBinOpFormat _1955___mcc_h981 = _source54.dtor_format2;
            if (object.Equals(_1952___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
              DAST.Format._IUnOpFormat _source55 = _1832___mcc_h742;
              if (_source55.is_NoFormat) {
                return this;
              } else {
                DAST.Format._IBinOpFormat _1956_format = _1955___mcc_h981;
                RAST._IExpr _1957_right = _1954___mcc_h980;
                RAST._IExpr _1958_left = _1953___mcc_h979;
                return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="), _1958_left, _1957_right, DAST.Format.BinOpFormat.create_NoFormat());
              }
            } else if (object.Equals(_1952___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
              DAST.Format._IBinOpFormat _source56 = _1955___mcc_h981;
              if (_source56.is_NoFormat) {
                DAST.Format._IUnOpFormat _source57 = _1832___mcc_h742;
                if (_source57.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1959_right = _1954___mcc_h980;
                  RAST._IExpr _1960_left = _1953___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="), _1960_left, _1959_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              } else if (_source56.is_ImpliesFormat) {
                return this;
              } else if (_source56.is_Equivalence) {
                return this;
              } else {
                DAST.Format._IUnOpFormat _source58 = _1832___mcc_h742;
                if (_source58.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1961_right = _1954___mcc_h980;
                  RAST._IExpr _1962_left = _1953___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _1961_right, _1962_left, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else {
              return this;
            }
          } else if (_source54.is_TypeAscription) {
            RAST._IExpr _1963___mcc_h986 = _source54.dtor_left;
            RAST._IType _1964___mcc_h987 = _source54.dtor_tpe;
            return this;
          } else if (_source54.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1965___mcc_h990 = _source54.dtor_value;
            return this;
          } else if (_source54.is_LiteralBool) {
            bool _1966___mcc_h992 = _source54.dtor_bvalue;
            return this;
          } else if (_source54.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1967___mcc_h994 = _source54.dtor_value;
            bool _1968___mcc_h995 = _source54.dtor_binary;
            return this;
          } else if (_source54.is_DeclareVar) {
            RAST._IDeclareType _1969___mcc_h998 = _source54.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1970___mcc_h999 = _source54.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1971___mcc_h1000 = _source54.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1972___mcc_h1001 = _source54.dtor_optRhs;
            return this;
          } else if (_source54.is_Assign) {
            Std.Wrappers._IOption<RAST._IAssignLhs> _1973___mcc_h1006 = _source54.dtor_names;
            RAST._IExpr _1974___mcc_h1007 = _source54.dtor_rhs;
            return this;
          } else if (_source54.is_IfExpr) {
            RAST._IExpr _1975___mcc_h1010 = _source54.dtor_cond;
            RAST._IExpr _1976___mcc_h1011 = _source54.dtor_thn;
            RAST._IExpr _1977___mcc_h1012 = _source54.dtor_els;
            return this;
          } else if (_source54.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1978___mcc_h1016 = _source54.dtor_optCond;
            RAST._IExpr _1979___mcc_h1017 = _source54.dtor_underlying;
            return this;
          } else if (_source54.is_For) {
            Dafny.ISequence<Dafny.Rune> _1980___mcc_h1020 = _source54.dtor_name;
            RAST._IExpr _1981___mcc_h1021 = _source54.dtor_range;
            RAST._IExpr _1982___mcc_h1022 = _source54.dtor_body;
            return this;
          } else if (_source54.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1983___mcc_h1026 = _source54.dtor_lbl;
            RAST._IExpr _1984___mcc_h1027 = _source54.dtor_underlying;
            return this;
          } else if (_source54.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1985___mcc_h1030 = _source54.dtor_optLbl;
            return this;
          } else if (_source54.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1986___mcc_h1032 = _source54.dtor_optLbl;
            return this;
          } else if (_source54.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1987___mcc_h1034 = _source54.dtor_optExpr;
            return this;
          } else if (_source54.is_CallType) {
            RAST._IExpr _1988___mcc_h1036 = _source54.dtor_obj;
            Dafny.ISequence<RAST._IType> _1989___mcc_h1037 = _source54.dtor_typeParameters;
            return this;
          } else if (_source54.is_Call) {
            RAST._IExpr _1990___mcc_h1040 = _source54.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1991___mcc_h1041 = _source54.dtor_arguments;
            return this;
          } else if (_source54.is_Select) {
            RAST._IExpr _1992___mcc_h1044 = _source54.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1993___mcc_h1045 = _source54.dtor_name;
            return this;
          } else {
            RAST._IExpr _1994___mcc_h1048 = _source54.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1995___mcc_h1049 = _source54.dtor_name;
            return this;
          }
        } else {
          return this;
        }
      } else if (_source42.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1996___mcc_h1052 = _source42.dtor_op2;
        RAST._IExpr _1997___mcc_h1053 = _source42.dtor_left;
        RAST._IExpr _1998___mcc_h1054 = _source42.dtor_right;
        DAST.Format._IBinOpFormat _1999___mcc_h1055 = _source42.dtor_format2;
        return this;
      } else if (_source42.is_TypeAscription) {
        RAST._IExpr _2000___mcc_h1060 = _source42.dtor_left;
        RAST._IType _2001___mcc_h1061 = _source42.dtor_tpe;
        return this;
      } else if (_source42.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2002___mcc_h1064 = _source42.dtor_value;
        return this;
      } else if (_source42.is_LiteralBool) {
        bool _2003___mcc_h1066 = _source42.dtor_bvalue;
        return this;
      } else if (_source42.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2004___mcc_h1068 = _source42.dtor_value;
        bool _2005___mcc_h1069 = _source42.dtor_binary;
        return this;
      } else if (_source42.is_DeclareVar) {
        RAST._IDeclareType _2006___mcc_h1072 = _source42.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2007___mcc_h1073 = _source42.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2008___mcc_h1074 = _source42.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2009___mcc_h1075 = _source42.dtor_optRhs;
        return this;
      } else if (_source42.is_Assign) {
        Std.Wrappers._IOption<RAST._IAssignLhs> _2010___mcc_h1080 = _source42.dtor_names;
        RAST._IExpr _2011___mcc_h1081 = _source42.dtor_rhs;
        return this;
      } else if (_source42.is_IfExpr) {
        RAST._IExpr _2012___mcc_h1084 = _source42.dtor_cond;
        RAST._IExpr _2013___mcc_h1085 = _source42.dtor_thn;
        RAST._IExpr _2014___mcc_h1086 = _source42.dtor_els;
        return this;
      } else if (_source42.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2015___mcc_h1090 = _source42.dtor_optCond;
        RAST._IExpr _2016___mcc_h1091 = _source42.dtor_underlying;
        return this;
      } else if (_source42.is_For) {
        Dafny.ISequence<Dafny.Rune> _2017___mcc_h1094 = _source42.dtor_name;
        RAST._IExpr _2018___mcc_h1095 = _source42.dtor_range;
        RAST._IExpr _2019___mcc_h1096 = _source42.dtor_body;
        return this;
      } else if (_source42.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2020___mcc_h1100 = _source42.dtor_lbl;
        RAST._IExpr _2021___mcc_h1101 = _source42.dtor_underlying;
        return this;
      } else if (_source42.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2022___mcc_h1104 = _source42.dtor_optLbl;
        return this;
      } else if (_source42.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2023___mcc_h1106 = _source42.dtor_optLbl;
        return this;
      } else if (_source42.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2024___mcc_h1108 = _source42.dtor_optExpr;
        return this;
      } else if (_source42.is_CallType) {
        RAST._IExpr _2025___mcc_h1110 = _source42.dtor_obj;
        Dafny.ISequence<RAST._IType> _2026___mcc_h1111 = _source42.dtor_typeParameters;
        return this;
      } else if (_source42.is_Call) {
        RAST._IExpr _2027___mcc_h1114 = _source42.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2028___mcc_h1115 = _source42.dtor_arguments;
        RAST._IExpr _source59 = _2027___mcc_h1114;
        if (_source59.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _2029___mcc_h1118 = _source59.dtor_content;
          return this;
        } else if (_source59.is_ExprFromType) {
          RAST._IType _2030___mcc_h1120 = _source59.dtor_tpe;
          return this;
        } else if (_source59.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _2031___mcc_h1122 = _source59.dtor_name;
          return this;
        } else if (_source59.is_Match) {
          RAST._IExpr _2032___mcc_h1124 = _source59.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _2033___mcc_h1125 = _source59.dtor_cases;
          return this;
        } else if (_source59.is_StmtExpr) {
          RAST._IExpr _2034___mcc_h1128 = _source59.dtor_stmt;
          RAST._IExpr _2035___mcc_h1129 = _source59.dtor_rhs;
          return this;
        } else if (_source59.is_Block) {
          RAST._IExpr _2036___mcc_h1132 = _source59.dtor_underlying;
          return this;
        } else if (_source59.is_StructBuild) {
          RAST._IExpr _2037___mcc_h1134 = _source59.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _2038___mcc_h1135 = _source59.dtor_assignments;
          return this;
        } else if (_source59.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _2039___mcc_h1138 = _source59.dtor_arguments;
          return this;
        } else if (_source59.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _2040___mcc_h1140 = _source59.dtor_op1;
          RAST._IExpr _2041___mcc_h1141 = _source59.dtor_underlying;
          DAST.Format._IUnOpFormat _2042___mcc_h1142 = _source59.dtor_format;
          return this;
        } else if (_source59.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _2043___mcc_h1146 = _source59.dtor_op2;
          RAST._IExpr _2044___mcc_h1147 = _source59.dtor_left;
          RAST._IExpr _2045___mcc_h1148 = _source59.dtor_right;
          DAST.Format._IBinOpFormat _2046___mcc_h1149 = _source59.dtor_format2;
          return this;
        } else if (_source59.is_TypeAscription) {
          RAST._IExpr _2047___mcc_h1154 = _source59.dtor_left;
          RAST._IType _2048___mcc_h1155 = _source59.dtor_tpe;
          return this;
        } else if (_source59.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _2049___mcc_h1158 = _source59.dtor_value;
          return this;
        } else if (_source59.is_LiteralBool) {
          bool _2050___mcc_h1160 = _source59.dtor_bvalue;
          return this;
        } else if (_source59.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _2051___mcc_h1162 = _source59.dtor_value;
          bool _2052___mcc_h1163 = _source59.dtor_binary;
          return this;
        } else if (_source59.is_DeclareVar) {
          RAST._IDeclareType _2053___mcc_h1166 = _source59.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _2054___mcc_h1167 = _source59.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _2055___mcc_h1168 = _source59.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _2056___mcc_h1169 = _source59.dtor_optRhs;
          return this;
        } else if (_source59.is_Assign) {
          Std.Wrappers._IOption<RAST._IAssignLhs> _2057___mcc_h1174 = _source59.dtor_names;
          RAST._IExpr _2058___mcc_h1175 = _source59.dtor_rhs;
          return this;
        } else if (_source59.is_IfExpr) {
          RAST._IExpr _2059___mcc_h1178 = _source59.dtor_cond;
          RAST._IExpr _2060___mcc_h1179 = _source59.dtor_thn;
          RAST._IExpr _2061___mcc_h1180 = _source59.dtor_els;
          return this;
        } else if (_source59.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _2062___mcc_h1184 = _source59.dtor_optCond;
          RAST._IExpr _2063___mcc_h1185 = _source59.dtor_underlying;
          return this;
        } else if (_source59.is_For) {
          Dafny.ISequence<Dafny.Rune> _2064___mcc_h1188 = _source59.dtor_name;
          RAST._IExpr _2065___mcc_h1189 = _source59.dtor_range;
          RAST._IExpr _2066___mcc_h1190 = _source59.dtor_body;
          return this;
        } else if (_source59.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _2067___mcc_h1194 = _source59.dtor_lbl;
          RAST._IExpr _2068___mcc_h1195 = _source59.dtor_underlying;
          return this;
        } else if (_source59.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2069___mcc_h1198 = _source59.dtor_optLbl;
          return this;
        } else if (_source59.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2070___mcc_h1200 = _source59.dtor_optLbl;
          return this;
        } else if (_source59.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _2071___mcc_h1202 = _source59.dtor_optExpr;
          return this;
        } else if (_source59.is_CallType) {
          RAST._IExpr _2072___mcc_h1204 = _source59.dtor_obj;
          Dafny.ISequence<RAST._IType> _2073___mcc_h1205 = _source59.dtor_typeParameters;
          return this;
        } else if (_source59.is_Call) {
          RAST._IExpr _2074___mcc_h1208 = _source59.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _2075___mcc_h1209 = _source59.dtor_arguments;
          return this;
        } else if (_source59.is_Select) {
          RAST._IExpr _2076___mcc_h1212 = _source59.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2077___mcc_h1213 = _source59.dtor_name;
          return this;
        } else {
          RAST._IExpr _2078___mcc_h1216 = _source59.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2079___mcc_h1217 = _source59.dtor_name;
          if (object.Equals(_2079___mcc_h1217, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))) {
            Dafny.ISequence<RAST._IExpr> _2080_args = _2028___mcc_h1115;
            RAST._IExpr _2081_r = _2078___mcc_h1216;
            if (((!object.Equals(_2081_r, RAST.__default.dafny__runtime)) && (!object.Equals(_2081_r, RAST.__default.@global))) || ((new BigInteger((_2080_args).Count)) != (new BigInteger(2)))) {
              return this;
            } else {
              RAST._IExpr _2082_expr = (_2080_args).Select(BigInteger.Zero);
              RAST._IExpr _2083_tpeExpr = (_2080_args).Select(BigInteger.One);
              if (!((_2083_tpeExpr).is_ExprFromType)) {
                return this;
              } else {
                RAST._IType _2084_tpe = (_2083_tpeExpr).dtor_tpe;
                if (((((((((((_2084_tpe).is_U8) || ((_2084_tpe).is_U16)) || ((_2084_tpe).is_U32)) || ((_2084_tpe).is_U64)) || ((_2084_tpe).is_U128)) || ((_2084_tpe).is_I8)) || ((_2084_tpe).is_I16)) || ((_2084_tpe).is_I32)) || ((_2084_tpe).is_I64)) || ((_2084_tpe).is_I128)) {
                  RAST._IExpr _source60 = _2082_expr;
                  if (_source60.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _2085___mcc_h1228 = _source60.dtor_content;
                    return this;
                  } else if (_source60.is_ExprFromType) {
                    RAST._IType _2086___mcc_h1230 = _source60.dtor_tpe;
                    return this;
                  } else if (_source60.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _2087___mcc_h1232 = _source60.dtor_name;
                    return this;
                  } else if (_source60.is_Match) {
                    RAST._IExpr _2088___mcc_h1234 = _source60.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _2089___mcc_h1235 = _source60.dtor_cases;
                    return this;
                  } else if (_source60.is_StmtExpr) {
                    RAST._IExpr _2090___mcc_h1238 = _source60.dtor_stmt;
                    RAST._IExpr _2091___mcc_h1239 = _source60.dtor_rhs;
                    return this;
                  } else if (_source60.is_Block) {
                    RAST._IExpr _2092___mcc_h1242 = _source60.dtor_underlying;
                    return this;
                  } else if (_source60.is_StructBuild) {
                    RAST._IExpr _2093___mcc_h1244 = _source60.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _2094___mcc_h1245 = _source60.dtor_assignments;
                    return this;
                  } else if (_source60.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _2095___mcc_h1248 = _source60.dtor_arguments;
                    return this;
                  } else if (_source60.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2096___mcc_h1250 = _source60.dtor_op1;
                    RAST._IExpr _2097___mcc_h1251 = _source60.dtor_underlying;
                    DAST.Format._IUnOpFormat _2098___mcc_h1252 = _source60.dtor_format;
                    return this;
                  } else if (_source60.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2099___mcc_h1256 = _source60.dtor_op2;
                    RAST._IExpr _2100___mcc_h1257 = _source60.dtor_left;
                    RAST._IExpr _2101___mcc_h1258 = _source60.dtor_right;
                    DAST.Format._IBinOpFormat _2102___mcc_h1259 = _source60.dtor_format2;
                    return this;
                  } else if (_source60.is_TypeAscription) {
                    RAST._IExpr _2103___mcc_h1264 = _source60.dtor_left;
                    RAST._IType _2104___mcc_h1265 = _source60.dtor_tpe;
                    return this;
                  } else if (_source60.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _2105___mcc_h1268 = _source60.dtor_value;
                    return this;
                  } else if (_source60.is_LiteralBool) {
                    bool _2106___mcc_h1270 = _source60.dtor_bvalue;
                    return this;
                  } else if (_source60.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _2107___mcc_h1272 = _source60.dtor_value;
                    bool _2108___mcc_h1273 = _source60.dtor_binary;
                    return this;
                  } else if (_source60.is_DeclareVar) {
                    RAST._IDeclareType _2109___mcc_h1276 = _source60.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _2110___mcc_h1277 = _source60.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _2111___mcc_h1278 = _source60.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _2112___mcc_h1279 = _source60.dtor_optRhs;
                    return this;
                  } else if (_source60.is_Assign) {
                    Std.Wrappers._IOption<RAST._IAssignLhs> _2113___mcc_h1284 = _source60.dtor_names;
                    RAST._IExpr _2114___mcc_h1285 = _source60.dtor_rhs;
                    return this;
                  } else if (_source60.is_IfExpr) {
                    RAST._IExpr _2115___mcc_h1288 = _source60.dtor_cond;
                    RAST._IExpr _2116___mcc_h1289 = _source60.dtor_thn;
                    RAST._IExpr _2117___mcc_h1290 = _source60.dtor_els;
                    return this;
                  } else if (_source60.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _2118___mcc_h1294 = _source60.dtor_optCond;
                    RAST._IExpr _2119___mcc_h1295 = _source60.dtor_underlying;
                    return this;
                  } else if (_source60.is_For) {
                    Dafny.ISequence<Dafny.Rune> _2120___mcc_h1298 = _source60.dtor_name;
                    RAST._IExpr _2121___mcc_h1299 = _source60.dtor_range;
                    RAST._IExpr _2122___mcc_h1300 = _source60.dtor_body;
                    return this;
                  } else if (_source60.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _2123___mcc_h1304 = _source60.dtor_lbl;
                    RAST._IExpr _2124___mcc_h1305 = _source60.dtor_underlying;
                    return this;
                  } else if (_source60.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2125___mcc_h1308 = _source60.dtor_optLbl;
                    return this;
                  } else if (_source60.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2126___mcc_h1310 = _source60.dtor_optLbl;
                    return this;
                  } else if (_source60.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _2127___mcc_h1312 = _source60.dtor_optExpr;
                    return this;
                  } else if (_source60.is_CallType) {
                    RAST._IExpr _2128___mcc_h1314 = _source60.dtor_obj;
                    Dafny.ISequence<RAST._IType> _2129___mcc_h1315 = _source60.dtor_typeParameters;
                    return this;
                  } else if (_source60.is_Call) {
                    RAST._IExpr _2130___mcc_h1318 = _source60.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _2131___mcc_h1319 = _source60.dtor_arguments;
                    RAST._IExpr _source61 = _2130___mcc_h1318;
                    if (_source61.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _2132___mcc_h1322 = _source61.dtor_content;
                      return this;
                    } else if (_source61.is_ExprFromType) {
                      RAST._IType _2133___mcc_h1324 = _source61.dtor_tpe;
                      return this;
                    } else if (_source61.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _2134___mcc_h1326 = _source61.dtor_name;
                      return this;
                    } else if (_source61.is_Match) {
                      RAST._IExpr _2135___mcc_h1328 = _source61.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _2136___mcc_h1329 = _source61.dtor_cases;
                      return this;
                    } else if (_source61.is_StmtExpr) {
                      RAST._IExpr _2137___mcc_h1332 = _source61.dtor_stmt;
                      RAST._IExpr _2138___mcc_h1333 = _source61.dtor_rhs;
                      return this;
                    } else if (_source61.is_Block) {
                      RAST._IExpr _2139___mcc_h1336 = _source61.dtor_underlying;
                      return this;
                    } else if (_source61.is_StructBuild) {
                      RAST._IExpr _2140___mcc_h1338 = _source61.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _2141___mcc_h1339 = _source61.dtor_assignments;
                      return this;
                    } else if (_source61.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _2142___mcc_h1342 = _source61.dtor_arguments;
                      return this;
                    } else if (_source61.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2143___mcc_h1344 = _source61.dtor_op1;
                      RAST._IExpr _2144___mcc_h1345 = _source61.dtor_underlying;
                      DAST.Format._IUnOpFormat _2145___mcc_h1346 = _source61.dtor_format;
                      return this;
                    } else if (_source61.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2146___mcc_h1350 = _source61.dtor_op2;
                      RAST._IExpr _2147___mcc_h1351 = _source61.dtor_left;
                      RAST._IExpr _2148___mcc_h1352 = _source61.dtor_right;
                      DAST.Format._IBinOpFormat _2149___mcc_h1353 = _source61.dtor_format2;
                      return this;
                    } else if (_source61.is_TypeAscription) {
                      RAST._IExpr _2150___mcc_h1358 = _source61.dtor_left;
                      RAST._IType _2151___mcc_h1359 = _source61.dtor_tpe;
                      return this;
                    } else if (_source61.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _2152___mcc_h1362 = _source61.dtor_value;
                      return this;
                    } else if (_source61.is_LiteralBool) {
                      bool _2153___mcc_h1364 = _source61.dtor_bvalue;
                      return this;
                    } else if (_source61.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _2154___mcc_h1366 = _source61.dtor_value;
                      bool _2155___mcc_h1367 = _source61.dtor_binary;
                      return this;
                    } else if (_source61.is_DeclareVar) {
                      RAST._IDeclareType _2156___mcc_h1370 = _source61.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _2157___mcc_h1371 = _source61.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _2158___mcc_h1372 = _source61.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _2159___mcc_h1373 = _source61.dtor_optRhs;
                      return this;
                    } else if (_source61.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _2160___mcc_h1378 = _source61.dtor_names;
                      RAST._IExpr _2161___mcc_h1379 = _source61.dtor_rhs;
                      return this;
                    } else if (_source61.is_IfExpr) {
                      RAST._IExpr _2162___mcc_h1382 = _source61.dtor_cond;
                      RAST._IExpr _2163___mcc_h1383 = _source61.dtor_thn;
                      RAST._IExpr _2164___mcc_h1384 = _source61.dtor_els;
                      return this;
                    } else if (_source61.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _2165___mcc_h1388 = _source61.dtor_optCond;
                      RAST._IExpr _2166___mcc_h1389 = _source61.dtor_underlying;
                      return this;
                    } else if (_source61.is_For) {
                      Dafny.ISequence<Dafny.Rune> _2167___mcc_h1392 = _source61.dtor_name;
                      RAST._IExpr _2168___mcc_h1393 = _source61.dtor_range;
                      RAST._IExpr _2169___mcc_h1394 = _source61.dtor_body;
                      return this;
                    } else if (_source61.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _2170___mcc_h1398 = _source61.dtor_lbl;
                      RAST._IExpr _2171___mcc_h1399 = _source61.dtor_underlying;
                      return this;
                    } else if (_source61.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2172___mcc_h1402 = _source61.dtor_optLbl;
                      return this;
                    } else if (_source61.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2173___mcc_h1404 = _source61.dtor_optLbl;
                      return this;
                    } else if (_source61.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _2174___mcc_h1406 = _source61.dtor_optExpr;
                      return this;
                    } else if (_source61.is_CallType) {
                      RAST._IExpr _2175___mcc_h1408 = _source61.dtor_obj;
                      Dafny.ISequence<RAST._IType> _2176___mcc_h1409 = _source61.dtor_typeParameters;
                      return this;
                    } else if (_source61.is_Call) {
                      RAST._IExpr _2177___mcc_h1412 = _source61.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _2178___mcc_h1413 = _source61.dtor_arguments;
                      return this;
                    } else if (_source61.is_Select) {
                      RAST._IExpr _2179___mcc_h1416 = _source61.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2180___mcc_h1417 = _source61.dtor_name;
                      return this;
                    } else {
                      RAST._IExpr _2181___mcc_h1420 = _source61.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2182___mcc_h1421 = _source61.dtor_name;
                      if (object.Equals(_2182___mcc_h1421, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))) {
                        Dafny.ISequence<RAST._IExpr> _2183_args = _2131___mcc_h1319;
                        RAST._IExpr _2184_base = _2181___mcc_h1420;
                        if (((new BigInteger((_2183_args).Count)) == (BigInteger.One)) && ((object.Equals(_2184_base, RAST.__default.dafny__runtime)) || (object.Equals(_2184_base, RAST.__default.@global)))) {
                          RAST._IExpr _source62 = (_2183_args).Select(BigInteger.Zero);
                          if (_source62.is_RawExpr) {
                            Dafny.ISequence<Dafny.Rune> _2185___mcc_h1432 = _source62.dtor_content;
                            return this;
                          } else if (_source62.is_ExprFromType) {
                            RAST._IType _2186___mcc_h1434 = _source62.dtor_tpe;
                            return this;
                          } else if (_source62.is_Identifier) {
                            Dafny.ISequence<Dafny.Rune> _2187___mcc_h1436 = _source62.dtor_name;
                            return this;
                          } else if (_source62.is_Match) {
                            RAST._IExpr _2188___mcc_h1438 = _source62.dtor_matchee;
                            Dafny.ISequence<RAST._IMatchCase> _2189___mcc_h1439 = _source62.dtor_cases;
                            return this;
                          } else if (_source62.is_StmtExpr) {
                            RAST._IExpr _2190___mcc_h1442 = _source62.dtor_stmt;
                            RAST._IExpr _2191___mcc_h1443 = _source62.dtor_rhs;
                            return this;
                          } else if (_source62.is_Block) {
                            RAST._IExpr _2192___mcc_h1446 = _source62.dtor_underlying;
                            return this;
                          } else if (_source62.is_StructBuild) {
                            RAST._IExpr _2193___mcc_h1448 = _source62.dtor_underlying;
                            Dafny.ISequence<RAST._IAssignIdentifier> _2194___mcc_h1449 = _source62.dtor_assignments;
                            return this;
                          } else if (_source62.is_Tuple) {
                            Dafny.ISequence<RAST._IExpr> _2195___mcc_h1452 = _source62.dtor_arguments;
                            return this;
                          } else if (_source62.is_UnaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2196___mcc_h1454 = _source62.dtor_op1;
                            RAST._IExpr _2197___mcc_h1455 = _source62.dtor_underlying;
                            DAST.Format._IUnOpFormat _2198___mcc_h1456 = _source62.dtor_format;
                            return this;
                          } else if (_source62.is_BinaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2199___mcc_h1460 = _source62.dtor_op2;
                            RAST._IExpr _2200___mcc_h1461 = _source62.dtor_left;
                            RAST._IExpr _2201___mcc_h1462 = _source62.dtor_right;
                            DAST.Format._IBinOpFormat _2202___mcc_h1463 = _source62.dtor_format2;
                            return this;
                          } else if (_source62.is_TypeAscription) {
                            RAST._IExpr _2203___mcc_h1468 = _source62.dtor_left;
                            RAST._IType _2204___mcc_h1469 = _source62.dtor_tpe;
                            return this;
                          } else if (_source62.is_LiteralInt) {
                            Dafny.ISequence<Dafny.Rune> _2205___mcc_h1472 = _source62.dtor_value;
                            Dafny.ISequence<Dafny.Rune> _2206_number = _2205___mcc_h1472;
                            return RAST.Expr.create_LiteralInt(_2206_number);
                          } else if (_source62.is_LiteralBool) {
                            bool _2207___mcc_h1474 = _source62.dtor_bvalue;
                            return this;
                          } else if (_source62.is_LiteralString) {
                            Dafny.ISequence<Dafny.Rune> _2208___mcc_h1476 = _source62.dtor_value;
                            bool _2209___mcc_h1477 = _source62.dtor_binary;
                            Dafny.ISequence<Dafny.Rune> _2210_number = _2208___mcc_h1476;
                            return RAST.Expr.create_LiteralInt(_2210_number);
                          } else if (_source62.is_DeclareVar) {
                            RAST._IDeclareType _2211___mcc_h1480 = _source62.dtor_declareType;
                            Dafny.ISequence<Dafny.Rune> _2212___mcc_h1481 = _source62.dtor_name;
                            Std.Wrappers._IOption<RAST._IType> _2213___mcc_h1482 = _source62.dtor_optType;
                            Std.Wrappers._IOption<RAST._IExpr> _2214___mcc_h1483 = _source62.dtor_optRhs;
                            return this;
                          } else if (_source62.is_Assign) {
                            Std.Wrappers._IOption<RAST._IAssignLhs> _2215___mcc_h1488 = _source62.dtor_names;
                            RAST._IExpr _2216___mcc_h1489 = _source62.dtor_rhs;
                            return this;
                          } else if (_source62.is_IfExpr) {
                            RAST._IExpr _2217___mcc_h1492 = _source62.dtor_cond;
                            RAST._IExpr _2218___mcc_h1493 = _source62.dtor_thn;
                            RAST._IExpr _2219___mcc_h1494 = _source62.dtor_els;
                            return this;
                          } else if (_source62.is_Loop) {
                            Std.Wrappers._IOption<RAST._IExpr> _2220___mcc_h1498 = _source62.dtor_optCond;
                            RAST._IExpr _2221___mcc_h1499 = _source62.dtor_underlying;
                            return this;
                          } else if (_source62.is_For) {
                            Dafny.ISequence<Dafny.Rune> _2222___mcc_h1502 = _source62.dtor_name;
                            RAST._IExpr _2223___mcc_h1503 = _source62.dtor_range;
                            RAST._IExpr _2224___mcc_h1504 = _source62.dtor_body;
                            return this;
                          } else if (_source62.is_Labelled) {
                            Dafny.ISequence<Dafny.Rune> _2225___mcc_h1508 = _source62.dtor_lbl;
                            RAST._IExpr _2226___mcc_h1509 = _source62.dtor_underlying;
                            return this;
                          } else if (_source62.is_Break) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2227___mcc_h1512 = _source62.dtor_optLbl;
                            return this;
                          } else if (_source62.is_Continue) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2228___mcc_h1514 = _source62.dtor_optLbl;
                            return this;
                          } else if (_source62.is_Return) {
                            Std.Wrappers._IOption<RAST._IExpr> _2229___mcc_h1516 = _source62.dtor_optExpr;
                            return this;
                          } else if (_source62.is_CallType) {
                            RAST._IExpr _2230___mcc_h1518 = _source62.dtor_obj;
                            Dafny.ISequence<RAST._IType> _2231___mcc_h1519 = _source62.dtor_typeParameters;
                            return this;
                          } else if (_source62.is_Call) {
                            RAST._IExpr _2232___mcc_h1522 = _source62.dtor_obj;
                            Dafny.ISequence<RAST._IExpr> _2233___mcc_h1523 = _source62.dtor_arguments;
                            return this;
                          } else if (_source62.is_Select) {
                            RAST._IExpr _2234___mcc_h1526 = _source62.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2235___mcc_h1527 = _source62.dtor_name;
                            return this;
                          } else {
                            RAST._IExpr _2236___mcc_h1530 = _source62.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2237___mcc_h1531 = _source62.dtor_name;
                            return this;
                          }
                        } else {
                          return this;
                        }
                      } else {
                        return this;
                      }
                    }
                  } else if (_source60.is_Select) {
                    RAST._IExpr _2238___mcc_h1424 = _source60.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2239___mcc_h1425 = _source60.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _2240___mcc_h1428 = _source60.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2241___mcc_h1429 = _source60.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              }
            }
          } else {
            return this;
          }
        }
      } else if (_source42.is_Select) {
        RAST._IExpr _2242___mcc_h1220 = _source42.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2243___mcc_h1221 = _source42.dtor_name;
        return this;
      } else {
        RAST._IExpr _2244___mcc_h1224 = _source42.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2245___mcc_h1225 = _source42.dtor_name;
        return this;
      }
    }
    public bool LeftRequiresParentheses(RAST._IExpr left) {
      return ((this).printingInfo).NeedParenthesesForLeft((left).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left) {
      if ((this).LeftRequiresParentheses(left)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public bool RightRequiresParentheses(RAST._IExpr right) {
      return ((this).printingInfo).NeedParenthesesForRight((right).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right) {
      if ((this).RightRequiresParentheses(right)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier() {
      RAST._IExpr _source63 = this;
      if (_source63.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2246___mcc_h0 = _source63.dtor_content;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_ExprFromType) {
        RAST._IType _2247___mcc_h2 = _source63.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2248___mcc_h4 = _source63.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Match) {
        RAST._IExpr _2249___mcc_h6 = _source63.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2250___mcc_h7 = _source63.dtor_cases;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_StmtExpr) {
        RAST._IExpr _2251___mcc_h10 = _source63.dtor_stmt;
        RAST._IExpr _2252___mcc_h11 = _source63.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Block) {
        RAST._IExpr _2253___mcc_h14 = _source63.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_StructBuild) {
        RAST._IExpr _2254___mcc_h16 = _source63.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2255___mcc_h17 = _source63.dtor_assignments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2256___mcc_h20 = _source63.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2257___mcc_h22 = _source63.dtor_op1;
        RAST._IExpr _2258___mcc_h23 = _source63.dtor_underlying;
        DAST.Format._IUnOpFormat _2259___mcc_h24 = _source63.dtor_format;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2260___mcc_h28 = _source63.dtor_op2;
        RAST._IExpr _2261___mcc_h29 = _source63.dtor_left;
        RAST._IExpr _2262___mcc_h30 = _source63.dtor_right;
        DAST.Format._IBinOpFormat _2263___mcc_h31 = _source63.dtor_format2;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_TypeAscription) {
        RAST._IExpr _2264___mcc_h36 = _source63.dtor_left;
        RAST._IType _2265___mcc_h37 = _source63.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2266___mcc_h40 = _source63.dtor_value;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_LiteralBool) {
        bool _2267___mcc_h42 = _source63.dtor_bvalue;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2268___mcc_h44 = _source63.dtor_value;
        bool _2269___mcc_h45 = _source63.dtor_binary;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_DeclareVar) {
        RAST._IDeclareType _2270___mcc_h48 = _source63.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2271___mcc_h49 = _source63.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2272___mcc_h50 = _source63.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2273___mcc_h51 = _source63.dtor_optRhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Assign) {
        Std.Wrappers._IOption<RAST._IAssignLhs> _2274___mcc_h56 = _source63.dtor_names;
        RAST._IExpr _2275___mcc_h57 = _source63.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_IfExpr) {
        RAST._IExpr _2276___mcc_h60 = _source63.dtor_cond;
        RAST._IExpr _2277___mcc_h61 = _source63.dtor_thn;
        RAST._IExpr _2278___mcc_h62 = _source63.dtor_els;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2279___mcc_h66 = _source63.dtor_optCond;
        RAST._IExpr _2280___mcc_h67 = _source63.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_For) {
        Dafny.ISequence<Dafny.Rune> _2281___mcc_h70 = _source63.dtor_name;
        RAST._IExpr _2282___mcc_h71 = _source63.dtor_range;
        RAST._IExpr _2283___mcc_h72 = _source63.dtor_body;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2284___mcc_h76 = _source63.dtor_lbl;
        RAST._IExpr _2285___mcc_h77 = _source63.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2286___mcc_h80 = _source63.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2287___mcc_h82 = _source63.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2288___mcc_h84 = _source63.dtor_optExpr;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_CallType) {
        RAST._IExpr _2289___mcc_h86 = _source63.dtor_obj;
        Dafny.ISequence<RAST._IType> _2290___mcc_h87 = _source63.dtor_typeParameters;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Call) {
        RAST._IExpr _2291___mcc_h90 = _source63.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2292___mcc_h91 = _source63.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source63.is_Select) {
        RAST._IExpr _2293___mcc_h94 = _source63.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2294___mcc_h95 = _source63.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else {
        RAST._IExpr _2295___mcc_h98 = _source63.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2296___mcc_h99 = _source63.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2297_id = _2296___mcc_h99;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_2297_id);
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv4 = ind;
      RAST._IExpr _source64 = (this).Optimize();
      if (_source64.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2298___mcc_h0 = _source64.dtor_content;
        RAST._IExpr _2299_r = (this).Optimize();
        return RAST.__default.AddIndent((_2299_r).dtor_content, ind);
      } else if (_source64.is_ExprFromType) {
        RAST._IType _2300___mcc_h2 = _source64.dtor_tpe;
        RAST._IType _2301_t = _2300___mcc_h2;
        return (_2301_t)._ToString(ind);
      } else if (_source64.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2302___mcc_h4 = _source64.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2303_name = _2302___mcc_h4;
        return _2303_name;
      } else if (_source64.is_Match) {
        RAST._IExpr _2304___mcc_h6 = _source64.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2305___mcc_h7 = _source64.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _2306_cases = _2305___mcc_h7;
        RAST._IExpr _2307_matchee = _2304___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match "), (_2307_matchee)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IMatchCase>(_2306_cases, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>>>((_2308_ind) => ((System.Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>)((_2309_c) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2308_ind), RAST.__default.IND), (_2309_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2308_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source64.is_StmtExpr) {
        RAST._IExpr _2310___mcc_h10 = _source64.dtor_stmt;
        RAST._IExpr _2311___mcc_h11 = _source64.dtor_rhs;
        RAST._IExpr _2312_rhs = _2311___mcc_h11;
        RAST._IExpr _2313_stmt = _2310___mcc_h10;
        if (((_2313_stmt).is_RawExpr) && (((_2313_stmt).dtor_content).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
          return (_2312_rhs)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2313_stmt)._ToString(ind), (((_2313_stmt).NoExtraSemicolonAfter()) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), (_2312_rhs)._ToString(ind));
        }
      } else if (_source64.is_Block) {
        RAST._IExpr _2314___mcc_h14 = _source64.dtor_underlying;
        RAST._IExpr _2315_underlying = _2314___mcc_h14;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n"), ind), RAST.__default.IND), (_2315_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source64.is_StructBuild) {
        RAST._IExpr _2316___mcc_h16 = _source64.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2317___mcc_h17 = _source64.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _2318_assignments = _2317___mcc_h17;
        RAST._IExpr _2319_name = _2316___mcc_h16;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2319_name)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IAssignIdentifier>(_2318_assignments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>>>((_2320_ind) => ((System.Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>)((_2321_assignment) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2320_ind), RAST.__default.IND), (_2321_assignment)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2320_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2318_assignments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source64.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2322___mcc_h20 = _source64.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2323_arguments = _2322___mcc_h20;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IExpr>(_2323_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2324_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2325_arg) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2324_ind), RAST.__default.IND), (_2325_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2324_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2323_arguments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else if (_source64.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2326___mcc_h22 = _source64.dtor_op1;
        RAST._IExpr _2327___mcc_h23 = _source64.dtor_underlying;
        DAST.Format._IUnOpFormat _2328___mcc_h24 = _source64.dtor_format;
        DAST.Format._IUnOpFormat _2329_format = _2328___mcc_h24;
        RAST._IExpr _2330_underlying = _2327___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2331_op = _2326___mcc_h22;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs41 = ((((this).printingInfo).NeedParenthesesFor((_2330_underlying).printingInfo)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
        Dafny.ISequence<Dafny.Rune> _2332_leftP = _let_tmp_rhs41.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2333_rightP = _let_tmp_rhs41.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2334_leftOp = ((((_2331_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) && (!(_2332_leftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")))) ? (Dafny.Sequence<Dafny.Rune>.Concat(_2331_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : ((((_2331_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (_2331_op))));
        Dafny.ISequence<Dafny.Rune> _2335_rightOp = (((_2331_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (_2331_op) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2334_leftOp, _2332_leftP), (_2330_underlying)._ToString(ind)), _2333_rightP), _2335_rightOp);
      } else if (_source64.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2336___mcc_h28 = _source64.dtor_op2;
        RAST._IExpr _2337___mcc_h29 = _source64.dtor_left;
        RAST._IExpr _2338___mcc_h30 = _source64.dtor_right;
        DAST.Format._IBinOpFormat _2339___mcc_h31 = _source64.dtor_format2;
        DAST.Format._IBinOpFormat _2340_format = _2339___mcc_h31;
        RAST._IExpr _2341_right = _2338___mcc_h30;
        RAST._IExpr _2342_left = _2337___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2343_op2 = _2336___mcc_h28;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs42 = (this).LeftParentheses(_2342_left);
        Dafny.ISequence<Dafny.Rune> _2344_leftLeftP = _let_tmp_rhs42.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2345_leftRighP = _let_tmp_rhs42.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs43 = (this).RightParentheses(_2341_right);
        Dafny.ISequence<Dafny.Rune> _2346_rightLeftP = _let_tmp_rhs43.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2347_rightRightP = _let_tmp_rhs43.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2348_opRendered = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _2343_op2), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
        Dafny.ISequence<Dafny.Rune> _2349_indLeft = (((_2344_leftLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        Dafny.ISequence<Dafny.Rune> _2350_indRight = (((_2346_rightLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2344_leftLeftP, (_2342_left)._ToString(_2349_indLeft)), _2345_leftRighP), _2348_opRendered), _2346_rightLeftP), (_2341_right)._ToString(_2350_indRight)), _2347_rightRightP);
      } else if (_source64.is_TypeAscription) {
        RAST._IExpr _2351___mcc_h36 = _source64.dtor_left;
        RAST._IType _2352___mcc_h37 = _source64.dtor_tpe;
        RAST._IType _2353_tpe = _2352___mcc_h37;
        RAST._IExpr _2354_left = _2351___mcc_h36;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs44 = (this).LeftParentheses(_2354_left);
        Dafny.ISequence<Dafny.Rune> _2355_leftLeftP = _let_tmp_rhs44.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2356_leftRightP = _let_tmp_rhs44.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2355_leftLeftP, (_2354_left)._ToString(RAST.__default.IND)), _2356_leftRightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ")), (_2353_tpe)._ToString(RAST.__default.IND));
      } else if (_source64.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2357___mcc_h40 = _source64.dtor_value;
        Dafny.ISequence<Dafny.Rune> _2358_number = _2357___mcc_h40;
        return _2358_number;
      } else if (_source64.is_LiteralBool) {
        bool _2359___mcc_h42 = _source64.dtor_bvalue;
        bool _2360_b = _2359___mcc_h42;
        if (_2360_b) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
        } else {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
        }
      } else if (_source64.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2361___mcc_h44 = _source64.dtor_value;
        bool _2362___mcc_h45 = _source64.dtor_binary;
        bool _2363_binary = _2362___mcc_h45;
        Dafny.ISequence<Dafny.Rune> _2364_characters = _2361___mcc_h44;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((_2363_binary) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("b")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\"")), _2364_characters), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\""));
      } else if (_source64.is_DeclareVar) {
        RAST._IDeclareType _2365___mcc_h48 = _source64.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2366___mcc_h49 = _source64.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2367___mcc_h50 = _source64.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2368___mcc_h51 = _source64.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _2369_optExpr = _2368___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _2370_optType = _2367___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _2371_name = _2366___mcc_h49;
        RAST._IDeclareType _2372_declareType = _2365___mcc_h48;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let "), ((object.Equals(_2372_declareType, RAST.DeclareType.create_MUT())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), _2371_name), (((_2370_optType).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), ((_2370_optType).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), (((_2369_optExpr).is_Some) ? (Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(((_2369_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)), _pat_let6_0 => Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(_pat_let6_0, _2373_optExprString => (((_2373_optExprString).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("= /*issue with empty RHS*/"), ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_source65) => {
          if (_source65.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _2374___mcc_h102 = _source65.dtor_content;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty Raw expr");
          } else if (_source65.is_ExprFromType) {
            RAST._IType _2375___mcc_h104 = _source65.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _2376___mcc_h106 = _source65.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Match) {
            RAST._IExpr _2377___mcc_h108 = _source65.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _2378___mcc_h109 = _source65.dtor_cases;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_StmtExpr) {
            RAST._IExpr _2379___mcc_h112 = _source65.dtor_stmt;
            RAST._IExpr _2380___mcc_h113 = _source65.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Block) {
            RAST._IExpr _2381___mcc_h116 = _source65.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_StructBuild) {
            RAST._IExpr _2382___mcc_h118 = _source65.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _2383___mcc_h119 = _source65.dtor_assignments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _2384___mcc_h122 = _source65.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _2385___mcc_h124 = _source65.dtor_op1;
            RAST._IExpr _2386___mcc_h125 = _source65.dtor_underlying;
            DAST.Format._IUnOpFormat _2387___mcc_h126 = _source65.dtor_format;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _2388___mcc_h130 = _source65.dtor_op2;
            RAST._IExpr _2389___mcc_h131 = _source65.dtor_left;
            RAST._IExpr _2390___mcc_h132 = _source65.dtor_right;
            DAST.Format._IBinOpFormat _2391___mcc_h133 = _source65.dtor_format2;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_TypeAscription) {
            RAST._IExpr _2392___mcc_h138 = _source65.dtor_left;
            RAST._IType _2393___mcc_h139 = _source65.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _2394___mcc_h142 = _source65.dtor_value;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty int literal");
          } else if (_source65.is_LiteralBool) {
            bool _2395___mcc_h144 = _source65.dtor_bvalue;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _2396___mcc_h146 = _source65.dtor_value;
            bool _2397___mcc_h147 = _source65.dtor_binary;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty string literal");
          } else if (_source65.is_DeclareVar) {
            RAST._IDeclareType _2398___mcc_h150 = _source65.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _2399___mcc_h151 = _source65.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _2400___mcc_h152 = _source65.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _2401___mcc_h153 = _source65.dtor_optRhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Assign) {
            Std.Wrappers._IOption<RAST._IAssignLhs> _2402___mcc_h158 = _source65.dtor_names;
            RAST._IExpr _2403___mcc_h159 = _source65.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_IfExpr) {
            RAST._IExpr _2404___mcc_h162 = _source65.dtor_cond;
            RAST._IExpr _2405___mcc_h163 = _source65.dtor_thn;
            RAST._IExpr _2406___mcc_h164 = _source65.dtor_els;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _2407___mcc_h168 = _source65.dtor_optCond;
            RAST._IExpr _2408___mcc_h169 = _source65.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_For) {
            Dafny.ISequence<Dafny.Rune> _2409___mcc_h172 = _source65.dtor_name;
            RAST._IExpr _2410___mcc_h173 = _source65.dtor_range;
            RAST._IExpr _2411___mcc_h174 = _source65.dtor_body;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _2412___mcc_h178 = _source65.dtor_lbl;
            RAST._IExpr _2413___mcc_h179 = _source65.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2414___mcc_h182 = _source65.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2415___mcc_h184 = _source65.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _2416___mcc_h186 = _source65.dtor_optExpr;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_CallType) {
            RAST._IExpr _2417___mcc_h188 = _source65.dtor_obj;
            Dafny.ISequence<RAST._IType> _2418___mcc_h189 = _source65.dtor_typeParameters;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Call) {
            RAST._IExpr _2419___mcc_h192 = _source65.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _2420___mcc_h193 = _source65.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source65.is_Select) {
            RAST._IExpr _2421___mcc_h196 = _source65.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2422___mcc_h197 = _source65.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else {
            RAST._IExpr _2423___mcc_h200 = _source65.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2424___mcc_h201 = _source65.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          }
        }))((_2369_optExpr).dtor_value))) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "), _2373_optExprString)))))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source64.is_Assign) {
        Std.Wrappers._IOption<RAST._IAssignLhs> _2425___mcc_h56 = _source64.dtor_names;
        RAST._IExpr _2426___mcc_h57 = _source64.dtor_rhs;
        RAST._IExpr _2427_expr = _2426___mcc_h57;
        Std.Wrappers._IOption<RAST._IAssignLhs> _2428_names = _2425___mcc_h56;
        Dafny.ISequence<Dafny.Rune> _2429_lhs = ((System.Func<Std.Wrappers._IOption<RAST._IAssignLhs>, Dafny.ISequence<Dafny.Rune>>)((_source66) => {
          if (_source66.is_None) {
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ = ");
          } else {
            RAST._IAssignLhs _2430___mcc_h204 = _source66.dtor_value;
            RAST._IAssignLhs _source67 = _2430___mcc_h204;
            if (_source67.is_LocalVar) {
              Dafny.ISequence<Dafny.Rune> _2431___mcc_h205 = _source67.dtor_name;
              Dafny.ISequence<Dafny.Rune> _2432_name = _2431___mcc_h205;
              return Dafny.Sequence<Dafny.Rune>.Concat(_2432_name, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            } else if (_source67.is_SelectMember) {
              RAST._IExpr _2433___mcc_h206 = _source67.dtor_on;
              Dafny.ISequence<Dafny.Rune> _2434___mcc_h207 = _source67.dtor_field;
              Dafny.ISequence<Dafny.Rune> _2435_field = _2434___mcc_h207;
              RAST._IExpr _2436_member = _2433___mcc_h206;
              return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2436_member)._ToString(RAST.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2435_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            } else {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2437___mcc_h208 = _source67.dtor_names;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2438_names = _2437___mcc_h208;
              return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(_2438_names, ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_2439_name) => {
                return _2439_name;
              })), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") = "));
            }
          }
        }))(_2428_names);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2429_lhs, (_2427_expr)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source64.is_IfExpr) {
        RAST._IExpr _2440___mcc_h60 = _source64.dtor_cond;
        RAST._IExpr _2441___mcc_h61 = _source64.dtor_thn;
        RAST._IExpr _2442___mcc_h62 = _source64.dtor_els;
        RAST._IExpr _2443_els = _2442___mcc_h62;
        RAST._IExpr _2444_thn = _2441___mcc_h61;
        RAST._IExpr _2445_cond = _2440___mcc_h60;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if "), (_2445_cond)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2444_thn)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")), ((object.Equals(_2443_els, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" else {\n"), ind), RAST.__default.IND), (_2443_els)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")))));
      } else if (_source64.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2446___mcc_h66 = _source64.dtor_optCond;
        RAST._IExpr _2447___mcc_h67 = _source64.dtor_underlying;
        RAST._IExpr _2448_underlying = _2447___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _2449_optCond = _2446___mcc_h66;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source68) => {
          if (_source68.is_None) {
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop");
          } else {
            RAST._IExpr _2450___mcc_h209 = _source68.dtor_value;
            RAST._IExpr _2451_c = _2450___mcc_h209;
            return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while "), (_2451_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv4, RAST.__default.IND)));
          }
        }))(_2449_optCond), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2448_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source64.is_For) {
        Dafny.ISequence<Dafny.Rune> _2452___mcc_h70 = _source64.dtor_name;
        RAST._IExpr _2453___mcc_h71 = _source64.dtor_range;
        RAST._IExpr _2454___mcc_h72 = _source64.dtor_body;
        RAST._IExpr _2455_body = _2454___mcc_h72;
        RAST._IExpr _2456_range = _2453___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _2457_name = _2452___mcc_h70;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for "), _2457_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" in ")), (_2456_range)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2455_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source64.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2458___mcc_h76 = _source64.dtor_lbl;
        RAST._IExpr _2459___mcc_h77 = _source64.dtor_underlying;
        RAST._IExpr _2460_underlying = _2459___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _2461_name = _2458___mcc_h76;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'"), _2461_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_2460_underlying)._ToString(ind));
      } else if (_source64.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2462___mcc_h80 = _source64.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2463_optLbl = _2462___mcc_h80;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source69 = _2463_optLbl;
        if (_source69.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2464___mcc_h210 = _source69.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2465_lbl = _2464___mcc_h210;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break '"), _2465_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source64.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2466___mcc_h82 = _source64.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2467_optLbl = _2466___mcc_h82;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source70 = _2467_optLbl;
        if (_source70.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2468___mcc_h211 = _source70.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2469_lbl = _2468___mcc_h211;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue '"), _2469_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source64.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2470___mcc_h84 = _source64.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _2471_optExpr = _2470___mcc_h84;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), (((_2471_optExpr).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), ((_2471_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source64.is_CallType) {
        RAST._IExpr _2472___mcc_h86 = _source64.dtor_obj;
        Dafny.ISequence<RAST._IType> _2473___mcc_h87 = _source64.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _2474_tpes = _2473___mcc_h87;
        RAST._IExpr _2475_expr = _2472___mcc_h86;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs45 = (this).LeftParentheses(_2475_expr);
        Dafny.ISequence<Dafny.Rune> _2476_leftP = _let_tmp_rhs45.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2477_rightP = _let_tmp_rhs45.dtor__1;
        if ((_2474_tpes).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return (_2475_expr)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2476_leftP, (_2475_expr)._ToString(ind)), _2477_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::<")), RAST.__default.SeqToString<RAST._IType>(_2474_tpes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_2478_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_2479_tpe) => {
            return (_2479_tpe)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2478_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
        }
      } else if (_source64.is_Call) {
        RAST._IExpr _2480___mcc_h90 = _source64.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2481___mcc_h91 = _source64.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2482_args = _2481___mcc_h91;
        RAST._IExpr _2483_expr = _2480___mcc_h90;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs46 = (this).LeftParentheses(_2483_expr);
        Dafny.ISequence<Dafny.Rune> _2484_leftP = _let_tmp_rhs46.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2485_rightP = _let_tmp_rhs46.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs47 = ((System.Func<Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>>, _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>)((_source71) => {
          if (_source71.is_None) {
            return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          } else {
            Dafny.ISequence<Dafny.Rune> _2486___mcc_h212 = _source71.dtor_value;
            if (object.Equals(_2486___mcc_h212, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2486___mcc_h212, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2486___mcc_h212, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else if (object.Equals(_2486___mcc_h212, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
            }
          }
        }))((_2483_expr).RightMostIdentifier());
        Dafny.ISequence<Dafny.Rune> _2487_leftCallP = _let_tmp_rhs47.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2488_rightCallP = _let_tmp_rhs47.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2484_leftP, (_2483_expr)._ToString(ind)), _2485_rightP), _2487_leftCallP), RAST.__default.SeqToString<RAST._IExpr>(_2482_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2489_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2490_arg) => {
          return (_2490_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2489_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), _2488_rightCallP);
      } else if (_source64.is_Select) {
        RAST._IExpr _2491___mcc_h94 = _source64.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2492___mcc_h95 = _source64.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2493_name = _2492___mcc_h95;
        RAST._IExpr _2494_expression = _2491___mcc_h94;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs48 = (this).LeftParentheses(_2494_expression);
        Dafny.ISequence<Dafny.Rune> _2495_leftP = _let_tmp_rhs48.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2496_rightP = _let_tmp_rhs48.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2495_leftP, (_2494_expression)._ToString(ind)), _2496_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2493_name);
      } else {
        RAST._IExpr _2497___mcc_h98 = _source64.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2498___mcc_h99 = _source64.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2499_name = _2498___mcc_h99;
        RAST._IExpr _2500_expression = _2497___mcc_h98;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs49 = (this).LeftParentheses(_2500_expression);
        Dafny.ISequence<Dafny.Rune> _2501_leftP = _let_tmp_rhs49.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2502_rightP = _let_tmp_rhs49.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2501_leftP, (_2500_expression)._ToString(ind)), _2502_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2499_name);
      }
    }
    public RAST._IExpr Then(RAST._IExpr rhs2) {
      if ((this).is_StmtExpr) {
        return RAST.Expr.create_StmtExpr((this).dtor_stmt, ((this).dtor_rhs).Then(rhs2));
      } else if (object.Equals(this, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
        return rhs2;
      } else {
        return RAST.Expr.create_StmtExpr(this, rhs2);
      }
    }
    public RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_Select(this, name);
    }
    public RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_MemberSelect(this, name);
    }
    public RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters) {
      return RAST.Expr.create_CallType(this, typeParameters);
    }
    public RAST._IExpr ApplyType1(RAST._IType typeParameter) {
      return RAST.Expr.create_CallType(this, Dafny.Sequence<RAST._IType>.FromElements(typeParameter));
    }
    public RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments) {
      return RAST.Expr.create_Call(this, arguments);
    }
    public RAST._IExpr Apply1(RAST._IExpr argument) {
      return RAST.Expr.create_Call(this, Dafny.Sequence<RAST._IExpr>.FromElements(argument));
    }
    public RAST._IPrintingInfo printingInfo { get {
      RAST._IExpr _source72 = this;
      if (_source72.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2503___mcc_h0 = _source72.dtor_content;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_ExprFromType) {
        RAST._IType _2504___mcc_h2 = _source72.dtor_tpe;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source72.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2505___mcc_h4 = _source72.dtor_name;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source72.is_Match) {
        RAST._IExpr _2506___mcc_h6 = _source72.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2507___mcc_h7 = _source72.dtor_cases;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_StmtExpr) {
        RAST._IExpr _2508___mcc_h10 = _source72.dtor_stmt;
        RAST._IExpr _2509___mcc_h11 = _source72.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Block) {
        RAST._IExpr _2510___mcc_h14 = _source72.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_StructBuild) {
        RAST._IExpr _2511___mcc_h16 = _source72.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2512___mcc_h17 = _source72.dtor_assignments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2513___mcc_h20 = _source72.dtor_arguments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2514___mcc_h22 = _source72.dtor_op1;
        RAST._IExpr _2515___mcc_h23 = _source72.dtor_underlying;
        DAST.Format._IUnOpFormat _2516___mcc_h24 = _source72.dtor_format;
        DAST.Format._IUnOpFormat _2517_format = _2516___mcc_h24;
        RAST._IExpr _2518_underlying = _2515___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2519_op = _2514___mcc_h22;
        if (object.Equals(_2519_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) {
          return RAST.PrintingInfo.create_SuffixPrecedence(new BigInteger(5));
        } else if (object.Equals(_2519_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2519_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2519_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2519_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2519_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else {
          return RAST.PrintingInfo.create_UnknownPrecedence();
        }
      } else if (_source72.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2520___mcc_h28 = _source72.dtor_op2;
        RAST._IExpr _2521___mcc_h29 = _source72.dtor_left;
        RAST._IExpr _2522___mcc_h30 = _source72.dtor_right;
        DAST.Format._IBinOpFormat _2523___mcc_h31 = _source72.dtor_format2;
        DAST.Format._IBinOpFormat _2524_format = _2523___mcc_h31;
        RAST._IExpr _2525_right = _2522___mcc_h30;
        RAST._IExpr _2526_left = _2521___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2527_op2 = _2520___mcc_h28;
        if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(50), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(60), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(70), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(90), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(100), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".."))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("..="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2527_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(BigInteger.Zero, RAST.Associativity.create_RequiresParentheses());
        }
      } else if (_source72.is_TypeAscription) {
        RAST._IExpr _2528___mcc_h36 = _source72.dtor_left;
        RAST._IType _2529___mcc_h37 = _source72.dtor_tpe;
        RAST._IType _2530_tpe = _2529___mcc_h37;
        RAST._IExpr _2531_left = _2528___mcc_h36;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(10), RAST.Associativity.create_LeftToRight());
      } else if (_source72.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2532___mcc_h40 = _source72.dtor_value;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source72.is_LiteralBool) {
        bool _2533___mcc_h42 = _source72.dtor_bvalue;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source72.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2534___mcc_h44 = _source72.dtor_value;
        bool _2535___mcc_h45 = _source72.dtor_binary;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source72.is_DeclareVar) {
        RAST._IDeclareType _2536___mcc_h48 = _source72.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2537___mcc_h49 = _source72.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2538___mcc_h50 = _source72.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2539___mcc_h51 = _source72.dtor_optRhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Assign) {
        Std.Wrappers._IOption<RAST._IAssignLhs> _2540___mcc_h56 = _source72.dtor_names;
        RAST._IExpr _2541___mcc_h57 = _source72.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_IfExpr) {
        RAST._IExpr _2542___mcc_h60 = _source72.dtor_cond;
        RAST._IExpr _2543___mcc_h61 = _source72.dtor_thn;
        RAST._IExpr _2544___mcc_h62 = _source72.dtor_els;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2545___mcc_h66 = _source72.dtor_optCond;
        RAST._IExpr _2546___mcc_h67 = _source72.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_For) {
        Dafny.ISequence<Dafny.Rune> _2547___mcc_h70 = _source72.dtor_name;
        RAST._IExpr _2548___mcc_h71 = _source72.dtor_range;
        RAST._IExpr _2549___mcc_h72 = _source72.dtor_body;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2550___mcc_h76 = _source72.dtor_lbl;
        RAST._IExpr _2551___mcc_h77 = _source72.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2552___mcc_h80 = _source72.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2553___mcc_h82 = _source72.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2554___mcc_h84 = _source72.dtor_optExpr;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source72.is_CallType) {
        RAST._IExpr _2555___mcc_h86 = _source72.dtor_obj;
        Dafny.ISequence<RAST._IType> _2556___mcc_h87 = _source72.dtor_typeParameters;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source72.is_Call) {
        RAST._IExpr _2557___mcc_h90 = _source72.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2558___mcc_h91 = _source72.dtor_arguments;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source72.is_Select) {
        RAST._IExpr _2559___mcc_h94 = _source72.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2560___mcc_h95 = _source72.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2561_name = _2560___mcc_h95;
        RAST._IExpr _2562_underlying = _2559___mcc_h94;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else {
        RAST._IExpr _2563___mcc_h98 = _source72.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2564___mcc_h99 = _source72.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2565_name = _2564___mcc_h99;
        RAST._IExpr _2566_underlying = _2563___mcc_h98;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      }
    } }
  }
  public class Expr_RawExpr : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Expr_RawExpr(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_RawExpr(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_RawExpr;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.RawExpr";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_ExprFromType : Expr {
    public readonly RAST._IType _tpe;
    public Expr_ExprFromType(RAST._IType tpe) : base() {
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_ExprFromType(_tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_ExprFromType;
      return oth != null && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.ExprFromType";
      s += "(";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_Identifier : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Identifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Identifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Identifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Identifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_Match : Expr {
    public readonly RAST._IExpr _matchee;
    public readonly Dafny.ISequence<RAST._IMatchCase> _cases;
    public Expr_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) : base() {
      this._matchee = matchee;
      this._cases = cases;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Match(_matchee, _cases);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Match;
      return oth != null && object.Equals(this._matchee, oth._matchee) && object.Equals(this._cases, oth._cases);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._matchee));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cases));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Match";
      s += "(";
      s += Dafny.Helpers.ToString(this._matchee);
      s += ", ";
      s += Dafny.Helpers.ToString(this._cases);
      s += ")";
      return s;
    }
  }
  public class Expr_StmtExpr : Expr {
    public readonly RAST._IExpr _stmt;
    public readonly RAST._IExpr _rhs;
    public Expr_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) : base() {
      this._stmt = stmt;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StmtExpr(_stmt, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StmtExpr;
      return oth != null && object.Equals(this._stmt, oth._stmt) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._stmt));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StmtExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._stmt);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Block : Expr {
    public readonly RAST._IExpr _underlying;
    public Expr_Block(RAST._IExpr underlying) : base() {
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Block(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Block;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Block";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_StructBuild : Expr {
    public readonly RAST._IExpr _underlying;
    public readonly Dafny.ISequence<RAST._IAssignIdentifier> _assignments;
    public Expr_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) : base() {
      this._underlying = underlying;
      this._assignments = assignments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StructBuild(_underlying, _assignments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StructBuild;
      return oth != null && object.Equals(this._underlying, oth._underlying) && object.Equals(this._assignments, oth._assignments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._assignments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StructBuild";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._assignments);
      s += ")";
      return s;
    }
  }
  public class Expr_Tuple : Expr {
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Tuple(Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Tuple(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Tuple;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_UnaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op1;
    public readonly RAST._IExpr _underlying;
    public readonly DAST.Format._IUnOpFormat _format;
    public Expr_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) : base() {
      this._op1 = op1;
      this._underlying = underlying;
      this._format = format;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_UnaryOp(_op1, _underlying, _format);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_UnaryOp;
      return oth != null && object.Equals(this._op1, oth._op1) && object.Equals(this._underlying, oth._underlying) && object.Equals(this._format, oth._format);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.UnaryOp";
      s += "(";
      s += this._op1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format);
      s += ")";
      return s;
    }
  }
  public class Expr_BinaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op2;
    public readonly RAST._IExpr _left;
    public readonly RAST._IExpr _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expr_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) : base() {
      this._op2 = op2;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_BinaryOp(_op2, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_BinaryOp;
      return oth != null && object.Equals(this._op2, oth._op2) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op2));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.BinaryOp";
      s += "(";
      s += this._op2.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expr_TypeAscription : Expr {
    public readonly RAST._IExpr _left;
    public readonly RAST._IType _tpe;
    public Expr_TypeAscription(RAST._IExpr left, RAST._IType tpe) : base() {
      this._left = left;
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_TypeAscription(_left, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_TypeAscription;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.TypeAscription";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralInt : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public Expr_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) : base() {
      this._value = @value;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralInt(_value);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralInt;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralInt";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralBool : Expr {
    public readonly bool _bvalue;
    public Expr_LiteralBool(bool bvalue) : base() {
      this._bvalue = bvalue;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralBool(_bvalue);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralBool;
      return oth != null && this._bvalue == oth._bvalue;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._bvalue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralBool";
      s += "(";
      s += Dafny.Helpers.ToString(this._bvalue);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralString : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public readonly bool _binary;
    public Expr_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) : base() {
      this._value = @value;
      this._binary = binary;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralString(_value, _binary);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralString;
      return oth != null && object.Equals(this._value, oth._value) && this._binary == oth._binary;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._binary));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralString";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._binary);
      s += ")";
      return s;
    }
  }
  public class Expr_DeclareVar : Expr {
    public readonly RAST._IDeclareType _declareType;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Std.Wrappers._IOption<RAST._IType> _optType;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optRhs;
    public Expr_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) : base() {
      this._declareType = declareType;
      this._name = name;
      this._optType = optType;
      this._optRhs = optRhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_DeclareVar(_declareType, _name, _optType, _optRhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_DeclareVar;
      return oth != null && object.Equals(this._declareType, oth._declareType) && object.Equals(this._name, oth._name) && object.Equals(this._optType, oth._optType) && object.Equals(this._optRhs, oth._optRhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._declareType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optRhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.DeclareVar";
      s += "(";
      s += Dafny.Helpers.ToString(this._declareType);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optRhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Assign : Expr {
    public readonly Std.Wrappers._IOption<RAST._IAssignLhs> _names;
    public readonly RAST._IExpr _rhs;
    public Expr_Assign(Std.Wrappers._IOption<RAST._IAssignLhs> names, RAST._IExpr rhs) : base() {
      this._names = names;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Assign(_names, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Assign;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_IfExpr : Expr {
    public readonly RAST._IExpr _cond;
    public readonly RAST._IExpr _thn;
    public readonly RAST._IExpr _els;
    public Expr_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_IfExpr(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_IfExpr;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.IfExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expr_Loop : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optCond;
    public readonly RAST._IExpr _underlying;
    public Expr_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) : base() {
      this._optCond = optCond;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Loop(_optCond, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Loop;
      return oth != null && object.Equals(this._optCond, oth._optCond) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optCond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Loop";
      s += "(";
      s += Dafny.Helpers.ToString(this._optCond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_For : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IExpr _range;
    public readonly RAST._IExpr _body;
    public Expr_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) : base() {
      this._name = name;
      this._range = range;
      this._body = body;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_For(_name, _range, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_For;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._range, oth._range) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.For";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expr_Labelled : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly RAST._IExpr _underlying;
    public Expr_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) : base() {
      this._lbl = lbl;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Labelled(_lbl, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Labelled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Labelled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_Break : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Break(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Break;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Continue : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Continue(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Continue;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Continue";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Return : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optExpr;
    public Expr_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) : base() {
      this._optExpr = optExpr;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Return(_optExpr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Return;
      return oth != null && object.Equals(this._optExpr, oth._optExpr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optExpr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._optExpr);
      s += ")";
      return s;
    }
  }
  public class Expr_CallType : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IType> _typeParameters;
    public Expr_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) : base() {
      this._obj = obj;
      this._typeParameters = typeParameters;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_CallType(_obj, _typeParameters);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_CallType;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._typeParameters, oth._typeParameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.CallType";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParameters);
      s += ")";
      return s;
    }
  }
  public class Expr_Call : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._obj = obj;
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Call(_obj, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Call;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_Select : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Select(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Select;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_MemberSelect : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_MemberSelect(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_MemberSelect;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.MemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IFn {
    bool is_Fn { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IFormal> dtor_formals { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_returnType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_body { get; }
    _IFn DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Fn : _IFn {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IFormal> _formals;
    public readonly Std.Wrappers._IOption<RAST._IType> _returnType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _body;
    public Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      this._name = name;
      this._typeParams = typeParams;
      this._formals = formals;
      this._returnType = returnType;
      this._where = @where;
      this._body = body;
    }
    public _IFn DowncastClone() {
      if (this is _IFn dt) { return dt; }
      return new Fn(_name, _typeParams, _formals, _returnType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fn;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._formals, oth._formals) && object.Equals(this._returnType, oth._returnType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formals));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fn.Fn";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._formals);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._IFn theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IFormal>.Empty, Std.Wrappers.Option<RAST._IType>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Std.Wrappers.Option<RAST._IExpr>.Default());
    public static RAST._IFn Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFn> _TYPE = new Dafny.TypeDescriptor<RAST._IFn>(RAST.Fn.Default());
    public static Dafny.TypeDescriptor<RAST._IFn> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFn create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return new Fn(name, typeParams, formals, returnType, @where, body);
    }
    public static _IFn create_Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return create(name, typeParams, formals, returnType, @where, body);
    }
    public bool is_Fn { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IFormal> dtor_formals {
      get {
        return this._formals;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_returnType {
      get {
        return this._returnType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv5 = ind;
      var _pat_let_tv6 = ind;
      var _pat_let_tv7 = ind;
      var _pat_let_tv8 = ind;
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn "), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), RAST.__default.SeqToString<RAST._IFormal>((this).dtor_formals, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>>>((_2567_ind) => ((System.Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>)((_2568_formal) => {
        return (_2568_formal)._ToString(_2567_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), ((System.Func<Std.Wrappers._IOption<RAST._IType>, Dafny.ISequence<Dafny.Rune>>)((_source73) => {
        if (_source73.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
        } else {
          RAST._IType _2569___mcc_h0 = _source73.dtor_value;
          RAST._IType _2570_t = _2569___mcc_h0;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" -> "), (_2570_t)._ToString(_pat_let_tv5));
        }
      }))((this).dtor_returnType)), ((((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)))), ((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source74) => {
        if (_source74.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";");
        } else {
          RAST._IExpr _2571___mcc_h2 = _source74.dtor_value;
          RAST._IExpr _2572_body = _2571___mcc_h2;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n"), _pat_let_tv6), RAST.__default.IND), (_2572_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv7, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _pat_let_tv8), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        }
      }))((this).dtor_body));
    }
  }
} // end of namespace RAST
namespace DCOMP {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in113 = (i).Drop(new BigInteger(2));
            i = _in113;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in114 = (i).Drop(BigInteger.One);
        i = _in114;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2573___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2573___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _2573___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2573___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in115 = (i).Drop(new BigInteger(2));
        i = _in115;
        goto TAIL_CALL_START;
      } else {
        _2573___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2573___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in116 = (i).Drop(BigInteger.One);
        i = _in116;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2574___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2574___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _2574___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2574___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in117 = (i).Drop(BigInteger.One);
        i = _in117;
        goto TAIL_CALL_START;
      } else {
        _2574___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2574___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in118 = (i).Drop(BigInteger.One);
        i = _in118;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMP.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMP.__default.has__special(i)))) && (!(DCOMP.__default.reserved__rust).Contains(i))) && (!(DCOMP.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMP.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMP.__default.is__tuple__builder(i)) {
        return DCOMP.__default.better__tuple__builder__name(i);
      } else if ((DCOMP.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMP.__default.is__idiomatic__rust__id(i)) {
        return DCOMP.__default.idiomatic__rust(i);
      } else if (DCOMP.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _2575_r = DCOMP.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _2575_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return true;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMP.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMP.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
    public static Dafny.ISequence<Dafny.Rune> ASSIGNED__PREFIX { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_assigned_");
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMP._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMP._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMP._IOwnership>(DCOMP.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMP._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMP._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMP._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMP._IUnassignedStatus>(DCOMP.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMP._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMP._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMP._IEnvironment>(DCOMP.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMP._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMP._IEnvironment Empty() {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _2576_body;
      Dafny.ISequence<RAST._IModDecl> _out15;
      _out15 = DCOMP.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _2576_body = _out15;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMP.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMP.__default.escapeIdent((mod).dtor_name), _2576_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((containingPath).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System")))) {
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements()))));
      }
      BigInteger _hi4 = new BigInteger((body).Count);
      for (BigInteger _2577_i = BigInteger.Zero; _2577_i < _hi4; _2577_i++) {
        Dafny.ISequence<RAST._IModDecl> _2578_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source75 = (body).Select(_2577_i);
        if (_source75.is_Module) {
          DAST._IModule _2579___mcc_h0 = _source75.dtor_Module_a0;
          DAST._IModule _2580_m = _2579___mcc_h0;
          RAST._IMod _2581_mm;
          RAST._IMod _out16;
          _out16 = DCOMP.COMP.GenModule(_2580_m, containingPath);
          _2581_mm = _out16;
          _2578_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_2581_mm));
        } else if (_source75.is_Class) {
          DAST._IClass _2582___mcc_h1 = _source75.dtor_Class_a0;
          DAST._IClass _2583_c = _2582___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out17;
          _out17 = DCOMP.COMP.GenClass(_2583_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_2583_c).dtor_name)));
          _2578_generated = _out17;
        } else if (_source75.is_Trait) {
          DAST._ITrait _2584___mcc_h2 = _source75.dtor_Trait_a0;
          DAST._ITrait _2585_t = _2584___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _2586_tt;
          Dafny.ISequence<Dafny.Rune> _out18;
          _out18 = DCOMP.COMP.GenTrait(_2585_t, containingPath);
          _2586_tt = _out18;
          _2578_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_2586_tt));
        } else if (_source75.is_Newtype) {
          DAST._INewtype _2587___mcc_h3 = _source75.dtor_Newtype_a0;
          DAST._INewtype _2588_n = _2587___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out19;
          _out19 = DCOMP.COMP.GenNewtype(_2588_n);
          _2578_generated = _out19;
        } else {
          DAST._IDatatype _2589___mcc_h4 = _source75.dtor_Datatype_a0;
          DAST._IDatatype _2590_d = _2589___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out20;
          _out20 = DCOMP.COMP.GenDatatype(_2590_d);
          _2578_generated = _out20;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _2578_generated);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _2591_tpI;
      _2591_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_2591_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _2592_tp;
          _2592_tp = (@params).Select(_2591_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2592_tp));
          RAST._IType _2593_genTp;
          RAST._IType _out21;
          _out21 = DCOMP.COMP.GenType(_2592_tp, false, false);
          _2593_genTp = _out21;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2593_genTp)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _2591_tpI = (_2591_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _2594_baseConstraints;
      _2594_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _2594_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2595_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2596_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2597_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2598_whereConstraints;
      Dafny.ISet<DAST._IType> _out22;
      Dafny.ISequence<RAST._ITypeParam> _out23;
      Dafny.ISequence<RAST._ITypeParam> _out24;
      Dafny.ISequence<Dafny.Rune> _out25;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out22, out _out23, out _out24, out _out25);
      _2595_typeParamsSet = _out22;
      _2596_sTypeParams = _out23;
      _2597_sConstrainedTypeParams = _out24;
      _2598_whereConstraints = _out25;
      Dafny.ISequence<Dafny.Rune> _2599_constrainedTypeParams;
      _2599_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2597_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _2600_fields;
      _2600_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _2601_fieldInits;
      _2601_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _2602_fieldI;
      _2602_fieldI = BigInteger.Zero;
      while ((_2602_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _2603_field;
        _2603_field = ((c).dtor_fields).Select(_2602_fieldI);
        RAST._IType _2604_fieldType;
        RAST._IType _out26;
        _out26 = DCOMP.COMP.GenType(((_2603_field).dtor_formal).dtor_typ, false, false);
        _2604_fieldType = _out26;
        Dafny.ISequence<Dafny.Rune> _2605_fieldRustName;
        _2605_fieldRustName = DCOMP.__default.escapeIdent(((_2603_field).dtor_formal).dtor_name);
        _2600_fields = Dafny.Sequence<RAST._IField>.Concat(_2600_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_2605_fieldRustName, _2604_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source76 = (_2603_field).dtor_defaultValue;
        if (_source76.is_None) {
          {
            RAST._IExpr _2606_default;
            _2606_default = RAST.__default.std__Default__default;
            _2601_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2601_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2605_fieldRustName, _2606_default)));
          }
        } else {
          DAST._IExpression _2607___mcc_h0 = _source76.dtor_value;
          DAST._IExpression _2608_e = _2607___mcc_h0;
          {
            RAST._IExpr _2609_expr;
            DCOMP._IOwnership _2610___v41;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2611___v42;
            RAST._IExpr _out27;
            DCOMP._IOwnership _out28;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out29;
            DCOMP.COMP.GenExpr(_2608_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out27, out _out28, out _out29);
            _2609_expr = _out27;
            _2610___v41 = _out28;
            _2611___v42 = _out29;
            _2601_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2601_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2605_fieldRustName, _2609_expr)));
          }
        }
        _2602_fieldI = (_2602_fieldI) + (BigInteger.One);
      }
      BigInteger _hi5 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _2612_typeParamI = BigInteger.Zero; _2612_typeParamI < _hi5; _2612_typeParamI++) {
        RAST._IType _2613_tpeGen;
        RAST._IType _out30;
        _out30 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2612_typeParamI), false, false);
        _2613_tpeGen = _out30;
        _2600_fields = Dafny.Sequence<RAST._IField>.Concat(_2600_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2612_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2613_tpeGen))))));
        _2601_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2601_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2612_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _2614_datatypeName;
      _2614_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _2615_struct;
      _2615_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2614_datatypeName, _2596_sTypeParams, RAST.Fields.create_NamedFields(_2600_fields));
      Dafny.ISequence<RAST._IType> _2616_typeParamsAsTypes;
      _2616_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2617_typeParam) => {
        return RAST.__default.RawType((_2617_typeParam).dtor_content);
      })), _2596_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_2615_struct));
      DAST._IType _2618_underlyingDatatype;
      _2618_underlyingDatatype = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes)));
      Dafny.ISequence<RAST._IImplMember> _2619_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2620_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out31;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out32;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_AllocatedDatatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _2595_typeParamsSet, out _out31, out _out32);
      _2619_implBodyRaw = _out31;
      _2620_traitBodies = _out32;
      Dafny.ISequence<RAST._IImplMember> _2621_implBody;
      _2621_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_2614_datatypeName), _2601_fieldInits))))), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.SelfPointerMut), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate"))).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())))))), _2619_implBodyRaw);
      RAST._IImpl _2622_i;
      _2622_i = RAST.Impl.create_Impl(_2597_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2614_datatypeName), _2616_typeParamsAsTypes), _2598_whereConstraints, _2621_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2622_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _2623_i;
        _2623_i = BigInteger.Zero;
        while ((_2623_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _2624_superClass;
          _2624_superClass = ((c).dtor_superClasses).Select(_2623_i);
          DAST._IType _source77 = _2624_superClass;
          if (_source77.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2625___mcc_h1 = _source77.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _2626___mcc_h2 = _source77.dtor_typeArgs;
            DAST._IResolvedType _2627___mcc_h3 = _source77.dtor_resolved;
            DAST._IResolvedType _source78 = _2627___mcc_h3;
            if (_source78.is_AllocatedDatatype) {
              DAST._IDatatypeType _2628___mcc_h7 = _source78.dtor_datatypeType;
            } else if (_source78.is_Datatype) {
              DAST._IDatatypeType _2629___mcc_h9 = _source78.dtor_datatypeType;
            } else if (_source78.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2630___mcc_h11 = _source78.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _2631___mcc_h12 = _source78.dtor_attributes;
              Dafny.ISequence<DAST._IType> _2632_typeArgs = _2626___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2633_traitPath = _2625___mcc_h1;
              {
                RAST._IType _2634_pathStr;
                RAST._IType _out33;
                _out33 = DCOMP.COMP.GenPath(_2633_traitPath);
                _2634_pathStr = _out33;
                Dafny.ISequence<RAST._IType> _2635_typeArgs;
                Dafny.ISequence<RAST._IType> _out34;
                _out34 = DCOMP.COMP.GenTypeArgs(_2632_typeArgs, false, false);
                _2635_typeArgs = _out34;
                Dafny.ISequence<RAST._IImplMember> _2636_body;
                _2636_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_2620_traitBodies).Contains(_2633_traitPath)) {
                  _2636_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_2620_traitBodies,_2633_traitPath);
                }
                RAST._IType _2637_genSelfPath;
                RAST._IType _out35;
                _out35 = DCOMP.COMP.GenPath(path);
                _2637_genSelfPath = _out35;
                RAST._IModDecl _2638_x;
                _2638_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2597_sConstrainedTypeParams, RAST.Type.create_TypeApp(_2634_pathStr, _2635_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_2637_genSelfPath, _2616_typeParamsAsTypes)), _2598_whereConstraints, _2636_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_2638_x));
              }
            } else {
              DAST._IType _2639___mcc_h15 = _source78.dtor_baseType;
              DAST._INewtypeRange _2640___mcc_h16 = _source78.dtor_range;
              bool _2641___mcc_h17 = _source78.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _2642___mcc_h18 = _source78.dtor_attributes;
            }
          } else if (_source77.is_Nullable) {
            DAST._IType _2643___mcc_h23 = _source77.dtor_Nullable_a0;
          } else if (_source77.is_Tuple) {
            Dafny.ISequence<DAST._IType> _2644___mcc_h25 = _source77.dtor_Tuple_a0;
          } else if (_source77.is_Array) {
            DAST._IType _2645___mcc_h27 = _source77.dtor_element;
            BigInteger _2646___mcc_h28 = _source77.dtor_dims;
          } else if (_source77.is_Seq) {
            DAST._IType _2647___mcc_h31 = _source77.dtor_element;
          } else if (_source77.is_Set) {
            DAST._IType _2648___mcc_h33 = _source77.dtor_element;
          } else if (_source77.is_Multiset) {
            DAST._IType _2649___mcc_h35 = _source77.dtor_element;
          } else if (_source77.is_Map) {
            DAST._IType _2650___mcc_h37 = _source77.dtor_key;
            DAST._IType _2651___mcc_h38 = _source77.dtor_value;
          } else if (_source77.is_SetBuilder) {
            DAST._IType _2652___mcc_h41 = _source77.dtor_element;
          } else if (_source77.is_MapBuilder) {
            DAST._IType _2653___mcc_h43 = _source77.dtor_key;
            DAST._IType _2654___mcc_h44 = _source77.dtor_value;
          } else if (_source77.is_Arrow) {
            Dafny.ISequence<DAST._IType> _2655___mcc_h47 = _source77.dtor_args;
            DAST._IType _2656___mcc_h48 = _source77.dtor_result;
          } else if (_source77.is_Primitive) {
            DAST._IPrimitive _2657___mcc_h51 = _source77.dtor_Primitive_a0;
          } else if (_source77.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _2658___mcc_h53 = _source77.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _2659___mcc_h55 = _source77.dtor_TypeArg_a0;
          }
          _2623_i = (_2623_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _2660_d;
      _2660_d = RAST.Impl.create_ImplFor(_2597_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2614_datatypeName), _2616_typeParamsAsTypes), _2598_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_2614_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _2661_defaultImpl;
      _2661_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2660_d));
      RAST._IImpl _2662_p;
      _2662_p = RAST.Impl.create_ImplFor(_2597_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2614_datatypeName), _2616_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _2663_printImpl;
      _2663_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2662_p));
      RAST._IImpl _2664_pp;
      _2664_pp = RAST.Impl.create_ImplFor(_2596_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2614_datatypeName), _2616_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _2665_ptrPartialEqImpl;
      _2665_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2664_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _2661_defaultImpl), _2663_printImpl), _2665_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _2666_typeParamsSet;
      _2666_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _2667_typeParams;
      _2667_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2668_tpI;
      _2668_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_2668_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _2669_tp;
          _2669_tp = ((t).dtor_typeParams).Select(_2668_tpI);
          _2666_typeParamsSet = Dafny.Set<DAST._IType>.Union(_2666_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2669_tp));
          RAST._IType _2670_genTp;
          RAST._IType _out36;
          _out36 = DCOMP.COMP.GenType(_2669_tp, false, false);
          _2670_genTp = _out36;
          _2667_typeParams = Dafny.Sequence<RAST._IType>.Concat(_2667_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2670_genTp));
          _2668_tpI = (_2668_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2671_fullPath;
      _2671_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _2672_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2673___v46;
      Dafny.ISequence<RAST._IImplMember> _out37;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out38;
      DCOMP.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_2671_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_2671_fullPath, (t).dtor_attributes)), _2666_typeParamsSet, out _out37, out _out38);
      _2672_implBody = _out37;
      _2673___v46 = _out38;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMP.__default.escapeIdent((t).dtor_name)), _2667_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _2672_implBody)))._ToString(DCOMP.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2674_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2675_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2676_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2677_whereConstraints;
      Dafny.ISet<DAST._IType> _out39;
      Dafny.ISequence<RAST._ITypeParam> _out40;
      Dafny.ISequence<RAST._ITypeParam> _out41;
      Dafny.ISequence<Dafny.Rune> _out42;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out39, out _out40, out _out41, out _out42);
      _2674_typeParamsSet = _out39;
      _2675_sTypeParams = _out40;
      _2676_sConstrainedTypeParams = _out41;
      _2677_whereConstraints = _out42;
      Dafny.ISequence<RAST._IType> _2678_typeParamsAsTypes;
      _2678_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2679_t) => {
        return RAST.__default.RawType((_2679_t).dtor_content);
      })), _2675_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2680_constrainedTypeParams;
      _2680_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2676_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _2681_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source79 = DCOMP.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source79.is_None) {
        RAST._IType _out43;
        _out43 = DCOMP.COMP.GenType((c).dtor_base, false, false);
        _2681_underlyingType = _out43;
      } else {
        RAST._IType _2682___mcc_h0 = _source79.dtor_value;
        RAST._IType _2683_v = _2682___mcc_h0;
        _2681_underlyingType = _2683_v;
      }
      DAST._IType _2684_resultingType;
      _2684_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _2685_datatypeName;
      _2685_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _2685_datatypeName, _2675_sTypeParams, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _2681_underlyingType))))));
      RAST._IExpr _2686_fnBody;
      _2686_fnBody = RAST.Expr.create_Identifier(_2685_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source80 = (c).dtor_witnessExpr;
      if (_source80.is_None) {
        {
          _2686_fnBody = (_2686_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _2687___mcc_h1 = _source80.dtor_value;
        DAST._IExpression _2688_e = _2687___mcc_h1;
        {
          DAST._IExpression _2689_e;
          _2689_e = ((object.Equals((c).dtor_base, _2684_resultingType)) ? (_2688_e) : (DAST.Expression.create_Convert(_2688_e, (c).dtor_base, _2684_resultingType)));
          RAST._IExpr _2690_eStr;
          DCOMP._IOwnership _2691___v47;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2692___v48;
          RAST._IExpr _out44;
          DCOMP._IOwnership _out45;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out46;
          DCOMP.COMP.GenExpr(_2689_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out44, out _out45, out _out46);
          _2690_eStr = _out44;
          _2691___v47 = _out45;
          _2692___v48 = _out46;
          _2686_fnBody = (_2686_fnBody).Apply1(_2690_eStr);
        }
      }
      RAST._IImplMember _2693_body;
      _2693_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2686_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2676_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2678_typeParamsAsTypes), _2677_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_2693_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2676_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2678_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2676_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2678_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_2681_underlyingType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2694_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2695_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2696_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2697_whereConstraints;
      Dafny.ISet<DAST._IType> _out47;
      Dafny.ISequence<RAST._ITypeParam> _out48;
      Dafny.ISequence<RAST._ITypeParam> _out49;
      Dafny.ISequence<Dafny.Rune> _out50;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out47, out _out48, out _out49, out _out50);
      _2694_typeParamsSet = _out47;
      _2695_sTypeParams = _out48;
      _2696_sConstrainedTypeParams = _out49;
      _2697_whereConstraints = _out50;
      Dafny.ISequence<RAST._IType> _2698_typeParamsAsTypes;
      _2698_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2699_t) => {
        return RAST.__default.RawType((_2699_t).dtor_content);
      })), _2695_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2700_constrainedTypeParams;
      _2700_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2696_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.IND, DCOMP.__default.IND));
      Dafny.ISequence<Dafny.Rune> _2701_datatypeName;
      _2701_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _2702_ctors;
      _2702_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _2703_i;
      _2703_i = BigInteger.Zero;
      while ((_2703_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2704_ctor;
        _2704_ctor = ((c).dtor_ctors).Select(_2703_i);
        Dafny.ISequence<RAST._IField> _2705_ctorArgs;
        _2705_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _2706_j;
        _2706_j = BigInteger.Zero;
        while ((_2706_j) < (new BigInteger(((_2704_ctor).dtor_args).Count))) {
          DAST._IFormal _2707_formal;
          _2707_formal = ((_2704_ctor).dtor_args).Select(_2706_j);
          RAST._IType _2708_formalType;
          RAST._IType _out51;
          _out51 = DCOMP.COMP.GenType((_2707_formal).dtor_typ, false, false);
          _2708_formalType = _out51;
          if ((c).dtor_isCo) {
            _2705_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2705_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeIdent((_2707_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_2708_formalType))))));
          } else {
            _2705_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2705_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeIdent((_2707_formal).dtor_name), _2708_formalType))));
          }
          _2706_j = (_2706_j) + (BigInteger.One);
        }
        _2702_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2702_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMP.__default.escapeIdent((_2704_ctor).dtor_name), RAST.Fields.create_NamedFields(_2705_ctorArgs))));
        _2703_i = (_2703_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2709_selfPath;
      _2709_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _2710_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2711_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out52;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out53;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_2709_selfPath, (c).dtor_attributes))), _2694_typeParamsSet, out _out52, out _out53);
      _2710_implBodyRaw = _out52;
      _2711_traitBodies = _out53;
      Dafny.ISequence<RAST._IImplMember> _2712_implBody;
      _2712_implBody = _2710_implBodyRaw;
      _2703_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2713_emittedFields;
      _2713_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_2703_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2714_ctor;
        _2714_ctor = ((c).dtor_ctors).Select(_2703_i);
        BigInteger _2715_j;
        _2715_j = BigInteger.Zero;
        while ((_2715_j) < (new BigInteger(((_2714_ctor).dtor_args).Count))) {
          DAST._IFormal _2716_formal;
          _2716_formal = ((_2714_ctor).dtor_args).Select(_2715_j);
          if (!((_2713_emittedFields).Contains((_2716_formal).dtor_name))) {
            _2713_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2713_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_2716_formal).dtor_name));
            RAST._IType _2717_formalType;
            RAST._IType _out54;
            _out54 = DCOMP.COMP.GenType((_2716_formal).dtor_typ, false, false);
            _2717_formalType = _out54;
            Dafny.ISequence<RAST._IMatchCase> _2718_cases;
            _2718_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _2719_k;
            _2719_k = BigInteger.Zero;
            while ((_2719_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _2720_ctor2;
              _2720_ctor2 = ((c).dtor_ctors).Select(_2719_k);
              Dafny.ISequence<Dafny.Rune> _2721_pattern;
              _2721_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2701_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent((_2720_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _2722_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _2723_l;
              _2723_l = BigInteger.Zero;
              bool _2724_hasMatchingField;
              _2724_hasMatchingField = false;
              while ((_2723_l) < (new BigInteger(((_2720_ctor2).dtor_args).Count))) {
                DAST._IFormal _2725_formal2;
                _2725_formal2 = ((_2720_ctor2).dtor_args).Select(_2723_l);
                if (((_2716_formal).dtor_name).Equals((_2725_formal2).dtor_name)) {
                  _2724_hasMatchingField = true;
                }
                _2721_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2721_pattern, DCOMP.__default.escapeIdent((_2725_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _2723_l = (_2723_l) + (BigInteger.One);
              }
              _2721_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_2721_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_2724_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _2722_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMP.__default.escapeIdent((_2716_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _2722_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2716_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _2722_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _2726_ctorMatch;
              _2726_ctorMatch = RAST.MatchCase.create(_2721_pattern, RAST.Expr.create_RawExpr(_2722_rhs));
              _2718_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2718_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_2726_ctorMatch));
              _2719_k = (_2719_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _2718_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2718_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2701_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _2727_methodBody;
            _2727_methodBody = RAST.Expr.create_Match(RAST.__default.self, _2718_cases);
            _2712_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_2712_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMP.__default.escapeIdent((_2716_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_2717_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2727_methodBody)))));
          }
          _2715_j = (_2715_j) + (BigInteger.One);
        }
        _2703_i = (_2703_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _2728_typeI;
        _2728_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _2729_types;
        _2729_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_2728_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _2730_genTp;
          RAST._IType _out55;
          _out55 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2728_typeI), false, false);
          _2730_genTp = _out55;
          _2729_types = Dafny.Sequence<RAST._IType>.Concat(_2729_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_2730_genTp))));
          _2728_typeI = (_2728_typeI) + (BigInteger.One);
        }
        _2702_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2702_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_2731_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _2731_tpe);
})), _2729_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _2732_enumBody;
      _2732_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _2701_datatypeName, _2695_sTypeParams, _2702_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_2696_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2701_datatypeName), _2698_typeParamsAsTypes), _2697_whereConstraints, _2712_implBody)));
      _2703_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _2733_printImplBodyCases;
      _2733_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_2703_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2734_ctor;
        _2734_ctor = ((c).dtor_ctors).Select(_2703_i);
        Dafny.ISequence<Dafny.Rune> _2735_ctorMatch;
        _2735_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2734_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _2736_modulePrefix;
        _2736_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _2737_printRhs;
        _2737_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _2736_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent((_2734_ctor).dtor_name)), (((_2734_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _2738_j;
        _2738_j = BigInteger.Zero;
        while ((_2738_j) < (new BigInteger(((_2734_ctor).dtor_args).Count))) {
          DAST._IFormal _2739_formal;
          _2739_formal = ((_2734_ctor).dtor_args).Select(_2738_j);
          _2735_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2735_ctorMatch, DCOMP.__default.escapeIdent((_2739_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_2738_j).Sign == 1) {
            _2737_printRhs = (_2737_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _2737_printRhs = (_2737_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMP.__default.escapeIdent((_2739_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _2738_j = (_2738_j) + (BigInteger.One);
        }
        _2735_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_2735_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_2734_ctor).dtor_hasAnyArgs) {
          _2737_printRhs = (_2737_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _2737_printRhs = (_2737_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _2733_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2733_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2701_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2735_ctorMatch), RAST.Expr.create_Block(_2737_printRhs))));
        _2703_i = (_2703_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _2733_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2733_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2701_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _2740_printImplBody;
      _2740_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _2733_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _2741_printImpl;
      _2741_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2696_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2701_datatypeName), _2698_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2740_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _2742_defaultImpl;
      _2742_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _2743_asRefImpl;
      _2743_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _2703_i = BigInteger.Zero;
        RAST._IExpr _2744_structName;
        _2744_structName = (RAST.Expr.create_Identifier(_2701_datatypeName)).MSel(DCOMP.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _2745_structAssignments;
        _2745_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_2703_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _2746_formal;
          _2746_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_2703_i);
          _2745_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2745_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent((_2746_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _2703_i = (_2703_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _2747_defaultConstrainedTypeParams;
        _2747_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_2695_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _2748_fullType;
        _2748_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2701_datatypeName), _2698_typeParamsAsTypes);
        _2742_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2747_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _2748_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2748_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_2744_structName, _2745_structAssignments))))))));
        _2743_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2747_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_2748_fullType), RAST.Type.create_Borrowed(_2748_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_2732_enumBody, _2741_printImpl), _2742_defaultImpl), _2743_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi6 = new BigInteger((p).Count);
        for (BigInteger _2749_i = BigInteger.Zero; _2749_i < _hi6; _2749_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2749_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi7 = new BigInteger((p).Count);
        for (BigInteger _2750_i = BigInteger.Zero; _2750_i < _hi7; _2750_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2750_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _2751_i;
        _2751_i = BigInteger.Zero;
        while ((_2751_i) < (new BigInteger((args).Count))) {
          RAST._IType _2752_genTp;
          RAST._IType _out56;
          _out56 = DCOMP.COMP.GenType((args).Select(_2751_i), inBinding, inFn);
          _2752_genTp = _out56;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_2752_genTp));
          _2751_i = (_2751_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source81 = c;
      if (_source81.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2753___mcc_h0 = _source81.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _2754___mcc_h1 = _source81.dtor_typeArgs;
        DAST._IResolvedType _2755___mcc_h2 = _source81.dtor_resolved;
        DAST._IResolvedType _2756_resolved = _2755___mcc_h2;
        Dafny.ISequence<DAST._IType> _2757_args = _2754___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2758_p = _2753___mcc_h0;
        {
          RAST._IType _2759_t;
          RAST._IType _out57;
          _out57 = DCOMP.COMP.GenPath(_2758_p);
          _2759_t = _out57;
          Dafny.ISequence<RAST._IType> _2760_typeArgs;
          Dafny.ISequence<RAST._IType> _out58;
          _out58 = DCOMP.COMP.GenTypeArgs(_2757_args, inBinding, inFn);
          _2760_typeArgs = _out58;
          s = RAST.Type.create_TypeApp(_2759_t, _2760_typeArgs);
          DAST._IResolvedType _source82 = _2756_resolved;
          if (_source82.is_AllocatedDatatype) {
            DAST._IDatatypeType _2761___mcc_h21 = _source82.dtor_datatypeType;
            DAST._IDatatypeType _source83 = _2761___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2762___mcc_h22 = _source83.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2763___mcc_h23 = _source83.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2764_attributes = _2763___mcc_h23;
            {
              s = RAST.Type.create_PointerMut(s);
            }
          } else if (_source82.is_Datatype) {
            DAST._IDatatypeType _2765___mcc_h24 = _source82.dtor_datatypeType;
            DAST._IDatatypeType _source84 = _2765___mcc_h24;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2766___mcc_h25 = _source84.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2767___mcc_h26 = _source84.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2768_attributes = _2767___mcc_h26;
            {
              if (DCOMP.COMP.IsRcWrapped(_2768_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source82.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2769___mcc_h27 = _source82.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2770___mcc_h28 = _source82.dtor_attributes;
            {
              if ((_2758_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _2771___mcc_h29 = _source82.dtor_baseType;
            DAST._INewtypeRange _2772___mcc_h30 = _source82.dtor_range;
            bool _2773___mcc_h31 = _source82.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _2774___mcc_h32 = _source82.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2775_attributes = _2774___mcc_h32;
            bool _2776_erased = _2773___mcc_h31;
            DAST._INewtypeRange _2777_range = _2772___mcc_h30;
            DAST._IType _2778_t = _2771___mcc_h29;
            {
              if (_2776_erased) {
                Std.Wrappers._IOption<RAST._IType> _source85 = DCOMP.COMP.NewtypeToRustType(_2778_t, _2777_range);
                if (_source85.is_None) {
                } else {
                  RAST._IType _2779___mcc_h33 = _source85.dtor_value;
                  RAST._IType _2780_v = _2779___mcc_h33;
                  s = _2780_v;
                }
              }
            }
          }
        }
      } else if (_source81.is_Nullable) {
        DAST._IType _2781___mcc_h3 = _source81.dtor_Nullable_a0;
        DAST._IType _2782_inner = _2781___mcc_h3;
        {
          RAST._IType _2783_innerExpr;
          RAST._IType _out59;
          _out59 = DCOMP.COMP.GenType(_2782_inner, inBinding, inFn);
          _2783_innerExpr = _out59;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_2783_innerExpr));
        }
      } else if (_source81.is_Tuple) {
        Dafny.ISequence<DAST._IType> _2784___mcc_h4 = _source81.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _2785_types = _2784___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _2786_args;
          _2786_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2787_i;
          _2787_i = BigInteger.Zero;
          while ((_2787_i) < (new BigInteger((_2785_types).Count))) {
            RAST._IType _2788_generated;
            RAST._IType _out60;
            _out60 = DCOMP.COMP.GenType((_2785_types).Select(_2787_i), inBinding, inFn);
            _2788_generated = _out60;
            _2786_args = Dafny.Sequence<RAST._IType>.Concat(_2786_args, Dafny.Sequence<RAST._IType>.FromElements(_2788_generated));
            _2787_i = (_2787_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_2786_args);
        }
      } else if (_source81.is_Array) {
        DAST._IType _2789___mcc_h5 = _source81.dtor_element;
        BigInteger _2790___mcc_h6 = _source81.dtor_dims;
        BigInteger _2791_dims = _2790___mcc_h6;
        DAST._IType _2792_element = _2789___mcc_h5;
        {
          RAST._IType _2793_elem;
          RAST._IType _out61;
          _out61 = DCOMP.COMP.GenType(_2792_element, inBinding, inFn);
          _2793_elem = _out61;
          s = _2793_elem;
          BigInteger _2794_i;
          _2794_i = BigInteger.Zero;
          while ((_2794_i) < (_2791_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _2794_i = (_2794_i) + (BigInteger.One);
          }
        }
      } else if (_source81.is_Seq) {
        DAST._IType _2795___mcc_h7 = _source81.dtor_element;
        DAST._IType _2796_element = _2795___mcc_h7;
        {
          RAST._IType _2797_elem;
          RAST._IType _out62;
          _out62 = DCOMP.COMP.GenType(_2796_element, inBinding, inFn);
          _2797_elem = _out62;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_2797_elem));
        }
      } else if (_source81.is_Set) {
        DAST._IType _2798___mcc_h8 = _source81.dtor_element;
        DAST._IType _2799_element = _2798___mcc_h8;
        {
          RAST._IType _2800_elem;
          RAST._IType _out63;
          _out63 = DCOMP.COMP.GenType(_2799_element, inBinding, inFn);
          _2800_elem = _out63;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_2800_elem));
        }
      } else if (_source81.is_Multiset) {
        DAST._IType _2801___mcc_h9 = _source81.dtor_element;
        DAST._IType _2802_element = _2801___mcc_h9;
        {
          RAST._IType _2803_elem;
          RAST._IType _out64;
          _out64 = DCOMP.COMP.GenType(_2802_element, inBinding, inFn);
          _2803_elem = _out64;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_2803_elem));
        }
      } else if (_source81.is_Map) {
        DAST._IType _2804___mcc_h10 = _source81.dtor_key;
        DAST._IType _2805___mcc_h11 = _source81.dtor_value;
        DAST._IType _2806_value = _2805___mcc_h11;
        DAST._IType _2807_key = _2804___mcc_h10;
        {
          RAST._IType _2808_keyType;
          RAST._IType _out65;
          _out65 = DCOMP.COMP.GenType(_2807_key, inBinding, inFn);
          _2808_keyType = _out65;
          RAST._IType _2809_valueType;
          RAST._IType _out66;
          _out66 = DCOMP.COMP.GenType(_2806_value, inBinding, inFn);
          _2809_valueType = _out66;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_2808_keyType, _2809_valueType));
        }
      } else if (_source81.is_SetBuilder) {
        DAST._IType _2810___mcc_h12 = _source81.dtor_element;
        DAST._IType _2811_elem = _2810___mcc_h12;
        {
          RAST._IType _2812_elemType;
          RAST._IType _out67;
          _out67 = DCOMP.COMP.GenType(_2811_elem, inBinding, inFn);
          _2812_elemType = _out67;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2812_elemType));
        }
      } else if (_source81.is_MapBuilder) {
        DAST._IType _2813___mcc_h13 = _source81.dtor_key;
        DAST._IType _2814___mcc_h14 = _source81.dtor_value;
        DAST._IType _2815_value = _2814___mcc_h14;
        DAST._IType _2816_key = _2813___mcc_h13;
        {
          RAST._IType _2817_keyType;
          RAST._IType _out68;
          _out68 = DCOMP.COMP.GenType(_2816_key, inBinding, inFn);
          _2817_keyType = _out68;
          RAST._IType _2818_valueType;
          RAST._IType _out69;
          _out69 = DCOMP.COMP.GenType(_2815_value, inBinding, inFn);
          _2818_valueType = _out69;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2817_keyType, _2818_valueType));
        }
      } else if (_source81.is_Arrow) {
        Dafny.ISequence<DAST._IType> _2819___mcc_h15 = _source81.dtor_args;
        DAST._IType _2820___mcc_h16 = _source81.dtor_result;
        DAST._IType _2821_result = _2820___mcc_h16;
        Dafny.ISequence<DAST._IType> _2822_args = _2819___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _2823_argTypes;
          _2823_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2824_i;
          _2824_i = BigInteger.Zero;
          while ((_2824_i) < (new BigInteger((_2822_args).Count))) {
            RAST._IType _2825_generated;
            RAST._IType _out70;
            _out70 = DCOMP.COMP.GenType((_2822_args).Select(_2824_i), inBinding, true);
            _2825_generated = _out70;
            _2823_argTypes = Dafny.Sequence<RAST._IType>.Concat(_2823_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_2825_generated)));
            _2824_i = (_2824_i) + (BigInteger.One);
          }
          RAST._IType _2826_resultType;
          RAST._IType _out71;
          _out71 = DCOMP.COMP.GenType(_2821_result, inBinding, (inFn) || (inBinding));
          _2826_resultType = _out71;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_2823_argTypes, RAST.Type.create_IntersectionType(_2826_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source81.is_Primitive) {
        DAST._IPrimitive _2827___mcc_h17 = _source81.dtor_Primitive_a0;
        DAST._IPrimitive _2828_p = _2827___mcc_h17;
        {
          DAST._IPrimitive _source86 = _2828_p;
          if (_source86.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source86.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source86.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar)));
          } else if (_source86.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar);
          }
        }
      } else if (_source81.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _2829___mcc_h18 = _source81.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _2830_v = _2829___mcc_h18;
        s = RAST.__default.RawType(_2830_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _2831___mcc_h19 = _source81.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source87 = _2831___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _2832___mcc_h20 = _source87;
        Dafny.ISequence<Dafny.Rune> _2833_name = _2832___mcc_h20;
        s = RAST.__default.RawType(DCOMP.__default.escapeIdent(_2833_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _2834_i;
      _2834_i = BigInteger.Zero;
      while ((_2834_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source88 = (body).Select(_2834_i);
        DAST._IMethod _2835___mcc_h0 = _source88;
        DAST._IMethod _2836_m = _2835___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source89 = (_2836_m).dtor_overridingPath;
          if (_source89.is_None) {
            {
              RAST._IImplMember _2837_generated;
              RAST._IImplMember _out72;
              _out72 = DCOMP.COMP.GenMethod(_2836_m, forTrait, enclosingType, enclosingTypeParams);
              _2837_generated = _out72;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_2837_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2838___mcc_h1 = _source89.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2839_p = _2838___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _2840_existing;
              _2840_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_2839_p)) {
                _2840_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_2839_p);
              }
              RAST._IImplMember _2841_genMethod;
              RAST._IImplMember _out73;
              _out73 = DCOMP.COMP.GenMethod(_2836_m, true, enclosingType, enclosingTypeParams);
              _2841_genMethod = _out73;
              _2840_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_2840_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_2841_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_2839_p, _2840_existing)));
            }
          }
        }
        _2834_i = (_2834_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _2842_i;
      _2842_i = BigInteger.Zero;
      while ((_2842_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _2843_param;
        _2843_param = (@params).Select(_2842_i);
        RAST._IType _2844_paramType;
        RAST._IType _out74;
        _out74 = DCOMP.COMP.GenType((_2843_param).dtor_typ, false, false);
        _2844_paramType = _out74;
        if (!((_2844_paramType).HasCopySemantics())) {
          _2844_paramType = RAST.Type.create_Borrowed(_2844_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeIdent((_2843_param).dtor_name), _2844_paramType)));
        _2842_i = (_2842_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _2845_params;
      Dafny.ISequence<RAST._IFormal> _out75;
      _out75 = DCOMP.COMP.GenParams((m).dtor_params);
      _2845_params = _out75;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2846_paramNames;
      _2846_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2847_paramTypes;
      _2847_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi8 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _2848_paramI = BigInteger.Zero; _2848_paramI < _hi8; _2848_paramI++) {
        DAST._IFormal _2849_dafny__formal;
        _2849_dafny__formal = ((m).dtor_params).Select(_2848_paramI);
        RAST._IFormal _2850_formal;
        _2850_formal = (_2845_params).Select(_2848_paramI);
        Dafny.ISequence<Dafny.Rune> _2851_name;
        _2851_name = (_2850_formal).dtor_name;
        _2846_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2846_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2851_name));
        _2847_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2847_paramTypes, _2851_name, (_2850_formal).dtor_tpe);
      }
      Dafny.ISequence<Dafny.Rune> _2852_fnName;
      _2852_fnName = DCOMP.__default.escapeIdent((m).dtor_name);
      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2853_selfIdentifier;
      _2853_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      if (!((m).dtor_isStatic)) {
        Dafny.ISequence<Dafny.Rune> _2854_selfId;
        _2854_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self");
        if ((_2852_fnName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ctor"))) {
          _2854_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this");
        }
        if (forTrait) {
          RAST._IFormal _2855_selfFormal;
          _2855_selfFormal = (((m).dtor_wasFunction) ? (RAST.Formal.selfBorrowed) : (RAST.Formal.selfBorrowedMut));
          _2845_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(_2855_selfFormal), _2845_params);
        } else {
          RAST._IType _2856_tpe;
          RAST._IType _out76;
          _out76 = DCOMP.COMP.GenType(enclosingType, false, false);
          _2856_tpe = _out76;
          if (!((_2856_tpe).HasCopySemantics())) {
            _2856_tpe = RAST.Type.create_Borrowed(_2856_tpe);
          }
          if ((_2854_selfId).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
            if ((_2856_tpe).IsSelfPointer()) {
              if ((m).dtor_wasFunction) {
                _2856_tpe = RAST.__default.SelfBorrowed;
              } else {
                _2856_tpe = RAST.__default.SelfBorrowedMut;
              }
            } else {
              Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#### Weird this type: ")).ToVerbatimString(false));
              Dafny.Helpers.Print((_2856_tpe));
              Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
            }
          }
          _2845_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(_2854_selfId, _2856_tpe)), _2845_params);
        }
        _2853_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_2854_selfId);
      }
      Dafny.ISequence<RAST._IType> _2857_retTypeArgs;
      _2857_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2858_typeI;
      _2858_typeI = BigInteger.Zero;
      while ((_2858_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _2859_typeExpr;
        RAST._IType _out77;
        _out77 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2858_typeI), false, false);
        _2859_typeExpr = _out77;
        _2857_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_2857_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_2859_typeExpr));
        _2858_typeI = (_2858_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _2860_visibility;
      _2860_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<DAST._IType> _2861_typeParamsFiltered;
      _2861_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _hi9 = new BigInteger(((m).dtor_typeParams).Count);
      for (BigInteger _2862_typeParamI = BigInteger.Zero; _2862_typeParamI < _hi9; _2862_typeParamI++) {
        DAST._IType _2863_typeParam;
        _2863_typeParam = ((m).dtor_typeParams).Select(_2862_typeParamI);
        if (!((enclosingTypeParams).Contains(_2863_typeParam))) {
          _2861_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_2861_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_2863_typeParam));
        }
      }
      Dafny.ISequence<Dafny.Rune> _2864_whereClauses;
      _2864_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _2865_typeParams;
      _2865_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_2861_typeParamsFiltered).Count)).Sign == 1) {
        _2864_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_2864_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _2866_i;
        _2866_i = BigInteger.Zero;
        while ((_2866_i) < (new BigInteger((_2861_typeParamsFiltered).Count))) {
          RAST._IType _2867_typeExpr;
          RAST._IType _out78;
          _out78 = DCOMP.COMP.GenType((_2861_typeParamsFiltered).Select(_2866_i), false, false);
          _2867_typeExpr = _out78;
          _2865_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_2865_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2867_typeExpr)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _2866_i = (_2866_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _2868_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMP._IEnvironment _2869_env = DCOMP.Environment.Default();
      RAST._IExpr _2870_preBody;
      _2870_preBody = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2871_preAssignNames;
      _2871_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2872_preAssignTypes;
      _2872_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      if ((m).dtor_hasBody) {
        RAST._IExpr _2873_earlyReturn;
        _2873_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source90 = (m).dtor_outVars;
        if (_source90.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2874___mcc_h0 = _source90.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2875_outVars = _2874___mcc_h0;
          {
            if ((m).dtor_outVarsAreUninitFieldsToAssign) {
              _2873_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(Dafny.Sequence<RAST._IExpr>.FromElements())));
              BigInteger _hi10 = new BigInteger((_2875_outVars).Count);
              for (BigInteger _2876_outI = BigInteger.Zero; _2876_outI < _hi10; _2876_outI++) {
                Dafny.ISequence<Dafny.Rune> _2877_outVar;
                _2877_outVar = (_2875_outVars).Select(_2876_outI);
                Dafny.ISequence<Dafny.Rune> _2878_outName;
                _2878_outName = DCOMP.__default.escapeIdent((_2877_outVar));
                Dafny.ISequence<Dafny.Rune> _2879_tracker__name;
                _2879_tracker__name = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.ASSIGNED__PREFIX, _2878_outName);
                _2871_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2871_preAssignNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2879_tracker__name));
                _2872_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2872_preAssignTypes, _2879_tracker__name, RAST.Type.create_Bool());
                _2870_preBody = (_2870_preBody).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _2879_tracker__name, Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_LiteralBool(false))));
              }
            } else {
              Dafny.ISequence<RAST._IExpr> _2880_tupleArgs;
              _2880_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
              BigInteger _hi11 = new BigInteger((_2875_outVars).Count);
              for (BigInteger _2881_outI = BigInteger.Zero; _2881_outI < _hi11; _2881_outI++) {
                Dafny.ISequence<Dafny.Rune> _2882_outVar;
                _2882_outVar = (_2875_outVars).Select(_2881_outI);
                RAST._IType _2883_outType;
                RAST._IType _out79;
                _out79 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2881_outI), false, false);
                _2883_outType = _out79;
                Dafny.ISequence<Dafny.Rune> _2884_outName;
                _2884_outName = DCOMP.__default.escapeIdent((_2882_outVar));
                _2846_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2846_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2884_outName));
                RAST._IType _2885_outMaybeType;
                _2885_outMaybeType = (((_2883_outType).HasCopySemantics()) ? (_2883_outType) : (RAST.__default.MaybePlaceboType(_2883_outType)));
                _2847_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2847_paramTypes, _2884_outName, _2885_outMaybeType);
                RAST._IExpr _2886_outVarReturn;
                DCOMP._IOwnership _2887___v53;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2888___v54;
                RAST._IExpr _out80;
                DCOMP._IOwnership _out81;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out82;
                DCOMP.COMP.GenExpr(DAST.Expression.create_Ident((_2882_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2884_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_2884_outName, _2885_outMaybeType))), DCOMP.Ownership.create_OwnershipOwned(), out _out80, out _out81, out _out82);
                _2886_outVarReturn = _out80;
                _2887___v53 = _out81;
                _2888___v54 = _out82;
                _2880_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_2880_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_2886_outVarReturn));
              }
              if ((new BigInteger((_2880_tupleArgs).Count)) == (BigInteger.One)) {
                _2873_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_2880_tupleArgs).Select(BigInteger.Zero)));
              } else {
                _2873_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_2880_tupleArgs)));
              }
            }
          }
        }
        _2869_env = DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2871_preAssignNames, _2846_paramNames), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Merge(_2872_preAssignTypes, _2847_paramTypes));
        RAST._IExpr _2889_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2890___v55;
        DCOMP._IEnvironment _2891___v56;
        RAST._IExpr _out83;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out84;
        DCOMP._IEnvironment _out85;
        DCOMP.COMP.GenStmts((m).dtor_body, _2853_selfIdentifier, _2869_env, true, _2873_earlyReturn, out _out83, out _out84, out _out85);
        _2889_body = _out83;
        _2890___v55 = _out84;
        _2891___v56 = _out85;
        _2868_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some((_2870_preBody).Then(_2889_body));
      } else {
        _2869_env = DCOMP.Environment.create(_2846_paramNames, _2847_paramTypes);
        _2868_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_2860_visibility, RAST.Fn.create(_2852_fnName, _2865_typeParams, _2845_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_2857_retTypeArgs).Count)) == (BigInteger.One)) ? ((_2857_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_2857_retTypeArgs)))), _2864_whereClauses, _2868_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2892_declarations;
      _2892_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _2893_i;
      _2893_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _2894_stmts;
      _2894_stmts = stmts;
      while ((_2893_i) < (new BigInteger((_2894_stmts).Count))) {
        DAST._IStatement _2895_stmt;
        _2895_stmt = (_2894_stmts).Select(_2893_i);
        DAST._IStatement _source91 = _2895_stmt;
        if (_source91.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2896___mcc_h0 = _source91.dtor_name;
          DAST._IType _2897___mcc_h1 = _source91.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2898___mcc_h2 = _source91.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source92 = _2898___mcc_h2;
          if (_source92.is_None) {
            DAST._IType _2899_optType = _2897___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _2900_name = _2896___mcc_h0;
            if (((_2893_i) + (BigInteger.One)) < (new BigInteger((_2894_stmts).Count))) {
              DAST._IStatement _source93 = (_2894_stmts).Select((_2893_i) + (BigInteger.One));
              if (_source93.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _2901___mcc_h52 = _source93.dtor_name;
                DAST._IType _2902___mcc_h53 = _source93.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _2903___mcc_h54 = _source93.dtor_maybeValue;
              } else if (_source93.is_Assign) {
                DAST._IAssignLhs _2904___mcc_h58 = _source93.dtor_lhs;
                DAST._IExpression _2905___mcc_h59 = _source93.dtor_value;
                DAST._IAssignLhs _source94 = _2904___mcc_h58;
                if (_source94.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _2906___mcc_h62 = _source94.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source95 = _2906___mcc_h62;
                  Dafny.ISequence<Dafny.Rune> _2907___mcc_h64 = _source95;
                  DAST._IExpression _2908_rhs = _2905___mcc_h59;
                  Dafny.ISequence<Dafny.Rune> _2909_name2 = _2907___mcc_h64;
                  if ((_2909_name2).Equals(_2900_name)) {
                    _2894_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_2894_stmts).Subsequence(BigInteger.Zero, _2893_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_2900_name, _2899_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_2908_rhs)))), (_2894_stmts).Drop((_2893_i) + (BigInteger.One)));
                    _2895_stmt = (_2894_stmts).Select(_2893_i);
                  }
                } else if (_source94.is_Select) {
                  DAST._IExpression _2910___mcc_h66 = _source94.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _2911___mcc_h67 = _source94.dtor_field;
                } else {
                  DAST._IExpression _2912___mcc_h70 = _source94.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _2913___mcc_h71 = _source94.dtor_indices;
                }
              } else if (_source93.is_If) {
                DAST._IExpression _2914___mcc_h74 = _source93.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2915___mcc_h75 = _source93.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _2916___mcc_h76 = _source93.dtor_els;
              } else if (_source93.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _2917___mcc_h80 = _source93.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _2918___mcc_h81 = _source93.dtor_body;
              } else if (_source93.is_While) {
                DAST._IExpression _2919___mcc_h84 = _source93.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2920___mcc_h85 = _source93.dtor_body;
              } else if (_source93.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _2921___mcc_h88 = _source93.dtor_boundName;
                DAST._IType _2922___mcc_h89 = _source93.dtor_boundType;
                DAST._IExpression _2923___mcc_h90 = _source93.dtor_over;
                Dafny.ISequence<DAST._IStatement> _2924___mcc_h91 = _source93.dtor_body;
              } else if (_source93.is_Call) {
                DAST._IExpression _2925___mcc_h96 = _source93.dtor_on;
                DAST._ICallName _2926___mcc_h97 = _source93.dtor_callName;
                Dafny.ISequence<DAST._IType> _2927___mcc_h98 = _source93.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _2928___mcc_h99 = _source93.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2929___mcc_h100 = _source93.dtor_outs;
              } else if (_source93.is_Return) {
                DAST._IExpression _2930___mcc_h106 = _source93.dtor_expr;
              } else if (_source93.is_EarlyReturn) {
              } else if (_source93.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2931___mcc_h108 = _source93.dtor_toLabel;
              } else if (_source93.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _2932___mcc_h110 = _source93.dtor_body;
              } else if (_source93.is_JumpTailCallStart) {
              } else if (_source93.is_Halt) {
              } else {
                DAST._IExpression _2933___mcc_h112 = _source93.dtor_Print_a0;
              }
            }
          } else {
            DAST._IExpression _2934___mcc_h6 = _source92.dtor_value;
          }
        } else if (_source91.is_Assign) {
          DAST._IAssignLhs _2935___mcc_h8 = _source91.dtor_lhs;
          DAST._IExpression _2936___mcc_h9 = _source91.dtor_value;
        } else if (_source91.is_If) {
          DAST._IExpression _2937___mcc_h12 = _source91.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2938___mcc_h13 = _source91.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2939___mcc_h14 = _source91.dtor_els;
        } else if (_source91.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2940___mcc_h18 = _source91.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2941___mcc_h19 = _source91.dtor_body;
        } else if (_source91.is_While) {
          DAST._IExpression _2942___mcc_h22 = _source91.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2943___mcc_h23 = _source91.dtor_body;
        } else if (_source91.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2944___mcc_h26 = _source91.dtor_boundName;
          DAST._IType _2945___mcc_h27 = _source91.dtor_boundType;
          DAST._IExpression _2946___mcc_h28 = _source91.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2947___mcc_h29 = _source91.dtor_body;
        } else if (_source91.is_Call) {
          DAST._IExpression _2948___mcc_h34 = _source91.dtor_on;
          DAST._ICallName _2949___mcc_h35 = _source91.dtor_callName;
          Dafny.ISequence<DAST._IType> _2950___mcc_h36 = _source91.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2951___mcc_h37 = _source91.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2952___mcc_h38 = _source91.dtor_outs;
        } else if (_source91.is_Return) {
          DAST._IExpression _2953___mcc_h44 = _source91.dtor_expr;
        } else if (_source91.is_EarlyReturn) {
        } else if (_source91.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2954___mcc_h46 = _source91.dtor_toLabel;
        } else if (_source91.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2955___mcc_h48 = _source91.dtor_body;
        } else if (_source91.is_JumpTailCallStart) {
        } else if (_source91.is_Halt) {
        } else {
          DAST._IExpression _2956___mcc_h50 = _source91.dtor_Print_a0;
        }
        RAST._IExpr _2957_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2958_recIdents;
        DCOMP._IEnvironment _2959_newEnv2;
        RAST._IExpr _out86;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out87;
        DCOMP._IEnvironment _out88;
        DCOMP.COMP.GenStmt(_2895_stmt, selfIdent, newEnv, (isLast) && ((_2893_i) == ((new BigInteger((_2894_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out86, out _out87, out _out88);
        _2957_stmtExpr = _out86;
        _2958_recIdents = _out87;
        _2959_newEnv2 = _out88;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_2958_recIdents, _2892_declarations));
        newEnv = _2959_newEnv2;
        DAST._IStatement _source96 = _2895_stmt;
        if (_source96.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2960___mcc_h114 = _source96.dtor_name;
          DAST._IType _2961___mcc_h115 = _source96.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2962___mcc_h116 = _source96.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _2963_name = _2960___mcc_h114;
          {
            _2892_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2892_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2963_name));
          }
        } else if (_source96.is_Assign) {
          DAST._IAssignLhs _2964___mcc_h120 = _source96.dtor_lhs;
          DAST._IExpression _2965___mcc_h121 = _source96.dtor_value;
        } else if (_source96.is_If) {
          DAST._IExpression _2966___mcc_h124 = _source96.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2967___mcc_h125 = _source96.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2968___mcc_h126 = _source96.dtor_els;
        } else if (_source96.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2969___mcc_h130 = _source96.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2970___mcc_h131 = _source96.dtor_body;
        } else if (_source96.is_While) {
          DAST._IExpression _2971___mcc_h134 = _source96.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2972___mcc_h135 = _source96.dtor_body;
        } else if (_source96.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2973___mcc_h138 = _source96.dtor_boundName;
          DAST._IType _2974___mcc_h139 = _source96.dtor_boundType;
          DAST._IExpression _2975___mcc_h140 = _source96.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2976___mcc_h141 = _source96.dtor_body;
        } else if (_source96.is_Call) {
          DAST._IExpression _2977___mcc_h146 = _source96.dtor_on;
          DAST._ICallName _2978___mcc_h147 = _source96.dtor_callName;
          Dafny.ISequence<DAST._IType> _2979___mcc_h148 = _source96.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2980___mcc_h149 = _source96.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2981___mcc_h150 = _source96.dtor_outs;
        } else if (_source96.is_Return) {
          DAST._IExpression _2982___mcc_h156 = _source96.dtor_expr;
        } else if (_source96.is_EarlyReturn) {
        } else if (_source96.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2983___mcc_h158 = _source96.dtor_toLabel;
        } else if (_source96.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2984___mcc_h160 = _source96.dtor_body;
        } else if (_source96.is_JumpTailCallStart) {
        } else if (_source96.is_Halt) {
        } else {
          DAST._IExpression _2985___mcc_h162 = _source96.dtor_Print_a0;
        }
        generated = (generated).Then(_2957_stmtExpr);
        _2893_i = (_2893_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, RAST._IExpr rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, out RAST._IExpr generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = RAST.Expr.Default();
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source97 = lhs;
      if (_source97.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _2986___mcc_h0 = _source97.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source98 = _2986___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _2987___mcc_h1 = _source98;
        Dafny.ISequence<Dafny.Rune> _2988_id = _2987___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _2989_idRust;
          _2989_idRust = DCOMP.__default.escapeIdent(_2988_id);
          if (((env).IsBorrowed(_2989_idRust)) || ((env).IsBorrowedMut(_2989_idRust))) {
            generated = RAST.__default.AssignVar(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), _2989_idRust), rhs);
          } else {
            generated = RAST.__default.AssignVar(_2989_idRust, rhs);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2988_id);
          needsIIFE = false;
        }
      } else if (_source97.is_Select) {
        DAST._IExpression _2990___mcc_h2 = _source97.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _2991___mcc_h3 = _source97.dtor_field;
        Dafny.ISequence<Dafny.Rune> _2992_field = _2991___mcc_h3;
        DAST._IExpression _2993_on = _2990___mcc_h2;
        {
          Dafny.ISequence<Dafny.Rune> _2994_fieldName;
          _2994_fieldName = DCOMP.__default.escapeIdent(_2992_field);
          RAST._IExpr _2995_onExpr;
          DCOMP._IOwnership _2996_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2997_recIdents;
          RAST._IExpr _out89;
          DCOMP._IOwnership _out90;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out91;
          DCOMP.COMP.GenExpr(_2993_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out89, out _out90, out _out91);
          _2995_onExpr = _out89;
          _2996_onOwned = _out90;
          _2997_recIdents = _out91;
          if ((object.Equals(_2995_onExpr, RAST.__default.Borrow(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))))) && (((env).dtor_names).Contains(Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.ASSIGNED__PREFIX, _2994_fieldName)))) {
            generated = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_uninit!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this")), RAST.Expr.create_Identifier(_2994_fieldName), RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.ASSIGNED__PREFIX, _2994_fieldName)), rhs));
          } else {
            if (!object.Equals(_2995_onExpr, RAST.__default.self)) {
              _2995_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_2995_onExpr);
            }
            generated = RAST.__default.AssignMember(_2995_onExpr, _2994_fieldName, rhs);
          }
          readIdents = _2997_recIdents;
          needsIIFE = false;
        }
      } else {
        DAST._IExpression _2998___mcc_h4 = _source97.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _2999___mcc_h5 = _source97.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _3000_indices = _2999___mcc_h5;
        DAST._IExpression _3001_on = _2998___mcc_h4;
        {
          RAST._IExpr _3002_onExpr;
          DCOMP._IOwnership _3003_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3004_recIdents;
          RAST._IExpr _out92;
          DCOMP._IOwnership _out93;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out94;
          DCOMP.COMP.GenExpr(_3001_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out92, out _out93, out _out94);
          _3002_onExpr = _out92;
          _3003_onOwned = _out93;
          _3004_recIdents = _out94;
          readIdents = _3004_recIdents;
          Dafny.ISequence<Dafny.Rune> _3005_s;
          _3005_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _3006_i;
          _3006_i = BigInteger.Zero;
          while ((_3006_i) < (new BigInteger((_3000_indices).Count))) {
            RAST._IExpr _3007_idx;
            DCOMP._IOwnership _3008___v62;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3009_recIdentsIdx;
            RAST._IExpr _out95;
            DCOMP._IOwnership _out96;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out97;
            DCOMP.COMP.GenExpr((_3000_indices).Select(_3006_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out95, out _out96, out _out97);
            _3007_idx = _out95;
            _3008___v62 = _out96;
            _3009_recIdentsIdx = _out97;
            _3005_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_3005_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_3006_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_3007_idx)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3009_recIdentsIdx);
            _3006_i = (_3006_i) + (BigInteger.One);
          }
          _3005_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_3005_s, (_3002_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _3006_i = BigInteger.Zero;
          while ((_3006_i) < (new BigInteger((_3000_indices).Count))) {
            _3005_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_3005_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_3006_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _3006_i = (_3006_i) + (BigInteger.One);
          }
          _3005_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_3005_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (rhs)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          generated = RAST.Expr.create_RawExpr(_3005_s);
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      DAST._IStatement _source99 = stmt;
      if (_source99.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _3010___mcc_h0 = _source99.dtor_name;
        DAST._IType _3011___mcc_h1 = _source99.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _3012___mcc_h2 = _source99.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source100 = _3012___mcc_h2;
        if (_source100.is_None) {
          DAST._IType _3013_typ = _3011___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _3014_name = _3010___mcc_h0;
          {
            DAST._IStatement _3015_newStmt;
            _3015_newStmt = DAST.Statement.create_DeclareVar(_3014_name, _3013_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_3013_typ)));
            RAST._IExpr _out98;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out99;
            DCOMP._IEnvironment _out100;
            DCOMP.COMP.GenStmt(_3015_newStmt, selfIdent, env, isLast, earlyReturn, out _out98, out _out99, out _out100);
            generated = _out98;
            readIdents = _out99;
            newEnv = _out100;
          }
        } else {
          DAST._IExpression _3016___mcc_h3 = _source100.dtor_value;
          DAST._IExpression _3017_expression = _3016___mcc_h3;
          DAST._IType _3018_typ = _3011___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _3019_name = _3010___mcc_h0;
          {
            RAST._IType _3020_tpe;
            RAST._IType _out101;
            _out101 = DCOMP.COMP.GenType(_3018_typ, true, false);
            _3020_tpe = _out101;
            Dafny.ISequence<Dafny.Rune> _3021_varName;
            _3021_varName = DCOMP.__default.escapeIdent(_3019_name);
            bool _3022_hasCopySemantics;
            _3022_hasCopySemantics = (_3020_tpe).HasCopySemantics();
            if (((_3017_expression).is_InitializationValue) && (!(_3022_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _3021_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_3020_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_3021_varName, RAST.__default.MaybePlaceboType(_3020_tpe));
            } else {
              RAST._IExpr _3023_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3024_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_3017_expression).is_InitializationValue) && (((_3020_tpe).is_Pointer) || ((_3020_tpe).is_PointerMut))) {
                _3023_expr = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ptr"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("null_mut"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                _3024_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMP._IOwnership _3025_exprOwnership = DCOMP.Ownership.Default();
                RAST._IExpr _out102;
                DCOMP._IOwnership _out103;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out104;
                DCOMP.COMP.GenExpr(_3017_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out102, out _out103, out _out104);
                _3023_expr = _out102;
                _3025_exprOwnership = _out103;
                _3024_recIdents = _out104;
              }
              readIdents = _3024_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_3019_name), Std.Wrappers.Option<RAST._IType>.create_Some(_3020_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3023_expr));
              newEnv = (env).AddAssigned(DCOMP.__default.escapeIdent(_3019_name), _3020_tpe);
            }
          }
        }
      } else if (_source99.is_Assign) {
        DAST._IAssignLhs _3026___mcc_h4 = _source99.dtor_lhs;
        DAST._IExpression _3027___mcc_h5 = _source99.dtor_value;
        DAST._IExpression _3028_expression = _3027___mcc_h5;
        DAST._IAssignLhs _3029_lhs = _3026___mcc_h4;
        {
          RAST._IExpr _3030_exprGen;
          DCOMP._IOwnership _3031___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3032_exprIdents;
          RAST._IExpr _out105;
          DCOMP._IOwnership _out106;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out107;
          DCOMP.COMP.GenExpr(_3028_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out105, out _out106, out _out107);
          _3030_exprGen = _out105;
          _3031___v63 = _out106;
          _3032_exprIdents = _out107;
          if ((_3029_lhs).is_Ident) {
            Dafny.ISequence<Dafny.Rune> _3033_rustId;
            _3033_rustId = DCOMP.__default.escapeIdent(((_3029_lhs).dtor_ident));
            Std.Wrappers._IOption<RAST._IType> _3034_tpe;
            _3034_tpe = (env).GetType(_3033_rustId);
            if (((_3034_tpe).is_Some) && ((((_3034_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
              _3030_exprGen = RAST.__default.MaybePlacebo(_3030_exprGen);
            }
          }
          RAST._IExpr _3035_lhsGen;
          bool _3036_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3037_recIdents;
          RAST._IExpr _out108;
          bool _out109;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out110;
          DCOMP.COMP.GenAssignLhs(_3029_lhs, _3030_exprGen, selfIdent, env, out _out108, out _out109, out _out110);
          _3035_lhsGen = _out108;
          _3036_needsIIFE = _out109;
          _3037_recIdents = _out110;
          generated = _3035_lhsGen;
          if (_3036_needsIIFE) {
            generated = RAST.Expr.create_Block(generated);
          }
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3037_recIdents, _3032_exprIdents);
        }
      } else if (_source99.is_If) {
        DAST._IExpression _3038___mcc_h6 = _source99.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3039___mcc_h7 = _source99.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _3040___mcc_h8 = _source99.dtor_els;
        Dafny.ISequence<DAST._IStatement> _3041_elsDafny = _3040___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _3042_thnDafny = _3039___mcc_h7;
        DAST._IExpression _3043_cond = _3038___mcc_h6;
        {
          RAST._IExpr _3044_cond;
          DCOMP._IOwnership _3045___v64;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3046_recIdents;
          RAST._IExpr _out111;
          DCOMP._IOwnership _out112;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out113;
          DCOMP.COMP.GenExpr(_3043_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out111, out _out112, out _out113);
          _3044_cond = _out111;
          _3045___v64 = _out112;
          _3046_recIdents = _out113;
          Dafny.ISequence<Dafny.Rune> _3047_condString;
          _3047_condString = (_3044_cond)._ToString(DCOMP.__default.IND);
          readIdents = _3046_recIdents;
          RAST._IExpr _3048_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3049_thnIdents;
          DCOMP._IEnvironment _3050_thnEnv;
          RAST._IExpr _out114;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out115;
          DCOMP._IEnvironment _out116;
          DCOMP.COMP.GenStmts(_3042_thnDafny, selfIdent, env, isLast, earlyReturn, out _out114, out _out115, out _out116);
          _3048_thn = _out114;
          _3049_thnIdents = _out115;
          _3050_thnEnv = _out116;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3049_thnIdents);
          RAST._IExpr _3051_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3052_elsIdents;
          DCOMP._IEnvironment _3053_elsEnv;
          RAST._IExpr _out117;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out118;
          DCOMP._IEnvironment _out119;
          DCOMP.COMP.GenStmts(_3041_elsDafny, selfIdent, env, isLast, earlyReturn, out _out117, out _out118, out _out119);
          _3051_els = _out117;
          _3052_elsIdents = _out118;
          _3053_elsEnv = _out119;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3052_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_3044_cond, _3048_thn, _3051_els);
        }
      } else if (_source99.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _3054___mcc_h9 = _source99.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _3055___mcc_h10 = _source99.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3056_body = _3055___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _3057_lbl = _3054___mcc_h9;
        {
          RAST._IExpr _3058_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3059_bodyIdents;
          DCOMP._IEnvironment _3060_env2;
          RAST._IExpr _out120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out121;
          DCOMP._IEnvironment _out122;
          DCOMP.COMP.GenStmts(_3056_body, selfIdent, env, isLast, earlyReturn, out _out120, out _out121, out _out122);
          _3058_body = _out120;
          _3059_bodyIdents = _out121;
          _3060_env2 = _out122;
          readIdents = _3059_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3057_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_3058_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source99.is_While) {
        DAST._IExpression _3061___mcc_h11 = _source99.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3062___mcc_h12 = _source99.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3063_body = _3062___mcc_h12;
        DAST._IExpression _3064_cond = _3061___mcc_h11;
        {
          RAST._IExpr _3065_cond;
          DCOMP._IOwnership _3066___v65;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3067_recIdents;
          RAST._IExpr _out123;
          DCOMP._IOwnership _out124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out125;
          DCOMP.COMP.GenExpr(_3064_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out123, out _out124, out _out125);
          _3065_cond = _out123;
          _3066___v65 = _out124;
          _3067_recIdents = _out125;
          readIdents = _3067_recIdents;
          RAST._IExpr _3068_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3069_bodyIdents;
          DCOMP._IEnvironment _3070_bodyEnv;
          RAST._IExpr _out126;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out127;
          DCOMP._IEnvironment _out128;
          DCOMP.COMP.GenStmts(_3063_body, selfIdent, env, false, earlyReturn, out _out126, out _out127, out _out128);
          _3068_bodyExpr = _out126;
          _3069_bodyIdents = _out127;
          _3070_bodyEnv = _out128;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3069_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3065_cond), _3068_bodyExpr);
        }
      } else if (_source99.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _3071___mcc_h13 = _source99.dtor_boundName;
        DAST._IType _3072___mcc_h14 = _source99.dtor_boundType;
        DAST._IExpression _3073___mcc_h15 = _source99.dtor_over;
        Dafny.ISequence<DAST._IStatement> _3074___mcc_h16 = _source99.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3075_body = _3074___mcc_h16;
        DAST._IExpression _3076_over = _3073___mcc_h15;
        DAST._IType _3077_boundType = _3072___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _3078_boundName = _3071___mcc_h13;
        {
          RAST._IExpr _3079_over;
          DCOMP._IOwnership _3080___v66;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3081_recIdents;
          RAST._IExpr _out129;
          DCOMP._IOwnership _out130;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out131;
          DCOMP.COMP.GenExpr(_3076_over, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out129, out _out130, out _out131);
          _3079_over = _out129;
          _3080___v66 = _out130;
          _3081_recIdents = _out131;
          RAST._IType _3082_boundTpe;
          RAST._IType _out132;
          _out132 = DCOMP.COMP.GenType(_3077_boundType, false, false);
          _3082_boundTpe = _out132;
          readIdents = _3081_recIdents;
          RAST._IExpr _3083_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3084_bodyIdents;
          DCOMP._IEnvironment _3085_bodyEnv;
          RAST._IExpr _out133;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out134;
          DCOMP._IEnvironment _out135;
          DCOMP.COMP.GenStmts(_3075_body, selfIdent, (env).AddAssigned(_3078_boundName, RAST.Type.create_Borrowed(_3082_boundTpe)), false, earlyReturn, out _out133, out _out134, out _out135);
          _3083_bodyExpr = _out133;
          _3084_bodyIdents = _out134;
          _3085_bodyEnv = _out135;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3084_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_3078_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMP.__default.escapeIdent(_3078_boundName), _3079_over, _3083_bodyExpr);
        }
      } else if (_source99.is_Call) {
        DAST._IExpression _3086___mcc_h17 = _source99.dtor_on;
        DAST._ICallName _3087___mcc_h18 = _source99.dtor_callName;
        Dafny.ISequence<DAST._IType> _3088___mcc_h19 = _source99.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _3089___mcc_h20 = _source99.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3090___mcc_h21 = _source99.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3091_maybeOutVars = _3090___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _3092_args = _3089___mcc_h20;
        Dafny.ISequence<DAST._IType> _3093_typeArgs = _3088___mcc_h19;
        DAST._ICallName _3094_name = _3087___mcc_h18;
        DAST._IExpression _3095_on = _3086___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _3096_onExpr;
          DCOMP._IOwnership _3097___v69;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3098_enclosingIdents;
          RAST._IExpr _out136;
          DCOMP._IOwnership _out137;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out138;
          DCOMP.COMP.GenExpr(_3095_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out136, out _out137, out _out138);
          _3096_onExpr = _out136;
          _3097___v69 = _out137;
          _3098_enclosingIdents = _out138;
          Dafny.ISequence<RAST._IType> _3099_typeExprs;
          _3099_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_3093_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _3100_typeI;
            _3100_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _3101_typeArgsR;
            _3101_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_3100_typeI) < (new BigInteger((_3093_typeArgs).Count))) {
              RAST._IType _3102_tpe;
              RAST._IType _out139;
              _out139 = DCOMP.COMP.GenType((_3093_typeArgs).Select(_3100_typeI), false, false);
              _3102_tpe = _out139;
              _3101_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_3101_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_3102_tpe));
              _3100_typeI = (_3100_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _3103_argExprs;
          _3103_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi12 = new BigInteger((_3092_args).Count);
          for (BigInteger _3104_i = BigInteger.Zero; _3104_i < _hi12; _3104_i++) {
            DCOMP._IOwnership _3105_argOwnership;
            _3105_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_3094_name).is_Name) && ((_3104_i) < (new BigInteger((((_3094_name).dtor_signature)).Count)))) {
              RAST._IType _3106_tpe;
              RAST._IType _out140;
              _out140 = DCOMP.COMP.GenType(((((_3094_name).dtor_signature)).Select(_3104_i)).dtor_typ, false, false);
              _3106_tpe = _out140;
              if ((_3106_tpe).HasCopySemantics()) {
                _3105_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _3107_argExpr;
            DCOMP._IOwnership _3108_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3109_argIdents;
            RAST._IExpr _out141;
            DCOMP._IOwnership _out142;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out143;
            DCOMP.COMP.GenExpr((_3092_args).Select(_3104_i), selfIdent, env, _3105_argOwnership, out _out141, out _out142, out _out143);
            _3107_argExpr = _out141;
            _3108_ownership = _out142;
            _3109_argIdents = _out143;
            _3103_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_3103_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_3107_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3109_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3098_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _3110_renderedName;
          _3110_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source101) => {
            if (_source101.is_Name) {
              Dafny.ISequence<Dafny.Rune> _3111___mcc_h26 = _source101.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _3112___mcc_h27 = _source101.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _3113___mcc_h28 = _source101.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _3114_name = _3111___mcc_h26;
              return DCOMP.__default.escapeIdent(_3114_name);
            } else if (_source101.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source101.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source101.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_3094_name);
          DAST._IExpression _source102 = _3095_on;
          if (_source102.is_Literal) {
            DAST._ILiteral _3115___mcc_h29 = _source102.dtor_Literal_a0;
            {
              DAST._ICallName _source103 = _3094_name;
              if (_source103.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3116___mcc_h211 = _source103.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3117___mcc_h212 = _source103.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3118___mcc_h213 = _source103.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source104 = _3117___mcc_h212;
                if (_source104.is_None) {
                } else {
                  DAST._IType _3119___mcc_h217 = _source104.dtor_value;
                  DAST._IType _3120_tpe = _3119___mcc_h217;
                  RAST._IType _3121_typ;
                  RAST._IType _out144;
                  _out144 = DCOMP.COMP.GenType(_3120_tpe, false, false);
                  _3121_typ = _out144;
                  if (((_3121_typ).is_Pointer) || ((_3121_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source103.is_MapBuilderAdd) {
              } else if (_source103.is_MapBuilderBuild) {
              } else if (_source103.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _3122___mcc_h31 = _source102.dtor_Ident_a0;
            {
              DAST._ICallName _source105 = _3094_name;
              if (_source105.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3123___mcc_h219 = _source105.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3124___mcc_h220 = _source105.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3125___mcc_h221 = _source105.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source106 = _3124___mcc_h220;
                if (_source106.is_None) {
                } else {
                  DAST._IType _3126___mcc_h225 = _source106.dtor_value;
                  DAST._IType _3127_tpe = _3126___mcc_h225;
                  RAST._IType _3128_typ;
                  RAST._IType _out145;
                  _out145 = DCOMP.COMP.GenType(_3127_tpe, false, false);
                  _3128_typ = _out145;
                  if (((_3128_typ).is_Pointer) || ((_3128_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source105.is_MapBuilderAdd) {
              } else if (_source105.is_MapBuilderBuild) {
              } else if (_source105.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3129___mcc_h33 = _source102.dtor_Companion_a0;
            {
              _3096_onExpr = (_3096_onExpr).MSel(_3110_renderedName);
            }
          } else if (_source102.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _3130___mcc_h35 = _source102.dtor_Tuple_a0;
            {
              DAST._ICallName _source107 = _3094_name;
              if (_source107.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3131___mcc_h227 = _source107.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3132___mcc_h228 = _source107.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3133___mcc_h229 = _source107.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source108 = _3132___mcc_h228;
                if (_source108.is_None) {
                } else {
                  DAST._IType _3134___mcc_h233 = _source108.dtor_value;
                  DAST._IType _3135_tpe = _3134___mcc_h233;
                  RAST._IType _3136_typ;
                  RAST._IType _out146;
                  _out146 = DCOMP.COMP.GenType(_3135_tpe, false, false);
                  _3136_typ = _out146;
                  if (((_3136_typ).is_Pointer) || ((_3136_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source107.is_MapBuilderAdd) {
              } else if (_source107.is_MapBuilderBuild) {
              } else if (_source107.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3137___mcc_h37 = _source102.dtor_path;
            Dafny.ISequence<DAST._IType> _3138___mcc_h38 = _source102.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3139___mcc_h39 = _source102.dtor_args;
            {
              DAST._ICallName _source109 = _3094_name;
              if (_source109.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3140___mcc_h235 = _source109.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3141___mcc_h236 = _source109.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3142___mcc_h237 = _source109.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source110 = _3141___mcc_h236;
                if (_source110.is_None) {
                } else {
                  DAST._IType _3143___mcc_h241 = _source110.dtor_value;
                  DAST._IType _3144_tpe = _3143___mcc_h241;
                  RAST._IType _3145_typ;
                  RAST._IType _out147;
                  _out147 = DCOMP.COMP.GenType(_3144_tpe, false, false);
                  _3145_typ = _out147;
                  if (((_3145_typ).is_Pointer) || ((_3145_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source109.is_MapBuilderAdd) {
              } else if (_source109.is_MapBuilderBuild) {
              } else if (_source109.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _3146___mcc_h43 = _source102.dtor_dims;
            DAST._IType _3147___mcc_h44 = _source102.dtor_typ;
            {
              DAST._ICallName _source111 = _3094_name;
              if (_source111.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3148___mcc_h243 = _source111.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3149___mcc_h244 = _source111.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3150___mcc_h245 = _source111.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source112 = _3149___mcc_h244;
                if (_source112.is_None) {
                } else {
                  DAST._IType _3151___mcc_h249 = _source112.dtor_value;
                  DAST._IType _3152_tpe = _3151___mcc_h249;
                  RAST._IType _3153_typ;
                  RAST._IType _out148;
                  _out148 = DCOMP.COMP.GenType(_3152_tpe, false, false);
                  _3153_typ = _out148;
                  if (((_3153_typ).is_Pointer) || ((_3153_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source111.is_MapBuilderAdd) {
              } else if (_source111.is_MapBuilderBuild) {
              } else if (_source111.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_DatatypeValue) {
            DAST._IDatatypeType _3154___mcc_h47 = _source102.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _3155___mcc_h48 = _source102.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _3156___mcc_h49 = _source102.dtor_variant;
            bool _3157___mcc_h50 = _source102.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _3158___mcc_h51 = _source102.dtor_contents;
            {
              DAST._ICallName _source113 = _3094_name;
              if (_source113.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3159___mcc_h251 = _source113.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3160___mcc_h252 = _source113.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3161___mcc_h253 = _source113.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source114 = _3160___mcc_h252;
                if (_source114.is_None) {
                } else {
                  DAST._IType _3162___mcc_h257 = _source114.dtor_value;
                  DAST._IType _3163_tpe = _3162___mcc_h257;
                  RAST._IType _3164_typ;
                  RAST._IType _out149;
                  _out149 = DCOMP.COMP.GenType(_3163_tpe, false, false);
                  _3164_typ = _out149;
                  if (((_3164_typ).is_Pointer) || ((_3164_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source113.is_MapBuilderAdd) {
              } else if (_source113.is_MapBuilderBuild) {
              } else if (_source113.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Convert) {
            DAST._IExpression _3165___mcc_h57 = _source102.dtor_value;
            DAST._IType _3166___mcc_h58 = _source102.dtor_from;
            DAST._IType _3167___mcc_h59 = _source102.dtor_typ;
            {
              DAST._ICallName _source115 = _3094_name;
              if (_source115.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3168___mcc_h259 = _source115.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3169___mcc_h260 = _source115.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3170___mcc_h261 = _source115.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source116 = _3169___mcc_h260;
                if (_source116.is_None) {
                } else {
                  DAST._IType _3171___mcc_h265 = _source116.dtor_value;
                  DAST._IType _3172_tpe = _3171___mcc_h265;
                  RAST._IType _3173_typ;
                  RAST._IType _out150;
                  _out150 = DCOMP.COMP.GenType(_3172_tpe, false, false);
                  _3173_typ = _out150;
                  if (((_3173_typ).is_Pointer) || ((_3173_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source115.is_MapBuilderAdd) {
              } else if (_source115.is_MapBuilderBuild) {
              } else if (_source115.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SeqConstruct) {
            DAST._IExpression _3174___mcc_h63 = _source102.dtor_length;
            DAST._IExpression _3175___mcc_h64 = _source102.dtor_elem;
            {
              DAST._ICallName _source117 = _3094_name;
              if (_source117.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3176___mcc_h267 = _source117.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3177___mcc_h268 = _source117.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3178___mcc_h269 = _source117.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source118 = _3177___mcc_h268;
                if (_source118.is_None) {
                } else {
                  DAST._IType _3179___mcc_h273 = _source118.dtor_value;
                  DAST._IType _3180_tpe = _3179___mcc_h273;
                  RAST._IType _3181_typ;
                  RAST._IType _out151;
                  _out151 = DCOMP.COMP.GenType(_3180_tpe, false, false);
                  _3181_typ = _out151;
                  if (((_3181_typ).is_Pointer) || ((_3181_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source117.is_MapBuilderAdd) {
              } else if (_source117.is_MapBuilderBuild) {
              } else if (_source117.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _3182___mcc_h67 = _source102.dtor_elements;
            DAST._IType _3183___mcc_h68 = _source102.dtor_typ;
            {
              DAST._ICallName _source119 = _3094_name;
              if (_source119.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3184___mcc_h275 = _source119.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3185___mcc_h276 = _source119.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3186___mcc_h277 = _source119.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source120 = _3185___mcc_h276;
                if (_source120.is_None) {
                } else {
                  DAST._IType _3187___mcc_h281 = _source120.dtor_value;
                  DAST._IType _3188_tpe = _3187___mcc_h281;
                  RAST._IType _3189_typ;
                  RAST._IType _out152;
                  _out152 = DCOMP.COMP.GenType(_3188_tpe, false, false);
                  _3189_typ = _out152;
                  if (((_3189_typ).is_Pointer) || ((_3189_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source119.is_MapBuilderAdd) {
              } else if (_source119.is_MapBuilderBuild) {
              } else if (_source119.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _3190___mcc_h71 = _source102.dtor_elements;
            {
              DAST._ICallName _source121 = _3094_name;
              if (_source121.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3191___mcc_h283 = _source121.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3192___mcc_h284 = _source121.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3193___mcc_h285 = _source121.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source122 = _3192___mcc_h284;
                if (_source122.is_None) {
                } else {
                  DAST._IType _3194___mcc_h289 = _source122.dtor_value;
                  DAST._IType _3195_tpe = _3194___mcc_h289;
                  RAST._IType _3196_typ;
                  RAST._IType _out153;
                  _out153 = DCOMP.COMP.GenType(_3195_tpe, false, false);
                  _3196_typ = _out153;
                  if (((_3196_typ).is_Pointer) || ((_3196_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source121.is_MapBuilderAdd) {
              } else if (_source121.is_MapBuilderBuild) {
              } else if (_source121.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _3197___mcc_h73 = _source102.dtor_elements;
            {
              DAST._ICallName _source123 = _3094_name;
              if (_source123.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3198___mcc_h291 = _source123.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3199___mcc_h292 = _source123.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3200___mcc_h293 = _source123.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source124 = _3199___mcc_h292;
                if (_source124.is_None) {
                } else {
                  DAST._IType _3201___mcc_h297 = _source124.dtor_value;
                  DAST._IType _3202_tpe = _3201___mcc_h297;
                  RAST._IType _3203_typ;
                  RAST._IType _out154;
                  _out154 = DCOMP.COMP.GenType(_3202_tpe, false, false);
                  _3203_typ = _out154;
                  if (((_3203_typ).is_Pointer) || ((_3203_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source123.is_MapBuilderAdd) {
              } else if (_source123.is_MapBuilderBuild) {
              } else if (_source123.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _3204___mcc_h75 = _source102.dtor_mapElems;
            {
              DAST._ICallName _source125 = _3094_name;
              if (_source125.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3205___mcc_h299 = _source125.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3206___mcc_h300 = _source125.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3207___mcc_h301 = _source125.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source126 = _3206___mcc_h300;
                if (_source126.is_None) {
                } else {
                  DAST._IType _3208___mcc_h305 = _source126.dtor_value;
                  DAST._IType _3209_tpe = _3208___mcc_h305;
                  RAST._IType _3210_typ;
                  RAST._IType _out155;
                  _out155 = DCOMP.COMP.GenType(_3209_tpe, false, false);
                  _3210_typ = _out155;
                  if (((_3210_typ).is_Pointer) || ((_3210_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source125.is_MapBuilderAdd) {
              } else if (_source125.is_MapBuilderBuild) {
              } else if (_source125.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_MapBuilder) {
            DAST._IType _3211___mcc_h77 = _source102.dtor_keyType;
            DAST._IType _3212___mcc_h78 = _source102.dtor_valueType;
            {
              DAST._ICallName _source127 = _3094_name;
              if (_source127.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3213___mcc_h307 = _source127.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3214___mcc_h308 = _source127.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3215___mcc_h309 = _source127.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source128 = _3214___mcc_h308;
                if (_source128.is_None) {
                } else {
                  DAST._IType _3216___mcc_h313 = _source128.dtor_value;
                  DAST._IType _3217_tpe = _3216___mcc_h313;
                  RAST._IType _3218_typ;
                  RAST._IType _out156;
                  _out156 = DCOMP.COMP.GenType(_3217_tpe, false, false);
                  _3218_typ = _out156;
                  if (((_3218_typ).is_Pointer) || ((_3218_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source127.is_MapBuilderAdd) {
              } else if (_source127.is_MapBuilderBuild) {
              } else if (_source127.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SeqUpdate) {
            DAST._IExpression _3219___mcc_h81 = _source102.dtor_expr;
            DAST._IExpression _3220___mcc_h82 = _source102.dtor_indexExpr;
            DAST._IExpression _3221___mcc_h83 = _source102.dtor_value;
            {
              DAST._ICallName _source129 = _3094_name;
              if (_source129.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3222___mcc_h315 = _source129.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3223___mcc_h316 = _source129.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3224___mcc_h317 = _source129.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source130 = _3223___mcc_h316;
                if (_source130.is_None) {
                } else {
                  DAST._IType _3225___mcc_h321 = _source130.dtor_value;
                  DAST._IType _3226_tpe = _3225___mcc_h321;
                  RAST._IType _3227_typ;
                  RAST._IType _out157;
                  _out157 = DCOMP.COMP.GenType(_3226_tpe, false, false);
                  _3227_typ = _out157;
                  if (((_3227_typ).is_Pointer) || ((_3227_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source129.is_MapBuilderAdd) {
              } else if (_source129.is_MapBuilderBuild) {
              } else if (_source129.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_MapUpdate) {
            DAST._IExpression _3228___mcc_h87 = _source102.dtor_expr;
            DAST._IExpression _3229___mcc_h88 = _source102.dtor_indexExpr;
            DAST._IExpression _3230___mcc_h89 = _source102.dtor_value;
            {
              DAST._ICallName _source131 = _3094_name;
              if (_source131.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3231___mcc_h323 = _source131.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3232___mcc_h324 = _source131.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3233___mcc_h325 = _source131.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source132 = _3232___mcc_h324;
                if (_source132.is_None) {
                } else {
                  DAST._IType _3234___mcc_h329 = _source132.dtor_value;
                  DAST._IType _3235_tpe = _3234___mcc_h329;
                  RAST._IType _3236_typ;
                  RAST._IType _out158;
                  _out158 = DCOMP.COMP.GenType(_3235_tpe, false, false);
                  _3236_typ = _out158;
                  if (((_3236_typ).is_Pointer) || ((_3236_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source131.is_MapBuilderAdd) {
              } else if (_source131.is_MapBuilderBuild) {
              } else if (_source131.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SetBuilder) {
            DAST._IType _3237___mcc_h93 = _source102.dtor_elemType;
            {
              DAST._ICallName _source133 = _3094_name;
              if (_source133.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3238___mcc_h331 = _source133.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3239___mcc_h332 = _source133.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3240___mcc_h333 = _source133.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source134 = _3239___mcc_h332;
                if (_source134.is_None) {
                } else {
                  DAST._IType _3241___mcc_h337 = _source134.dtor_value;
                  DAST._IType _3242_tpe = _3241___mcc_h337;
                  RAST._IType _3243_typ;
                  RAST._IType _out159;
                  _out159 = DCOMP.COMP.GenType(_3242_tpe, false, false);
                  _3243_typ = _out159;
                  if (((_3243_typ).is_Pointer) || ((_3243_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source133.is_MapBuilderAdd) {
              } else if (_source133.is_MapBuilderBuild) {
              } else if (_source133.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_ToMultiset) {
            DAST._IExpression _3244___mcc_h95 = _source102.dtor_ToMultiset_a0;
            {
              DAST._ICallName _source135 = _3094_name;
              if (_source135.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3245___mcc_h339 = _source135.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3246___mcc_h340 = _source135.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3247___mcc_h341 = _source135.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source136 = _3246___mcc_h340;
                if (_source136.is_None) {
                } else {
                  DAST._IType _3248___mcc_h345 = _source136.dtor_value;
                  DAST._IType _3249_tpe = _3248___mcc_h345;
                  RAST._IType _3250_typ;
                  RAST._IType _out160;
                  _out160 = DCOMP.COMP.GenType(_3249_tpe, false, false);
                  _3250_typ = _out160;
                  if (((_3250_typ).is_Pointer) || ((_3250_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source135.is_MapBuilderAdd) {
              } else if (_source135.is_MapBuilderBuild) {
              } else if (_source135.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_This) {
            {
              DAST._ICallName _source137 = _3094_name;
              if (_source137.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3251___mcc_h347 = _source137.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3252___mcc_h348 = _source137.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3253___mcc_h349 = _source137.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source138 = _3252___mcc_h348;
                if (_source138.is_None) {
                } else {
                  DAST._IType _3254___mcc_h353 = _source138.dtor_value;
                  DAST._IType _3255_tpe = _3254___mcc_h353;
                  RAST._IType _3256_typ;
                  RAST._IType _out161;
                  _out161 = DCOMP.COMP.GenType(_3255_tpe, false, false);
                  _3256_typ = _out161;
                  if (((_3256_typ).is_Pointer) || ((_3256_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source137.is_MapBuilderAdd) {
              } else if (_source137.is_MapBuilderBuild) {
              } else if (_source137.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Ite) {
            DAST._IExpression _3257___mcc_h97 = _source102.dtor_cond;
            DAST._IExpression _3258___mcc_h98 = _source102.dtor_thn;
            DAST._IExpression _3259___mcc_h99 = _source102.dtor_els;
            {
              DAST._ICallName _source139 = _3094_name;
              if (_source139.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3260___mcc_h355 = _source139.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3261___mcc_h356 = _source139.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3262___mcc_h357 = _source139.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source140 = _3261___mcc_h356;
                if (_source140.is_None) {
                } else {
                  DAST._IType _3263___mcc_h361 = _source140.dtor_value;
                  DAST._IType _3264_tpe = _3263___mcc_h361;
                  RAST._IType _3265_typ;
                  RAST._IType _out162;
                  _out162 = DCOMP.COMP.GenType(_3264_tpe, false, false);
                  _3265_typ = _out162;
                  if (((_3265_typ).is_Pointer) || ((_3265_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source139.is_MapBuilderAdd) {
              } else if (_source139.is_MapBuilderBuild) {
              } else if (_source139.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_UnOp) {
            DAST._IUnaryOp _3266___mcc_h103 = _source102.dtor_unOp;
            DAST._IExpression _3267___mcc_h104 = _source102.dtor_expr;
            DAST.Format._IUnOpFormat _3268___mcc_h105 = _source102.dtor_format1;
            {
              DAST._ICallName _source141 = _3094_name;
              if (_source141.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3269___mcc_h363 = _source141.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3270___mcc_h364 = _source141.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3271___mcc_h365 = _source141.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source142 = _3270___mcc_h364;
                if (_source142.is_None) {
                } else {
                  DAST._IType _3272___mcc_h369 = _source142.dtor_value;
                  DAST._IType _3273_tpe = _3272___mcc_h369;
                  RAST._IType _3274_typ;
                  RAST._IType _out163;
                  _out163 = DCOMP.COMP.GenType(_3273_tpe, false, false);
                  _3274_typ = _out163;
                  if (((_3274_typ).is_Pointer) || ((_3274_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source141.is_MapBuilderAdd) {
              } else if (_source141.is_MapBuilderBuild) {
              } else if (_source141.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_BinOp) {
            DAST._IBinOp _3275___mcc_h109 = _source102.dtor_op;
            DAST._IExpression _3276___mcc_h110 = _source102.dtor_left;
            DAST._IExpression _3277___mcc_h111 = _source102.dtor_right;
            DAST.Format._IBinOpFormat _3278___mcc_h112 = _source102.dtor_format2;
            {
              DAST._ICallName _source143 = _3094_name;
              if (_source143.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3279___mcc_h371 = _source143.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3280___mcc_h372 = _source143.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3281___mcc_h373 = _source143.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source144 = _3280___mcc_h372;
                if (_source144.is_None) {
                } else {
                  DAST._IType _3282___mcc_h377 = _source144.dtor_value;
                  DAST._IType _3283_tpe = _3282___mcc_h377;
                  RAST._IType _3284_typ;
                  RAST._IType _out164;
                  _out164 = DCOMP.COMP.GenType(_3283_tpe, false, false);
                  _3284_typ = _out164;
                  if (((_3284_typ).is_Pointer) || ((_3284_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source143.is_MapBuilderAdd) {
              } else if (_source143.is_MapBuilderBuild) {
              } else if (_source143.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_ArrayLen) {
            DAST._IExpression _3285___mcc_h117 = _source102.dtor_expr;
            BigInteger _3286___mcc_h118 = _source102.dtor_dim;
            {
              DAST._ICallName _source145 = _3094_name;
              if (_source145.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3287___mcc_h379 = _source145.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3288___mcc_h380 = _source145.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3289___mcc_h381 = _source145.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source146 = _3288___mcc_h380;
                if (_source146.is_None) {
                } else {
                  DAST._IType _3290___mcc_h385 = _source146.dtor_value;
                  DAST._IType _3291_tpe = _3290___mcc_h385;
                  RAST._IType _3292_typ;
                  RAST._IType _out165;
                  _out165 = DCOMP.COMP.GenType(_3291_tpe, false, false);
                  _3292_typ = _out165;
                  if (((_3292_typ).is_Pointer) || ((_3292_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source145.is_MapBuilderAdd) {
              } else if (_source145.is_MapBuilderBuild) {
              } else if (_source145.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_MapKeys) {
            DAST._IExpression _3293___mcc_h121 = _source102.dtor_expr;
            {
              DAST._ICallName _source147 = _3094_name;
              if (_source147.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3294___mcc_h387 = _source147.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3295___mcc_h388 = _source147.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3296___mcc_h389 = _source147.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source148 = _3295___mcc_h388;
                if (_source148.is_None) {
                } else {
                  DAST._IType _3297___mcc_h393 = _source148.dtor_value;
                  DAST._IType _3298_tpe = _3297___mcc_h393;
                  RAST._IType _3299_typ;
                  RAST._IType _out166;
                  _out166 = DCOMP.COMP.GenType(_3298_tpe, false, false);
                  _3299_typ = _out166;
                  if (((_3299_typ).is_Pointer) || ((_3299_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source147.is_MapBuilderAdd) {
              } else if (_source147.is_MapBuilderBuild) {
              } else if (_source147.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_MapValues) {
            DAST._IExpression _3300___mcc_h123 = _source102.dtor_expr;
            {
              DAST._ICallName _source149 = _3094_name;
              if (_source149.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3301___mcc_h395 = _source149.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3302___mcc_h396 = _source149.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3303___mcc_h397 = _source149.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source150 = _3302___mcc_h396;
                if (_source150.is_None) {
                } else {
                  DAST._IType _3304___mcc_h401 = _source150.dtor_value;
                  DAST._IType _3305_tpe = _3304___mcc_h401;
                  RAST._IType _3306_typ;
                  RAST._IType _out167;
                  _out167 = DCOMP.COMP.GenType(_3305_tpe, false, false);
                  _3306_typ = _out167;
                  if (((_3306_typ).is_Pointer) || ((_3306_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source149.is_MapBuilderAdd) {
              } else if (_source149.is_MapBuilderBuild) {
              } else if (_source149.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Select) {
            DAST._IExpression _3307___mcc_h125 = _source102.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3308___mcc_h126 = _source102.dtor_field;
            bool _3309___mcc_h127 = _source102.dtor_isConstant;
            bool _3310___mcc_h128 = _source102.dtor_onDatatype;
            {
              DAST._ICallName _source151 = _3094_name;
              if (_source151.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3311___mcc_h403 = _source151.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3312___mcc_h404 = _source151.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3313___mcc_h405 = _source151.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source152 = _3312___mcc_h404;
                if (_source152.is_None) {
                } else {
                  DAST._IType _3314___mcc_h409 = _source152.dtor_value;
                  DAST._IType _3315_tpe = _3314___mcc_h409;
                  RAST._IType _3316_typ;
                  RAST._IType _out168;
                  _out168 = DCOMP.COMP.GenType(_3315_tpe, false, false);
                  _3316_typ = _out168;
                  if (((_3316_typ).is_Pointer) || ((_3316_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source151.is_MapBuilderAdd) {
              } else if (_source151.is_MapBuilderBuild) {
              } else if (_source151.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SelectFn) {
            DAST._IExpression _3317___mcc_h133 = _source102.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3318___mcc_h134 = _source102.dtor_field;
            bool _3319___mcc_h135 = _source102.dtor_onDatatype;
            bool _3320___mcc_h136 = _source102.dtor_isStatic;
            BigInteger _3321___mcc_h137 = _source102.dtor_arity;
            {
              DAST._ICallName _source153 = _3094_name;
              if (_source153.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3322___mcc_h411 = _source153.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3323___mcc_h412 = _source153.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3324___mcc_h413 = _source153.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source154 = _3323___mcc_h412;
                if (_source154.is_None) {
                } else {
                  DAST._IType _3325___mcc_h417 = _source154.dtor_value;
                  DAST._IType _3326_tpe = _3325___mcc_h417;
                  RAST._IType _3327_typ;
                  RAST._IType _out169;
                  _out169 = DCOMP.COMP.GenType(_3326_tpe, false, false);
                  _3327_typ = _out169;
                  if (((_3327_typ).is_Pointer) || ((_3327_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source153.is_MapBuilderAdd) {
              } else if (_source153.is_MapBuilderBuild) {
              } else if (_source153.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Index) {
            DAST._IExpression _3328___mcc_h143 = _source102.dtor_expr;
            DAST._ICollKind _3329___mcc_h144 = _source102.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _3330___mcc_h145 = _source102.dtor_indices;
            {
              DAST._ICallName _source155 = _3094_name;
              if (_source155.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3331___mcc_h419 = _source155.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3332___mcc_h420 = _source155.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3333___mcc_h421 = _source155.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source156 = _3332___mcc_h420;
                if (_source156.is_None) {
                } else {
                  DAST._IType _3334___mcc_h425 = _source156.dtor_value;
                  DAST._IType _3335_tpe = _3334___mcc_h425;
                  RAST._IType _3336_typ;
                  RAST._IType _out170;
                  _out170 = DCOMP.COMP.GenType(_3335_tpe, false, false);
                  _3336_typ = _out170;
                  if (((_3336_typ).is_Pointer) || ((_3336_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source155.is_MapBuilderAdd) {
              } else if (_source155.is_MapBuilderBuild) {
              } else if (_source155.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_IndexRange) {
            DAST._IExpression _3337___mcc_h149 = _source102.dtor_expr;
            bool _3338___mcc_h150 = _source102.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _3339___mcc_h151 = _source102.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _3340___mcc_h152 = _source102.dtor_high;
            {
              DAST._ICallName _source157 = _3094_name;
              if (_source157.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3341___mcc_h427 = _source157.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3342___mcc_h428 = _source157.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3343___mcc_h429 = _source157.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source158 = _3342___mcc_h428;
                if (_source158.is_None) {
                } else {
                  DAST._IType _3344___mcc_h433 = _source158.dtor_value;
                  DAST._IType _3345_tpe = _3344___mcc_h433;
                  RAST._IType _3346_typ;
                  RAST._IType _out171;
                  _out171 = DCOMP.COMP.GenType(_3345_tpe, false, false);
                  _3346_typ = _out171;
                  if (((_3346_typ).is_Pointer) || ((_3346_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source157.is_MapBuilderAdd) {
              } else if (_source157.is_MapBuilderBuild) {
              } else if (_source157.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_TupleSelect) {
            DAST._IExpression _3347___mcc_h157 = _source102.dtor_expr;
            BigInteger _3348___mcc_h158 = _source102.dtor_index;
            {
              DAST._ICallName _source159 = _3094_name;
              if (_source159.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3349___mcc_h435 = _source159.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3350___mcc_h436 = _source159.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3351___mcc_h437 = _source159.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source160 = _3350___mcc_h436;
                if (_source160.is_None) {
                } else {
                  DAST._IType _3352___mcc_h441 = _source160.dtor_value;
                  DAST._IType _3353_tpe = _3352___mcc_h441;
                  RAST._IType _3354_typ;
                  RAST._IType _out172;
                  _out172 = DCOMP.COMP.GenType(_3353_tpe, false, false);
                  _3354_typ = _out172;
                  if (((_3354_typ).is_Pointer) || ((_3354_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source159.is_MapBuilderAdd) {
              } else if (_source159.is_MapBuilderBuild) {
              } else if (_source159.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Call) {
            DAST._IExpression _3355___mcc_h161 = _source102.dtor_on;
            DAST._ICallName _3356___mcc_h162 = _source102.dtor_callName;
            Dafny.ISequence<DAST._IType> _3357___mcc_h163 = _source102.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3358___mcc_h164 = _source102.dtor_args;
            {
              DAST._ICallName _source161 = _3094_name;
              if (_source161.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3359___mcc_h443 = _source161.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3360___mcc_h444 = _source161.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3361___mcc_h445 = _source161.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source162 = _3360___mcc_h444;
                if (_source162.is_None) {
                } else {
                  DAST._IType _3362___mcc_h449 = _source162.dtor_value;
                  DAST._IType _3363_tpe = _3362___mcc_h449;
                  RAST._IType _3364_typ;
                  RAST._IType _out173;
                  _out173 = DCOMP.COMP.GenType(_3363_tpe, false, false);
                  _3364_typ = _out173;
                  if (((_3364_typ).is_Pointer) || ((_3364_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source161.is_MapBuilderAdd) {
              } else if (_source161.is_MapBuilderBuild) {
              } else if (_source161.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _3365___mcc_h169 = _source102.dtor_params;
            DAST._IType _3366___mcc_h170 = _source102.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _3367___mcc_h171 = _source102.dtor_body;
            {
              DAST._ICallName _source163 = _3094_name;
              if (_source163.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3368___mcc_h451 = _source163.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3369___mcc_h452 = _source163.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3370___mcc_h453 = _source163.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source164 = _3369___mcc_h452;
                if (_source164.is_None) {
                } else {
                  DAST._IType _3371___mcc_h457 = _source164.dtor_value;
                  DAST._IType _3372_tpe = _3371___mcc_h457;
                  RAST._IType _3373_typ;
                  RAST._IType _out174;
                  _out174 = DCOMP.COMP.GenType(_3372_tpe, false, false);
                  _3373_typ = _out174;
                  if (((_3373_typ).is_Pointer) || ((_3373_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source163.is_MapBuilderAdd) {
              } else if (_source163.is_MapBuilderBuild) {
              } else if (_source163.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _3374___mcc_h175 = _source102.dtor_values;
            DAST._IType _3375___mcc_h176 = _source102.dtor_retType;
            DAST._IExpression _3376___mcc_h177 = _source102.dtor_expr;
            {
              DAST._ICallName _source165 = _3094_name;
              if (_source165.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3377___mcc_h459 = _source165.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3378___mcc_h460 = _source165.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3379___mcc_h461 = _source165.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source166 = _3378___mcc_h460;
                if (_source166.is_None) {
                } else {
                  DAST._IType _3380___mcc_h465 = _source166.dtor_value;
                  DAST._IType _3381_tpe = _3380___mcc_h465;
                  RAST._IType _3382_typ;
                  RAST._IType _out175;
                  _out175 = DCOMP.COMP.GenType(_3381_tpe, false, false);
                  _3382_typ = _out175;
                  if (((_3382_typ).is_Pointer) || ((_3382_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source165.is_MapBuilderAdd) {
              } else if (_source165.is_MapBuilderBuild) {
              } else if (_source165.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _3383___mcc_h181 = _source102.dtor_name;
            DAST._IType _3384___mcc_h182 = _source102.dtor_typ;
            DAST._IExpression _3385___mcc_h183 = _source102.dtor_value;
            DAST._IExpression _3386___mcc_h184 = _source102.dtor_iifeBody;
            {
              DAST._ICallName _source167 = _3094_name;
              if (_source167.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3387___mcc_h467 = _source167.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3388___mcc_h468 = _source167.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3389___mcc_h469 = _source167.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source168 = _3388___mcc_h468;
                if (_source168.is_None) {
                } else {
                  DAST._IType _3390___mcc_h473 = _source168.dtor_value;
                  DAST._IType _3391_tpe = _3390___mcc_h473;
                  RAST._IType _3392_typ;
                  RAST._IType _out176;
                  _out176 = DCOMP.COMP.GenType(_3391_tpe, false, false);
                  _3392_typ = _out176;
                  if (((_3392_typ).is_Pointer) || ((_3392_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source167.is_MapBuilderAdd) {
              } else if (_source167.is_MapBuilderBuild) {
              } else if (_source167.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_Apply) {
            DAST._IExpression _3393___mcc_h189 = _source102.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _3394___mcc_h190 = _source102.dtor_args;
            {
              DAST._ICallName _source169 = _3094_name;
              if (_source169.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3395___mcc_h475 = _source169.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3396___mcc_h476 = _source169.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3397___mcc_h477 = _source169.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source170 = _3396___mcc_h476;
                if (_source170.is_None) {
                } else {
                  DAST._IType _3398___mcc_h481 = _source170.dtor_value;
                  DAST._IType _3399_tpe = _3398___mcc_h481;
                  RAST._IType _3400_typ;
                  RAST._IType _out177;
                  _out177 = DCOMP.COMP.GenType(_3399_tpe, false, false);
                  _3400_typ = _out177;
                  if (((_3400_typ).is_Pointer) || ((_3400_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source169.is_MapBuilderAdd) {
              } else if (_source169.is_MapBuilderBuild) {
              } else if (_source169.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_TypeTest) {
            DAST._IExpression _3401___mcc_h193 = _source102.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3402___mcc_h194 = _source102.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _3403___mcc_h195 = _source102.dtor_variant;
            {
              DAST._ICallName _source171 = _3094_name;
              if (_source171.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3404___mcc_h483 = _source171.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3405___mcc_h484 = _source171.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3406___mcc_h485 = _source171.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source172 = _3405___mcc_h484;
                if (_source172.is_None) {
                } else {
                  DAST._IType _3407___mcc_h489 = _source172.dtor_value;
                  DAST._IType _3408_tpe = _3407___mcc_h489;
                  RAST._IType _3409_typ;
                  RAST._IType _out178;
                  _out178 = DCOMP.COMP.GenType(_3408_tpe, false, false);
                  _3409_typ = _out178;
                  if (((_3409_typ).is_Pointer) || ((_3409_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source171.is_MapBuilderAdd) {
              } else if (_source171.is_MapBuilderBuild) {
              } else if (_source171.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_InitializationValue) {
            DAST._IType _3410___mcc_h199 = _source102.dtor_typ;
            {
              DAST._ICallName _source173 = _3094_name;
              if (_source173.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3411___mcc_h491 = _source173.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3412___mcc_h492 = _source173.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3413___mcc_h493 = _source173.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source174 = _3412___mcc_h492;
                if (_source174.is_None) {
                } else {
                  DAST._IType _3414___mcc_h497 = _source174.dtor_value;
                  DAST._IType _3415_tpe = _3414___mcc_h497;
                  RAST._IType _3416_typ;
                  RAST._IType _out179;
                  _out179 = DCOMP.COMP.GenType(_3415_tpe, false, false);
                  _3416_typ = _out179;
                  if (((_3416_typ).is_Pointer) || ((_3416_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source173.is_MapBuilderAdd) {
              } else if (_source173.is_MapBuilderBuild) {
              } else if (_source173.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_BoolBoundedPool) {
            {
              DAST._ICallName _source175 = _3094_name;
              if (_source175.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3417___mcc_h499 = _source175.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3418___mcc_h500 = _source175.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3419___mcc_h501 = _source175.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source176 = _3418___mcc_h500;
                if (_source176.is_None) {
                } else {
                  DAST._IType _3420___mcc_h505 = _source176.dtor_value;
                  DAST._IType _3421_tpe = _3420___mcc_h505;
                  RAST._IType _3422_typ;
                  RAST._IType _out180;
                  _out180 = DCOMP.COMP.GenType(_3421_tpe, false, false);
                  _3422_typ = _out180;
                  if (((_3422_typ).is_Pointer) || ((_3422_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source175.is_MapBuilderAdd) {
              } else if (_source175.is_MapBuilderBuild) {
              } else if (_source175.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SetBoundedPool) {
            DAST._IExpression _3423___mcc_h201 = _source102.dtor_of;
            {
              DAST._ICallName _source177 = _3094_name;
              if (_source177.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3424___mcc_h507 = _source177.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3425___mcc_h508 = _source177.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3426___mcc_h509 = _source177.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source178 = _3425___mcc_h508;
                if (_source178.is_None) {
                } else {
                  DAST._IType _3427___mcc_h513 = _source178.dtor_value;
                  DAST._IType _3428_tpe = _3427___mcc_h513;
                  RAST._IType _3429_typ;
                  RAST._IType _out181;
                  _out181 = DCOMP.COMP.GenType(_3428_tpe, false, false);
                  _3429_typ = _out181;
                  if (((_3429_typ).is_Pointer) || ((_3429_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source177.is_MapBuilderAdd) {
              } else if (_source177.is_MapBuilderBuild) {
              } else if (_source177.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else if (_source102.is_SeqBoundedPool) {
            DAST._IExpression _3430___mcc_h203 = _source102.dtor_of;
            bool _3431___mcc_h204 = _source102.dtor_includeDuplicates;
            {
              DAST._ICallName _source179 = _3094_name;
              if (_source179.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3432___mcc_h515 = _source179.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3433___mcc_h516 = _source179.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3434___mcc_h517 = _source179.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source180 = _3433___mcc_h516;
                if (_source180.is_None) {
                } else {
                  DAST._IType _3435___mcc_h521 = _source180.dtor_value;
                  DAST._IType _3436_tpe = _3435___mcc_h521;
                  RAST._IType _3437_typ;
                  RAST._IType _out182;
                  _out182 = DCOMP.COMP.GenType(_3436_tpe, false, false);
                  _3437_typ = _out182;
                  if (((_3437_typ).is_Pointer) || ((_3437_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source179.is_MapBuilderAdd) {
              } else if (_source179.is_MapBuilderBuild) {
              } else if (_source179.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          } else {
            DAST._IExpression _3438___mcc_h207 = _source102.dtor_lo;
            DAST._IExpression _3439___mcc_h208 = _source102.dtor_hi;
            {
              DAST._ICallName _source181 = _3094_name;
              if (_source181.is_Name) {
                Dafny.ISequence<Dafny.Rune> _3440___mcc_h523 = _source181.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3441___mcc_h524 = _source181.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3442___mcc_h525 = _source181.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source182 = _3441___mcc_h524;
                if (_source182.is_None) {
                } else {
                  DAST._IType _3443___mcc_h529 = _source182.dtor_value;
                  DAST._IType _3444_tpe = _3443___mcc_h529;
                  RAST._IType _3445_typ;
                  RAST._IType _out183;
                  _out183 = DCOMP.COMP.GenType(_3444_tpe, false, false);
                  _3445_typ = _out183;
                  if (((_3445_typ).is_Pointer) || ((_3445_typ).is_PointerMut)) {
                    _3096_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_3096_onExpr);
                  }
                }
              } else if (_source181.is_MapBuilderAdd) {
              } else if (_source181.is_MapBuilderBuild) {
              } else if (_source181.is_SetBuilderAdd) {
              } else {
              }
              _3096_onExpr = (_3096_onExpr).Sel(_3110_renderedName);
            }
          }
          generated = _3096_onExpr;
          if ((new BigInteger((_3099_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_3099_typeExprs);
          }
          generated = (generated).Apply(_3103_argExprs);
          if (((_3091_maybeOutVars).is_Some) && ((new BigInteger(((_3091_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _3446_outVar;
            _3446_outVar = (((_3091_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_3446_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_3446_outVar, generated);
          } else if (((_3091_maybeOutVars).is_None) || ((new BigInteger(((_3091_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _3447_tmpVar;
            _3447_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _3448_tmpId;
            _3448_tmpId = RAST.Expr.create_Identifier(_3447_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _3447_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3449_outVars;
            _3449_outVars = (_3091_maybeOutVars).dtor_value;
            BigInteger _hi13 = new BigInteger((_3449_outVars).Count);
            for (BigInteger _3450_outI = BigInteger.Zero; _3450_outI < _hi13; _3450_outI++) {
              Dafny.ISequence<Dafny.Rune> _3451_outVar;
              _3451_outVar = ((_3449_outVars).Select(_3450_outI));
              RAST._IExpr _3452_rhs;
              _3452_rhs = (_3448_tmpId).Sel(Std.Strings.__default.OfNat(_3450_outI));
              if (!((env).HasCopySemantics(_3451_outVar))) {
                _3452_rhs = RAST.__default.MaybePlacebo(_3452_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_3451_outVar, _3452_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source99.is_Return) {
        DAST._IExpression _3453___mcc_h22 = _source99.dtor_expr;
        DAST._IExpression _3454_exprDafny = _3453___mcc_h22;
        {
          RAST._IExpr _3455_expr;
          DCOMP._IOwnership _3456___v77;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3457_recIdents;
          RAST._IExpr _out184;
          DCOMP._IOwnership _out185;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out186;
          DCOMP.COMP.GenExpr(_3454_exprDafny, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out184, out _out185, out _out186);
          _3455_expr = _out184;
          _3456___v77 = _out185;
          _3457_recIdents = _out186;
          readIdents = _3457_recIdents;
          if (isLast) {
            generated = _3455_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3455_expr));
          }
          newEnv = env;
        }
      } else if (_source99.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source99.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3458___mcc_h23 = _source99.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3459_toLabel = _3458___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source183 = _3459_toLabel;
          if (_source183.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3460___mcc_h531 = _source183.dtor_value;
            Dafny.ISequence<Dafny.Rune> _3461_lbl = _3460___mcc_h531;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3461_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source99.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _3462___mcc_h24 = _source99.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3463_body = _3462___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi14 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _3464_paramI = BigInteger.Zero; _3464_paramI < _hi14; _3464_paramI++) {
            Dafny.ISequence<Dafny.Rune> _3465_param;
            _3465_param = ((env).dtor_names).Select(_3464_paramI);
            RAST._IExpr _3466_paramInit;
            DCOMP._IOwnership _3467___v67;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3468___v68;
            RAST._IExpr _out187;
            DCOMP._IOwnership _out188;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out189;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Ident(_3465_param), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out187, out _out188, out _out189);
            _3466_paramInit = _out187;
            _3467___v67 = _out188;
            _3468___v68 = _out189;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_3465_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3466_paramInit)));
          }
          RAST._IExpr _3469_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3470_bodyIdents;
          DCOMP._IEnvironment _3471_bodyEnv;
          RAST._IExpr _out190;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out191;
          DCOMP._IEnvironment _out192;
          DCOMP.COMP.GenStmts(_3463_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out190, out _out191, out _out192);
          _3469_bodyExpr = _out190;
          _3470_bodyIdents = _out191;
          _3471_bodyEnv = _out192;
          newEnv = env;
          readIdents = _3470_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _3469_bodyExpr)));
        }
      } else if (_source99.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source99.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _3472___mcc_h25 = _source99.dtor_Print_a0;
        DAST._IExpression _3473_e = _3472___mcc_h25;
        {
          RAST._IExpr _3474_printedExpr;
          DCOMP._IOwnership _3475_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3476_recIdents;
          RAST._IExpr _out193;
          DCOMP._IOwnership _out194;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out195;
          DCOMP.COMP.GenExpr(_3473_e, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out193, out _out194, out _out195);
          _3474_printedExpr = _out193;
          _3475_recOwnership = _out194;
          _3476_recIdents = _out195;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_3474_printedExpr)));
          readIdents = _3476_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source184 = range;
      if (_source184.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source184.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source184.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source184.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source184.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source184.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source184.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source184.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source184.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source184.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source184.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMP._IOwnership ownership, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out196;
        DCOMP._IOwnership _out197;
        DCOMP.COMP.FromOwned(r, expectedOwnership, out _out196, out _out197);
        @out = _out196;
        resultingOwnership = _out197;
        return ;
      } else if ((object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMP._IOwnership expectedOwnership, DCOMP._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source185 = e;
      DAST._ILiteral _3477___mcc_h0 = _source185.dtor_Literal_a0;
      DAST._ILiteral _source186 = _3477___mcc_h0;
      if (_source186.is_BoolLiteral) {
        bool _3478___mcc_h1 = _source186.dtor_BoolLiteral_a0;
        bool _3479_b = _3478___mcc_h1;
        {
          RAST._IExpr _out198;
          DCOMP._IOwnership _out199;
          DCOMP.COMP.FromOwned(RAST.Expr.create_LiteralBool(_3479_b), expectedOwnership, out _out198, out _out199);
          r = _out198;
          resultingOwnership = _out199;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source186.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _3480___mcc_h2 = _source186.dtor_IntLiteral_a0;
        DAST._IType _3481___mcc_h3 = _source186.dtor_IntLiteral_a1;
        DAST._IType _3482_t = _3481___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _3483_i = _3480___mcc_h2;
        {
          DAST._IType _source187 = _3482_t;
          if (_source187.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3484___mcc_h100 = _source187.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3485___mcc_h101 = _source187.dtor_typeArgs;
            DAST._IResolvedType _3486___mcc_h102 = _source187.dtor_resolved;
            DAST._IType _3487_o = _3482_t;
            {
              RAST._IType _3488_genType;
              RAST._IType _out200;
              _out200 = DCOMP.COMP.GenType(_3487_o, false, false);
              _3488_genType = _out200;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3488_genType);
            }
          } else if (_source187.is_Nullable) {
            DAST._IType _3489___mcc_h106 = _source187.dtor_Nullable_a0;
            DAST._IType _3490_o = _3482_t;
            {
              RAST._IType _3491_genType;
              RAST._IType _out201;
              _out201 = DCOMP.COMP.GenType(_3490_o, false, false);
              _3491_genType = _out201;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3491_genType);
            }
          } else if (_source187.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3492___mcc_h108 = _source187.dtor_Tuple_a0;
            DAST._IType _3493_o = _3482_t;
            {
              RAST._IType _3494_genType;
              RAST._IType _out202;
              _out202 = DCOMP.COMP.GenType(_3493_o, false, false);
              _3494_genType = _out202;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3494_genType);
            }
          } else if (_source187.is_Array) {
            DAST._IType _3495___mcc_h110 = _source187.dtor_element;
            BigInteger _3496___mcc_h111 = _source187.dtor_dims;
            DAST._IType _3497_o = _3482_t;
            {
              RAST._IType _3498_genType;
              RAST._IType _out203;
              _out203 = DCOMP.COMP.GenType(_3497_o, false, false);
              _3498_genType = _out203;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3498_genType);
            }
          } else if (_source187.is_Seq) {
            DAST._IType _3499___mcc_h114 = _source187.dtor_element;
            DAST._IType _3500_o = _3482_t;
            {
              RAST._IType _3501_genType;
              RAST._IType _out204;
              _out204 = DCOMP.COMP.GenType(_3500_o, false, false);
              _3501_genType = _out204;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3501_genType);
            }
          } else if (_source187.is_Set) {
            DAST._IType _3502___mcc_h116 = _source187.dtor_element;
            DAST._IType _3503_o = _3482_t;
            {
              RAST._IType _3504_genType;
              RAST._IType _out205;
              _out205 = DCOMP.COMP.GenType(_3503_o, false, false);
              _3504_genType = _out205;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3504_genType);
            }
          } else if (_source187.is_Multiset) {
            DAST._IType _3505___mcc_h118 = _source187.dtor_element;
            DAST._IType _3506_o = _3482_t;
            {
              RAST._IType _3507_genType;
              RAST._IType _out206;
              _out206 = DCOMP.COMP.GenType(_3506_o, false, false);
              _3507_genType = _out206;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3507_genType);
            }
          } else if (_source187.is_Map) {
            DAST._IType _3508___mcc_h120 = _source187.dtor_key;
            DAST._IType _3509___mcc_h121 = _source187.dtor_value;
            DAST._IType _3510_o = _3482_t;
            {
              RAST._IType _3511_genType;
              RAST._IType _out207;
              _out207 = DCOMP.COMP.GenType(_3510_o, false, false);
              _3511_genType = _out207;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3511_genType);
            }
          } else if (_source187.is_SetBuilder) {
            DAST._IType _3512___mcc_h124 = _source187.dtor_element;
            DAST._IType _3513_o = _3482_t;
            {
              RAST._IType _3514_genType;
              RAST._IType _out208;
              _out208 = DCOMP.COMP.GenType(_3513_o, false, false);
              _3514_genType = _out208;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3514_genType);
            }
          } else if (_source187.is_MapBuilder) {
            DAST._IType _3515___mcc_h126 = _source187.dtor_key;
            DAST._IType _3516___mcc_h127 = _source187.dtor_value;
            DAST._IType _3517_o = _3482_t;
            {
              RAST._IType _3518_genType;
              RAST._IType _out209;
              _out209 = DCOMP.COMP.GenType(_3517_o, false, false);
              _3518_genType = _out209;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3518_genType);
            }
          } else if (_source187.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3519___mcc_h130 = _source187.dtor_args;
            DAST._IType _3520___mcc_h131 = _source187.dtor_result;
            DAST._IType _3521_o = _3482_t;
            {
              RAST._IType _3522_genType;
              RAST._IType _out210;
              _out210 = DCOMP.COMP.GenType(_3521_o, false, false);
              _3522_genType = _out210;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3522_genType);
            }
          } else if (_source187.is_Primitive) {
            DAST._IPrimitive _3523___mcc_h134 = _source187.dtor_Primitive_a0;
            DAST._IPrimitive _source188 = _3523___mcc_h134;
            if (_source188.is_Int) {
              {
                if ((new BigInteger((_3483_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_3483_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_3483_i, true));
                }
              }
            } else if (_source188.is_Real) {
              DAST._IType _3524_o = _3482_t;
              {
                RAST._IType _3525_genType;
                RAST._IType _out211;
                _out211 = DCOMP.COMP.GenType(_3524_o, false, false);
                _3525_genType = _out211;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3525_genType);
              }
            } else if (_source188.is_String) {
              DAST._IType _3526_o = _3482_t;
              {
                RAST._IType _3527_genType;
                RAST._IType _out212;
                _out212 = DCOMP.COMP.GenType(_3526_o, false, false);
                _3527_genType = _out212;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3527_genType);
              }
            } else if (_source188.is_Bool) {
              DAST._IType _3528_o = _3482_t;
              {
                RAST._IType _3529_genType;
                RAST._IType _out213;
                _out213 = DCOMP.COMP.GenType(_3528_o, false, false);
                _3529_genType = _out213;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3529_genType);
              }
            } else {
              DAST._IType _3530_o = _3482_t;
              {
                RAST._IType _3531_genType;
                RAST._IType _out214;
                _out214 = DCOMP.COMP.GenType(_3530_o, false, false);
                _3531_genType = _out214;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3531_genType);
              }
            }
          } else if (_source187.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3532___mcc_h136 = _source187.dtor_Passthrough_a0;
            DAST._IType _3533_o = _3482_t;
            {
              RAST._IType _3534_genType;
              RAST._IType _out215;
              _out215 = DCOMP.COMP.GenType(_3533_o, false, false);
              _3534_genType = _out215;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3534_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3535___mcc_h138 = _source187.dtor_TypeArg_a0;
            DAST._IType _3536_o = _3482_t;
            {
              RAST._IType _3537_genType;
              RAST._IType _out216;
              _out216 = DCOMP.COMP.GenType(_3536_o, false, false);
              _3537_genType = _out216;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3483_i), _3537_genType);
            }
          }
          RAST._IExpr _out217;
          DCOMP._IOwnership _out218;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out217, out _out218);
          r = _out217;
          resultingOwnership = _out218;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source186.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _3538___mcc_h4 = _source186.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3539___mcc_h5 = _source186.dtor_DecLiteral_a1;
        DAST._IType _3540___mcc_h6 = _source186.dtor_DecLiteral_a2;
        DAST._IType _3541_t = _3540___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _3542_d = _3539___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _3543_n = _3538___mcc_h4;
        {
          DAST._IType _source189 = _3541_t;
          if (_source189.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3544___mcc_h140 = _source189.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3545___mcc_h141 = _source189.dtor_typeArgs;
            DAST._IResolvedType _3546___mcc_h142 = _source189.dtor_resolved;
            DAST._IType _3547_o = _3541_t;
            {
              RAST._IType _3548_genType;
              RAST._IType _out219;
              _out219 = DCOMP.COMP.GenType(_3547_o, false, false);
              _3548_genType = _out219;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3548_genType);
            }
          } else if (_source189.is_Nullable) {
            DAST._IType _3549___mcc_h146 = _source189.dtor_Nullable_a0;
            DAST._IType _3550_o = _3541_t;
            {
              RAST._IType _3551_genType;
              RAST._IType _out220;
              _out220 = DCOMP.COMP.GenType(_3550_o, false, false);
              _3551_genType = _out220;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3551_genType);
            }
          } else if (_source189.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3552___mcc_h148 = _source189.dtor_Tuple_a0;
            DAST._IType _3553_o = _3541_t;
            {
              RAST._IType _3554_genType;
              RAST._IType _out221;
              _out221 = DCOMP.COMP.GenType(_3553_o, false, false);
              _3554_genType = _out221;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3554_genType);
            }
          } else if (_source189.is_Array) {
            DAST._IType _3555___mcc_h150 = _source189.dtor_element;
            BigInteger _3556___mcc_h151 = _source189.dtor_dims;
            DAST._IType _3557_o = _3541_t;
            {
              RAST._IType _3558_genType;
              RAST._IType _out222;
              _out222 = DCOMP.COMP.GenType(_3557_o, false, false);
              _3558_genType = _out222;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3558_genType);
            }
          } else if (_source189.is_Seq) {
            DAST._IType _3559___mcc_h154 = _source189.dtor_element;
            DAST._IType _3560_o = _3541_t;
            {
              RAST._IType _3561_genType;
              RAST._IType _out223;
              _out223 = DCOMP.COMP.GenType(_3560_o, false, false);
              _3561_genType = _out223;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3561_genType);
            }
          } else if (_source189.is_Set) {
            DAST._IType _3562___mcc_h156 = _source189.dtor_element;
            DAST._IType _3563_o = _3541_t;
            {
              RAST._IType _3564_genType;
              RAST._IType _out224;
              _out224 = DCOMP.COMP.GenType(_3563_o, false, false);
              _3564_genType = _out224;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3564_genType);
            }
          } else if (_source189.is_Multiset) {
            DAST._IType _3565___mcc_h158 = _source189.dtor_element;
            DAST._IType _3566_o = _3541_t;
            {
              RAST._IType _3567_genType;
              RAST._IType _out225;
              _out225 = DCOMP.COMP.GenType(_3566_o, false, false);
              _3567_genType = _out225;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3567_genType);
            }
          } else if (_source189.is_Map) {
            DAST._IType _3568___mcc_h160 = _source189.dtor_key;
            DAST._IType _3569___mcc_h161 = _source189.dtor_value;
            DAST._IType _3570_o = _3541_t;
            {
              RAST._IType _3571_genType;
              RAST._IType _out226;
              _out226 = DCOMP.COMP.GenType(_3570_o, false, false);
              _3571_genType = _out226;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3571_genType);
            }
          } else if (_source189.is_SetBuilder) {
            DAST._IType _3572___mcc_h164 = _source189.dtor_element;
            DAST._IType _3573_o = _3541_t;
            {
              RAST._IType _3574_genType;
              RAST._IType _out227;
              _out227 = DCOMP.COMP.GenType(_3573_o, false, false);
              _3574_genType = _out227;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3574_genType);
            }
          } else if (_source189.is_MapBuilder) {
            DAST._IType _3575___mcc_h166 = _source189.dtor_key;
            DAST._IType _3576___mcc_h167 = _source189.dtor_value;
            DAST._IType _3577_o = _3541_t;
            {
              RAST._IType _3578_genType;
              RAST._IType _out228;
              _out228 = DCOMP.COMP.GenType(_3577_o, false, false);
              _3578_genType = _out228;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3578_genType);
            }
          } else if (_source189.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3579___mcc_h170 = _source189.dtor_args;
            DAST._IType _3580___mcc_h171 = _source189.dtor_result;
            DAST._IType _3581_o = _3541_t;
            {
              RAST._IType _3582_genType;
              RAST._IType _out229;
              _out229 = DCOMP.COMP.GenType(_3581_o, false, false);
              _3582_genType = _out229;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3582_genType);
            }
          } else if (_source189.is_Primitive) {
            DAST._IPrimitive _3583___mcc_h174 = _source189.dtor_Primitive_a0;
            DAST._IPrimitive _source190 = _3583___mcc_h174;
            if (_source190.is_Int) {
              DAST._IType _3584_o = _3541_t;
              {
                RAST._IType _3585_genType;
                RAST._IType _out230;
                _out230 = DCOMP.COMP.GenType(_3584_o, false, false);
                _3585_genType = _out230;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3585_genType);
              }
            } else if (_source190.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source190.is_String) {
              DAST._IType _3586_o = _3541_t;
              {
                RAST._IType _3587_genType;
                RAST._IType _out231;
                _out231 = DCOMP.COMP.GenType(_3586_o, false, false);
                _3587_genType = _out231;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3587_genType);
              }
            } else if (_source190.is_Bool) {
              DAST._IType _3588_o = _3541_t;
              {
                RAST._IType _3589_genType;
                RAST._IType _out232;
                _out232 = DCOMP.COMP.GenType(_3588_o, false, false);
                _3589_genType = _out232;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3589_genType);
              }
            } else {
              DAST._IType _3590_o = _3541_t;
              {
                RAST._IType _3591_genType;
                RAST._IType _out233;
                _out233 = DCOMP.COMP.GenType(_3590_o, false, false);
                _3591_genType = _out233;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3591_genType);
              }
            }
          } else if (_source189.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3592___mcc_h176 = _source189.dtor_Passthrough_a0;
            DAST._IType _3593_o = _3541_t;
            {
              RAST._IType _3594_genType;
              RAST._IType _out234;
              _out234 = DCOMP.COMP.GenType(_3593_o, false, false);
              _3594_genType = _out234;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3594_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3595___mcc_h178 = _source189.dtor_TypeArg_a0;
            DAST._IType _3596_o = _3541_t;
            {
              RAST._IType _3597_genType;
              RAST._IType _out235;
              _out235 = DCOMP.COMP.GenType(_3596_o, false, false);
              _3597_genType = _out235;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3543_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3542_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3597_genType);
            }
          }
          RAST._IExpr _out236;
          DCOMP._IOwnership _out237;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out236, out _out237);
          r = _out236;
          resultingOwnership = _out237;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source186.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _3598___mcc_h7 = _source186.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3599_l = _3598___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_3599_l, false));
          RAST._IExpr _out238;
          DCOMP._IOwnership _out239;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out238, out _out239);
          r = _out238;
          resultingOwnership = _out239;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source186.is_CharLiteral) {
        Dafny.Rune _3600___mcc_h8 = _source186.dtor_CharLiteral_a0;
        Dafny.Rune _3601_c = _3600___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_3601_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMP.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out240;
          DCOMP._IOwnership _out241;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out240, out _out241);
          r = _out240;
          resultingOwnership = _out241;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _3602___mcc_h9 = _source186.dtor_Null_a0;
        DAST._IType _3603_tpe = _3602___mcc_h9;
        {
          RAST._IType _3604_tpeGen;
          RAST._IType _out242;
          _out242 = DCOMP.COMP.GenType(_3603_tpe, false, false);
          _3604_tpeGen = _out242;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _3604_tpeGen);
          RAST._IExpr _out243;
          DCOMP._IOwnership _out244;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out243, out _out244);
          r = _out243;
          resultingOwnership = _out244;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs50 = e;
      DAST._IBinOp _3605_op = _let_tmp_rhs50.dtor_op;
      DAST._IExpression _3606_lExpr = _let_tmp_rhs50.dtor_left;
      DAST._IExpression _3607_rExpr = _let_tmp_rhs50.dtor_right;
      DAST.Format._IBinOpFormat _3608_format = _let_tmp_rhs50.dtor_format2;
      bool _3609_becomesLeftCallsRight;
      _3609_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source191) => {
        if (_source191.is_Eq) {
          bool _3610___mcc_h0 = _source191.dtor_referential;
          bool _3611___mcc_h1 = _source191.dtor_nullable;
          return false;
        } else if (_source191.is_Div) {
          return false;
        } else if (_source191.is_EuclidianDiv) {
          return false;
        } else if (_source191.is_Mod) {
          return false;
        } else if (_source191.is_EuclidianMod) {
          return false;
        } else if (_source191.is_Lt) {
          return false;
        } else if (_source191.is_LtChar) {
          return false;
        } else if (_source191.is_Plus) {
          return false;
        } else if (_source191.is_Minus) {
          return false;
        } else if (_source191.is_Times) {
          return false;
        } else if (_source191.is_BitwiseAnd) {
          return false;
        } else if (_source191.is_BitwiseOr) {
          return false;
        } else if (_source191.is_BitwiseXor) {
          return false;
        } else if (_source191.is_BitwiseShiftRight) {
          return false;
        } else if (_source191.is_BitwiseShiftLeft) {
          return false;
        } else if (_source191.is_And) {
          return false;
        } else if (_source191.is_Or) {
          return false;
        } else if (_source191.is_In) {
          return false;
        } else if (_source191.is_SeqProperPrefix) {
          return false;
        } else if (_source191.is_SeqPrefix) {
          return false;
        } else if (_source191.is_SetMerge) {
          return true;
        } else if (_source191.is_SetSubtraction) {
          return true;
        } else if (_source191.is_SetIntersection) {
          return true;
        } else if (_source191.is_Subset) {
          return false;
        } else if (_source191.is_ProperSubset) {
          return false;
        } else if (_source191.is_SetDisjoint) {
          return true;
        } else if (_source191.is_MapMerge) {
          return true;
        } else if (_source191.is_MapSubtraction) {
          return true;
        } else if (_source191.is_MultisetMerge) {
          return true;
        } else if (_source191.is_MultisetSubtraction) {
          return true;
        } else if (_source191.is_MultisetIntersection) {
          return true;
        } else if (_source191.is_Submultiset) {
          return false;
        } else if (_source191.is_ProperSubmultiset) {
          return false;
        } else if (_source191.is_MultisetDisjoint) {
          return true;
        } else if (_source191.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3612___mcc_h4 = _source191.dtor_Passthrough_a0;
          return false;
        }
      }))(_3605_op);
      bool _3613_becomesRightCallsLeft;
      _3613_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source192) => {
        if (_source192.is_Eq) {
          bool _3614___mcc_h6 = _source192.dtor_referential;
          bool _3615___mcc_h7 = _source192.dtor_nullable;
          return false;
        } else if (_source192.is_Div) {
          return false;
        } else if (_source192.is_EuclidianDiv) {
          return false;
        } else if (_source192.is_Mod) {
          return false;
        } else if (_source192.is_EuclidianMod) {
          return false;
        } else if (_source192.is_Lt) {
          return false;
        } else if (_source192.is_LtChar) {
          return false;
        } else if (_source192.is_Plus) {
          return false;
        } else if (_source192.is_Minus) {
          return false;
        } else if (_source192.is_Times) {
          return false;
        } else if (_source192.is_BitwiseAnd) {
          return false;
        } else if (_source192.is_BitwiseOr) {
          return false;
        } else if (_source192.is_BitwiseXor) {
          return false;
        } else if (_source192.is_BitwiseShiftRight) {
          return false;
        } else if (_source192.is_BitwiseShiftLeft) {
          return false;
        } else if (_source192.is_And) {
          return false;
        } else if (_source192.is_Or) {
          return false;
        } else if (_source192.is_In) {
          return true;
        } else if (_source192.is_SeqProperPrefix) {
          return false;
        } else if (_source192.is_SeqPrefix) {
          return false;
        } else if (_source192.is_SetMerge) {
          return false;
        } else if (_source192.is_SetSubtraction) {
          return false;
        } else if (_source192.is_SetIntersection) {
          return false;
        } else if (_source192.is_Subset) {
          return false;
        } else if (_source192.is_ProperSubset) {
          return false;
        } else if (_source192.is_SetDisjoint) {
          return false;
        } else if (_source192.is_MapMerge) {
          return false;
        } else if (_source192.is_MapSubtraction) {
          return false;
        } else if (_source192.is_MultisetMerge) {
          return false;
        } else if (_source192.is_MultisetSubtraction) {
          return false;
        } else if (_source192.is_MultisetIntersection) {
          return false;
        } else if (_source192.is_Submultiset) {
          return false;
        } else if (_source192.is_ProperSubmultiset) {
          return false;
        } else if (_source192.is_MultisetDisjoint) {
          return false;
        } else if (_source192.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3616___mcc_h10 = _source192.dtor_Passthrough_a0;
          return false;
        }
      }))(_3605_op);
      bool _3617_becomesCallLeftRight;
      _3617_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source193) => {
        if (_source193.is_Eq) {
          bool _3618___mcc_h12 = _source193.dtor_referential;
          bool _3619___mcc_h13 = _source193.dtor_nullable;
          if ((_3618___mcc_h12) == (true)) {
            if ((_3619___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source193.is_Div) {
          return false;
        } else if (_source193.is_EuclidianDiv) {
          return false;
        } else if (_source193.is_Mod) {
          return false;
        } else if (_source193.is_EuclidianMod) {
          return false;
        } else if (_source193.is_Lt) {
          return false;
        } else if (_source193.is_LtChar) {
          return false;
        } else if (_source193.is_Plus) {
          return false;
        } else if (_source193.is_Minus) {
          return false;
        } else if (_source193.is_Times) {
          return false;
        } else if (_source193.is_BitwiseAnd) {
          return false;
        } else if (_source193.is_BitwiseOr) {
          return false;
        } else if (_source193.is_BitwiseXor) {
          return false;
        } else if (_source193.is_BitwiseShiftRight) {
          return false;
        } else if (_source193.is_BitwiseShiftLeft) {
          return false;
        } else if (_source193.is_And) {
          return false;
        } else if (_source193.is_Or) {
          return false;
        } else if (_source193.is_In) {
          return false;
        } else if (_source193.is_SeqProperPrefix) {
          return false;
        } else if (_source193.is_SeqPrefix) {
          return false;
        } else if (_source193.is_SetMerge) {
          return false;
        } else if (_source193.is_SetSubtraction) {
          return false;
        } else if (_source193.is_SetIntersection) {
          return false;
        } else if (_source193.is_Subset) {
          return false;
        } else if (_source193.is_ProperSubset) {
          return false;
        } else if (_source193.is_SetDisjoint) {
          return false;
        } else if (_source193.is_MapMerge) {
          return false;
        } else if (_source193.is_MapSubtraction) {
          return false;
        } else if (_source193.is_MultisetMerge) {
          return false;
        } else if (_source193.is_MultisetSubtraction) {
          return false;
        } else if (_source193.is_MultisetIntersection) {
          return false;
        } else if (_source193.is_Submultiset) {
          return false;
        } else if (_source193.is_ProperSubmultiset) {
          return false;
        } else if (_source193.is_MultisetDisjoint) {
          return false;
        } else if (_source193.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3620___mcc_h16 = _source193.dtor_Passthrough_a0;
          return false;
        }
      }))(_3605_op);
      DCOMP._IOwnership _3621_expectedLeftOwnership;
      _3621_expectedLeftOwnership = ((_3609_becomesLeftCallsRight) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : ((((_3613_becomesRightCallsLeft) || (_3617_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      DCOMP._IOwnership _3622_expectedRightOwnership;
      _3622_expectedRightOwnership = (((_3609_becomesLeftCallsRight) || (_3617_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (((_3613_becomesRightCallsLeft) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _3623_left;
      DCOMP._IOwnership _3624___v82;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3625_recIdentsL;
      RAST._IExpr _out245;
      DCOMP._IOwnership _out246;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out247;
      DCOMP.COMP.GenExpr(_3606_lExpr, selfIdent, env, _3621_expectedLeftOwnership, out _out245, out _out246, out _out247);
      _3623_left = _out245;
      _3624___v82 = _out246;
      _3625_recIdentsL = _out247;
      RAST._IExpr _3626_right;
      DCOMP._IOwnership _3627___v83;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3628_recIdentsR;
      RAST._IExpr _out248;
      DCOMP._IOwnership _out249;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out250;
      DCOMP.COMP.GenExpr(_3607_rExpr, selfIdent, env, _3622_expectedRightOwnership, out _out248, out _out249, out _out250);
      _3626_right = _out248;
      _3627___v83 = _out249;
      _3628_recIdentsR = _out250;
      DAST._IBinOp _source194 = _3605_op;
      if (_source194.is_Eq) {
        bool _3629___mcc_h18 = _source194.dtor_referential;
        bool _3630___mcc_h19 = _source194.dtor_nullable;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source195 = _3605_op;
            if (_source195.is_Eq) {
              bool _3631___mcc_h24 = _source195.dtor_referential;
              bool _3632___mcc_h25 = _source195.dtor_nullable;
              bool _3633_nullable = _3632___mcc_h25;
              bool _3634_referential = _3631___mcc_h24;
              {
                if (_3634_referential) {
                  if (_3633_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source195.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source195.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3635___mcc_h26 = _source195.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3636_op = _3635___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_3636_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_Div) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source196 = _3605_op;
            if (_source196.is_Eq) {
              bool _3637___mcc_h27 = _source196.dtor_referential;
              bool _3638___mcc_h28 = _source196.dtor_nullable;
              bool _3639_nullable = _3638___mcc_h28;
              bool _3640_referential = _3637___mcc_h27;
              {
                if (_3640_referential) {
                  if (_3639_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source196.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source196.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3641___mcc_h29 = _source196.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3642_op = _3641___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_3642_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_EuclidianDiv) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source197 = _3605_op;
            if (_source197.is_Eq) {
              bool _3643___mcc_h30 = _source197.dtor_referential;
              bool _3644___mcc_h31 = _source197.dtor_nullable;
              bool _3645_nullable = _3644___mcc_h31;
              bool _3646_referential = _3643___mcc_h30;
              {
                if (_3646_referential) {
                  if (_3645_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source197.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source197.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3647___mcc_h32 = _source197.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3648_op = _3647___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_3648_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_Mod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source198 = _3605_op;
            if (_source198.is_Eq) {
              bool _3649___mcc_h33 = _source198.dtor_referential;
              bool _3650___mcc_h34 = _source198.dtor_nullable;
              bool _3651_nullable = _3650___mcc_h34;
              bool _3652_referential = _3649___mcc_h33;
              {
                if (_3652_referential) {
                  if (_3651_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source198.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source198.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3653___mcc_h35 = _source198.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3654_op = _3653___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_3654_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_EuclidianMod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source199 = _3605_op;
            if (_source199.is_Eq) {
              bool _3655___mcc_h36 = _source199.dtor_referential;
              bool _3656___mcc_h37 = _source199.dtor_nullable;
              bool _3657_nullable = _3656___mcc_h37;
              bool _3658_referential = _3655___mcc_h36;
              {
                if (_3658_referential) {
                  if (_3657_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source199.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source199.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3659___mcc_h38 = _source199.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3660_op = _3659___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_3660_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_Lt) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source200 = _3605_op;
            if (_source200.is_Eq) {
              bool _3661___mcc_h39 = _source200.dtor_referential;
              bool _3662___mcc_h40 = _source200.dtor_nullable;
              bool _3663_nullable = _3662___mcc_h40;
              bool _3664_referential = _3661___mcc_h39;
              {
                if (_3664_referential) {
                  if (_3663_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source200.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source200.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3665___mcc_h41 = _source200.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3666_op = _3665___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_3666_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_LtChar) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source201 = _3605_op;
            if (_source201.is_Eq) {
              bool _3667___mcc_h42 = _source201.dtor_referential;
              bool _3668___mcc_h43 = _source201.dtor_nullable;
              bool _3669_nullable = _3668___mcc_h43;
              bool _3670_referential = _3667___mcc_h42;
              {
                if (_3670_referential) {
                  if (_3669_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source201.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source201.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3671___mcc_h44 = _source201.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3672_op = _3671___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_3672_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_Plus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source202 = _3605_op;
            if (_source202.is_Eq) {
              bool _3673___mcc_h45 = _source202.dtor_referential;
              bool _3674___mcc_h46 = _source202.dtor_nullable;
              bool _3675_nullable = _3674___mcc_h46;
              bool _3676_referential = _3673___mcc_h45;
              {
                if (_3676_referential) {
                  if (_3675_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source202.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source202.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3677___mcc_h47 = _source202.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3678_op = _3677___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_3678_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_Minus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source203 = _3605_op;
            if (_source203.is_Eq) {
              bool _3679___mcc_h48 = _source203.dtor_referential;
              bool _3680___mcc_h49 = _source203.dtor_nullable;
              bool _3681_nullable = _3680___mcc_h49;
              bool _3682_referential = _3679___mcc_h48;
              {
                if (_3682_referential) {
                  if (_3681_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source203.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source203.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3683___mcc_h50 = _source203.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3684_op = _3683___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_3684_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_Times) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source204 = _3605_op;
            if (_source204.is_Eq) {
              bool _3685___mcc_h51 = _source204.dtor_referential;
              bool _3686___mcc_h52 = _source204.dtor_nullable;
              bool _3687_nullable = _3686___mcc_h52;
              bool _3688_referential = _3685___mcc_h51;
              {
                if (_3688_referential) {
                  if (_3687_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source204.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source204.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3689___mcc_h53 = _source204.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3690_op = _3689___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_3690_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_BitwiseAnd) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source205 = _3605_op;
            if (_source205.is_Eq) {
              bool _3691___mcc_h54 = _source205.dtor_referential;
              bool _3692___mcc_h55 = _source205.dtor_nullable;
              bool _3693_nullable = _3692___mcc_h55;
              bool _3694_referential = _3691___mcc_h54;
              {
                if (_3694_referential) {
                  if (_3693_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source205.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source205.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3695___mcc_h56 = _source205.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3696_op = _3695___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_3696_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_BitwiseOr) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source206 = _3605_op;
            if (_source206.is_Eq) {
              bool _3697___mcc_h57 = _source206.dtor_referential;
              bool _3698___mcc_h58 = _source206.dtor_nullable;
              bool _3699_nullable = _3698___mcc_h58;
              bool _3700_referential = _3697___mcc_h57;
              {
                if (_3700_referential) {
                  if (_3699_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source206.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source206.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3701___mcc_h59 = _source206.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3702_op = _3701___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_3702_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_BitwiseXor) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source207 = _3605_op;
            if (_source207.is_Eq) {
              bool _3703___mcc_h60 = _source207.dtor_referential;
              bool _3704___mcc_h61 = _source207.dtor_nullable;
              bool _3705_nullable = _3704___mcc_h61;
              bool _3706_referential = _3703___mcc_h60;
              {
                if (_3706_referential) {
                  if (_3705_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source207.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source207.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3707___mcc_h62 = _source207.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3708_op = _3707___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_3708_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_BitwiseShiftRight) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source208 = _3605_op;
            if (_source208.is_Eq) {
              bool _3709___mcc_h63 = _source208.dtor_referential;
              bool _3710___mcc_h64 = _source208.dtor_nullable;
              bool _3711_nullable = _3710___mcc_h64;
              bool _3712_referential = _3709___mcc_h63;
              {
                if (_3712_referential) {
                  if (_3711_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source208.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source208.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3713___mcc_h65 = _source208.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3714_op = _3713___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_3714_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_BitwiseShiftLeft) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source209 = _3605_op;
            if (_source209.is_Eq) {
              bool _3715___mcc_h66 = _source209.dtor_referential;
              bool _3716___mcc_h67 = _source209.dtor_nullable;
              bool _3717_nullable = _3716___mcc_h67;
              bool _3718_referential = _3715___mcc_h66;
              {
                if (_3718_referential) {
                  if (_3717_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source209.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source209.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3719___mcc_h68 = _source209.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3720_op = _3719___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_3720_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_And) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source210 = _3605_op;
            if (_source210.is_Eq) {
              bool _3721___mcc_h69 = _source210.dtor_referential;
              bool _3722___mcc_h70 = _source210.dtor_nullable;
              bool _3723_nullable = _3722___mcc_h70;
              bool _3724_referential = _3721___mcc_h69;
              {
                if (_3724_referential) {
                  if (_3723_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source210.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source210.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3725___mcc_h71 = _source210.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3726_op = _3725___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_3726_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_Or) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source211 = _3605_op;
            if (_source211.is_Eq) {
              bool _3727___mcc_h72 = _source211.dtor_referential;
              bool _3728___mcc_h73 = _source211.dtor_nullable;
              bool _3729_nullable = _3728___mcc_h73;
              bool _3730_referential = _3727___mcc_h72;
              {
                if (_3730_referential) {
                  if (_3729_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source211.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source211.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3731___mcc_h74 = _source211.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3732_op = _3731___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_3732_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      } else if (_source194.is_In) {
        {
          r = ((_3626_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_3623_left);
        }
      } else if (_source194.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3623_left, _3626_right, _3608_format);
      } else if (_source194.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3623_left, _3626_right, _3608_format);
      } else if (_source194.is_SetMerge) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3626_right);
        }
      } else if (_source194.is_SetSubtraction) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3626_right);
        }
      } else if (_source194.is_SetIntersection) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3626_right);
        }
      } else if (_source194.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3623_left, _3626_right, _3608_format);
        }
      } else if (_source194.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3623_left, _3626_right, _3608_format);
        }
      } else if (_source194.is_SetDisjoint) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3626_right);
        }
      } else if (_source194.is_MapMerge) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3626_right);
        }
      } else if (_source194.is_MapSubtraction) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3626_right);
        }
      } else if (_source194.is_MultisetMerge) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3626_right);
        }
      } else if (_source194.is_MultisetSubtraction) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3626_right);
        }
      } else if (_source194.is_MultisetIntersection) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3626_right);
        }
      } else if (_source194.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3623_left, _3626_right, _3608_format);
        }
      } else if (_source194.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3623_left, _3626_right, _3608_format);
        }
      } else if (_source194.is_MultisetDisjoint) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3626_right);
        }
      } else if (_source194.is_Concat) {
        {
          r = ((_3623_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_3626_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _3733___mcc_h22 = _source194.dtor_Passthrough_a0;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3605_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3605_op), _3623_left, _3626_right, _3608_format);
          } else {
            DAST._IBinOp _source212 = _3605_op;
            if (_source212.is_Eq) {
              bool _3734___mcc_h75 = _source212.dtor_referential;
              bool _3735___mcc_h76 = _source212.dtor_nullable;
              bool _3736_nullable = _3735___mcc_h76;
              bool _3737_referential = _3734___mcc_h75;
              {
                if (_3737_referential) {
                  if (_3736_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3623_left, _3626_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source212.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else if (_source212.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3623_left, _3626_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3738___mcc_h77 = _source212.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3739_op = _3738___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_3739_op, _3623_left, _3626_right, _3608_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out251;
      DCOMP._IOwnership _out252;
      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out251, out _out252);
      r = _out251;
      resultingOwnership = _out252;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3625_recIdentsL, _3628_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs51 = e;
      DAST._IExpression _3740_expr = _let_tmp_rhs51.dtor_value;
      DAST._IType _3741_fromTpe = _let_tmp_rhs51.dtor_from;
      DAST._IType _3742_toTpe = _let_tmp_rhs51.dtor_typ;
      if (object.Equals(_3741_fromTpe, _3742_toTpe)) {
        RAST._IExpr _3743_recursiveGen;
        DCOMP._IOwnership _3744_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3745_recIdents;
        RAST._IExpr _out253;
        DCOMP._IOwnership _out254;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out255;
        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out253, out _out254, out _out255);
        _3743_recursiveGen = _out253;
        _3744_recOwned = _out254;
        _3745_recIdents = _out255;
        r = _3743_recursiveGen;
        RAST._IExpr _out256;
        DCOMP._IOwnership _out257;
        DCOMP.COMP.FromOwnership(r, _3744_recOwned, expectedOwnership, out _out256, out _out257);
        r = _out256;
        resultingOwnership = _out257;
        readIdents = _3745_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source213 = _System.Tuple2<DAST._IType, DAST._IType>.create(_3741_fromTpe, _3742_toTpe);
        DAST._IType _3746___mcc_h0 = _source213.dtor__0;
        DAST._IType _3747___mcc_h1 = _source213.dtor__1;
        DAST._IType _source214 = _3746___mcc_h0;
        if (_source214.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3748___mcc_h4 = _source214.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _3749___mcc_h5 = _source214.dtor_typeArgs;
          DAST._IResolvedType _3750___mcc_h6 = _source214.dtor_resolved;
          DAST._IResolvedType _source215 = _3750___mcc_h6;
          if (_source215.is_AllocatedDatatype) {
            DAST._IDatatypeType _3751___mcc_h16 = _source215.dtor_datatypeType;
            DAST._IType _source216 = _3747___mcc_h1;
            if (_source216.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3752___mcc_h20 = _source216.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3753___mcc_h21 = _source216.dtor_typeArgs;
              DAST._IResolvedType _3754___mcc_h22 = _source216.dtor_resolved;
              DAST._IResolvedType _source217 = _3754___mcc_h22;
              if (_source217.is_AllocatedDatatype) {
                DAST._IDatatypeType _3755___mcc_h26 = _source217.dtor_datatypeType;
                {
                  RAST._IType _3756_fromTpeGen;
                  RAST._IType _out258;
                  _out258 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _3756_fromTpeGen = _out258;
                  RAST._IType _3757_toTpeGen;
                  RAST._IType _out259;
                  _out259 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _3757_toTpeGen = _out259;
                  RAST._IExpr _3758_recursiveGen;
                  DCOMP._IOwnership _3759_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3760_recIdents;
                  RAST._IExpr _out260;
                  DCOMP._IOwnership _out261;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out262;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out260, out _out261, out _out262);
                  _3758_recursiveGen = _out260;
                  _3759_recOwned = _out261;
                  _3760_recIdents = _out262;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3758_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3756_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3757_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out263;
                  DCOMP._IOwnership _out264;
                  DCOMP.COMP.FromOwnership(r, _3759_recOwned, expectedOwnership, out _out263, out _out264);
                  r = _out263;
                  resultingOwnership = _out264;
                  readIdents = _3760_recIdents;
                }
              } else if (_source217.is_Datatype) {
                DAST._IDatatypeType _3761___mcc_h28 = _source217.dtor_datatypeType;
                {
                  RAST._IType _3762_fromTpeGen;
                  RAST._IType _out265;
                  _out265 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _3762_fromTpeGen = _out265;
                  RAST._IType _3763_toTpeGen;
                  RAST._IType _out266;
                  _out266 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _3763_toTpeGen = _out266;
                  RAST._IExpr _3764_recursiveGen;
                  DCOMP._IOwnership _3765_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3766_recIdents;
                  RAST._IExpr _out267;
                  DCOMP._IOwnership _out268;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out269;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out267, out _out268, out _out269);
                  _3764_recursiveGen = _out267;
                  _3765_recOwned = _out268;
                  _3766_recIdents = _out269;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3764_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3762_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3763_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out270;
                  DCOMP._IOwnership _out271;
                  DCOMP.COMP.FromOwnership(r, _3765_recOwned, expectedOwnership, out _out270, out _out271);
                  r = _out270;
                  resultingOwnership = _out271;
                  readIdents = _3766_recIdents;
                }
              } else if (_source217.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3767___mcc_h30 = _source217.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3768___mcc_h31 = _source217.dtor_attributes;
                {
                  RAST._IType _3769_fromTpeGen;
                  RAST._IType _out272;
                  _out272 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _3769_fromTpeGen = _out272;
                  RAST._IType _3770_toTpeGen;
                  RAST._IType _out273;
                  _out273 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _3770_toTpeGen = _out273;
                  RAST._IExpr _3771_recursiveGen;
                  DCOMP._IOwnership _3772_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3773_recIdents;
                  RAST._IExpr _out274;
                  DCOMP._IOwnership _out275;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out276;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out274, out _out275, out _out276);
                  _3771_recursiveGen = _out274;
                  _3772_recOwned = _out275;
                  _3773_recIdents = _out276;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3771_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3769_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3770_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out277;
                  DCOMP._IOwnership _out278;
                  DCOMP.COMP.FromOwnership(r, _3772_recOwned, expectedOwnership, out _out277, out _out278);
                  r = _out277;
                  resultingOwnership = _out278;
                  readIdents = _3773_recIdents;
                }
              } else {
                DAST._IType _3774___mcc_h34 = _source217.dtor_baseType;
                DAST._INewtypeRange _3775___mcc_h35 = _source217.dtor_range;
                bool _3776___mcc_h36 = _source217.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3777___mcc_h37 = _source217.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3778_attributes = _3777___mcc_h37;
                bool _3779_erase = _3776___mcc_h36;
                DAST._INewtypeRange _3780_range = _3775___mcc_h35;
                DAST._IType _3781_b = _3774___mcc_h34;
                {
                  Std.Wrappers._IOption<RAST._IType> _3782_nativeToType;
                  _3782_nativeToType = DCOMP.COMP.NewtypeToRustType(_3781_b, _3780_range);
                  if (object.Equals(_3741_fromTpe, _3781_b)) {
                    RAST._IExpr _3783_recursiveGen;
                    DCOMP._IOwnership _3784_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3785_recIdents;
                    RAST._IExpr _out279;
                    DCOMP._IOwnership _out280;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out281;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out279, out _out280, out _out281);
                    _3783_recursiveGen = _out279;
                    _3784_recOwned = _out280;
                    _3785_recIdents = _out281;
                    readIdents = _3785_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source218 = _3782_nativeToType;
                    if (_source218.is_None) {
                      if (_3779_erase) {
                        r = _3783_recursiveGen;
                      } else {
                        RAST._IType _3786_rhsType;
                        RAST._IType _out282;
                        _out282 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _3786_rhsType = _out282;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3786_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3783_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out283;
                      DCOMP._IOwnership _out284;
                      DCOMP.COMP.FromOwnership(r, _3784_recOwned, expectedOwnership, out _out283, out _out284);
                      r = _out283;
                      resultingOwnership = _out284;
                    } else {
                      RAST._IType _3787___mcc_h1348 = _source218.dtor_value;
                      RAST._IType _3788_v = _3787___mcc_h1348;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3783_recursiveGen, RAST.Expr.create_ExprFromType(_3788_v)));
                      RAST._IExpr _out285;
                      DCOMP._IOwnership _out286;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out285, out _out286);
                      r = _out285;
                      resultingOwnership = _out286;
                    }
                  } else {
                    if ((_3782_nativeToType).is_Some) {
                      DAST._IType _source219 = _3741_fromTpe;
                      if (_source219.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3789___mcc_h1349 = _source219.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3790___mcc_h1350 = _source219.dtor_typeArgs;
                        DAST._IResolvedType _3791___mcc_h1351 = _source219.dtor_resolved;
                        DAST._IResolvedType _source220 = _3791___mcc_h1351;
                        if (_source220.is_AllocatedDatatype) {
                          DAST._IDatatypeType _3792___mcc_h1355 = _source220.dtor_datatypeType;
                        } else if (_source220.is_Datatype) {
                          DAST._IDatatypeType _3793___mcc_h1357 = _source220.dtor_datatypeType;
                        } else if (_source220.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3794___mcc_h1359 = _source220.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3795___mcc_h1360 = _source220.dtor_attributes;
                        } else {
                          DAST._IType _3796___mcc_h1363 = _source220.dtor_baseType;
                          DAST._INewtypeRange _3797___mcc_h1364 = _source220.dtor_range;
                          bool _3798___mcc_h1365 = _source220.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3799___mcc_h1366 = _source220.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3800_attributes0 = _3799___mcc_h1366;
                          bool _3801_erase0 = _3798___mcc_h1365;
                          DAST._INewtypeRange _3802_range0 = _3797___mcc_h1364;
                          DAST._IType _3803_b0 = _3796___mcc_h1363;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3804_nativeFromType;
                            _3804_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3803_b0, _3802_range0);
                            if ((_3804_nativeFromType).is_Some) {
                              RAST._IExpr _3805_recursiveGen;
                              DCOMP._IOwnership _3806_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3807_recIdents;
                              RAST._IExpr _out287;
                              DCOMP._IOwnership _out288;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out289;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out287, out _out288, out _out289);
                              _3805_recursiveGen = _out287;
                              _3806_recOwned = _out288;
                              _3807_recIdents = _out289;
                              RAST._IExpr _out290;
                              DCOMP._IOwnership _out291;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3805_recursiveGen, (_3782_nativeToType).dtor_value), _3806_recOwned, expectedOwnership, out _out290, out _out291);
                              r = _out290;
                              resultingOwnership = _out291;
                              readIdents = _3807_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source219.is_Nullable) {
                        DAST._IType _3808___mcc_h1371 = _source219.dtor_Nullable_a0;
                      } else if (_source219.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3809___mcc_h1373 = _source219.dtor_Tuple_a0;
                      } else if (_source219.is_Array) {
                        DAST._IType _3810___mcc_h1375 = _source219.dtor_element;
                        BigInteger _3811___mcc_h1376 = _source219.dtor_dims;
                      } else if (_source219.is_Seq) {
                        DAST._IType _3812___mcc_h1379 = _source219.dtor_element;
                      } else if (_source219.is_Set) {
                        DAST._IType _3813___mcc_h1381 = _source219.dtor_element;
                      } else if (_source219.is_Multiset) {
                        DAST._IType _3814___mcc_h1383 = _source219.dtor_element;
                      } else if (_source219.is_Map) {
                        DAST._IType _3815___mcc_h1385 = _source219.dtor_key;
                        DAST._IType _3816___mcc_h1386 = _source219.dtor_value;
                      } else if (_source219.is_SetBuilder) {
                        DAST._IType _3817___mcc_h1389 = _source219.dtor_element;
                      } else if (_source219.is_MapBuilder) {
                        DAST._IType _3818___mcc_h1391 = _source219.dtor_key;
                        DAST._IType _3819___mcc_h1392 = _source219.dtor_value;
                      } else if (_source219.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3820___mcc_h1395 = _source219.dtor_args;
                        DAST._IType _3821___mcc_h1396 = _source219.dtor_result;
                      } else if (_source219.is_Primitive) {
                        DAST._IPrimitive _3822___mcc_h1399 = _source219.dtor_Primitive_a0;
                      } else if (_source219.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3823___mcc_h1401 = _source219.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3824___mcc_h1403 = _source219.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3825_recursiveGen;
                        DCOMP._IOwnership _3826_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3827_recIdents;
                        RAST._IExpr _out292;
                        DCOMP._IOwnership _out293;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out294;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out292, out _out293, out _out294);
                        _3825_recursiveGen = _out292;
                        _3826_recOwned = _out293;
                        _3827_recIdents = _out294;
                        RAST._IExpr _out295;
                        DCOMP._IOwnership _out296;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3825_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3782_nativeToType).dtor_value), _3826_recOwned, expectedOwnership, out _out295, out _out296);
                        r = _out295;
                        resultingOwnership = _out296;
                        readIdents = _3827_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out297;
                    DCOMP._IOwnership _out298;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out299;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _3781_b), _3781_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out297, out _out298, out _out299);
                    r = _out297;
                    resultingOwnership = _out298;
                    readIdents = _out299;
                  }
                }
              }
            } else if (_source216.is_Nullable) {
              DAST._IType _3828___mcc_h42 = _source216.dtor_Nullable_a0;
              {
                RAST._IExpr _3829_recursiveGen;
                DCOMP._IOwnership _3830_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3831_recIdents;
                RAST._IExpr _out300;
                DCOMP._IOwnership _out301;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out302;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out300, out _out301, out _out302);
                _3829_recursiveGen = _out300;
                _3830_recOwned = _out301;
                _3831_recIdents = _out302;
                r = _3829_recursiveGen;
                if (object.Equals(_3830_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out303;
                DCOMP._IOwnership _out304;
                DCOMP.COMP.FromOwnership(r, _3830_recOwned, expectedOwnership, out _out303, out _out304);
                r = _out303;
                resultingOwnership = _out304;
                readIdents = _3831_recIdents;
              }
            } else if (_source216.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3832___mcc_h44 = _source216.dtor_Tuple_a0;
              {
                RAST._IType _3833_fromTpeGen;
                RAST._IType _out305;
                _out305 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3833_fromTpeGen = _out305;
                RAST._IType _3834_toTpeGen;
                RAST._IType _out306;
                _out306 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3834_toTpeGen = _out306;
                RAST._IExpr _3835_recursiveGen;
                DCOMP._IOwnership _3836_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3837_recIdents;
                RAST._IExpr _out307;
                DCOMP._IOwnership _out308;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out309;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out307, out _out308, out _out309);
                _3835_recursiveGen = _out307;
                _3836_recOwned = _out308;
                _3837_recIdents = _out309;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3835_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3833_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3834_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out310;
                DCOMP._IOwnership _out311;
                DCOMP.COMP.FromOwnership(r, _3836_recOwned, expectedOwnership, out _out310, out _out311);
                r = _out310;
                resultingOwnership = _out311;
                readIdents = _3837_recIdents;
              }
            } else if (_source216.is_Array) {
              DAST._IType _3838___mcc_h46 = _source216.dtor_element;
              BigInteger _3839___mcc_h47 = _source216.dtor_dims;
              {
                RAST._IType _3840_fromTpeGen;
                RAST._IType _out312;
                _out312 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3840_fromTpeGen = _out312;
                RAST._IType _3841_toTpeGen;
                RAST._IType _out313;
                _out313 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3841_toTpeGen = _out313;
                RAST._IExpr _3842_recursiveGen;
                DCOMP._IOwnership _3843_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3844_recIdents;
                RAST._IExpr _out314;
                DCOMP._IOwnership _out315;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out316;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out314, out _out315, out _out316);
                _3842_recursiveGen = _out314;
                _3843_recOwned = _out315;
                _3844_recIdents = _out316;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3842_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3840_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3841_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out317;
                DCOMP._IOwnership _out318;
                DCOMP.COMP.FromOwnership(r, _3843_recOwned, expectedOwnership, out _out317, out _out318);
                r = _out317;
                resultingOwnership = _out318;
                readIdents = _3844_recIdents;
              }
            } else if (_source216.is_Seq) {
              DAST._IType _3845___mcc_h50 = _source216.dtor_element;
              {
                RAST._IType _3846_fromTpeGen;
                RAST._IType _out319;
                _out319 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3846_fromTpeGen = _out319;
                RAST._IType _3847_toTpeGen;
                RAST._IType _out320;
                _out320 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3847_toTpeGen = _out320;
                RAST._IExpr _3848_recursiveGen;
                DCOMP._IOwnership _3849_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3850_recIdents;
                RAST._IExpr _out321;
                DCOMP._IOwnership _out322;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out323;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out321, out _out322, out _out323);
                _3848_recursiveGen = _out321;
                _3849_recOwned = _out322;
                _3850_recIdents = _out323;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3848_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3846_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3847_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out324;
                DCOMP._IOwnership _out325;
                DCOMP.COMP.FromOwnership(r, _3849_recOwned, expectedOwnership, out _out324, out _out325);
                r = _out324;
                resultingOwnership = _out325;
                readIdents = _3850_recIdents;
              }
            } else if (_source216.is_Set) {
              DAST._IType _3851___mcc_h52 = _source216.dtor_element;
              {
                RAST._IType _3852_fromTpeGen;
                RAST._IType _out326;
                _out326 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3852_fromTpeGen = _out326;
                RAST._IType _3853_toTpeGen;
                RAST._IType _out327;
                _out327 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3853_toTpeGen = _out327;
                RAST._IExpr _3854_recursiveGen;
                DCOMP._IOwnership _3855_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3856_recIdents;
                RAST._IExpr _out328;
                DCOMP._IOwnership _out329;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out330;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out328, out _out329, out _out330);
                _3854_recursiveGen = _out328;
                _3855_recOwned = _out329;
                _3856_recIdents = _out330;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3854_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3852_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3853_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out331;
                DCOMP._IOwnership _out332;
                DCOMP.COMP.FromOwnership(r, _3855_recOwned, expectedOwnership, out _out331, out _out332);
                r = _out331;
                resultingOwnership = _out332;
                readIdents = _3856_recIdents;
              }
            } else if (_source216.is_Multiset) {
              DAST._IType _3857___mcc_h54 = _source216.dtor_element;
              {
                RAST._IType _3858_fromTpeGen;
                RAST._IType _out333;
                _out333 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3858_fromTpeGen = _out333;
                RAST._IType _3859_toTpeGen;
                RAST._IType _out334;
                _out334 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3859_toTpeGen = _out334;
                RAST._IExpr _3860_recursiveGen;
                DCOMP._IOwnership _3861_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3862_recIdents;
                RAST._IExpr _out335;
                DCOMP._IOwnership _out336;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out337;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out335, out _out336, out _out337);
                _3860_recursiveGen = _out335;
                _3861_recOwned = _out336;
                _3862_recIdents = _out337;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3860_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3858_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3859_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out338;
                DCOMP._IOwnership _out339;
                DCOMP.COMP.FromOwnership(r, _3861_recOwned, expectedOwnership, out _out338, out _out339);
                r = _out338;
                resultingOwnership = _out339;
                readIdents = _3862_recIdents;
              }
            } else if (_source216.is_Map) {
              DAST._IType _3863___mcc_h56 = _source216.dtor_key;
              DAST._IType _3864___mcc_h57 = _source216.dtor_value;
              {
                RAST._IType _3865_fromTpeGen;
                RAST._IType _out340;
                _out340 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3865_fromTpeGen = _out340;
                RAST._IType _3866_toTpeGen;
                RAST._IType _out341;
                _out341 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3866_toTpeGen = _out341;
                RAST._IExpr _3867_recursiveGen;
                DCOMP._IOwnership _3868_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3869_recIdents;
                RAST._IExpr _out342;
                DCOMP._IOwnership _out343;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out344;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out342, out _out343, out _out344);
                _3867_recursiveGen = _out342;
                _3868_recOwned = _out343;
                _3869_recIdents = _out344;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3867_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3865_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3866_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out345;
                DCOMP._IOwnership _out346;
                DCOMP.COMP.FromOwnership(r, _3868_recOwned, expectedOwnership, out _out345, out _out346);
                r = _out345;
                resultingOwnership = _out346;
                readIdents = _3869_recIdents;
              }
            } else if (_source216.is_SetBuilder) {
              DAST._IType _3870___mcc_h60 = _source216.dtor_element;
              {
                RAST._IType _3871_fromTpeGen;
                RAST._IType _out347;
                _out347 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3871_fromTpeGen = _out347;
                RAST._IType _3872_toTpeGen;
                RAST._IType _out348;
                _out348 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3872_toTpeGen = _out348;
                RAST._IExpr _3873_recursiveGen;
                DCOMP._IOwnership _3874_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3875_recIdents;
                RAST._IExpr _out349;
                DCOMP._IOwnership _out350;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out351;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out349, out _out350, out _out351);
                _3873_recursiveGen = _out349;
                _3874_recOwned = _out350;
                _3875_recIdents = _out351;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3873_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3871_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3872_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out352;
                DCOMP._IOwnership _out353;
                DCOMP.COMP.FromOwnership(r, _3874_recOwned, expectedOwnership, out _out352, out _out353);
                r = _out352;
                resultingOwnership = _out353;
                readIdents = _3875_recIdents;
              }
            } else if (_source216.is_MapBuilder) {
              DAST._IType _3876___mcc_h62 = _source216.dtor_key;
              DAST._IType _3877___mcc_h63 = _source216.dtor_value;
              {
                RAST._IType _3878_fromTpeGen;
                RAST._IType _out354;
                _out354 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3878_fromTpeGen = _out354;
                RAST._IType _3879_toTpeGen;
                RAST._IType _out355;
                _out355 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3879_toTpeGen = _out355;
                RAST._IExpr _3880_recursiveGen;
                DCOMP._IOwnership _3881_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3882_recIdents;
                RAST._IExpr _out356;
                DCOMP._IOwnership _out357;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out358;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out356, out _out357, out _out358);
                _3880_recursiveGen = _out356;
                _3881_recOwned = _out357;
                _3882_recIdents = _out358;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3880_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3878_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3879_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out359;
                DCOMP._IOwnership _out360;
                DCOMP.COMP.FromOwnership(r, _3881_recOwned, expectedOwnership, out _out359, out _out360);
                r = _out359;
                resultingOwnership = _out360;
                readIdents = _3882_recIdents;
              }
            } else if (_source216.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3883___mcc_h66 = _source216.dtor_args;
              DAST._IType _3884___mcc_h67 = _source216.dtor_result;
              {
                RAST._IType _3885_fromTpeGen;
                RAST._IType _out361;
                _out361 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3885_fromTpeGen = _out361;
                RAST._IType _3886_toTpeGen;
                RAST._IType _out362;
                _out362 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3886_toTpeGen = _out362;
                RAST._IExpr _3887_recursiveGen;
                DCOMP._IOwnership _3888_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3889_recIdents;
                RAST._IExpr _out363;
                DCOMP._IOwnership _out364;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out365;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out363, out _out364, out _out365);
                _3887_recursiveGen = _out363;
                _3888_recOwned = _out364;
                _3889_recIdents = _out365;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3887_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3885_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3886_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out366;
                DCOMP._IOwnership _out367;
                DCOMP.COMP.FromOwnership(r, _3888_recOwned, expectedOwnership, out _out366, out _out367);
                r = _out366;
                resultingOwnership = _out367;
                readIdents = _3889_recIdents;
              }
            } else if (_source216.is_Primitive) {
              DAST._IPrimitive _3890___mcc_h70 = _source216.dtor_Primitive_a0;
              {
                RAST._IType _3891_fromTpeGen;
                RAST._IType _out368;
                _out368 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3891_fromTpeGen = _out368;
                RAST._IType _3892_toTpeGen;
                RAST._IType _out369;
                _out369 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3892_toTpeGen = _out369;
                RAST._IExpr _3893_recursiveGen;
                DCOMP._IOwnership _3894_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3895_recIdents;
                RAST._IExpr _out370;
                DCOMP._IOwnership _out371;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out372;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out370, out _out371, out _out372);
                _3893_recursiveGen = _out370;
                _3894_recOwned = _out371;
                _3895_recIdents = _out372;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3893_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3891_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3892_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out373;
                DCOMP._IOwnership _out374;
                DCOMP.COMP.FromOwnership(r, _3894_recOwned, expectedOwnership, out _out373, out _out374);
                r = _out373;
                resultingOwnership = _out374;
                readIdents = _3895_recIdents;
              }
            } else if (_source216.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3896___mcc_h72 = _source216.dtor_Passthrough_a0;
              {
                RAST._IType _3897_fromTpeGen;
                RAST._IType _out375;
                _out375 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3897_fromTpeGen = _out375;
                RAST._IType _3898_toTpeGen;
                RAST._IType _out376;
                _out376 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3898_toTpeGen = _out376;
                RAST._IExpr _3899_recursiveGen;
                DCOMP._IOwnership _3900_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3901_recIdents;
                RAST._IExpr _out377;
                DCOMP._IOwnership _out378;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out379;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out377, out _out378, out _out379);
                _3899_recursiveGen = _out377;
                _3900_recOwned = _out378;
                _3901_recIdents = _out379;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3899_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3897_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3898_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out380;
                DCOMP._IOwnership _out381;
                DCOMP.COMP.FromOwnership(r, _3900_recOwned, expectedOwnership, out _out380, out _out381);
                r = _out380;
                resultingOwnership = _out381;
                readIdents = _3901_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3902___mcc_h74 = _source216.dtor_TypeArg_a0;
              {
                RAST._IType _3903_fromTpeGen;
                RAST._IType _out382;
                _out382 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3903_fromTpeGen = _out382;
                RAST._IType _3904_toTpeGen;
                RAST._IType _out383;
                _out383 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3904_toTpeGen = _out383;
                RAST._IExpr _3905_recursiveGen;
                DCOMP._IOwnership _3906_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3907_recIdents;
                RAST._IExpr _out384;
                DCOMP._IOwnership _out385;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out386;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out384, out _out385, out _out386);
                _3905_recursiveGen = _out384;
                _3906_recOwned = _out385;
                _3907_recIdents = _out386;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3905_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3903_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3904_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out387;
                DCOMP._IOwnership _out388;
                DCOMP.COMP.FromOwnership(r, _3906_recOwned, expectedOwnership, out _out387, out _out388);
                r = _out387;
                resultingOwnership = _out388;
                readIdents = _3907_recIdents;
              }
            }
          } else if (_source215.is_Datatype) {
            DAST._IDatatypeType _3908___mcc_h76 = _source215.dtor_datatypeType;
            DAST._IType _source221 = _3747___mcc_h1;
            if (_source221.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3909___mcc_h80 = _source221.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3910___mcc_h81 = _source221.dtor_typeArgs;
              DAST._IResolvedType _3911___mcc_h82 = _source221.dtor_resolved;
              DAST._IResolvedType _source222 = _3911___mcc_h82;
              if (_source222.is_AllocatedDatatype) {
                DAST._IDatatypeType _3912___mcc_h86 = _source222.dtor_datatypeType;
                {
                  RAST._IType _3913_fromTpeGen;
                  RAST._IType _out389;
                  _out389 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _3913_fromTpeGen = _out389;
                  RAST._IType _3914_toTpeGen;
                  RAST._IType _out390;
                  _out390 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _3914_toTpeGen = _out390;
                  RAST._IExpr _3915_recursiveGen;
                  DCOMP._IOwnership _3916_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3917_recIdents;
                  RAST._IExpr _out391;
                  DCOMP._IOwnership _out392;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out393;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out391, out _out392, out _out393);
                  _3915_recursiveGen = _out391;
                  _3916_recOwned = _out392;
                  _3917_recIdents = _out393;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3915_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3913_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3914_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out394;
                  DCOMP._IOwnership _out395;
                  DCOMP.COMP.FromOwnership(r, _3916_recOwned, expectedOwnership, out _out394, out _out395);
                  r = _out394;
                  resultingOwnership = _out395;
                  readIdents = _3917_recIdents;
                }
              } else if (_source222.is_Datatype) {
                DAST._IDatatypeType _3918___mcc_h88 = _source222.dtor_datatypeType;
                {
                  RAST._IType _3919_fromTpeGen;
                  RAST._IType _out396;
                  _out396 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _3919_fromTpeGen = _out396;
                  RAST._IType _3920_toTpeGen;
                  RAST._IType _out397;
                  _out397 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _3920_toTpeGen = _out397;
                  RAST._IExpr _3921_recursiveGen;
                  DCOMP._IOwnership _3922_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3923_recIdents;
                  RAST._IExpr _out398;
                  DCOMP._IOwnership _out399;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out400;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out398, out _out399, out _out400);
                  _3921_recursiveGen = _out398;
                  _3922_recOwned = _out399;
                  _3923_recIdents = _out400;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3921_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3919_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3920_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out401;
                  DCOMP._IOwnership _out402;
                  DCOMP.COMP.FromOwnership(r, _3922_recOwned, expectedOwnership, out _out401, out _out402);
                  r = _out401;
                  resultingOwnership = _out402;
                  readIdents = _3923_recIdents;
                }
              } else if (_source222.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3924___mcc_h90 = _source222.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3925___mcc_h91 = _source222.dtor_attributes;
                {
                  RAST._IType _3926_fromTpeGen;
                  RAST._IType _out403;
                  _out403 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _3926_fromTpeGen = _out403;
                  RAST._IType _3927_toTpeGen;
                  RAST._IType _out404;
                  _out404 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _3927_toTpeGen = _out404;
                  RAST._IExpr _3928_recursiveGen;
                  DCOMP._IOwnership _3929_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3930_recIdents;
                  RAST._IExpr _out405;
                  DCOMP._IOwnership _out406;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out407;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out405, out _out406, out _out407);
                  _3928_recursiveGen = _out405;
                  _3929_recOwned = _out406;
                  _3930_recIdents = _out407;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3928_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3926_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3927_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out408;
                  DCOMP._IOwnership _out409;
                  DCOMP.COMP.FromOwnership(r, _3929_recOwned, expectedOwnership, out _out408, out _out409);
                  r = _out408;
                  resultingOwnership = _out409;
                  readIdents = _3930_recIdents;
                }
              } else {
                DAST._IType _3931___mcc_h94 = _source222.dtor_baseType;
                DAST._INewtypeRange _3932___mcc_h95 = _source222.dtor_range;
                bool _3933___mcc_h96 = _source222.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3934___mcc_h97 = _source222.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3935_attributes = _3934___mcc_h97;
                bool _3936_erase = _3933___mcc_h96;
                DAST._INewtypeRange _3937_range = _3932___mcc_h95;
                DAST._IType _3938_b = _3931___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _3939_nativeToType;
                  _3939_nativeToType = DCOMP.COMP.NewtypeToRustType(_3938_b, _3937_range);
                  if (object.Equals(_3741_fromTpe, _3938_b)) {
                    RAST._IExpr _3940_recursiveGen;
                    DCOMP._IOwnership _3941_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3942_recIdents;
                    RAST._IExpr _out410;
                    DCOMP._IOwnership _out411;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out412;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out410, out _out411, out _out412);
                    _3940_recursiveGen = _out410;
                    _3941_recOwned = _out411;
                    _3942_recIdents = _out412;
                    readIdents = _3942_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source223 = _3939_nativeToType;
                    if (_source223.is_None) {
                      if (_3936_erase) {
                        r = _3940_recursiveGen;
                      } else {
                        RAST._IType _3943_rhsType;
                        RAST._IType _out413;
                        _out413 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _3943_rhsType = _out413;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3943_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3940_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out414;
                      DCOMP._IOwnership _out415;
                      DCOMP.COMP.FromOwnership(r, _3941_recOwned, expectedOwnership, out _out414, out _out415);
                      r = _out414;
                      resultingOwnership = _out415;
                    } else {
                      RAST._IType _3944___mcc_h1405 = _source223.dtor_value;
                      RAST._IType _3945_v = _3944___mcc_h1405;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3940_recursiveGen, RAST.Expr.create_ExprFromType(_3945_v)));
                      RAST._IExpr _out416;
                      DCOMP._IOwnership _out417;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out416, out _out417);
                      r = _out416;
                      resultingOwnership = _out417;
                    }
                  } else {
                    if ((_3939_nativeToType).is_Some) {
                      DAST._IType _source224 = _3741_fromTpe;
                      if (_source224.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3946___mcc_h1406 = _source224.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3947___mcc_h1407 = _source224.dtor_typeArgs;
                        DAST._IResolvedType _3948___mcc_h1408 = _source224.dtor_resolved;
                        DAST._IResolvedType _source225 = _3948___mcc_h1408;
                        if (_source225.is_AllocatedDatatype) {
                          DAST._IDatatypeType _3949___mcc_h1412 = _source225.dtor_datatypeType;
                        } else if (_source225.is_Datatype) {
                          DAST._IDatatypeType _3950___mcc_h1414 = _source225.dtor_datatypeType;
                        } else if (_source225.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3951___mcc_h1416 = _source225.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3952___mcc_h1417 = _source225.dtor_attributes;
                        } else {
                          DAST._IType _3953___mcc_h1420 = _source225.dtor_baseType;
                          DAST._INewtypeRange _3954___mcc_h1421 = _source225.dtor_range;
                          bool _3955___mcc_h1422 = _source225.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3956___mcc_h1423 = _source225.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3957_attributes0 = _3956___mcc_h1423;
                          bool _3958_erase0 = _3955___mcc_h1422;
                          DAST._INewtypeRange _3959_range0 = _3954___mcc_h1421;
                          DAST._IType _3960_b0 = _3953___mcc_h1420;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3961_nativeFromType;
                            _3961_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3960_b0, _3959_range0);
                            if ((_3961_nativeFromType).is_Some) {
                              RAST._IExpr _3962_recursiveGen;
                              DCOMP._IOwnership _3963_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3964_recIdents;
                              RAST._IExpr _out418;
                              DCOMP._IOwnership _out419;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out420;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out418, out _out419, out _out420);
                              _3962_recursiveGen = _out418;
                              _3963_recOwned = _out419;
                              _3964_recIdents = _out420;
                              RAST._IExpr _out421;
                              DCOMP._IOwnership _out422;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3962_recursiveGen, (_3939_nativeToType).dtor_value), _3963_recOwned, expectedOwnership, out _out421, out _out422);
                              r = _out421;
                              resultingOwnership = _out422;
                              readIdents = _3964_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source224.is_Nullable) {
                        DAST._IType _3965___mcc_h1428 = _source224.dtor_Nullable_a0;
                      } else if (_source224.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3966___mcc_h1430 = _source224.dtor_Tuple_a0;
                      } else if (_source224.is_Array) {
                        DAST._IType _3967___mcc_h1432 = _source224.dtor_element;
                        BigInteger _3968___mcc_h1433 = _source224.dtor_dims;
                      } else if (_source224.is_Seq) {
                        DAST._IType _3969___mcc_h1436 = _source224.dtor_element;
                      } else if (_source224.is_Set) {
                        DAST._IType _3970___mcc_h1438 = _source224.dtor_element;
                      } else if (_source224.is_Multiset) {
                        DAST._IType _3971___mcc_h1440 = _source224.dtor_element;
                      } else if (_source224.is_Map) {
                        DAST._IType _3972___mcc_h1442 = _source224.dtor_key;
                        DAST._IType _3973___mcc_h1443 = _source224.dtor_value;
                      } else if (_source224.is_SetBuilder) {
                        DAST._IType _3974___mcc_h1446 = _source224.dtor_element;
                      } else if (_source224.is_MapBuilder) {
                        DAST._IType _3975___mcc_h1448 = _source224.dtor_key;
                        DAST._IType _3976___mcc_h1449 = _source224.dtor_value;
                      } else if (_source224.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3977___mcc_h1452 = _source224.dtor_args;
                        DAST._IType _3978___mcc_h1453 = _source224.dtor_result;
                      } else if (_source224.is_Primitive) {
                        DAST._IPrimitive _3979___mcc_h1456 = _source224.dtor_Primitive_a0;
                      } else if (_source224.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3980___mcc_h1458 = _source224.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3981___mcc_h1460 = _source224.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3982_recursiveGen;
                        DCOMP._IOwnership _3983_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3984_recIdents;
                        RAST._IExpr _out423;
                        DCOMP._IOwnership _out424;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out425;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out423, out _out424, out _out425);
                        _3982_recursiveGen = _out423;
                        _3983_recOwned = _out424;
                        _3984_recIdents = _out425;
                        RAST._IExpr _out426;
                        DCOMP._IOwnership _out427;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3982_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3939_nativeToType).dtor_value), _3983_recOwned, expectedOwnership, out _out426, out _out427);
                        r = _out426;
                        resultingOwnership = _out427;
                        readIdents = _3984_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out428;
                    DCOMP._IOwnership _out429;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out430;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _3938_b), _3938_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out428, out _out429, out _out430);
                    r = _out428;
                    resultingOwnership = _out429;
                    readIdents = _out430;
                  }
                }
              }
            } else if (_source221.is_Nullable) {
              DAST._IType _3985___mcc_h102 = _source221.dtor_Nullable_a0;
              {
                RAST._IExpr _3986_recursiveGen;
                DCOMP._IOwnership _3987_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3988_recIdents;
                RAST._IExpr _out431;
                DCOMP._IOwnership _out432;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out433;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out431, out _out432, out _out433);
                _3986_recursiveGen = _out431;
                _3987_recOwned = _out432;
                _3988_recIdents = _out433;
                r = _3986_recursiveGen;
                if (object.Equals(_3987_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out434;
                DCOMP._IOwnership _out435;
                DCOMP.COMP.FromOwnership(r, _3987_recOwned, expectedOwnership, out _out434, out _out435);
                r = _out434;
                resultingOwnership = _out435;
                readIdents = _3988_recIdents;
              }
            } else if (_source221.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3989___mcc_h104 = _source221.dtor_Tuple_a0;
              {
                RAST._IType _3990_fromTpeGen;
                RAST._IType _out436;
                _out436 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3990_fromTpeGen = _out436;
                RAST._IType _3991_toTpeGen;
                RAST._IType _out437;
                _out437 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3991_toTpeGen = _out437;
                RAST._IExpr _3992_recursiveGen;
                DCOMP._IOwnership _3993_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3994_recIdents;
                RAST._IExpr _out438;
                DCOMP._IOwnership _out439;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out440;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out438, out _out439, out _out440);
                _3992_recursiveGen = _out438;
                _3993_recOwned = _out439;
                _3994_recIdents = _out440;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3992_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3990_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3991_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out441;
                DCOMP._IOwnership _out442;
                DCOMP.COMP.FromOwnership(r, _3993_recOwned, expectedOwnership, out _out441, out _out442);
                r = _out441;
                resultingOwnership = _out442;
                readIdents = _3994_recIdents;
              }
            } else if (_source221.is_Array) {
              DAST._IType _3995___mcc_h106 = _source221.dtor_element;
              BigInteger _3996___mcc_h107 = _source221.dtor_dims;
              {
                RAST._IType _3997_fromTpeGen;
                RAST._IType _out443;
                _out443 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _3997_fromTpeGen = _out443;
                RAST._IType _3998_toTpeGen;
                RAST._IType _out444;
                _out444 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _3998_toTpeGen = _out444;
                RAST._IExpr _3999_recursiveGen;
                DCOMP._IOwnership _4000_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4001_recIdents;
                RAST._IExpr _out445;
                DCOMP._IOwnership _out446;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out447;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out445, out _out446, out _out447);
                _3999_recursiveGen = _out445;
                _4000_recOwned = _out446;
                _4001_recIdents = _out447;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3999_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3997_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3998_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out448;
                DCOMP._IOwnership _out449;
                DCOMP.COMP.FromOwnership(r, _4000_recOwned, expectedOwnership, out _out448, out _out449);
                r = _out448;
                resultingOwnership = _out449;
                readIdents = _4001_recIdents;
              }
            } else if (_source221.is_Seq) {
              DAST._IType _4002___mcc_h110 = _source221.dtor_element;
              {
                RAST._IType _4003_fromTpeGen;
                RAST._IType _out450;
                _out450 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4003_fromTpeGen = _out450;
                RAST._IType _4004_toTpeGen;
                RAST._IType _out451;
                _out451 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4004_toTpeGen = _out451;
                RAST._IExpr _4005_recursiveGen;
                DCOMP._IOwnership _4006_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4007_recIdents;
                RAST._IExpr _out452;
                DCOMP._IOwnership _out453;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out454;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out452, out _out453, out _out454);
                _4005_recursiveGen = _out452;
                _4006_recOwned = _out453;
                _4007_recIdents = _out454;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4005_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4003_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4004_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out455;
                DCOMP._IOwnership _out456;
                DCOMP.COMP.FromOwnership(r, _4006_recOwned, expectedOwnership, out _out455, out _out456);
                r = _out455;
                resultingOwnership = _out456;
                readIdents = _4007_recIdents;
              }
            } else if (_source221.is_Set) {
              DAST._IType _4008___mcc_h112 = _source221.dtor_element;
              {
                RAST._IType _4009_fromTpeGen;
                RAST._IType _out457;
                _out457 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4009_fromTpeGen = _out457;
                RAST._IType _4010_toTpeGen;
                RAST._IType _out458;
                _out458 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4010_toTpeGen = _out458;
                RAST._IExpr _4011_recursiveGen;
                DCOMP._IOwnership _4012_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4013_recIdents;
                RAST._IExpr _out459;
                DCOMP._IOwnership _out460;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out461;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out459, out _out460, out _out461);
                _4011_recursiveGen = _out459;
                _4012_recOwned = _out460;
                _4013_recIdents = _out461;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4011_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4009_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4010_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out462;
                DCOMP._IOwnership _out463;
                DCOMP.COMP.FromOwnership(r, _4012_recOwned, expectedOwnership, out _out462, out _out463);
                r = _out462;
                resultingOwnership = _out463;
                readIdents = _4013_recIdents;
              }
            } else if (_source221.is_Multiset) {
              DAST._IType _4014___mcc_h114 = _source221.dtor_element;
              {
                RAST._IType _4015_fromTpeGen;
                RAST._IType _out464;
                _out464 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4015_fromTpeGen = _out464;
                RAST._IType _4016_toTpeGen;
                RAST._IType _out465;
                _out465 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4016_toTpeGen = _out465;
                RAST._IExpr _4017_recursiveGen;
                DCOMP._IOwnership _4018_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4019_recIdents;
                RAST._IExpr _out466;
                DCOMP._IOwnership _out467;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out468;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out466, out _out467, out _out468);
                _4017_recursiveGen = _out466;
                _4018_recOwned = _out467;
                _4019_recIdents = _out468;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4017_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4015_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4016_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out469;
                DCOMP._IOwnership _out470;
                DCOMP.COMP.FromOwnership(r, _4018_recOwned, expectedOwnership, out _out469, out _out470);
                r = _out469;
                resultingOwnership = _out470;
                readIdents = _4019_recIdents;
              }
            } else if (_source221.is_Map) {
              DAST._IType _4020___mcc_h116 = _source221.dtor_key;
              DAST._IType _4021___mcc_h117 = _source221.dtor_value;
              {
                RAST._IType _4022_fromTpeGen;
                RAST._IType _out471;
                _out471 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4022_fromTpeGen = _out471;
                RAST._IType _4023_toTpeGen;
                RAST._IType _out472;
                _out472 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4023_toTpeGen = _out472;
                RAST._IExpr _4024_recursiveGen;
                DCOMP._IOwnership _4025_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4026_recIdents;
                RAST._IExpr _out473;
                DCOMP._IOwnership _out474;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out475;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out473, out _out474, out _out475);
                _4024_recursiveGen = _out473;
                _4025_recOwned = _out474;
                _4026_recIdents = _out475;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4024_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4022_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4023_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out476;
                DCOMP._IOwnership _out477;
                DCOMP.COMP.FromOwnership(r, _4025_recOwned, expectedOwnership, out _out476, out _out477);
                r = _out476;
                resultingOwnership = _out477;
                readIdents = _4026_recIdents;
              }
            } else if (_source221.is_SetBuilder) {
              DAST._IType _4027___mcc_h120 = _source221.dtor_element;
              {
                RAST._IType _4028_fromTpeGen;
                RAST._IType _out478;
                _out478 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4028_fromTpeGen = _out478;
                RAST._IType _4029_toTpeGen;
                RAST._IType _out479;
                _out479 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4029_toTpeGen = _out479;
                RAST._IExpr _4030_recursiveGen;
                DCOMP._IOwnership _4031_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4032_recIdents;
                RAST._IExpr _out480;
                DCOMP._IOwnership _out481;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out482;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out480, out _out481, out _out482);
                _4030_recursiveGen = _out480;
                _4031_recOwned = _out481;
                _4032_recIdents = _out482;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4030_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4028_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4029_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out483;
                DCOMP._IOwnership _out484;
                DCOMP.COMP.FromOwnership(r, _4031_recOwned, expectedOwnership, out _out483, out _out484);
                r = _out483;
                resultingOwnership = _out484;
                readIdents = _4032_recIdents;
              }
            } else if (_source221.is_MapBuilder) {
              DAST._IType _4033___mcc_h122 = _source221.dtor_key;
              DAST._IType _4034___mcc_h123 = _source221.dtor_value;
              {
                RAST._IType _4035_fromTpeGen;
                RAST._IType _out485;
                _out485 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4035_fromTpeGen = _out485;
                RAST._IType _4036_toTpeGen;
                RAST._IType _out486;
                _out486 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4036_toTpeGen = _out486;
                RAST._IExpr _4037_recursiveGen;
                DCOMP._IOwnership _4038_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4039_recIdents;
                RAST._IExpr _out487;
                DCOMP._IOwnership _out488;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out489;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out487, out _out488, out _out489);
                _4037_recursiveGen = _out487;
                _4038_recOwned = _out488;
                _4039_recIdents = _out489;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4037_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4035_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4036_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out490;
                DCOMP._IOwnership _out491;
                DCOMP.COMP.FromOwnership(r, _4038_recOwned, expectedOwnership, out _out490, out _out491);
                r = _out490;
                resultingOwnership = _out491;
                readIdents = _4039_recIdents;
              }
            } else if (_source221.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4040___mcc_h126 = _source221.dtor_args;
              DAST._IType _4041___mcc_h127 = _source221.dtor_result;
              {
                RAST._IType _4042_fromTpeGen;
                RAST._IType _out492;
                _out492 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4042_fromTpeGen = _out492;
                RAST._IType _4043_toTpeGen;
                RAST._IType _out493;
                _out493 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4043_toTpeGen = _out493;
                RAST._IExpr _4044_recursiveGen;
                DCOMP._IOwnership _4045_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4046_recIdents;
                RAST._IExpr _out494;
                DCOMP._IOwnership _out495;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out496;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out494, out _out495, out _out496);
                _4044_recursiveGen = _out494;
                _4045_recOwned = _out495;
                _4046_recIdents = _out496;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4044_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4042_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4043_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out497;
                DCOMP._IOwnership _out498;
                DCOMP.COMP.FromOwnership(r, _4045_recOwned, expectedOwnership, out _out497, out _out498);
                r = _out497;
                resultingOwnership = _out498;
                readIdents = _4046_recIdents;
              }
            } else if (_source221.is_Primitive) {
              DAST._IPrimitive _4047___mcc_h130 = _source221.dtor_Primitive_a0;
              {
                RAST._IType _4048_fromTpeGen;
                RAST._IType _out499;
                _out499 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4048_fromTpeGen = _out499;
                RAST._IType _4049_toTpeGen;
                RAST._IType _out500;
                _out500 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4049_toTpeGen = _out500;
                RAST._IExpr _4050_recursiveGen;
                DCOMP._IOwnership _4051_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4052_recIdents;
                RAST._IExpr _out501;
                DCOMP._IOwnership _out502;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out503;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out501, out _out502, out _out503);
                _4050_recursiveGen = _out501;
                _4051_recOwned = _out502;
                _4052_recIdents = _out503;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4050_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4048_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4049_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out504;
                DCOMP._IOwnership _out505;
                DCOMP.COMP.FromOwnership(r, _4051_recOwned, expectedOwnership, out _out504, out _out505);
                r = _out504;
                resultingOwnership = _out505;
                readIdents = _4052_recIdents;
              }
            } else if (_source221.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4053___mcc_h132 = _source221.dtor_Passthrough_a0;
              {
                RAST._IType _4054_fromTpeGen;
                RAST._IType _out506;
                _out506 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4054_fromTpeGen = _out506;
                RAST._IType _4055_toTpeGen;
                RAST._IType _out507;
                _out507 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4055_toTpeGen = _out507;
                RAST._IExpr _4056_recursiveGen;
                DCOMP._IOwnership _4057_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4058_recIdents;
                RAST._IExpr _out508;
                DCOMP._IOwnership _out509;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out510;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out508, out _out509, out _out510);
                _4056_recursiveGen = _out508;
                _4057_recOwned = _out509;
                _4058_recIdents = _out510;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4056_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4054_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4055_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out511;
                DCOMP._IOwnership _out512;
                DCOMP.COMP.FromOwnership(r, _4057_recOwned, expectedOwnership, out _out511, out _out512);
                r = _out511;
                resultingOwnership = _out512;
                readIdents = _4058_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4059___mcc_h134 = _source221.dtor_TypeArg_a0;
              {
                RAST._IType _4060_fromTpeGen;
                RAST._IType _out513;
                _out513 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4060_fromTpeGen = _out513;
                RAST._IType _4061_toTpeGen;
                RAST._IType _out514;
                _out514 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4061_toTpeGen = _out514;
                RAST._IExpr _4062_recursiveGen;
                DCOMP._IOwnership _4063_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4064_recIdents;
                RAST._IExpr _out515;
                DCOMP._IOwnership _out516;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out517;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out515, out _out516, out _out517);
                _4062_recursiveGen = _out515;
                _4063_recOwned = _out516;
                _4064_recIdents = _out517;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4062_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4060_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4061_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out518;
                DCOMP._IOwnership _out519;
                DCOMP.COMP.FromOwnership(r, _4063_recOwned, expectedOwnership, out _out518, out _out519);
                r = _out518;
                resultingOwnership = _out519;
                readIdents = _4064_recIdents;
              }
            }
          } else if (_source215.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4065___mcc_h136 = _source215.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _4066___mcc_h137 = _source215.dtor_attributes;
            DAST._IType _source226 = _3747___mcc_h1;
            if (_source226.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4067___mcc_h144 = _source226.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _4068___mcc_h145 = _source226.dtor_typeArgs;
              DAST._IResolvedType _4069___mcc_h146 = _source226.dtor_resolved;
              DAST._IResolvedType _source227 = _4069___mcc_h146;
              if (_source227.is_AllocatedDatatype) {
                DAST._IDatatypeType _4070___mcc_h150 = _source227.dtor_datatypeType;
                {
                  RAST._IType _4071_fromTpeGen;
                  RAST._IType _out520;
                  _out520 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _4071_fromTpeGen = _out520;
                  RAST._IType _4072_toTpeGen;
                  RAST._IType _out521;
                  _out521 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _4072_toTpeGen = _out521;
                  RAST._IExpr _4073_recursiveGen;
                  DCOMP._IOwnership _4074_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4075_recIdents;
                  RAST._IExpr _out522;
                  DCOMP._IOwnership _out523;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out524;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out522, out _out523, out _out524);
                  _4073_recursiveGen = _out522;
                  _4074_recOwned = _out523;
                  _4075_recIdents = _out524;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4073_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4071_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4072_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out525;
                  DCOMP._IOwnership _out526;
                  DCOMP.COMP.FromOwnership(r, _4074_recOwned, expectedOwnership, out _out525, out _out526);
                  r = _out525;
                  resultingOwnership = _out526;
                  readIdents = _4075_recIdents;
                }
              } else if (_source227.is_Datatype) {
                DAST._IDatatypeType _4076___mcc_h152 = _source227.dtor_datatypeType;
                {
                  RAST._IType _4077_fromTpeGen;
                  RAST._IType _out527;
                  _out527 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _4077_fromTpeGen = _out527;
                  RAST._IType _4078_toTpeGen;
                  RAST._IType _out528;
                  _out528 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _4078_toTpeGen = _out528;
                  RAST._IExpr _4079_recursiveGen;
                  DCOMP._IOwnership _4080_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4081_recIdents;
                  RAST._IExpr _out529;
                  DCOMP._IOwnership _out530;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out531;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out529, out _out530, out _out531);
                  _4079_recursiveGen = _out529;
                  _4080_recOwned = _out530;
                  _4081_recIdents = _out531;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4079_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4077_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4078_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out532;
                  DCOMP._IOwnership _out533;
                  DCOMP.COMP.FromOwnership(r, _4080_recOwned, expectedOwnership, out _out532, out _out533);
                  r = _out532;
                  resultingOwnership = _out533;
                  readIdents = _4081_recIdents;
                }
              } else if (_source227.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4082___mcc_h154 = _source227.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4083___mcc_h155 = _source227.dtor_attributes;
                {
                  RAST._IType _4084_fromTpeGen;
                  RAST._IType _out534;
                  _out534 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _4084_fromTpeGen = _out534;
                  RAST._IType _4085_toTpeGen;
                  RAST._IType _out535;
                  _out535 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _4085_toTpeGen = _out535;
                  RAST._IExpr _4086_recursiveGen;
                  DCOMP._IOwnership _4087_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4088_recIdents;
                  RAST._IExpr _out536;
                  DCOMP._IOwnership _out537;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out538;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out536, out _out537, out _out538);
                  _4086_recursiveGen = _out536;
                  _4087_recOwned = _out537;
                  _4088_recIdents = _out538;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4086_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4084_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4085_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out539;
                  DCOMP._IOwnership _out540;
                  DCOMP.COMP.FromOwnership(r, _4087_recOwned, expectedOwnership, out _out539, out _out540);
                  r = _out539;
                  resultingOwnership = _out540;
                  readIdents = _4088_recIdents;
                }
              } else {
                DAST._IType _4089___mcc_h158 = _source227.dtor_baseType;
                DAST._INewtypeRange _4090___mcc_h159 = _source227.dtor_range;
                bool _4091___mcc_h160 = _source227.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4092___mcc_h161 = _source227.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4093_attributes = _4092___mcc_h161;
                bool _4094_erase = _4091___mcc_h160;
                DAST._INewtypeRange _4095_range = _4090___mcc_h159;
                DAST._IType _4096_b = _4089___mcc_h158;
                {
                  Std.Wrappers._IOption<RAST._IType> _4097_nativeToType;
                  _4097_nativeToType = DCOMP.COMP.NewtypeToRustType(_4096_b, _4095_range);
                  if (object.Equals(_3741_fromTpe, _4096_b)) {
                    RAST._IExpr _4098_recursiveGen;
                    DCOMP._IOwnership _4099_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4100_recIdents;
                    RAST._IExpr _out541;
                    DCOMP._IOwnership _out542;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out543;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out541, out _out542, out _out543);
                    _4098_recursiveGen = _out541;
                    _4099_recOwned = _out542;
                    _4100_recIdents = _out543;
                    readIdents = _4100_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source228 = _4097_nativeToType;
                    if (_source228.is_None) {
                      if (_4094_erase) {
                        r = _4098_recursiveGen;
                      } else {
                        RAST._IType _4101_rhsType;
                        RAST._IType _out544;
                        _out544 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _4101_rhsType = _out544;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4101_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4098_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out545;
                      DCOMP._IOwnership _out546;
                      DCOMP.COMP.FromOwnership(r, _4099_recOwned, expectedOwnership, out _out545, out _out546);
                      r = _out545;
                      resultingOwnership = _out546;
                    } else {
                      RAST._IType _4102___mcc_h1462 = _source228.dtor_value;
                      RAST._IType _4103_v = _4102___mcc_h1462;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4098_recursiveGen, RAST.Expr.create_ExprFromType(_4103_v)));
                      RAST._IExpr _out547;
                      DCOMP._IOwnership _out548;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out547, out _out548);
                      r = _out547;
                      resultingOwnership = _out548;
                    }
                  } else {
                    if ((_4097_nativeToType).is_Some) {
                      DAST._IType _source229 = _3741_fromTpe;
                      if (_source229.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4104___mcc_h1463 = _source229.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _4105___mcc_h1464 = _source229.dtor_typeArgs;
                        DAST._IResolvedType _4106___mcc_h1465 = _source229.dtor_resolved;
                        DAST._IResolvedType _source230 = _4106___mcc_h1465;
                        if (_source230.is_AllocatedDatatype) {
                          DAST._IDatatypeType _4107___mcc_h1469 = _source230.dtor_datatypeType;
                        } else if (_source230.is_Datatype) {
                          DAST._IDatatypeType _4108___mcc_h1471 = _source230.dtor_datatypeType;
                        } else if (_source230.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4109___mcc_h1473 = _source230.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _4110___mcc_h1474 = _source230.dtor_attributes;
                        } else {
                          DAST._IType _4111___mcc_h1477 = _source230.dtor_baseType;
                          DAST._INewtypeRange _4112___mcc_h1478 = _source230.dtor_range;
                          bool _4113___mcc_h1479 = _source230.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _4114___mcc_h1480 = _source230.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _4115_attributes0 = _4114___mcc_h1480;
                          bool _4116_erase0 = _4113___mcc_h1479;
                          DAST._INewtypeRange _4117_range0 = _4112___mcc_h1478;
                          DAST._IType _4118_b0 = _4111___mcc_h1477;
                          {
                            Std.Wrappers._IOption<RAST._IType> _4119_nativeFromType;
                            _4119_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4118_b0, _4117_range0);
                            if ((_4119_nativeFromType).is_Some) {
                              RAST._IExpr _4120_recursiveGen;
                              DCOMP._IOwnership _4121_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4122_recIdents;
                              RAST._IExpr _out549;
                              DCOMP._IOwnership _out550;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out551;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out549, out _out550, out _out551);
                              _4120_recursiveGen = _out549;
                              _4121_recOwned = _out550;
                              _4122_recIdents = _out551;
                              RAST._IExpr _out552;
                              DCOMP._IOwnership _out553;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4120_recursiveGen, (_4097_nativeToType).dtor_value), _4121_recOwned, expectedOwnership, out _out552, out _out553);
                              r = _out552;
                              resultingOwnership = _out553;
                              readIdents = _4122_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source229.is_Nullable) {
                        DAST._IType _4123___mcc_h1485 = _source229.dtor_Nullable_a0;
                      } else if (_source229.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _4124___mcc_h1487 = _source229.dtor_Tuple_a0;
                      } else if (_source229.is_Array) {
                        DAST._IType _4125___mcc_h1489 = _source229.dtor_element;
                        BigInteger _4126___mcc_h1490 = _source229.dtor_dims;
                      } else if (_source229.is_Seq) {
                        DAST._IType _4127___mcc_h1493 = _source229.dtor_element;
                      } else if (_source229.is_Set) {
                        DAST._IType _4128___mcc_h1495 = _source229.dtor_element;
                      } else if (_source229.is_Multiset) {
                        DAST._IType _4129___mcc_h1497 = _source229.dtor_element;
                      } else if (_source229.is_Map) {
                        DAST._IType _4130___mcc_h1499 = _source229.dtor_key;
                        DAST._IType _4131___mcc_h1500 = _source229.dtor_value;
                      } else if (_source229.is_SetBuilder) {
                        DAST._IType _4132___mcc_h1503 = _source229.dtor_element;
                      } else if (_source229.is_MapBuilder) {
                        DAST._IType _4133___mcc_h1505 = _source229.dtor_key;
                        DAST._IType _4134___mcc_h1506 = _source229.dtor_value;
                      } else if (_source229.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _4135___mcc_h1509 = _source229.dtor_args;
                        DAST._IType _4136___mcc_h1510 = _source229.dtor_result;
                      } else if (_source229.is_Primitive) {
                        DAST._IPrimitive _4137___mcc_h1513 = _source229.dtor_Primitive_a0;
                      } else if (_source229.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _4138___mcc_h1515 = _source229.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _4139___mcc_h1517 = _source229.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4140_recursiveGen;
                        DCOMP._IOwnership _4141_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4142_recIdents;
                        RAST._IExpr _out554;
                        DCOMP._IOwnership _out555;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out556;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out554, out _out555, out _out556);
                        _4140_recursiveGen = _out554;
                        _4141_recOwned = _out555;
                        _4142_recIdents = _out556;
                        RAST._IExpr _out557;
                        DCOMP._IOwnership _out558;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4140_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4097_nativeToType).dtor_value), _4141_recOwned, expectedOwnership, out _out557, out _out558);
                        r = _out557;
                        resultingOwnership = _out558;
                        readIdents = _4142_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out559;
                    DCOMP._IOwnership _out560;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out561;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4096_b), _4096_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out559, out _out560, out _out561);
                    r = _out559;
                    resultingOwnership = _out560;
                    readIdents = _out561;
                  }
                }
              }
            } else if (_source226.is_Nullable) {
              DAST._IType _4143___mcc_h166 = _source226.dtor_Nullable_a0;
              {
                RAST._IExpr _4144_recursiveGen;
                DCOMP._IOwnership _4145_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4146_recIdents;
                RAST._IExpr _out562;
                DCOMP._IOwnership _out563;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out564;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out562, out _out563, out _out564);
                _4144_recursiveGen = _out562;
                _4145_recOwned = _out563;
                _4146_recIdents = _out564;
                r = _4144_recursiveGen;
                if (object.Equals(_4145_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out565;
                DCOMP._IOwnership _out566;
                DCOMP.COMP.FromOwnership(r, _4145_recOwned, expectedOwnership, out _out565, out _out566);
                r = _out565;
                resultingOwnership = _out566;
                readIdents = _4146_recIdents;
              }
            } else if (_source226.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4147___mcc_h168 = _source226.dtor_Tuple_a0;
              {
                RAST._IType _4148_fromTpeGen;
                RAST._IType _out567;
                _out567 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4148_fromTpeGen = _out567;
                RAST._IType _4149_toTpeGen;
                RAST._IType _out568;
                _out568 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4149_toTpeGen = _out568;
                RAST._IExpr _4150_recursiveGen;
                DCOMP._IOwnership _4151_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4152_recIdents;
                RAST._IExpr _out569;
                DCOMP._IOwnership _out570;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out571;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out569, out _out570, out _out571);
                _4150_recursiveGen = _out569;
                _4151_recOwned = _out570;
                _4152_recIdents = _out571;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4150_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4148_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4149_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out572;
                DCOMP._IOwnership _out573;
                DCOMP.COMP.FromOwnership(r, _4151_recOwned, expectedOwnership, out _out572, out _out573);
                r = _out572;
                resultingOwnership = _out573;
                readIdents = _4152_recIdents;
              }
            } else if (_source226.is_Array) {
              DAST._IType _4153___mcc_h170 = _source226.dtor_element;
              BigInteger _4154___mcc_h171 = _source226.dtor_dims;
              {
                RAST._IType _4155_fromTpeGen;
                RAST._IType _out574;
                _out574 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4155_fromTpeGen = _out574;
                RAST._IType _4156_toTpeGen;
                RAST._IType _out575;
                _out575 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4156_toTpeGen = _out575;
                RAST._IExpr _4157_recursiveGen;
                DCOMP._IOwnership _4158_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4159_recIdents;
                RAST._IExpr _out576;
                DCOMP._IOwnership _out577;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out578;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out576, out _out577, out _out578);
                _4157_recursiveGen = _out576;
                _4158_recOwned = _out577;
                _4159_recIdents = _out578;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4157_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4155_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4156_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out579;
                DCOMP._IOwnership _out580;
                DCOMP.COMP.FromOwnership(r, _4158_recOwned, expectedOwnership, out _out579, out _out580);
                r = _out579;
                resultingOwnership = _out580;
                readIdents = _4159_recIdents;
              }
            } else if (_source226.is_Seq) {
              DAST._IType _4160___mcc_h174 = _source226.dtor_element;
              {
                RAST._IType _4161_fromTpeGen;
                RAST._IType _out581;
                _out581 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4161_fromTpeGen = _out581;
                RAST._IType _4162_toTpeGen;
                RAST._IType _out582;
                _out582 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4162_toTpeGen = _out582;
                RAST._IExpr _4163_recursiveGen;
                DCOMP._IOwnership _4164_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4165_recIdents;
                RAST._IExpr _out583;
                DCOMP._IOwnership _out584;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out585;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out583, out _out584, out _out585);
                _4163_recursiveGen = _out583;
                _4164_recOwned = _out584;
                _4165_recIdents = _out585;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4163_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4161_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4162_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out586;
                DCOMP._IOwnership _out587;
                DCOMP.COMP.FromOwnership(r, _4164_recOwned, expectedOwnership, out _out586, out _out587);
                r = _out586;
                resultingOwnership = _out587;
                readIdents = _4165_recIdents;
              }
            } else if (_source226.is_Set) {
              DAST._IType _4166___mcc_h176 = _source226.dtor_element;
              {
                RAST._IType _4167_fromTpeGen;
                RAST._IType _out588;
                _out588 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4167_fromTpeGen = _out588;
                RAST._IType _4168_toTpeGen;
                RAST._IType _out589;
                _out589 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4168_toTpeGen = _out589;
                RAST._IExpr _4169_recursiveGen;
                DCOMP._IOwnership _4170_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4171_recIdents;
                RAST._IExpr _out590;
                DCOMP._IOwnership _out591;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out592;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out590, out _out591, out _out592);
                _4169_recursiveGen = _out590;
                _4170_recOwned = _out591;
                _4171_recIdents = _out592;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4169_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4167_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4168_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out593;
                DCOMP._IOwnership _out594;
                DCOMP.COMP.FromOwnership(r, _4170_recOwned, expectedOwnership, out _out593, out _out594);
                r = _out593;
                resultingOwnership = _out594;
                readIdents = _4171_recIdents;
              }
            } else if (_source226.is_Multiset) {
              DAST._IType _4172___mcc_h178 = _source226.dtor_element;
              {
                RAST._IType _4173_fromTpeGen;
                RAST._IType _out595;
                _out595 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4173_fromTpeGen = _out595;
                RAST._IType _4174_toTpeGen;
                RAST._IType _out596;
                _out596 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4174_toTpeGen = _out596;
                RAST._IExpr _4175_recursiveGen;
                DCOMP._IOwnership _4176_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4177_recIdents;
                RAST._IExpr _out597;
                DCOMP._IOwnership _out598;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out599;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out597, out _out598, out _out599);
                _4175_recursiveGen = _out597;
                _4176_recOwned = _out598;
                _4177_recIdents = _out599;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4175_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4173_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4174_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out600;
                DCOMP._IOwnership _out601;
                DCOMP.COMP.FromOwnership(r, _4176_recOwned, expectedOwnership, out _out600, out _out601);
                r = _out600;
                resultingOwnership = _out601;
                readIdents = _4177_recIdents;
              }
            } else if (_source226.is_Map) {
              DAST._IType _4178___mcc_h180 = _source226.dtor_key;
              DAST._IType _4179___mcc_h181 = _source226.dtor_value;
              {
                RAST._IType _4180_fromTpeGen;
                RAST._IType _out602;
                _out602 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4180_fromTpeGen = _out602;
                RAST._IType _4181_toTpeGen;
                RAST._IType _out603;
                _out603 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4181_toTpeGen = _out603;
                RAST._IExpr _4182_recursiveGen;
                DCOMP._IOwnership _4183_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4184_recIdents;
                RAST._IExpr _out604;
                DCOMP._IOwnership _out605;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out606;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out604, out _out605, out _out606);
                _4182_recursiveGen = _out604;
                _4183_recOwned = _out605;
                _4184_recIdents = _out606;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4182_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4180_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4181_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out607;
                DCOMP._IOwnership _out608;
                DCOMP.COMP.FromOwnership(r, _4183_recOwned, expectedOwnership, out _out607, out _out608);
                r = _out607;
                resultingOwnership = _out608;
                readIdents = _4184_recIdents;
              }
            } else if (_source226.is_SetBuilder) {
              DAST._IType _4185___mcc_h184 = _source226.dtor_element;
              {
                RAST._IType _4186_fromTpeGen;
                RAST._IType _out609;
                _out609 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4186_fromTpeGen = _out609;
                RAST._IType _4187_toTpeGen;
                RAST._IType _out610;
                _out610 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4187_toTpeGen = _out610;
                RAST._IExpr _4188_recursiveGen;
                DCOMP._IOwnership _4189_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4190_recIdents;
                RAST._IExpr _out611;
                DCOMP._IOwnership _out612;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out613;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out611, out _out612, out _out613);
                _4188_recursiveGen = _out611;
                _4189_recOwned = _out612;
                _4190_recIdents = _out613;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4188_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4186_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4187_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out614;
                DCOMP._IOwnership _out615;
                DCOMP.COMP.FromOwnership(r, _4189_recOwned, expectedOwnership, out _out614, out _out615);
                r = _out614;
                resultingOwnership = _out615;
                readIdents = _4190_recIdents;
              }
            } else if (_source226.is_MapBuilder) {
              DAST._IType _4191___mcc_h186 = _source226.dtor_key;
              DAST._IType _4192___mcc_h187 = _source226.dtor_value;
              {
                RAST._IType _4193_fromTpeGen;
                RAST._IType _out616;
                _out616 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4193_fromTpeGen = _out616;
                RAST._IType _4194_toTpeGen;
                RAST._IType _out617;
                _out617 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4194_toTpeGen = _out617;
                RAST._IExpr _4195_recursiveGen;
                DCOMP._IOwnership _4196_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4197_recIdents;
                RAST._IExpr _out618;
                DCOMP._IOwnership _out619;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out620;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out618, out _out619, out _out620);
                _4195_recursiveGen = _out618;
                _4196_recOwned = _out619;
                _4197_recIdents = _out620;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4195_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4193_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4194_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out621;
                DCOMP._IOwnership _out622;
                DCOMP.COMP.FromOwnership(r, _4196_recOwned, expectedOwnership, out _out621, out _out622);
                r = _out621;
                resultingOwnership = _out622;
                readIdents = _4197_recIdents;
              }
            } else if (_source226.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4198___mcc_h190 = _source226.dtor_args;
              DAST._IType _4199___mcc_h191 = _source226.dtor_result;
              {
                RAST._IType _4200_fromTpeGen;
                RAST._IType _out623;
                _out623 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4200_fromTpeGen = _out623;
                RAST._IType _4201_toTpeGen;
                RAST._IType _out624;
                _out624 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4201_toTpeGen = _out624;
                RAST._IExpr _4202_recursiveGen;
                DCOMP._IOwnership _4203_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4204_recIdents;
                RAST._IExpr _out625;
                DCOMP._IOwnership _out626;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out627;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out625, out _out626, out _out627);
                _4202_recursiveGen = _out625;
                _4203_recOwned = _out626;
                _4204_recIdents = _out627;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4202_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4200_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4201_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out628;
                DCOMP._IOwnership _out629;
                DCOMP.COMP.FromOwnership(r, _4203_recOwned, expectedOwnership, out _out628, out _out629);
                r = _out628;
                resultingOwnership = _out629;
                readIdents = _4204_recIdents;
              }
            } else if (_source226.is_Primitive) {
              DAST._IPrimitive _4205___mcc_h194 = _source226.dtor_Primitive_a0;
              {
                RAST._IType _4206_fromTpeGen;
                RAST._IType _out630;
                _out630 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4206_fromTpeGen = _out630;
                RAST._IType _4207_toTpeGen;
                RAST._IType _out631;
                _out631 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4207_toTpeGen = _out631;
                RAST._IExpr _4208_recursiveGen;
                DCOMP._IOwnership _4209_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4210_recIdents;
                RAST._IExpr _out632;
                DCOMP._IOwnership _out633;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out634;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out632, out _out633, out _out634);
                _4208_recursiveGen = _out632;
                _4209_recOwned = _out633;
                _4210_recIdents = _out634;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4208_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4206_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4207_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out635;
                DCOMP._IOwnership _out636;
                DCOMP.COMP.FromOwnership(r, _4209_recOwned, expectedOwnership, out _out635, out _out636);
                r = _out635;
                resultingOwnership = _out636;
                readIdents = _4210_recIdents;
              }
            } else if (_source226.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4211___mcc_h196 = _source226.dtor_Passthrough_a0;
              {
                RAST._IType _4212_fromTpeGen;
                RAST._IType _out637;
                _out637 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4212_fromTpeGen = _out637;
                RAST._IType _4213_toTpeGen;
                RAST._IType _out638;
                _out638 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4213_toTpeGen = _out638;
                RAST._IExpr _4214_recursiveGen;
                DCOMP._IOwnership _4215_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4216_recIdents;
                RAST._IExpr _out639;
                DCOMP._IOwnership _out640;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out641;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out639, out _out640, out _out641);
                _4214_recursiveGen = _out639;
                _4215_recOwned = _out640;
                _4216_recIdents = _out641;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4214_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4212_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4213_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out642;
                DCOMP._IOwnership _out643;
                DCOMP.COMP.FromOwnership(r, _4215_recOwned, expectedOwnership, out _out642, out _out643);
                r = _out642;
                resultingOwnership = _out643;
                readIdents = _4216_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4217___mcc_h198 = _source226.dtor_TypeArg_a0;
              {
                RAST._IType _4218_fromTpeGen;
                RAST._IType _out644;
                _out644 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4218_fromTpeGen = _out644;
                RAST._IType _4219_toTpeGen;
                RAST._IType _out645;
                _out645 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4219_toTpeGen = _out645;
                RAST._IExpr _4220_recursiveGen;
                DCOMP._IOwnership _4221_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4222_recIdents;
                RAST._IExpr _out646;
                DCOMP._IOwnership _out647;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out648;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out646, out _out647, out _out648);
                _4220_recursiveGen = _out646;
                _4221_recOwned = _out647;
                _4222_recIdents = _out648;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4220_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4218_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4219_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out649;
                DCOMP._IOwnership _out650;
                DCOMP.COMP.FromOwnership(r, _4221_recOwned, expectedOwnership, out _out649, out _out650);
                r = _out649;
                resultingOwnership = _out650;
                readIdents = _4222_recIdents;
              }
            }
          } else {
            DAST._IType _4223___mcc_h200 = _source215.dtor_baseType;
            DAST._INewtypeRange _4224___mcc_h201 = _source215.dtor_range;
            bool _4225___mcc_h202 = _source215.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _4226___mcc_h203 = _source215.dtor_attributes;
            DAST._IType _source231 = _3747___mcc_h1;
            if (_source231.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4227___mcc_h216 = _source231.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _4228___mcc_h217 = _source231.dtor_typeArgs;
              DAST._IResolvedType _4229___mcc_h218 = _source231.dtor_resolved;
              DAST._IResolvedType _source232 = _4229___mcc_h218;
              if (_source232.is_AllocatedDatatype) {
                DAST._IDatatypeType _4230___mcc_h225 = _source232.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _4231_attributes = _4226___mcc_h203;
                bool _4232_erase = _4225___mcc_h202;
                DAST._INewtypeRange _4233_range = _4224___mcc_h201;
                DAST._IType _4234_b = _4223___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _4235_nativeFromType;
                  _4235_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4234_b, _4233_range);
                  if (object.Equals(_4234_b, _3742_toTpe)) {
                    RAST._IExpr _4236_recursiveGen;
                    DCOMP._IOwnership _4237_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4238_recIdents;
                    RAST._IExpr _out651;
                    DCOMP._IOwnership _out652;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out653;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out651, out _out652, out _out653);
                    _4236_recursiveGen = _out651;
                    _4237_recOwned = _out652;
                    _4238_recIdents = _out653;
                    readIdents = _4238_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source233 = _4235_nativeFromType;
                    if (_source233.is_None) {
                      if (_4232_erase) {
                        r = _4236_recursiveGen;
                      } else {
                        r = (_4236_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out654;
                      DCOMP._IOwnership _out655;
                      DCOMP.COMP.FromOwnership(r, _4237_recOwned, expectedOwnership, out _out654, out _out655);
                      r = _out654;
                      resultingOwnership = _out655;
                    } else {
                      RAST._IType _4239___mcc_h1519 = _source233.dtor_value;
                      RAST._IType _4240_v = _4239___mcc_h1519;
                      RAST._IType _4241_toTpeRust;
                      RAST._IType _out656;
                      _out656 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                      _4241_toTpeRust = _out656;
                      r = (((_4236_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4241_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out657;
                      DCOMP._IOwnership _out658;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out657, out _out658);
                      r = _out657;
                      resultingOwnership = _out658;
                    }
                  } else {
                    if ((_4235_nativeFromType).is_Some) {
                      if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4242_recursiveGen;
                        DCOMP._IOwnership _4243_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4244_recIdents;
                        RAST._IExpr _out659;
                        DCOMP._IOwnership _out660;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out661;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out659, out _out660, out _out661);
                        _4242_recursiveGen = _out659;
                        _4243_recOwned = _out660;
                        _4244_recIdents = _out661;
                        RAST._IExpr _out662;
                        DCOMP._IOwnership _out663;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4242_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4243_recOwned, expectedOwnership, out _out662, out _out663);
                        r = _out662;
                        resultingOwnership = _out663;
                        readIdents = _4244_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out664;
                    DCOMP._IOwnership _out665;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out666;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4234_b), _4234_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out664, out _out665, out _out666);
                    r = _out664;
                    resultingOwnership = _out665;
                    readIdents = _out666;
                  }
                }
              } else if (_source232.is_Datatype) {
                DAST._IDatatypeType _4245___mcc_h228 = _source232.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _4246_attributes = _4226___mcc_h203;
                bool _4247_erase = _4225___mcc_h202;
                DAST._INewtypeRange _4248_range = _4224___mcc_h201;
                DAST._IType _4249_b = _4223___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _4250_nativeFromType;
                  _4250_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4249_b, _4248_range);
                  if (object.Equals(_4249_b, _3742_toTpe)) {
                    RAST._IExpr _4251_recursiveGen;
                    DCOMP._IOwnership _4252_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4253_recIdents;
                    RAST._IExpr _out667;
                    DCOMP._IOwnership _out668;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out669;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out667, out _out668, out _out669);
                    _4251_recursiveGen = _out667;
                    _4252_recOwned = _out668;
                    _4253_recIdents = _out669;
                    readIdents = _4253_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source234 = _4250_nativeFromType;
                    if (_source234.is_None) {
                      if (_4247_erase) {
                        r = _4251_recursiveGen;
                      } else {
                        r = (_4251_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out670;
                      DCOMP._IOwnership _out671;
                      DCOMP.COMP.FromOwnership(r, _4252_recOwned, expectedOwnership, out _out670, out _out671);
                      r = _out670;
                      resultingOwnership = _out671;
                    } else {
                      RAST._IType _4254___mcc_h1520 = _source234.dtor_value;
                      RAST._IType _4255_v = _4254___mcc_h1520;
                      RAST._IType _4256_toTpeRust;
                      RAST._IType _out672;
                      _out672 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                      _4256_toTpeRust = _out672;
                      r = (((_4251_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4256_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out673;
                      DCOMP._IOwnership _out674;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out673, out _out674);
                      r = _out673;
                      resultingOwnership = _out674;
                    }
                  } else {
                    if ((_4250_nativeFromType).is_Some) {
                      if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4257_recursiveGen;
                        DCOMP._IOwnership _4258_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4259_recIdents;
                        RAST._IExpr _out675;
                        DCOMP._IOwnership _out676;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out677;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out675, out _out676, out _out677);
                        _4257_recursiveGen = _out675;
                        _4258_recOwned = _out676;
                        _4259_recIdents = _out677;
                        RAST._IExpr _out678;
                        DCOMP._IOwnership _out679;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4257_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4258_recOwned, expectedOwnership, out _out678, out _out679);
                        r = _out678;
                        resultingOwnership = _out679;
                        readIdents = _4259_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out680;
                    DCOMP._IOwnership _out681;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out682;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4249_b), _4249_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out680, out _out681, out _out682);
                    r = _out680;
                    resultingOwnership = _out681;
                    readIdents = _out682;
                  }
                }
              } else if (_source232.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4260___mcc_h231 = _source232.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4261___mcc_h232 = _source232.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4262_attributes = _4226___mcc_h203;
                bool _4263_erase = _4225___mcc_h202;
                DAST._INewtypeRange _4264_range = _4224___mcc_h201;
                DAST._IType _4265_b = _4223___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _4266_nativeFromType;
                  _4266_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4265_b, _4264_range);
                  if (object.Equals(_4265_b, _3742_toTpe)) {
                    RAST._IExpr _4267_recursiveGen;
                    DCOMP._IOwnership _4268_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4269_recIdents;
                    RAST._IExpr _out683;
                    DCOMP._IOwnership _out684;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out685;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out683, out _out684, out _out685);
                    _4267_recursiveGen = _out683;
                    _4268_recOwned = _out684;
                    _4269_recIdents = _out685;
                    readIdents = _4269_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source235 = _4266_nativeFromType;
                    if (_source235.is_None) {
                      if (_4263_erase) {
                        r = _4267_recursiveGen;
                      } else {
                        r = (_4267_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out686;
                      DCOMP._IOwnership _out687;
                      DCOMP.COMP.FromOwnership(r, _4268_recOwned, expectedOwnership, out _out686, out _out687);
                      r = _out686;
                      resultingOwnership = _out687;
                    } else {
                      RAST._IType _4270___mcc_h1521 = _source235.dtor_value;
                      RAST._IType _4271_v = _4270___mcc_h1521;
                      RAST._IType _4272_toTpeRust;
                      RAST._IType _out688;
                      _out688 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                      _4272_toTpeRust = _out688;
                      r = (((_4267_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4272_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out689;
                      DCOMP._IOwnership _out690;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out689, out _out690);
                      r = _out689;
                      resultingOwnership = _out690;
                    }
                  } else {
                    if ((_4266_nativeFromType).is_Some) {
                      if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4273_recursiveGen;
                        DCOMP._IOwnership _4274_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4275_recIdents;
                        RAST._IExpr _out691;
                        DCOMP._IOwnership _out692;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out693;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out691, out _out692, out _out693);
                        _4273_recursiveGen = _out691;
                        _4274_recOwned = _out692;
                        _4275_recIdents = _out693;
                        RAST._IExpr _out694;
                        DCOMP._IOwnership _out695;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4273_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4274_recOwned, expectedOwnership, out _out694, out _out695);
                        r = _out694;
                        resultingOwnership = _out695;
                        readIdents = _4275_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out696;
                    DCOMP._IOwnership _out697;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out698;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4265_b), _4265_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out696, out _out697, out _out698);
                    r = _out696;
                    resultingOwnership = _out697;
                    readIdents = _out698;
                  }
                }
              } else {
                DAST._IType _4276___mcc_h237 = _source232.dtor_baseType;
                DAST._INewtypeRange _4277___mcc_h238 = _source232.dtor_range;
                bool _4278___mcc_h239 = _source232.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4279___mcc_h240 = _source232.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4280_attributes = _4279___mcc_h240;
                bool _4281_erase = _4278___mcc_h239;
                DAST._INewtypeRange _4282_range = _4277___mcc_h238;
                DAST._IType _4283_b = _4276___mcc_h237;
                {
                  Std.Wrappers._IOption<RAST._IType> _4284_nativeToType;
                  _4284_nativeToType = DCOMP.COMP.NewtypeToRustType(_4283_b, _4282_range);
                  if (object.Equals(_3741_fromTpe, _4283_b)) {
                    RAST._IExpr _4285_recursiveGen;
                    DCOMP._IOwnership _4286_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4287_recIdents;
                    RAST._IExpr _out699;
                    DCOMP._IOwnership _out700;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out701;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out699, out _out700, out _out701);
                    _4285_recursiveGen = _out699;
                    _4286_recOwned = _out700;
                    _4287_recIdents = _out701;
                    readIdents = _4287_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source236 = _4284_nativeToType;
                    if (_source236.is_None) {
                      if (_4281_erase) {
                        r = _4285_recursiveGen;
                      } else {
                        RAST._IType _4288_rhsType;
                        RAST._IType _out702;
                        _out702 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _4288_rhsType = _out702;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4288_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4285_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out703;
                      DCOMP._IOwnership _out704;
                      DCOMP.COMP.FromOwnership(r, _4286_recOwned, expectedOwnership, out _out703, out _out704);
                      r = _out703;
                      resultingOwnership = _out704;
                    } else {
                      RAST._IType _4289___mcc_h1522 = _source236.dtor_value;
                      RAST._IType _4290_v = _4289___mcc_h1522;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4285_recursiveGen, RAST.Expr.create_ExprFromType(_4290_v)));
                      RAST._IExpr _out705;
                      DCOMP._IOwnership _out706;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out705, out _out706);
                      r = _out705;
                      resultingOwnership = _out706;
                    }
                  } else {
                    if ((_4284_nativeToType).is_Some) {
                      DAST._IType _source237 = _3741_fromTpe;
                      if (_source237.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4291___mcc_h1523 = _source237.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _4292___mcc_h1524 = _source237.dtor_typeArgs;
                        DAST._IResolvedType _4293___mcc_h1525 = _source237.dtor_resolved;
                        DAST._IResolvedType _source238 = _4293___mcc_h1525;
                        if (_source238.is_AllocatedDatatype) {
                          DAST._IDatatypeType _4294___mcc_h1529 = _source238.dtor_datatypeType;
                        } else if (_source238.is_Datatype) {
                          DAST._IDatatypeType _4295___mcc_h1531 = _source238.dtor_datatypeType;
                        } else if (_source238.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4296___mcc_h1533 = _source238.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _4297___mcc_h1534 = _source238.dtor_attributes;
                        } else {
                          DAST._IType _4298___mcc_h1537 = _source238.dtor_baseType;
                          DAST._INewtypeRange _4299___mcc_h1538 = _source238.dtor_range;
                          bool _4300___mcc_h1539 = _source238.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _4301___mcc_h1540 = _source238.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _4302_attributes0 = _4301___mcc_h1540;
                          bool _4303_erase0 = _4300___mcc_h1539;
                          DAST._INewtypeRange _4304_range0 = _4299___mcc_h1538;
                          DAST._IType _4305_b0 = _4298___mcc_h1537;
                          {
                            Std.Wrappers._IOption<RAST._IType> _4306_nativeFromType;
                            _4306_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4305_b0, _4304_range0);
                            if ((_4306_nativeFromType).is_Some) {
                              RAST._IExpr _4307_recursiveGen;
                              DCOMP._IOwnership _4308_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4309_recIdents;
                              RAST._IExpr _out707;
                              DCOMP._IOwnership _out708;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out709;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out707, out _out708, out _out709);
                              _4307_recursiveGen = _out707;
                              _4308_recOwned = _out708;
                              _4309_recIdents = _out709;
                              RAST._IExpr _out710;
                              DCOMP._IOwnership _out711;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4307_recursiveGen, (_4284_nativeToType).dtor_value), _4308_recOwned, expectedOwnership, out _out710, out _out711);
                              r = _out710;
                              resultingOwnership = _out711;
                              readIdents = _4309_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source237.is_Nullable) {
                        DAST._IType _4310___mcc_h1545 = _source237.dtor_Nullable_a0;
                      } else if (_source237.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _4311___mcc_h1547 = _source237.dtor_Tuple_a0;
                      } else if (_source237.is_Array) {
                        DAST._IType _4312___mcc_h1549 = _source237.dtor_element;
                        BigInteger _4313___mcc_h1550 = _source237.dtor_dims;
                      } else if (_source237.is_Seq) {
                        DAST._IType _4314___mcc_h1553 = _source237.dtor_element;
                      } else if (_source237.is_Set) {
                        DAST._IType _4315___mcc_h1555 = _source237.dtor_element;
                      } else if (_source237.is_Multiset) {
                        DAST._IType _4316___mcc_h1557 = _source237.dtor_element;
                      } else if (_source237.is_Map) {
                        DAST._IType _4317___mcc_h1559 = _source237.dtor_key;
                        DAST._IType _4318___mcc_h1560 = _source237.dtor_value;
                      } else if (_source237.is_SetBuilder) {
                        DAST._IType _4319___mcc_h1563 = _source237.dtor_element;
                      } else if (_source237.is_MapBuilder) {
                        DAST._IType _4320___mcc_h1565 = _source237.dtor_key;
                        DAST._IType _4321___mcc_h1566 = _source237.dtor_value;
                      } else if (_source237.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _4322___mcc_h1569 = _source237.dtor_args;
                        DAST._IType _4323___mcc_h1570 = _source237.dtor_result;
                      } else if (_source237.is_Primitive) {
                        DAST._IPrimitive _4324___mcc_h1573 = _source237.dtor_Primitive_a0;
                      } else if (_source237.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _4325___mcc_h1575 = _source237.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _4326___mcc_h1577 = _source237.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4327_recursiveGen;
                        DCOMP._IOwnership _4328_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4329_recIdents;
                        RAST._IExpr _out712;
                        DCOMP._IOwnership _out713;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out714;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out712, out _out713, out _out714);
                        _4327_recursiveGen = _out712;
                        _4328_recOwned = _out713;
                        _4329_recIdents = _out714;
                        RAST._IExpr _out715;
                        DCOMP._IOwnership _out716;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4327_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4284_nativeToType).dtor_value), _4328_recOwned, expectedOwnership, out _out715, out _out716);
                        r = _out715;
                        resultingOwnership = _out716;
                        readIdents = _4329_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out717;
                    DCOMP._IOwnership _out718;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out719;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4283_b), _4283_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out717, out _out718, out _out719);
                    r = _out717;
                    resultingOwnership = _out718;
                    readIdents = _out719;
                  }
                }
              }
            } else if (_source231.is_Nullable) {
              DAST._IType _4330___mcc_h249 = _source231.dtor_Nullable_a0;
              {
                RAST._IExpr _4331_recursiveGen;
                DCOMP._IOwnership _4332_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4333_recIdents;
                RAST._IExpr _out720;
                DCOMP._IOwnership _out721;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out722;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out720, out _out721, out _out722);
                _4331_recursiveGen = _out720;
                _4332_recOwned = _out721;
                _4333_recIdents = _out722;
                r = _4331_recursiveGen;
                if (object.Equals(_4332_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out723;
                DCOMP._IOwnership _out724;
                DCOMP.COMP.FromOwnership(r, _4332_recOwned, expectedOwnership, out _out723, out _out724);
                r = _out723;
                resultingOwnership = _out724;
                readIdents = _4333_recIdents;
              }
            } else if (_source231.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4334___mcc_h252 = _source231.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _4335_attributes = _4226___mcc_h203;
              bool _4336_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4337_range = _4224___mcc_h201;
              DAST._IType _4338_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4339_nativeFromType;
                _4339_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4338_b, _4337_range);
                if (object.Equals(_4338_b, _3742_toTpe)) {
                  RAST._IExpr _4340_recursiveGen;
                  DCOMP._IOwnership _4341_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4342_recIdents;
                  RAST._IExpr _out725;
                  DCOMP._IOwnership _out726;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out727;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out725, out _out726, out _out727);
                  _4340_recursiveGen = _out725;
                  _4341_recOwned = _out726;
                  _4342_recIdents = _out727;
                  readIdents = _4342_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source239 = _4339_nativeFromType;
                  if (_source239.is_None) {
                    if (_4336_erase) {
                      r = _4340_recursiveGen;
                    } else {
                      r = (_4340_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out728;
                    DCOMP._IOwnership _out729;
                    DCOMP.COMP.FromOwnership(r, _4341_recOwned, expectedOwnership, out _out728, out _out729);
                    r = _out728;
                    resultingOwnership = _out729;
                  } else {
                    RAST._IType _4343___mcc_h1579 = _source239.dtor_value;
                    RAST._IType _4344_v = _4343___mcc_h1579;
                    RAST._IType _4345_toTpeRust;
                    RAST._IType _out730;
                    _out730 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4345_toTpeRust = _out730;
                    r = (((_4340_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4345_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out731;
                    DCOMP._IOwnership _out732;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out731, out _out732);
                    r = _out731;
                    resultingOwnership = _out732;
                  }
                } else {
                  if ((_4339_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4346_recursiveGen;
                      DCOMP._IOwnership _4347_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4348_recIdents;
                      RAST._IExpr _out733;
                      DCOMP._IOwnership _out734;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out735;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out733, out _out734, out _out735);
                      _4346_recursiveGen = _out733;
                      _4347_recOwned = _out734;
                      _4348_recIdents = _out735;
                      RAST._IExpr _out736;
                      DCOMP._IOwnership _out737;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4346_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4347_recOwned, expectedOwnership, out _out736, out _out737);
                      r = _out736;
                      resultingOwnership = _out737;
                      readIdents = _4348_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out738;
                  DCOMP._IOwnership _out739;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out740;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4338_b), _4338_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out738, out _out739, out _out740);
                  r = _out738;
                  resultingOwnership = _out739;
                  readIdents = _out740;
                }
              }
            } else if (_source231.is_Array) {
              DAST._IType _4349___mcc_h255 = _source231.dtor_element;
              BigInteger _4350___mcc_h256 = _source231.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _4351_attributes = _4226___mcc_h203;
              bool _4352_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4353_range = _4224___mcc_h201;
              DAST._IType _4354_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4355_nativeFromType;
                _4355_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4354_b, _4353_range);
                if (object.Equals(_4354_b, _3742_toTpe)) {
                  RAST._IExpr _4356_recursiveGen;
                  DCOMP._IOwnership _4357_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4358_recIdents;
                  RAST._IExpr _out741;
                  DCOMP._IOwnership _out742;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out743;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out741, out _out742, out _out743);
                  _4356_recursiveGen = _out741;
                  _4357_recOwned = _out742;
                  _4358_recIdents = _out743;
                  readIdents = _4358_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source240 = _4355_nativeFromType;
                  if (_source240.is_None) {
                    if (_4352_erase) {
                      r = _4356_recursiveGen;
                    } else {
                      r = (_4356_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out744;
                    DCOMP._IOwnership _out745;
                    DCOMP.COMP.FromOwnership(r, _4357_recOwned, expectedOwnership, out _out744, out _out745);
                    r = _out744;
                    resultingOwnership = _out745;
                  } else {
                    RAST._IType _4359___mcc_h1580 = _source240.dtor_value;
                    RAST._IType _4360_v = _4359___mcc_h1580;
                    RAST._IType _4361_toTpeRust;
                    RAST._IType _out746;
                    _out746 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4361_toTpeRust = _out746;
                    r = (((_4356_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4361_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out747;
                    DCOMP._IOwnership _out748;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out747, out _out748);
                    r = _out747;
                    resultingOwnership = _out748;
                  }
                } else {
                  if ((_4355_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4362_recursiveGen;
                      DCOMP._IOwnership _4363_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4364_recIdents;
                      RAST._IExpr _out749;
                      DCOMP._IOwnership _out750;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out751;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out749, out _out750, out _out751);
                      _4362_recursiveGen = _out749;
                      _4363_recOwned = _out750;
                      _4364_recIdents = _out751;
                      RAST._IExpr _out752;
                      DCOMP._IOwnership _out753;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4362_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4363_recOwned, expectedOwnership, out _out752, out _out753);
                      r = _out752;
                      resultingOwnership = _out753;
                      readIdents = _4364_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out754;
                  DCOMP._IOwnership _out755;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out756;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4354_b), _4354_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out754, out _out755, out _out756);
                  r = _out754;
                  resultingOwnership = _out755;
                  readIdents = _out756;
                }
              }
            } else if (_source231.is_Seq) {
              DAST._IType _4365___mcc_h261 = _source231.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4366_attributes = _4226___mcc_h203;
              bool _4367_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4368_range = _4224___mcc_h201;
              DAST._IType _4369_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4370_nativeFromType;
                _4370_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4369_b, _4368_range);
                if (object.Equals(_4369_b, _3742_toTpe)) {
                  RAST._IExpr _4371_recursiveGen;
                  DCOMP._IOwnership _4372_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4373_recIdents;
                  RAST._IExpr _out757;
                  DCOMP._IOwnership _out758;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out759;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out757, out _out758, out _out759);
                  _4371_recursiveGen = _out757;
                  _4372_recOwned = _out758;
                  _4373_recIdents = _out759;
                  readIdents = _4373_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source241 = _4370_nativeFromType;
                  if (_source241.is_None) {
                    if (_4367_erase) {
                      r = _4371_recursiveGen;
                    } else {
                      r = (_4371_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out760;
                    DCOMP._IOwnership _out761;
                    DCOMP.COMP.FromOwnership(r, _4372_recOwned, expectedOwnership, out _out760, out _out761);
                    r = _out760;
                    resultingOwnership = _out761;
                  } else {
                    RAST._IType _4374___mcc_h1581 = _source241.dtor_value;
                    RAST._IType _4375_v = _4374___mcc_h1581;
                    RAST._IType _4376_toTpeRust;
                    RAST._IType _out762;
                    _out762 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4376_toTpeRust = _out762;
                    r = (((_4371_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4376_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out763;
                    DCOMP._IOwnership _out764;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out763, out _out764);
                    r = _out763;
                    resultingOwnership = _out764;
                  }
                } else {
                  if ((_4370_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4377_recursiveGen;
                      DCOMP._IOwnership _4378_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4379_recIdents;
                      RAST._IExpr _out765;
                      DCOMP._IOwnership _out766;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out767;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out765, out _out766, out _out767);
                      _4377_recursiveGen = _out765;
                      _4378_recOwned = _out766;
                      _4379_recIdents = _out767;
                      RAST._IExpr _out768;
                      DCOMP._IOwnership _out769;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4377_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4378_recOwned, expectedOwnership, out _out768, out _out769);
                      r = _out768;
                      resultingOwnership = _out769;
                      readIdents = _4379_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out770;
                  DCOMP._IOwnership _out771;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out772;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4369_b), _4369_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out770, out _out771, out _out772);
                  r = _out770;
                  resultingOwnership = _out771;
                  readIdents = _out772;
                }
              }
            } else if (_source231.is_Set) {
              DAST._IType _4380___mcc_h264 = _source231.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4381_attributes = _4226___mcc_h203;
              bool _4382_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4383_range = _4224___mcc_h201;
              DAST._IType _4384_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4385_nativeFromType;
                _4385_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4384_b, _4383_range);
                if (object.Equals(_4384_b, _3742_toTpe)) {
                  RAST._IExpr _4386_recursiveGen;
                  DCOMP._IOwnership _4387_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4388_recIdents;
                  RAST._IExpr _out773;
                  DCOMP._IOwnership _out774;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out775;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out773, out _out774, out _out775);
                  _4386_recursiveGen = _out773;
                  _4387_recOwned = _out774;
                  _4388_recIdents = _out775;
                  readIdents = _4388_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source242 = _4385_nativeFromType;
                  if (_source242.is_None) {
                    if (_4382_erase) {
                      r = _4386_recursiveGen;
                    } else {
                      r = (_4386_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out776;
                    DCOMP._IOwnership _out777;
                    DCOMP.COMP.FromOwnership(r, _4387_recOwned, expectedOwnership, out _out776, out _out777);
                    r = _out776;
                    resultingOwnership = _out777;
                  } else {
                    RAST._IType _4389___mcc_h1582 = _source242.dtor_value;
                    RAST._IType _4390_v = _4389___mcc_h1582;
                    RAST._IType _4391_toTpeRust;
                    RAST._IType _out778;
                    _out778 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4391_toTpeRust = _out778;
                    r = (((_4386_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4391_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out779;
                    DCOMP._IOwnership _out780;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out779, out _out780);
                    r = _out779;
                    resultingOwnership = _out780;
                  }
                } else {
                  if ((_4385_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4392_recursiveGen;
                      DCOMP._IOwnership _4393_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4394_recIdents;
                      RAST._IExpr _out781;
                      DCOMP._IOwnership _out782;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out783;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out781, out _out782, out _out783);
                      _4392_recursiveGen = _out781;
                      _4393_recOwned = _out782;
                      _4394_recIdents = _out783;
                      RAST._IExpr _out784;
                      DCOMP._IOwnership _out785;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4392_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4393_recOwned, expectedOwnership, out _out784, out _out785);
                      r = _out784;
                      resultingOwnership = _out785;
                      readIdents = _4394_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out786;
                  DCOMP._IOwnership _out787;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out788;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4384_b), _4384_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out786, out _out787, out _out788);
                  r = _out786;
                  resultingOwnership = _out787;
                  readIdents = _out788;
                }
              }
            } else if (_source231.is_Multiset) {
              DAST._IType _4395___mcc_h267 = _source231.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4396_attributes = _4226___mcc_h203;
              bool _4397_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4398_range = _4224___mcc_h201;
              DAST._IType _4399_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4400_nativeFromType;
                _4400_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4399_b, _4398_range);
                if (object.Equals(_4399_b, _3742_toTpe)) {
                  RAST._IExpr _4401_recursiveGen;
                  DCOMP._IOwnership _4402_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4403_recIdents;
                  RAST._IExpr _out789;
                  DCOMP._IOwnership _out790;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out791;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out789, out _out790, out _out791);
                  _4401_recursiveGen = _out789;
                  _4402_recOwned = _out790;
                  _4403_recIdents = _out791;
                  readIdents = _4403_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source243 = _4400_nativeFromType;
                  if (_source243.is_None) {
                    if (_4397_erase) {
                      r = _4401_recursiveGen;
                    } else {
                      r = (_4401_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out792;
                    DCOMP._IOwnership _out793;
                    DCOMP.COMP.FromOwnership(r, _4402_recOwned, expectedOwnership, out _out792, out _out793);
                    r = _out792;
                    resultingOwnership = _out793;
                  } else {
                    RAST._IType _4404___mcc_h1583 = _source243.dtor_value;
                    RAST._IType _4405_v = _4404___mcc_h1583;
                    RAST._IType _4406_toTpeRust;
                    RAST._IType _out794;
                    _out794 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4406_toTpeRust = _out794;
                    r = (((_4401_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4406_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out795;
                    DCOMP._IOwnership _out796;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out795, out _out796);
                    r = _out795;
                    resultingOwnership = _out796;
                  }
                } else {
                  if ((_4400_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4407_recursiveGen;
                      DCOMP._IOwnership _4408_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4409_recIdents;
                      RAST._IExpr _out797;
                      DCOMP._IOwnership _out798;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out799;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out797, out _out798, out _out799);
                      _4407_recursiveGen = _out797;
                      _4408_recOwned = _out798;
                      _4409_recIdents = _out799;
                      RAST._IExpr _out800;
                      DCOMP._IOwnership _out801;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4407_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4408_recOwned, expectedOwnership, out _out800, out _out801);
                      r = _out800;
                      resultingOwnership = _out801;
                      readIdents = _4409_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out802;
                  DCOMP._IOwnership _out803;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out804;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4399_b), _4399_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out802, out _out803, out _out804);
                  r = _out802;
                  resultingOwnership = _out803;
                  readIdents = _out804;
                }
              }
            } else if (_source231.is_Map) {
              DAST._IType _4410___mcc_h270 = _source231.dtor_key;
              DAST._IType _4411___mcc_h271 = _source231.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4412_attributes = _4226___mcc_h203;
              bool _4413_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4414_range = _4224___mcc_h201;
              DAST._IType _4415_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4416_nativeFromType;
                _4416_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4415_b, _4414_range);
                if (object.Equals(_4415_b, _3742_toTpe)) {
                  RAST._IExpr _4417_recursiveGen;
                  DCOMP._IOwnership _4418_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4419_recIdents;
                  RAST._IExpr _out805;
                  DCOMP._IOwnership _out806;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out807;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out805, out _out806, out _out807);
                  _4417_recursiveGen = _out805;
                  _4418_recOwned = _out806;
                  _4419_recIdents = _out807;
                  readIdents = _4419_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source244 = _4416_nativeFromType;
                  if (_source244.is_None) {
                    if (_4413_erase) {
                      r = _4417_recursiveGen;
                    } else {
                      r = (_4417_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out808;
                    DCOMP._IOwnership _out809;
                    DCOMP.COMP.FromOwnership(r, _4418_recOwned, expectedOwnership, out _out808, out _out809);
                    r = _out808;
                    resultingOwnership = _out809;
                  } else {
                    RAST._IType _4420___mcc_h1584 = _source244.dtor_value;
                    RAST._IType _4421_v = _4420___mcc_h1584;
                    RAST._IType _4422_toTpeRust;
                    RAST._IType _out810;
                    _out810 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4422_toTpeRust = _out810;
                    r = (((_4417_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4422_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out811;
                    DCOMP._IOwnership _out812;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out811, out _out812);
                    r = _out811;
                    resultingOwnership = _out812;
                  }
                } else {
                  if ((_4416_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4423_recursiveGen;
                      DCOMP._IOwnership _4424_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4425_recIdents;
                      RAST._IExpr _out813;
                      DCOMP._IOwnership _out814;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out815;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out813, out _out814, out _out815);
                      _4423_recursiveGen = _out813;
                      _4424_recOwned = _out814;
                      _4425_recIdents = _out815;
                      RAST._IExpr _out816;
                      DCOMP._IOwnership _out817;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4423_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4424_recOwned, expectedOwnership, out _out816, out _out817);
                      r = _out816;
                      resultingOwnership = _out817;
                      readIdents = _4425_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out818;
                  DCOMP._IOwnership _out819;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out820;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4415_b), _4415_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out818, out _out819, out _out820);
                  r = _out818;
                  resultingOwnership = _out819;
                  readIdents = _out820;
                }
              }
            } else if (_source231.is_SetBuilder) {
              DAST._IType _4426___mcc_h276 = _source231.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4427_attributes = _4226___mcc_h203;
              bool _4428_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4429_range = _4224___mcc_h201;
              DAST._IType _4430_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4431_nativeFromType;
                _4431_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4430_b, _4429_range);
                if (object.Equals(_4430_b, _3742_toTpe)) {
                  RAST._IExpr _4432_recursiveGen;
                  DCOMP._IOwnership _4433_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4434_recIdents;
                  RAST._IExpr _out821;
                  DCOMP._IOwnership _out822;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out823;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out821, out _out822, out _out823);
                  _4432_recursiveGen = _out821;
                  _4433_recOwned = _out822;
                  _4434_recIdents = _out823;
                  readIdents = _4434_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source245 = _4431_nativeFromType;
                  if (_source245.is_None) {
                    if (_4428_erase) {
                      r = _4432_recursiveGen;
                    } else {
                      r = (_4432_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out824;
                    DCOMP._IOwnership _out825;
                    DCOMP.COMP.FromOwnership(r, _4433_recOwned, expectedOwnership, out _out824, out _out825);
                    r = _out824;
                    resultingOwnership = _out825;
                  } else {
                    RAST._IType _4435___mcc_h1585 = _source245.dtor_value;
                    RAST._IType _4436_v = _4435___mcc_h1585;
                    RAST._IType _4437_toTpeRust;
                    RAST._IType _out826;
                    _out826 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4437_toTpeRust = _out826;
                    r = (((_4432_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4437_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out827;
                    DCOMP._IOwnership _out828;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out827, out _out828);
                    r = _out827;
                    resultingOwnership = _out828;
                  }
                } else {
                  if ((_4431_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4438_recursiveGen;
                      DCOMP._IOwnership _4439_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4440_recIdents;
                      RAST._IExpr _out829;
                      DCOMP._IOwnership _out830;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out831;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out829, out _out830, out _out831);
                      _4438_recursiveGen = _out829;
                      _4439_recOwned = _out830;
                      _4440_recIdents = _out831;
                      RAST._IExpr _out832;
                      DCOMP._IOwnership _out833;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4438_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4439_recOwned, expectedOwnership, out _out832, out _out833);
                      r = _out832;
                      resultingOwnership = _out833;
                      readIdents = _4440_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out834;
                  DCOMP._IOwnership _out835;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out836;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4430_b), _4430_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out834, out _out835, out _out836);
                  r = _out834;
                  resultingOwnership = _out835;
                  readIdents = _out836;
                }
              }
            } else if (_source231.is_MapBuilder) {
              DAST._IType _4441___mcc_h279 = _source231.dtor_key;
              DAST._IType _4442___mcc_h280 = _source231.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4443_attributes = _4226___mcc_h203;
              bool _4444_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4445_range = _4224___mcc_h201;
              DAST._IType _4446_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4447_nativeFromType;
                _4447_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4446_b, _4445_range);
                if (object.Equals(_4446_b, _3742_toTpe)) {
                  RAST._IExpr _4448_recursiveGen;
                  DCOMP._IOwnership _4449_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4450_recIdents;
                  RAST._IExpr _out837;
                  DCOMP._IOwnership _out838;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out839;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out837, out _out838, out _out839);
                  _4448_recursiveGen = _out837;
                  _4449_recOwned = _out838;
                  _4450_recIdents = _out839;
                  readIdents = _4450_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source246 = _4447_nativeFromType;
                  if (_source246.is_None) {
                    if (_4444_erase) {
                      r = _4448_recursiveGen;
                    } else {
                      r = (_4448_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out840;
                    DCOMP._IOwnership _out841;
                    DCOMP.COMP.FromOwnership(r, _4449_recOwned, expectedOwnership, out _out840, out _out841);
                    r = _out840;
                    resultingOwnership = _out841;
                  } else {
                    RAST._IType _4451___mcc_h1586 = _source246.dtor_value;
                    RAST._IType _4452_v = _4451___mcc_h1586;
                    RAST._IType _4453_toTpeRust;
                    RAST._IType _out842;
                    _out842 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4453_toTpeRust = _out842;
                    r = (((_4448_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4453_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out843;
                    DCOMP._IOwnership _out844;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out843, out _out844);
                    r = _out843;
                    resultingOwnership = _out844;
                  }
                } else {
                  if ((_4447_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4454_recursiveGen;
                      DCOMP._IOwnership _4455_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4456_recIdents;
                      RAST._IExpr _out845;
                      DCOMP._IOwnership _out846;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out847;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out845, out _out846, out _out847);
                      _4454_recursiveGen = _out845;
                      _4455_recOwned = _out846;
                      _4456_recIdents = _out847;
                      RAST._IExpr _out848;
                      DCOMP._IOwnership _out849;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4454_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4455_recOwned, expectedOwnership, out _out848, out _out849);
                      r = _out848;
                      resultingOwnership = _out849;
                      readIdents = _4456_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out850;
                  DCOMP._IOwnership _out851;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out852;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4446_b), _4446_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out850, out _out851, out _out852);
                  r = _out850;
                  resultingOwnership = _out851;
                  readIdents = _out852;
                }
              }
            } else if (_source231.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4457___mcc_h285 = _source231.dtor_args;
              DAST._IType _4458___mcc_h286 = _source231.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _4459_attributes = _4226___mcc_h203;
              bool _4460_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4461_range = _4224___mcc_h201;
              DAST._IType _4462_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4463_nativeFromType;
                _4463_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4462_b, _4461_range);
                if (object.Equals(_4462_b, _3742_toTpe)) {
                  RAST._IExpr _4464_recursiveGen;
                  DCOMP._IOwnership _4465_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4466_recIdents;
                  RAST._IExpr _out853;
                  DCOMP._IOwnership _out854;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out855;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out853, out _out854, out _out855);
                  _4464_recursiveGen = _out853;
                  _4465_recOwned = _out854;
                  _4466_recIdents = _out855;
                  readIdents = _4466_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source247 = _4463_nativeFromType;
                  if (_source247.is_None) {
                    if (_4460_erase) {
                      r = _4464_recursiveGen;
                    } else {
                      r = (_4464_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out856;
                    DCOMP._IOwnership _out857;
                    DCOMP.COMP.FromOwnership(r, _4465_recOwned, expectedOwnership, out _out856, out _out857);
                    r = _out856;
                    resultingOwnership = _out857;
                  } else {
                    RAST._IType _4467___mcc_h1587 = _source247.dtor_value;
                    RAST._IType _4468_v = _4467___mcc_h1587;
                    RAST._IType _4469_toTpeRust;
                    RAST._IType _out858;
                    _out858 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4469_toTpeRust = _out858;
                    r = (((_4464_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4469_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out859;
                    DCOMP._IOwnership _out860;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out859, out _out860);
                    r = _out859;
                    resultingOwnership = _out860;
                  }
                } else {
                  if ((_4463_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4470_recursiveGen;
                      DCOMP._IOwnership _4471_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4472_recIdents;
                      RAST._IExpr _out861;
                      DCOMP._IOwnership _out862;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out863;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out861, out _out862, out _out863);
                      _4470_recursiveGen = _out861;
                      _4471_recOwned = _out862;
                      _4472_recIdents = _out863;
                      RAST._IExpr _out864;
                      DCOMP._IOwnership _out865;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4470_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4471_recOwned, expectedOwnership, out _out864, out _out865);
                      r = _out864;
                      resultingOwnership = _out865;
                      readIdents = _4472_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out866;
                  DCOMP._IOwnership _out867;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out868;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4462_b), _4462_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out866, out _out867, out _out868);
                  r = _out866;
                  resultingOwnership = _out867;
                  readIdents = _out868;
                }
              }
            } else if (_source231.is_Primitive) {
              DAST._IPrimitive _4473___mcc_h291 = _source231.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _4474_attributes = _4226___mcc_h203;
              bool _4475_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4476_range = _4224___mcc_h201;
              DAST._IType _4477_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4478_nativeFromType;
                _4478_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4477_b, _4476_range);
                if (object.Equals(_4477_b, _3742_toTpe)) {
                  RAST._IExpr _4479_recursiveGen;
                  DCOMP._IOwnership _4480_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4481_recIdents;
                  RAST._IExpr _out869;
                  DCOMP._IOwnership _out870;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out871;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out869, out _out870, out _out871);
                  _4479_recursiveGen = _out869;
                  _4480_recOwned = _out870;
                  _4481_recIdents = _out871;
                  readIdents = _4481_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source248 = _4478_nativeFromType;
                  if (_source248.is_None) {
                    if (_4475_erase) {
                      r = _4479_recursiveGen;
                    } else {
                      r = (_4479_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out872;
                    DCOMP._IOwnership _out873;
                    DCOMP.COMP.FromOwnership(r, _4480_recOwned, expectedOwnership, out _out872, out _out873);
                    r = _out872;
                    resultingOwnership = _out873;
                  } else {
                    RAST._IType _4482___mcc_h1588 = _source248.dtor_value;
                    RAST._IType _4483_v = _4482___mcc_h1588;
                    RAST._IType _4484_toTpeRust;
                    RAST._IType _out874;
                    _out874 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4484_toTpeRust = _out874;
                    r = (((_4479_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4484_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out875;
                    DCOMP._IOwnership _out876;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out875, out _out876);
                    r = _out875;
                    resultingOwnership = _out876;
                  }
                } else {
                  if ((_4478_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4485_recursiveGen;
                      DCOMP._IOwnership _4486_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4487_recIdents;
                      RAST._IExpr _out877;
                      DCOMP._IOwnership _out878;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out879;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out877, out _out878, out _out879);
                      _4485_recursiveGen = _out877;
                      _4486_recOwned = _out878;
                      _4487_recIdents = _out879;
                      RAST._IExpr _out880;
                      DCOMP._IOwnership _out881;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4485_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4486_recOwned, expectedOwnership, out _out880, out _out881);
                      r = _out880;
                      resultingOwnership = _out881;
                      readIdents = _4487_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out882;
                  DCOMP._IOwnership _out883;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out884;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4477_b), _4477_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out882, out _out883, out _out884);
                  r = _out882;
                  resultingOwnership = _out883;
                  readIdents = _out884;
                }
              }
            } else if (_source231.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4488___mcc_h294 = _source231.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _4489_attributes = _4226___mcc_h203;
              bool _4490_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4491_range = _4224___mcc_h201;
              DAST._IType _4492_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4493_nativeFromType;
                _4493_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4492_b, _4491_range);
                if (object.Equals(_4492_b, _3742_toTpe)) {
                  RAST._IExpr _4494_recursiveGen;
                  DCOMP._IOwnership _4495_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4496_recIdents;
                  RAST._IExpr _out885;
                  DCOMP._IOwnership _out886;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out887;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out885, out _out886, out _out887);
                  _4494_recursiveGen = _out885;
                  _4495_recOwned = _out886;
                  _4496_recIdents = _out887;
                  readIdents = _4496_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source249 = _4493_nativeFromType;
                  if (_source249.is_None) {
                    if (_4490_erase) {
                      r = _4494_recursiveGen;
                    } else {
                      r = (_4494_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out888;
                    DCOMP._IOwnership _out889;
                    DCOMP.COMP.FromOwnership(r, _4495_recOwned, expectedOwnership, out _out888, out _out889);
                    r = _out888;
                    resultingOwnership = _out889;
                  } else {
                    RAST._IType _4497___mcc_h1589 = _source249.dtor_value;
                    RAST._IType _4498_v = _4497___mcc_h1589;
                    RAST._IType _4499_toTpeRust;
                    RAST._IType _out890;
                    _out890 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4499_toTpeRust = _out890;
                    r = (((_4494_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4499_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out891;
                    DCOMP._IOwnership _out892;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out891, out _out892);
                    r = _out891;
                    resultingOwnership = _out892;
                  }
                } else {
                  if ((_4493_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4500_recursiveGen;
                      DCOMP._IOwnership _4501_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4502_recIdents;
                      RAST._IExpr _out893;
                      DCOMP._IOwnership _out894;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out895;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out893, out _out894, out _out895);
                      _4500_recursiveGen = _out893;
                      _4501_recOwned = _out894;
                      _4502_recIdents = _out895;
                      RAST._IExpr _out896;
                      DCOMP._IOwnership _out897;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4500_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4501_recOwned, expectedOwnership, out _out896, out _out897);
                      r = _out896;
                      resultingOwnership = _out897;
                      readIdents = _4502_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out898;
                  DCOMP._IOwnership _out899;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out900;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4492_b), _4492_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out898, out _out899, out _out900);
                  r = _out898;
                  resultingOwnership = _out899;
                  readIdents = _out900;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4503___mcc_h297 = _source231.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _4504_attributes = _4226___mcc_h203;
              bool _4505_erase = _4225___mcc_h202;
              DAST._INewtypeRange _4506_range = _4224___mcc_h201;
              DAST._IType _4507_b = _4223___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4508_nativeFromType;
                _4508_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4507_b, _4506_range);
                if (object.Equals(_4507_b, _3742_toTpe)) {
                  RAST._IExpr _4509_recursiveGen;
                  DCOMP._IOwnership _4510_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4511_recIdents;
                  RAST._IExpr _out901;
                  DCOMP._IOwnership _out902;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out903;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out901, out _out902, out _out903);
                  _4509_recursiveGen = _out901;
                  _4510_recOwned = _out902;
                  _4511_recIdents = _out903;
                  readIdents = _4511_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source250 = _4508_nativeFromType;
                  if (_source250.is_None) {
                    if (_4505_erase) {
                      r = _4509_recursiveGen;
                    } else {
                      r = (_4509_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out904;
                    DCOMP._IOwnership _out905;
                    DCOMP.COMP.FromOwnership(r, _4510_recOwned, expectedOwnership, out _out904, out _out905);
                    r = _out904;
                    resultingOwnership = _out905;
                  } else {
                    RAST._IType _4512___mcc_h1590 = _source250.dtor_value;
                    RAST._IType _4513_v = _4512___mcc_h1590;
                    RAST._IType _4514_toTpeRust;
                    RAST._IType _out906;
                    _out906 = DCOMP.COMP.GenType(_3742_toTpe, false, false);
                    _4514_toTpeRust = _out906;
                    r = (((_4509_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4514_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out907;
                    DCOMP._IOwnership _out908;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out907, out _out908);
                    r = _out907;
                    resultingOwnership = _out908;
                  }
                } else {
                  if ((_4508_nativeFromType).is_Some) {
                    if (object.Equals(_3742_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4515_recursiveGen;
                      DCOMP._IOwnership _4516_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4517_recIdents;
                      RAST._IExpr _out909;
                      DCOMP._IOwnership _out910;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out911;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out909, out _out910, out _out911);
                      _4515_recursiveGen = _out909;
                      _4516_recOwned = _out910;
                      _4517_recIdents = _out911;
                      RAST._IExpr _out912;
                      DCOMP._IOwnership _out913;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4515_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4516_recOwned, expectedOwnership, out _out912, out _out913);
                      r = _out912;
                      resultingOwnership = _out913;
                      readIdents = _4517_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out914;
                  DCOMP._IOwnership _out915;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out916;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4507_b), _4507_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out914, out _out915, out _out916);
                  r = _out914;
                  resultingOwnership = _out915;
                  readIdents = _out916;
                }
              }
            }
          }
        } else if (_source214.is_Nullable) {
          DAST._IType _4518___mcc_h300 = _source214.dtor_Nullable_a0;
          DAST._IType _source251 = _3747___mcc_h1;
          if (_source251.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4519___mcc_h304 = _source251.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4520___mcc_h305 = _source251.dtor_typeArgs;
            DAST._IResolvedType _4521___mcc_h306 = _source251.dtor_resolved;
            DAST._IResolvedType _source252 = _4521___mcc_h306;
            if (_source252.is_AllocatedDatatype) {
              DAST._IDatatypeType _4522___mcc_h313 = _source252.dtor_datatypeType;
              {
                RAST._IExpr _4523_recursiveGen;
                DCOMP._IOwnership _4524_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4525_recIdents;
                RAST._IExpr _out917;
                DCOMP._IOwnership _out918;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out919;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out917, out _out918, out _out919);
                _4523_recursiveGen = _out917;
                _4524_recOwned = _out918;
                _4525_recIdents = _out919;
                r = _4523_recursiveGen;
                if (object.Equals(_4524_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out920;
                DCOMP._IOwnership _out921;
                DCOMP.COMP.FromOwnership(r, _4524_recOwned, expectedOwnership, out _out920, out _out921);
                r = _out920;
                resultingOwnership = _out921;
                readIdents = _4525_recIdents;
              }
            } else if (_source252.is_Datatype) {
              DAST._IDatatypeType _4526___mcc_h316 = _source252.dtor_datatypeType;
              {
                RAST._IExpr _4527_recursiveGen;
                DCOMP._IOwnership _4528_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4529_recIdents;
                RAST._IExpr _out922;
                DCOMP._IOwnership _out923;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out924;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out922, out _out923, out _out924);
                _4527_recursiveGen = _out922;
                _4528_recOwned = _out923;
                _4529_recIdents = _out924;
                r = _4527_recursiveGen;
                if (object.Equals(_4528_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out925;
                DCOMP._IOwnership _out926;
                DCOMP.COMP.FromOwnership(r, _4528_recOwned, expectedOwnership, out _out925, out _out926);
                r = _out925;
                resultingOwnership = _out926;
                readIdents = _4529_recIdents;
              }
            } else if (_source252.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4530___mcc_h319 = _source252.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4531___mcc_h320 = _source252.dtor_attributes;
              {
                RAST._IExpr _4532_recursiveGen;
                DCOMP._IOwnership _4533_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4534_recIdents;
                RAST._IExpr _out927;
                DCOMP._IOwnership _out928;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out929;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out927, out _out928, out _out929);
                _4532_recursiveGen = _out927;
                _4533_recOwned = _out928;
                _4534_recIdents = _out929;
                r = _4532_recursiveGen;
                if (object.Equals(_4533_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out930;
                DCOMP._IOwnership _out931;
                DCOMP.COMP.FromOwnership(r, _4533_recOwned, expectedOwnership, out _out930, out _out931);
                r = _out930;
                resultingOwnership = _out931;
                readIdents = _4534_recIdents;
              }
            } else {
              DAST._IType _4535___mcc_h325 = _source252.dtor_baseType;
              DAST._INewtypeRange _4536___mcc_h326 = _source252.dtor_range;
              bool _4537___mcc_h327 = _source252.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4538___mcc_h328 = _source252.dtor_attributes;
              {
                RAST._IExpr _4539_recursiveGen;
                DCOMP._IOwnership _4540_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4541_recIdents;
                RAST._IExpr _out932;
                DCOMP._IOwnership _out933;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out934;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out932, out _out933, out _out934);
                _4539_recursiveGen = _out932;
                _4540_recOwned = _out933;
                _4541_recIdents = _out934;
                r = _4539_recursiveGen;
                if (object.Equals(_4540_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out935;
                DCOMP._IOwnership _out936;
                DCOMP.COMP.FromOwnership(r, _4540_recOwned, expectedOwnership, out _out935, out _out936);
                r = _out935;
                resultingOwnership = _out936;
                readIdents = _4541_recIdents;
              }
            }
          } else if (_source251.is_Nullable) {
            DAST._IType _4542___mcc_h337 = _source251.dtor_Nullable_a0;
            {
              RAST._IExpr _4543_recursiveGen;
              DCOMP._IOwnership _4544_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4545_recIdents;
              RAST._IExpr _out937;
              DCOMP._IOwnership _out938;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out939;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out937, out _out938, out _out939);
              _4543_recursiveGen = _out937;
              _4544_recOwned = _out938;
              _4545_recIdents = _out939;
              r = _4543_recursiveGen;
              if (object.Equals(_4544_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out940;
              DCOMP._IOwnership _out941;
              DCOMP.COMP.FromOwnership(r, _4544_recOwned, expectedOwnership, out _out940, out _out941);
              r = _out940;
              resultingOwnership = _out941;
              readIdents = _4545_recIdents;
            }
          } else if (_source251.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4546___mcc_h340 = _source251.dtor_Tuple_a0;
            {
              RAST._IExpr _4547_recursiveGen;
              DCOMP._IOwnership _4548_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4549_recIdents;
              RAST._IExpr _out942;
              DCOMP._IOwnership _out943;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out944;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out942, out _out943, out _out944);
              _4547_recursiveGen = _out942;
              _4548_recOwned = _out943;
              _4549_recIdents = _out944;
              r = _4547_recursiveGen;
              if (object.Equals(_4548_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out945;
              DCOMP._IOwnership _out946;
              DCOMP.COMP.FromOwnership(r, _4548_recOwned, expectedOwnership, out _out945, out _out946);
              r = _out945;
              resultingOwnership = _out946;
              readIdents = _4549_recIdents;
            }
          } else if (_source251.is_Array) {
            DAST._IType _4550___mcc_h343 = _source251.dtor_element;
            BigInteger _4551___mcc_h344 = _source251.dtor_dims;
            {
              RAST._IExpr _4552_recursiveGen;
              DCOMP._IOwnership _4553_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4554_recIdents;
              RAST._IExpr _out947;
              DCOMP._IOwnership _out948;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out949;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out947, out _out948, out _out949);
              _4552_recursiveGen = _out947;
              _4553_recOwned = _out948;
              _4554_recIdents = _out949;
              r = _4552_recursiveGen;
              if (object.Equals(_4553_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out950;
              DCOMP._IOwnership _out951;
              DCOMP.COMP.FromOwnership(r, _4553_recOwned, expectedOwnership, out _out950, out _out951);
              r = _out950;
              resultingOwnership = _out951;
              readIdents = _4554_recIdents;
            }
          } else if (_source251.is_Seq) {
            DAST._IType _4555___mcc_h349 = _source251.dtor_element;
            {
              RAST._IExpr _4556_recursiveGen;
              DCOMP._IOwnership _4557_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4558_recIdents;
              RAST._IExpr _out952;
              DCOMP._IOwnership _out953;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out954;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out952, out _out953, out _out954);
              _4556_recursiveGen = _out952;
              _4557_recOwned = _out953;
              _4558_recIdents = _out954;
              r = _4556_recursiveGen;
              if (object.Equals(_4557_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out955;
              DCOMP._IOwnership _out956;
              DCOMP.COMP.FromOwnership(r, _4557_recOwned, expectedOwnership, out _out955, out _out956);
              r = _out955;
              resultingOwnership = _out956;
              readIdents = _4558_recIdents;
            }
          } else if (_source251.is_Set) {
            DAST._IType _4559___mcc_h352 = _source251.dtor_element;
            {
              RAST._IExpr _4560_recursiveGen;
              DCOMP._IOwnership _4561_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4562_recIdents;
              RAST._IExpr _out957;
              DCOMP._IOwnership _out958;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out959;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out957, out _out958, out _out959);
              _4560_recursiveGen = _out957;
              _4561_recOwned = _out958;
              _4562_recIdents = _out959;
              r = _4560_recursiveGen;
              if (object.Equals(_4561_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out960;
              DCOMP._IOwnership _out961;
              DCOMP.COMP.FromOwnership(r, _4561_recOwned, expectedOwnership, out _out960, out _out961);
              r = _out960;
              resultingOwnership = _out961;
              readIdents = _4562_recIdents;
            }
          } else if (_source251.is_Multiset) {
            DAST._IType _4563___mcc_h355 = _source251.dtor_element;
            {
              RAST._IExpr _4564_recursiveGen;
              DCOMP._IOwnership _4565_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4566_recIdents;
              RAST._IExpr _out962;
              DCOMP._IOwnership _out963;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out964;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out962, out _out963, out _out964);
              _4564_recursiveGen = _out962;
              _4565_recOwned = _out963;
              _4566_recIdents = _out964;
              r = _4564_recursiveGen;
              if (object.Equals(_4565_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out965;
              DCOMP._IOwnership _out966;
              DCOMP.COMP.FromOwnership(r, _4565_recOwned, expectedOwnership, out _out965, out _out966);
              r = _out965;
              resultingOwnership = _out966;
              readIdents = _4566_recIdents;
            }
          } else if (_source251.is_Map) {
            DAST._IType _4567___mcc_h358 = _source251.dtor_key;
            DAST._IType _4568___mcc_h359 = _source251.dtor_value;
            {
              RAST._IExpr _4569_recursiveGen;
              DCOMP._IOwnership _4570_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4571_recIdents;
              RAST._IExpr _out967;
              DCOMP._IOwnership _out968;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out969;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out967, out _out968, out _out969);
              _4569_recursiveGen = _out967;
              _4570_recOwned = _out968;
              _4571_recIdents = _out969;
              r = _4569_recursiveGen;
              if (object.Equals(_4570_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out970;
              DCOMP._IOwnership _out971;
              DCOMP.COMP.FromOwnership(r, _4570_recOwned, expectedOwnership, out _out970, out _out971);
              r = _out970;
              resultingOwnership = _out971;
              readIdents = _4571_recIdents;
            }
          } else if (_source251.is_SetBuilder) {
            DAST._IType _4572___mcc_h364 = _source251.dtor_element;
            {
              RAST._IExpr _4573_recursiveGen;
              DCOMP._IOwnership _4574_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4575_recIdents;
              RAST._IExpr _out972;
              DCOMP._IOwnership _out973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out974;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out972, out _out973, out _out974);
              _4573_recursiveGen = _out972;
              _4574_recOwned = _out973;
              _4575_recIdents = _out974;
              r = _4573_recursiveGen;
              if (object.Equals(_4574_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out975;
              DCOMP._IOwnership _out976;
              DCOMP.COMP.FromOwnership(r, _4574_recOwned, expectedOwnership, out _out975, out _out976);
              r = _out975;
              resultingOwnership = _out976;
              readIdents = _4575_recIdents;
            }
          } else if (_source251.is_MapBuilder) {
            DAST._IType _4576___mcc_h367 = _source251.dtor_key;
            DAST._IType _4577___mcc_h368 = _source251.dtor_value;
            {
              RAST._IExpr _4578_recursiveGen;
              DCOMP._IOwnership _4579_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4580_recIdents;
              RAST._IExpr _out977;
              DCOMP._IOwnership _out978;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out979;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out977, out _out978, out _out979);
              _4578_recursiveGen = _out977;
              _4579_recOwned = _out978;
              _4580_recIdents = _out979;
              r = _4578_recursiveGen;
              if (object.Equals(_4579_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out980;
              DCOMP._IOwnership _out981;
              DCOMP.COMP.FromOwnership(r, _4579_recOwned, expectedOwnership, out _out980, out _out981);
              r = _out980;
              resultingOwnership = _out981;
              readIdents = _4580_recIdents;
            }
          } else if (_source251.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4581___mcc_h373 = _source251.dtor_args;
            DAST._IType _4582___mcc_h374 = _source251.dtor_result;
            {
              RAST._IExpr _4583_recursiveGen;
              DCOMP._IOwnership _4584_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4585_recIdents;
              RAST._IExpr _out982;
              DCOMP._IOwnership _out983;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out984;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out982, out _out983, out _out984);
              _4583_recursiveGen = _out982;
              _4584_recOwned = _out983;
              _4585_recIdents = _out984;
              r = _4583_recursiveGen;
              if (object.Equals(_4584_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out985;
              DCOMP._IOwnership _out986;
              DCOMP.COMP.FromOwnership(r, _4584_recOwned, expectedOwnership, out _out985, out _out986);
              r = _out985;
              resultingOwnership = _out986;
              readIdents = _4585_recIdents;
            }
          } else if (_source251.is_Primitive) {
            DAST._IPrimitive _4586___mcc_h379 = _source251.dtor_Primitive_a0;
            {
              RAST._IExpr _4587_recursiveGen;
              DCOMP._IOwnership _4588_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4589_recIdents;
              RAST._IExpr _out987;
              DCOMP._IOwnership _out988;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out989;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out987, out _out988, out _out989);
              _4587_recursiveGen = _out987;
              _4588_recOwned = _out988;
              _4589_recIdents = _out989;
              r = _4587_recursiveGen;
              if (object.Equals(_4588_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out990;
              DCOMP._IOwnership _out991;
              DCOMP.COMP.FromOwnership(r, _4588_recOwned, expectedOwnership, out _out990, out _out991);
              r = _out990;
              resultingOwnership = _out991;
              readIdents = _4589_recIdents;
            }
          } else if (_source251.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4590___mcc_h382 = _source251.dtor_Passthrough_a0;
            {
              RAST._IExpr _4591_recursiveGen;
              DCOMP._IOwnership _4592_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4593_recIdents;
              RAST._IExpr _out992;
              DCOMP._IOwnership _out993;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out994;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out992, out _out993, out _out994);
              _4591_recursiveGen = _out992;
              _4592_recOwned = _out993;
              _4593_recIdents = _out994;
              r = _4591_recursiveGen;
              if (object.Equals(_4592_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out995;
              DCOMP._IOwnership _out996;
              DCOMP.COMP.FromOwnership(r, _4592_recOwned, expectedOwnership, out _out995, out _out996);
              r = _out995;
              resultingOwnership = _out996;
              readIdents = _4593_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4594___mcc_h385 = _source251.dtor_TypeArg_a0;
            {
              RAST._IExpr _4595_recursiveGen;
              DCOMP._IOwnership _4596_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4597_recIdents;
              RAST._IExpr _out997;
              DCOMP._IOwnership _out998;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out999;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out997, out _out998, out _out999);
              _4595_recursiveGen = _out997;
              _4596_recOwned = _out998;
              _4597_recIdents = _out999;
              r = _4595_recursiveGen;
              if (object.Equals(_4596_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out1000;
              DCOMP._IOwnership _out1001;
              DCOMP.COMP.FromOwnership(r, _4596_recOwned, expectedOwnership, out _out1000, out _out1001);
              r = _out1000;
              resultingOwnership = _out1001;
              readIdents = _4597_recIdents;
            }
          }
        } else if (_source214.is_Tuple) {
          Dafny.ISequence<DAST._IType> _4598___mcc_h388 = _source214.dtor_Tuple_a0;
          DAST._IType _source253 = _3747___mcc_h1;
          if (_source253.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4599___mcc_h392 = _source253.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4600___mcc_h393 = _source253.dtor_typeArgs;
            DAST._IResolvedType _4601___mcc_h394 = _source253.dtor_resolved;
            DAST._IResolvedType _source254 = _4601___mcc_h394;
            if (_source254.is_AllocatedDatatype) {
              DAST._IDatatypeType _4602___mcc_h398 = _source254.dtor_datatypeType;
              {
                RAST._IType _4603_fromTpeGen;
                RAST._IType _out1002;
                _out1002 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4603_fromTpeGen = _out1002;
                RAST._IType _4604_toTpeGen;
                RAST._IType _out1003;
                _out1003 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4604_toTpeGen = _out1003;
                RAST._IExpr _4605_recursiveGen;
                DCOMP._IOwnership _4606_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4607_recIdents;
                RAST._IExpr _out1004;
                DCOMP._IOwnership _out1005;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1006;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1004, out _out1005, out _out1006);
                _4605_recursiveGen = _out1004;
                _4606_recOwned = _out1005;
                _4607_recIdents = _out1006;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4605_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4603_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4604_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1007;
                DCOMP._IOwnership _out1008;
                DCOMP.COMP.FromOwnership(r, _4606_recOwned, expectedOwnership, out _out1007, out _out1008);
                r = _out1007;
                resultingOwnership = _out1008;
                readIdents = _4607_recIdents;
              }
            } else if (_source254.is_Datatype) {
              DAST._IDatatypeType _4608___mcc_h400 = _source254.dtor_datatypeType;
              {
                RAST._IType _4609_fromTpeGen;
                RAST._IType _out1009;
                _out1009 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4609_fromTpeGen = _out1009;
                RAST._IType _4610_toTpeGen;
                RAST._IType _out1010;
                _out1010 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4610_toTpeGen = _out1010;
                RAST._IExpr _4611_recursiveGen;
                DCOMP._IOwnership _4612_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4613_recIdents;
                RAST._IExpr _out1011;
                DCOMP._IOwnership _out1012;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1013;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1011, out _out1012, out _out1013);
                _4611_recursiveGen = _out1011;
                _4612_recOwned = _out1012;
                _4613_recIdents = _out1013;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4611_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4609_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4610_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1014;
                DCOMP._IOwnership _out1015;
                DCOMP.COMP.FromOwnership(r, _4612_recOwned, expectedOwnership, out _out1014, out _out1015);
                r = _out1014;
                resultingOwnership = _out1015;
                readIdents = _4613_recIdents;
              }
            } else if (_source254.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4614___mcc_h402 = _source254.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4615___mcc_h403 = _source254.dtor_attributes;
              {
                RAST._IType _4616_fromTpeGen;
                RAST._IType _out1016;
                _out1016 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4616_fromTpeGen = _out1016;
                RAST._IType _4617_toTpeGen;
                RAST._IType _out1017;
                _out1017 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4617_toTpeGen = _out1017;
                RAST._IExpr _4618_recursiveGen;
                DCOMP._IOwnership _4619_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4620_recIdents;
                RAST._IExpr _out1018;
                DCOMP._IOwnership _out1019;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1020;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1018, out _out1019, out _out1020);
                _4618_recursiveGen = _out1018;
                _4619_recOwned = _out1019;
                _4620_recIdents = _out1020;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4618_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4616_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4617_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1021;
                DCOMP._IOwnership _out1022;
                DCOMP.COMP.FromOwnership(r, _4619_recOwned, expectedOwnership, out _out1021, out _out1022);
                r = _out1021;
                resultingOwnership = _out1022;
                readIdents = _4620_recIdents;
              }
            } else {
              DAST._IType _4621___mcc_h406 = _source254.dtor_baseType;
              DAST._INewtypeRange _4622___mcc_h407 = _source254.dtor_range;
              bool _4623___mcc_h408 = _source254.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4624___mcc_h409 = _source254.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4625_attributes = _4624___mcc_h409;
              bool _4626_erase = _4623___mcc_h408;
              DAST._INewtypeRange _4627_range = _4622___mcc_h407;
              DAST._IType _4628_b = _4621___mcc_h406;
              {
                Std.Wrappers._IOption<RAST._IType> _4629_nativeToType;
                _4629_nativeToType = DCOMP.COMP.NewtypeToRustType(_4628_b, _4627_range);
                if (object.Equals(_3741_fromTpe, _4628_b)) {
                  RAST._IExpr _4630_recursiveGen;
                  DCOMP._IOwnership _4631_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4632_recIdents;
                  RAST._IExpr _out1023;
                  DCOMP._IOwnership _out1024;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1025;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1023, out _out1024, out _out1025);
                  _4630_recursiveGen = _out1023;
                  _4631_recOwned = _out1024;
                  _4632_recIdents = _out1025;
                  readIdents = _4632_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source255 = _4629_nativeToType;
                  if (_source255.is_None) {
                    if (_4626_erase) {
                      r = _4630_recursiveGen;
                    } else {
                      RAST._IType _4633_rhsType;
                      RAST._IType _out1026;
                      _out1026 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _4633_rhsType = _out1026;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4633_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4630_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1027;
                    DCOMP._IOwnership _out1028;
                    DCOMP.COMP.FromOwnership(r, _4631_recOwned, expectedOwnership, out _out1027, out _out1028);
                    r = _out1027;
                    resultingOwnership = _out1028;
                  } else {
                    RAST._IType _4634___mcc_h1591 = _source255.dtor_value;
                    RAST._IType _4635_v = _4634___mcc_h1591;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4630_recursiveGen, RAST.Expr.create_ExprFromType(_4635_v)));
                    RAST._IExpr _out1029;
                    DCOMP._IOwnership _out1030;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1029, out _out1030);
                    r = _out1029;
                    resultingOwnership = _out1030;
                  }
                } else {
                  if ((_4629_nativeToType).is_Some) {
                    DAST._IType _source256 = _3741_fromTpe;
                    if (_source256.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4636___mcc_h1592 = _source256.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4637___mcc_h1593 = _source256.dtor_typeArgs;
                      DAST._IResolvedType _4638___mcc_h1594 = _source256.dtor_resolved;
                      DAST._IResolvedType _source257 = _4638___mcc_h1594;
                      if (_source257.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4639___mcc_h1598 = _source257.dtor_datatypeType;
                      } else if (_source257.is_Datatype) {
                        DAST._IDatatypeType _4640___mcc_h1600 = _source257.dtor_datatypeType;
                      } else if (_source257.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4641___mcc_h1602 = _source257.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4642___mcc_h1603 = _source257.dtor_attributes;
                      } else {
                        DAST._IType _4643___mcc_h1606 = _source257.dtor_baseType;
                        DAST._INewtypeRange _4644___mcc_h1607 = _source257.dtor_range;
                        bool _4645___mcc_h1608 = _source257.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4646___mcc_h1609 = _source257.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4647_attributes0 = _4646___mcc_h1609;
                        bool _4648_erase0 = _4645___mcc_h1608;
                        DAST._INewtypeRange _4649_range0 = _4644___mcc_h1607;
                        DAST._IType _4650_b0 = _4643___mcc_h1606;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4651_nativeFromType;
                          _4651_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4650_b0, _4649_range0);
                          if ((_4651_nativeFromType).is_Some) {
                            RAST._IExpr _4652_recursiveGen;
                            DCOMP._IOwnership _4653_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4654_recIdents;
                            RAST._IExpr _out1031;
                            DCOMP._IOwnership _out1032;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1033;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1031, out _out1032, out _out1033);
                            _4652_recursiveGen = _out1031;
                            _4653_recOwned = _out1032;
                            _4654_recIdents = _out1033;
                            RAST._IExpr _out1034;
                            DCOMP._IOwnership _out1035;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4652_recursiveGen, (_4629_nativeToType).dtor_value), _4653_recOwned, expectedOwnership, out _out1034, out _out1035);
                            r = _out1034;
                            resultingOwnership = _out1035;
                            readIdents = _4654_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source256.is_Nullable) {
                      DAST._IType _4655___mcc_h1614 = _source256.dtor_Nullable_a0;
                    } else if (_source256.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4656___mcc_h1616 = _source256.dtor_Tuple_a0;
                    } else if (_source256.is_Array) {
                      DAST._IType _4657___mcc_h1618 = _source256.dtor_element;
                      BigInteger _4658___mcc_h1619 = _source256.dtor_dims;
                    } else if (_source256.is_Seq) {
                      DAST._IType _4659___mcc_h1622 = _source256.dtor_element;
                    } else if (_source256.is_Set) {
                      DAST._IType _4660___mcc_h1624 = _source256.dtor_element;
                    } else if (_source256.is_Multiset) {
                      DAST._IType _4661___mcc_h1626 = _source256.dtor_element;
                    } else if (_source256.is_Map) {
                      DAST._IType _4662___mcc_h1628 = _source256.dtor_key;
                      DAST._IType _4663___mcc_h1629 = _source256.dtor_value;
                    } else if (_source256.is_SetBuilder) {
                      DAST._IType _4664___mcc_h1632 = _source256.dtor_element;
                    } else if (_source256.is_MapBuilder) {
                      DAST._IType _4665___mcc_h1634 = _source256.dtor_key;
                      DAST._IType _4666___mcc_h1635 = _source256.dtor_value;
                    } else if (_source256.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4667___mcc_h1638 = _source256.dtor_args;
                      DAST._IType _4668___mcc_h1639 = _source256.dtor_result;
                    } else if (_source256.is_Primitive) {
                      DAST._IPrimitive _4669___mcc_h1642 = _source256.dtor_Primitive_a0;
                    } else if (_source256.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4670___mcc_h1644 = _source256.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4671___mcc_h1646 = _source256.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4672_recursiveGen;
                      DCOMP._IOwnership _4673_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4674_recIdents;
                      RAST._IExpr _out1036;
                      DCOMP._IOwnership _out1037;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1038;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1036, out _out1037, out _out1038);
                      _4672_recursiveGen = _out1036;
                      _4673_recOwned = _out1037;
                      _4674_recIdents = _out1038;
                      RAST._IExpr _out1039;
                      DCOMP._IOwnership _out1040;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4672_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4629_nativeToType).dtor_value), _4673_recOwned, expectedOwnership, out _out1039, out _out1040);
                      r = _out1039;
                      resultingOwnership = _out1040;
                      readIdents = _4674_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1041;
                  DCOMP._IOwnership _out1042;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1043;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4628_b), _4628_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1041, out _out1042, out _out1043);
                  r = _out1041;
                  resultingOwnership = _out1042;
                  readIdents = _out1043;
                }
              }
            }
          } else if (_source253.is_Nullable) {
            DAST._IType _4675___mcc_h414 = _source253.dtor_Nullable_a0;
            {
              RAST._IExpr _4676_recursiveGen;
              DCOMP._IOwnership _4677_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4678_recIdents;
              RAST._IExpr _out1044;
              DCOMP._IOwnership _out1045;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1046;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1044, out _out1045, out _out1046);
              _4676_recursiveGen = _out1044;
              _4677_recOwned = _out1045;
              _4678_recIdents = _out1046;
              r = _4676_recursiveGen;
              if (object.Equals(_4677_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1047;
              DCOMP._IOwnership _out1048;
              DCOMP.COMP.FromOwnership(r, _4677_recOwned, expectedOwnership, out _out1047, out _out1048);
              r = _out1047;
              resultingOwnership = _out1048;
              readIdents = _4678_recIdents;
            }
          } else if (_source253.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4679___mcc_h416 = _source253.dtor_Tuple_a0;
            {
              RAST._IType _4680_fromTpeGen;
              RAST._IType _out1049;
              _out1049 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4680_fromTpeGen = _out1049;
              RAST._IType _4681_toTpeGen;
              RAST._IType _out1050;
              _out1050 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4681_toTpeGen = _out1050;
              RAST._IExpr _4682_recursiveGen;
              DCOMP._IOwnership _4683_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4684_recIdents;
              RAST._IExpr _out1051;
              DCOMP._IOwnership _out1052;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1053;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1051, out _out1052, out _out1053);
              _4682_recursiveGen = _out1051;
              _4683_recOwned = _out1052;
              _4684_recIdents = _out1053;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4682_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4680_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4681_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1054;
              DCOMP._IOwnership _out1055;
              DCOMP.COMP.FromOwnership(r, _4683_recOwned, expectedOwnership, out _out1054, out _out1055);
              r = _out1054;
              resultingOwnership = _out1055;
              readIdents = _4684_recIdents;
            }
          } else if (_source253.is_Array) {
            DAST._IType _4685___mcc_h418 = _source253.dtor_element;
            BigInteger _4686___mcc_h419 = _source253.dtor_dims;
            {
              RAST._IType _4687_fromTpeGen;
              RAST._IType _out1056;
              _out1056 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4687_fromTpeGen = _out1056;
              RAST._IType _4688_toTpeGen;
              RAST._IType _out1057;
              _out1057 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4688_toTpeGen = _out1057;
              RAST._IExpr _4689_recursiveGen;
              DCOMP._IOwnership _4690_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4691_recIdents;
              RAST._IExpr _out1058;
              DCOMP._IOwnership _out1059;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1060;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1058, out _out1059, out _out1060);
              _4689_recursiveGen = _out1058;
              _4690_recOwned = _out1059;
              _4691_recIdents = _out1060;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4689_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4687_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4688_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1061;
              DCOMP._IOwnership _out1062;
              DCOMP.COMP.FromOwnership(r, _4690_recOwned, expectedOwnership, out _out1061, out _out1062);
              r = _out1061;
              resultingOwnership = _out1062;
              readIdents = _4691_recIdents;
            }
          } else if (_source253.is_Seq) {
            DAST._IType _4692___mcc_h422 = _source253.dtor_element;
            {
              RAST._IType _4693_fromTpeGen;
              RAST._IType _out1063;
              _out1063 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4693_fromTpeGen = _out1063;
              RAST._IType _4694_toTpeGen;
              RAST._IType _out1064;
              _out1064 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4694_toTpeGen = _out1064;
              RAST._IExpr _4695_recursiveGen;
              DCOMP._IOwnership _4696_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4697_recIdents;
              RAST._IExpr _out1065;
              DCOMP._IOwnership _out1066;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1067;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1065, out _out1066, out _out1067);
              _4695_recursiveGen = _out1065;
              _4696_recOwned = _out1066;
              _4697_recIdents = _out1067;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4695_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4693_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4694_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1068;
              DCOMP._IOwnership _out1069;
              DCOMP.COMP.FromOwnership(r, _4696_recOwned, expectedOwnership, out _out1068, out _out1069);
              r = _out1068;
              resultingOwnership = _out1069;
              readIdents = _4697_recIdents;
            }
          } else if (_source253.is_Set) {
            DAST._IType _4698___mcc_h424 = _source253.dtor_element;
            {
              RAST._IType _4699_fromTpeGen;
              RAST._IType _out1070;
              _out1070 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4699_fromTpeGen = _out1070;
              RAST._IType _4700_toTpeGen;
              RAST._IType _out1071;
              _out1071 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4700_toTpeGen = _out1071;
              RAST._IExpr _4701_recursiveGen;
              DCOMP._IOwnership _4702_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4703_recIdents;
              RAST._IExpr _out1072;
              DCOMP._IOwnership _out1073;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1074;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1072, out _out1073, out _out1074);
              _4701_recursiveGen = _out1072;
              _4702_recOwned = _out1073;
              _4703_recIdents = _out1074;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4701_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4699_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4700_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1075;
              DCOMP._IOwnership _out1076;
              DCOMP.COMP.FromOwnership(r, _4702_recOwned, expectedOwnership, out _out1075, out _out1076);
              r = _out1075;
              resultingOwnership = _out1076;
              readIdents = _4703_recIdents;
            }
          } else if (_source253.is_Multiset) {
            DAST._IType _4704___mcc_h426 = _source253.dtor_element;
            {
              RAST._IType _4705_fromTpeGen;
              RAST._IType _out1077;
              _out1077 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4705_fromTpeGen = _out1077;
              RAST._IType _4706_toTpeGen;
              RAST._IType _out1078;
              _out1078 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4706_toTpeGen = _out1078;
              RAST._IExpr _4707_recursiveGen;
              DCOMP._IOwnership _4708_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4709_recIdents;
              RAST._IExpr _out1079;
              DCOMP._IOwnership _out1080;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1081;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1079, out _out1080, out _out1081);
              _4707_recursiveGen = _out1079;
              _4708_recOwned = _out1080;
              _4709_recIdents = _out1081;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4707_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4705_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4706_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1082;
              DCOMP._IOwnership _out1083;
              DCOMP.COMP.FromOwnership(r, _4708_recOwned, expectedOwnership, out _out1082, out _out1083);
              r = _out1082;
              resultingOwnership = _out1083;
              readIdents = _4709_recIdents;
            }
          } else if (_source253.is_Map) {
            DAST._IType _4710___mcc_h428 = _source253.dtor_key;
            DAST._IType _4711___mcc_h429 = _source253.dtor_value;
            {
              RAST._IType _4712_fromTpeGen;
              RAST._IType _out1084;
              _out1084 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4712_fromTpeGen = _out1084;
              RAST._IType _4713_toTpeGen;
              RAST._IType _out1085;
              _out1085 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4713_toTpeGen = _out1085;
              RAST._IExpr _4714_recursiveGen;
              DCOMP._IOwnership _4715_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4716_recIdents;
              RAST._IExpr _out1086;
              DCOMP._IOwnership _out1087;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1088;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1086, out _out1087, out _out1088);
              _4714_recursiveGen = _out1086;
              _4715_recOwned = _out1087;
              _4716_recIdents = _out1088;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4714_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4712_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4713_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1089;
              DCOMP._IOwnership _out1090;
              DCOMP.COMP.FromOwnership(r, _4715_recOwned, expectedOwnership, out _out1089, out _out1090);
              r = _out1089;
              resultingOwnership = _out1090;
              readIdents = _4716_recIdents;
            }
          } else if (_source253.is_SetBuilder) {
            DAST._IType _4717___mcc_h432 = _source253.dtor_element;
            {
              RAST._IType _4718_fromTpeGen;
              RAST._IType _out1091;
              _out1091 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4718_fromTpeGen = _out1091;
              RAST._IType _4719_toTpeGen;
              RAST._IType _out1092;
              _out1092 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4719_toTpeGen = _out1092;
              RAST._IExpr _4720_recursiveGen;
              DCOMP._IOwnership _4721_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4722_recIdents;
              RAST._IExpr _out1093;
              DCOMP._IOwnership _out1094;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1095;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1093, out _out1094, out _out1095);
              _4720_recursiveGen = _out1093;
              _4721_recOwned = _out1094;
              _4722_recIdents = _out1095;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4720_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4718_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4719_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1096;
              DCOMP._IOwnership _out1097;
              DCOMP.COMP.FromOwnership(r, _4721_recOwned, expectedOwnership, out _out1096, out _out1097);
              r = _out1096;
              resultingOwnership = _out1097;
              readIdents = _4722_recIdents;
            }
          } else if (_source253.is_MapBuilder) {
            DAST._IType _4723___mcc_h434 = _source253.dtor_key;
            DAST._IType _4724___mcc_h435 = _source253.dtor_value;
            {
              RAST._IType _4725_fromTpeGen;
              RAST._IType _out1098;
              _out1098 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4725_fromTpeGen = _out1098;
              RAST._IType _4726_toTpeGen;
              RAST._IType _out1099;
              _out1099 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4726_toTpeGen = _out1099;
              RAST._IExpr _4727_recursiveGen;
              DCOMP._IOwnership _4728_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4729_recIdents;
              RAST._IExpr _out1100;
              DCOMP._IOwnership _out1101;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1102;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1100, out _out1101, out _out1102);
              _4727_recursiveGen = _out1100;
              _4728_recOwned = _out1101;
              _4729_recIdents = _out1102;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4727_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4725_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4726_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1103;
              DCOMP._IOwnership _out1104;
              DCOMP.COMP.FromOwnership(r, _4728_recOwned, expectedOwnership, out _out1103, out _out1104);
              r = _out1103;
              resultingOwnership = _out1104;
              readIdents = _4729_recIdents;
            }
          } else if (_source253.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4730___mcc_h438 = _source253.dtor_args;
            DAST._IType _4731___mcc_h439 = _source253.dtor_result;
            {
              RAST._IType _4732_fromTpeGen;
              RAST._IType _out1105;
              _out1105 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4732_fromTpeGen = _out1105;
              RAST._IType _4733_toTpeGen;
              RAST._IType _out1106;
              _out1106 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4733_toTpeGen = _out1106;
              RAST._IExpr _4734_recursiveGen;
              DCOMP._IOwnership _4735_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4736_recIdents;
              RAST._IExpr _out1107;
              DCOMP._IOwnership _out1108;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1109;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1107, out _out1108, out _out1109);
              _4734_recursiveGen = _out1107;
              _4735_recOwned = _out1108;
              _4736_recIdents = _out1109;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4734_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4732_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4733_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1110;
              DCOMP._IOwnership _out1111;
              DCOMP.COMP.FromOwnership(r, _4735_recOwned, expectedOwnership, out _out1110, out _out1111);
              r = _out1110;
              resultingOwnership = _out1111;
              readIdents = _4736_recIdents;
            }
          } else if (_source253.is_Primitive) {
            DAST._IPrimitive _4737___mcc_h442 = _source253.dtor_Primitive_a0;
            {
              RAST._IType _4738_fromTpeGen;
              RAST._IType _out1112;
              _out1112 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4738_fromTpeGen = _out1112;
              RAST._IType _4739_toTpeGen;
              RAST._IType _out1113;
              _out1113 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4739_toTpeGen = _out1113;
              RAST._IExpr _4740_recursiveGen;
              DCOMP._IOwnership _4741_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4742_recIdents;
              RAST._IExpr _out1114;
              DCOMP._IOwnership _out1115;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1116;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1114, out _out1115, out _out1116);
              _4740_recursiveGen = _out1114;
              _4741_recOwned = _out1115;
              _4742_recIdents = _out1116;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4740_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4738_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4739_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1117;
              DCOMP._IOwnership _out1118;
              DCOMP.COMP.FromOwnership(r, _4741_recOwned, expectedOwnership, out _out1117, out _out1118);
              r = _out1117;
              resultingOwnership = _out1118;
              readIdents = _4742_recIdents;
            }
          } else if (_source253.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4743___mcc_h444 = _source253.dtor_Passthrough_a0;
            {
              RAST._IType _4744_fromTpeGen;
              RAST._IType _out1119;
              _out1119 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4744_fromTpeGen = _out1119;
              RAST._IType _4745_toTpeGen;
              RAST._IType _out1120;
              _out1120 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4745_toTpeGen = _out1120;
              RAST._IExpr _4746_recursiveGen;
              DCOMP._IOwnership _4747_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4748_recIdents;
              RAST._IExpr _out1121;
              DCOMP._IOwnership _out1122;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1123;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1121, out _out1122, out _out1123);
              _4746_recursiveGen = _out1121;
              _4747_recOwned = _out1122;
              _4748_recIdents = _out1123;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4746_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4744_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4745_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1124;
              DCOMP._IOwnership _out1125;
              DCOMP.COMP.FromOwnership(r, _4747_recOwned, expectedOwnership, out _out1124, out _out1125);
              r = _out1124;
              resultingOwnership = _out1125;
              readIdents = _4748_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4749___mcc_h446 = _source253.dtor_TypeArg_a0;
            {
              RAST._IType _4750_fromTpeGen;
              RAST._IType _out1126;
              _out1126 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4750_fromTpeGen = _out1126;
              RAST._IType _4751_toTpeGen;
              RAST._IType _out1127;
              _out1127 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4751_toTpeGen = _out1127;
              RAST._IExpr _4752_recursiveGen;
              DCOMP._IOwnership _4753_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4754_recIdents;
              RAST._IExpr _out1128;
              DCOMP._IOwnership _out1129;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1130;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1128, out _out1129, out _out1130);
              _4752_recursiveGen = _out1128;
              _4753_recOwned = _out1129;
              _4754_recIdents = _out1130;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4752_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4750_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4751_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1131;
              DCOMP._IOwnership _out1132;
              DCOMP.COMP.FromOwnership(r, _4753_recOwned, expectedOwnership, out _out1131, out _out1132);
              r = _out1131;
              resultingOwnership = _out1132;
              readIdents = _4754_recIdents;
            }
          }
        } else if (_source214.is_Array) {
          DAST._IType _4755___mcc_h448 = _source214.dtor_element;
          BigInteger _4756___mcc_h449 = _source214.dtor_dims;
          DAST._IType _source258 = _3747___mcc_h1;
          if (_source258.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4757___mcc_h456 = _source258.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4758___mcc_h457 = _source258.dtor_typeArgs;
            DAST._IResolvedType _4759___mcc_h458 = _source258.dtor_resolved;
            DAST._IResolvedType _source259 = _4759___mcc_h458;
            if (_source259.is_AllocatedDatatype) {
              DAST._IDatatypeType _4760___mcc_h462 = _source259.dtor_datatypeType;
              {
                RAST._IType _4761_fromTpeGen;
                RAST._IType _out1133;
                _out1133 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4761_fromTpeGen = _out1133;
                RAST._IType _4762_toTpeGen;
                RAST._IType _out1134;
                _out1134 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4762_toTpeGen = _out1134;
                RAST._IExpr _4763_recursiveGen;
                DCOMP._IOwnership _4764_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4765_recIdents;
                RAST._IExpr _out1135;
                DCOMP._IOwnership _out1136;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1137;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1135, out _out1136, out _out1137);
                _4763_recursiveGen = _out1135;
                _4764_recOwned = _out1136;
                _4765_recIdents = _out1137;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4763_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4761_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4762_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1138;
                DCOMP._IOwnership _out1139;
                DCOMP.COMP.FromOwnership(r, _4764_recOwned, expectedOwnership, out _out1138, out _out1139);
                r = _out1138;
                resultingOwnership = _out1139;
                readIdents = _4765_recIdents;
              }
            } else if (_source259.is_Datatype) {
              DAST._IDatatypeType _4766___mcc_h464 = _source259.dtor_datatypeType;
              {
                RAST._IType _4767_fromTpeGen;
                RAST._IType _out1140;
                _out1140 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4767_fromTpeGen = _out1140;
                RAST._IType _4768_toTpeGen;
                RAST._IType _out1141;
                _out1141 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4768_toTpeGen = _out1141;
                RAST._IExpr _4769_recursiveGen;
                DCOMP._IOwnership _4770_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4771_recIdents;
                RAST._IExpr _out1142;
                DCOMP._IOwnership _out1143;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1144;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1142, out _out1143, out _out1144);
                _4769_recursiveGen = _out1142;
                _4770_recOwned = _out1143;
                _4771_recIdents = _out1144;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4769_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4767_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4768_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1145;
                DCOMP._IOwnership _out1146;
                DCOMP.COMP.FromOwnership(r, _4770_recOwned, expectedOwnership, out _out1145, out _out1146);
                r = _out1145;
                resultingOwnership = _out1146;
                readIdents = _4771_recIdents;
              }
            } else if (_source259.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4772___mcc_h466 = _source259.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4773___mcc_h467 = _source259.dtor_attributes;
              {
                RAST._IType _4774_fromTpeGen;
                RAST._IType _out1147;
                _out1147 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4774_fromTpeGen = _out1147;
                RAST._IType _4775_toTpeGen;
                RAST._IType _out1148;
                _out1148 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4775_toTpeGen = _out1148;
                RAST._IExpr _4776_recursiveGen;
                DCOMP._IOwnership _4777_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4778_recIdents;
                RAST._IExpr _out1149;
                DCOMP._IOwnership _out1150;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1151;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1149, out _out1150, out _out1151);
                _4776_recursiveGen = _out1149;
                _4777_recOwned = _out1150;
                _4778_recIdents = _out1151;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4776_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4774_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4775_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1152;
                DCOMP._IOwnership _out1153;
                DCOMP.COMP.FromOwnership(r, _4777_recOwned, expectedOwnership, out _out1152, out _out1153);
                r = _out1152;
                resultingOwnership = _out1153;
                readIdents = _4778_recIdents;
              }
            } else {
              DAST._IType _4779___mcc_h470 = _source259.dtor_baseType;
              DAST._INewtypeRange _4780___mcc_h471 = _source259.dtor_range;
              bool _4781___mcc_h472 = _source259.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4782___mcc_h473 = _source259.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4783_attributes = _4782___mcc_h473;
              bool _4784_erase = _4781___mcc_h472;
              DAST._INewtypeRange _4785_range = _4780___mcc_h471;
              DAST._IType _4786_b = _4779___mcc_h470;
              {
                Std.Wrappers._IOption<RAST._IType> _4787_nativeToType;
                _4787_nativeToType = DCOMP.COMP.NewtypeToRustType(_4786_b, _4785_range);
                if (object.Equals(_3741_fromTpe, _4786_b)) {
                  RAST._IExpr _4788_recursiveGen;
                  DCOMP._IOwnership _4789_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4790_recIdents;
                  RAST._IExpr _out1154;
                  DCOMP._IOwnership _out1155;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1156;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1154, out _out1155, out _out1156);
                  _4788_recursiveGen = _out1154;
                  _4789_recOwned = _out1155;
                  _4790_recIdents = _out1156;
                  readIdents = _4790_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source260 = _4787_nativeToType;
                  if (_source260.is_None) {
                    if (_4784_erase) {
                      r = _4788_recursiveGen;
                    } else {
                      RAST._IType _4791_rhsType;
                      RAST._IType _out1157;
                      _out1157 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _4791_rhsType = _out1157;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4791_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4788_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1158;
                    DCOMP._IOwnership _out1159;
                    DCOMP.COMP.FromOwnership(r, _4789_recOwned, expectedOwnership, out _out1158, out _out1159);
                    r = _out1158;
                    resultingOwnership = _out1159;
                  } else {
                    RAST._IType _4792___mcc_h1648 = _source260.dtor_value;
                    RAST._IType _4793_v = _4792___mcc_h1648;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4788_recursiveGen, RAST.Expr.create_ExprFromType(_4793_v)));
                    RAST._IExpr _out1160;
                    DCOMP._IOwnership _out1161;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1160, out _out1161);
                    r = _out1160;
                    resultingOwnership = _out1161;
                  }
                } else {
                  if ((_4787_nativeToType).is_Some) {
                    DAST._IType _source261 = _3741_fromTpe;
                    if (_source261.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4794___mcc_h1649 = _source261.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4795___mcc_h1650 = _source261.dtor_typeArgs;
                      DAST._IResolvedType _4796___mcc_h1651 = _source261.dtor_resolved;
                      DAST._IResolvedType _source262 = _4796___mcc_h1651;
                      if (_source262.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4797___mcc_h1655 = _source262.dtor_datatypeType;
                      } else if (_source262.is_Datatype) {
                        DAST._IDatatypeType _4798___mcc_h1657 = _source262.dtor_datatypeType;
                      } else if (_source262.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4799___mcc_h1659 = _source262.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4800___mcc_h1660 = _source262.dtor_attributes;
                      } else {
                        DAST._IType _4801___mcc_h1663 = _source262.dtor_baseType;
                        DAST._INewtypeRange _4802___mcc_h1664 = _source262.dtor_range;
                        bool _4803___mcc_h1665 = _source262.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4804___mcc_h1666 = _source262.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4805_attributes0 = _4804___mcc_h1666;
                        bool _4806_erase0 = _4803___mcc_h1665;
                        DAST._INewtypeRange _4807_range0 = _4802___mcc_h1664;
                        DAST._IType _4808_b0 = _4801___mcc_h1663;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4809_nativeFromType;
                          _4809_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4808_b0, _4807_range0);
                          if ((_4809_nativeFromType).is_Some) {
                            RAST._IExpr _4810_recursiveGen;
                            DCOMP._IOwnership _4811_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4812_recIdents;
                            RAST._IExpr _out1162;
                            DCOMP._IOwnership _out1163;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1164;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1162, out _out1163, out _out1164);
                            _4810_recursiveGen = _out1162;
                            _4811_recOwned = _out1163;
                            _4812_recIdents = _out1164;
                            RAST._IExpr _out1165;
                            DCOMP._IOwnership _out1166;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4810_recursiveGen, (_4787_nativeToType).dtor_value), _4811_recOwned, expectedOwnership, out _out1165, out _out1166);
                            r = _out1165;
                            resultingOwnership = _out1166;
                            readIdents = _4812_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source261.is_Nullable) {
                      DAST._IType _4813___mcc_h1671 = _source261.dtor_Nullable_a0;
                    } else if (_source261.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4814___mcc_h1673 = _source261.dtor_Tuple_a0;
                    } else if (_source261.is_Array) {
                      DAST._IType _4815___mcc_h1675 = _source261.dtor_element;
                      BigInteger _4816___mcc_h1676 = _source261.dtor_dims;
                    } else if (_source261.is_Seq) {
                      DAST._IType _4817___mcc_h1679 = _source261.dtor_element;
                    } else if (_source261.is_Set) {
                      DAST._IType _4818___mcc_h1681 = _source261.dtor_element;
                    } else if (_source261.is_Multiset) {
                      DAST._IType _4819___mcc_h1683 = _source261.dtor_element;
                    } else if (_source261.is_Map) {
                      DAST._IType _4820___mcc_h1685 = _source261.dtor_key;
                      DAST._IType _4821___mcc_h1686 = _source261.dtor_value;
                    } else if (_source261.is_SetBuilder) {
                      DAST._IType _4822___mcc_h1689 = _source261.dtor_element;
                    } else if (_source261.is_MapBuilder) {
                      DAST._IType _4823___mcc_h1691 = _source261.dtor_key;
                      DAST._IType _4824___mcc_h1692 = _source261.dtor_value;
                    } else if (_source261.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4825___mcc_h1695 = _source261.dtor_args;
                      DAST._IType _4826___mcc_h1696 = _source261.dtor_result;
                    } else if (_source261.is_Primitive) {
                      DAST._IPrimitive _4827___mcc_h1699 = _source261.dtor_Primitive_a0;
                    } else if (_source261.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4828___mcc_h1701 = _source261.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4829___mcc_h1703 = _source261.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4830_recursiveGen;
                      DCOMP._IOwnership _4831_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4832_recIdents;
                      RAST._IExpr _out1167;
                      DCOMP._IOwnership _out1168;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1169;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1167, out _out1168, out _out1169);
                      _4830_recursiveGen = _out1167;
                      _4831_recOwned = _out1168;
                      _4832_recIdents = _out1169;
                      RAST._IExpr _out1170;
                      DCOMP._IOwnership _out1171;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4830_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4787_nativeToType).dtor_value), _4831_recOwned, expectedOwnership, out _out1170, out _out1171);
                      r = _out1170;
                      resultingOwnership = _out1171;
                      readIdents = _4832_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1172;
                  DCOMP._IOwnership _out1173;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1174;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4786_b), _4786_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1172, out _out1173, out _out1174);
                  r = _out1172;
                  resultingOwnership = _out1173;
                  readIdents = _out1174;
                }
              }
            }
          } else if (_source258.is_Nullable) {
            DAST._IType _4833___mcc_h478 = _source258.dtor_Nullable_a0;
            {
              RAST._IExpr _4834_recursiveGen;
              DCOMP._IOwnership _4835_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4836_recIdents;
              RAST._IExpr _out1175;
              DCOMP._IOwnership _out1176;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1177;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1175, out _out1176, out _out1177);
              _4834_recursiveGen = _out1175;
              _4835_recOwned = _out1176;
              _4836_recIdents = _out1177;
              r = _4834_recursiveGen;
              if (object.Equals(_4835_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1178;
              DCOMP._IOwnership _out1179;
              DCOMP.COMP.FromOwnership(r, _4835_recOwned, expectedOwnership, out _out1178, out _out1179);
              r = _out1178;
              resultingOwnership = _out1179;
              readIdents = _4836_recIdents;
            }
          } else if (_source258.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4837___mcc_h480 = _source258.dtor_Tuple_a0;
            {
              RAST._IType _4838_fromTpeGen;
              RAST._IType _out1180;
              _out1180 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4838_fromTpeGen = _out1180;
              RAST._IType _4839_toTpeGen;
              RAST._IType _out1181;
              _out1181 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4839_toTpeGen = _out1181;
              RAST._IExpr _4840_recursiveGen;
              DCOMP._IOwnership _4841_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4842_recIdents;
              RAST._IExpr _out1182;
              DCOMP._IOwnership _out1183;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1184;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1182, out _out1183, out _out1184);
              _4840_recursiveGen = _out1182;
              _4841_recOwned = _out1183;
              _4842_recIdents = _out1184;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4840_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4838_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4839_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1185;
              DCOMP._IOwnership _out1186;
              DCOMP.COMP.FromOwnership(r, _4841_recOwned, expectedOwnership, out _out1185, out _out1186);
              r = _out1185;
              resultingOwnership = _out1186;
              readIdents = _4842_recIdents;
            }
          } else if (_source258.is_Array) {
            DAST._IType _4843___mcc_h482 = _source258.dtor_element;
            BigInteger _4844___mcc_h483 = _source258.dtor_dims;
            {
              RAST._IType _4845_fromTpeGen;
              RAST._IType _out1187;
              _out1187 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4845_fromTpeGen = _out1187;
              RAST._IType _4846_toTpeGen;
              RAST._IType _out1188;
              _out1188 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4846_toTpeGen = _out1188;
              RAST._IExpr _4847_recursiveGen;
              DCOMP._IOwnership _4848_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4849_recIdents;
              RAST._IExpr _out1189;
              DCOMP._IOwnership _out1190;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1191;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1189, out _out1190, out _out1191);
              _4847_recursiveGen = _out1189;
              _4848_recOwned = _out1190;
              _4849_recIdents = _out1191;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4847_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4845_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4846_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1192;
              DCOMP._IOwnership _out1193;
              DCOMP.COMP.FromOwnership(r, _4848_recOwned, expectedOwnership, out _out1192, out _out1193);
              r = _out1192;
              resultingOwnership = _out1193;
              readIdents = _4849_recIdents;
            }
          } else if (_source258.is_Seq) {
            DAST._IType _4850___mcc_h486 = _source258.dtor_element;
            {
              RAST._IType _4851_fromTpeGen;
              RAST._IType _out1194;
              _out1194 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4851_fromTpeGen = _out1194;
              RAST._IType _4852_toTpeGen;
              RAST._IType _out1195;
              _out1195 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4852_toTpeGen = _out1195;
              RAST._IExpr _4853_recursiveGen;
              DCOMP._IOwnership _4854_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4855_recIdents;
              RAST._IExpr _out1196;
              DCOMP._IOwnership _out1197;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1198;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1196, out _out1197, out _out1198);
              _4853_recursiveGen = _out1196;
              _4854_recOwned = _out1197;
              _4855_recIdents = _out1198;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4853_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4851_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4852_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1199;
              DCOMP._IOwnership _out1200;
              DCOMP.COMP.FromOwnership(r, _4854_recOwned, expectedOwnership, out _out1199, out _out1200);
              r = _out1199;
              resultingOwnership = _out1200;
              readIdents = _4855_recIdents;
            }
          } else if (_source258.is_Set) {
            DAST._IType _4856___mcc_h488 = _source258.dtor_element;
            {
              RAST._IType _4857_fromTpeGen;
              RAST._IType _out1201;
              _out1201 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4857_fromTpeGen = _out1201;
              RAST._IType _4858_toTpeGen;
              RAST._IType _out1202;
              _out1202 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4858_toTpeGen = _out1202;
              RAST._IExpr _4859_recursiveGen;
              DCOMP._IOwnership _4860_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4861_recIdents;
              RAST._IExpr _out1203;
              DCOMP._IOwnership _out1204;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1205;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1203, out _out1204, out _out1205);
              _4859_recursiveGen = _out1203;
              _4860_recOwned = _out1204;
              _4861_recIdents = _out1205;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4859_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4857_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4858_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1206;
              DCOMP._IOwnership _out1207;
              DCOMP.COMP.FromOwnership(r, _4860_recOwned, expectedOwnership, out _out1206, out _out1207);
              r = _out1206;
              resultingOwnership = _out1207;
              readIdents = _4861_recIdents;
            }
          } else if (_source258.is_Multiset) {
            DAST._IType _4862___mcc_h490 = _source258.dtor_element;
            {
              RAST._IType _4863_fromTpeGen;
              RAST._IType _out1208;
              _out1208 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4863_fromTpeGen = _out1208;
              RAST._IType _4864_toTpeGen;
              RAST._IType _out1209;
              _out1209 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4864_toTpeGen = _out1209;
              RAST._IExpr _4865_recursiveGen;
              DCOMP._IOwnership _4866_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4867_recIdents;
              RAST._IExpr _out1210;
              DCOMP._IOwnership _out1211;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1212;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1210, out _out1211, out _out1212);
              _4865_recursiveGen = _out1210;
              _4866_recOwned = _out1211;
              _4867_recIdents = _out1212;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4865_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4863_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4864_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1213;
              DCOMP._IOwnership _out1214;
              DCOMP.COMP.FromOwnership(r, _4866_recOwned, expectedOwnership, out _out1213, out _out1214);
              r = _out1213;
              resultingOwnership = _out1214;
              readIdents = _4867_recIdents;
            }
          } else if (_source258.is_Map) {
            DAST._IType _4868___mcc_h492 = _source258.dtor_key;
            DAST._IType _4869___mcc_h493 = _source258.dtor_value;
            {
              RAST._IType _4870_fromTpeGen;
              RAST._IType _out1215;
              _out1215 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4870_fromTpeGen = _out1215;
              RAST._IType _4871_toTpeGen;
              RAST._IType _out1216;
              _out1216 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4871_toTpeGen = _out1216;
              RAST._IExpr _4872_recursiveGen;
              DCOMP._IOwnership _4873_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4874_recIdents;
              RAST._IExpr _out1217;
              DCOMP._IOwnership _out1218;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1219;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1217, out _out1218, out _out1219);
              _4872_recursiveGen = _out1217;
              _4873_recOwned = _out1218;
              _4874_recIdents = _out1219;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4872_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4870_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4871_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1220;
              DCOMP._IOwnership _out1221;
              DCOMP.COMP.FromOwnership(r, _4873_recOwned, expectedOwnership, out _out1220, out _out1221);
              r = _out1220;
              resultingOwnership = _out1221;
              readIdents = _4874_recIdents;
            }
          } else if (_source258.is_SetBuilder) {
            DAST._IType _4875___mcc_h496 = _source258.dtor_element;
            {
              RAST._IType _4876_fromTpeGen;
              RAST._IType _out1222;
              _out1222 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4876_fromTpeGen = _out1222;
              RAST._IType _4877_toTpeGen;
              RAST._IType _out1223;
              _out1223 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4877_toTpeGen = _out1223;
              RAST._IExpr _4878_recursiveGen;
              DCOMP._IOwnership _4879_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4880_recIdents;
              RAST._IExpr _out1224;
              DCOMP._IOwnership _out1225;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1226;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1224, out _out1225, out _out1226);
              _4878_recursiveGen = _out1224;
              _4879_recOwned = _out1225;
              _4880_recIdents = _out1226;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4878_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4876_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4877_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1227;
              DCOMP._IOwnership _out1228;
              DCOMP.COMP.FromOwnership(r, _4879_recOwned, expectedOwnership, out _out1227, out _out1228);
              r = _out1227;
              resultingOwnership = _out1228;
              readIdents = _4880_recIdents;
            }
          } else if (_source258.is_MapBuilder) {
            DAST._IType _4881___mcc_h498 = _source258.dtor_key;
            DAST._IType _4882___mcc_h499 = _source258.dtor_value;
            {
              RAST._IType _4883_fromTpeGen;
              RAST._IType _out1229;
              _out1229 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4883_fromTpeGen = _out1229;
              RAST._IType _4884_toTpeGen;
              RAST._IType _out1230;
              _out1230 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4884_toTpeGen = _out1230;
              RAST._IExpr _4885_recursiveGen;
              DCOMP._IOwnership _4886_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4887_recIdents;
              RAST._IExpr _out1231;
              DCOMP._IOwnership _out1232;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1233;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1231, out _out1232, out _out1233);
              _4885_recursiveGen = _out1231;
              _4886_recOwned = _out1232;
              _4887_recIdents = _out1233;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4885_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4883_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4884_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1234;
              DCOMP._IOwnership _out1235;
              DCOMP.COMP.FromOwnership(r, _4886_recOwned, expectedOwnership, out _out1234, out _out1235);
              r = _out1234;
              resultingOwnership = _out1235;
              readIdents = _4887_recIdents;
            }
          } else if (_source258.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4888___mcc_h502 = _source258.dtor_args;
            DAST._IType _4889___mcc_h503 = _source258.dtor_result;
            {
              RAST._IType _4890_fromTpeGen;
              RAST._IType _out1236;
              _out1236 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4890_fromTpeGen = _out1236;
              RAST._IType _4891_toTpeGen;
              RAST._IType _out1237;
              _out1237 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4891_toTpeGen = _out1237;
              RAST._IExpr _4892_recursiveGen;
              DCOMP._IOwnership _4893_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4894_recIdents;
              RAST._IExpr _out1238;
              DCOMP._IOwnership _out1239;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1240;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1238, out _out1239, out _out1240);
              _4892_recursiveGen = _out1238;
              _4893_recOwned = _out1239;
              _4894_recIdents = _out1240;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4892_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4890_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4891_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1241;
              DCOMP._IOwnership _out1242;
              DCOMP.COMP.FromOwnership(r, _4893_recOwned, expectedOwnership, out _out1241, out _out1242);
              r = _out1241;
              resultingOwnership = _out1242;
              readIdents = _4894_recIdents;
            }
          } else if (_source258.is_Primitive) {
            DAST._IPrimitive _4895___mcc_h506 = _source258.dtor_Primitive_a0;
            {
              RAST._IType _4896_fromTpeGen;
              RAST._IType _out1243;
              _out1243 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4896_fromTpeGen = _out1243;
              RAST._IType _4897_toTpeGen;
              RAST._IType _out1244;
              _out1244 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4897_toTpeGen = _out1244;
              RAST._IExpr _4898_recursiveGen;
              DCOMP._IOwnership _4899_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4900_recIdents;
              RAST._IExpr _out1245;
              DCOMP._IOwnership _out1246;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1247;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1245, out _out1246, out _out1247);
              _4898_recursiveGen = _out1245;
              _4899_recOwned = _out1246;
              _4900_recIdents = _out1247;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4898_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4896_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4897_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1248;
              DCOMP._IOwnership _out1249;
              DCOMP.COMP.FromOwnership(r, _4899_recOwned, expectedOwnership, out _out1248, out _out1249);
              r = _out1248;
              resultingOwnership = _out1249;
              readIdents = _4900_recIdents;
            }
          } else if (_source258.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4901___mcc_h508 = _source258.dtor_Passthrough_a0;
            {
              RAST._IType _4902_fromTpeGen;
              RAST._IType _out1250;
              _out1250 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4902_fromTpeGen = _out1250;
              RAST._IType _4903_toTpeGen;
              RAST._IType _out1251;
              _out1251 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4903_toTpeGen = _out1251;
              RAST._IExpr _4904_recursiveGen;
              DCOMP._IOwnership _4905_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4906_recIdents;
              RAST._IExpr _out1252;
              DCOMP._IOwnership _out1253;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1254;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1252, out _out1253, out _out1254);
              _4904_recursiveGen = _out1252;
              _4905_recOwned = _out1253;
              _4906_recIdents = _out1254;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4904_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4902_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4903_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1255;
              DCOMP._IOwnership _out1256;
              DCOMP.COMP.FromOwnership(r, _4905_recOwned, expectedOwnership, out _out1255, out _out1256);
              r = _out1255;
              resultingOwnership = _out1256;
              readIdents = _4906_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4907___mcc_h510 = _source258.dtor_TypeArg_a0;
            {
              RAST._IType _4908_fromTpeGen;
              RAST._IType _out1257;
              _out1257 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4908_fromTpeGen = _out1257;
              RAST._IType _4909_toTpeGen;
              RAST._IType _out1258;
              _out1258 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4909_toTpeGen = _out1258;
              RAST._IExpr _4910_recursiveGen;
              DCOMP._IOwnership _4911_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4912_recIdents;
              RAST._IExpr _out1259;
              DCOMP._IOwnership _out1260;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1261;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1259, out _out1260, out _out1261);
              _4910_recursiveGen = _out1259;
              _4911_recOwned = _out1260;
              _4912_recIdents = _out1261;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4910_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4908_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4909_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1262;
              DCOMP._IOwnership _out1263;
              DCOMP.COMP.FromOwnership(r, _4911_recOwned, expectedOwnership, out _out1262, out _out1263);
              r = _out1262;
              resultingOwnership = _out1263;
              readIdents = _4912_recIdents;
            }
          }
        } else if (_source214.is_Seq) {
          DAST._IType _4913___mcc_h512 = _source214.dtor_element;
          DAST._IType _source263 = _3747___mcc_h1;
          if (_source263.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4914___mcc_h516 = _source263.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4915___mcc_h517 = _source263.dtor_typeArgs;
            DAST._IResolvedType _4916___mcc_h518 = _source263.dtor_resolved;
            DAST._IResolvedType _source264 = _4916___mcc_h518;
            if (_source264.is_AllocatedDatatype) {
              DAST._IDatatypeType _4917___mcc_h522 = _source264.dtor_datatypeType;
              {
                RAST._IType _4918_fromTpeGen;
                RAST._IType _out1264;
                _out1264 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4918_fromTpeGen = _out1264;
                RAST._IType _4919_toTpeGen;
                RAST._IType _out1265;
                _out1265 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4919_toTpeGen = _out1265;
                RAST._IExpr _4920_recursiveGen;
                DCOMP._IOwnership _4921_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4922_recIdents;
                RAST._IExpr _out1266;
                DCOMP._IOwnership _out1267;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1268;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1266, out _out1267, out _out1268);
                _4920_recursiveGen = _out1266;
                _4921_recOwned = _out1267;
                _4922_recIdents = _out1268;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4920_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4918_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4919_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1269;
                DCOMP._IOwnership _out1270;
                DCOMP.COMP.FromOwnership(r, _4921_recOwned, expectedOwnership, out _out1269, out _out1270);
                r = _out1269;
                resultingOwnership = _out1270;
                readIdents = _4922_recIdents;
              }
            } else if (_source264.is_Datatype) {
              DAST._IDatatypeType _4923___mcc_h524 = _source264.dtor_datatypeType;
              {
                RAST._IType _4924_fromTpeGen;
                RAST._IType _out1271;
                _out1271 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4924_fromTpeGen = _out1271;
                RAST._IType _4925_toTpeGen;
                RAST._IType _out1272;
                _out1272 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4925_toTpeGen = _out1272;
                RAST._IExpr _4926_recursiveGen;
                DCOMP._IOwnership _4927_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4928_recIdents;
                RAST._IExpr _out1273;
                DCOMP._IOwnership _out1274;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1275;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1273, out _out1274, out _out1275);
                _4926_recursiveGen = _out1273;
                _4927_recOwned = _out1274;
                _4928_recIdents = _out1275;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4926_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4924_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4925_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1276;
                DCOMP._IOwnership _out1277;
                DCOMP.COMP.FromOwnership(r, _4927_recOwned, expectedOwnership, out _out1276, out _out1277);
                r = _out1276;
                resultingOwnership = _out1277;
                readIdents = _4928_recIdents;
              }
            } else if (_source264.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4929___mcc_h526 = _source264.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4930___mcc_h527 = _source264.dtor_attributes;
              {
                RAST._IType _4931_fromTpeGen;
                RAST._IType _out1278;
                _out1278 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _4931_fromTpeGen = _out1278;
                RAST._IType _4932_toTpeGen;
                RAST._IType _out1279;
                _out1279 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _4932_toTpeGen = _out1279;
                RAST._IExpr _4933_recursiveGen;
                DCOMP._IOwnership _4934_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4935_recIdents;
                RAST._IExpr _out1280;
                DCOMP._IOwnership _out1281;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1282;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1280, out _out1281, out _out1282);
                _4933_recursiveGen = _out1280;
                _4934_recOwned = _out1281;
                _4935_recIdents = _out1282;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4933_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4931_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4932_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1283;
                DCOMP._IOwnership _out1284;
                DCOMP.COMP.FromOwnership(r, _4934_recOwned, expectedOwnership, out _out1283, out _out1284);
                r = _out1283;
                resultingOwnership = _out1284;
                readIdents = _4935_recIdents;
              }
            } else {
              DAST._IType _4936___mcc_h530 = _source264.dtor_baseType;
              DAST._INewtypeRange _4937___mcc_h531 = _source264.dtor_range;
              bool _4938___mcc_h532 = _source264.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4939___mcc_h533 = _source264.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4940_attributes = _4939___mcc_h533;
              bool _4941_erase = _4938___mcc_h532;
              DAST._INewtypeRange _4942_range = _4937___mcc_h531;
              DAST._IType _4943_b = _4936___mcc_h530;
              {
                Std.Wrappers._IOption<RAST._IType> _4944_nativeToType;
                _4944_nativeToType = DCOMP.COMP.NewtypeToRustType(_4943_b, _4942_range);
                if (object.Equals(_3741_fromTpe, _4943_b)) {
                  RAST._IExpr _4945_recursiveGen;
                  DCOMP._IOwnership _4946_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4947_recIdents;
                  RAST._IExpr _out1285;
                  DCOMP._IOwnership _out1286;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1287;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1285, out _out1286, out _out1287);
                  _4945_recursiveGen = _out1285;
                  _4946_recOwned = _out1286;
                  _4947_recIdents = _out1287;
                  readIdents = _4947_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source265 = _4944_nativeToType;
                  if (_source265.is_None) {
                    if (_4941_erase) {
                      r = _4945_recursiveGen;
                    } else {
                      RAST._IType _4948_rhsType;
                      RAST._IType _out1288;
                      _out1288 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _4948_rhsType = _out1288;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4948_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4945_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1289;
                    DCOMP._IOwnership _out1290;
                    DCOMP.COMP.FromOwnership(r, _4946_recOwned, expectedOwnership, out _out1289, out _out1290);
                    r = _out1289;
                    resultingOwnership = _out1290;
                  } else {
                    RAST._IType _4949___mcc_h1705 = _source265.dtor_value;
                    RAST._IType _4950_v = _4949___mcc_h1705;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4945_recursiveGen, RAST.Expr.create_ExprFromType(_4950_v)));
                    RAST._IExpr _out1291;
                    DCOMP._IOwnership _out1292;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1291, out _out1292);
                    r = _out1291;
                    resultingOwnership = _out1292;
                  }
                } else {
                  if ((_4944_nativeToType).is_Some) {
                    DAST._IType _source266 = _3741_fromTpe;
                    if (_source266.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4951___mcc_h1706 = _source266.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4952___mcc_h1707 = _source266.dtor_typeArgs;
                      DAST._IResolvedType _4953___mcc_h1708 = _source266.dtor_resolved;
                      DAST._IResolvedType _source267 = _4953___mcc_h1708;
                      if (_source267.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4954___mcc_h1712 = _source267.dtor_datatypeType;
                      } else if (_source267.is_Datatype) {
                        DAST._IDatatypeType _4955___mcc_h1714 = _source267.dtor_datatypeType;
                      } else if (_source267.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4956___mcc_h1716 = _source267.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4957___mcc_h1717 = _source267.dtor_attributes;
                      } else {
                        DAST._IType _4958___mcc_h1720 = _source267.dtor_baseType;
                        DAST._INewtypeRange _4959___mcc_h1721 = _source267.dtor_range;
                        bool _4960___mcc_h1722 = _source267.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4961___mcc_h1723 = _source267.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4962_attributes0 = _4961___mcc_h1723;
                        bool _4963_erase0 = _4960___mcc_h1722;
                        DAST._INewtypeRange _4964_range0 = _4959___mcc_h1721;
                        DAST._IType _4965_b0 = _4958___mcc_h1720;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4966_nativeFromType;
                          _4966_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4965_b0, _4964_range0);
                          if ((_4966_nativeFromType).is_Some) {
                            RAST._IExpr _4967_recursiveGen;
                            DCOMP._IOwnership _4968_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4969_recIdents;
                            RAST._IExpr _out1293;
                            DCOMP._IOwnership _out1294;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1295;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1293, out _out1294, out _out1295);
                            _4967_recursiveGen = _out1293;
                            _4968_recOwned = _out1294;
                            _4969_recIdents = _out1295;
                            RAST._IExpr _out1296;
                            DCOMP._IOwnership _out1297;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4967_recursiveGen, (_4944_nativeToType).dtor_value), _4968_recOwned, expectedOwnership, out _out1296, out _out1297);
                            r = _out1296;
                            resultingOwnership = _out1297;
                            readIdents = _4969_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source266.is_Nullable) {
                      DAST._IType _4970___mcc_h1728 = _source266.dtor_Nullable_a0;
                    } else if (_source266.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4971___mcc_h1730 = _source266.dtor_Tuple_a0;
                    } else if (_source266.is_Array) {
                      DAST._IType _4972___mcc_h1732 = _source266.dtor_element;
                      BigInteger _4973___mcc_h1733 = _source266.dtor_dims;
                    } else if (_source266.is_Seq) {
                      DAST._IType _4974___mcc_h1736 = _source266.dtor_element;
                    } else if (_source266.is_Set) {
                      DAST._IType _4975___mcc_h1738 = _source266.dtor_element;
                    } else if (_source266.is_Multiset) {
                      DAST._IType _4976___mcc_h1740 = _source266.dtor_element;
                    } else if (_source266.is_Map) {
                      DAST._IType _4977___mcc_h1742 = _source266.dtor_key;
                      DAST._IType _4978___mcc_h1743 = _source266.dtor_value;
                    } else if (_source266.is_SetBuilder) {
                      DAST._IType _4979___mcc_h1746 = _source266.dtor_element;
                    } else if (_source266.is_MapBuilder) {
                      DAST._IType _4980___mcc_h1748 = _source266.dtor_key;
                      DAST._IType _4981___mcc_h1749 = _source266.dtor_value;
                    } else if (_source266.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4982___mcc_h1752 = _source266.dtor_args;
                      DAST._IType _4983___mcc_h1753 = _source266.dtor_result;
                    } else if (_source266.is_Primitive) {
                      DAST._IPrimitive _4984___mcc_h1756 = _source266.dtor_Primitive_a0;
                    } else if (_source266.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4985___mcc_h1758 = _source266.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4986___mcc_h1760 = _source266.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4987_recursiveGen;
                      DCOMP._IOwnership _4988_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4989_recIdents;
                      RAST._IExpr _out1298;
                      DCOMP._IOwnership _out1299;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1300;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1298, out _out1299, out _out1300);
                      _4987_recursiveGen = _out1298;
                      _4988_recOwned = _out1299;
                      _4989_recIdents = _out1300;
                      RAST._IExpr _out1301;
                      DCOMP._IOwnership _out1302;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4987_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4944_nativeToType).dtor_value), _4988_recOwned, expectedOwnership, out _out1301, out _out1302);
                      r = _out1301;
                      resultingOwnership = _out1302;
                      readIdents = _4989_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1303;
                  DCOMP._IOwnership _out1304;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1305;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _4943_b), _4943_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1303, out _out1304, out _out1305);
                  r = _out1303;
                  resultingOwnership = _out1304;
                  readIdents = _out1305;
                }
              }
            }
          } else if (_source263.is_Nullable) {
            DAST._IType _4990___mcc_h538 = _source263.dtor_Nullable_a0;
            {
              RAST._IExpr _4991_recursiveGen;
              DCOMP._IOwnership _4992_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4993_recIdents;
              RAST._IExpr _out1306;
              DCOMP._IOwnership _out1307;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1308;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1306, out _out1307, out _out1308);
              _4991_recursiveGen = _out1306;
              _4992_recOwned = _out1307;
              _4993_recIdents = _out1308;
              r = _4991_recursiveGen;
              if (object.Equals(_4992_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1309;
              DCOMP._IOwnership _out1310;
              DCOMP.COMP.FromOwnership(r, _4992_recOwned, expectedOwnership, out _out1309, out _out1310);
              r = _out1309;
              resultingOwnership = _out1310;
              readIdents = _4993_recIdents;
            }
          } else if (_source263.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4994___mcc_h540 = _source263.dtor_Tuple_a0;
            {
              RAST._IType _4995_fromTpeGen;
              RAST._IType _out1311;
              _out1311 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _4995_fromTpeGen = _out1311;
              RAST._IType _4996_toTpeGen;
              RAST._IType _out1312;
              _out1312 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _4996_toTpeGen = _out1312;
              RAST._IExpr _4997_recursiveGen;
              DCOMP._IOwnership _4998_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4999_recIdents;
              RAST._IExpr _out1313;
              DCOMP._IOwnership _out1314;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1315;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1313, out _out1314, out _out1315);
              _4997_recursiveGen = _out1313;
              _4998_recOwned = _out1314;
              _4999_recIdents = _out1315;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4997_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4995_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4996_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1316;
              DCOMP._IOwnership _out1317;
              DCOMP.COMP.FromOwnership(r, _4998_recOwned, expectedOwnership, out _out1316, out _out1317);
              r = _out1316;
              resultingOwnership = _out1317;
              readIdents = _4999_recIdents;
            }
          } else if (_source263.is_Array) {
            DAST._IType _5000___mcc_h542 = _source263.dtor_element;
            BigInteger _5001___mcc_h543 = _source263.dtor_dims;
            {
              RAST._IType _5002_fromTpeGen;
              RAST._IType _out1318;
              _out1318 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5002_fromTpeGen = _out1318;
              RAST._IType _5003_toTpeGen;
              RAST._IType _out1319;
              _out1319 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5003_toTpeGen = _out1319;
              RAST._IExpr _5004_recursiveGen;
              DCOMP._IOwnership _5005_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5006_recIdents;
              RAST._IExpr _out1320;
              DCOMP._IOwnership _out1321;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1322;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1320, out _out1321, out _out1322);
              _5004_recursiveGen = _out1320;
              _5005_recOwned = _out1321;
              _5006_recIdents = _out1322;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5004_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5002_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5003_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1323;
              DCOMP._IOwnership _out1324;
              DCOMP.COMP.FromOwnership(r, _5005_recOwned, expectedOwnership, out _out1323, out _out1324);
              r = _out1323;
              resultingOwnership = _out1324;
              readIdents = _5006_recIdents;
            }
          } else if (_source263.is_Seq) {
            DAST._IType _5007___mcc_h546 = _source263.dtor_element;
            {
              RAST._IType _5008_fromTpeGen;
              RAST._IType _out1325;
              _out1325 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5008_fromTpeGen = _out1325;
              RAST._IType _5009_toTpeGen;
              RAST._IType _out1326;
              _out1326 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5009_toTpeGen = _out1326;
              RAST._IExpr _5010_recursiveGen;
              DCOMP._IOwnership _5011_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5012_recIdents;
              RAST._IExpr _out1327;
              DCOMP._IOwnership _out1328;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1329;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1327, out _out1328, out _out1329);
              _5010_recursiveGen = _out1327;
              _5011_recOwned = _out1328;
              _5012_recIdents = _out1329;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5010_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5008_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5009_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1330;
              DCOMP._IOwnership _out1331;
              DCOMP.COMP.FromOwnership(r, _5011_recOwned, expectedOwnership, out _out1330, out _out1331);
              r = _out1330;
              resultingOwnership = _out1331;
              readIdents = _5012_recIdents;
            }
          } else if (_source263.is_Set) {
            DAST._IType _5013___mcc_h548 = _source263.dtor_element;
            {
              RAST._IType _5014_fromTpeGen;
              RAST._IType _out1332;
              _out1332 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5014_fromTpeGen = _out1332;
              RAST._IType _5015_toTpeGen;
              RAST._IType _out1333;
              _out1333 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5015_toTpeGen = _out1333;
              RAST._IExpr _5016_recursiveGen;
              DCOMP._IOwnership _5017_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5018_recIdents;
              RAST._IExpr _out1334;
              DCOMP._IOwnership _out1335;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1336;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1334, out _out1335, out _out1336);
              _5016_recursiveGen = _out1334;
              _5017_recOwned = _out1335;
              _5018_recIdents = _out1336;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5016_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5014_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5015_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1337;
              DCOMP._IOwnership _out1338;
              DCOMP.COMP.FromOwnership(r, _5017_recOwned, expectedOwnership, out _out1337, out _out1338);
              r = _out1337;
              resultingOwnership = _out1338;
              readIdents = _5018_recIdents;
            }
          } else if (_source263.is_Multiset) {
            DAST._IType _5019___mcc_h550 = _source263.dtor_element;
            {
              RAST._IType _5020_fromTpeGen;
              RAST._IType _out1339;
              _out1339 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5020_fromTpeGen = _out1339;
              RAST._IType _5021_toTpeGen;
              RAST._IType _out1340;
              _out1340 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5021_toTpeGen = _out1340;
              RAST._IExpr _5022_recursiveGen;
              DCOMP._IOwnership _5023_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5024_recIdents;
              RAST._IExpr _out1341;
              DCOMP._IOwnership _out1342;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1343;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1341, out _out1342, out _out1343);
              _5022_recursiveGen = _out1341;
              _5023_recOwned = _out1342;
              _5024_recIdents = _out1343;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5022_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5020_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5021_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1344;
              DCOMP._IOwnership _out1345;
              DCOMP.COMP.FromOwnership(r, _5023_recOwned, expectedOwnership, out _out1344, out _out1345);
              r = _out1344;
              resultingOwnership = _out1345;
              readIdents = _5024_recIdents;
            }
          } else if (_source263.is_Map) {
            DAST._IType _5025___mcc_h552 = _source263.dtor_key;
            DAST._IType _5026___mcc_h553 = _source263.dtor_value;
            {
              RAST._IType _5027_fromTpeGen;
              RAST._IType _out1346;
              _out1346 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5027_fromTpeGen = _out1346;
              RAST._IType _5028_toTpeGen;
              RAST._IType _out1347;
              _out1347 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5028_toTpeGen = _out1347;
              RAST._IExpr _5029_recursiveGen;
              DCOMP._IOwnership _5030_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5031_recIdents;
              RAST._IExpr _out1348;
              DCOMP._IOwnership _out1349;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1350;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1348, out _out1349, out _out1350);
              _5029_recursiveGen = _out1348;
              _5030_recOwned = _out1349;
              _5031_recIdents = _out1350;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5029_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5027_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5028_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1351;
              DCOMP._IOwnership _out1352;
              DCOMP.COMP.FromOwnership(r, _5030_recOwned, expectedOwnership, out _out1351, out _out1352);
              r = _out1351;
              resultingOwnership = _out1352;
              readIdents = _5031_recIdents;
            }
          } else if (_source263.is_SetBuilder) {
            DAST._IType _5032___mcc_h556 = _source263.dtor_element;
            {
              RAST._IType _5033_fromTpeGen;
              RAST._IType _out1353;
              _out1353 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5033_fromTpeGen = _out1353;
              RAST._IType _5034_toTpeGen;
              RAST._IType _out1354;
              _out1354 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5034_toTpeGen = _out1354;
              RAST._IExpr _5035_recursiveGen;
              DCOMP._IOwnership _5036_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5037_recIdents;
              RAST._IExpr _out1355;
              DCOMP._IOwnership _out1356;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1357;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1355, out _out1356, out _out1357);
              _5035_recursiveGen = _out1355;
              _5036_recOwned = _out1356;
              _5037_recIdents = _out1357;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5035_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5033_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5034_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1358;
              DCOMP._IOwnership _out1359;
              DCOMP.COMP.FromOwnership(r, _5036_recOwned, expectedOwnership, out _out1358, out _out1359);
              r = _out1358;
              resultingOwnership = _out1359;
              readIdents = _5037_recIdents;
            }
          } else if (_source263.is_MapBuilder) {
            DAST._IType _5038___mcc_h558 = _source263.dtor_key;
            DAST._IType _5039___mcc_h559 = _source263.dtor_value;
            {
              RAST._IType _5040_fromTpeGen;
              RAST._IType _out1360;
              _out1360 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5040_fromTpeGen = _out1360;
              RAST._IType _5041_toTpeGen;
              RAST._IType _out1361;
              _out1361 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5041_toTpeGen = _out1361;
              RAST._IExpr _5042_recursiveGen;
              DCOMP._IOwnership _5043_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5044_recIdents;
              RAST._IExpr _out1362;
              DCOMP._IOwnership _out1363;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1364;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1362, out _out1363, out _out1364);
              _5042_recursiveGen = _out1362;
              _5043_recOwned = _out1363;
              _5044_recIdents = _out1364;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5042_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5040_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5041_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1365;
              DCOMP._IOwnership _out1366;
              DCOMP.COMP.FromOwnership(r, _5043_recOwned, expectedOwnership, out _out1365, out _out1366);
              r = _out1365;
              resultingOwnership = _out1366;
              readIdents = _5044_recIdents;
            }
          } else if (_source263.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5045___mcc_h562 = _source263.dtor_args;
            DAST._IType _5046___mcc_h563 = _source263.dtor_result;
            {
              RAST._IType _5047_fromTpeGen;
              RAST._IType _out1367;
              _out1367 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5047_fromTpeGen = _out1367;
              RAST._IType _5048_toTpeGen;
              RAST._IType _out1368;
              _out1368 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5048_toTpeGen = _out1368;
              RAST._IExpr _5049_recursiveGen;
              DCOMP._IOwnership _5050_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5051_recIdents;
              RAST._IExpr _out1369;
              DCOMP._IOwnership _out1370;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1371;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1369, out _out1370, out _out1371);
              _5049_recursiveGen = _out1369;
              _5050_recOwned = _out1370;
              _5051_recIdents = _out1371;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5049_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5047_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5048_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1372;
              DCOMP._IOwnership _out1373;
              DCOMP.COMP.FromOwnership(r, _5050_recOwned, expectedOwnership, out _out1372, out _out1373);
              r = _out1372;
              resultingOwnership = _out1373;
              readIdents = _5051_recIdents;
            }
          } else if (_source263.is_Primitive) {
            DAST._IPrimitive _5052___mcc_h566 = _source263.dtor_Primitive_a0;
            {
              RAST._IType _5053_fromTpeGen;
              RAST._IType _out1374;
              _out1374 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5053_fromTpeGen = _out1374;
              RAST._IType _5054_toTpeGen;
              RAST._IType _out1375;
              _out1375 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5054_toTpeGen = _out1375;
              RAST._IExpr _5055_recursiveGen;
              DCOMP._IOwnership _5056_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5057_recIdents;
              RAST._IExpr _out1376;
              DCOMP._IOwnership _out1377;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1378;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1376, out _out1377, out _out1378);
              _5055_recursiveGen = _out1376;
              _5056_recOwned = _out1377;
              _5057_recIdents = _out1378;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5055_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5053_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5054_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1379;
              DCOMP._IOwnership _out1380;
              DCOMP.COMP.FromOwnership(r, _5056_recOwned, expectedOwnership, out _out1379, out _out1380);
              r = _out1379;
              resultingOwnership = _out1380;
              readIdents = _5057_recIdents;
            }
          } else if (_source263.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5058___mcc_h568 = _source263.dtor_Passthrough_a0;
            {
              RAST._IType _5059_fromTpeGen;
              RAST._IType _out1381;
              _out1381 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5059_fromTpeGen = _out1381;
              RAST._IType _5060_toTpeGen;
              RAST._IType _out1382;
              _out1382 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5060_toTpeGen = _out1382;
              RAST._IExpr _5061_recursiveGen;
              DCOMP._IOwnership _5062_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5063_recIdents;
              RAST._IExpr _out1383;
              DCOMP._IOwnership _out1384;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1385;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1383, out _out1384, out _out1385);
              _5061_recursiveGen = _out1383;
              _5062_recOwned = _out1384;
              _5063_recIdents = _out1385;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5061_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5059_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5060_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1386;
              DCOMP._IOwnership _out1387;
              DCOMP.COMP.FromOwnership(r, _5062_recOwned, expectedOwnership, out _out1386, out _out1387);
              r = _out1386;
              resultingOwnership = _out1387;
              readIdents = _5063_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5064___mcc_h570 = _source263.dtor_TypeArg_a0;
            {
              RAST._IType _5065_fromTpeGen;
              RAST._IType _out1388;
              _out1388 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5065_fromTpeGen = _out1388;
              RAST._IType _5066_toTpeGen;
              RAST._IType _out1389;
              _out1389 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5066_toTpeGen = _out1389;
              RAST._IExpr _5067_recursiveGen;
              DCOMP._IOwnership _5068_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5069_recIdents;
              RAST._IExpr _out1390;
              DCOMP._IOwnership _out1391;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1392;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1390, out _out1391, out _out1392);
              _5067_recursiveGen = _out1390;
              _5068_recOwned = _out1391;
              _5069_recIdents = _out1392;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5067_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5065_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5066_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1393;
              DCOMP._IOwnership _out1394;
              DCOMP.COMP.FromOwnership(r, _5068_recOwned, expectedOwnership, out _out1393, out _out1394);
              r = _out1393;
              resultingOwnership = _out1394;
              readIdents = _5069_recIdents;
            }
          }
        } else if (_source214.is_Set) {
          DAST._IType _5070___mcc_h572 = _source214.dtor_element;
          DAST._IType _source268 = _3747___mcc_h1;
          if (_source268.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5071___mcc_h576 = _source268.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5072___mcc_h577 = _source268.dtor_typeArgs;
            DAST._IResolvedType _5073___mcc_h578 = _source268.dtor_resolved;
            DAST._IResolvedType _source269 = _5073___mcc_h578;
            if (_source269.is_AllocatedDatatype) {
              DAST._IDatatypeType _5074___mcc_h582 = _source269.dtor_datatypeType;
              {
                RAST._IType _5075_fromTpeGen;
                RAST._IType _out1395;
                _out1395 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5075_fromTpeGen = _out1395;
                RAST._IType _5076_toTpeGen;
                RAST._IType _out1396;
                _out1396 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5076_toTpeGen = _out1396;
                RAST._IExpr _5077_recursiveGen;
                DCOMP._IOwnership _5078_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5079_recIdents;
                RAST._IExpr _out1397;
                DCOMP._IOwnership _out1398;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1399;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1397, out _out1398, out _out1399);
                _5077_recursiveGen = _out1397;
                _5078_recOwned = _out1398;
                _5079_recIdents = _out1399;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5077_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5075_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5076_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1400;
                DCOMP._IOwnership _out1401;
                DCOMP.COMP.FromOwnership(r, _5078_recOwned, expectedOwnership, out _out1400, out _out1401);
                r = _out1400;
                resultingOwnership = _out1401;
                readIdents = _5079_recIdents;
              }
            } else if (_source269.is_Datatype) {
              DAST._IDatatypeType _5080___mcc_h584 = _source269.dtor_datatypeType;
              {
                RAST._IType _5081_fromTpeGen;
                RAST._IType _out1402;
                _out1402 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5081_fromTpeGen = _out1402;
                RAST._IType _5082_toTpeGen;
                RAST._IType _out1403;
                _out1403 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5082_toTpeGen = _out1403;
                RAST._IExpr _5083_recursiveGen;
                DCOMP._IOwnership _5084_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5085_recIdents;
                RAST._IExpr _out1404;
                DCOMP._IOwnership _out1405;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1406;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1404, out _out1405, out _out1406);
                _5083_recursiveGen = _out1404;
                _5084_recOwned = _out1405;
                _5085_recIdents = _out1406;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5083_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5081_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5082_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1407;
                DCOMP._IOwnership _out1408;
                DCOMP.COMP.FromOwnership(r, _5084_recOwned, expectedOwnership, out _out1407, out _out1408);
                r = _out1407;
                resultingOwnership = _out1408;
                readIdents = _5085_recIdents;
              }
            } else if (_source269.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5086___mcc_h586 = _source269.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5087___mcc_h587 = _source269.dtor_attributes;
              {
                RAST._IType _5088_fromTpeGen;
                RAST._IType _out1409;
                _out1409 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5088_fromTpeGen = _out1409;
                RAST._IType _5089_toTpeGen;
                RAST._IType _out1410;
                _out1410 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5089_toTpeGen = _out1410;
                RAST._IExpr _5090_recursiveGen;
                DCOMP._IOwnership _5091_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5092_recIdents;
                RAST._IExpr _out1411;
                DCOMP._IOwnership _out1412;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1413;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1411, out _out1412, out _out1413);
                _5090_recursiveGen = _out1411;
                _5091_recOwned = _out1412;
                _5092_recIdents = _out1413;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5090_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5088_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5089_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1414;
                DCOMP._IOwnership _out1415;
                DCOMP.COMP.FromOwnership(r, _5091_recOwned, expectedOwnership, out _out1414, out _out1415);
                r = _out1414;
                resultingOwnership = _out1415;
                readIdents = _5092_recIdents;
              }
            } else {
              DAST._IType _5093___mcc_h590 = _source269.dtor_baseType;
              DAST._INewtypeRange _5094___mcc_h591 = _source269.dtor_range;
              bool _5095___mcc_h592 = _source269.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5096___mcc_h593 = _source269.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5097_attributes = _5096___mcc_h593;
              bool _5098_erase = _5095___mcc_h592;
              DAST._INewtypeRange _5099_range = _5094___mcc_h591;
              DAST._IType _5100_b = _5093___mcc_h590;
              {
                Std.Wrappers._IOption<RAST._IType> _5101_nativeToType;
                _5101_nativeToType = DCOMP.COMP.NewtypeToRustType(_5100_b, _5099_range);
                if (object.Equals(_3741_fromTpe, _5100_b)) {
                  RAST._IExpr _5102_recursiveGen;
                  DCOMP._IOwnership _5103_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5104_recIdents;
                  RAST._IExpr _out1416;
                  DCOMP._IOwnership _out1417;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1418;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1416, out _out1417, out _out1418);
                  _5102_recursiveGen = _out1416;
                  _5103_recOwned = _out1417;
                  _5104_recIdents = _out1418;
                  readIdents = _5104_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source270 = _5101_nativeToType;
                  if (_source270.is_None) {
                    if (_5098_erase) {
                      r = _5102_recursiveGen;
                    } else {
                      RAST._IType _5105_rhsType;
                      RAST._IType _out1419;
                      _out1419 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _5105_rhsType = _out1419;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5105_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5102_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1420;
                    DCOMP._IOwnership _out1421;
                    DCOMP.COMP.FromOwnership(r, _5103_recOwned, expectedOwnership, out _out1420, out _out1421);
                    r = _out1420;
                    resultingOwnership = _out1421;
                  } else {
                    RAST._IType _5106___mcc_h1762 = _source270.dtor_value;
                    RAST._IType _5107_v = _5106___mcc_h1762;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5102_recursiveGen, RAST.Expr.create_ExprFromType(_5107_v)));
                    RAST._IExpr _out1422;
                    DCOMP._IOwnership _out1423;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1422, out _out1423);
                    r = _out1422;
                    resultingOwnership = _out1423;
                  }
                } else {
                  if ((_5101_nativeToType).is_Some) {
                    DAST._IType _source271 = _3741_fromTpe;
                    if (_source271.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5108___mcc_h1763 = _source271.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5109___mcc_h1764 = _source271.dtor_typeArgs;
                      DAST._IResolvedType _5110___mcc_h1765 = _source271.dtor_resolved;
                      DAST._IResolvedType _source272 = _5110___mcc_h1765;
                      if (_source272.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5111___mcc_h1769 = _source272.dtor_datatypeType;
                      } else if (_source272.is_Datatype) {
                        DAST._IDatatypeType _5112___mcc_h1771 = _source272.dtor_datatypeType;
                      } else if (_source272.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5113___mcc_h1773 = _source272.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5114___mcc_h1774 = _source272.dtor_attributes;
                      } else {
                        DAST._IType _5115___mcc_h1777 = _source272.dtor_baseType;
                        DAST._INewtypeRange _5116___mcc_h1778 = _source272.dtor_range;
                        bool _5117___mcc_h1779 = _source272.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5118___mcc_h1780 = _source272.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5119_attributes0 = _5118___mcc_h1780;
                        bool _5120_erase0 = _5117___mcc_h1779;
                        DAST._INewtypeRange _5121_range0 = _5116___mcc_h1778;
                        DAST._IType _5122_b0 = _5115___mcc_h1777;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5123_nativeFromType;
                          _5123_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5122_b0, _5121_range0);
                          if ((_5123_nativeFromType).is_Some) {
                            RAST._IExpr _5124_recursiveGen;
                            DCOMP._IOwnership _5125_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5126_recIdents;
                            RAST._IExpr _out1424;
                            DCOMP._IOwnership _out1425;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1426;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1424, out _out1425, out _out1426);
                            _5124_recursiveGen = _out1424;
                            _5125_recOwned = _out1425;
                            _5126_recIdents = _out1426;
                            RAST._IExpr _out1427;
                            DCOMP._IOwnership _out1428;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5124_recursiveGen, (_5101_nativeToType).dtor_value), _5125_recOwned, expectedOwnership, out _out1427, out _out1428);
                            r = _out1427;
                            resultingOwnership = _out1428;
                            readIdents = _5126_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source271.is_Nullable) {
                      DAST._IType _5127___mcc_h1785 = _source271.dtor_Nullable_a0;
                    } else if (_source271.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5128___mcc_h1787 = _source271.dtor_Tuple_a0;
                    } else if (_source271.is_Array) {
                      DAST._IType _5129___mcc_h1789 = _source271.dtor_element;
                      BigInteger _5130___mcc_h1790 = _source271.dtor_dims;
                    } else if (_source271.is_Seq) {
                      DAST._IType _5131___mcc_h1793 = _source271.dtor_element;
                    } else if (_source271.is_Set) {
                      DAST._IType _5132___mcc_h1795 = _source271.dtor_element;
                    } else if (_source271.is_Multiset) {
                      DAST._IType _5133___mcc_h1797 = _source271.dtor_element;
                    } else if (_source271.is_Map) {
                      DAST._IType _5134___mcc_h1799 = _source271.dtor_key;
                      DAST._IType _5135___mcc_h1800 = _source271.dtor_value;
                    } else if (_source271.is_SetBuilder) {
                      DAST._IType _5136___mcc_h1803 = _source271.dtor_element;
                    } else if (_source271.is_MapBuilder) {
                      DAST._IType _5137___mcc_h1805 = _source271.dtor_key;
                      DAST._IType _5138___mcc_h1806 = _source271.dtor_value;
                    } else if (_source271.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5139___mcc_h1809 = _source271.dtor_args;
                      DAST._IType _5140___mcc_h1810 = _source271.dtor_result;
                    } else if (_source271.is_Primitive) {
                      DAST._IPrimitive _5141___mcc_h1813 = _source271.dtor_Primitive_a0;
                    } else if (_source271.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5142___mcc_h1815 = _source271.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5143___mcc_h1817 = _source271.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5144_recursiveGen;
                      DCOMP._IOwnership _5145_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5146_recIdents;
                      RAST._IExpr _out1429;
                      DCOMP._IOwnership _out1430;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1431;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1429, out _out1430, out _out1431);
                      _5144_recursiveGen = _out1429;
                      _5145_recOwned = _out1430;
                      _5146_recIdents = _out1431;
                      RAST._IExpr _out1432;
                      DCOMP._IOwnership _out1433;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5144_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5101_nativeToType).dtor_value), _5145_recOwned, expectedOwnership, out _out1432, out _out1433);
                      r = _out1432;
                      resultingOwnership = _out1433;
                      readIdents = _5146_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1434;
                  DCOMP._IOwnership _out1435;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1436;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _5100_b), _5100_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1434, out _out1435, out _out1436);
                  r = _out1434;
                  resultingOwnership = _out1435;
                  readIdents = _out1436;
                }
              }
            }
          } else if (_source268.is_Nullable) {
            DAST._IType _5147___mcc_h598 = _source268.dtor_Nullable_a0;
            {
              RAST._IExpr _5148_recursiveGen;
              DCOMP._IOwnership _5149_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5150_recIdents;
              RAST._IExpr _out1437;
              DCOMP._IOwnership _out1438;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1439;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1437, out _out1438, out _out1439);
              _5148_recursiveGen = _out1437;
              _5149_recOwned = _out1438;
              _5150_recIdents = _out1439;
              r = _5148_recursiveGen;
              if (object.Equals(_5149_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1440;
              DCOMP._IOwnership _out1441;
              DCOMP.COMP.FromOwnership(r, _5149_recOwned, expectedOwnership, out _out1440, out _out1441);
              r = _out1440;
              resultingOwnership = _out1441;
              readIdents = _5150_recIdents;
            }
          } else if (_source268.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5151___mcc_h600 = _source268.dtor_Tuple_a0;
            {
              RAST._IType _5152_fromTpeGen;
              RAST._IType _out1442;
              _out1442 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5152_fromTpeGen = _out1442;
              RAST._IType _5153_toTpeGen;
              RAST._IType _out1443;
              _out1443 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5153_toTpeGen = _out1443;
              RAST._IExpr _5154_recursiveGen;
              DCOMP._IOwnership _5155_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5156_recIdents;
              RAST._IExpr _out1444;
              DCOMP._IOwnership _out1445;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1446;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1444, out _out1445, out _out1446);
              _5154_recursiveGen = _out1444;
              _5155_recOwned = _out1445;
              _5156_recIdents = _out1446;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5154_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5152_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5153_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1447;
              DCOMP._IOwnership _out1448;
              DCOMP.COMP.FromOwnership(r, _5155_recOwned, expectedOwnership, out _out1447, out _out1448);
              r = _out1447;
              resultingOwnership = _out1448;
              readIdents = _5156_recIdents;
            }
          } else if (_source268.is_Array) {
            DAST._IType _5157___mcc_h602 = _source268.dtor_element;
            BigInteger _5158___mcc_h603 = _source268.dtor_dims;
            {
              RAST._IType _5159_fromTpeGen;
              RAST._IType _out1449;
              _out1449 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5159_fromTpeGen = _out1449;
              RAST._IType _5160_toTpeGen;
              RAST._IType _out1450;
              _out1450 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5160_toTpeGen = _out1450;
              RAST._IExpr _5161_recursiveGen;
              DCOMP._IOwnership _5162_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5163_recIdents;
              RAST._IExpr _out1451;
              DCOMP._IOwnership _out1452;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1453;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1451, out _out1452, out _out1453);
              _5161_recursiveGen = _out1451;
              _5162_recOwned = _out1452;
              _5163_recIdents = _out1453;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5161_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5159_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5160_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1454;
              DCOMP._IOwnership _out1455;
              DCOMP.COMP.FromOwnership(r, _5162_recOwned, expectedOwnership, out _out1454, out _out1455);
              r = _out1454;
              resultingOwnership = _out1455;
              readIdents = _5163_recIdents;
            }
          } else if (_source268.is_Seq) {
            DAST._IType _5164___mcc_h606 = _source268.dtor_element;
            {
              RAST._IType _5165_fromTpeGen;
              RAST._IType _out1456;
              _out1456 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5165_fromTpeGen = _out1456;
              RAST._IType _5166_toTpeGen;
              RAST._IType _out1457;
              _out1457 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5166_toTpeGen = _out1457;
              RAST._IExpr _5167_recursiveGen;
              DCOMP._IOwnership _5168_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5169_recIdents;
              RAST._IExpr _out1458;
              DCOMP._IOwnership _out1459;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1460;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1458, out _out1459, out _out1460);
              _5167_recursiveGen = _out1458;
              _5168_recOwned = _out1459;
              _5169_recIdents = _out1460;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5167_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5165_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5166_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1461;
              DCOMP._IOwnership _out1462;
              DCOMP.COMP.FromOwnership(r, _5168_recOwned, expectedOwnership, out _out1461, out _out1462);
              r = _out1461;
              resultingOwnership = _out1462;
              readIdents = _5169_recIdents;
            }
          } else if (_source268.is_Set) {
            DAST._IType _5170___mcc_h608 = _source268.dtor_element;
            {
              RAST._IType _5171_fromTpeGen;
              RAST._IType _out1463;
              _out1463 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5171_fromTpeGen = _out1463;
              RAST._IType _5172_toTpeGen;
              RAST._IType _out1464;
              _out1464 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5172_toTpeGen = _out1464;
              RAST._IExpr _5173_recursiveGen;
              DCOMP._IOwnership _5174_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5175_recIdents;
              RAST._IExpr _out1465;
              DCOMP._IOwnership _out1466;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1467;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1465, out _out1466, out _out1467);
              _5173_recursiveGen = _out1465;
              _5174_recOwned = _out1466;
              _5175_recIdents = _out1467;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5173_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5171_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5172_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1468;
              DCOMP._IOwnership _out1469;
              DCOMP.COMP.FromOwnership(r, _5174_recOwned, expectedOwnership, out _out1468, out _out1469);
              r = _out1468;
              resultingOwnership = _out1469;
              readIdents = _5175_recIdents;
            }
          } else if (_source268.is_Multiset) {
            DAST._IType _5176___mcc_h610 = _source268.dtor_element;
            {
              RAST._IType _5177_fromTpeGen;
              RAST._IType _out1470;
              _out1470 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5177_fromTpeGen = _out1470;
              RAST._IType _5178_toTpeGen;
              RAST._IType _out1471;
              _out1471 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5178_toTpeGen = _out1471;
              RAST._IExpr _5179_recursiveGen;
              DCOMP._IOwnership _5180_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5181_recIdents;
              RAST._IExpr _out1472;
              DCOMP._IOwnership _out1473;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1474;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1472, out _out1473, out _out1474);
              _5179_recursiveGen = _out1472;
              _5180_recOwned = _out1473;
              _5181_recIdents = _out1474;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5179_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5177_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5178_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1475;
              DCOMP._IOwnership _out1476;
              DCOMP.COMP.FromOwnership(r, _5180_recOwned, expectedOwnership, out _out1475, out _out1476);
              r = _out1475;
              resultingOwnership = _out1476;
              readIdents = _5181_recIdents;
            }
          } else if (_source268.is_Map) {
            DAST._IType _5182___mcc_h612 = _source268.dtor_key;
            DAST._IType _5183___mcc_h613 = _source268.dtor_value;
            {
              RAST._IType _5184_fromTpeGen;
              RAST._IType _out1477;
              _out1477 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5184_fromTpeGen = _out1477;
              RAST._IType _5185_toTpeGen;
              RAST._IType _out1478;
              _out1478 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5185_toTpeGen = _out1478;
              RAST._IExpr _5186_recursiveGen;
              DCOMP._IOwnership _5187_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5188_recIdents;
              RAST._IExpr _out1479;
              DCOMP._IOwnership _out1480;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1481;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1479, out _out1480, out _out1481);
              _5186_recursiveGen = _out1479;
              _5187_recOwned = _out1480;
              _5188_recIdents = _out1481;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5186_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5184_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5185_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1482;
              DCOMP._IOwnership _out1483;
              DCOMP.COMP.FromOwnership(r, _5187_recOwned, expectedOwnership, out _out1482, out _out1483);
              r = _out1482;
              resultingOwnership = _out1483;
              readIdents = _5188_recIdents;
            }
          } else if (_source268.is_SetBuilder) {
            DAST._IType _5189___mcc_h616 = _source268.dtor_element;
            {
              RAST._IType _5190_fromTpeGen;
              RAST._IType _out1484;
              _out1484 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5190_fromTpeGen = _out1484;
              RAST._IType _5191_toTpeGen;
              RAST._IType _out1485;
              _out1485 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5191_toTpeGen = _out1485;
              RAST._IExpr _5192_recursiveGen;
              DCOMP._IOwnership _5193_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5194_recIdents;
              RAST._IExpr _out1486;
              DCOMP._IOwnership _out1487;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1488;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1486, out _out1487, out _out1488);
              _5192_recursiveGen = _out1486;
              _5193_recOwned = _out1487;
              _5194_recIdents = _out1488;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5192_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5190_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5191_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1489;
              DCOMP._IOwnership _out1490;
              DCOMP.COMP.FromOwnership(r, _5193_recOwned, expectedOwnership, out _out1489, out _out1490);
              r = _out1489;
              resultingOwnership = _out1490;
              readIdents = _5194_recIdents;
            }
          } else if (_source268.is_MapBuilder) {
            DAST._IType _5195___mcc_h618 = _source268.dtor_key;
            DAST._IType _5196___mcc_h619 = _source268.dtor_value;
            {
              RAST._IType _5197_fromTpeGen;
              RAST._IType _out1491;
              _out1491 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5197_fromTpeGen = _out1491;
              RAST._IType _5198_toTpeGen;
              RAST._IType _out1492;
              _out1492 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5198_toTpeGen = _out1492;
              RAST._IExpr _5199_recursiveGen;
              DCOMP._IOwnership _5200_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5201_recIdents;
              RAST._IExpr _out1493;
              DCOMP._IOwnership _out1494;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1495;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1493, out _out1494, out _out1495);
              _5199_recursiveGen = _out1493;
              _5200_recOwned = _out1494;
              _5201_recIdents = _out1495;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5199_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5197_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5198_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1496;
              DCOMP._IOwnership _out1497;
              DCOMP.COMP.FromOwnership(r, _5200_recOwned, expectedOwnership, out _out1496, out _out1497);
              r = _out1496;
              resultingOwnership = _out1497;
              readIdents = _5201_recIdents;
            }
          } else if (_source268.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5202___mcc_h622 = _source268.dtor_args;
            DAST._IType _5203___mcc_h623 = _source268.dtor_result;
            {
              RAST._IType _5204_fromTpeGen;
              RAST._IType _out1498;
              _out1498 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5204_fromTpeGen = _out1498;
              RAST._IType _5205_toTpeGen;
              RAST._IType _out1499;
              _out1499 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5205_toTpeGen = _out1499;
              RAST._IExpr _5206_recursiveGen;
              DCOMP._IOwnership _5207_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5208_recIdents;
              RAST._IExpr _out1500;
              DCOMP._IOwnership _out1501;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1502;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1500, out _out1501, out _out1502);
              _5206_recursiveGen = _out1500;
              _5207_recOwned = _out1501;
              _5208_recIdents = _out1502;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5206_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5204_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5205_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1503;
              DCOMP._IOwnership _out1504;
              DCOMP.COMP.FromOwnership(r, _5207_recOwned, expectedOwnership, out _out1503, out _out1504);
              r = _out1503;
              resultingOwnership = _out1504;
              readIdents = _5208_recIdents;
            }
          } else if (_source268.is_Primitive) {
            DAST._IPrimitive _5209___mcc_h626 = _source268.dtor_Primitive_a0;
            {
              RAST._IType _5210_fromTpeGen;
              RAST._IType _out1505;
              _out1505 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5210_fromTpeGen = _out1505;
              RAST._IType _5211_toTpeGen;
              RAST._IType _out1506;
              _out1506 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5211_toTpeGen = _out1506;
              RAST._IExpr _5212_recursiveGen;
              DCOMP._IOwnership _5213_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5214_recIdents;
              RAST._IExpr _out1507;
              DCOMP._IOwnership _out1508;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1509;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1507, out _out1508, out _out1509);
              _5212_recursiveGen = _out1507;
              _5213_recOwned = _out1508;
              _5214_recIdents = _out1509;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5212_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5210_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5211_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1510;
              DCOMP._IOwnership _out1511;
              DCOMP.COMP.FromOwnership(r, _5213_recOwned, expectedOwnership, out _out1510, out _out1511);
              r = _out1510;
              resultingOwnership = _out1511;
              readIdents = _5214_recIdents;
            }
          } else if (_source268.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5215___mcc_h628 = _source268.dtor_Passthrough_a0;
            {
              RAST._IType _5216_fromTpeGen;
              RAST._IType _out1512;
              _out1512 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5216_fromTpeGen = _out1512;
              RAST._IType _5217_toTpeGen;
              RAST._IType _out1513;
              _out1513 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5217_toTpeGen = _out1513;
              RAST._IExpr _5218_recursiveGen;
              DCOMP._IOwnership _5219_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5220_recIdents;
              RAST._IExpr _out1514;
              DCOMP._IOwnership _out1515;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1516;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1514, out _out1515, out _out1516);
              _5218_recursiveGen = _out1514;
              _5219_recOwned = _out1515;
              _5220_recIdents = _out1516;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5218_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5216_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5217_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1517;
              DCOMP._IOwnership _out1518;
              DCOMP.COMP.FromOwnership(r, _5219_recOwned, expectedOwnership, out _out1517, out _out1518);
              r = _out1517;
              resultingOwnership = _out1518;
              readIdents = _5220_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5221___mcc_h630 = _source268.dtor_TypeArg_a0;
            {
              RAST._IType _5222_fromTpeGen;
              RAST._IType _out1519;
              _out1519 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5222_fromTpeGen = _out1519;
              RAST._IType _5223_toTpeGen;
              RAST._IType _out1520;
              _out1520 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5223_toTpeGen = _out1520;
              RAST._IExpr _5224_recursiveGen;
              DCOMP._IOwnership _5225_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5226_recIdents;
              RAST._IExpr _out1521;
              DCOMP._IOwnership _out1522;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1523;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1521, out _out1522, out _out1523);
              _5224_recursiveGen = _out1521;
              _5225_recOwned = _out1522;
              _5226_recIdents = _out1523;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5224_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5222_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5223_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1524;
              DCOMP._IOwnership _out1525;
              DCOMP.COMP.FromOwnership(r, _5225_recOwned, expectedOwnership, out _out1524, out _out1525);
              r = _out1524;
              resultingOwnership = _out1525;
              readIdents = _5226_recIdents;
            }
          }
        } else if (_source214.is_Multiset) {
          DAST._IType _5227___mcc_h632 = _source214.dtor_element;
          DAST._IType _source273 = _3747___mcc_h1;
          if (_source273.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5228___mcc_h636 = _source273.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5229___mcc_h637 = _source273.dtor_typeArgs;
            DAST._IResolvedType _5230___mcc_h638 = _source273.dtor_resolved;
            DAST._IResolvedType _source274 = _5230___mcc_h638;
            if (_source274.is_AllocatedDatatype) {
              DAST._IDatatypeType _5231___mcc_h642 = _source274.dtor_datatypeType;
              {
                RAST._IType _5232_fromTpeGen;
                RAST._IType _out1526;
                _out1526 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5232_fromTpeGen = _out1526;
                RAST._IType _5233_toTpeGen;
                RAST._IType _out1527;
                _out1527 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5233_toTpeGen = _out1527;
                RAST._IExpr _5234_recursiveGen;
                DCOMP._IOwnership _5235_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5236_recIdents;
                RAST._IExpr _out1528;
                DCOMP._IOwnership _out1529;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1530;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1528, out _out1529, out _out1530);
                _5234_recursiveGen = _out1528;
                _5235_recOwned = _out1529;
                _5236_recIdents = _out1530;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5234_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5232_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5233_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1531;
                DCOMP._IOwnership _out1532;
                DCOMP.COMP.FromOwnership(r, _5235_recOwned, expectedOwnership, out _out1531, out _out1532);
                r = _out1531;
                resultingOwnership = _out1532;
                readIdents = _5236_recIdents;
              }
            } else if (_source274.is_Datatype) {
              DAST._IDatatypeType _5237___mcc_h644 = _source274.dtor_datatypeType;
              {
                RAST._IType _5238_fromTpeGen;
                RAST._IType _out1533;
                _out1533 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5238_fromTpeGen = _out1533;
                RAST._IType _5239_toTpeGen;
                RAST._IType _out1534;
                _out1534 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5239_toTpeGen = _out1534;
                RAST._IExpr _5240_recursiveGen;
                DCOMP._IOwnership _5241_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5242_recIdents;
                RAST._IExpr _out1535;
                DCOMP._IOwnership _out1536;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1537;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1535, out _out1536, out _out1537);
                _5240_recursiveGen = _out1535;
                _5241_recOwned = _out1536;
                _5242_recIdents = _out1537;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5240_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5238_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5239_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1538;
                DCOMP._IOwnership _out1539;
                DCOMP.COMP.FromOwnership(r, _5241_recOwned, expectedOwnership, out _out1538, out _out1539);
                r = _out1538;
                resultingOwnership = _out1539;
                readIdents = _5242_recIdents;
              }
            } else if (_source274.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5243___mcc_h646 = _source274.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5244___mcc_h647 = _source274.dtor_attributes;
              {
                RAST._IType _5245_fromTpeGen;
                RAST._IType _out1540;
                _out1540 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5245_fromTpeGen = _out1540;
                RAST._IType _5246_toTpeGen;
                RAST._IType _out1541;
                _out1541 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5246_toTpeGen = _out1541;
                RAST._IExpr _5247_recursiveGen;
                DCOMP._IOwnership _5248_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5249_recIdents;
                RAST._IExpr _out1542;
                DCOMP._IOwnership _out1543;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1544;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1542, out _out1543, out _out1544);
                _5247_recursiveGen = _out1542;
                _5248_recOwned = _out1543;
                _5249_recIdents = _out1544;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5247_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5245_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5246_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1545;
                DCOMP._IOwnership _out1546;
                DCOMP.COMP.FromOwnership(r, _5248_recOwned, expectedOwnership, out _out1545, out _out1546);
                r = _out1545;
                resultingOwnership = _out1546;
                readIdents = _5249_recIdents;
              }
            } else {
              DAST._IType _5250___mcc_h650 = _source274.dtor_baseType;
              DAST._INewtypeRange _5251___mcc_h651 = _source274.dtor_range;
              bool _5252___mcc_h652 = _source274.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5253___mcc_h653 = _source274.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5254_attributes = _5253___mcc_h653;
              bool _5255_erase = _5252___mcc_h652;
              DAST._INewtypeRange _5256_range = _5251___mcc_h651;
              DAST._IType _5257_b = _5250___mcc_h650;
              {
                Std.Wrappers._IOption<RAST._IType> _5258_nativeToType;
                _5258_nativeToType = DCOMP.COMP.NewtypeToRustType(_5257_b, _5256_range);
                if (object.Equals(_3741_fromTpe, _5257_b)) {
                  RAST._IExpr _5259_recursiveGen;
                  DCOMP._IOwnership _5260_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5261_recIdents;
                  RAST._IExpr _out1547;
                  DCOMP._IOwnership _out1548;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1549;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1547, out _out1548, out _out1549);
                  _5259_recursiveGen = _out1547;
                  _5260_recOwned = _out1548;
                  _5261_recIdents = _out1549;
                  readIdents = _5261_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source275 = _5258_nativeToType;
                  if (_source275.is_None) {
                    if (_5255_erase) {
                      r = _5259_recursiveGen;
                    } else {
                      RAST._IType _5262_rhsType;
                      RAST._IType _out1550;
                      _out1550 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _5262_rhsType = _out1550;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5262_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5259_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1551;
                    DCOMP._IOwnership _out1552;
                    DCOMP.COMP.FromOwnership(r, _5260_recOwned, expectedOwnership, out _out1551, out _out1552);
                    r = _out1551;
                    resultingOwnership = _out1552;
                  } else {
                    RAST._IType _5263___mcc_h1819 = _source275.dtor_value;
                    RAST._IType _5264_v = _5263___mcc_h1819;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5259_recursiveGen, RAST.Expr.create_ExprFromType(_5264_v)));
                    RAST._IExpr _out1553;
                    DCOMP._IOwnership _out1554;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1553, out _out1554);
                    r = _out1553;
                    resultingOwnership = _out1554;
                  }
                } else {
                  if ((_5258_nativeToType).is_Some) {
                    DAST._IType _source276 = _3741_fromTpe;
                    if (_source276.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5265___mcc_h1820 = _source276.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5266___mcc_h1821 = _source276.dtor_typeArgs;
                      DAST._IResolvedType _5267___mcc_h1822 = _source276.dtor_resolved;
                      DAST._IResolvedType _source277 = _5267___mcc_h1822;
                      if (_source277.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5268___mcc_h1826 = _source277.dtor_datatypeType;
                      } else if (_source277.is_Datatype) {
                        DAST._IDatatypeType _5269___mcc_h1828 = _source277.dtor_datatypeType;
                      } else if (_source277.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5270___mcc_h1830 = _source277.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5271___mcc_h1831 = _source277.dtor_attributes;
                      } else {
                        DAST._IType _5272___mcc_h1834 = _source277.dtor_baseType;
                        DAST._INewtypeRange _5273___mcc_h1835 = _source277.dtor_range;
                        bool _5274___mcc_h1836 = _source277.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5275___mcc_h1837 = _source277.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5276_attributes0 = _5275___mcc_h1837;
                        bool _5277_erase0 = _5274___mcc_h1836;
                        DAST._INewtypeRange _5278_range0 = _5273___mcc_h1835;
                        DAST._IType _5279_b0 = _5272___mcc_h1834;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5280_nativeFromType;
                          _5280_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5279_b0, _5278_range0);
                          if ((_5280_nativeFromType).is_Some) {
                            RAST._IExpr _5281_recursiveGen;
                            DCOMP._IOwnership _5282_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5283_recIdents;
                            RAST._IExpr _out1555;
                            DCOMP._IOwnership _out1556;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1557;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1555, out _out1556, out _out1557);
                            _5281_recursiveGen = _out1555;
                            _5282_recOwned = _out1556;
                            _5283_recIdents = _out1557;
                            RAST._IExpr _out1558;
                            DCOMP._IOwnership _out1559;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5281_recursiveGen, (_5258_nativeToType).dtor_value), _5282_recOwned, expectedOwnership, out _out1558, out _out1559);
                            r = _out1558;
                            resultingOwnership = _out1559;
                            readIdents = _5283_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source276.is_Nullable) {
                      DAST._IType _5284___mcc_h1842 = _source276.dtor_Nullable_a0;
                    } else if (_source276.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5285___mcc_h1844 = _source276.dtor_Tuple_a0;
                    } else if (_source276.is_Array) {
                      DAST._IType _5286___mcc_h1846 = _source276.dtor_element;
                      BigInteger _5287___mcc_h1847 = _source276.dtor_dims;
                    } else if (_source276.is_Seq) {
                      DAST._IType _5288___mcc_h1850 = _source276.dtor_element;
                    } else if (_source276.is_Set) {
                      DAST._IType _5289___mcc_h1852 = _source276.dtor_element;
                    } else if (_source276.is_Multiset) {
                      DAST._IType _5290___mcc_h1854 = _source276.dtor_element;
                    } else if (_source276.is_Map) {
                      DAST._IType _5291___mcc_h1856 = _source276.dtor_key;
                      DAST._IType _5292___mcc_h1857 = _source276.dtor_value;
                    } else if (_source276.is_SetBuilder) {
                      DAST._IType _5293___mcc_h1860 = _source276.dtor_element;
                    } else if (_source276.is_MapBuilder) {
                      DAST._IType _5294___mcc_h1862 = _source276.dtor_key;
                      DAST._IType _5295___mcc_h1863 = _source276.dtor_value;
                    } else if (_source276.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5296___mcc_h1866 = _source276.dtor_args;
                      DAST._IType _5297___mcc_h1867 = _source276.dtor_result;
                    } else if (_source276.is_Primitive) {
                      DAST._IPrimitive _5298___mcc_h1870 = _source276.dtor_Primitive_a0;
                    } else if (_source276.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5299___mcc_h1872 = _source276.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5300___mcc_h1874 = _source276.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5301_recursiveGen;
                      DCOMP._IOwnership _5302_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5303_recIdents;
                      RAST._IExpr _out1560;
                      DCOMP._IOwnership _out1561;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1562;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1560, out _out1561, out _out1562);
                      _5301_recursiveGen = _out1560;
                      _5302_recOwned = _out1561;
                      _5303_recIdents = _out1562;
                      RAST._IExpr _out1563;
                      DCOMP._IOwnership _out1564;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5301_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5258_nativeToType).dtor_value), _5302_recOwned, expectedOwnership, out _out1563, out _out1564);
                      r = _out1563;
                      resultingOwnership = _out1564;
                      readIdents = _5303_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1565;
                  DCOMP._IOwnership _out1566;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1567;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _5257_b), _5257_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1565, out _out1566, out _out1567);
                  r = _out1565;
                  resultingOwnership = _out1566;
                  readIdents = _out1567;
                }
              }
            }
          } else if (_source273.is_Nullable) {
            DAST._IType _5304___mcc_h658 = _source273.dtor_Nullable_a0;
            {
              RAST._IExpr _5305_recursiveGen;
              DCOMP._IOwnership _5306_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5307_recIdents;
              RAST._IExpr _out1568;
              DCOMP._IOwnership _out1569;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1570;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1568, out _out1569, out _out1570);
              _5305_recursiveGen = _out1568;
              _5306_recOwned = _out1569;
              _5307_recIdents = _out1570;
              r = _5305_recursiveGen;
              if (object.Equals(_5306_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1571;
              DCOMP._IOwnership _out1572;
              DCOMP.COMP.FromOwnership(r, _5306_recOwned, expectedOwnership, out _out1571, out _out1572);
              r = _out1571;
              resultingOwnership = _out1572;
              readIdents = _5307_recIdents;
            }
          } else if (_source273.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5308___mcc_h660 = _source273.dtor_Tuple_a0;
            {
              RAST._IType _5309_fromTpeGen;
              RAST._IType _out1573;
              _out1573 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5309_fromTpeGen = _out1573;
              RAST._IType _5310_toTpeGen;
              RAST._IType _out1574;
              _out1574 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5310_toTpeGen = _out1574;
              RAST._IExpr _5311_recursiveGen;
              DCOMP._IOwnership _5312_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5313_recIdents;
              RAST._IExpr _out1575;
              DCOMP._IOwnership _out1576;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1577;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1575, out _out1576, out _out1577);
              _5311_recursiveGen = _out1575;
              _5312_recOwned = _out1576;
              _5313_recIdents = _out1577;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5311_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5309_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5310_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1578;
              DCOMP._IOwnership _out1579;
              DCOMP.COMP.FromOwnership(r, _5312_recOwned, expectedOwnership, out _out1578, out _out1579);
              r = _out1578;
              resultingOwnership = _out1579;
              readIdents = _5313_recIdents;
            }
          } else if (_source273.is_Array) {
            DAST._IType _5314___mcc_h662 = _source273.dtor_element;
            BigInteger _5315___mcc_h663 = _source273.dtor_dims;
            {
              RAST._IType _5316_fromTpeGen;
              RAST._IType _out1580;
              _out1580 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5316_fromTpeGen = _out1580;
              RAST._IType _5317_toTpeGen;
              RAST._IType _out1581;
              _out1581 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5317_toTpeGen = _out1581;
              RAST._IExpr _5318_recursiveGen;
              DCOMP._IOwnership _5319_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5320_recIdents;
              RAST._IExpr _out1582;
              DCOMP._IOwnership _out1583;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1584;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1582, out _out1583, out _out1584);
              _5318_recursiveGen = _out1582;
              _5319_recOwned = _out1583;
              _5320_recIdents = _out1584;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5318_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5316_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5317_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1585;
              DCOMP._IOwnership _out1586;
              DCOMP.COMP.FromOwnership(r, _5319_recOwned, expectedOwnership, out _out1585, out _out1586);
              r = _out1585;
              resultingOwnership = _out1586;
              readIdents = _5320_recIdents;
            }
          } else if (_source273.is_Seq) {
            DAST._IType _5321___mcc_h666 = _source273.dtor_element;
            {
              RAST._IType _5322_fromTpeGen;
              RAST._IType _out1587;
              _out1587 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5322_fromTpeGen = _out1587;
              RAST._IType _5323_toTpeGen;
              RAST._IType _out1588;
              _out1588 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5323_toTpeGen = _out1588;
              RAST._IExpr _5324_recursiveGen;
              DCOMP._IOwnership _5325_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5326_recIdents;
              RAST._IExpr _out1589;
              DCOMP._IOwnership _out1590;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1591;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1589, out _out1590, out _out1591);
              _5324_recursiveGen = _out1589;
              _5325_recOwned = _out1590;
              _5326_recIdents = _out1591;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5324_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5322_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5323_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1592;
              DCOMP._IOwnership _out1593;
              DCOMP.COMP.FromOwnership(r, _5325_recOwned, expectedOwnership, out _out1592, out _out1593);
              r = _out1592;
              resultingOwnership = _out1593;
              readIdents = _5326_recIdents;
            }
          } else if (_source273.is_Set) {
            DAST._IType _5327___mcc_h668 = _source273.dtor_element;
            {
              RAST._IType _5328_fromTpeGen;
              RAST._IType _out1594;
              _out1594 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5328_fromTpeGen = _out1594;
              RAST._IType _5329_toTpeGen;
              RAST._IType _out1595;
              _out1595 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5329_toTpeGen = _out1595;
              RAST._IExpr _5330_recursiveGen;
              DCOMP._IOwnership _5331_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5332_recIdents;
              RAST._IExpr _out1596;
              DCOMP._IOwnership _out1597;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1598;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1596, out _out1597, out _out1598);
              _5330_recursiveGen = _out1596;
              _5331_recOwned = _out1597;
              _5332_recIdents = _out1598;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5330_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5328_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5329_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1599;
              DCOMP._IOwnership _out1600;
              DCOMP.COMP.FromOwnership(r, _5331_recOwned, expectedOwnership, out _out1599, out _out1600);
              r = _out1599;
              resultingOwnership = _out1600;
              readIdents = _5332_recIdents;
            }
          } else if (_source273.is_Multiset) {
            DAST._IType _5333___mcc_h670 = _source273.dtor_element;
            {
              RAST._IType _5334_fromTpeGen;
              RAST._IType _out1601;
              _out1601 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5334_fromTpeGen = _out1601;
              RAST._IType _5335_toTpeGen;
              RAST._IType _out1602;
              _out1602 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5335_toTpeGen = _out1602;
              RAST._IExpr _5336_recursiveGen;
              DCOMP._IOwnership _5337_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5338_recIdents;
              RAST._IExpr _out1603;
              DCOMP._IOwnership _out1604;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1605;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1603, out _out1604, out _out1605);
              _5336_recursiveGen = _out1603;
              _5337_recOwned = _out1604;
              _5338_recIdents = _out1605;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5336_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5334_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5335_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1606;
              DCOMP._IOwnership _out1607;
              DCOMP.COMP.FromOwnership(r, _5337_recOwned, expectedOwnership, out _out1606, out _out1607);
              r = _out1606;
              resultingOwnership = _out1607;
              readIdents = _5338_recIdents;
            }
          } else if (_source273.is_Map) {
            DAST._IType _5339___mcc_h672 = _source273.dtor_key;
            DAST._IType _5340___mcc_h673 = _source273.dtor_value;
            {
              RAST._IType _5341_fromTpeGen;
              RAST._IType _out1608;
              _out1608 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5341_fromTpeGen = _out1608;
              RAST._IType _5342_toTpeGen;
              RAST._IType _out1609;
              _out1609 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5342_toTpeGen = _out1609;
              RAST._IExpr _5343_recursiveGen;
              DCOMP._IOwnership _5344_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5345_recIdents;
              RAST._IExpr _out1610;
              DCOMP._IOwnership _out1611;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1612;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1610, out _out1611, out _out1612);
              _5343_recursiveGen = _out1610;
              _5344_recOwned = _out1611;
              _5345_recIdents = _out1612;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5343_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5341_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5342_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1613;
              DCOMP._IOwnership _out1614;
              DCOMP.COMP.FromOwnership(r, _5344_recOwned, expectedOwnership, out _out1613, out _out1614);
              r = _out1613;
              resultingOwnership = _out1614;
              readIdents = _5345_recIdents;
            }
          } else if (_source273.is_SetBuilder) {
            DAST._IType _5346___mcc_h676 = _source273.dtor_element;
            {
              RAST._IType _5347_fromTpeGen;
              RAST._IType _out1615;
              _out1615 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5347_fromTpeGen = _out1615;
              RAST._IType _5348_toTpeGen;
              RAST._IType _out1616;
              _out1616 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5348_toTpeGen = _out1616;
              RAST._IExpr _5349_recursiveGen;
              DCOMP._IOwnership _5350_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5351_recIdents;
              RAST._IExpr _out1617;
              DCOMP._IOwnership _out1618;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1619;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1617, out _out1618, out _out1619);
              _5349_recursiveGen = _out1617;
              _5350_recOwned = _out1618;
              _5351_recIdents = _out1619;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5349_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5347_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5348_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1620;
              DCOMP._IOwnership _out1621;
              DCOMP.COMP.FromOwnership(r, _5350_recOwned, expectedOwnership, out _out1620, out _out1621);
              r = _out1620;
              resultingOwnership = _out1621;
              readIdents = _5351_recIdents;
            }
          } else if (_source273.is_MapBuilder) {
            DAST._IType _5352___mcc_h678 = _source273.dtor_key;
            DAST._IType _5353___mcc_h679 = _source273.dtor_value;
            {
              RAST._IType _5354_fromTpeGen;
              RAST._IType _out1622;
              _out1622 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5354_fromTpeGen = _out1622;
              RAST._IType _5355_toTpeGen;
              RAST._IType _out1623;
              _out1623 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5355_toTpeGen = _out1623;
              RAST._IExpr _5356_recursiveGen;
              DCOMP._IOwnership _5357_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5358_recIdents;
              RAST._IExpr _out1624;
              DCOMP._IOwnership _out1625;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1626;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1624, out _out1625, out _out1626);
              _5356_recursiveGen = _out1624;
              _5357_recOwned = _out1625;
              _5358_recIdents = _out1626;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5356_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5354_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5355_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1627;
              DCOMP._IOwnership _out1628;
              DCOMP.COMP.FromOwnership(r, _5357_recOwned, expectedOwnership, out _out1627, out _out1628);
              r = _out1627;
              resultingOwnership = _out1628;
              readIdents = _5358_recIdents;
            }
          } else if (_source273.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5359___mcc_h682 = _source273.dtor_args;
            DAST._IType _5360___mcc_h683 = _source273.dtor_result;
            {
              RAST._IType _5361_fromTpeGen;
              RAST._IType _out1629;
              _out1629 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5361_fromTpeGen = _out1629;
              RAST._IType _5362_toTpeGen;
              RAST._IType _out1630;
              _out1630 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5362_toTpeGen = _out1630;
              RAST._IExpr _5363_recursiveGen;
              DCOMP._IOwnership _5364_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5365_recIdents;
              RAST._IExpr _out1631;
              DCOMP._IOwnership _out1632;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1633;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1631, out _out1632, out _out1633);
              _5363_recursiveGen = _out1631;
              _5364_recOwned = _out1632;
              _5365_recIdents = _out1633;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5363_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5361_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5362_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1634;
              DCOMP._IOwnership _out1635;
              DCOMP.COMP.FromOwnership(r, _5364_recOwned, expectedOwnership, out _out1634, out _out1635);
              r = _out1634;
              resultingOwnership = _out1635;
              readIdents = _5365_recIdents;
            }
          } else if (_source273.is_Primitive) {
            DAST._IPrimitive _5366___mcc_h686 = _source273.dtor_Primitive_a0;
            {
              RAST._IType _5367_fromTpeGen;
              RAST._IType _out1636;
              _out1636 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5367_fromTpeGen = _out1636;
              RAST._IType _5368_toTpeGen;
              RAST._IType _out1637;
              _out1637 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5368_toTpeGen = _out1637;
              RAST._IExpr _5369_recursiveGen;
              DCOMP._IOwnership _5370_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5371_recIdents;
              RAST._IExpr _out1638;
              DCOMP._IOwnership _out1639;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1640;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1638, out _out1639, out _out1640);
              _5369_recursiveGen = _out1638;
              _5370_recOwned = _out1639;
              _5371_recIdents = _out1640;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5369_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5367_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5368_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1641;
              DCOMP._IOwnership _out1642;
              DCOMP.COMP.FromOwnership(r, _5370_recOwned, expectedOwnership, out _out1641, out _out1642);
              r = _out1641;
              resultingOwnership = _out1642;
              readIdents = _5371_recIdents;
            }
          } else if (_source273.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5372___mcc_h688 = _source273.dtor_Passthrough_a0;
            {
              RAST._IType _5373_fromTpeGen;
              RAST._IType _out1643;
              _out1643 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5373_fromTpeGen = _out1643;
              RAST._IType _5374_toTpeGen;
              RAST._IType _out1644;
              _out1644 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5374_toTpeGen = _out1644;
              RAST._IExpr _5375_recursiveGen;
              DCOMP._IOwnership _5376_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5377_recIdents;
              RAST._IExpr _out1645;
              DCOMP._IOwnership _out1646;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1647;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1645, out _out1646, out _out1647);
              _5375_recursiveGen = _out1645;
              _5376_recOwned = _out1646;
              _5377_recIdents = _out1647;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5375_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5373_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5374_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1648;
              DCOMP._IOwnership _out1649;
              DCOMP.COMP.FromOwnership(r, _5376_recOwned, expectedOwnership, out _out1648, out _out1649);
              r = _out1648;
              resultingOwnership = _out1649;
              readIdents = _5377_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5378___mcc_h690 = _source273.dtor_TypeArg_a0;
            {
              RAST._IType _5379_fromTpeGen;
              RAST._IType _out1650;
              _out1650 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5379_fromTpeGen = _out1650;
              RAST._IType _5380_toTpeGen;
              RAST._IType _out1651;
              _out1651 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5380_toTpeGen = _out1651;
              RAST._IExpr _5381_recursiveGen;
              DCOMP._IOwnership _5382_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5383_recIdents;
              RAST._IExpr _out1652;
              DCOMP._IOwnership _out1653;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1654;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1652, out _out1653, out _out1654);
              _5381_recursiveGen = _out1652;
              _5382_recOwned = _out1653;
              _5383_recIdents = _out1654;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5381_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5379_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5380_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1655;
              DCOMP._IOwnership _out1656;
              DCOMP.COMP.FromOwnership(r, _5382_recOwned, expectedOwnership, out _out1655, out _out1656);
              r = _out1655;
              resultingOwnership = _out1656;
              readIdents = _5383_recIdents;
            }
          }
        } else if (_source214.is_Map) {
          DAST._IType _5384___mcc_h692 = _source214.dtor_key;
          DAST._IType _5385___mcc_h693 = _source214.dtor_value;
          DAST._IType _source278 = _3747___mcc_h1;
          if (_source278.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5386___mcc_h700 = _source278.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5387___mcc_h701 = _source278.dtor_typeArgs;
            DAST._IResolvedType _5388___mcc_h702 = _source278.dtor_resolved;
            DAST._IResolvedType _source279 = _5388___mcc_h702;
            if (_source279.is_AllocatedDatatype) {
              DAST._IDatatypeType _5389___mcc_h706 = _source279.dtor_datatypeType;
              {
                RAST._IType _5390_fromTpeGen;
                RAST._IType _out1657;
                _out1657 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5390_fromTpeGen = _out1657;
                RAST._IType _5391_toTpeGen;
                RAST._IType _out1658;
                _out1658 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5391_toTpeGen = _out1658;
                RAST._IExpr _5392_recursiveGen;
                DCOMP._IOwnership _5393_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5394_recIdents;
                RAST._IExpr _out1659;
                DCOMP._IOwnership _out1660;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1661;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1659, out _out1660, out _out1661);
                _5392_recursiveGen = _out1659;
                _5393_recOwned = _out1660;
                _5394_recIdents = _out1661;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5392_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5390_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5391_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1662;
                DCOMP._IOwnership _out1663;
                DCOMP.COMP.FromOwnership(r, _5393_recOwned, expectedOwnership, out _out1662, out _out1663);
                r = _out1662;
                resultingOwnership = _out1663;
                readIdents = _5394_recIdents;
              }
            } else if (_source279.is_Datatype) {
              DAST._IDatatypeType _5395___mcc_h708 = _source279.dtor_datatypeType;
              {
                RAST._IType _5396_fromTpeGen;
                RAST._IType _out1664;
                _out1664 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5396_fromTpeGen = _out1664;
                RAST._IType _5397_toTpeGen;
                RAST._IType _out1665;
                _out1665 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5397_toTpeGen = _out1665;
                RAST._IExpr _5398_recursiveGen;
                DCOMP._IOwnership _5399_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5400_recIdents;
                RAST._IExpr _out1666;
                DCOMP._IOwnership _out1667;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1668;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1666, out _out1667, out _out1668);
                _5398_recursiveGen = _out1666;
                _5399_recOwned = _out1667;
                _5400_recIdents = _out1668;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5398_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5396_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5397_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1669;
                DCOMP._IOwnership _out1670;
                DCOMP.COMP.FromOwnership(r, _5399_recOwned, expectedOwnership, out _out1669, out _out1670);
                r = _out1669;
                resultingOwnership = _out1670;
                readIdents = _5400_recIdents;
              }
            } else if (_source279.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5401___mcc_h710 = _source279.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5402___mcc_h711 = _source279.dtor_attributes;
              {
                RAST._IType _5403_fromTpeGen;
                RAST._IType _out1671;
                _out1671 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5403_fromTpeGen = _out1671;
                RAST._IType _5404_toTpeGen;
                RAST._IType _out1672;
                _out1672 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5404_toTpeGen = _out1672;
                RAST._IExpr _5405_recursiveGen;
                DCOMP._IOwnership _5406_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5407_recIdents;
                RAST._IExpr _out1673;
                DCOMP._IOwnership _out1674;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1675;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1673, out _out1674, out _out1675);
                _5405_recursiveGen = _out1673;
                _5406_recOwned = _out1674;
                _5407_recIdents = _out1675;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5405_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5403_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5404_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1676;
                DCOMP._IOwnership _out1677;
                DCOMP.COMP.FromOwnership(r, _5406_recOwned, expectedOwnership, out _out1676, out _out1677);
                r = _out1676;
                resultingOwnership = _out1677;
                readIdents = _5407_recIdents;
              }
            } else {
              DAST._IType _5408___mcc_h714 = _source279.dtor_baseType;
              DAST._INewtypeRange _5409___mcc_h715 = _source279.dtor_range;
              bool _5410___mcc_h716 = _source279.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5411___mcc_h717 = _source279.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5412_attributes = _5411___mcc_h717;
              bool _5413_erase = _5410___mcc_h716;
              DAST._INewtypeRange _5414_range = _5409___mcc_h715;
              DAST._IType _5415_b = _5408___mcc_h714;
              {
                Std.Wrappers._IOption<RAST._IType> _5416_nativeToType;
                _5416_nativeToType = DCOMP.COMP.NewtypeToRustType(_5415_b, _5414_range);
                if (object.Equals(_3741_fromTpe, _5415_b)) {
                  RAST._IExpr _5417_recursiveGen;
                  DCOMP._IOwnership _5418_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5419_recIdents;
                  RAST._IExpr _out1678;
                  DCOMP._IOwnership _out1679;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1680;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1678, out _out1679, out _out1680);
                  _5417_recursiveGen = _out1678;
                  _5418_recOwned = _out1679;
                  _5419_recIdents = _out1680;
                  readIdents = _5419_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source280 = _5416_nativeToType;
                  if (_source280.is_None) {
                    if (_5413_erase) {
                      r = _5417_recursiveGen;
                    } else {
                      RAST._IType _5420_rhsType;
                      RAST._IType _out1681;
                      _out1681 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _5420_rhsType = _out1681;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5420_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5417_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1682;
                    DCOMP._IOwnership _out1683;
                    DCOMP.COMP.FromOwnership(r, _5418_recOwned, expectedOwnership, out _out1682, out _out1683);
                    r = _out1682;
                    resultingOwnership = _out1683;
                  } else {
                    RAST._IType _5421___mcc_h1876 = _source280.dtor_value;
                    RAST._IType _5422_v = _5421___mcc_h1876;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5417_recursiveGen, RAST.Expr.create_ExprFromType(_5422_v)));
                    RAST._IExpr _out1684;
                    DCOMP._IOwnership _out1685;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1684, out _out1685);
                    r = _out1684;
                    resultingOwnership = _out1685;
                  }
                } else {
                  if ((_5416_nativeToType).is_Some) {
                    DAST._IType _source281 = _3741_fromTpe;
                    if (_source281.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5423___mcc_h1877 = _source281.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5424___mcc_h1878 = _source281.dtor_typeArgs;
                      DAST._IResolvedType _5425___mcc_h1879 = _source281.dtor_resolved;
                      DAST._IResolvedType _source282 = _5425___mcc_h1879;
                      if (_source282.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5426___mcc_h1883 = _source282.dtor_datatypeType;
                      } else if (_source282.is_Datatype) {
                        DAST._IDatatypeType _5427___mcc_h1885 = _source282.dtor_datatypeType;
                      } else if (_source282.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5428___mcc_h1887 = _source282.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5429___mcc_h1888 = _source282.dtor_attributes;
                      } else {
                        DAST._IType _5430___mcc_h1891 = _source282.dtor_baseType;
                        DAST._INewtypeRange _5431___mcc_h1892 = _source282.dtor_range;
                        bool _5432___mcc_h1893 = _source282.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5433___mcc_h1894 = _source282.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5434_attributes0 = _5433___mcc_h1894;
                        bool _5435_erase0 = _5432___mcc_h1893;
                        DAST._INewtypeRange _5436_range0 = _5431___mcc_h1892;
                        DAST._IType _5437_b0 = _5430___mcc_h1891;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5438_nativeFromType;
                          _5438_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5437_b0, _5436_range0);
                          if ((_5438_nativeFromType).is_Some) {
                            RAST._IExpr _5439_recursiveGen;
                            DCOMP._IOwnership _5440_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5441_recIdents;
                            RAST._IExpr _out1686;
                            DCOMP._IOwnership _out1687;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1688;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1686, out _out1687, out _out1688);
                            _5439_recursiveGen = _out1686;
                            _5440_recOwned = _out1687;
                            _5441_recIdents = _out1688;
                            RAST._IExpr _out1689;
                            DCOMP._IOwnership _out1690;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5439_recursiveGen, (_5416_nativeToType).dtor_value), _5440_recOwned, expectedOwnership, out _out1689, out _out1690);
                            r = _out1689;
                            resultingOwnership = _out1690;
                            readIdents = _5441_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source281.is_Nullable) {
                      DAST._IType _5442___mcc_h1899 = _source281.dtor_Nullable_a0;
                    } else if (_source281.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5443___mcc_h1901 = _source281.dtor_Tuple_a0;
                    } else if (_source281.is_Array) {
                      DAST._IType _5444___mcc_h1903 = _source281.dtor_element;
                      BigInteger _5445___mcc_h1904 = _source281.dtor_dims;
                    } else if (_source281.is_Seq) {
                      DAST._IType _5446___mcc_h1907 = _source281.dtor_element;
                    } else if (_source281.is_Set) {
                      DAST._IType _5447___mcc_h1909 = _source281.dtor_element;
                    } else if (_source281.is_Multiset) {
                      DAST._IType _5448___mcc_h1911 = _source281.dtor_element;
                    } else if (_source281.is_Map) {
                      DAST._IType _5449___mcc_h1913 = _source281.dtor_key;
                      DAST._IType _5450___mcc_h1914 = _source281.dtor_value;
                    } else if (_source281.is_SetBuilder) {
                      DAST._IType _5451___mcc_h1917 = _source281.dtor_element;
                    } else if (_source281.is_MapBuilder) {
                      DAST._IType _5452___mcc_h1919 = _source281.dtor_key;
                      DAST._IType _5453___mcc_h1920 = _source281.dtor_value;
                    } else if (_source281.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5454___mcc_h1923 = _source281.dtor_args;
                      DAST._IType _5455___mcc_h1924 = _source281.dtor_result;
                    } else if (_source281.is_Primitive) {
                      DAST._IPrimitive _5456___mcc_h1927 = _source281.dtor_Primitive_a0;
                    } else if (_source281.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5457___mcc_h1929 = _source281.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5458___mcc_h1931 = _source281.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5459_recursiveGen;
                      DCOMP._IOwnership _5460_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5461_recIdents;
                      RAST._IExpr _out1691;
                      DCOMP._IOwnership _out1692;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1693;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1691, out _out1692, out _out1693);
                      _5459_recursiveGen = _out1691;
                      _5460_recOwned = _out1692;
                      _5461_recIdents = _out1693;
                      RAST._IExpr _out1694;
                      DCOMP._IOwnership _out1695;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5459_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5416_nativeToType).dtor_value), _5460_recOwned, expectedOwnership, out _out1694, out _out1695);
                      r = _out1694;
                      resultingOwnership = _out1695;
                      readIdents = _5461_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1696;
                  DCOMP._IOwnership _out1697;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1698;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _5415_b), _5415_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1696, out _out1697, out _out1698);
                  r = _out1696;
                  resultingOwnership = _out1697;
                  readIdents = _out1698;
                }
              }
            }
          } else if (_source278.is_Nullable) {
            DAST._IType _5462___mcc_h722 = _source278.dtor_Nullable_a0;
            {
              RAST._IExpr _5463_recursiveGen;
              DCOMP._IOwnership _5464_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5465_recIdents;
              RAST._IExpr _out1699;
              DCOMP._IOwnership _out1700;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1701;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1699, out _out1700, out _out1701);
              _5463_recursiveGen = _out1699;
              _5464_recOwned = _out1700;
              _5465_recIdents = _out1701;
              r = _5463_recursiveGen;
              if (object.Equals(_5464_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1702;
              DCOMP._IOwnership _out1703;
              DCOMP.COMP.FromOwnership(r, _5464_recOwned, expectedOwnership, out _out1702, out _out1703);
              r = _out1702;
              resultingOwnership = _out1703;
              readIdents = _5465_recIdents;
            }
          } else if (_source278.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5466___mcc_h724 = _source278.dtor_Tuple_a0;
            {
              RAST._IType _5467_fromTpeGen;
              RAST._IType _out1704;
              _out1704 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5467_fromTpeGen = _out1704;
              RAST._IType _5468_toTpeGen;
              RAST._IType _out1705;
              _out1705 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5468_toTpeGen = _out1705;
              RAST._IExpr _5469_recursiveGen;
              DCOMP._IOwnership _5470_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5471_recIdents;
              RAST._IExpr _out1706;
              DCOMP._IOwnership _out1707;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1708;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1706, out _out1707, out _out1708);
              _5469_recursiveGen = _out1706;
              _5470_recOwned = _out1707;
              _5471_recIdents = _out1708;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5469_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5467_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5468_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1709;
              DCOMP._IOwnership _out1710;
              DCOMP.COMP.FromOwnership(r, _5470_recOwned, expectedOwnership, out _out1709, out _out1710);
              r = _out1709;
              resultingOwnership = _out1710;
              readIdents = _5471_recIdents;
            }
          } else if (_source278.is_Array) {
            DAST._IType _5472___mcc_h726 = _source278.dtor_element;
            BigInteger _5473___mcc_h727 = _source278.dtor_dims;
            {
              RAST._IType _5474_fromTpeGen;
              RAST._IType _out1711;
              _out1711 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5474_fromTpeGen = _out1711;
              RAST._IType _5475_toTpeGen;
              RAST._IType _out1712;
              _out1712 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5475_toTpeGen = _out1712;
              RAST._IExpr _5476_recursiveGen;
              DCOMP._IOwnership _5477_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5478_recIdents;
              RAST._IExpr _out1713;
              DCOMP._IOwnership _out1714;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1715;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1713, out _out1714, out _out1715);
              _5476_recursiveGen = _out1713;
              _5477_recOwned = _out1714;
              _5478_recIdents = _out1715;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5476_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5474_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5475_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1716;
              DCOMP._IOwnership _out1717;
              DCOMP.COMP.FromOwnership(r, _5477_recOwned, expectedOwnership, out _out1716, out _out1717);
              r = _out1716;
              resultingOwnership = _out1717;
              readIdents = _5478_recIdents;
            }
          } else if (_source278.is_Seq) {
            DAST._IType _5479___mcc_h730 = _source278.dtor_element;
            {
              RAST._IType _5480_fromTpeGen;
              RAST._IType _out1718;
              _out1718 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5480_fromTpeGen = _out1718;
              RAST._IType _5481_toTpeGen;
              RAST._IType _out1719;
              _out1719 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5481_toTpeGen = _out1719;
              RAST._IExpr _5482_recursiveGen;
              DCOMP._IOwnership _5483_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5484_recIdents;
              RAST._IExpr _out1720;
              DCOMP._IOwnership _out1721;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1722;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1720, out _out1721, out _out1722);
              _5482_recursiveGen = _out1720;
              _5483_recOwned = _out1721;
              _5484_recIdents = _out1722;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5482_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5480_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5481_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1723;
              DCOMP._IOwnership _out1724;
              DCOMP.COMP.FromOwnership(r, _5483_recOwned, expectedOwnership, out _out1723, out _out1724);
              r = _out1723;
              resultingOwnership = _out1724;
              readIdents = _5484_recIdents;
            }
          } else if (_source278.is_Set) {
            DAST._IType _5485___mcc_h732 = _source278.dtor_element;
            {
              RAST._IType _5486_fromTpeGen;
              RAST._IType _out1725;
              _out1725 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5486_fromTpeGen = _out1725;
              RAST._IType _5487_toTpeGen;
              RAST._IType _out1726;
              _out1726 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5487_toTpeGen = _out1726;
              RAST._IExpr _5488_recursiveGen;
              DCOMP._IOwnership _5489_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5490_recIdents;
              RAST._IExpr _out1727;
              DCOMP._IOwnership _out1728;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1729;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1727, out _out1728, out _out1729);
              _5488_recursiveGen = _out1727;
              _5489_recOwned = _out1728;
              _5490_recIdents = _out1729;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5488_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5486_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5487_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1730;
              DCOMP._IOwnership _out1731;
              DCOMP.COMP.FromOwnership(r, _5489_recOwned, expectedOwnership, out _out1730, out _out1731);
              r = _out1730;
              resultingOwnership = _out1731;
              readIdents = _5490_recIdents;
            }
          } else if (_source278.is_Multiset) {
            DAST._IType _5491___mcc_h734 = _source278.dtor_element;
            {
              RAST._IType _5492_fromTpeGen;
              RAST._IType _out1732;
              _out1732 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5492_fromTpeGen = _out1732;
              RAST._IType _5493_toTpeGen;
              RAST._IType _out1733;
              _out1733 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5493_toTpeGen = _out1733;
              RAST._IExpr _5494_recursiveGen;
              DCOMP._IOwnership _5495_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5496_recIdents;
              RAST._IExpr _out1734;
              DCOMP._IOwnership _out1735;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1736;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1734, out _out1735, out _out1736);
              _5494_recursiveGen = _out1734;
              _5495_recOwned = _out1735;
              _5496_recIdents = _out1736;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5494_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5492_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5493_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1737;
              DCOMP._IOwnership _out1738;
              DCOMP.COMP.FromOwnership(r, _5495_recOwned, expectedOwnership, out _out1737, out _out1738);
              r = _out1737;
              resultingOwnership = _out1738;
              readIdents = _5496_recIdents;
            }
          } else if (_source278.is_Map) {
            DAST._IType _5497___mcc_h736 = _source278.dtor_key;
            DAST._IType _5498___mcc_h737 = _source278.dtor_value;
            {
              RAST._IType _5499_fromTpeGen;
              RAST._IType _out1739;
              _out1739 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5499_fromTpeGen = _out1739;
              RAST._IType _5500_toTpeGen;
              RAST._IType _out1740;
              _out1740 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5500_toTpeGen = _out1740;
              RAST._IExpr _5501_recursiveGen;
              DCOMP._IOwnership _5502_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5503_recIdents;
              RAST._IExpr _out1741;
              DCOMP._IOwnership _out1742;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1743;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1741, out _out1742, out _out1743);
              _5501_recursiveGen = _out1741;
              _5502_recOwned = _out1742;
              _5503_recIdents = _out1743;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5501_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5499_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5500_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1744;
              DCOMP._IOwnership _out1745;
              DCOMP.COMP.FromOwnership(r, _5502_recOwned, expectedOwnership, out _out1744, out _out1745);
              r = _out1744;
              resultingOwnership = _out1745;
              readIdents = _5503_recIdents;
            }
          } else if (_source278.is_SetBuilder) {
            DAST._IType _5504___mcc_h740 = _source278.dtor_element;
            {
              RAST._IType _5505_fromTpeGen;
              RAST._IType _out1746;
              _out1746 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5505_fromTpeGen = _out1746;
              RAST._IType _5506_toTpeGen;
              RAST._IType _out1747;
              _out1747 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5506_toTpeGen = _out1747;
              RAST._IExpr _5507_recursiveGen;
              DCOMP._IOwnership _5508_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5509_recIdents;
              RAST._IExpr _out1748;
              DCOMP._IOwnership _out1749;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1750;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1748, out _out1749, out _out1750);
              _5507_recursiveGen = _out1748;
              _5508_recOwned = _out1749;
              _5509_recIdents = _out1750;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5507_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5505_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5506_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1751;
              DCOMP._IOwnership _out1752;
              DCOMP.COMP.FromOwnership(r, _5508_recOwned, expectedOwnership, out _out1751, out _out1752);
              r = _out1751;
              resultingOwnership = _out1752;
              readIdents = _5509_recIdents;
            }
          } else if (_source278.is_MapBuilder) {
            DAST._IType _5510___mcc_h742 = _source278.dtor_key;
            DAST._IType _5511___mcc_h743 = _source278.dtor_value;
            {
              RAST._IType _5512_fromTpeGen;
              RAST._IType _out1753;
              _out1753 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5512_fromTpeGen = _out1753;
              RAST._IType _5513_toTpeGen;
              RAST._IType _out1754;
              _out1754 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5513_toTpeGen = _out1754;
              RAST._IExpr _5514_recursiveGen;
              DCOMP._IOwnership _5515_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5516_recIdents;
              RAST._IExpr _out1755;
              DCOMP._IOwnership _out1756;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1757;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1755, out _out1756, out _out1757);
              _5514_recursiveGen = _out1755;
              _5515_recOwned = _out1756;
              _5516_recIdents = _out1757;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5514_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5512_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5513_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1758;
              DCOMP._IOwnership _out1759;
              DCOMP.COMP.FromOwnership(r, _5515_recOwned, expectedOwnership, out _out1758, out _out1759);
              r = _out1758;
              resultingOwnership = _out1759;
              readIdents = _5516_recIdents;
            }
          } else if (_source278.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5517___mcc_h746 = _source278.dtor_args;
            DAST._IType _5518___mcc_h747 = _source278.dtor_result;
            {
              RAST._IType _5519_fromTpeGen;
              RAST._IType _out1760;
              _out1760 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5519_fromTpeGen = _out1760;
              RAST._IType _5520_toTpeGen;
              RAST._IType _out1761;
              _out1761 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5520_toTpeGen = _out1761;
              RAST._IExpr _5521_recursiveGen;
              DCOMP._IOwnership _5522_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5523_recIdents;
              RAST._IExpr _out1762;
              DCOMP._IOwnership _out1763;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1764;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1762, out _out1763, out _out1764);
              _5521_recursiveGen = _out1762;
              _5522_recOwned = _out1763;
              _5523_recIdents = _out1764;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5521_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5519_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5520_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1765;
              DCOMP._IOwnership _out1766;
              DCOMP.COMP.FromOwnership(r, _5522_recOwned, expectedOwnership, out _out1765, out _out1766);
              r = _out1765;
              resultingOwnership = _out1766;
              readIdents = _5523_recIdents;
            }
          } else if (_source278.is_Primitive) {
            DAST._IPrimitive _5524___mcc_h750 = _source278.dtor_Primitive_a0;
            {
              RAST._IType _5525_fromTpeGen;
              RAST._IType _out1767;
              _out1767 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5525_fromTpeGen = _out1767;
              RAST._IType _5526_toTpeGen;
              RAST._IType _out1768;
              _out1768 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5526_toTpeGen = _out1768;
              RAST._IExpr _5527_recursiveGen;
              DCOMP._IOwnership _5528_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5529_recIdents;
              RAST._IExpr _out1769;
              DCOMP._IOwnership _out1770;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1771;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1769, out _out1770, out _out1771);
              _5527_recursiveGen = _out1769;
              _5528_recOwned = _out1770;
              _5529_recIdents = _out1771;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5527_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5525_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5526_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1772;
              DCOMP._IOwnership _out1773;
              DCOMP.COMP.FromOwnership(r, _5528_recOwned, expectedOwnership, out _out1772, out _out1773);
              r = _out1772;
              resultingOwnership = _out1773;
              readIdents = _5529_recIdents;
            }
          } else if (_source278.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5530___mcc_h752 = _source278.dtor_Passthrough_a0;
            {
              RAST._IType _5531_fromTpeGen;
              RAST._IType _out1774;
              _out1774 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5531_fromTpeGen = _out1774;
              RAST._IType _5532_toTpeGen;
              RAST._IType _out1775;
              _out1775 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5532_toTpeGen = _out1775;
              RAST._IExpr _5533_recursiveGen;
              DCOMP._IOwnership _5534_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5535_recIdents;
              RAST._IExpr _out1776;
              DCOMP._IOwnership _out1777;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1778;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1776, out _out1777, out _out1778);
              _5533_recursiveGen = _out1776;
              _5534_recOwned = _out1777;
              _5535_recIdents = _out1778;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5533_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5531_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5532_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1779;
              DCOMP._IOwnership _out1780;
              DCOMP.COMP.FromOwnership(r, _5534_recOwned, expectedOwnership, out _out1779, out _out1780);
              r = _out1779;
              resultingOwnership = _out1780;
              readIdents = _5535_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5536___mcc_h754 = _source278.dtor_TypeArg_a0;
            {
              RAST._IType _5537_fromTpeGen;
              RAST._IType _out1781;
              _out1781 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5537_fromTpeGen = _out1781;
              RAST._IType _5538_toTpeGen;
              RAST._IType _out1782;
              _out1782 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5538_toTpeGen = _out1782;
              RAST._IExpr _5539_recursiveGen;
              DCOMP._IOwnership _5540_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5541_recIdents;
              RAST._IExpr _out1783;
              DCOMP._IOwnership _out1784;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1785;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1783, out _out1784, out _out1785);
              _5539_recursiveGen = _out1783;
              _5540_recOwned = _out1784;
              _5541_recIdents = _out1785;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5539_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5537_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5538_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1786;
              DCOMP._IOwnership _out1787;
              DCOMP.COMP.FromOwnership(r, _5540_recOwned, expectedOwnership, out _out1786, out _out1787);
              r = _out1786;
              resultingOwnership = _out1787;
              readIdents = _5541_recIdents;
            }
          }
        } else if (_source214.is_SetBuilder) {
          DAST._IType _5542___mcc_h756 = _source214.dtor_element;
          DAST._IType _source283 = _3747___mcc_h1;
          if (_source283.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5543___mcc_h760 = _source283.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5544___mcc_h761 = _source283.dtor_typeArgs;
            DAST._IResolvedType _5545___mcc_h762 = _source283.dtor_resolved;
            DAST._IResolvedType _source284 = _5545___mcc_h762;
            if (_source284.is_AllocatedDatatype) {
              DAST._IDatatypeType _5546___mcc_h766 = _source284.dtor_datatypeType;
              {
                RAST._IType _5547_fromTpeGen;
                RAST._IType _out1788;
                _out1788 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5547_fromTpeGen = _out1788;
                RAST._IType _5548_toTpeGen;
                RAST._IType _out1789;
                _out1789 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5548_toTpeGen = _out1789;
                RAST._IExpr _5549_recursiveGen;
                DCOMP._IOwnership _5550_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5551_recIdents;
                RAST._IExpr _out1790;
                DCOMP._IOwnership _out1791;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1792;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1790, out _out1791, out _out1792);
                _5549_recursiveGen = _out1790;
                _5550_recOwned = _out1791;
                _5551_recIdents = _out1792;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5549_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5547_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5548_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1793;
                DCOMP._IOwnership _out1794;
                DCOMP.COMP.FromOwnership(r, _5550_recOwned, expectedOwnership, out _out1793, out _out1794);
                r = _out1793;
                resultingOwnership = _out1794;
                readIdents = _5551_recIdents;
              }
            } else if (_source284.is_Datatype) {
              DAST._IDatatypeType _5552___mcc_h768 = _source284.dtor_datatypeType;
              {
                RAST._IType _5553_fromTpeGen;
                RAST._IType _out1795;
                _out1795 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5553_fromTpeGen = _out1795;
                RAST._IType _5554_toTpeGen;
                RAST._IType _out1796;
                _out1796 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5554_toTpeGen = _out1796;
                RAST._IExpr _5555_recursiveGen;
                DCOMP._IOwnership _5556_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5557_recIdents;
                RAST._IExpr _out1797;
                DCOMP._IOwnership _out1798;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1799;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1797, out _out1798, out _out1799);
                _5555_recursiveGen = _out1797;
                _5556_recOwned = _out1798;
                _5557_recIdents = _out1799;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5555_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5553_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5554_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1800;
                DCOMP._IOwnership _out1801;
                DCOMP.COMP.FromOwnership(r, _5556_recOwned, expectedOwnership, out _out1800, out _out1801);
                r = _out1800;
                resultingOwnership = _out1801;
                readIdents = _5557_recIdents;
              }
            } else if (_source284.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5558___mcc_h770 = _source284.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5559___mcc_h771 = _source284.dtor_attributes;
              {
                RAST._IType _5560_fromTpeGen;
                RAST._IType _out1802;
                _out1802 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5560_fromTpeGen = _out1802;
                RAST._IType _5561_toTpeGen;
                RAST._IType _out1803;
                _out1803 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5561_toTpeGen = _out1803;
                RAST._IExpr _5562_recursiveGen;
                DCOMP._IOwnership _5563_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5564_recIdents;
                RAST._IExpr _out1804;
                DCOMP._IOwnership _out1805;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1806;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1804, out _out1805, out _out1806);
                _5562_recursiveGen = _out1804;
                _5563_recOwned = _out1805;
                _5564_recIdents = _out1806;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5562_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5560_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5561_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1807;
                DCOMP._IOwnership _out1808;
                DCOMP.COMP.FromOwnership(r, _5563_recOwned, expectedOwnership, out _out1807, out _out1808);
                r = _out1807;
                resultingOwnership = _out1808;
                readIdents = _5564_recIdents;
              }
            } else {
              DAST._IType _5565___mcc_h774 = _source284.dtor_baseType;
              DAST._INewtypeRange _5566___mcc_h775 = _source284.dtor_range;
              bool _5567___mcc_h776 = _source284.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5568___mcc_h777 = _source284.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5569_attributes = _5568___mcc_h777;
              bool _5570_erase = _5567___mcc_h776;
              DAST._INewtypeRange _5571_range = _5566___mcc_h775;
              DAST._IType _5572_b = _5565___mcc_h774;
              {
                Std.Wrappers._IOption<RAST._IType> _5573_nativeToType;
                _5573_nativeToType = DCOMP.COMP.NewtypeToRustType(_5572_b, _5571_range);
                if (object.Equals(_3741_fromTpe, _5572_b)) {
                  RAST._IExpr _5574_recursiveGen;
                  DCOMP._IOwnership _5575_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5576_recIdents;
                  RAST._IExpr _out1809;
                  DCOMP._IOwnership _out1810;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1811;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1809, out _out1810, out _out1811);
                  _5574_recursiveGen = _out1809;
                  _5575_recOwned = _out1810;
                  _5576_recIdents = _out1811;
                  readIdents = _5576_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source285 = _5573_nativeToType;
                  if (_source285.is_None) {
                    if (_5570_erase) {
                      r = _5574_recursiveGen;
                    } else {
                      RAST._IType _5577_rhsType;
                      RAST._IType _out1812;
                      _out1812 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _5577_rhsType = _out1812;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5577_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5574_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1813;
                    DCOMP._IOwnership _out1814;
                    DCOMP.COMP.FromOwnership(r, _5575_recOwned, expectedOwnership, out _out1813, out _out1814);
                    r = _out1813;
                    resultingOwnership = _out1814;
                  } else {
                    RAST._IType _5578___mcc_h1933 = _source285.dtor_value;
                    RAST._IType _5579_v = _5578___mcc_h1933;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5574_recursiveGen, RAST.Expr.create_ExprFromType(_5579_v)));
                    RAST._IExpr _out1815;
                    DCOMP._IOwnership _out1816;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1815, out _out1816);
                    r = _out1815;
                    resultingOwnership = _out1816;
                  }
                } else {
                  if ((_5573_nativeToType).is_Some) {
                    DAST._IType _source286 = _3741_fromTpe;
                    if (_source286.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5580___mcc_h1934 = _source286.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5581___mcc_h1935 = _source286.dtor_typeArgs;
                      DAST._IResolvedType _5582___mcc_h1936 = _source286.dtor_resolved;
                      DAST._IResolvedType _source287 = _5582___mcc_h1936;
                      if (_source287.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5583___mcc_h1940 = _source287.dtor_datatypeType;
                      } else if (_source287.is_Datatype) {
                        DAST._IDatatypeType _5584___mcc_h1942 = _source287.dtor_datatypeType;
                      } else if (_source287.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5585___mcc_h1944 = _source287.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5586___mcc_h1945 = _source287.dtor_attributes;
                      } else {
                        DAST._IType _5587___mcc_h1948 = _source287.dtor_baseType;
                        DAST._INewtypeRange _5588___mcc_h1949 = _source287.dtor_range;
                        bool _5589___mcc_h1950 = _source287.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5590___mcc_h1951 = _source287.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5591_attributes0 = _5590___mcc_h1951;
                        bool _5592_erase0 = _5589___mcc_h1950;
                        DAST._INewtypeRange _5593_range0 = _5588___mcc_h1949;
                        DAST._IType _5594_b0 = _5587___mcc_h1948;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5595_nativeFromType;
                          _5595_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5594_b0, _5593_range0);
                          if ((_5595_nativeFromType).is_Some) {
                            RAST._IExpr _5596_recursiveGen;
                            DCOMP._IOwnership _5597_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5598_recIdents;
                            RAST._IExpr _out1817;
                            DCOMP._IOwnership _out1818;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1819;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1817, out _out1818, out _out1819);
                            _5596_recursiveGen = _out1817;
                            _5597_recOwned = _out1818;
                            _5598_recIdents = _out1819;
                            RAST._IExpr _out1820;
                            DCOMP._IOwnership _out1821;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5596_recursiveGen, (_5573_nativeToType).dtor_value), _5597_recOwned, expectedOwnership, out _out1820, out _out1821);
                            r = _out1820;
                            resultingOwnership = _out1821;
                            readIdents = _5598_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source286.is_Nullable) {
                      DAST._IType _5599___mcc_h1956 = _source286.dtor_Nullable_a0;
                    } else if (_source286.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5600___mcc_h1958 = _source286.dtor_Tuple_a0;
                    } else if (_source286.is_Array) {
                      DAST._IType _5601___mcc_h1960 = _source286.dtor_element;
                      BigInteger _5602___mcc_h1961 = _source286.dtor_dims;
                    } else if (_source286.is_Seq) {
                      DAST._IType _5603___mcc_h1964 = _source286.dtor_element;
                    } else if (_source286.is_Set) {
                      DAST._IType _5604___mcc_h1966 = _source286.dtor_element;
                    } else if (_source286.is_Multiset) {
                      DAST._IType _5605___mcc_h1968 = _source286.dtor_element;
                    } else if (_source286.is_Map) {
                      DAST._IType _5606___mcc_h1970 = _source286.dtor_key;
                      DAST._IType _5607___mcc_h1971 = _source286.dtor_value;
                    } else if (_source286.is_SetBuilder) {
                      DAST._IType _5608___mcc_h1974 = _source286.dtor_element;
                    } else if (_source286.is_MapBuilder) {
                      DAST._IType _5609___mcc_h1976 = _source286.dtor_key;
                      DAST._IType _5610___mcc_h1977 = _source286.dtor_value;
                    } else if (_source286.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5611___mcc_h1980 = _source286.dtor_args;
                      DAST._IType _5612___mcc_h1981 = _source286.dtor_result;
                    } else if (_source286.is_Primitive) {
                      DAST._IPrimitive _5613___mcc_h1984 = _source286.dtor_Primitive_a0;
                    } else if (_source286.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5614___mcc_h1986 = _source286.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5615___mcc_h1988 = _source286.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5616_recursiveGen;
                      DCOMP._IOwnership _5617_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5618_recIdents;
                      RAST._IExpr _out1822;
                      DCOMP._IOwnership _out1823;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1824;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1822, out _out1823, out _out1824);
                      _5616_recursiveGen = _out1822;
                      _5617_recOwned = _out1823;
                      _5618_recIdents = _out1824;
                      RAST._IExpr _out1825;
                      DCOMP._IOwnership _out1826;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5616_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5573_nativeToType).dtor_value), _5617_recOwned, expectedOwnership, out _out1825, out _out1826);
                      r = _out1825;
                      resultingOwnership = _out1826;
                      readIdents = _5618_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1827;
                  DCOMP._IOwnership _out1828;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1829;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _5572_b), _5572_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1827, out _out1828, out _out1829);
                  r = _out1827;
                  resultingOwnership = _out1828;
                  readIdents = _out1829;
                }
              }
            }
          } else if (_source283.is_Nullable) {
            DAST._IType _5619___mcc_h782 = _source283.dtor_Nullable_a0;
            {
              RAST._IExpr _5620_recursiveGen;
              DCOMP._IOwnership _5621_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5622_recIdents;
              RAST._IExpr _out1830;
              DCOMP._IOwnership _out1831;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1832;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1830, out _out1831, out _out1832);
              _5620_recursiveGen = _out1830;
              _5621_recOwned = _out1831;
              _5622_recIdents = _out1832;
              r = _5620_recursiveGen;
              if (object.Equals(_5621_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1833;
              DCOMP._IOwnership _out1834;
              DCOMP.COMP.FromOwnership(r, _5621_recOwned, expectedOwnership, out _out1833, out _out1834);
              r = _out1833;
              resultingOwnership = _out1834;
              readIdents = _5622_recIdents;
            }
          } else if (_source283.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5623___mcc_h784 = _source283.dtor_Tuple_a0;
            {
              RAST._IType _5624_fromTpeGen;
              RAST._IType _out1835;
              _out1835 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5624_fromTpeGen = _out1835;
              RAST._IType _5625_toTpeGen;
              RAST._IType _out1836;
              _out1836 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5625_toTpeGen = _out1836;
              RAST._IExpr _5626_recursiveGen;
              DCOMP._IOwnership _5627_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5628_recIdents;
              RAST._IExpr _out1837;
              DCOMP._IOwnership _out1838;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1839;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1837, out _out1838, out _out1839);
              _5626_recursiveGen = _out1837;
              _5627_recOwned = _out1838;
              _5628_recIdents = _out1839;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5626_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5624_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5625_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1840;
              DCOMP._IOwnership _out1841;
              DCOMP.COMP.FromOwnership(r, _5627_recOwned, expectedOwnership, out _out1840, out _out1841);
              r = _out1840;
              resultingOwnership = _out1841;
              readIdents = _5628_recIdents;
            }
          } else if (_source283.is_Array) {
            DAST._IType _5629___mcc_h786 = _source283.dtor_element;
            BigInteger _5630___mcc_h787 = _source283.dtor_dims;
            {
              RAST._IType _5631_fromTpeGen;
              RAST._IType _out1842;
              _out1842 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5631_fromTpeGen = _out1842;
              RAST._IType _5632_toTpeGen;
              RAST._IType _out1843;
              _out1843 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5632_toTpeGen = _out1843;
              RAST._IExpr _5633_recursiveGen;
              DCOMP._IOwnership _5634_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5635_recIdents;
              RAST._IExpr _out1844;
              DCOMP._IOwnership _out1845;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1846;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1844, out _out1845, out _out1846);
              _5633_recursiveGen = _out1844;
              _5634_recOwned = _out1845;
              _5635_recIdents = _out1846;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5633_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5631_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5632_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1847;
              DCOMP._IOwnership _out1848;
              DCOMP.COMP.FromOwnership(r, _5634_recOwned, expectedOwnership, out _out1847, out _out1848);
              r = _out1847;
              resultingOwnership = _out1848;
              readIdents = _5635_recIdents;
            }
          } else if (_source283.is_Seq) {
            DAST._IType _5636___mcc_h790 = _source283.dtor_element;
            {
              RAST._IType _5637_fromTpeGen;
              RAST._IType _out1849;
              _out1849 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5637_fromTpeGen = _out1849;
              RAST._IType _5638_toTpeGen;
              RAST._IType _out1850;
              _out1850 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5638_toTpeGen = _out1850;
              RAST._IExpr _5639_recursiveGen;
              DCOMP._IOwnership _5640_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5641_recIdents;
              RAST._IExpr _out1851;
              DCOMP._IOwnership _out1852;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1853;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1851, out _out1852, out _out1853);
              _5639_recursiveGen = _out1851;
              _5640_recOwned = _out1852;
              _5641_recIdents = _out1853;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5639_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5637_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5638_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1854;
              DCOMP._IOwnership _out1855;
              DCOMP.COMP.FromOwnership(r, _5640_recOwned, expectedOwnership, out _out1854, out _out1855);
              r = _out1854;
              resultingOwnership = _out1855;
              readIdents = _5641_recIdents;
            }
          } else if (_source283.is_Set) {
            DAST._IType _5642___mcc_h792 = _source283.dtor_element;
            {
              RAST._IType _5643_fromTpeGen;
              RAST._IType _out1856;
              _out1856 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5643_fromTpeGen = _out1856;
              RAST._IType _5644_toTpeGen;
              RAST._IType _out1857;
              _out1857 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5644_toTpeGen = _out1857;
              RAST._IExpr _5645_recursiveGen;
              DCOMP._IOwnership _5646_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5647_recIdents;
              RAST._IExpr _out1858;
              DCOMP._IOwnership _out1859;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1860;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1858, out _out1859, out _out1860);
              _5645_recursiveGen = _out1858;
              _5646_recOwned = _out1859;
              _5647_recIdents = _out1860;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5645_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5643_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5644_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1861;
              DCOMP._IOwnership _out1862;
              DCOMP.COMP.FromOwnership(r, _5646_recOwned, expectedOwnership, out _out1861, out _out1862);
              r = _out1861;
              resultingOwnership = _out1862;
              readIdents = _5647_recIdents;
            }
          } else if (_source283.is_Multiset) {
            DAST._IType _5648___mcc_h794 = _source283.dtor_element;
            {
              RAST._IType _5649_fromTpeGen;
              RAST._IType _out1863;
              _out1863 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5649_fromTpeGen = _out1863;
              RAST._IType _5650_toTpeGen;
              RAST._IType _out1864;
              _out1864 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5650_toTpeGen = _out1864;
              RAST._IExpr _5651_recursiveGen;
              DCOMP._IOwnership _5652_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5653_recIdents;
              RAST._IExpr _out1865;
              DCOMP._IOwnership _out1866;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1867;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1865, out _out1866, out _out1867);
              _5651_recursiveGen = _out1865;
              _5652_recOwned = _out1866;
              _5653_recIdents = _out1867;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5651_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5649_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5650_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1868;
              DCOMP._IOwnership _out1869;
              DCOMP.COMP.FromOwnership(r, _5652_recOwned, expectedOwnership, out _out1868, out _out1869);
              r = _out1868;
              resultingOwnership = _out1869;
              readIdents = _5653_recIdents;
            }
          } else if (_source283.is_Map) {
            DAST._IType _5654___mcc_h796 = _source283.dtor_key;
            DAST._IType _5655___mcc_h797 = _source283.dtor_value;
            {
              RAST._IType _5656_fromTpeGen;
              RAST._IType _out1870;
              _out1870 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5656_fromTpeGen = _out1870;
              RAST._IType _5657_toTpeGen;
              RAST._IType _out1871;
              _out1871 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5657_toTpeGen = _out1871;
              RAST._IExpr _5658_recursiveGen;
              DCOMP._IOwnership _5659_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5660_recIdents;
              RAST._IExpr _out1872;
              DCOMP._IOwnership _out1873;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1874;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1872, out _out1873, out _out1874);
              _5658_recursiveGen = _out1872;
              _5659_recOwned = _out1873;
              _5660_recIdents = _out1874;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5658_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5656_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5657_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1875;
              DCOMP._IOwnership _out1876;
              DCOMP.COMP.FromOwnership(r, _5659_recOwned, expectedOwnership, out _out1875, out _out1876);
              r = _out1875;
              resultingOwnership = _out1876;
              readIdents = _5660_recIdents;
            }
          } else if (_source283.is_SetBuilder) {
            DAST._IType _5661___mcc_h800 = _source283.dtor_element;
            {
              RAST._IType _5662_fromTpeGen;
              RAST._IType _out1877;
              _out1877 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5662_fromTpeGen = _out1877;
              RAST._IType _5663_toTpeGen;
              RAST._IType _out1878;
              _out1878 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5663_toTpeGen = _out1878;
              RAST._IExpr _5664_recursiveGen;
              DCOMP._IOwnership _5665_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5666_recIdents;
              RAST._IExpr _out1879;
              DCOMP._IOwnership _out1880;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1881;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1879, out _out1880, out _out1881);
              _5664_recursiveGen = _out1879;
              _5665_recOwned = _out1880;
              _5666_recIdents = _out1881;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5664_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5662_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5663_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1882;
              DCOMP._IOwnership _out1883;
              DCOMP.COMP.FromOwnership(r, _5665_recOwned, expectedOwnership, out _out1882, out _out1883);
              r = _out1882;
              resultingOwnership = _out1883;
              readIdents = _5666_recIdents;
            }
          } else if (_source283.is_MapBuilder) {
            DAST._IType _5667___mcc_h802 = _source283.dtor_key;
            DAST._IType _5668___mcc_h803 = _source283.dtor_value;
            {
              RAST._IType _5669_fromTpeGen;
              RAST._IType _out1884;
              _out1884 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5669_fromTpeGen = _out1884;
              RAST._IType _5670_toTpeGen;
              RAST._IType _out1885;
              _out1885 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5670_toTpeGen = _out1885;
              RAST._IExpr _5671_recursiveGen;
              DCOMP._IOwnership _5672_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5673_recIdents;
              RAST._IExpr _out1886;
              DCOMP._IOwnership _out1887;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1888;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1886, out _out1887, out _out1888);
              _5671_recursiveGen = _out1886;
              _5672_recOwned = _out1887;
              _5673_recIdents = _out1888;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5671_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5669_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5670_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1889;
              DCOMP._IOwnership _out1890;
              DCOMP.COMP.FromOwnership(r, _5672_recOwned, expectedOwnership, out _out1889, out _out1890);
              r = _out1889;
              resultingOwnership = _out1890;
              readIdents = _5673_recIdents;
            }
          } else if (_source283.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5674___mcc_h806 = _source283.dtor_args;
            DAST._IType _5675___mcc_h807 = _source283.dtor_result;
            {
              RAST._IType _5676_fromTpeGen;
              RAST._IType _out1891;
              _out1891 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5676_fromTpeGen = _out1891;
              RAST._IType _5677_toTpeGen;
              RAST._IType _out1892;
              _out1892 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5677_toTpeGen = _out1892;
              RAST._IExpr _5678_recursiveGen;
              DCOMP._IOwnership _5679_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5680_recIdents;
              RAST._IExpr _out1893;
              DCOMP._IOwnership _out1894;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1895;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1893, out _out1894, out _out1895);
              _5678_recursiveGen = _out1893;
              _5679_recOwned = _out1894;
              _5680_recIdents = _out1895;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5678_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5676_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5677_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1896;
              DCOMP._IOwnership _out1897;
              DCOMP.COMP.FromOwnership(r, _5679_recOwned, expectedOwnership, out _out1896, out _out1897);
              r = _out1896;
              resultingOwnership = _out1897;
              readIdents = _5680_recIdents;
            }
          } else if (_source283.is_Primitive) {
            DAST._IPrimitive _5681___mcc_h810 = _source283.dtor_Primitive_a0;
            {
              RAST._IType _5682_fromTpeGen;
              RAST._IType _out1898;
              _out1898 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5682_fromTpeGen = _out1898;
              RAST._IType _5683_toTpeGen;
              RAST._IType _out1899;
              _out1899 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5683_toTpeGen = _out1899;
              RAST._IExpr _5684_recursiveGen;
              DCOMP._IOwnership _5685_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5686_recIdents;
              RAST._IExpr _out1900;
              DCOMP._IOwnership _out1901;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1902;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1900, out _out1901, out _out1902);
              _5684_recursiveGen = _out1900;
              _5685_recOwned = _out1901;
              _5686_recIdents = _out1902;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5684_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5682_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5683_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1903;
              DCOMP._IOwnership _out1904;
              DCOMP.COMP.FromOwnership(r, _5685_recOwned, expectedOwnership, out _out1903, out _out1904);
              r = _out1903;
              resultingOwnership = _out1904;
              readIdents = _5686_recIdents;
            }
          } else if (_source283.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5687___mcc_h812 = _source283.dtor_Passthrough_a0;
            {
              RAST._IType _5688_fromTpeGen;
              RAST._IType _out1905;
              _out1905 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5688_fromTpeGen = _out1905;
              RAST._IType _5689_toTpeGen;
              RAST._IType _out1906;
              _out1906 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5689_toTpeGen = _out1906;
              RAST._IExpr _5690_recursiveGen;
              DCOMP._IOwnership _5691_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5692_recIdents;
              RAST._IExpr _out1907;
              DCOMP._IOwnership _out1908;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1909;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1907, out _out1908, out _out1909);
              _5690_recursiveGen = _out1907;
              _5691_recOwned = _out1908;
              _5692_recIdents = _out1909;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5690_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5688_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5689_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1910;
              DCOMP._IOwnership _out1911;
              DCOMP.COMP.FromOwnership(r, _5691_recOwned, expectedOwnership, out _out1910, out _out1911);
              r = _out1910;
              resultingOwnership = _out1911;
              readIdents = _5692_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5693___mcc_h814 = _source283.dtor_TypeArg_a0;
            {
              RAST._IType _5694_fromTpeGen;
              RAST._IType _out1912;
              _out1912 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5694_fromTpeGen = _out1912;
              RAST._IType _5695_toTpeGen;
              RAST._IType _out1913;
              _out1913 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5695_toTpeGen = _out1913;
              RAST._IExpr _5696_recursiveGen;
              DCOMP._IOwnership _5697_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5698_recIdents;
              RAST._IExpr _out1914;
              DCOMP._IOwnership _out1915;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1916;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1914, out _out1915, out _out1916);
              _5696_recursiveGen = _out1914;
              _5697_recOwned = _out1915;
              _5698_recIdents = _out1916;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5696_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5694_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5695_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1917;
              DCOMP._IOwnership _out1918;
              DCOMP.COMP.FromOwnership(r, _5697_recOwned, expectedOwnership, out _out1917, out _out1918);
              r = _out1917;
              resultingOwnership = _out1918;
              readIdents = _5698_recIdents;
            }
          }
        } else if (_source214.is_MapBuilder) {
          DAST._IType _5699___mcc_h816 = _source214.dtor_key;
          DAST._IType _5700___mcc_h817 = _source214.dtor_value;
          DAST._IType _source288 = _3747___mcc_h1;
          if (_source288.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5701___mcc_h824 = _source288.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5702___mcc_h825 = _source288.dtor_typeArgs;
            DAST._IResolvedType _5703___mcc_h826 = _source288.dtor_resolved;
            DAST._IResolvedType _source289 = _5703___mcc_h826;
            if (_source289.is_AllocatedDatatype) {
              DAST._IDatatypeType _5704___mcc_h830 = _source289.dtor_datatypeType;
              {
                RAST._IType _5705_fromTpeGen;
                RAST._IType _out1919;
                _out1919 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5705_fromTpeGen = _out1919;
                RAST._IType _5706_toTpeGen;
                RAST._IType _out1920;
                _out1920 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5706_toTpeGen = _out1920;
                RAST._IExpr _5707_recursiveGen;
                DCOMP._IOwnership _5708_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5709_recIdents;
                RAST._IExpr _out1921;
                DCOMP._IOwnership _out1922;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1923;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1921, out _out1922, out _out1923);
                _5707_recursiveGen = _out1921;
                _5708_recOwned = _out1922;
                _5709_recIdents = _out1923;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5707_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5705_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5706_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1924;
                DCOMP._IOwnership _out1925;
                DCOMP.COMP.FromOwnership(r, _5708_recOwned, expectedOwnership, out _out1924, out _out1925);
                r = _out1924;
                resultingOwnership = _out1925;
                readIdents = _5709_recIdents;
              }
            } else if (_source289.is_Datatype) {
              DAST._IDatatypeType _5710___mcc_h832 = _source289.dtor_datatypeType;
              {
                RAST._IType _5711_fromTpeGen;
                RAST._IType _out1926;
                _out1926 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5711_fromTpeGen = _out1926;
                RAST._IType _5712_toTpeGen;
                RAST._IType _out1927;
                _out1927 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5712_toTpeGen = _out1927;
                RAST._IExpr _5713_recursiveGen;
                DCOMP._IOwnership _5714_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5715_recIdents;
                RAST._IExpr _out1928;
                DCOMP._IOwnership _out1929;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1930;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1928, out _out1929, out _out1930);
                _5713_recursiveGen = _out1928;
                _5714_recOwned = _out1929;
                _5715_recIdents = _out1930;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5713_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5711_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5712_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1931;
                DCOMP._IOwnership _out1932;
                DCOMP.COMP.FromOwnership(r, _5714_recOwned, expectedOwnership, out _out1931, out _out1932);
                r = _out1931;
                resultingOwnership = _out1932;
                readIdents = _5715_recIdents;
              }
            } else if (_source289.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5716___mcc_h834 = _source289.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5717___mcc_h835 = _source289.dtor_attributes;
              {
                RAST._IType _5718_fromTpeGen;
                RAST._IType _out1933;
                _out1933 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5718_fromTpeGen = _out1933;
                RAST._IType _5719_toTpeGen;
                RAST._IType _out1934;
                _out1934 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5719_toTpeGen = _out1934;
                RAST._IExpr _5720_recursiveGen;
                DCOMP._IOwnership _5721_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5722_recIdents;
                RAST._IExpr _out1935;
                DCOMP._IOwnership _out1936;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1937;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1935, out _out1936, out _out1937);
                _5720_recursiveGen = _out1935;
                _5721_recOwned = _out1936;
                _5722_recIdents = _out1937;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5720_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5718_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5719_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1938;
                DCOMP._IOwnership _out1939;
                DCOMP.COMP.FromOwnership(r, _5721_recOwned, expectedOwnership, out _out1938, out _out1939);
                r = _out1938;
                resultingOwnership = _out1939;
                readIdents = _5722_recIdents;
              }
            } else {
              DAST._IType _5723___mcc_h838 = _source289.dtor_baseType;
              DAST._INewtypeRange _5724___mcc_h839 = _source289.dtor_range;
              bool _5725___mcc_h840 = _source289.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5726___mcc_h841 = _source289.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5727_attributes = _5726___mcc_h841;
              bool _5728_erase = _5725___mcc_h840;
              DAST._INewtypeRange _5729_range = _5724___mcc_h839;
              DAST._IType _5730_b = _5723___mcc_h838;
              {
                Std.Wrappers._IOption<RAST._IType> _5731_nativeToType;
                _5731_nativeToType = DCOMP.COMP.NewtypeToRustType(_5730_b, _5729_range);
                if (object.Equals(_3741_fromTpe, _5730_b)) {
                  RAST._IExpr _5732_recursiveGen;
                  DCOMP._IOwnership _5733_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5734_recIdents;
                  RAST._IExpr _out1940;
                  DCOMP._IOwnership _out1941;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1942;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1940, out _out1941, out _out1942);
                  _5732_recursiveGen = _out1940;
                  _5733_recOwned = _out1941;
                  _5734_recIdents = _out1942;
                  readIdents = _5734_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source290 = _5731_nativeToType;
                  if (_source290.is_None) {
                    if (_5728_erase) {
                      r = _5732_recursiveGen;
                    } else {
                      RAST._IType _5735_rhsType;
                      RAST._IType _out1943;
                      _out1943 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _5735_rhsType = _out1943;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5735_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5732_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1944;
                    DCOMP._IOwnership _out1945;
                    DCOMP.COMP.FromOwnership(r, _5733_recOwned, expectedOwnership, out _out1944, out _out1945);
                    r = _out1944;
                    resultingOwnership = _out1945;
                  } else {
                    RAST._IType _5736___mcc_h1990 = _source290.dtor_value;
                    RAST._IType _5737_v = _5736___mcc_h1990;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5732_recursiveGen, RAST.Expr.create_ExprFromType(_5737_v)));
                    RAST._IExpr _out1946;
                    DCOMP._IOwnership _out1947;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1946, out _out1947);
                    r = _out1946;
                    resultingOwnership = _out1947;
                  }
                } else {
                  if ((_5731_nativeToType).is_Some) {
                    DAST._IType _source291 = _3741_fromTpe;
                    if (_source291.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5738___mcc_h1991 = _source291.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5739___mcc_h1992 = _source291.dtor_typeArgs;
                      DAST._IResolvedType _5740___mcc_h1993 = _source291.dtor_resolved;
                      DAST._IResolvedType _source292 = _5740___mcc_h1993;
                      if (_source292.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5741___mcc_h1997 = _source292.dtor_datatypeType;
                      } else if (_source292.is_Datatype) {
                        DAST._IDatatypeType _5742___mcc_h1999 = _source292.dtor_datatypeType;
                      } else if (_source292.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5743___mcc_h2001 = _source292.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5744___mcc_h2002 = _source292.dtor_attributes;
                      } else {
                        DAST._IType _5745___mcc_h2005 = _source292.dtor_baseType;
                        DAST._INewtypeRange _5746___mcc_h2006 = _source292.dtor_range;
                        bool _5747___mcc_h2007 = _source292.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5748___mcc_h2008 = _source292.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5749_attributes0 = _5748___mcc_h2008;
                        bool _5750_erase0 = _5747___mcc_h2007;
                        DAST._INewtypeRange _5751_range0 = _5746___mcc_h2006;
                        DAST._IType _5752_b0 = _5745___mcc_h2005;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5753_nativeFromType;
                          _5753_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5752_b0, _5751_range0);
                          if ((_5753_nativeFromType).is_Some) {
                            RAST._IExpr _5754_recursiveGen;
                            DCOMP._IOwnership _5755_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5756_recIdents;
                            RAST._IExpr _out1948;
                            DCOMP._IOwnership _out1949;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1950;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1948, out _out1949, out _out1950);
                            _5754_recursiveGen = _out1948;
                            _5755_recOwned = _out1949;
                            _5756_recIdents = _out1950;
                            RAST._IExpr _out1951;
                            DCOMP._IOwnership _out1952;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5754_recursiveGen, (_5731_nativeToType).dtor_value), _5755_recOwned, expectedOwnership, out _out1951, out _out1952);
                            r = _out1951;
                            resultingOwnership = _out1952;
                            readIdents = _5756_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source291.is_Nullable) {
                      DAST._IType _5757___mcc_h2013 = _source291.dtor_Nullable_a0;
                    } else if (_source291.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5758___mcc_h2015 = _source291.dtor_Tuple_a0;
                    } else if (_source291.is_Array) {
                      DAST._IType _5759___mcc_h2017 = _source291.dtor_element;
                      BigInteger _5760___mcc_h2018 = _source291.dtor_dims;
                    } else if (_source291.is_Seq) {
                      DAST._IType _5761___mcc_h2021 = _source291.dtor_element;
                    } else if (_source291.is_Set) {
                      DAST._IType _5762___mcc_h2023 = _source291.dtor_element;
                    } else if (_source291.is_Multiset) {
                      DAST._IType _5763___mcc_h2025 = _source291.dtor_element;
                    } else if (_source291.is_Map) {
                      DAST._IType _5764___mcc_h2027 = _source291.dtor_key;
                      DAST._IType _5765___mcc_h2028 = _source291.dtor_value;
                    } else if (_source291.is_SetBuilder) {
                      DAST._IType _5766___mcc_h2031 = _source291.dtor_element;
                    } else if (_source291.is_MapBuilder) {
                      DAST._IType _5767___mcc_h2033 = _source291.dtor_key;
                      DAST._IType _5768___mcc_h2034 = _source291.dtor_value;
                    } else if (_source291.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5769___mcc_h2037 = _source291.dtor_args;
                      DAST._IType _5770___mcc_h2038 = _source291.dtor_result;
                    } else if (_source291.is_Primitive) {
                      DAST._IPrimitive _5771___mcc_h2041 = _source291.dtor_Primitive_a0;
                    } else if (_source291.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5772___mcc_h2043 = _source291.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5773___mcc_h2045 = _source291.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5774_recursiveGen;
                      DCOMP._IOwnership _5775_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5776_recIdents;
                      RAST._IExpr _out1953;
                      DCOMP._IOwnership _out1954;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1955;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1953, out _out1954, out _out1955);
                      _5774_recursiveGen = _out1953;
                      _5775_recOwned = _out1954;
                      _5776_recIdents = _out1955;
                      RAST._IExpr _out1956;
                      DCOMP._IOwnership _out1957;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5774_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5731_nativeToType).dtor_value), _5775_recOwned, expectedOwnership, out _out1956, out _out1957);
                      r = _out1956;
                      resultingOwnership = _out1957;
                      readIdents = _5776_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1958;
                  DCOMP._IOwnership _out1959;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1960;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _5730_b), _5730_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out1958, out _out1959, out _out1960);
                  r = _out1958;
                  resultingOwnership = _out1959;
                  readIdents = _out1960;
                }
              }
            }
          } else if (_source288.is_Nullable) {
            DAST._IType _5777___mcc_h846 = _source288.dtor_Nullable_a0;
            {
              RAST._IExpr _5778_recursiveGen;
              DCOMP._IOwnership _5779_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5780_recIdents;
              RAST._IExpr _out1961;
              DCOMP._IOwnership _out1962;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1963;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1961, out _out1962, out _out1963);
              _5778_recursiveGen = _out1961;
              _5779_recOwned = _out1962;
              _5780_recIdents = _out1963;
              r = _5778_recursiveGen;
              if (object.Equals(_5779_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1964;
              DCOMP._IOwnership _out1965;
              DCOMP.COMP.FromOwnership(r, _5779_recOwned, expectedOwnership, out _out1964, out _out1965);
              r = _out1964;
              resultingOwnership = _out1965;
              readIdents = _5780_recIdents;
            }
          } else if (_source288.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5781___mcc_h848 = _source288.dtor_Tuple_a0;
            {
              RAST._IType _5782_fromTpeGen;
              RAST._IType _out1966;
              _out1966 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5782_fromTpeGen = _out1966;
              RAST._IType _5783_toTpeGen;
              RAST._IType _out1967;
              _out1967 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5783_toTpeGen = _out1967;
              RAST._IExpr _5784_recursiveGen;
              DCOMP._IOwnership _5785_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5786_recIdents;
              RAST._IExpr _out1968;
              DCOMP._IOwnership _out1969;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1970;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1968, out _out1969, out _out1970);
              _5784_recursiveGen = _out1968;
              _5785_recOwned = _out1969;
              _5786_recIdents = _out1970;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5784_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5782_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5783_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1971;
              DCOMP._IOwnership _out1972;
              DCOMP.COMP.FromOwnership(r, _5785_recOwned, expectedOwnership, out _out1971, out _out1972);
              r = _out1971;
              resultingOwnership = _out1972;
              readIdents = _5786_recIdents;
            }
          } else if (_source288.is_Array) {
            DAST._IType _5787___mcc_h850 = _source288.dtor_element;
            BigInteger _5788___mcc_h851 = _source288.dtor_dims;
            {
              RAST._IType _5789_fromTpeGen;
              RAST._IType _out1973;
              _out1973 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5789_fromTpeGen = _out1973;
              RAST._IType _5790_toTpeGen;
              RAST._IType _out1974;
              _out1974 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5790_toTpeGen = _out1974;
              RAST._IExpr _5791_recursiveGen;
              DCOMP._IOwnership _5792_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5793_recIdents;
              RAST._IExpr _out1975;
              DCOMP._IOwnership _out1976;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1977;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1975, out _out1976, out _out1977);
              _5791_recursiveGen = _out1975;
              _5792_recOwned = _out1976;
              _5793_recIdents = _out1977;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5791_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5789_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5790_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1978;
              DCOMP._IOwnership _out1979;
              DCOMP.COMP.FromOwnership(r, _5792_recOwned, expectedOwnership, out _out1978, out _out1979);
              r = _out1978;
              resultingOwnership = _out1979;
              readIdents = _5793_recIdents;
            }
          } else if (_source288.is_Seq) {
            DAST._IType _5794___mcc_h854 = _source288.dtor_element;
            {
              RAST._IType _5795_fromTpeGen;
              RAST._IType _out1980;
              _out1980 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5795_fromTpeGen = _out1980;
              RAST._IType _5796_toTpeGen;
              RAST._IType _out1981;
              _out1981 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5796_toTpeGen = _out1981;
              RAST._IExpr _5797_recursiveGen;
              DCOMP._IOwnership _5798_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5799_recIdents;
              RAST._IExpr _out1982;
              DCOMP._IOwnership _out1983;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1984;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1982, out _out1983, out _out1984);
              _5797_recursiveGen = _out1982;
              _5798_recOwned = _out1983;
              _5799_recIdents = _out1984;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5797_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5795_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5796_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1985;
              DCOMP._IOwnership _out1986;
              DCOMP.COMP.FromOwnership(r, _5798_recOwned, expectedOwnership, out _out1985, out _out1986);
              r = _out1985;
              resultingOwnership = _out1986;
              readIdents = _5799_recIdents;
            }
          } else if (_source288.is_Set) {
            DAST._IType _5800___mcc_h856 = _source288.dtor_element;
            {
              RAST._IType _5801_fromTpeGen;
              RAST._IType _out1987;
              _out1987 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5801_fromTpeGen = _out1987;
              RAST._IType _5802_toTpeGen;
              RAST._IType _out1988;
              _out1988 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5802_toTpeGen = _out1988;
              RAST._IExpr _5803_recursiveGen;
              DCOMP._IOwnership _5804_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5805_recIdents;
              RAST._IExpr _out1989;
              DCOMP._IOwnership _out1990;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1991;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1989, out _out1990, out _out1991);
              _5803_recursiveGen = _out1989;
              _5804_recOwned = _out1990;
              _5805_recIdents = _out1991;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5803_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5801_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5802_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1992;
              DCOMP._IOwnership _out1993;
              DCOMP.COMP.FromOwnership(r, _5804_recOwned, expectedOwnership, out _out1992, out _out1993);
              r = _out1992;
              resultingOwnership = _out1993;
              readIdents = _5805_recIdents;
            }
          } else if (_source288.is_Multiset) {
            DAST._IType _5806___mcc_h858 = _source288.dtor_element;
            {
              RAST._IType _5807_fromTpeGen;
              RAST._IType _out1994;
              _out1994 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5807_fromTpeGen = _out1994;
              RAST._IType _5808_toTpeGen;
              RAST._IType _out1995;
              _out1995 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5808_toTpeGen = _out1995;
              RAST._IExpr _5809_recursiveGen;
              DCOMP._IOwnership _5810_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5811_recIdents;
              RAST._IExpr _out1996;
              DCOMP._IOwnership _out1997;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1998;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out1996, out _out1997, out _out1998);
              _5809_recursiveGen = _out1996;
              _5810_recOwned = _out1997;
              _5811_recIdents = _out1998;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5809_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5807_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5808_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1999;
              DCOMP._IOwnership _out2000;
              DCOMP.COMP.FromOwnership(r, _5810_recOwned, expectedOwnership, out _out1999, out _out2000);
              r = _out1999;
              resultingOwnership = _out2000;
              readIdents = _5811_recIdents;
            }
          } else if (_source288.is_Map) {
            DAST._IType _5812___mcc_h860 = _source288.dtor_key;
            DAST._IType _5813___mcc_h861 = _source288.dtor_value;
            {
              RAST._IType _5814_fromTpeGen;
              RAST._IType _out2001;
              _out2001 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5814_fromTpeGen = _out2001;
              RAST._IType _5815_toTpeGen;
              RAST._IType _out2002;
              _out2002 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5815_toTpeGen = _out2002;
              RAST._IExpr _5816_recursiveGen;
              DCOMP._IOwnership _5817_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5818_recIdents;
              RAST._IExpr _out2003;
              DCOMP._IOwnership _out2004;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2005;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2003, out _out2004, out _out2005);
              _5816_recursiveGen = _out2003;
              _5817_recOwned = _out2004;
              _5818_recIdents = _out2005;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5816_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5814_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5815_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2006;
              DCOMP._IOwnership _out2007;
              DCOMP.COMP.FromOwnership(r, _5817_recOwned, expectedOwnership, out _out2006, out _out2007);
              r = _out2006;
              resultingOwnership = _out2007;
              readIdents = _5818_recIdents;
            }
          } else if (_source288.is_SetBuilder) {
            DAST._IType _5819___mcc_h864 = _source288.dtor_element;
            {
              RAST._IType _5820_fromTpeGen;
              RAST._IType _out2008;
              _out2008 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5820_fromTpeGen = _out2008;
              RAST._IType _5821_toTpeGen;
              RAST._IType _out2009;
              _out2009 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5821_toTpeGen = _out2009;
              RAST._IExpr _5822_recursiveGen;
              DCOMP._IOwnership _5823_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5824_recIdents;
              RAST._IExpr _out2010;
              DCOMP._IOwnership _out2011;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2012;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2010, out _out2011, out _out2012);
              _5822_recursiveGen = _out2010;
              _5823_recOwned = _out2011;
              _5824_recIdents = _out2012;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5822_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5820_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5821_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2013;
              DCOMP._IOwnership _out2014;
              DCOMP.COMP.FromOwnership(r, _5823_recOwned, expectedOwnership, out _out2013, out _out2014);
              r = _out2013;
              resultingOwnership = _out2014;
              readIdents = _5824_recIdents;
            }
          } else if (_source288.is_MapBuilder) {
            DAST._IType _5825___mcc_h866 = _source288.dtor_key;
            DAST._IType _5826___mcc_h867 = _source288.dtor_value;
            {
              RAST._IType _5827_fromTpeGen;
              RAST._IType _out2015;
              _out2015 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5827_fromTpeGen = _out2015;
              RAST._IType _5828_toTpeGen;
              RAST._IType _out2016;
              _out2016 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5828_toTpeGen = _out2016;
              RAST._IExpr _5829_recursiveGen;
              DCOMP._IOwnership _5830_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5831_recIdents;
              RAST._IExpr _out2017;
              DCOMP._IOwnership _out2018;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2019;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2017, out _out2018, out _out2019);
              _5829_recursiveGen = _out2017;
              _5830_recOwned = _out2018;
              _5831_recIdents = _out2019;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5829_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5827_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5828_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2020;
              DCOMP._IOwnership _out2021;
              DCOMP.COMP.FromOwnership(r, _5830_recOwned, expectedOwnership, out _out2020, out _out2021);
              r = _out2020;
              resultingOwnership = _out2021;
              readIdents = _5831_recIdents;
            }
          } else if (_source288.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5832___mcc_h870 = _source288.dtor_args;
            DAST._IType _5833___mcc_h871 = _source288.dtor_result;
            {
              RAST._IType _5834_fromTpeGen;
              RAST._IType _out2022;
              _out2022 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5834_fromTpeGen = _out2022;
              RAST._IType _5835_toTpeGen;
              RAST._IType _out2023;
              _out2023 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5835_toTpeGen = _out2023;
              RAST._IExpr _5836_recursiveGen;
              DCOMP._IOwnership _5837_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5838_recIdents;
              RAST._IExpr _out2024;
              DCOMP._IOwnership _out2025;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2026;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2024, out _out2025, out _out2026);
              _5836_recursiveGen = _out2024;
              _5837_recOwned = _out2025;
              _5838_recIdents = _out2026;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5836_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5834_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5835_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2027;
              DCOMP._IOwnership _out2028;
              DCOMP.COMP.FromOwnership(r, _5837_recOwned, expectedOwnership, out _out2027, out _out2028);
              r = _out2027;
              resultingOwnership = _out2028;
              readIdents = _5838_recIdents;
            }
          } else if (_source288.is_Primitive) {
            DAST._IPrimitive _5839___mcc_h874 = _source288.dtor_Primitive_a0;
            {
              RAST._IType _5840_fromTpeGen;
              RAST._IType _out2029;
              _out2029 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5840_fromTpeGen = _out2029;
              RAST._IType _5841_toTpeGen;
              RAST._IType _out2030;
              _out2030 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5841_toTpeGen = _out2030;
              RAST._IExpr _5842_recursiveGen;
              DCOMP._IOwnership _5843_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5844_recIdents;
              RAST._IExpr _out2031;
              DCOMP._IOwnership _out2032;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2033;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2031, out _out2032, out _out2033);
              _5842_recursiveGen = _out2031;
              _5843_recOwned = _out2032;
              _5844_recIdents = _out2033;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5842_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5840_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5841_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2034;
              DCOMP._IOwnership _out2035;
              DCOMP.COMP.FromOwnership(r, _5843_recOwned, expectedOwnership, out _out2034, out _out2035);
              r = _out2034;
              resultingOwnership = _out2035;
              readIdents = _5844_recIdents;
            }
          } else if (_source288.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5845___mcc_h876 = _source288.dtor_Passthrough_a0;
            {
              RAST._IType _5846_fromTpeGen;
              RAST._IType _out2036;
              _out2036 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5846_fromTpeGen = _out2036;
              RAST._IType _5847_toTpeGen;
              RAST._IType _out2037;
              _out2037 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5847_toTpeGen = _out2037;
              RAST._IExpr _5848_recursiveGen;
              DCOMP._IOwnership _5849_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5850_recIdents;
              RAST._IExpr _out2038;
              DCOMP._IOwnership _out2039;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2040;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2038, out _out2039, out _out2040);
              _5848_recursiveGen = _out2038;
              _5849_recOwned = _out2039;
              _5850_recIdents = _out2040;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5848_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5846_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5847_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2041;
              DCOMP._IOwnership _out2042;
              DCOMP.COMP.FromOwnership(r, _5849_recOwned, expectedOwnership, out _out2041, out _out2042);
              r = _out2041;
              resultingOwnership = _out2042;
              readIdents = _5850_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5851___mcc_h878 = _source288.dtor_TypeArg_a0;
            {
              RAST._IType _5852_fromTpeGen;
              RAST._IType _out2043;
              _out2043 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5852_fromTpeGen = _out2043;
              RAST._IType _5853_toTpeGen;
              RAST._IType _out2044;
              _out2044 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5853_toTpeGen = _out2044;
              RAST._IExpr _5854_recursiveGen;
              DCOMP._IOwnership _5855_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5856_recIdents;
              RAST._IExpr _out2045;
              DCOMP._IOwnership _out2046;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2047;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2045, out _out2046, out _out2047);
              _5854_recursiveGen = _out2045;
              _5855_recOwned = _out2046;
              _5856_recIdents = _out2047;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5854_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5852_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5853_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2048;
              DCOMP._IOwnership _out2049;
              DCOMP.COMP.FromOwnership(r, _5855_recOwned, expectedOwnership, out _out2048, out _out2049);
              r = _out2048;
              resultingOwnership = _out2049;
              readIdents = _5856_recIdents;
            }
          }
        } else if (_source214.is_Arrow) {
          Dafny.ISequence<DAST._IType> _5857___mcc_h880 = _source214.dtor_args;
          DAST._IType _5858___mcc_h881 = _source214.dtor_result;
          DAST._IType _source293 = _3747___mcc_h1;
          if (_source293.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5859___mcc_h888 = _source293.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5860___mcc_h889 = _source293.dtor_typeArgs;
            DAST._IResolvedType _5861___mcc_h890 = _source293.dtor_resolved;
            DAST._IResolvedType _source294 = _5861___mcc_h890;
            if (_source294.is_AllocatedDatatype) {
              DAST._IDatatypeType _5862___mcc_h894 = _source294.dtor_datatypeType;
              {
                RAST._IType _5863_fromTpeGen;
                RAST._IType _out2050;
                _out2050 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5863_fromTpeGen = _out2050;
                RAST._IType _5864_toTpeGen;
                RAST._IType _out2051;
                _out2051 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5864_toTpeGen = _out2051;
                RAST._IExpr _5865_recursiveGen;
                DCOMP._IOwnership _5866_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5867_recIdents;
                RAST._IExpr _out2052;
                DCOMP._IOwnership _out2053;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2054;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2052, out _out2053, out _out2054);
                _5865_recursiveGen = _out2052;
                _5866_recOwned = _out2053;
                _5867_recIdents = _out2054;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5865_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5863_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5864_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2055;
                DCOMP._IOwnership _out2056;
                DCOMP.COMP.FromOwnership(r, _5866_recOwned, expectedOwnership, out _out2055, out _out2056);
                r = _out2055;
                resultingOwnership = _out2056;
                readIdents = _5867_recIdents;
              }
            } else if (_source294.is_Datatype) {
              DAST._IDatatypeType _5868___mcc_h896 = _source294.dtor_datatypeType;
              {
                RAST._IType _5869_fromTpeGen;
                RAST._IType _out2057;
                _out2057 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5869_fromTpeGen = _out2057;
                RAST._IType _5870_toTpeGen;
                RAST._IType _out2058;
                _out2058 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5870_toTpeGen = _out2058;
                RAST._IExpr _5871_recursiveGen;
                DCOMP._IOwnership _5872_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5873_recIdents;
                RAST._IExpr _out2059;
                DCOMP._IOwnership _out2060;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2061;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2059, out _out2060, out _out2061);
                _5871_recursiveGen = _out2059;
                _5872_recOwned = _out2060;
                _5873_recIdents = _out2061;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5871_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5869_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5870_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2062;
                DCOMP._IOwnership _out2063;
                DCOMP.COMP.FromOwnership(r, _5872_recOwned, expectedOwnership, out _out2062, out _out2063);
                r = _out2062;
                resultingOwnership = _out2063;
                readIdents = _5873_recIdents;
              }
            } else if (_source294.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5874___mcc_h898 = _source294.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5875___mcc_h899 = _source294.dtor_attributes;
              {
                RAST._IType _5876_fromTpeGen;
                RAST._IType _out2064;
                _out2064 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _5876_fromTpeGen = _out2064;
                RAST._IType _5877_toTpeGen;
                RAST._IType _out2065;
                _out2065 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _5877_toTpeGen = _out2065;
                RAST._IExpr _5878_recursiveGen;
                DCOMP._IOwnership _5879_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5880_recIdents;
                RAST._IExpr _out2066;
                DCOMP._IOwnership _out2067;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2068;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2066, out _out2067, out _out2068);
                _5878_recursiveGen = _out2066;
                _5879_recOwned = _out2067;
                _5880_recIdents = _out2068;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5878_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5876_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5877_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2069;
                DCOMP._IOwnership _out2070;
                DCOMP.COMP.FromOwnership(r, _5879_recOwned, expectedOwnership, out _out2069, out _out2070);
                r = _out2069;
                resultingOwnership = _out2070;
                readIdents = _5880_recIdents;
              }
            } else {
              DAST._IType _5881___mcc_h902 = _source294.dtor_baseType;
              DAST._INewtypeRange _5882___mcc_h903 = _source294.dtor_range;
              bool _5883___mcc_h904 = _source294.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5884___mcc_h905 = _source294.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5885_attributes = _5884___mcc_h905;
              bool _5886_erase = _5883___mcc_h904;
              DAST._INewtypeRange _5887_range = _5882___mcc_h903;
              DAST._IType _5888_b = _5881___mcc_h902;
              {
                Std.Wrappers._IOption<RAST._IType> _5889_nativeToType;
                _5889_nativeToType = DCOMP.COMP.NewtypeToRustType(_5888_b, _5887_range);
                if (object.Equals(_3741_fromTpe, _5888_b)) {
                  RAST._IExpr _5890_recursiveGen;
                  DCOMP._IOwnership _5891_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5892_recIdents;
                  RAST._IExpr _out2071;
                  DCOMP._IOwnership _out2072;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2073;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2071, out _out2072, out _out2073);
                  _5890_recursiveGen = _out2071;
                  _5891_recOwned = _out2072;
                  _5892_recIdents = _out2073;
                  readIdents = _5892_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source295 = _5889_nativeToType;
                  if (_source295.is_None) {
                    if (_5886_erase) {
                      r = _5890_recursiveGen;
                    } else {
                      RAST._IType _5893_rhsType;
                      RAST._IType _out2074;
                      _out2074 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _5893_rhsType = _out2074;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5893_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5890_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2075;
                    DCOMP._IOwnership _out2076;
                    DCOMP.COMP.FromOwnership(r, _5891_recOwned, expectedOwnership, out _out2075, out _out2076);
                    r = _out2075;
                    resultingOwnership = _out2076;
                  } else {
                    RAST._IType _5894___mcc_h2047 = _source295.dtor_value;
                    RAST._IType _5895_v = _5894___mcc_h2047;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5890_recursiveGen, RAST.Expr.create_ExprFromType(_5895_v)));
                    RAST._IExpr _out2077;
                    DCOMP._IOwnership _out2078;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2077, out _out2078);
                    r = _out2077;
                    resultingOwnership = _out2078;
                  }
                } else {
                  if ((_5889_nativeToType).is_Some) {
                    DAST._IType _source296 = _3741_fromTpe;
                    if (_source296.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5896___mcc_h2048 = _source296.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5897___mcc_h2049 = _source296.dtor_typeArgs;
                      DAST._IResolvedType _5898___mcc_h2050 = _source296.dtor_resolved;
                      DAST._IResolvedType _source297 = _5898___mcc_h2050;
                      if (_source297.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5899___mcc_h2054 = _source297.dtor_datatypeType;
                      } else if (_source297.is_Datatype) {
                        DAST._IDatatypeType _5900___mcc_h2056 = _source297.dtor_datatypeType;
                      } else if (_source297.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5901___mcc_h2058 = _source297.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5902___mcc_h2059 = _source297.dtor_attributes;
                      } else {
                        DAST._IType _5903___mcc_h2062 = _source297.dtor_baseType;
                        DAST._INewtypeRange _5904___mcc_h2063 = _source297.dtor_range;
                        bool _5905___mcc_h2064 = _source297.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5906___mcc_h2065 = _source297.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5907_attributes0 = _5906___mcc_h2065;
                        bool _5908_erase0 = _5905___mcc_h2064;
                        DAST._INewtypeRange _5909_range0 = _5904___mcc_h2063;
                        DAST._IType _5910_b0 = _5903___mcc_h2062;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5911_nativeFromType;
                          _5911_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5910_b0, _5909_range0);
                          if ((_5911_nativeFromType).is_Some) {
                            RAST._IExpr _5912_recursiveGen;
                            DCOMP._IOwnership _5913_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5914_recIdents;
                            RAST._IExpr _out2079;
                            DCOMP._IOwnership _out2080;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2081;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2079, out _out2080, out _out2081);
                            _5912_recursiveGen = _out2079;
                            _5913_recOwned = _out2080;
                            _5914_recIdents = _out2081;
                            RAST._IExpr _out2082;
                            DCOMP._IOwnership _out2083;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5912_recursiveGen, (_5889_nativeToType).dtor_value), _5913_recOwned, expectedOwnership, out _out2082, out _out2083);
                            r = _out2082;
                            resultingOwnership = _out2083;
                            readIdents = _5914_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source296.is_Nullable) {
                      DAST._IType _5915___mcc_h2070 = _source296.dtor_Nullable_a0;
                    } else if (_source296.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5916___mcc_h2072 = _source296.dtor_Tuple_a0;
                    } else if (_source296.is_Array) {
                      DAST._IType _5917___mcc_h2074 = _source296.dtor_element;
                      BigInteger _5918___mcc_h2075 = _source296.dtor_dims;
                    } else if (_source296.is_Seq) {
                      DAST._IType _5919___mcc_h2078 = _source296.dtor_element;
                    } else if (_source296.is_Set) {
                      DAST._IType _5920___mcc_h2080 = _source296.dtor_element;
                    } else if (_source296.is_Multiset) {
                      DAST._IType _5921___mcc_h2082 = _source296.dtor_element;
                    } else if (_source296.is_Map) {
                      DAST._IType _5922___mcc_h2084 = _source296.dtor_key;
                      DAST._IType _5923___mcc_h2085 = _source296.dtor_value;
                    } else if (_source296.is_SetBuilder) {
                      DAST._IType _5924___mcc_h2088 = _source296.dtor_element;
                    } else if (_source296.is_MapBuilder) {
                      DAST._IType _5925___mcc_h2090 = _source296.dtor_key;
                      DAST._IType _5926___mcc_h2091 = _source296.dtor_value;
                    } else if (_source296.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5927___mcc_h2094 = _source296.dtor_args;
                      DAST._IType _5928___mcc_h2095 = _source296.dtor_result;
                    } else if (_source296.is_Primitive) {
                      DAST._IPrimitive _5929___mcc_h2098 = _source296.dtor_Primitive_a0;
                    } else if (_source296.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5930___mcc_h2100 = _source296.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5931___mcc_h2102 = _source296.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5932_recursiveGen;
                      DCOMP._IOwnership _5933_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5934_recIdents;
                      RAST._IExpr _out2084;
                      DCOMP._IOwnership _out2085;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2086;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2084, out _out2085, out _out2086);
                      _5932_recursiveGen = _out2084;
                      _5933_recOwned = _out2085;
                      _5934_recIdents = _out2086;
                      RAST._IExpr _out2087;
                      DCOMP._IOwnership _out2088;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5932_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5889_nativeToType).dtor_value), _5933_recOwned, expectedOwnership, out _out2087, out _out2088);
                      r = _out2087;
                      resultingOwnership = _out2088;
                      readIdents = _5934_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2089;
                  DCOMP._IOwnership _out2090;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2091;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _5888_b), _5888_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out2089, out _out2090, out _out2091);
                  r = _out2089;
                  resultingOwnership = _out2090;
                  readIdents = _out2091;
                }
              }
            }
          } else if (_source293.is_Nullable) {
            DAST._IType _5935___mcc_h910 = _source293.dtor_Nullable_a0;
            {
              RAST._IExpr _5936_recursiveGen;
              DCOMP._IOwnership _5937_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5938_recIdents;
              RAST._IExpr _out2092;
              DCOMP._IOwnership _out2093;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2094;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2092, out _out2093, out _out2094);
              _5936_recursiveGen = _out2092;
              _5937_recOwned = _out2093;
              _5938_recIdents = _out2094;
              r = _5936_recursiveGen;
              if (object.Equals(_5937_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2095;
              DCOMP._IOwnership _out2096;
              DCOMP.COMP.FromOwnership(r, _5937_recOwned, expectedOwnership, out _out2095, out _out2096);
              r = _out2095;
              resultingOwnership = _out2096;
              readIdents = _5938_recIdents;
            }
          } else if (_source293.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5939___mcc_h912 = _source293.dtor_Tuple_a0;
            {
              RAST._IType _5940_fromTpeGen;
              RAST._IType _out2097;
              _out2097 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5940_fromTpeGen = _out2097;
              RAST._IType _5941_toTpeGen;
              RAST._IType _out2098;
              _out2098 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5941_toTpeGen = _out2098;
              RAST._IExpr _5942_recursiveGen;
              DCOMP._IOwnership _5943_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5944_recIdents;
              RAST._IExpr _out2099;
              DCOMP._IOwnership _out2100;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2101;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2099, out _out2100, out _out2101);
              _5942_recursiveGen = _out2099;
              _5943_recOwned = _out2100;
              _5944_recIdents = _out2101;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5942_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5940_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5941_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2102;
              DCOMP._IOwnership _out2103;
              DCOMP.COMP.FromOwnership(r, _5943_recOwned, expectedOwnership, out _out2102, out _out2103);
              r = _out2102;
              resultingOwnership = _out2103;
              readIdents = _5944_recIdents;
            }
          } else if (_source293.is_Array) {
            DAST._IType _5945___mcc_h914 = _source293.dtor_element;
            BigInteger _5946___mcc_h915 = _source293.dtor_dims;
            {
              RAST._IType _5947_fromTpeGen;
              RAST._IType _out2104;
              _out2104 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5947_fromTpeGen = _out2104;
              RAST._IType _5948_toTpeGen;
              RAST._IType _out2105;
              _out2105 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5948_toTpeGen = _out2105;
              RAST._IExpr _5949_recursiveGen;
              DCOMP._IOwnership _5950_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5951_recIdents;
              RAST._IExpr _out2106;
              DCOMP._IOwnership _out2107;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2108;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2106, out _out2107, out _out2108);
              _5949_recursiveGen = _out2106;
              _5950_recOwned = _out2107;
              _5951_recIdents = _out2108;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5949_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5947_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5948_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2109;
              DCOMP._IOwnership _out2110;
              DCOMP.COMP.FromOwnership(r, _5950_recOwned, expectedOwnership, out _out2109, out _out2110);
              r = _out2109;
              resultingOwnership = _out2110;
              readIdents = _5951_recIdents;
            }
          } else if (_source293.is_Seq) {
            DAST._IType _5952___mcc_h918 = _source293.dtor_element;
            {
              RAST._IType _5953_fromTpeGen;
              RAST._IType _out2111;
              _out2111 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5953_fromTpeGen = _out2111;
              RAST._IType _5954_toTpeGen;
              RAST._IType _out2112;
              _out2112 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5954_toTpeGen = _out2112;
              RAST._IExpr _5955_recursiveGen;
              DCOMP._IOwnership _5956_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5957_recIdents;
              RAST._IExpr _out2113;
              DCOMP._IOwnership _out2114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2115;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2113, out _out2114, out _out2115);
              _5955_recursiveGen = _out2113;
              _5956_recOwned = _out2114;
              _5957_recIdents = _out2115;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5955_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5953_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5954_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2116;
              DCOMP._IOwnership _out2117;
              DCOMP.COMP.FromOwnership(r, _5956_recOwned, expectedOwnership, out _out2116, out _out2117);
              r = _out2116;
              resultingOwnership = _out2117;
              readIdents = _5957_recIdents;
            }
          } else if (_source293.is_Set) {
            DAST._IType _5958___mcc_h920 = _source293.dtor_element;
            {
              RAST._IType _5959_fromTpeGen;
              RAST._IType _out2118;
              _out2118 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5959_fromTpeGen = _out2118;
              RAST._IType _5960_toTpeGen;
              RAST._IType _out2119;
              _out2119 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5960_toTpeGen = _out2119;
              RAST._IExpr _5961_recursiveGen;
              DCOMP._IOwnership _5962_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5963_recIdents;
              RAST._IExpr _out2120;
              DCOMP._IOwnership _out2121;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2122;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2120, out _out2121, out _out2122);
              _5961_recursiveGen = _out2120;
              _5962_recOwned = _out2121;
              _5963_recIdents = _out2122;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5961_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5959_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5960_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2123;
              DCOMP._IOwnership _out2124;
              DCOMP.COMP.FromOwnership(r, _5962_recOwned, expectedOwnership, out _out2123, out _out2124);
              r = _out2123;
              resultingOwnership = _out2124;
              readIdents = _5963_recIdents;
            }
          } else if (_source293.is_Multiset) {
            DAST._IType _5964___mcc_h922 = _source293.dtor_element;
            {
              RAST._IType _5965_fromTpeGen;
              RAST._IType _out2125;
              _out2125 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5965_fromTpeGen = _out2125;
              RAST._IType _5966_toTpeGen;
              RAST._IType _out2126;
              _out2126 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5966_toTpeGen = _out2126;
              RAST._IExpr _5967_recursiveGen;
              DCOMP._IOwnership _5968_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5969_recIdents;
              RAST._IExpr _out2127;
              DCOMP._IOwnership _out2128;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2129;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2127, out _out2128, out _out2129);
              _5967_recursiveGen = _out2127;
              _5968_recOwned = _out2128;
              _5969_recIdents = _out2129;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5967_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5965_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5966_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2130;
              DCOMP._IOwnership _out2131;
              DCOMP.COMP.FromOwnership(r, _5968_recOwned, expectedOwnership, out _out2130, out _out2131);
              r = _out2130;
              resultingOwnership = _out2131;
              readIdents = _5969_recIdents;
            }
          } else if (_source293.is_Map) {
            DAST._IType _5970___mcc_h924 = _source293.dtor_key;
            DAST._IType _5971___mcc_h925 = _source293.dtor_value;
            {
              RAST._IType _5972_fromTpeGen;
              RAST._IType _out2132;
              _out2132 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5972_fromTpeGen = _out2132;
              RAST._IType _5973_toTpeGen;
              RAST._IType _out2133;
              _out2133 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5973_toTpeGen = _out2133;
              RAST._IExpr _5974_recursiveGen;
              DCOMP._IOwnership _5975_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5976_recIdents;
              RAST._IExpr _out2134;
              DCOMP._IOwnership _out2135;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2136;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2134, out _out2135, out _out2136);
              _5974_recursiveGen = _out2134;
              _5975_recOwned = _out2135;
              _5976_recIdents = _out2136;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5974_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5972_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5973_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2137;
              DCOMP._IOwnership _out2138;
              DCOMP.COMP.FromOwnership(r, _5975_recOwned, expectedOwnership, out _out2137, out _out2138);
              r = _out2137;
              resultingOwnership = _out2138;
              readIdents = _5976_recIdents;
            }
          } else if (_source293.is_SetBuilder) {
            DAST._IType _5977___mcc_h928 = _source293.dtor_element;
            {
              RAST._IType _5978_fromTpeGen;
              RAST._IType _out2139;
              _out2139 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5978_fromTpeGen = _out2139;
              RAST._IType _5979_toTpeGen;
              RAST._IType _out2140;
              _out2140 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5979_toTpeGen = _out2140;
              RAST._IExpr _5980_recursiveGen;
              DCOMP._IOwnership _5981_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5982_recIdents;
              RAST._IExpr _out2141;
              DCOMP._IOwnership _out2142;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2143;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2141, out _out2142, out _out2143);
              _5980_recursiveGen = _out2141;
              _5981_recOwned = _out2142;
              _5982_recIdents = _out2143;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5980_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5978_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5979_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2144;
              DCOMP._IOwnership _out2145;
              DCOMP.COMP.FromOwnership(r, _5981_recOwned, expectedOwnership, out _out2144, out _out2145);
              r = _out2144;
              resultingOwnership = _out2145;
              readIdents = _5982_recIdents;
            }
          } else if (_source293.is_MapBuilder) {
            DAST._IType _5983___mcc_h930 = _source293.dtor_key;
            DAST._IType _5984___mcc_h931 = _source293.dtor_value;
            {
              RAST._IType _5985_fromTpeGen;
              RAST._IType _out2146;
              _out2146 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5985_fromTpeGen = _out2146;
              RAST._IType _5986_toTpeGen;
              RAST._IType _out2147;
              _out2147 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5986_toTpeGen = _out2147;
              RAST._IExpr _5987_recursiveGen;
              DCOMP._IOwnership _5988_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5989_recIdents;
              RAST._IExpr _out2148;
              DCOMP._IOwnership _out2149;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2150;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2148, out _out2149, out _out2150);
              _5987_recursiveGen = _out2148;
              _5988_recOwned = _out2149;
              _5989_recIdents = _out2150;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5987_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5985_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5986_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2151;
              DCOMP._IOwnership _out2152;
              DCOMP.COMP.FromOwnership(r, _5988_recOwned, expectedOwnership, out _out2151, out _out2152);
              r = _out2151;
              resultingOwnership = _out2152;
              readIdents = _5989_recIdents;
            }
          } else if (_source293.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5990___mcc_h934 = _source293.dtor_args;
            DAST._IType _5991___mcc_h935 = _source293.dtor_result;
            {
              RAST._IType _5992_fromTpeGen;
              RAST._IType _out2153;
              _out2153 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5992_fromTpeGen = _out2153;
              RAST._IType _5993_toTpeGen;
              RAST._IType _out2154;
              _out2154 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5993_toTpeGen = _out2154;
              RAST._IExpr _5994_recursiveGen;
              DCOMP._IOwnership _5995_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5996_recIdents;
              RAST._IExpr _out2155;
              DCOMP._IOwnership _out2156;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2157;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2155, out _out2156, out _out2157);
              _5994_recursiveGen = _out2155;
              _5995_recOwned = _out2156;
              _5996_recIdents = _out2157;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5994_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5992_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5993_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2158;
              DCOMP._IOwnership _out2159;
              DCOMP.COMP.FromOwnership(r, _5995_recOwned, expectedOwnership, out _out2158, out _out2159);
              r = _out2158;
              resultingOwnership = _out2159;
              readIdents = _5996_recIdents;
            }
          } else if (_source293.is_Primitive) {
            DAST._IPrimitive _5997___mcc_h938 = _source293.dtor_Primitive_a0;
            {
              RAST._IType _5998_fromTpeGen;
              RAST._IType _out2160;
              _out2160 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _5998_fromTpeGen = _out2160;
              RAST._IType _5999_toTpeGen;
              RAST._IType _out2161;
              _out2161 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _5999_toTpeGen = _out2161;
              RAST._IExpr _6000_recursiveGen;
              DCOMP._IOwnership _6001_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6002_recIdents;
              RAST._IExpr _out2162;
              DCOMP._IOwnership _out2163;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2164;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2162, out _out2163, out _out2164);
              _6000_recursiveGen = _out2162;
              _6001_recOwned = _out2163;
              _6002_recIdents = _out2164;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6000_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5998_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5999_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2165;
              DCOMP._IOwnership _out2166;
              DCOMP.COMP.FromOwnership(r, _6001_recOwned, expectedOwnership, out _out2165, out _out2166);
              r = _out2165;
              resultingOwnership = _out2166;
              readIdents = _6002_recIdents;
            }
          } else if (_source293.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _6003___mcc_h940 = _source293.dtor_Passthrough_a0;
            {
              RAST._IType _6004_fromTpeGen;
              RAST._IType _out2167;
              _out2167 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6004_fromTpeGen = _out2167;
              RAST._IType _6005_toTpeGen;
              RAST._IType _out2168;
              _out2168 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6005_toTpeGen = _out2168;
              RAST._IExpr _6006_recursiveGen;
              DCOMP._IOwnership _6007_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6008_recIdents;
              RAST._IExpr _out2169;
              DCOMP._IOwnership _out2170;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2171;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2169, out _out2170, out _out2171);
              _6006_recursiveGen = _out2169;
              _6007_recOwned = _out2170;
              _6008_recIdents = _out2171;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6006_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6004_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6005_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2172;
              DCOMP._IOwnership _out2173;
              DCOMP.COMP.FromOwnership(r, _6007_recOwned, expectedOwnership, out _out2172, out _out2173);
              r = _out2172;
              resultingOwnership = _out2173;
              readIdents = _6008_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _6009___mcc_h942 = _source293.dtor_TypeArg_a0;
            {
              RAST._IType _6010_fromTpeGen;
              RAST._IType _out2174;
              _out2174 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6010_fromTpeGen = _out2174;
              RAST._IType _6011_toTpeGen;
              RAST._IType _out2175;
              _out2175 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6011_toTpeGen = _out2175;
              RAST._IExpr _6012_recursiveGen;
              DCOMP._IOwnership _6013_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6014_recIdents;
              RAST._IExpr _out2176;
              DCOMP._IOwnership _out2177;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2178;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2176, out _out2177, out _out2178);
              _6012_recursiveGen = _out2176;
              _6013_recOwned = _out2177;
              _6014_recIdents = _out2178;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6012_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6010_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6011_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2179;
              DCOMP._IOwnership _out2180;
              DCOMP.COMP.FromOwnership(r, _6013_recOwned, expectedOwnership, out _out2179, out _out2180);
              r = _out2179;
              resultingOwnership = _out2180;
              readIdents = _6014_recIdents;
            }
          }
        } else if (_source214.is_Primitive) {
          DAST._IPrimitive _6015___mcc_h944 = _source214.dtor_Primitive_a0;
          DAST._IPrimitive _source298 = _6015___mcc_h944;
          if (_source298.is_Int) {
            DAST._IType _source299 = _3747___mcc_h1;
            if (_source299.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6016___mcc_h948 = _source299.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6017___mcc_h949 = _source299.dtor_typeArgs;
              DAST._IResolvedType _6018___mcc_h950 = _source299.dtor_resolved;
              DAST._IResolvedType _source300 = _6018___mcc_h950;
              if (_source300.is_AllocatedDatatype) {
                DAST._IDatatypeType _6019___mcc_h954 = _source300.dtor_datatypeType;
                {
                  RAST._IType _6020_fromTpeGen;
                  RAST._IType _out2181;
                  _out2181 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6020_fromTpeGen = _out2181;
                  RAST._IType _6021_toTpeGen;
                  RAST._IType _out2182;
                  _out2182 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6021_toTpeGen = _out2182;
                  RAST._IExpr _6022_recursiveGen;
                  DCOMP._IOwnership _6023_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6024_recIdents;
                  RAST._IExpr _out2183;
                  DCOMP._IOwnership _out2184;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2185;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2183, out _out2184, out _out2185);
                  _6022_recursiveGen = _out2183;
                  _6023_recOwned = _out2184;
                  _6024_recIdents = _out2185;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6022_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6020_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6021_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2186;
                  DCOMP._IOwnership _out2187;
                  DCOMP.COMP.FromOwnership(r, _6023_recOwned, expectedOwnership, out _out2186, out _out2187);
                  r = _out2186;
                  resultingOwnership = _out2187;
                  readIdents = _6024_recIdents;
                }
              } else if (_source300.is_Datatype) {
                DAST._IDatatypeType _6025___mcc_h956 = _source300.dtor_datatypeType;
                {
                  RAST._IType _6026_fromTpeGen;
                  RAST._IType _out2188;
                  _out2188 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6026_fromTpeGen = _out2188;
                  RAST._IType _6027_toTpeGen;
                  RAST._IType _out2189;
                  _out2189 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6027_toTpeGen = _out2189;
                  RAST._IExpr _6028_recursiveGen;
                  DCOMP._IOwnership _6029_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6030_recIdents;
                  RAST._IExpr _out2190;
                  DCOMP._IOwnership _out2191;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2192;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2190, out _out2191, out _out2192);
                  _6028_recursiveGen = _out2190;
                  _6029_recOwned = _out2191;
                  _6030_recIdents = _out2192;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6028_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6026_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6027_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2193;
                  DCOMP._IOwnership _out2194;
                  DCOMP.COMP.FromOwnership(r, _6029_recOwned, expectedOwnership, out _out2193, out _out2194);
                  r = _out2193;
                  resultingOwnership = _out2194;
                  readIdents = _6030_recIdents;
                }
              } else if (_source300.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6031___mcc_h958 = _source300.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6032___mcc_h959 = _source300.dtor_attributes;
                {
                  RAST._IType _6033_fromTpeGen;
                  RAST._IType _out2195;
                  _out2195 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6033_fromTpeGen = _out2195;
                  RAST._IType _6034_toTpeGen;
                  RAST._IType _out2196;
                  _out2196 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6034_toTpeGen = _out2196;
                  RAST._IExpr _6035_recursiveGen;
                  DCOMP._IOwnership _6036_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6037_recIdents;
                  RAST._IExpr _out2197;
                  DCOMP._IOwnership _out2198;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2199;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2197, out _out2198, out _out2199);
                  _6035_recursiveGen = _out2197;
                  _6036_recOwned = _out2198;
                  _6037_recIdents = _out2199;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6035_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6033_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6034_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2200;
                  DCOMP._IOwnership _out2201;
                  DCOMP.COMP.FromOwnership(r, _6036_recOwned, expectedOwnership, out _out2200, out _out2201);
                  r = _out2200;
                  resultingOwnership = _out2201;
                  readIdents = _6037_recIdents;
                }
              } else {
                DAST._IType _6038___mcc_h962 = _source300.dtor_baseType;
                DAST._INewtypeRange _6039___mcc_h963 = _source300.dtor_range;
                bool _6040___mcc_h964 = _source300.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6041___mcc_h965 = _source300.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6042_attributes = _6041___mcc_h965;
                bool _6043_erase = _6040___mcc_h964;
                DAST._INewtypeRange _6044_range = _6039___mcc_h963;
                DAST._IType _6045_b = _6038___mcc_h962;
                {
                  Std.Wrappers._IOption<RAST._IType> _6046_nativeToType;
                  _6046_nativeToType = DCOMP.COMP.NewtypeToRustType(_6045_b, _6044_range);
                  if (object.Equals(_3741_fromTpe, _6045_b)) {
                    RAST._IExpr _6047_recursiveGen;
                    DCOMP._IOwnership _6048_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6049_recIdents;
                    RAST._IExpr _out2202;
                    DCOMP._IOwnership _out2203;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2204;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2202, out _out2203, out _out2204);
                    _6047_recursiveGen = _out2202;
                    _6048_recOwned = _out2203;
                    _6049_recIdents = _out2204;
                    readIdents = _6049_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source301 = _6046_nativeToType;
                    if (_source301.is_None) {
                      if (_6043_erase) {
                        r = _6047_recursiveGen;
                      } else {
                        RAST._IType _6050_rhsType;
                        RAST._IType _out2205;
                        _out2205 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _6050_rhsType = _out2205;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6050_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6047_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2206;
                      DCOMP._IOwnership _out2207;
                      DCOMP.COMP.FromOwnership(r, _6048_recOwned, expectedOwnership, out _out2206, out _out2207);
                      r = _out2206;
                      resultingOwnership = _out2207;
                    } else {
                      RAST._IType _6051___mcc_h2104 = _source301.dtor_value;
                      RAST._IType _6052_v = _6051___mcc_h2104;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6047_recursiveGen, RAST.Expr.create_ExprFromType(_6052_v)));
                      RAST._IExpr _out2208;
                      DCOMP._IOwnership _out2209;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2208, out _out2209);
                      r = _out2208;
                      resultingOwnership = _out2209;
                    }
                  } else {
                    if ((_6046_nativeToType).is_Some) {
                      DAST._IType _source302 = _3741_fromTpe;
                      if (_source302.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6053___mcc_h2105 = _source302.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6054___mcc_h2106 = _source302.dtor_typeArgs;
                        DAST._IResolvedType _6055___mcc_h2107 = _source302.dtor_resolved;
                        DAST._IResolvedType _source303 = _6055___mcc_h2107;
                        if (_source303.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6056___mcc_h2111 = _source303.dtor_datatypeType;
                        } else if (_source303.is_Datatype) {
                          DAST._IDatatypeType _6057___mcc_h2113 = _source303.dtor_datatypeType;
                        } else if (_source303.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6058___mcc_h2115 = _source303.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6059___mcc_h2116 = _source303.dtor_attributes;
                        } else {
                          DAST._IType _6060___mcc_h2119 = _source303.dtor_baseType;
                          DAST._INewtypeRange _6061___mcc_h2120 = _source303.dtor_range;
                          bool _6062___mcc_h2121 = _source303.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6063___mcc_h2122 = _source303.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6064_attributes0 = _6063___mcc_h2122;
                          bool _6065_erase0 = _6062___mcc_h2121;
                          DAST._INewtypeRange _6066_range0 = _6061___mcc_h2120;
                          DAST._IType _6067_b0 = _6060___mcc_h2119;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6068_nativeFromType;
                            _6068_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6067_b0, _6066_range0);
                            if ((_6068_nativeFromType).is_Some) {
                              RAST._IExpr _6069_recursiveGen;
                              DCOMP._IOwnership _6070_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6071_recIdents;
                              RAST._IExpr _out2210;
                              DCOMP._IOwnership _out2211;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2212;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2210, out _out2211, out _out2212);
                              _6069_recursiveGen = _out2210;
                              _6070_recOwned = _out2211;
                              _6071_recIdents = _out2212;
                              RAST._IExpr _out2213;
                              DCOMP._IOwnership _out2214;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6069_recursiveGen, (_6046_nativeToType).dtor_value), _6070_recOwned, expectedOwnership, out _out2213, out _out2214);
                              r = _out2213;
                              resultingOwnership = _out2214;
                              readIdents = _6071_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source302.is_Nullable) {
                        DAST._IType _6072___mcc_h2127 = _source302.dtor_Nullable_a0;
                      } else if (_source302.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6073___mcc_h2129 = _source302.dtor_Tuple_a0;
                      } else if (_source302.is_Array) {
                        DAST._IType _6074___mcc_h2131 = _source302.dtor_element;
                        BigInteger _6075___mcc_h2132 = _source302.dtor_dims;
                      } else if (_source302.is_Seq) {
                        DAST._IType _6076___mcc_h2135 = _source302.dtor_element;
                      } else if (_source302.is_Set) {
                        DAST._IType _6077___mcc_h2137 = _source302.dtor_element;
                      } else if (_source302.is_Multiset) {
                        DAST._IType _6078___mcc_h2139 = _source302.dtor_element;
                      } else if (_source302.is_Map) {
                        DAST._IType _6079___mcc_h2141 = _source302.dtor_key;
                        DAST._IType _6080___mcc_h2142 = _source302.dtor_value;
                      } else if (_source302.is_SetBuilder) {
                        DAST._IType _6081___mcc_h2145 = _source302.dtor_element;
                      } else if (_source302.is_MapBuilder) {
                        DAST._IType _6082___mcc_h2147 = _source302.dtor_key;
                        DAST._IType _6083___mcc_h2148 = _source302.dtor_value;
                      } else if (_source302.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6084___mcc_h2151 = _source302.dtor_args;
                        DAST._IType _6085___mcc_h2152 = _source302.dtor_result;
                      } else if (_source302.is_Primitive) {
                        DAST._IPrimitive _6086___mcc_h2155 = _source302.dtor_Primitive_a0;
                      } else if (_source302.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6087___mcc_h2157 = _source302.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6088___mcc_h2159 = _source302.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6089_recursiveGen;
                        DCOMP._IOwnership _6090_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6091_recIdents;
                        RAST._IExpr _out2215;
                        DCOMP._IOwnership _out2216;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2217;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2215, out _out2216, out _out2217);
                        _6089_recursiveGen = _out2215;
                        _6090_recOwned = _out2216;
                        _6091_recIdents = _out2217;
                        RAST._IExpr _out2218;
                        DCOMP._IOwnership _out2219;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6089_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6046_nativeToType).dtor_value), _6090_recOwned, expectedOwnership, out _out2218, out _out2219);
                        r = _out2218;
                        resultingOwnership = _out2219;
                        readIdents = _6091_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2220;
                    DCOMP._IOwnership _out2221;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2222;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _6045_b), _6045_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out2220, out _out2221, out _out2222);
                    r = _out2220;
                    resultingOwnership = _out2221;
                    readIdents = _out2222;
                  }
                }
              }
            } else if (_source299.is_Nullable) {
              DAST._IType _6092___mcc_h970 = _source299.dtor_Nullable_a0;
              {
                RAST._IExpr _6093_recursiveGen;
                DCOMP._IOwnership _6094_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6095_recIdents;
                RAST._IExpr _out2223;
                DCOMP._IOwnership _out2224;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2225;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2223, out _out2224, out _out2225);
                _6093_recursiveGen = _out2223;
                _6094_recOwned = _out2224;
                _6095_recIdents = _out2225;
                r = _6093_recursiveGen;
                if (object.Equals(_6094_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2226;
                DCOMP._IOwnership _out2227;
                DCOMP.COMP.FromOwnership(r, _6094_recOwned, expectedOwnership, out _out2226, out _out2227);
                r = _out2226;
                resultingOwnership = _out2227;
                readIdents = _6095_recIdents;
              }
            } else if (_source299.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6096___mcc_h972 = _source299.dtor_Tuple_a0;
              {
                RAST._IType _6097_fromTpeGen;
                RAST._IType _out2228;
                _out2228 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6097_fromTpeGen = _out2228;
                RAST._IType _6098_toTpeGen;
                RAST._IType _out2229;
                _out2229 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6098_toTpeGen = _out2229;
                RAST._IExpr _6099_recursiveGen;
                DCOMP._IOwnership _6100_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6101_recIdents;
                RAST._IExpr _out2230;
                DCOMP._IOwnership _out2231;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2232;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2230, out _out2231, out _out2232);
                _6099_recursiveGen = _out2230;
                _6100_recOwned = _out2231;
                _6101_recIdents = _out2232;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6099_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6097_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6098_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2233;
                DCOMP._IOwnership _out2234;
                DCOMP.COMP.FromOwnership(r, _6100_recOwned, expectedOwnership, out _out2233, out _out2234);
                r = _out2233;
                resultingOwnership = _out2234;
                readIdents = _6101_recIdents;
              }
            } else if (_source299.is_Array) {
              DAST._IType _6102___mcc_h974 = _source299.dtor_element;
              BigInteger _6103___mcc_h975 = _source299.dtor_dims;
              {
                RAST._IType _6104_fromTpeGen;
                RAST._IType _out2235;
                _out2235 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6104_fromTpeGen = _out2235;
                RAST._IType _6105_toTpeGen;
                RAST._IType _out2236;
                _out2236 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6105_toTpeGen = _out2236;
                RAST._IExpr _6106_recursiveGen;
                DCOMP._IOwnership _6107_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6108_recIdents;
                RAST._IExpr _out2237;
                DCOMP._IOwnership _out2238;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2239;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2237, out _out2238, out _out2239);
                _6106_recursiveGen = _out2237;
                _6107_recOwned = _out2238;
                _6108_recIdents = _out2239;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6106_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6104_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6105_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2240;
                DCOMP._IOwnership _out2241;
                DCOMP.COMP.FromOwnership(r, _6107_recOwned, expectedOwnership, out _out2240, out _out2241);
                r = _out2240;
                resultingOwnership = _out2241;
                readIdents = _6108_recIdents;
              }
            } else if (_source299.is_Seq) {
              DAST._IType _6109___mcc_h978 = _source299.dtor_element;
              {
                RAST._IType _6110_fromTpeGen;
                RAST._IType _out2242;
                _out2242 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6110_fromTpeGen = _out2242;
                RAST._IType _6111_toTpeGen;
                RAST._IType _out2243;
                _out2243 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6111_toTpeGen = _out2243;
                RAST._IExpr _6112_recursiveGen;
                DCOMP._IOwnership _6113_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6114_recIdents;
                RAST._IExpr _out2244;
                DCOMP._IOwnership _out2245;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2246;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2244, out _out2245, out _out2246);
                _6112_recursiveGen = _out2244;
                _6113_recOwned = _out2245;
                _6114_recIdents = _out2246;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6112_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6110_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6111_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2247;
                DCOMP._IOwnership _out2248;
                DCOMP.COMP.FromOwnership(r, _6113_recOwned, expectedOwnership, out _out2247, out _out2248);
                r = _out2247;
                resultingOwnership = _out2248;
                readIdents = _6114_recIdents;
              }
            } else if (_source299.is_Set) {
              DAST._IType _6115___mcc_h980 = _source299.dtor_element;
              {
                RAST._IType _6116_fromTpeGen;
                RAST._IType _out2249;
                _out2249 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6116_fromTpeGen = _out2249;
                RAST._IType _6117_toTpeGen;
                RAST._IType _out2250;
                _out2250 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6117_toTpeGen = _out2250;
                RAST._IExpr _6118_recursiveGen;
                DCOMP._IOwnership _6119_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6120_recIdents;
                RAST._IExpr _out2251;
                DCOMP._IOwnership _out2252;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2253;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2251, out _out2252, out _out2253);
                _6118_recursiveGen = _out2251;
                _6119_recOwned = _out2252;
                _6120_recIdents = _out2253;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6118_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6116_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6117_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2254;
                DCOMP._IOwnership _out2255;
                DCOMP.COMP.FromOwnership(r, _6119_recOwned, expectedOwnership, out _out2254, out _out2255);
                r = _out2254;
                resultingOwnership = _out2255;
                readIdents = _6120_recIdents;
              }
            } else if (_source299.is_Multiset) {
              DAST._IType _6121___mcc_h982 = _source299.dtor_element;
              {
                RAST._IType _6122_fromTpeGen;
                RAST._IType _out2256;
                _out2256 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6122_fromTpeGen = _out2256;
                RAST._IType _6123_toTpeGen;
                RAST._IType _out2257;
                _out2257 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6123_toTpeGen = _out2257;
                RAST._IExpr _6124_recursiveGen;
                DCOMP._IOwnership _6125_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6126_recIdents;
                RAST._IExpr _out2258;
                DCOMP._IOwnership _out2259;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2260;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2258, out _out2259, out _out2260);
                _6124_recursiveGen = _out2258;
                _6125_recOwned = _out2259;
                _6126_recIdents = _out2260;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6124_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6122_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6123_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2261;
                DCOMP._IOwnership _out2262;
                DCOMP.COMP.FromOwnership(r, _6125_recOwned, expectedOwnership, out _out2261, out _out2262);
                r = _out2261;
                resultingOwnership = _out2262;
                readIdents = _6126_recIdents;
              }
            } else if (_source299.is_Map) {
              DAST._IType _6127___mcc_h984 = _source299.dtor_key;
              DAST._IType _6128___mcc_h985 = _source299.dtor_value;
              {
                RAST._IType _6129_fromTpeGen;
                RAST._IType _out2263;
                _out2263 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6129_fromTpeGen = _out2263;
                RAST._IType _6130_toTpeGen;
                RAST._IType _out2264;
                _out2264 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6130_toTpeGen = _out2264;
                RAST._IExpr _6131_recursiveGen;
                DCOMP._IOwnership _6132_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6133_recIdents;
                RAST._IExpr _out2265;
                DCOMP._IOwnership _out2266;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2267;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2265, out _out2266, out _out2267);
                _6131_recursiveGen = _out2265;
                _6132_recOwned = _out2266;
                _6133_recIdents = _out2267;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6131_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6129_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6130_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2268;
                DCOMP._IOwnership _out2269;
                DCOMP.COMP.FromOwnership(r, _6132_recOwned, expectedOwnership, out _out2268, out _out2269);
                r = _out2268;
                resultingOwnership = _out2269;
                readIdents = _6133_recIdents;
              }
            } else if (_source299.is_SetBuilder) {
              DAST._IType _6134___mcc_h988 = _source299.dtor_element;
              {
                RAST._IType _6135_fromTpeGen;
                RAST._IType _out2270;
                _out2270 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6135_fromTpeGen = _out2270;
                RAST._IType _6136_toTpeGen;
                RAST._IType _out2271;
                _out2271 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6136_toTpeGen = _out2271;
                RAST._IExpr _6137_recursiveGen;
                DCOMP._IOwnership _6138_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6139_recIdents;
                RAST._IExpr _out2272;
                DCOMP._IOwnership _out2273;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2274;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2272, out _out2273, out _out2274);
                _6137_recursiveGen = _out2272;
                _6138_recOwned = _out2273;
                _6139_recIdents = _out2274;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6137_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6135_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6136_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2275;
                DCOMP._IOwnership _out2276;
                DCOMP.COMP.FromOwnership(r, _6138_recOwned, expectedOwnership, out _out2275, out _out2276);
                r = _out2275;
                resultingOwnership = _out2276;
                readIdents = _6139_recIdents;
              }
            } else if (_source299.is_MapBuilder) {
              DAST._IType _6140___mcc_h990 = _source299.dtor_key;
              DAST._IType _6141___mcc_h991 = _source299.dtor_value;
              {
                RAST._IType _6142_fromTpeGen;
                RAST._IType _out2277;
                _out2277 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6142_fromTpeGen = _out2277;
                RAST._IType _6143_toTpeGen;
                RAST._IType _out2278;
                _out2278 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6143_toTpeGen = _out2278;
                RAST._IExpr _6144_recursiveGen;
                DCOMP._IOwnership _6145_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6146_recIdents;
                RAST._IExpr _out2279;
                DCOMP._IOwnership _out2280;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2281;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2279, out _out2280, out _out2281);
                _6144_recursiveGen = _out2279;
                _6145_recOwned = _out2280;
                _6146_recIdents = _out2281;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6144_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6142_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6143_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2282;
                DCOMP._IOwnership _out2283;
                DCOMP.COMP.FromOwnership(r, _6145_recOwned, expectedOwnership, out _out2282, out _out2283);
                r = _out2282;
                resultingOwnership = _out2283;
                readIdents = _6146_recIdents;
              }
            } else if (_source299.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6147___mcc_h994 = _source299.dtor_args;
              DAST._IType _6148___mcc_h995 = _source299.dtor_result;
              {
                RAST._IType _6149_fromTpeGen;
                RAST._IType _out2284;
                _out2284 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6149_fromTpeGen = _out2284;
                RAST._IType _6150_toTpeGen;
                RAST._IType _out2285;
                _out2285 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6150_toTpeGen = _out2285;
                RAST._IExpr _6151_recursiveGen;
                DCOMP._IOwnership _6152_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6153_recIdents;
                RAST._IExpr _out2286;
                DCOMP._IOwnership _out2287;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2288;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2286, out _out2287, out _out2288);
                _6151_recursiveGen = _out2286;
                _6152_recOwned = _out2287;
                _6153_recIdents = _out2288;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6151_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6149_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6150_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2289;
                DCOMP._IOwnership _out2290;
                DCOMP.COMP.FromOwnership(r, _6152_recOwned, expectedOwnership, out _out2289, out _out2290);
                r = _out2289;
                resultingOwnership = _out2290;
                readIdents = _6153_recIdents;
              }
            } else if (_source299.is_Primitive) {
              DAST._IPrimitive _6154___mcc_h998 = _source299.dtor_Primitive_a0;
              DAST._IPrimitive _source304 = _6154___mcc_h998;
              if (_source304.is_Int) {
                {
                  RAST._IType _6155_fromTpeGen;
                  RAST._IType _out2291;
                  _out2291 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6155_fromTpeGen = _out2291;
                  RAST._IType _6156_toTpeGen;
                  RAST._IType _out2292;
                  _out2292 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6156_toTpeGen = _out2292;
                  RAST._IExpr _6157_recursiveGen;
                  DCOMP._IOwnership _6158_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6159_recIdents;
                  RAST._IExpr _out2293;
                  DCOMP._IOwnership _out2294;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2295;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2293, out _out2294, out _out2295);
                  _6157_recursiveGen = _out2293;
                  _6158_recOwned = _out2294;
                  _6159_recIdents = _out2295;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6157_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6155_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6156_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2296;
                  DCOMP._IOwnership _out2297;
                  DCOMP.COMP.FromOwnership(r, _6158_recOwned, expectedOwnership, out _out2296, out _out2297);
                  r = _out2296;
                  resultingOwnership = _out2297;
                  readIdents = _6159_recIdents;
                }
              } else if (_source304.is_Real) {
                {
                  RAST._IExpr _6160_recursiveGen;
                  DCOMP._IOwnership _6161___v98;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6162_recIdents;
                  RAST._IExpr _out2298;
                  DCOMP._IOwnership _out2299;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2300;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2298, out _out2299, out _out2300);
                  _6160_recursiveGen = _out2298;
                  _6161___v98 = _out2299;
                  _6162_recIdents = _out2300;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_6160_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out2301;
                  DCOMP._IOwnership _out2302;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2301, out _out2302);
                  r = _out2301;
                  resultingOwnership = _out2302;
                  readIdents = _6162_recIdents;
                }
              } else if (_source304.is_String) {
                {
                  RAST._IType _6163_fromTpeGen;
                  RAST._IType _out2303;
                  _out2303 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6163_fromTpeGen = _out2303;
                  RAST._IType _6164_toTpeGen;
                  RAST._IType _out2304;
                  _out2304 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6164_toTpeGen = _out2304;
                  RAST._IExpr _6165_recursiveGen;
                  DCOMP._IOwnership _6166_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6167_recIdents;
                  RAST._IExpr _out2305;
                  DCOMP._IOwnership _out2306;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2307;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2305, out _out2306, out _out2307);
                  _6165_recursiveGen = _out2305;
                  _6166_recOwned = _out2306;
                  _6167_recIdents = _out2307;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6165_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6163_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6164_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2308;
                  DCOMP._IOwnership _out2309;
                  DCOMP.COMP.FromOwnership(r, _6166_recOwned, expectedOwnership, out _out2308, out _out2309);
                  r = _out2308;
                  resultingOwnership = _out2309;
                  readIdents = _6167_recIdents;
                }
              } else if (_source304.is_Bool) {
                {
                  RAST._IType _6168_fromTpeGen;
                  RAST._IType _out2310;
                  _out2310 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6168_fromTpeGen = _out2310;
                  RAST._IType _6169_toTpeGen;
                  RAST._IType _out2311;
                  _out2311 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6169_toTpeGen = _out2311;
                  RAST._IExpr _6170_recursiveGen;
                  DCOMP._IOwnership _6171_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6172_recIdents;
                  RAST._IExpr _out2312;
                  DCOMP._IOwnership _out2313;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2314;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2312, out _out2313, out _out2314);
                  _6170_recursiveGen = _out2312;
                  _6171_recOwned = _out2313;
                  _6172_recIdents = _out2314;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6170_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6168_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6169_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2315;
                  DCOMP._IOwnership _out2316;
                  DCOMP.COMP.FromOwnership(r, _6171_recOwned, expectedOwnership, out _out2315, out _out2316);
                  r = _out2315;
                  resultingOwnership = _out2316;
                  readIdents = _6172_recIdents;
                }
              } else {
                {
                  RAST._IType _6173_rhsType;
                  RAST._IType _out2317;
                  _out2317 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6173_rhsType = _out2317;
                  RAST._IExpr _6174_recursiveGen;
                  DCOMP._IOwnership _6175___v104;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6176_recIdents;
                  RAST._IExpr _out2318;
                  DCOMP._IOwnership _out2319;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2320;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2318, out _out2319, out _out2320);
                  _6174_recursiveGen = _out2318;
                  _6175___v104 = _out2319;
                  _6176_recIdents = _out2320;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_6174_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out2321;
                  DCOMP._IOwnership _out2322;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2321, out _out2322);
                  r = _out2321;
                  resultingOwnership = _out2322;
                  readIdents = _6176_recIdents;
                }
              }
            } else if (_source299.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6177___mcc_h1000 = _source299.dtor_Passthrough_a0;
              {
                RAST._IType _6178_rhsType;
                RAST._IType _out2323;
                _out2323 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6178_rhsType = _out2323;
                RAST._IExpr _6179_recursiveGen;
                DCOMP._IOwnership _6180___v101;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6181_recIdents;
                RAST._IExpr _out2324;
                DCOMP._IOwnership _out2325;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2326;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2324, out _out2325, out _out2326);
                _6179_recursiveGen = _out2324;
                _6180___v101 = _out2325;
                _6181_recIdents = _out2326;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_6178_rhsType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_6179_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out2327;
                DCOMP._IOwnership _out2328;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2327, out _out2328);
                r = _out2327;
                resultingOwnership = _out2328;
                readIdents = _6181_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6182___mcc_h1002 = _source299.dtor_TypeArg_a0;
              {
                RAST._IType _6183_fromTpeGen;
                RAST._IType _out2329;
                _out2329 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6183_fromTpeGen = _out2329;
                RAST._IType _6184_toTpeGen;
                RAST._IType _out2330;
                _out2330 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6184_toTpeGen = _out2330;
                RAST._IExpr _6185_recursiveGen;
                DCOMP._IOwnership _6186_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6187_recIdents;
                RAST._IExpr _out2331;
                DCOMP._IOwnership _out2332;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2333;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2331, out _out2332, out _out2333);
                _6185_recursiveGen = _out2331;
                _6186_recOwned = _out2332;
                _6187_recIdents = _out2333;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6185_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6183_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6184_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2334;
                DCOMP._IOwnership _out2335;
                DCOMP.COMP.FromOwnership(r, _6186_recOwned, expectedOwnership, out _out2334, out _out2335);
                r = _out2334;
                resultingOwnership = _out2335;
                readIdents = _6187_recIdents;
              }
            }
          } else if (_source298.is_Real) {
            DAST._IType _source305 = _3747___mcc_h1;
            if (_source305.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6188___mcc_h1004 = _source305.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6189___mcc_h1005 = _source305.dtor_typeArgs;
              DAST._IResolvedType _6190___mcc_h1006 = _source305.dtor_resolved;
              DAST._IResolvedType _source306 = _6190___mcc_h1006;
              if (_source306.is_AllocatedDatatype) {
                DAST._IDatatypeType _6191___mcc_h1010 = _source306.dtor_datatypeType;
                {
                  RAST._IType _6192_fromTpeGen;
                  RAST._IType _out2336;
                  _out2336 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6192_fromTpeGen = _out2336;
                  RAST._IType _6193_toTpeGen;
                  RAST._IType _out2337;
                  _out2337 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6193_toTpeGen = _out2337;
                  RAST._IExpr _6194_recursiveGen;
                  DCOMP._IOwnership _6195_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6196_recIdents;
                  RAST._IExpr _out2338;
                  DCOMP._IOwnership _out2339;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2340;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2338, out _out2339, out _out2340);
                  _6194_recursiveGen = _out2338;
                  _6195_recOwned = _out2339;
                  _6196_recIdents = _out2340;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6194_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6192_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6193_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2341;
                  DCOMP._IOwnership _out2342;
                  DCOMP.COMP.FromOwnership(r, _6195_recOwned, expectedOwnership, out _out2341, out _out2342);
                  r = _out2341;
                  resultingOwnership = _out2342;
                  readIdents = _6196_recIdents;
                }
              } else if (_source306.is_Datatype) {
                DAST._IDatatypeType _6197___mcc_h1012 = _source306.dtor_datatypeType;
                {
                  RAST._IType _6198_fromTpeGen;
                  RAST._IType _out2343;
                  _out2343 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6198_fromTpeGen = _out2343;
                  RAST._IType _6199_toTpeGen;
                  RAST._IType _out2344;
                  _out2344 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6199_toTpeGen = _out2344;
                  RAST._IExpr _6200_recursiveGen;
                  DCOMP._IOwnership _6201_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6202_recIdents;
                  RAST._IExpr _out2345;
                  DCOMP._IOwnership _out2346;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2347;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2345, out _out2346, out _out2347);
                  _6200_recursiveGen = _out2345;
                  _6201_recOwned = _out2346;
                  _6202_recIdents = _out2347;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6200_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6198_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6199_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2348;
                  DCOMP._IOwnership _out2349;
                  DCOMP.COMP.FromOwnership(r, _6201_recOwned, expectedOwnership, out _out2348, out _out2349);
                  r = _out2348;
                  resultingOwnership = _out2349;
                  readIdents = _6202_recIdents;
                }
              } else if (_source306.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6203___mcc_h1014 = _source306.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6204___mcc_h1015 = _source306.dtor_attributes;
                {
                  RAST._IType _6205_fromTpeGen;
                  RAST._IType _out2350;
                  _out2350 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6205_fromTpeGen = _out2350;
                  RAST._IType _6206_toTpeGen;
                  RAST._IType _out2351;
                  _out2351 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6206_toTpeGen = _out2351;
                  RAST._IExpr _6207_recursiveGen;
                  DCOMP._IOwnership _6208_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6209_recIdents;
                  RAST._IExpr _out2352;
                  DCOMP._IOwnership _out2353;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2354;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2352, out _out2353, out _out2354);
                  _6207_recursiveGen = _out2352;
                  _6208_recOwned = _out2353;
                  _6209_recIdents = _out2354;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6207_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6205_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6206_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2355;
                  DCOMP._IOwnership _out2356;
                  DCOMP.COMP.FromOwnership(r, _6208_recOwned, expectedOwnership, out _out2355, out _out2356);
                  r = _out2355;
                  resultingOwnership = _out2356;
                  readIdents = _6209_recIdents;
                }
              } else {
                DAST._IType _6210___mcc_h1018 = _source306.dtor_baseType;
                DAST._INewtypeRange _6211___mcc_h1019 = _source306.dtor_range;
                bool _6212___mcc_h1020 = _source306.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6213___mcc_h1021 = _source306.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6214_attributes = _6213___mcc_h1021;
                bool _6215_erase = _6212___mcc_h1020;
                DAST._INewtypeRange _6216_range = _6211___mcc_h1019;
                DAST._IType _6217_b = _6210___mcc_h1018;
                {
                  Std.Wrappers._IOption<RAST._IType> _6218_nativeToType;
                  _6218_nativeToType = DCOMP.COMP.NewtypeToRustType(_6217_b, _6216_range);
                  if (object.Equals(_3741_fromTpe, _6217_b)) {
                    RAST._IExpr _6219_recursiveGen;
                    DCOMP._IOwnership _6220_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6221_recIdents;
                    RAST._IExpr _out2357;
                    DCOMP._IOwnership _out2358;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2359;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2357, out _out2358, out _out2359);
                    _6219_recursiveGen = _out2357;
                    _6220_recOwned = _out2358;
                    _6221_recIdents = _out2359;
                    readIdents = _6221_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source307 = _6218_nativeToType;
                    if (_source307.is_None) {
                      if (_6215_erase) {
                        r = _6219_recursiveGen;
                      } else {
                        RAST._IType _6222_rhsType;
                        RAST._IType _out2360;
                        _out2360 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _6222_rhsType = _out2360;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6222_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6219_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2361;
                      DCOMP._IOwnership _out2362;
                      DCOMP.COMP.FromOwnership(r, _6220_recOwned, expectedOwnership, out _out2361, out _out2362);
                      r = _out2361;
                      resultingOwnership = _out2362;
                    } else {
                      RAST._IType _6223___mcc_h2161 = _source307.dtor_value;
                      RAST._IType _6224_v = _6223___mcc_h2161;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6219_recursiveGen, RAST.Expr.create_ExprFromType(_6224_v)));
                      RAST._IExpr _out2363;
                      DCOMP._IOwnership _out2364;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2363, out _out2364);
                      r = _out2363;
                      resultingOwnership = _out2364;
                    }
                  } else {
                    if ((_6218_nativeToType).is_Some) {
                      DAST._IType _source308 = _3741_fromTpe;
                      if (_source308.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6225___mcc_h2162 = _source308.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6226___mcc_h2163 = _source308.dtor_typeArgs;
                        DAST._IResolvedType _6227___mcc_h2164 = _source308.dtor_resolved;
                        DAST._IResolvedType _source309 = _6227___mcc_h2164;
                        if (_source309.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6228___mcc_h2168 = _source309.dtor_datatypeType;
                        } else if (_source309.is_Datatype) {
                          DAST._IDatatypeType _6229___mcc_h2170 = _source309.dtor_datatypeType;
                        } else if (_source309.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6230___mcc_h2172 = _source309.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6231___mcc_h2173 = _source309.dtor_attributes;
                        } else {
                          DAST._IType _6232___mcc_h2176 = _source309.dtor_baseType;
                          DAST._INewtypeRange _6233___mcc_h2177 = _source309.dtor_range;
                          bool _6234___mcc_h2178 = _source309.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6235___mcc_h2179 = _source309.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6236_attributes0 = _6235___mcc_h2179;
                          bool _6237_erase0 = _6234___mcc_h2178;
                          DAST._INewtypeRange _6238_range0 = _6233___mcc_h2177;
                          DAST._IType _6239_b0 = _6232___mcc_h2176;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6240_nativeFromType;
                            _6240_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6239_b0, _6238_range0);
                            if ((_6240_nativeFromType).is_Some) {
                              RAST._IExpr _6241_recursiveGen;
                              DCOMP._IOwnership _6242_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6243_recIdents;
                              RAST._IExpr _out2365;
                              DCOMP._IOwnership _out2366;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2367;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2365, out _out2366, out _out2367);
                              _6241_recursiveGen = _out2365;
                              _6242_recOwned = _out2366;
                              _6243_recIdents = _out2367;
                              RAST._IExpr _out2368;
                              DCOMP._IOwnership _out2369;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6241_recursiveGen, (_6218_nativeToType).dtor_value), _6242_recOwned, expectedOwnership, out _out2368, out _out2369);
                              r = _out2368;
                              resultingOwnership = _out2369;
                              readIdents = _6243_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source308.is_Nullable) {
                        DAST._IType _6244___mcc_h2184 = _source308.dtor_Nullable_a0;
                      } else if (_source308.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6245___mcc_h2186 = _source308.dtor_Tuple_a0;
                      } else if (_source308.is_Array) {
                        DAST._IType _6246___mcc_h2188 = _source308.dtor_element;
                        BigInteger _6247___mcc_h2189 = _source308.dtor_dims;
                      } else if (_source308.is_Seq) {
                        DAST._IType _6248___mcc_h2192 = _source308.dtor_element;
                      } else if (_source308.is_Set) {
                        DAST._IType _6249___mcc_h2194 = _source308.dtor_element;
                      } else if (_source308.is_Multiset) {
                        DAST._IType _6250___mcc_h2196 = _source308.dtor_element;
                      } else if (_source308.is_Map) {
                        DAST._IType _6251___mcc_h2198 = _source308.dtor_key;
                        DAST._IType _6252___mcc_h2199 = _source308.dtor_value;
                      } else if (_source308.is_SetBuilder) {
                        DAST._IType _6253___mcc_h2202 = _source308.dtor_element;
                      } else if (_source308.is_MapBuilder) {
                        DAST._IType _6254___mcc_h2204 = _source308.dtor_key;
                        DAST._IType _6255___mcc_h2205 = _source308.dtor_value;
                      } else if (_source308.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6256___mcc_h2208 = _source308.dtor_args;
                        DAST._IType _6257___mcc_h2209 = _source308.dtor_result;
                      } else if (_source308.is_Primitive) {
                        DAST._IPrimitive _6258___mcc_h2212 = _source308.dtor_Primitive_a0;
                      } else if (_source308.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6259___mcc_h2214 = _source308.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6260___mcc_h2216 = _source308.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6261_recursiveGen;
                        DCOMP._IOwnership _6262_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6263_recIdents;
                        RAST._IExpr _out2370;
                        DCOMP._IOwnership _out2371;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2372;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2370, out _out2371, out _out2372);
                        _6261_recursiveGen = _out2370;
                        _6262_recOwned = _out2371;
                        _6263_recIdents = _out2372;
                        RAST._IExpr _out2373;
                        DCOMP._IOwnership _out2374;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6261_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6218_nativeToType).dtor_value), _6262_recOwned, expectedOwnership, out _out2373, out _out2374);
                        r = _out2373;
                        resultingOwnership = _out2374;
                        readIdents = _6263_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2375;
                    DCOMP._IOwnership _out2376;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2377;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _6217_b), _6217_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out2375, out _out2376, out _out2377);
                    r = _out2375;
                    resultingOwnership = _out2376;
                    readIdents = _out2377;
                  }
                }
              }
            } else if (_source305.is_Nullable) {
              DAST._IType _6264___mcc_h1026 = _source305.dtor_Nullable_a0;
              {
                RAST._IExpr _6265_recursiveGen;
                DCOMP._IOwnership _6266_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6267_recIdents;
                RAST._IExpr _out2378;
                DCOMP._IOwnership _out2379;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2380;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2378, out _out2379, out _out2380);
                _6265_recursiveGen = _out2378;
                _6266_recOwned = _out2379;
                _6267_recIdents = _out2380;
                r = _6265_recursiveGen;
                if (object.Equals(_6266_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2381;
                DCOMP._IOwnership _out2382;
                DCOMP.COMP.FromOwnership(r, _6266_recOwned, expectedOwnership, out _out2381, out _out2382);
                r = _out2381;
                resultingOwnership = _out2382;
                readIdents = _6267_recIdents;
              }
            } else if (_source305.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6268___mcc_h1028 = _source305.dtor_Tuple_a0;
              {
                RAST._IType _6269_fromTpeGen;
                RAST._IType _out2383;
                _out2383 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6269_fromTpeGen = _out2383;
                RAST._IType _6270_toTpeGen;
                RAST._IType _out2384;
                _out2384 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6270_toTpeGen = _out2384;
                RAST._IExpr _6271_recursiveGen;
                DCOMP._IOwnership _6272_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6273_recIdents;
                RAST._IExpr _out2385;
                DCOMP._IOwnership _out2386;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2387;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2385, out _out2386, out _out2387);
                _6271_recursiveGen = _out2385;
                _6272_recOwned = _out2386;
                _6273_recIdents = _out2387;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6271_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6269_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6270_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2388;
                DCOMP._IOwnership _out2389;
                DCOMP.COMP.FromOwnership(r, _6272_recOwned, expectedOwnership, out _out2388, out _out2389);
                r = _out2388;
                resultingOwnership = _out2389;
                readIdents = _6273_recIdents;
              }
            } else if (_source305.is_Array) {
              DAST._IType _6274___mcc_h1030 = _source305.dtor_element;
              BigInteger _6275___mcc_h1031 = _source305.dtor_dims;
              {
                RAST._IType _6276_fromTpeGen;
                RAST._IType _out2390;
                _out2390 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6276_fromTpeGen = _out2390;
                RAST._IType _6277_toTpeGen;
                RAST._IType _out2391;
                _out2391 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6277_toTpeGen = _out2391;
                RAST._IExpr _6278_recursiveGen;
                DCOMP._IOwnership _6279_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6280_recIdents;
                RAST._IExpr _out2392;
                DCOMP._IOwnership _out2393;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2394;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2392, out _out2393, out _out2394);
                _6278_recursiveGen = _out2392;
                _6279_recOwned = _out2393;
                _6280_recIdents = _out2394;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6278_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6276_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6277_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2395;
                DCOMP._IOwnership _out2396;
                DCOMP.COMP.FromOwnership(r, _6279_recOwned, expectedOwnership, out _out2395, out _out2396);
                r = _out2395;
                resultingOwnership = _out2396;
                readIdents = _6280_recIdents;
              }
            } else if (_source305.is_Seq) {
              DAST._IType _6281___mcc_h1034 = _source305.dtor_element;
              {
                RAST._IType _6282_fromTpeGen;
                RAST._IType _out2397;
                _out2397 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6282_fromTpeGen = _out2397;
                RAST._IType _6283_toTpeGen;
                RAST._IType _out2398;
                _out2398 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6283_toTpeGen = _out2398;
                RAST._IExpr _6284_recursiveGen;
                DCOMP._IOwnership _6285_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6286_recIdents;
                RAST._IExpr _out2399;
                DCOMP._IOwnership _out2400;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2401;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2399, out _out2400, out _out2401);
                _6284_recursiveGen = _out2399;
                _6285_recOwned = _out2400;
                _6286_recIdents = _out2401;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6284_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6282_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6283_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2402;
                DCOMP._IOwnership _out2403;
                DCOMP.COMP.FromOwnership(r, _6285_recOwned, expectedOwnership, out _out2402, out _out2403);
                r = _out2402;
                resultingOwnership = _out2403;
                readIdents = _6286_recIdents;
              }
            } else if (_source305.is_Set) {
              DAST._IType _6287___mcc_h1036 = _source305.dtor_element;
              {
                RAST._IType _6288_fromTpeGen;
                RAST._IType _out2404;
                _out2404 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6288_fromTpeGen = _out2404;
                RAST._IType _6289_toTpeGen;
                RAST._IType _out2405;
                _out2405 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6289_toTpeGen = _out2405;
                RAST._IExpr _6290_recursiveGen;
                DCOMP._IOwnership _6291_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6292_recIdents;
                RAST._IExpr _out2406;
                DCOMP._IOwnership _out2407;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2408;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2406, out _out2407, out _out2408);
                _6290_recursiveGen = _out2406;
                _6291_recOwned = _out2407;
                _6292_recIdents = _out2408;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6290_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6288_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6289_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2409;
                DCOMP._IOwnership _out2410;
                DCOMP.COMP.FromOwnership(r, _6291_recOwned, expectedOwnership, out _out2409, out _out2410);
                r = _out2409;
                resultingOwnership = _out2410;
                readIdents = _6292_recIdents;
              }
            } else if (_source305.is_Multiset) {
              DAST._IType _6293___mcc_h1038 = _source305.dtor_element;
              {
                RAST._IType _6294_fromTpeGen;
                RAST._IType _out2411;
                _out2411 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6294_fromTpeGen = _out2411;
                RAST._IType _6295_toTpeGen;
                RAST._IType _out2412;
                _out2412 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6295_toTpeGen = _out2412;
                RAST._IExpr _6296_recursiveGen;
                DCOMP._IOwnership _6297_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6298_recIdents;
                RAST._IExpr _out2413;
                DCOMP._IOwnership _out2414;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2415;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2413, out _out2414, out _out2415);
                _6296_recursiveGen = _out2413;
                _6297_recOwned = _out2414;
                _6298_recIdents = _out2415;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6296_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6294_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6295_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2416;
                DCOMP._IOwnership _out2417;
                DCOMP.COMP.FromOwnership(r, _6297_recOwned, expectedOwnership, out _out2416, out _out2417);
                r = _out2416;
                resultingOwnership = _out2417;
                readIdents = _6298_recIdents;
              }
            } else if (_source305.is_Map) {
              DAST._IType _6299___mcc_h1040 = _source305.dtor_key;
              DAST._IType _6300___mcc_h1041 = _source305.dtor_value;
              {
                RAST._IType _6301_fromTpeGen;
                RAST._IType _out2418;
                _out2418 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6301_fromTpeGen = _out2418;
                RAST._IType _6302_toTpeGen;
                RAST._IType _out2419;
                _out2419 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6302_toTpeGen = _out2419;
                RAST._IExpr _6303_recursiveGen;
                DCOMP._IOwnership _6304_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6305_recIdents;
                RAST._IExpr _out2420;
                DCOMP._IOwnership _out2421;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2422;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2420, out _out2421, out _out2422);
                _6303_recursiveGen = _out2420;
                _6304_recOwned = _out2421;
                _6305_recIdents = _out2422;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6303_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6301_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6302_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2423;
                DCOMP._IOwnership _out2424;
                DCOMP.COMP.FromOwnership(r, _6304_recOwned, expectedOwnership, out _out2423, out _out2424);
                r = _out2423;
                resultingOwnership = _out2424;
                readIdents = _6305_recIdents;
              }
            } else if (_source305.is_SetBuilder) {
              DAST._IType _6306___mcc_h1044 = _source305.dtor_element;
              {
                RAST._IType _6307_fromTpeGen;
                RAST._IType _out2425;
                _out2425 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6307_fromTpeGen = _out2425;
                RAST._IType _6308_toTpeGen;
                RAST._IType _out2426;
                _out2426 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6308_toTpeGen = _out2426;
                RAST._IExpr _6309_recursiveGen;
                DCOMP._IOwnership _6310_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6311_recIdents;
                RAST._IExpr _out2427;
                DCOMP._IOwnership _out2428;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2429;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2427, out _out2428, out _out2429);
                _6309_recursiveGen = _out2427;
                _6310_recOwned = _out2428;
                _6311_recIdents = _out2429;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6309_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6307_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6308_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2430;
                DCOMP._IOwnership _out2431;
                DCOMP.COMP.FromOwnership(r, _6310_recOwned, expectedOwnership, out _out2430, out _out2431);
                r = _out2430;
                resultingOwnership = _out2431;
                readIdents = _6311_recIdents;
              }
            } else if (_source305.is_MapBuilder) {
              DAST._IType _6312___mcc_h1046 = _source305.dtor_key;
              DAST._IType _6313___mcc_h1047 = _source305.dtor_value;
              {
                RAST._IType _6314_fromTpeGen;
                RAST._IType _out2432;
                _out2432 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6314_fromTpeGen = _out2432;
                RAST._IType _6315_toTpeGen;
                RAST._IType _out2433;
                _out2433 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6315_toTpeGen = _out2433;
                RAST._IExpr _6316_recursiveGen;
                DCOMP._IOwnership _6317_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6318_recIdents;
                RAST._IExpr _out2434;
                DCOMP._IOwnership _out2435;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2436;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2434, out _out2435, out _out2436);
                _6316_recursiveGen = _out2434;
                _6317_recOwned = _out2435;
                _6318_recIdents = _out2436;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6316_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6314_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6315_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2437;
                DCOMP._IOwnership _out2438;
                DCOMP.COMP.FromOwnership(r, _6317_recOwned, expectedOwnership, out _out2437, out _out2438);
                r = _out2437;
                resultingOwnership = _out2438;
                readIdents = _6318_recIdents;
              }
            } else if (_source305.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6319___mcc_h1050 = _source305.dtor_args;
              DAST._IType _6320___mcc_h1051 = _source305.dtor_result;
              {
                RAST._IType _6321_fromTpeGen;
                RAST._IType _out2439;
                _out2439 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6321_fromTpeGen = _out2439;
                RAST._IType _6322_toTpeGen;
                RAST._IType _out2440;
                _out2440 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6322_toTpeGen = _out2440;
                RAST._IExpr _6323_recursiveGen;
                DCOMP._IOwnership _6324_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6325_recIdents;
                RAST._IExpr _out2441;
                DCOMP._IOwnership _out2442;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2443;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2441, out _out2442, out _out2443);
                _6323_recursiveGen = _out2441;
                _6324_recOwned = _out2442;
                _6325_recIdents = _out2443;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6323_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6321_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6322_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2444;
                DCOMP._IOwnership _out2445;
                DCOMP.COMP.FromOwnership(r, _6324_recOwned, expectedOwnership, out _out2444, out _out2445);
                r = _out2444;
                resultingOwnership = _out2445;
                readIdents = _6325_recIdents;
              }
            } else if (_source305.is_Primitive) {
              DAST._IPrimitive _6326___mcc_h1054 = _source305.dtor_Primitive_a0;
              DAST._IPrimitive _source310 = _6326___mcc_h1054;
              if (_source310.is_Int) {
                {
                  RAST._IExpr _6327_recursiveGen;
                  DCOMP._IOwnership _6328___v99;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6329_recIdents;
                  RAST._IExpr _out2446;
                  DCOMP._IOwnership _out2447;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2448;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2446, out _out2447, out _out2448);
                  _6327_recursiveGen = _out2446;
                  _6328___v99 = _out2447;
                  _6329_recIdents = _out2448;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_6327_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out2449;
                  DCOMP._IOwnership _out2450;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2449, out _out2450);
                  r = _out2449;
                  resultingOwnership = _out2450;
                  readIdents = _6329_recIdents;
                }
              } else if (_source310.is_Real) {
                {
                  RAST._IType _6330_fromTpeGen;
                  RAST._IType _out2451;
                  _out2451 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6330_fromTpeGen = _out2451;
                  RAST._IType _6331_toTpeGen;
                  RAST._IType _out2452;
                  _out2452 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6331_toTpeGen = _out2452;
                  RAST._IExpr _6332_recursiveGen;
                  DCOMP._IOwnership _6333_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6334_recIdents;
                  RAST._IExpr _out2453;
                  DCOMP._IOwnership _out2454;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2455;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2453, out _out2454, out _out2455);
                  _6332_recursiveGen = _out2453;
                  _6333_recOwned = _out2454;
                  _6334_recIdents = _out2455;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6332_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6330_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6331_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2456;
                  DCOMP._IOwnership _out2457;
                  DCOMP.COMP.FromOwnership(r, _6333_recOwned, expectedOwnership, out _out2456, out _out2457);
                  r = _out2456;
                  resultingOwnership = _out2457;
                  readIdents = _6334_recIdents;
                }
              } else if (_source310.is_String) {
                {
                  RAST._IType _6335_fromTpeGen;
                  RAST._IType _out2458;
                  _out2458 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6335_fromTpeGen = _out2458;
                  RAST._IType _6336_toTpeGen;
                  RAST._IType _out2459;
                  _out2459 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6336_toTpeGen = _out2459;
                  RAST._IExpr _6337_recursiveGen;
                  DCOMP._IOwnership _6338_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6339_recIdents;
                  RAST._IExpr _out2460;
                  DCOMP._IOwnership _out2461;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2462;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2460, out _out2461, out _out2462);
                  _6337_recursiveGen = _out2460;
                  _6338_recOwned = _out2461;
                  _6339_recIdents = _out2462;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6337_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6335_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6336_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2463;
                  DCOMP._IOwnership _out2464;
                  DCOMP.COMP.FromOwnership(r, _6338_recOwned, expectedOwnership, out _out2463, out _out2464);
                  r = _out2463;
                  resultingOwnership = _out2464;
                  readIdents = _6339_recIdents;
                }
              } else if (_source310.is_Bool) {
                {
                  RAST._IType _6340_fromTpeGen;
                  RAST._IType _out2465;
                  _out2465 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6340_fromTpeGen = _out2465;
                  RAST._IType _6341_toTpeGen;
                  RAST._IType _out2466;
                  _out2466 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6341_toTpeGen = _out2466;
                  RAST._IExpr _6342_recursiveGen;
                  DCOMP._IOwnership _6343_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6344_recIdents;
                  RAST._IExpr _out2467;
                  DCOMP._IOwnership _out2468;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2469;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2467, out _out2468, out _out2469);
                  _6342_recursiveGen = _out2467;
                  _6343_recOwned = _out2468;
                  _6344_recIdents = _out2469;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6342_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6340_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6341_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2470;
                  DCOMP._IOwnership _out2471;
                  DCOMP.COMP.FromOwnership(r, _6343_recOwned, expectedOwnership, out _out2470, out _out2471);
                  r = _out2470;
                  resultingOwnership = _out2471;
                  readIdents = _6344_recIdents;
                }
              } else {
                {
                  RAST._IType _6345_fromTpeGen;
                  RAST._IType _out2472;
                  _out2472 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6345_fromTpeGen = _out2472;
                  RAST._IType _6346_toTpeGen;
                  RAST._IType _out2473;
                  _out2473 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6346_toTpeGen = _out2473;
                  RAST._IExpr _6347_recursiveGen;
                  DCOMP._IOwnership _6348_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6349_recIdents;
                  RAST._IExpr _out2474;
                  DCOMP._IOwnership _out2475;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2476;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2474, out _out2475, out _out2476);
                  _6347_recursiveGen = _out2474;
                  _6348_recOwned = _out2475;
                  _6349_recIdents = _out2476;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6347_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6345_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6346_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2477;
                  DCOMP._IOwnership _out2478;
                  DCOMP.COMP.FromOwnership(r, _6348_recOwned, expectedOwnership, out _out2477, out _out2478);
                  r = _out2477;
                  resultingOwnership = _out2478;
                  readIdents = _6349_recIdents;
                }
              }
            } else if (_source305.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6350___mcc_h1056 = _source305.dtor_Passthrough_a0;
              {
                RAST._IType _6351_fromTpeGen;
                RAST._IType _out2479;
                _out2479 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6351_fromTpeGen = _out2479;
                RAST._IType _6352_toTpeGen;
                RAST._IType _out2480;
                _out2480 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6352_toTpeGen = _out2480;
                RAST._IExpr _6353_recursiveGen;
                DCOMP._IOwnership _6354_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6355_recIdents;
                RAST._IExpr _out2481;
                DCOMP._IOwnership _out2482;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2483;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2481, out _out2482, out _out2483);
                _6353_recursiveGen = _out2481;
                _6354_recOwned = _out2482;
                _6355_recIdents = _out2483;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6353_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6351_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6352_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2484;
                DCOMP._IOwnership _out2485;
                DCOMP.COMP.FromOwnership(r, _6354_recOwned, expectedOwnership, out _out2484, out _out2485);
                r = _out2484;
                resultingOwnership = _out2485;
                readIdents = _6355_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6356___mcc_h1058 = _source305.dtor_TypeArg_a0;
              {
                RAST._IType _6357_fromTpeGen;
                RAST._IType _out2486;
                _out2486 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6357_fromTpeGen = _out2486;
                RAST._IType _6358_toTpeGen;
                RAST._IType _out2487;
                _out2487 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6358_toTpeGen = _out2487;
                RAST._IExpr _6359_recursiveGen;
                DCOMP._IOwnership _6360_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6361_recIdents;
                RAST._IExpr _out2488;
                DCOMP._IOwnership _out2489;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2490;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2488, out _out2489, out _out2490);
                _6359_recursiveGen = _out2488;
                _6360_recOwned = _out2489;
                _6361_recIdents = _out2490;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6359_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6357_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6358_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2491;
                DCOMP._IOwnership _out2492;
                DCOMP.COMP.FromOwnership(r, _6360_recOwned, expectedOwnership, out _out2491, out _out2492);
                r = _out2491;
                resultingOwnership = _out2492;
                readIdents = _6361_recIdents;
              }
            }
          } else if (_source298.is_String) {
            DAST._IType _source311 = _3747___mcc_h1;
            if (_source311.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6362___mcc_h1060 = _source311.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6363___mcc_h1061 = _source311.dtor_typeArgs;
              DAST._IResolvedType _6364___mcc_h1062 = _source311.dtor_resolved;
              DAST._IResolvedType _source312 = _6364___mcc_h1062;
              if (_source312.is_AllocatedDatatype) {
                DAST._IDatatypeType _6365___mcc_h1066 = _source312.dtor_datatypeType;
                {
                  RAST._IType _6366_fromTpeGen;
                  RAST._IType _out2493;
                  _out2493 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6366_fromTpeGen = _out2493;
                  RAST._IType _6367_toTpeGen;
                  RAST._IType _out2494;
                  _out2494 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6367_toTpeGen = _out2494;
                  RAST._IExpr _6368_recursiveGen;
                  DCOMP._IOwnership _6369_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6370_recIdents;
                  RAST._IExpr _out2495;
                  DCOMP._IOwnership _out2496;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2497;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2495, out _out2496, out _out2497);
                  _6368_recursiveGen = _out2495;
                  _6369_recOwned = _out2496;
                  _6370_recIdents = _out2497;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6368_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6366_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6367_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2498;
                  DCOMP._IOwnership _out2499;
                  DCOMP.COMP.FromOwnership(r, _6369_recOwned, expectedOwnership, out _out2498, out _out2499);
                  r = _out2498;
                  resultingOwnership = _out2499;
                  readIdents = _6370_recIdents;
                }
              } else if (_source312.is_Datatype) {
                DAST._IDatatypeType _6371___mcc_h1068 = _source312.dtor_datatypeType;
                {
                  RAST._IType _6372_fromTpeGen;
                  RAST._IType _out2500;
                  _out2500 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6372_fromTpeGen = _out2500;
                  RAST._IType _6373_toTpeGen;
                  RAST._IType _out2501;
                  _out2501 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6373_toTpeGen = _out2501;
                  RAST._IExpr _6374_recursiveGen;
                  DCOMP._IOwnership _6375_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6376_recIdents;
                  RAST._IExpr _out2502;
                  DCOMP._IOwnership _out2503;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2504;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2502, out _out2503, out _out2504);
                  _6374_recursiveGen = _out2502;
                  _6375_recOwned = _out2503;
                  _6376_recIdents = _out2504;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6374_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6372_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6373_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2505;
                  DCOMP._IOwnership _out2506;
                  DCOMP.COMP.FromOwnership(r, _6375_recOwned, expectedOwnership, out _out2505, out _out2506);
                  r = _out2505;
                  resultingOwnership = _out2506;
                  readIdents = _6376_recIdents;
                }
              } else if (_source312.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6377___mcc_h1070 = _source312.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6378___mcc_h1071 = _source312.dtor_attributes;
                {
                  RAST._IType _6379_fromTpeGen;
                  RAST._IType _out2507;
                  _out2507 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6379_fromTpeGen = _out2507;
                  RAST._IType _6380_toTpeGen;
                  RAST._IType _out2508;
                  _out2508 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6380_toTpeGen = _out2508;
                  RAST._IExpr _6381_recursiveGen;
                  DCOMP._IOwnership _6382_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6383_recIdents;
                  RAST._IExpr _out2509;
                  DCOMP._IOwnership _out2510;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2511;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2509, out _out2510, out _out2511);
                  _6381_recursiveGen = _out2509;
                  _6382_recOwned = _out2510;
                  _6383_recIdents = _out2511;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6381_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6379_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6380_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2512;
                  DCOMP._IOwnership _out2513;
                  DCOMP.COMP.FromOwnership(r, _6382_recOwned, expectedOwnership, out _out2512, out _out2513);
                  r = _out2512;
                  resultingOwnership = _out2513;
                  readIdents = _6383_recIdents;
                }
              } else {
                DAST._IType _6384___mcc_h1074 = _source312.dtor_baseType;
                DAST._INewtypeRange _6385___mcc_h1075 = _source312.dtor_range;
                bool _6386___mcc_h1076 = _source312.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6387___mcc_h1077 = _source312.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6388_attributes = _6387___mcc_h1077;
                bool _6389_erase = _6386___mcc_h1076;
                DAST._INewtypeRange _6390_range = _6385___mcc_h1075;
                DAST._IType _6391_b = _6384___mcc_h1074;
                {
                  Std.Wrappers._IOption<RAST._IType> _6392_nativeToType;
                  _6392_nativeToType = DCOMP.COMP.NewtypeToRustType(_6391_b, _6390_range);
                  if (object.Equals(_3741_fromTpe, _6391_b)) {
                    RAST._IExpr _6393_recursiveGen;
                    DCOMP._IOwnership _6394_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6395_recIdents;
                    RAST._IExpr _out2514;
                    DCOMP._IOwnership _out2515;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2516;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2514, out _out2515, out _out2516);
                    _6393_recursiveGen = _out2514;
                    _6394_recOwned = _out2515;
                    _6395_recIdents = _out2516;
                    readIdents = _6395_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source313 = _6392_nativeToType;
                    if (_source313.is_None) {
                      if (_6389_erase) {
                        r = _6393_recursiveGen;
                      } else {
                        RAST._IType _6396_rhsType;
                        RAST._IType _out2517;
                        _out2517 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _6396_rhsType = _out2517;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6396_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6393_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2518;
                      DCOMP._IOwnership _out2519;
                      DCOMP.COMP.FromOwnership(r, _6394_recOwned, expectedOwnership, out _out2518, out _out2519);
                      r = _out2518;
                      resultingOwnership = _out2519;
                    } else {
                      RAST._IType _6397___mcc_h2218 = _source313.dtor_value;
                      RAST._IType _6398_v = _6397___mcc_h2218;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6393_recursiveGen, RAST.Expr.create_ExprFromType(_6398_v)));
                      RAST._IExpr _out2520;
                      DCOMP._IOwnership _out2521;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2520, out _out2521);
                      r = _out2520;
                      resultingOwnership = _out2521;
                    }
                  } else {
                    if ((_6392_nativeToType).is_Some) {
                      DAST._IType _source314 = _3741_fromTpe;
                      if (_source314.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6399___mcc_h2219 = _source314.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6400___mcc_h2220 = _source314.dtor_typeArgs;
                        DAST._IResolvedType _6401___mcc_h2221 = _source314.dtor_resolved;
                        DAST._IResolvedType _source315 = _6401___mcc_h2221;
                        if (_source315.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6402___mcc_h2225 = _source315.dtor_datatypeType;
                        } else if (_source315.is_Datatype) {
                          DAST._IDatatypeType _6403___mcc_h2227 = _source315.dtor_datatypeType;
                        } else if (_source315.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6404___mcc_h2229 = _source315.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6405___mcc_h2230 = _source315.dtor_attributes;
                        } else {
                          DAST._IType _6406___mcc_h2233 = _source315.dtor_baseType;
                          DAST._INewtypeRange _6407___mcc_h2234 = _source315.dtor_range;
                          bool _6408___mcc_h2235 = _source315.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6409___mcc_h2236 = _source315.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6410_attributes0 = _6409___mcc_h2236;
                          bool _6411_erase0 = _6408___mcc_h2235;
                          DAST._INewtypeRange _6412_range0 = _6407___mcc_h2234;
                          DAST._IType _6413_b0 = _6406___mcc_h2233;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6414_nativeFromType;
                            _6414_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6413_b0, _6412_range0);
                            if ((_6414_nativeFromType).is_Some) {
                              RAST._IExpr _6415_recursiveGen;
                              DCOMP._IOwnership _6416_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6417_recIdents;
                              RAST._IExpr _out2522;
                              DCOMP._IOwnership _out2523;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2524;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2522, out _out2523, out _out2524);
                              _6415_recursiveGen = _out2522;
                              _6416_recOwned = _out2523;
                              _6417_recIdents = _out2524;
                              RAST._IExpr _out2525;
                              DCOMP._IOwnership _out2526;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6415_recursiveGen, (_6392_nativeToType).dtor_value), _6416_recOwned, expectedOwnership, out _out2525, out _out2526);
                              r = _out2525;
                              resultingOwnership = _out2526;
                              readIdents = _6417_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source314.is_Nullable) {
                        DAST._IType _6418___mcc_h2241 = _source314.dtor_Nullable_a0;
                      } else if (_source314.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6419___mcc_h2243 = _source314.dtor_Tuple_a0;
                      } else if (_source314.is_Array) {
                        DAST._IType _6420___mcc_h2245 = _source314.dtor_element;
                        BigInteger _6421___mcc_h2246 = _source314.dtor_dims;
                      } else if (_source314.is_Seq) {
                        DAST._IType _6422___mcc_h2249 = _source314.dtor_element;
                      } else if (_source314.is_Set) {
                        DAST._IType _6423___mcc_h2251 = _source314.dtor_element;
                      } else if (_source314.is_Multiset) {
                        DAST._IType _6424___mcc_h2253 = _source314.dtor_element;
                      } else if (_source314.is_Map) {
                        DAST._IType _6425___mcc_h2255 = _source314.dtor_key;
                        DAST._IType _6426___mcc_h2256 = _source314.dtor_value;
                      } else if (_source314.is_SetBuilder) {
                        DAST._IType _6427___mcc_h2259 = _source314.dtor_element;
                      } else if (_source314.is_MapBuilder) {
                        DAST._IType _6428___mcc_h2261 = _source314.dtor_key;
                        DAST._IType _6429___mcc_h2262 = _source314.dtor_value;
                      } else if (_source314.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6430___mcc_h2265 = _source314.dtor_args;
                        DAST._IType _6431___mcc_h2266 = _source314.dtor_result;
                      } else if (_source314.is_Primitive) {
                        DAST._IPrimitive _6432___mcc_h2269 = _source314.dtor_Primitive_a0;
                      } else if (_source314.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6433___mcc_h2271 = _source314.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6434___mcc_h2273 = _source314.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6435_recursiveGen;
                        DCOMP._IOwnership _6436_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6437_recIdents;
                        RAST._IExpr _out2527;
                        DCOMP._IOwnership _out2528;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2529;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2527, out _out2528, out _out2529);
                        _6435_recursiveGen = _out2527;
                        _6436_recOwned = _out2528;
                        _6437_recIdents = _out2529;
                        RAST._IExpr _out2530;
                        DCOMP._IOwnership _out2531;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6435_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6392_nativeToType).dtor_value), _6436_recOwned, expectedOwnership, out _out2530, out _out2531);
                        r = _out2530;
                        resultingOwnership = _out2531;
                        readIdents = _6437_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2532;
                    DCOMP._IOwnership _out2533;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2534;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _6391_b), _6391_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out2532, out _out2533, out _out2534);
                    r = _out2532;
                    resultingOwnership = _out2533;
                    readIdents = _out2534;
                  }
                }
              }
            } else if (_source311.is_Nullable) {
              DAST._IType _6438___mcc_h1082 = _source311.dtor_Nullable_a0;
              {
                RAST._IExpr _6439_recursiveGen;
                DCOMP._IOwnership _6440_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6441_recIdents;
                RAST._IExpr _out2535;
                DCOMP._IOwnership _out2536;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2537;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2535, out _out2536, out _out2537);
                _6439_recursiveGen = _out2535;
                _6440_recOwned = _out2536;
                _6441_recIdents = _out2537;
                r = _6439_recursiveGen;
                if (object.Equals(_6440_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2538;
                DCOMP._IOwnership _out2539;
                DCOMP.COMP.FromOwnership(r, _6440_recOwned, expectedOwnership, out _out2538, out _out2539);
                r = _out2538;
                resultingOwnership = _out2539;
                readIdents = _6441_recIdents;
              }
            } else if (_source311.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6442___mcc_h1084 = _source311.dtor_Tuple_a0;
              {
                RAST._IType _6443_fromTpeGen;
                RAST._IType _out2540;
                _out2540 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6443_fromTpeGen = _out2540;
                RAST._IType _6444_toTpeGen;
                RAST._IType _out2541;
                _out2541 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6444_toTpeGen = _out2541;
                RAST._IExpr _6445_recursiveGen;
                DCOMP._IOwnership _6446_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6447_recIdents;
                RAST._IExpr _out2542;
                DCOMP._IOwnership _out2543;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2544;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2542, out _out2543, out _out2544);
                _6445_recursiveGen = _out2542;
                _6446_recOwned = _out2543;
                _6447_recIdents = _out2544;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6445_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6443_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6444_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2545;
                DCOMP._IOwnership _out2546;
                DCOMP.COMP.FromOwnership(r, _6446_recOwned, expectedOwnership, out _out2545, out _out2546);
                r = _out2545;
                resultingOwnership = _out2546;
                readIdents = _6447_recIdents;
              }
            } else if (_source311.is_Array) {
              DAST._IType _6448___mcc_h1086 = _source311.dtor_element;
              BigInteger _6449___mcc_h1087 = _source311.dtor_dims;
              {
                RAST._IType _6450_fromTpeGen;
                RAST._IType _out2547;
                _out2547 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6450_fromTpeGen = _out2547;
                RAST._IType _6451_toTpeGen;
                RAST._IType _out2548;
                _out2548 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6451_toTpeGen = _out2548;
                RAST._IExpr _6452_recursiveGen;
                DCOMP._IOwnership _6453_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6454_recIdents;
                RAST._IExpr _out2549;
                DCOMP._IOwnership _out2550;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2551;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2549, out _out2550, out _out2551);
                _6452_recursiveGen = _out2549;
                _6453_recOwned = _out2550;
                _6454_recIdents = _out2551;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6452_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6450_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6451_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2552;
                DCOMP._IOwnership _out2553;
                DCOMP.COMP.FromOwnership(r, _6453_recOwned, expectedOwnership, out _out2552, out _out2553);
                r = _out2552;
                resultingOwnership = _out2553;
                readIdents = _6454_recIdents;
              }
            } else if (_source311.is_Seq) {
              DAST._IType _6455___mcc_h1090 = _source311.dtor_element;
              {
                RAST._IType _6456_fromTpeGen;
                RAST._IType _out2554;
                _out2554 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6456_fromTpeGen = _out2554;
                RAST._IType _6457_toTpeGen;
                RAST._IType _out2555;
                _out2555 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6457_toTpeGen = _out2555;
                RAST._IExpr _6458_recursiveGen;
                DCOMP._IOwnership _6459_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6460_recIdents;
                RAST._IExpr _out2556;
                DCOMP._IOwnership _out2557;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2558;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2556, out _out2557, out _out2558);
                _6458_recursiveGen = _out2556;
                _6459_recOwned = _out2557;
                _6460_recIdents = _out2558;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6458_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6456_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6457_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2559;
                DCOMP._IOwnership _out2560;
                DCOMP.COMP.FromOwnership(r, _6459_recOwned, expectedOwnership, out _out2559, out _out2560);
                r = _out2559;
                resultingOwnership = _out2560;
                readIdents = _6460_recIdents;
              }
            } else if (_source311.is_Set) {
              DAST._IType _6461___mcc_h1092 = _source311.dtor_element;
              {
                RAST._IType _6462_fromTpeGen;
                RAST._IType _out2561;
                _out2561 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6462_fromTpeGen = _out2561;
                RAST._IType _6463_toTpeGen;
                RAST._IType _out2562;
                _out2562 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6463_toTpeGen = _out2562;
                RAST._IExpr _6464_recursiveGen;
                DCOMP._IOwnership _6465_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6466_recIdents;
                RAST._IExpr _out2563;
                DCOMP._IOwnership _out2564;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2565;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2563, out _out2564, out _out2565);
                _6464_recursiveGen = _out2563;
                _6465_recOwned = _out2564;
                _6466_recIdents = _out2565;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6464_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6462_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6463_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2566;
                DCOMP._IOwnership _out2567;
                DCOMP.COMP.FromOwnership(r, _6465_recOwned, expectedOwnership, out _out2566, out _out2567);
                r = _out2566;
                resultingOwnership = _out2567;
                readIdents = _6466_recIdents;
              }
            } else if (_source311.is_Multiset) {
              DAST._IType _6467___mcc_h1094 = _source311.dtor_element;
              {
                RAST._IType _6468_fromTpeGen;
                RAST._IType _out2568;
                _out2568 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6468_fromTpeGen = _out2568;
                RAST._IType _6469_toTpeGen;
                RAST._IType _out2569;
                _out2569 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6469_toTpeGen = _out2569;
                RAST._IExpr _6470_recursiveGen;
                DCOMP._IOwnership _6471_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6472_recIdents;
                RAST._IExpr _out2570;
                DCOMP._IOwnership _out2571;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2572;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2570, out _out2571, out _out2572);
                _6470_recursiveGen = _out2570;
                _6471_recOwned = _out2571;
                _6472_recIdents = _out2572;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6470_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6468_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6469_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2573;
                DCOMP._IOwnership _out2574;
                DCOMP.COMP.FromOwnership(r, _6471_recOwned, expectedOwnership, out _out2573, out _out2574);
                r = _out2573;
                resultingOwnership = _out2574;
                readIdents = _6472_recIdents;
              }
            } else if (_source311.is_Map) {
              DAST._IType _6473___mcc_h1096 = _source311.dtor_key;
              DAST._IType _6474___mcc_h1097 = _source311.dtor_value;
              {
                RAST._IType _6475_fromTpeGen;
                RAST._IType _out2575;
                _out2575 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6475_fromTpeGen = _out2575;
                RAST._IType _6476_toTpeGen;
                RAST._IType _out2576;
                _out2576 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6476_toTpeGen = _out2576;
                RAST._IExpr _6477_recursiveGen;
                DCOMP._IOwnership _6478_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6479_recIdents;
                RAST._IExpr _out2577;
                DCOMP._IOwnership _out2578;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2579;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2577, out _out2578, out _out2579);
                _6477_recursiveGen = _out2577;
                _6478_recOwned = _out2578;
                _6479_recIdents = _out2579;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6477_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6475_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6476_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2580;
                DCOMP._IOwnership _out2581;
                DCOMP.COMP.FromOwnership(r, _6478_recOwned, expectedOwnership, out _out2580, out _out2581);
                r = _out2580;
                resultingOwnership = _out2581;
                readIdents = _6479_recIdents;
              }
            } else if (_source311.is_SetBuilder) {
              DAST._IType _6480___mcc_h1100 = _source311.dtor_element;
              {
                RAST._IType _6481_fromTpeGen;
                RAST._IType _out2582;
                _out2582 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6481_fromTpeGen = _out2582;
                RAST._IType _6482_toTpeGen;
                RAST._IType _out2583;
                _out2583 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6482_toTpeGen = _out2583;
                RAST._IExpr _6483_recursiveGen;
                DCOMP._IOwnership _6484_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6485_recIdents;
                RAST._IExpr _out2584;
                DCOMP._IOwnership _out2585;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2586;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2584, out _out2585, out _out2586);
                _6483_recursiveGen = _out2584;
                _6484_recOwned = _out2585;
                _6485_recIdents = _out2586;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6483_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6481_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6482_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2587;
                DCOMP._IOwnership _out2588;
                DCOMP.COMP.FromOwnership(r, _6484_recOwned, expectedOwnership, out _out2587, out _out2588);
                r = _out2587;
                resultingOwnership = _out2588;
                readIdents = _6485_recIdents;
              }
            } else if (_source311.is_MapBuilder) {
              DAST._IType _6486___mcc_h1102 = _source311.dtor_key;
              DAST._IType _6487___mcc_h1103 = _source311.dtor_value;
              {
                RAST._IType _6488_fromTpeGen;
                RAST._IType _out2589;
                _out2589 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6488_fromTpeGen = _out2589;
                RAST._IType _6489_toTpeGen;
                RAST._IType _out2590;
                _out2590 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6489_toTpeGen = _out2590;
                RAST._IExpr _6490_recursiveGen;
                DCOMP._IOwnership _6491_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6492_recIdents;
                RAST._IExpr _out2591;
                DCOMP._IOwnership _out2592;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2593;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2591, out _out2592, out _out2593);
                _6490_recursiveGen = _out2591;
                _6491_recOwned = _out2592;
                _6492_recIdents = _out2593;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6490_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6488_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6489_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2594;
                DCOMP._IOwnership _out2595;
                DCOMP.COMP.FromOwnership(r, _6491_recOwned, expectedOwnership, out _out2594, out _out2595);
                r = _out2594;
                resultingOwnership = _out2595;
                readIdents = _6492_recIdents;
              }
            } else if (_source311.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6493___mcc_h1106 = _source311.dtor_args;
              DAST._IType _6494___mcc_h1107 = _source311.dtor_result;
              {
                RAST._IType _6495_fromTpeGen;
                RAST._IType _out2596;
                _out2596 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6495_fromTpeGen = _out2596;
                RAST._IType _6496_toTpeGen;
                RAST._IType _out2597;
                _out2597 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6496_toTpeGen = _out2597;
                RAST._IExpr _6497_recursiveGen;
                DCOMP._IOwnership _6498_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6499_recIdents;
                RAST._IExpr _out2598;
                DCOMP._IOwnership _out2599;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2600;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2598, out _out2599, out _out2600);
                _6497_recursiveGen = _out2598;
                _6498_recOwned = _out2599;
                _6499_recIdents = _out2600;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6497_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6495_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6496_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2601;
                DCOMP._IOwnership _out2602;
                DCOMP.COMP.FromOwnership(r, _6498_recOwned, expectedOwnership, out _out2601, out _out2602);
                r = _out2601;
                resultingOwnership = _out2602;
                readIdents = _6499_recIdents;
              }
            } else if (_source311.is_Primitive) {
              DAST._IPrimitive _6500___mcc_h1110 = _source311.dtor_Primitive_a0;
              {
                RAST._IType _6501_fromTpeGen;
                RAST._IType _out2603;
                _out2603 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6501_fromTpeGen = _out2603;
                RAST._IType _6502_toTpeGen;
                RAST._IType _out2604;
                _out2604 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6502_toTpeGen = _out2604;
                RAST._IExpr _6503_recursiveGen;
                DCOMP._IOwnership _6504_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6505_recIdents;
                RAST._IExpr _out2605;
                DCOMP._IOwnership _out2606;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2607;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2605, out _out2606, out _out2607);
                _6503_recursiveGen = _out2605;
                _6504_recOwned = _out2606;
                _6505_recIdents = _out2607;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6503_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6501_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6502_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2608;
                DCOMP._IOwnership _out2609;
                DCOMP.COMP.FromOwnership(r, _6504_recOwned, expectedOwnership, out _out2608, out _out2609);
                r = _out2608;
                resultingOwnership = _out2609;
                readIdents = _6505_recIdents;
              }
            } else if (_source311.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6506___mcc_h1112 = _source311.dtor_Passthrough_a0;
              {
                RAST._IType _6507_fromTpeGen;
                RAST._IType _out2610;
                _out2610 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6507_fromTpeGen = _out2610;
                RAST._IType _6508_toTpeGen;
                RAST._IType _out2611;
                _out2611 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6508_toTpeGen = _out2611;
                RAST._IExpr _6509_recursiveGen;
                DCOMP._IOwnership _6510_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6511_recIdents;
                RAST._IExpr _out2612;
                DCOMP._IOwnership _out2613;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2614;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2612, out _out2613, out _out2614);
                _6509_recursiveGen = _out2612;
                _6510_recOwned = _out2613;
                _6511_recIdents = _out2614;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6509_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6507_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6508_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2615;
                DCOMP._IOwnership _out2616;
                DCOMP.COMP.FromOwnership(r, _6510_recOwned, expectedOwnership, out _out2615, out _out2616);
                r = _out2615;
                resultingOwnership = _out2616;
                readIdents = _6511_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6512___mcc_h1114 = _source311.dtor_TypeArg_a0;
              {
                RAST._IType _6513_fromTpeGen;
                RAST._IType _out2617;
                _out2617 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6513_fromTpeGen = _out2617;
                RAST._IType _6514_toTpeGen;
                RAST._IType _out2618;
                _out2618 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6514_toTpeGen = _out2618;
                RAST._IExpr _6515_recursiveGen;
                DCOMP._IOwnership _6516_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6517_recIdents;
                RAST._IExpr _out2619;
                DCOMP._IOwnership _out2620;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2621;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2619, out _out2620, out _out2621);
                _6515_recursiveGen = _out2619;
                _6516_recOwned = _out2620;
                _6517_recIdents = _out2621;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6515_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6513_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6514_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2622;
                DCOMP._IOwnership _out2623;
                DCOMP.COMP.FromOwnership(r, _6516_recOwned, expectedOwnership, out _out2622, out _out2623);
                r = _out2622;
                resultingOwnership = _out2623;
                readIdents = _6517_recIdents;
              }
            }
          } else if (_source298.is_Bool) {
            DAST._IType _source316 = _3747___mcc_h1;
            if (_source316.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6518___mcc_h1116 = _source316.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6519___mcc_h1117 = _source316.dtor_typeArgs;
              DAST._IResolvedType _6520___mcc_h1118 = _source316.dtor_resolved;
              DAST._IResolvedType _source317 = _6520___mcc_h1118;
              if (_source317.is_AllocatedDatatype) {
                DAST._IDatatypeType _6521___mcc_h1122 = _source317.dtor_datatypeType;
                {
                  RAST._IType _6522_fromTpeGen;
                  RAST._IType _out2624;
                  _out2624 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6522_fromTpeGen = _out2624;
                  RAST._IType _6523_toTpeGen;
                  RAST._IType _out2625;
                  _out2625 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6523_toTpeGen = _out2625;
                  RAST._IExpr _6524_recursiveGen;
                  DCOMP._IOwnership _6525_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6526_recIdents;
                  RAST._IExpr _out2626;
                  DCOMP._IOwnership _out2627;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2628;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2626, out _out2627, out _out2628);
                  _6524_recursiveGen = _out2626;
                  _6525_recOwned = _out2627;
                  _6526_recIdents = _out2628;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6524_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6522_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6523_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2629;
                  DCOMP._IOwnership _out2630;
                  DCOMP.COMP.FromOwnership(r, _6525_recOwned, expectedOwnership, out _out2629, out _out2630);
                  r = _out2629;
                  resultingOwnership = _out2630;
                  readIdents = _6526_recIdents;
                }
              } else if (_source317.is_Datatype) {
                DAST._IDatatypeType _6527___mcc_h1124 = _source317.dtor_datatypeType;
                {
                  RAST._IType _6528_fromTpeGen;
                  RAST._IType _out2631;
                  _out2631 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6528_fromTpeGen = _out2631;
                  RAST._IType _6529_toTpeGen;
                  RAST._IType _out2632;
                  _out2632 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6529_toTpeGen = _out2632;
                  RAST._IExpr _6530_recursiveGen;
                  DCOMP._IOwnership _6531_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6532_recIdents;
                  RAST._IExpr _out2633;
                  DCOMP._IOwnership _out2634;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2635;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2633, out _out2634, out _out2635);
                  _6530_recursiveGen = _out2633;
                  _6531_recOwned = _out2634;
                  _6532_recIdents = _out2635;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6530_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6528_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6529_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2636;
                  DCOMP._IOwnership _out2637;
                  DCOMP.COMP.FromOwnership(r, _6531_recOwned, expectedOwnership, out _out2636, out _out2637);
                  r = _out2636;
                  resultingOwnership = _out2637;
                  readIdents = _6532_recIdents;
                }
              } else if (_source317.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6533___mcc_h1126 = _source317.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6534___mcc_h1127 = _source317.dtor_attributes;
                {
                  RAST._IType _6535_fromTpeGen;
                  RAST._IType _out2638;
                  _out2638 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6535_fromTpeGen = _out2638;
                  RAST._IType _6536_toTpeGen;
                  RAST._IType _out2639;
                  _out2639 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6536_toTpeGen = _out2639;
                  RAST._IExpr _6537_recursiveGen;
                  DCOMP._IOwnership _6538_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6539_recIdents;
                  RAST._IExpr _out2640;
                  DCOMP._IOwnership _out2641;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2642;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2640, out _out2641, out _out2642);
                  _6537_recursiveGen = _out2640;
                  _6538_recOwned = _out2641;
                  _6539_recIdents = _out2642;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6537_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6535_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6536_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2643;
                  DCOMP._IOwnership _out2644;
                  DCOMP.COMP.FromOwnership(r, _6538_recOwned, expectedOwnership, out _out2643, out _out2644);
                  r = _out2643;
                  resultingOwnership = _out2644;
                  readIdents = _6539_recIdents;
                }
              } else {
                DAST._IType _6540___mcc_h1130 = _source317.dtor_baseType;
                DAST._INewtypeRange _6541___mcc_h1131 = _source317.dtor_range;
                bool _6542___mcc_h1132 = _source317.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6543___mcc_h1133 = _source317.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6544_attributes = _6543___mcc_h1133;
                bool _6545_erase = _6542___mcc_h1132;
                DAST._INewtypeRange _6546_range = _6541___mcc_h1131;
                DAST._IType _6547_b = _6540___mcc_h1130;
                {
                  Std.Wrappers._IOption<RAST._IType> _6548_nativeToType;
                  _6548_nativeToType = DCOMP.COMP.NewtypeToRustType(_6547_b, _6546_range);
                  if (object.Equals(_3741_fromTpe, _6547_b)) {
                    RAST._IExpr _6549_recursiveGen;
                    DCOMP._IOwnership _6550_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6551_recIdents;
                    RAST._IExpr _out2645;
                    DCOMP._IOwnership _out2646;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2647;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2645, out _out2646, out _out2647);
                    _6549_recursiveGen = _out2645;
                    _6550_recOwned = _out2646;
                    _6551_recIdents = _out2647;
                    readIdents = _6551_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source318 = _6548_nativeToType;
                    if (_source318.is_None) {
                      if (_6545_erase) {
                        r = _6549_recursiveGen;
                      } else {
                        RAST._IType _6552_rhsType;
                        RAST._IType _out2648;
                        _out2648 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _6552_rhsType = _out2648;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6552_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6549_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2649;
                      DCOMP._IOwnership _out2650;
                      DCOMP.COMP.FromOwnership(r, _6550_recOwned, expectedOwnership, out _out2649, out _out2650);
                      r = _out2649;
                      resultingOwnership = _out2650;
                    } else {
                      RAST._IType _6553___mcc_h2275 = _source318.dtor_value;
                      RAST._IType _6554_v = _6553___mcc_h2275;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6549_recursiveGen, RAST.Expr.create_ExprFromType(_6554_v)));
                      RAST._IExpr _out2651;
                      DCOMP._IOwnership _out2652;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2651, out _out2652);
                      r = _out2651;
                      resultingOwnership = _out2652;
                    }
                  } else {
                    if ((_6548_nativeToType).is_Some) {
                      DAST._IType _source319 = _3741_fromTpe;
                      if (_source319.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6555___mcc_h2276 = _source319.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6556___mcc_h2277 = _source319.dtor_typeArgs;
                        DAST._IResolvedType _6557___mcc_h2278 = _source319.dtor_resolved;
                        DAST._IResolvedType _source320 = _6557___mcc_h2278;
                        if (_source320.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6558___mcc_h2282 = _source320.dtor_datatypeType;
                        } else if (_source320.is_Datatype) {
                          DAST._IDatatypeType _6559___mcc_h2284 = _source320.dtor_datatypeType;
                        } else if (_source320.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6560___mcc_h2286 = _source320.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6561___mcc_h2287 = _source320.dtor_attributes;
                        } else {
                          DAST._IType _6562___mcc_h2290 = _source320.dtor_baseType;
                          DAST._INewtypeRange _6563___mcc_h2291 = _source320.dtor_range;
                          bool _6564___mcc_h2292 = _source320.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6565___mcc_h2293 = _source320.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6566_attributes0 = _6565___mcc_h2293;
                          bool _6567_erase0 = _6564___mcc_h2292;
                          DAST._INewtypeRange _6568_range0 = _6563___mcc_h2291;
                          DAST._IType _6569_b0 = _6562___mcc_h2290;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6570_nativeFromType;
                            _6570_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6569_b0, _6568_range0);
                            if ((_6570_nativeFromType).is_Some) {
                              RAST._IExpr _6571_recursiveGen;
                              DCOMP._IOwnership _6572_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6573_recIdents;
                              RAST._IExpr _out2653;
                              DCOMP._IOwnership _out2654;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2655;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2653, out _out2654, out _out2655);
                              _6571_recursiveGen = _out2653;
                              _6572_recOwned = _out2654;
                              _6573_recIdents = _out2655;
                              RAST._IExpr _out2656;
                              DCOMP._IOwnership _out2657;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6571_recursiveGen, (_6548_nativeToType).dtor_value), _6572_recOwned, expectedOwnership, out _out2656, out _out2657);
                              r = _out2656;
                              resultingOwnership = _out2657;
                              readIdents = _6573_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source319.is_Nullable) {
                        DAST._IType _6574___mcc_h2298 = _source319.dtor_Nullable_a0;
                      } else if (_source319.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6575___mcc_h2300 = _source319.dtor_Tuple_a0;
                      } else if (_source319.is_Array) {
                        DAST._IType _6576___mcc_h2302 = _source319.dtor_element;
                        BigInteger _6577___mcc_h2303 = _source319.dtor_dims;
                      } else if (_source319.is_Seq) {
                        DAST._IType _6578___mcc_h2306 = _source319.dtor_element;
                      } else if (_source319.is_Set) {
                        DAST._IType _6579___mcc_h2308 = _source319.dtor_element;
                      } else if (_source319.is_Multiset) {
                        DAST._IType _6580___mcc_h2310 = _source319.dtor_element;
                      } else if (_source319.is_Map) {
                        DAST._IType _6581___mcc_h2312 = _source319.dtor_key;
                        DAST._IType _6582___mcc_h2313 = _source319.dtor_value;
                      } else if (_source319.is_SetBuilder) {
                        DAST._IType _6583___mcc_h2316 = _source319.dtor_element;
                      } else if (_source319.is_MapBuilder) {
                        DAST._IType _6584___mcc_h2318 = _source319.dtor_key;
                        DAST._IType _6585___mcc_h2319 = _source319.dtor_value;
                      } else if (_source319.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6586___mcc_h2322 = _source319.dtor_args;
                        DAST._IType _6587___mcc_h2323 = _source319.dtor_result;
                      } else if (_source319.is_Primitive) {
                        DAST._IPrimitive _6588___mcc_h2326 = _source319.dtor_Primitive_a0;
                      } else if (_source319.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6589___mcc_h2328 = _source319.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6590___mcc_h2330 = _source319.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6591_recursiveGen;
                        DCOMP._IOwnership _6592_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6593_recIdents;
                        RAST._IExpr _out2658;
                        DCOMP._IOwnership _out2659;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2660;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2658, out _out2659, out _out2660);
                        _6591_recursiveGen = _out2658;
                        _6592_recOwned = _out2659;
                        _6593_recIdents = _out2660;
                        RAST._IExpr _out2661;
                        DCOMP._IOwnership _out2662;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6591_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6548_nativeToType).dtor_value), _6592_recOwned, expectedOwnership, out _out2661, out _out2662);
                        r = _out2661;
                        resultingOwnership = _out2662;
                        readIdents = _6593_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2663;
                    DCOMP._IOwnership _out2664;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2665;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _6547_b), _6547_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out2663, out _out2664, out _out2665);
                    r = _out2663;
                    resultingOwnership = _out2664;
                    readIdents = _out2665;
                  }
                }
              }
            } else if (_source316.is_Nullable) {
              DAST._IType _6594___mcc_h1138 = _source316.dtor_Nullable_a0;
              {
                RAST._IExpr _6595_recursiveGen;
                DCOMP._IOwnership _6596_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6597_recIdents;
                RAST._IExpr _out2666;
                DCOMP._IOwnership _out2667;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2668;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2666, out _out2667, out _out2668);
                _6595_recursiveGen = _out2666;
                _6596_recOwned = _out2667;
                _6597_recIdents = _out2668;
                r = _6595_recursiveGen;
                if (object.Equals(_6596_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2669;
                DCOMP._IOwnership _out2670;
                DCOMP.COMP.FromOwnership(r, _6596_recOwned, expectedOwnership, out _out2669, out _out2670);
                r = _out2669;
                resultingOwnership = _out2670;
                readIdents = _6597_recIdents;
              }
            } else if (_source316.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6598___mcc_h1140 = _source316.dtor_Tuple_a0;
              {
                RAST._IType _6599_fromTpeGen;
                RAST._IType _out2671;
                _out2671 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6599_fromTpeGen = _out2671;
                RAST._IType _6600_toTpeGen;
                RAST._IType _out2672;
                _out2672 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6600_toTpeGen = _out2672;
                RAST._IExpr _6601_recursiveGen;
                DCOMP._IOwnership _6602_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6603_recIdents;
                RAST._IExpr _out2673;
                DCOMP._IOwnership _out2674;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2675;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2673, out _out2674, out _out2675);
                _6601_recursiveGen = _out2673;
                _6602_recOwned = _out2674;
                _6603_recIdents = _out2675;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6601_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6599_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6600_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2676;
                DCOMP._IOwnership _out2677;
                DCOMP.COMP.FromOwnership(r, _6602_recOwned, expectedOwnership, out _out2676, out _out2677);
                r = _out2676;
                resultingOwnership = _out2677;
                readIdents = _6603_recIdents;
              }
            } else if (_source316.is_Array) {
              DAST._IType _6604___mcc_h1142 = _source316.dtor_element;
              BigInteger _6605___mcc_h1143 = _source316.dtor_dims;
              {
                RAST._IType _6606_fromTpeGen;
                RAST._IType _out2678;
                _out2678 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6606_fromTpeGen = _out2678;
                RAST._IType _6607_toTpeGen;
                RAST._IType _out2679;
                _out2679 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6607_toTpeGen = _out2679;
                RAST._IExpr _6608_recursiveGen;
                DCOMP._IOwnership _6609_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6610_recIdents;
                RAST._IExpr _out2680;
                DCOMP._IOwnership _out2681;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2682;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2680, out _out2681, out _out2682);
                _6608_recursiveGen = _out2680;
                _6609_recOwned = _out2681;
                _6610_recIdents = _out2682;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6608_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6606_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6607_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2683;
                DCOMP._IOwnership _out2684;
                DCOMP.COMP.FromOwnership(r, _6609_recOwned, expectedOwnership, out _out2683, out _out2684);
                r = _out2683;
                resultingOwnership = _out2684;
                readIdents = _6610_recIdents;
              }
            } else if (_source316.is_Seq) {
              DAST._IType _6611___mcc_h1146 = _source316.dtor_element;
              {
                RAST._IType _6612_fromTpeGen;
                RAST._IType _out2685;
                _out2685 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6612_fromTpeGen = _out2685;
                RAST._IType _6613_toTpeGen;
                RAST._IType _out2686;
                _out2686 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6613_toTpeGen = _out2686;
                RAST._IExpr _6614_recursiveGen;
                DCOMP._IOwnership _6615_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6616_recIdents;
                RAST._IExpr _out2687;
                DCOMP._IOwnership _out2688;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2689;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2687, out _out2688, out _out2689);
                _6614_recursiveGen = _out2687;
                _6615_recOwned = _out2688;
                _6616_recIdents = _out2689;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6614_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6612_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6613_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2690;
                DCOMP._IOwnership _out2691;
                DCOMP.COMP.FromOwnership(r, _6615_recOwned, expectedOwnership, out _out2690, out _out2691);
                r = _out2690;
                resultingOwnership = _out2691;
                readIdents = _6616_recIdents;
              }
            } else if (_source316.is_Set) {
              DAST._IType _6617___mcc_h1148 = _source316.dtor_element;
              {
                RAST._IType _6618_fromTpeGen;
                RAST._IType _out2692;
                _out2692 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6618_fromTpeGen = _out2692;
                RAST._IType _6619_toTpeGen;
                RAST._IType _out2693;
                _out2693 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6619_toTpeGen = _out2693;
                RAST._IExpr _6620_recursiveGen;
                DCOMP._IOwnership _6621_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6622_recIdents;
                RAST._IExpr _out2694;
                DCOMP._IOwnership _out2695;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2696;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2694, out _out2695, out _out2696);
                _6620_recursiveGen = _out2694;
                _6621_recOwned = _out2695;
                _6622_recIdents = _out2696;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6620_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6618_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6619_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2697;
                DCOMP._IOwnership _out2698;
                DCOMP.COMP.FromOwnership(r, _6621_recOwned, expectedOwnership, out _out2697, out _out2698);
                r = _out2697;
                resultingOwnership = _out2698;
                readIdents = _6622_recIdents;
              }
            } else if (_source316.is_Multiset) {
              DAST._IType _6623___mcc_h1150 = _source316.dtor_element;
              {
                RAST._IType _6624_fromTpeGen;
                RAST._IType _out2699;
                _out2699 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6624_fromTpeGen = _out2699;
                RAST._IType _6625_toTpeGen;
                RAST._IType _out2700;
                _out2700 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6625_toTpeGen = _out2700;
                RAST._IExpr _6626_recursiveGen;
                DCOMP._IOwnership _6627_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6628_recIdents;
                RAST._IExpr _out2701;
                DCOMP._IOwnership _out2702;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2703;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2701, out _out2702, out _out2703);
                _6626_recursiveGen = _out2701;
                _6627_recOwned = _out2702;
                _6628_recIdents = _out2703;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6626_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6624_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6625_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2704;
                DCOMP._IOwnership _out2705;
                DCOMP.COMP.FromOwnership(r, _6627_recOwned, expectedOwnership, out _out2704, out _out2705);
                r = _out2704;
                resultingOwnership = _out2705;
                readIdents = _6628_recIdents;
              }
            } else if (_source316.is_Map) {
              DAST._IType _6629___mcc_h1152 = _source316.dtor_key;
              DAST._IType _6630___mcc_h1153 = _source316.dtor_value;
              {
                RAST._IType _6631_fromTpeGen;
                RAST._IType _out2706;
                _out2706 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6631_fromTpeGen = _out2706;
                RAST._IType _6632_toTpeGen;
                RAST._IType _out2707;
                _out2707 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6632_toTpeGen = _out2707;
                RAST._IExpr _6633_recursiveGen;
                DCOMP._IOwnership _6634_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6635_recIdents;
                RAST._IExpr _out2708;
                DCOMP._IOwnership _out2709;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2710;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2708, out _out2709, out _out2710);
                _6633_recursiveGen = _out2708;
                _6634_recOwned = _out2709;
                _6635_recIdents = _out2710;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6633_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6631_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6632_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2711;
                DCOMP._IOwnership _out2712;
                DCOMP.COMP.FromOwnership(r, _6634_recOwned, expectedOwnership, out _out2711, out _out2712);
                r = _out2711;
                resultingOwnership = _out2712;
                readIdents = _6635_recIdents;
              }
            } else if (_source316.is_SetBuilder) {
              DAST._IType _6636___mcc_h1156 = _source316.dtor_element;
              {
                RAST._IType _6637_fromTpeGen;
                RAST._IType _out2713;
                _out2713 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6637_fromTpeGen = _out2713;
                RAST._IType _6638_toTpeGen;
                RAST._IType _out2714;
                _out2714 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6638_toTpeGen = _out2714;
                RAST._IExpr _6639_recursiveGen;
                DCOMP._IOwnership _6640_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6641_recIdents;
                RAST._IExpr _out2715;
                DCOMP._IOwnership _out2716;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2717;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2715, out _out2716, out _out2717);
                _6639_recursiveGen = _out2715;
                _6640_recOwned = _out2716;
                _6641_recIdents = _out2717;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6639_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6637_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6638_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2718;
                DCOMP._IOwnership _out2719;
                DCOMP.COMP.FromOwnership(r, _6640_recOwned, expectedOwnership, out _out2718, out _out2719);
                r = _out2718;
                resultingOwnership = _out2719;
                readIdents = _6641_recIdents;
              }
            } else if (_source316.is_MapBuilder) {
              DAST._IType _6642___mcc_h1158 = _source316.dtor_key;
              DAST._IType _6643___mcc_h1159 = _source316.dtor_value;
              {
                RAST._IType _6644_fromTpeGen;
                RAST._IType _out2720;
                _out2720 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6644_fromTpeGen = _out2720;
                RAST._IType _6645_toTpeGen;
                RAST._IType _out2721;
                _out2721 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6645_toTpeGen = _out2721;
                RAST._IExpr _6646_recursiveGen;
                DCOMP._IOwnership _6647_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6648_recIdents;
                RAST._IExpr _out2722;
                DCOMP._IOwnership _out2723;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2724;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2722, out _out2723, out _out2724);
                _6646_recursiveGen = _out2722;
                _6647_recOwned = _out2723;
                _6648_recIdents = _out2724;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6646_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6644_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6645_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2725;
                DCOMP._IOwnership _out2726;
                DCOMP.COMP.FromOwnership(r, _6647_recOwned, expectedOwnership, out _out2725, out _out2726);
                r = _out2725;
                resultingOwnership = _out2726;
                readIdents = _6648_recIdents;
              }
            } else if (_source316.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6649___mcc_h1162 = _source316.dtor_args;
              DAST._IType _6650___mcc_h1163 = _source316.dtor_result;
              {
                RAST._IType _6651_fromTpeGen;
                RAST._IType _out2727;
                _out2727 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6651_fromTpeGen = _out2727;
                RAST._IType _6652_toTpeGen;
                RAST._IType _out2728;
                _out2728 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6652_toTpeGen = _out2728;
                RAST._IExpr _6653_recursiveGen;
                DCOMP._IOwnership _6654_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6655_recIdents;
                RAST._IExpr _out2729;
                DCOMP._IOwnership _out2730;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2731;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2729, out _out2730, out _out2731);
                _6653_recursiveGen = _out2729;
                _6654_recOwned = _out2730;
                _6655_recIdents = _out2731;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6653_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6651_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6652_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2732;
                DCOMP._IOwnership _out2733;
                DCOMP.COMP.FromOwnership(r, _6654_recOwned, expectedOwnership, out _out2732, out _out2733);
                r = _out2732;
                resultingOwnership = _out2733;
                readIdents = _6655_recIdents;
              }
            } else if (_source316.is_Primitive) {
              DAST._IPrimitive _6656___mcc_h1166 = _source316.dtor_Primitive_a0;
              {
                RAST._IType _6657_fromTpeGen;
                RAST._IType _out2734;
                _out2734 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6657_fromTpeGen = _out2734;
                RAST._IType _6658_toTpeGen;
                RAST._IType _out2735;
                _out2735 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6658_toTpeGen = _out2735;
                RAST._IExpr _6659_recursiveGen;
                DCOMP._IOwnership _6660_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6661_recIdents;
                RAST._IExpr _out2736;
                DCOMP._IOwnership _out2737;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2738;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2736, out _out2737, out _out2738);
                _6659_recursiveGen = _out2736;
                _6660_recOwned = _out2737;
                _6661_recIdents = _out2738;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6659_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6657_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6658_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2739;
                DCOMP._IOwnership _out2740;
                DCOMP.COMP.FromOwnership(r, _6660_recOwned, expectedOwnership, out _out2739, out _out2740);
                r = _out2739;
                resultingOwnership = _out2740;
                readIdents = _6661_recIdents;
              }
            } else if (_source316.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6662___mcc_h1168 = _source316.dtor_Passthrough_a0;
              {
                RAST._IType _6663_fromTpeGen;
                RAST._IType _out2741;
                _out2741 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6663_fromTpeGen = _out2741;
                RAST._IType _6664_toTpeGen;
                RAST._IType _out2742;
                _out2742 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6664_toTpeGen = _out2742;
                RAST._IExpr _6665_recursiveGen;
                DCOMP._IOwnership _6666_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6667_recIdents;
                RAST._IExpr _out2743;
                DCOMP._IOwnership _out2744;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2745;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2743, out _out2744, out _out2745);
                _6665_recursiveGen = _out2743;
                _6666_recOwned = _out2744;
                _6667_recIdents = _out2745;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6665_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6663_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6664_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2746;
                DCOMP._IOwnership _out2747;
                DCOMP.COMP.FromOwnership(r, _6666_recOwned, expectedOwnership, out _out2746, out _out2747);
                r = _out2746;
                resultingOwnership = _out2747;
                readIdents = _6667_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6668___mcc_h1170 = _source316.dtor_TypeArg_a0;
              {
                RAST._IType _6669_fromTpeGen;
                RAST._IType _out2748;
                _out2748 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6669_fromTpeGen = _out2748;
                RAST._IType _6670_toTpeGen;
                RAST._IType _out2749;
                _out2749 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6670_toTpeGen = _out2749;
                RAST._IExpr _6671_recursiveGen;
                DCOMP._IOwnership _6672_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6673_recIdents;
                RAST._IExpr _out2750;
                DCOMP._IOwnership _out2751;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2752;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2750, out _out2751, out _out2752);
                _6671_recursiveGen = _out2750;
                _6672_recOwned = _out2751;
                _6673_recIdents = _out2752;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6671_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6669_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6670_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2753;
                DCOMP._IOwnership _out2754;
                DCOMP.COMP.FromOwnership(r, _6672_recOwned, expectedOwnership, out _out2753, out _out2754);
                r = _out2753;
                resultingOwnership = _out2754;
                readIdents = _6673_recIdents;
              }
            }
          } else {
            DAST._IType _source321 = _3747___mcc_h1;
            if (_source321.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6674___mcc_h1172 = _source321.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6675___mcc_h1173 = _source321.dtor_typeArgs;
              DAST._IResolvedType _6676___mcc_h1174 = _source321.dtor_resolved;
              DAST._IResolvedType _source322 = _6676___mcc_h1174;
              if (_source322.is_AllocatedDatatype) {
                DAST._IDatatypeType _6677___mcc_h1178 = _source322.dtor_datatypeType;
                {
                  RAST._IType _6678_fromTpeGen;
                  RAST._IType _out2755;
                  _out2755 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6678_fromTpeGen = _out2755;
                  RAST._IType _6679_toTpeGen;
                  RAST._IType _out2756;
                  _out2756 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6679_toTpeGen = _out2756;
                  RAST._IExpr _6680_recursiveGen;
                  DCOMP._IOwnership _6681_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6682_recIdents;
                  RAST._IExpr _out2757;
                  DCOMP._IOwnership _out2758;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2759;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2757, out _out2758, out _out2759);
                  _6680_recursiveGen = _out2757;
                  _6681_recOwned = _out2758;
                  _6682_recIdents = _out2759;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6680_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6678_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6679_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2760;
                  DCOMP._IOwnership _out2761;
                  DCOMP.COMP.FromOwnership(r, _6681_recOwned, expectedOwnership, out _out2760, out _out2761);
                  r = _out2760;
                  resultingOwnership = _out2761;
                  readIdents = _6682_recIdents;
                }
              } else if (_source322.is_Datatype) {
                DAST._IDatatypeType _6683___mcc_h1180 = _source322.dtor_datatypeType;
                {
                  RAST._IType _6684_fromTpeGen;
                  RAST._IType _out2762;
                  _out2762 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6684_fromTpeGen = _out2762;
                  RAST._IType _6685_toTpeGen;
                  RAST._IType _out2763;
                  _out2763 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6685_toTpeGen = _out2763;
                  RAST._IExpr _6686_recursiveGen;
                  DCOMP._IOwnership _6687_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6688_recIdents;
                  RAST._IExpr _out2764;
                  DCOMP._IOwnership _out2765;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2766;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2764, out _out2765, out _out2766);
                  _6686_recursiveGen = _out2764;
                  _6687_recOwned = _out2765;
                  _6688_recIdents = _out2766;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6686_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6684_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6685_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2767;
                  DCOMP._IOwnership _out2768;
                  DCOMP.COMP.FromOwnership(r, _6687_recOwned, expectedOwnership, out _out2767, out _out2768);
                  r = _out2767;
                  resultingOwnership = _out2768;
                  readIdents = _6688_recIdents;
                }
              } else if (_source322.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6689___mcc_h1182 = _source322.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6690___mcc_h1183 = _source322.dtor_attributes;
                {
                  RAST._IType _6691_fromTpeGen;
                  RAST._IType _out2769;
                  _out2769 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6691_fromTpeGen = _out2769;
                  RAST._IType _6692_toTpeGen;
                  RAST._IType _out2770;
                  _out2770 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6692_toTpeGen = _out2770;
                  RAST._IExpr _6693_recursiveGen;
                  DCOMP._IOwnership _6694_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6695_recIdents;
                  RAST._IExpr _out2771;
                  DCOMP._IOwnership _out2772;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2773;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2771, out _out2772, out _out2773);
                  _6693_recursiveGen = _out2771;
                  _6694_recOwned = _out2772;
                  _6695_recIdents = _out2773;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6693_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6691_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6692_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2774;
                  DCOMP._IOwnership _out2775;
                  DCOMP.COMP.FromOwnership(r, _6694_recOwned, expectedOwnership, out _out2774, out _out2775);
                  r = _out2774;
                  resultingOwnership = _out2775;
                  readIdents = _6695_recIdents;
                }
              } else {
                DAST._IType _6696___mcc_h1186 = _source322.dtor_baseType;
                DAST._INewtypeRange _6697___mcc_h1187 = _source322.dtor_range;
                bool _6698___mcc_h1188 = _source322.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6699___mcc_h1189 = _source322.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6700_attributes = _6699___mcc_h1189;
                bool _6701_erase = _6698___mcc_h1188;
                DAST._INewtypeRange _6702_range = _6697___mcc_h1187;
                DAST._IType _6703_b = _6696___mcc_h1186;
                {
                  Std.Wrappers._IOption<RAST._IType> _6704_nativeToType;
                  _6704_nativeToType = DCOMP.COMP.NewtypeToRustType(_6703_b, _6702_range);
                  if (object.Equals(_3741_fromTpe, _6703_b)) {
                    RAST._IExpr _6705_recursiveGen;
                    DCOMP._IOwnership _6706_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6707_recIdents;
                    RAST._IExpr _out2776;
                    DCOMP._IOwnership _out2777;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2778;
                    DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2776, out _out2777, out _out2778);
                    _6705_recursiveGen = _out2776;
                    _6706_recOwned = _out2777;
                    _6707_recIdents = _out2778;
                    readIdents = _6707_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source323 = _6704_nativeToType;
                    if (_source323.is_None) {
                      if (_6701_erase) {
                        r = _6705_recursiveGen;
                      } else {
                        RAST._IType _6708_rhsType;
                        RAST._IType _out2779;
                        _out2779 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                        _6708_rhsType = _out2779;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6708_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6705_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2780;
                      DCOMP._IOwnership _out2781;
                      DCOMP.COMP.FromOwnership(r, _6706_recOwned, expectedOwnership, out _out2780, out _out2781);
                      r = _out2780;
                      resultingOwnership = _out2781;
                    } else {
                      RAST._IType _6709___mcc_h2332 = _source323.dtor_value;
                      RAST._IType _6710_v = _6709___mcc_h2332;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6705_recursiveGen, RAST.Expr.create_ExprFromType(_6710_v)));
                      RAST._IExpr _out2782;
                      DCOMP._IOwnership _out2783;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2782, out _out2783);
                      r = _out2782;
                      resultingOwnership = _out2783;
                    }
                  } else {
                    if ((_6704_nativeToType).is_Some) {
                      DAST._IType _source324 = _3741_fromTpe;
                      if (_source324.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6711___mcc_h2333 = _source324.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6712___mcc_h2334 = _source324.dtor_typeArgs;
                        DAST._IResolvedType _6713___mcc_h2335 = _source324.dtor_resolved;
                        DAST._IResolvedType _source325 = _6713___mcc_h2335;
                        if (_source325.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6714___mcc_h2339 = _source325.dtor_datatypeType;
                        } else if (_source325.is_Datatype) {
                          DAST._IDatatypeType _6715___mcc_h2341 = _source325.dtor_datatypeType;
                        } else if (_source325.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6716___mcc_h2343 = _source325.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6717___mcc_h2344 = _source325.dtor_attributes;
                        } else {
                          DAST._IType _6718___mcc_h2347 = _source325.dtor_baseType;
                          DAST._INewtypeRange _6719___mcc_h2348 = _source325.dtor_range;
                          bool _6720___mcc_h2349 = _source325.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6721___mcc_h2350 = _source325.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6722_attributes0 = _6721___mcc_h2350;
                          bool _6723_erase0 = _6720___mcc_h2349;
                          DAST._INewtypeRange _6724_range0 = _6719___mcc_h2348;
                          DAST._IType _6725_b0 = _6718___mcc_h2347;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6726_nativeFromType;
                            _6726_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6725_b0, _6724_range0);
                            if ((_6726_nativeFromType).is_Some) {
                              RAST._IExpr _6727_recursiveGen;
                              DCOMP._IOwnership _6728_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6729_recIdents;
                              RAST._IExpr _out2784;
                              DCOMP._IOwnership _out2785;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2786;
                              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2784, out _out2785, out _out2786);
                              _6727_recursiveGen = _out2784;
                              _6728_recOwned = _out2785;
                              _6729_recIdents = _out2786;
                              RAST._IExpr _out2787;
                              DCOMP._IOwnership _out2788;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6727_recursiveGen, (_6704_nativeToType).dtor_value), _6728_recOwned, expectedOwnership, out _out2787, out _out2788);
                              r = _out2787;
                              resultingOwnership = _out2788;
                              readIdents = _6729_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source324.is_Nullable) {
                        DAST._IType _6730___mcc_h2355 = _source324.dtor_Nullable_a0;
                      } else if (_source324.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6731___mcc_h2357 = _source324.dtor_Tuple_a0;
                      } else if (_source324.is_Array) {
                        DAST._IType _6732___mcc_h2359 = _source324.dtor_element;
                        BigInteger _6733___mcc_h2360 = _source324.dtor_dims;
                      } else if (_source324.is_Seq) {
                        DAST._IType _6734___mcc_h2363 = _source324.dtor_element;
                      } else if (_source324.is_Set) {
                        DAST._IType _6735___mcc_h2365 = _source324.dtor_element;
                      } else if (_source324.is_Multiset) {
                        DAST._IType _6736___mcc_h2367 = _source324.dtor_element;
                      } else if (_source324.is_Map) {
                        DAST._IType _6737___mcc_h2369 = _source324.dtor_key;
                        DAST._IType _6738___mcc_h2370 = _source324.dtor_value;
                      } else if (_source324.is_SetBuilder) {
                        DAST._IType _6739___mcc_h2373 = _source324.dtor_element;
                      } else if (_source324.is_MapBuilder) {
                        DAST._IType _6740___mcc_h2375 = _source324.dtor_key;
                        DAST._IType _6741___mcc_h2376 = _source324.dtor_value;
                      } else if (_source324.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6742___mcc_h2379 = _source324.dtor_args;
                        DAST._IType _6743___mcc_h2380 = _source324.dtor_result;
                      } else if (_source324.is_Primitive) {
                        DAST._IPrimitive _6744___mcc_h2383 = _source324.dtor_Primitive_a0;
                      } else if (_source324.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6745___mcc_h2385 = _source324.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6746___mcc_h2387 = _source324.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6747_recursiveGen;
                        DCOMP._IOwnership _6748_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6749_recIdents;
                        RAST._IExpr _out2789;
                        DCOMP._IOwnership _out2790;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2791;
                        DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2789, out _out2790, out _out2791);
                        _6747_recursiveGen = _out2789;
                        _6748_recOwned = _out2790;
                        _6749_recIdents = _out2791;
                        RAST._IExpr _out2792;
                        DCOMP._IOwnership _out2793;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6747_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6704_nativeToType).dtor_value), _6748_recOwned, expectedOwnership, out _out2792, out _out2793);
                        r = _out2792;
                        resultingOwnership = _out2793;
                        readIdents = _6749_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2794;
                    DCOMP._IOwnership _out2795;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2796;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _6703_b), _6703_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out2794, out _out2795, out _out2796);
                    r = _out2794;
                    resultingOwnership = _out2795;
                    readIdents = _out2796;
                  }
                }
              }
            } else if (_source321.is_Nullable) {
              DAST._IType _6750___mcc_h1194 = _source321.dtor_Nullable_a0;
              {
                RAST._IExpr _6751_recursiveGen;
                DCOMP._IOwnership _6752_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6753_recIdents;
                RAST._IExpr _out2797;
                DCOMP._IOwnership _out2798;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2799;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2797, out _out2798, out _out2799);
                _6751_recursiveGen = _out2797;
                _6752_recOwned = _out2798;
                _6753_recIdents = _out2799;
                r = _6751_recursiveGen;
                if (object.Equals(_6752_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2800;
                DCOMP._IOwnership _out2801;
                DCOMP.COMP.FromOwnership(r, _6752_recOwned, expectedOwnership, out _out2800, out _out2801);
                r = _out2800;
                resultingOwnership = _out2801;
                readIdents = _6753_recIdents;
              }
            } else if (_source321.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6754___mcc_h1196 = _source321.dtor_Tuple_a0;
              {
                RAST._IType _6755_fromTpeGen;
                RAST._IType _out2802;
                _out2802 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6755_fromTpeGen = _out2802;
                RAST._IType _6756_toTpeGen;
                RAST._IType _out2803;
                _out2803 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6756_toTpeGen = _out2803;
                RAST._IExpr _6757_recursiveGen;
                DCOMP._IOwnership _6758_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6759_recIdents;
                RAST._IExpr _out2804;
                DCOMP._IOwnership _out2805;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2806;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2804, out _out2805, out _out2806);
                _6757_recursiveGen = _out2804;
                _6758_recOwned = _out2805;
                _6759_recIdents = _out2806;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6757_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6755_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6756_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2807;
                DCOMP._IOwnership _out2808;
                DCOMP.COMP.FromOwnership(r, _6758_recOwned, expectedOwnership, out _out2807, out _out2808);
                r = _out2807;
                resultingOwnership = _out2808;
                readIdents = _6759_recIdents;
              }
            } else if (_source321.is_Array) {
              DAST._IType _6760___mcc_h1198 = _source321.dtor_element;
              BigInteger _6761___mcc_h1199 = _source321.dtor_dims;
              {
                RAST._IType _6762_fromTpeGen;
                RAST._IType _out2809;
                _out2809 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6762_fromTpeGen = _out2809;
                RAST._IType _6763_toTpeGen;
                RAST._IType _out2810;
                _out2810 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6763_toTpeGen = _out2810;
                RAST._IExpr _6764_recursiveGen;
                DCOMP._IOwnership _6765_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6766_recIdents;
                RAST._IExpr _out2811;
                DCOMP._IOwnership _out2812;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2813;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2811, out _out2812, out _out2813);
                _6764_recursiveGen = _out2811;
                _6765_recOwned = _out2812;
                _6766_recIdents = _out2813;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6764_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6762_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6763_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2814;
                DCOMP._IOwnership _out2815;
                DCOMP.COMP.FromOwnership(r, _6765_recOwned, expectedOwnership, out _out2814, out _out2815);
                r = _out2814;
                resultingOwnership = _out2815;
                readIdents = _6766_recIdents;
              }
            } else if (_source321.is_Seq) {
              DAST._IType _6767___mcc_h1202 = _source321.dtor_element;
              {
                RAST._IType _6768_fromTpeGen;
                RAST._IType _out2816;
                _out2816 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6768_fromTpeGen = _out2816;
                RAST._IType _6769_toTpeGen;
                RAST._IType _out2817;
                _out2817 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6769_toTpeGen = _out2817;
                RAST._IExpr _6770_recursiveGen;
                DCOMP._IOwnership _6771_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6772_recIdents;
                RAST._IExpr _out2818;
                DCOMP._IOwnership _out2819;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2820;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2818, out _out2819, out _out2820);
                _6770_recursiveGen = _out2818;
                _6771_recOwned = _out2819;
                _6772_recIdents = _out2820;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6770_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6768_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6769_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2821;
                DCOMP._IOwnership _out2822;
                DCOMP.COMP.FromOwnership(r, _6771_recOwned, expectedOwnership, out _out2821, out _out2822);
                r = _out2821;
                resultingOwnership = _out2822;
                readIdents = _6772_recIdents;
              }
            } else if (_source321.is_Set) {
              DAST._IType _6773___mcc_h1204 = _source321.dtor_element;
              {
                RAST._IType _6774_fromTpeGen;
                RAST._IType _out2823;
                _out2823 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6774_fromTpeGen = _out2823;
                RAST._IType _6775_toTpeGen;
                RAST._IType _out2824;
                _out2824 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6775_toTpeGen = _out2824;
                RAST._IExpr _6776_recursiveGen;
                DCOMP._IOwnership _6777_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6778_recIdents;
                RAST._IExpr _out2825;
                DCOMP._IOwnership _out2826;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2827;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2825, out _out2826, out _out2827);
                _6776_recursiveGen = _out2825;
                _6777_recOwned = _out2826;
                _6778_recIdents = _out2827;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6776_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6774_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6775_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2828;
                DCOMP._IOwnership _out2829;
                DCOMP.COMP.FromOwnership(r, _6777_recOwned, expectedOwnership, out _out2828, out _out2829);
                r = _out2828;
                resultingOwnership = _out2829;
                readIdents = _6778_recIdents;
              }
            } else if (_source321.is_Multiset) {
              DAST._IType _6779___mcc_h1206 = _source321.dtor_element;
              {
                RAST._IType _6780_fromTpeGen;
                RAST._IType _out2830;
                _out2830 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6780_fromTpeGen = _out2830;
                RAST._IType _6781_toTpeGen;
                RAST._IType _out2831;
                _out2831 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6781_toTpeGen = _out2831;
                RAST._IExpr _6782_recursiveGen;
                DCOMP._IOwnership _6783_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6784_recIdents;
                RAST._IExpr _out2832;
                DCOMP._IOwnership _out2833;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2834;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2832, out _out2833, out _out2834);
                _6782_recursiveGen = _out2832;
                _6783_recOwned = _out2833;
                _6784_recIdents = _out2834;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6782_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6780_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6781_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2835;
                DCOMP._IOwnership _out2836;
                DCOMP.COMP.FromOwnership(r, _6783_recOwned, expectedOwnership, out _out2835, out _out2836);
                r = _out2835;
                resultingOwnership = _out2836;
                readIdents = _6784_recIdents;
              }
            } else if (_source321.is_Map) {
              DAST._IType _6785___mcc_h1208 = _source321.dtor_key;
              DAST._IType _6786___mcc_h1209 = _source321.dtor_value;
              {
                RAST._IType _6787_fromTpeGen;
                RAST._IType _out2837;
                _out2837 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6787_fromTpeGen = _out2837;
                RAST._IType _6788_toTpeGen;
                RAST._IType _out2838;
                _out2838 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6788_toTpeGen = _out2838;
                RAST._IExpr _6789_recursiveGen;
                DCOMP._IOwnership _6790_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6791_recIdents;
                RAST._IExpr _out2839;
                DCOMP._IOwnership _out2840;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2841;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2839, out _out2840, out _out2841);
                _6789_recursiveGen = _out2839;
                _6790_recOwned = _out2840;
                _6791_recIdents = _out2841;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6789_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6787_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6788_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2842;
                DCOMP._IOwnership _out2843;
                DCOMP.COMP.FromOwnership(r, _6790_recOwned, expectedOwnership, out _out2842, out _out2843);
                r = _out2842;
                resultingOwnership = _out2843;
                readIdents = _6791_recIdents;
              }
            } else if (_source321.is_SetBuilder) {
              DAST._IType _6792___mcc_h1212 = _source321.dtor_element;
              {
                RAST._IType _6793_fromTpeGen;
                RAST._IType _out2844;
                _out2844 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6793_fromTpeGen = _out2844;
                RAST._IType _6794_toTpeGen;
                RAST._IType _out2845;
                _out2845 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6794_toTpeGen = _out2845;
                RAST._IExpr _6795_recursiveGen;
                DCOMP._IOwnership _6796_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6797_recIdents;
                RAST._IExpr _out2846;
                DCOMP._IOwnership _out2847;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2848;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2846, out _out2847, out _out2848);
                _6795_recursiveGen = _out2846;
                _6796_recOwned = _out2847;
                _6797_recIdents = _out2848;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6795_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6793_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6794_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2849;
                DCOMP._IOwnership _out2850;
                DCOMP.COMP.FromOwnership(r, _6796_recOwned, expectedOwnership, out _out2849, out _out2850);
                r = _out2849;
                resultingOwnership = _out2850;
                readIdents = _6797_recIdents;
              }
            } else if (_source321.is_MapBuilder) {
              DAST._IType _6798___mcc_h1214 = _source321.dtor_key;
              DAST._IType _6799___mcc_h1215 = _source321.dtor_value;
              {
                RAST._IType _6800_fromTpeGen;
                RAST._IType _out2851;
                _out2851 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6800_fromTpeGen = _out2851;
                RAST._IType _6801_toTpeGen;
                RAST._IType _out2852;
                _out2852 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6801_toTpeGen = _out2852;
                RAST._IExpr _6802_recursiveGen;
                DCOMP._IOwnership _6803_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6804_recIdents;
                RAST._IExpr _out2853;
                DCOMP._IOwnership _out2854;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2855;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2853, out _out2854, out _out2855);
                _6802_recursiveGen = _out2853;
                _6803_recOwned = _out2854;
                _6804_recIdents = _out2855;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6802_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6800_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6801_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2856;
                DCOMP._IOwnership _out2857;
                DCOMP.COMP.FromOwnership(r, _6803_recOwned, expectedOwnership, out _out2856, out _out2857);
                r = _out2856;
                resultingOwnership = _out2857;
                readIdents = _6804_recIdents;
              }
            } else if (_source321.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6805___mcc_h1218 = _source321.dtor_args;
              DAST._IType _6806___mcc_h1219 = _source321.dtor_result;
              {
                RAST._IType _6807_fromTpeGen;
                RAST._IType _out2858;
                _out2858 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6807_fromTpeGen = _out2858;
                RAST._IType _6808_toTpeGen;
                RAST._IType _out2859;
                _out2859 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6808_toTpeGen = _out2859;
                RAST._IExpr _6809_recursiveGen;
                DCOMP._IOwnership _6810_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6811_recIdents;
                RAST._IExpr _out2860;
                DCOMP._IOwnership _out2861;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2862;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2860, out _out2861, out _out2862);
                _6809_recursiveGen = _out2860;
                _6810_recOwned = _out2861;
                _6811_recIdents = _out2862;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6809_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6807_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6808_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2863;
                DCOMP._IOwnership _out2864;
                DCOMP.COMP.FromOwnership(r, _6810_recOwned, expectedOwnership, out _out2863, out _out2864);
                r = _out2863;
                resultingOwnership = _out2864;
                readIdents = _6811_recIdents;
              }
            } else if (_source321.is_Primitive) {
              DAST._IPrimitive _6812___mcc_h1222 = _source321.dtor_Primitive_a0;
              DAST._IPrimitive _source326 = _6812___mcc_h1222;
              if (_source326.is_Int) {
                {
                  RAST._IType _6813_rhsType;
                  RAST._IType _out2865;
                  _out2865 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6813_rhsType = _out2865;
                  RAST._IExpr _6814_recursiveGen;
                  DCOMP._IOwnership _6815___v105;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6816_recIdents;
                  RAST._IExpr _out2866;
                  DCOMP._IOwnership _out2867;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2868;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2866, out _out2867, out _out2868);
                  _6814_recursiveGen = _out2866;
                  _6815___v105 = _out2867;
                  _6816_recIdents = _out2868;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6814_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out2869;
                  DCOMP._IOwnership _out2870;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2869, out _out2870);
                  r = _out2869;
                  resultingOwnership = _out2870;
                  readIdents = _6816_recIdents;
                }
              } else if (_source326.is_Real) {
                {
                  RAST._IType _6817_fromTpeGen;
                  RAST._IType _out2871;
                  _out2871 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6817_fromTpeGen = _out2871;
                  RAST._IType _6818_toTpeGen;
                  RAST._IType _out2872;
                  _out2872 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6818_toTpeGen = _out2872;
                  RAST._IExpr _6819_recursiveGen;
                  DCOMP._IOwnership _6820_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6821_recIdents;
                  RAST._IExpr _out2873;
                  DCOMP._IOwnership _out2874;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2875;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2873, out _out2874, out _out2875);
                  _6819_recursiveGen = _out2873;
                  _6820_recOwned = _out2874;
                  _6821_recIdents = _out2875;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6819_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6817_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6818_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2876;
                  DCOMP._IOwnership _out2877;
                  DCOMP.COMP.FromOwnership(r, _6820_recOwned, expectedOwnership, out _out2876, out _out2877);
                  r = _out2876;
                  resultingOwnership = _out2877;
                  readIdents = _6821_recIdents;
                }
              } else if (_source326.is_String) {
                {
                  RAST._IType _6822_fromTpeGen;
                  RAST._IType _out2878;
                  _out2878 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6822_fromTpeGen = _out2878;
                  RAST._IType _6823_toTpeGen;
                  RAST._IType _out2879;
                  _out2879 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6823_toTpeGen = _out2879;
                  RAST._IExpr _6824_recursiveGen;
                  DCOMP._IOwnership _6825_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6826_recIdents;
                  RAST._IExpr _out2880;
                  DCOMP._IOwnership _out2881;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2882;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2880, out _out2881, out _out2882);
                  _6824_recursiveGen = _out2880;
                  _6825_recOwned = _out2881;
                  _6826_recIdents = _out2882;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6824_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6822_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6823_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2883;
                  DCOMP._IOwnership _out2884;
                  DCOMP.COMP.FromOwnership(r, _6825_recOwned, expectedOwnership, out _out2883, out _out2884);
                  r = _out2883;
                  resultingOwnership = _out2884;
                  readIdents = _6826_recIdents;
                }
              } else if (_source326.is_Bool) {
                {
                  RAST._IType _6827_fromTpeGen;
                  RAST._IType _out2885;
                  _out2885 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6827_fromTpeGen = _out2885;
                  RAST._IType _6828_toTpeGen;
                  RAST._IType _out2886;
                  _out2886 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6828_toTpeGen = _out2886;
                  RAST._IExpr _6829_recursiveGen;
                  DCOMP._IOwnership _6830_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6831_recIdents;
                  RAST._IExpr _out2887;
                  DCOMP._IOwnership _out2888;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2889;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2887, out _out2888, out _out2889);
                  _6829_recursiveGen = _out2887;
                  _6830_recOwned = _out2888;
                  _6831_recIdents = _out2889;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6829_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6827_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6828_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2890;
                  DCOMP._IOwnership _out2891;
                  DCOMP.COMP.FromOwnership(r, _6830_recOwned, expectedOwnership, out _out2890, out _out2891);
                  r = _out2890;
                  resultingOwnership = _out2891;
                  readIdents = _6831_recIdents;
                }
              } else {
                {
                  RAST._IType _6832_fromTpeGen;
                  RAST._IType _out2892;
                  _out2892 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                  _6832_fromTpeGen = _out2892;
                  RAST._IType _6833_toTpeGen;
                  RAST._IType _out2893;
                  _out2893 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                  _6833_toTpeGen = _out2893;
                  RAST._IExpr _6834_recursiveGen;
                  DCOMP._IOwnership _6835_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6836_recIdents;
                  RAST._IExpr _out2894;
                  DCOMP._IOwnership _out2895;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2896;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2894, out _out2895, out _out2896);
                  _6834_recursiveGen = _out2894;
                  _6835_recOwned = _out2895;
                  _6836_recIdents = _out2896;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6834_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6832_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6833_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2897;
                  DCOMP._IOwnership _out2898;
                  DCOMP.COMP.FromOwnership(r, _6835_recOwned, expectedOwnership, out _out2897, out _out2898);
                  r = _out2897;
                  resultingOwnership = _out2898;
                  readIdents = _6836_recIdents;
                }
              }
            } else if (_source321.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6837___mcc_h1224 = _source321.dtor_Passthrough_a0;
              {
                RAST._IType _6838_fromTpeGen;
                RAST._IType _out2899;
                _out2899 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6838_fromTpeGen = _out2899;
                RAST._IType _6839_toTpeGen;
                RAST._IType _out2900;
                _out2900 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6839_toTpeGen = _out2900;
                RAST._IExpr _6840_recursiveGen;
                DCOMP._IOwnership _6841_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6842_recIdents;
                RAST._IExpr _out2901;
                DCOMP._IOwnership _out2902;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2903;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2901, out _out2902, out _out2903);
                _6840_recursiveGen = _out2901;
                _6841_recOwned = _out2902;
                _6842_recIdents = _out2903;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6840_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6838_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6839_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2904;
                DCOMP._IOwnership _out2905;
                DCOMP.COMP.FromOwnership(r, _6841_recOwned, expectedOwnership, out _out2904, out _out2905);
                r = _out2904;
                resultingOwnership = _out2905;
                readIdents = _6842_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6843___mcc_h1226 = _source321.dtor_TypeArg_a0;
              {
                RAST._IType _6844_fromTpeGen;
                RAST._IType _out2906;
                _out2906 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6844_fromTpeGen = _out2906;
                RAST._IType _6845_toTpeGen;
                RAST._IType _out2907;
                _out2907 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6845_toTpeGen = _out2907;
                RAST._IExpr _6846_recursiveGen;
                DCOMP._IOwnership _6847_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6848_recIdents;
                RAST._IExpr _out2908;
                DCOMP._IOwnership _out2909;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2910;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2908, out _out2909, out _out2910);
                _6846_recursiveGen = _out2908;
                _6847_recOwned = _out2909;
                _6848_recIdents = _out2910;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6846_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6844_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6845_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2911;
                DCOMP._IOwnership _out2912;
                DCOMP.COMP.FromOwnership(r, _6847_recOwned, expectedOwnership, out _out2911, out _out2912);
                r = _out2911;
                resultingOwnership = _out2912;
                readIdents = _6848_recIdents;
              }
            }
          }
        } else if (_source214.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _6849___mcc_h1228 = _source214.dtor_Passthrough_a0;
          DAST._IType _source327 = _3747___mcc_h1;
          if (_source327.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6850___mcc_h1232 = _source327.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _6851___mcc_h1233 = _source327.dtor_typeArgs;
            DAST._IResolvedType _6852___mcc_h1234 = _source327.dtor_resolved;
            DAST._IResolvedType _source328 = _6852___mcc_h1234;
            if (_source328.is_AllocatedDatatype) {
              DAST._IDatatypeType _6853___mcc_h1238 = _source328.dtor_datatypeType;
              {
                RAST._IType _6854_fromTpeGen;
                RAST._IType _out2913;
                _out2913 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6854_fromTpeGen = _out2913;
                RAST._IType _6855_toTpeGen;
                RAST._IType _out2914;
                _out2914 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6855_toTpeGen = _out2914;
                RAST._IExpr _6856_recursiveGen;
                DCOMP._IOwnership _6857_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6858_recIdents;
                RAST._IExpr _out2915;
                DCOMP._IOwnership _out2916;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2917;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2915, out _out2916, out _out2917);
                _6856_recursiveGen = _out2915;
                _6857_recOwned = _out2916;
                _6858_recIdents = _out2917;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6856_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6854_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6855_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2918;
                DCOMP._IOwnership _out2919;
                DCOMP.COMP.FromOwnership(r, _6857_recOwned, expectedOwnership, out _out2918, out _out2919);
                r = _out2918;
                resultingOwnership = _out2919;
                readIdents = _6858_recIdents;
              }
            } else if (_source328.is_Datatype) {
              DAST._IDatatypeType _6859___mcc_h1240 = _source328.dtor_datatypeType;
              {
                RAST._IType _6860_fromTpeGen;
                RAST._IType _out2920;
                _out2920 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6860_fromTpeGen = _out2920;
                RAST._IType _6861_toTpeGen;
                RAST._IType _out2921;
                _out2921 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6861_toTpeGen = _out2921;
                RAST._IExpr _6862_recursiveGen;
                DCOMP._IOwnership _6863_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6864_recIdents;
                RAST._IExpr _out2922;
                DCOMP._IOwnership _out2923;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2924;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2922, out _out2923, out _out2924);
                _6862_recursiveGen = _out2922;
                _6863_recOwned = _out2923;
                _6864_recIdents = _out2924;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6862_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6860_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6861_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2925;
                DCOMP._IOwnership _out2926;
                DCOMP.COMP.FromOwnership(r, _6863_recOwned, expectedOwnership, out _out2925, out _out2926);
                r = _out2925;
                resultingOwnership = _out2926;
                readIdents = _6864_recIdents;
              }
            } else if (_source328.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6865___mcc_h1242 = _source328.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _6866___mcc_h1243 = _source328.dtor_attributes;
              {
                RAST._IType _6867_fromTpeGen;
                RAST._IType _out2927;
                _out2927 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6867_fromTpeGen = _out2927;
                RAST._IType _6868_toTpeGen;
                RAST._IType _out2928;
                _out2928 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6868_toTpeGen = _out2928;
                RAST._IExpr _6869_recursiveGen;
                DCOMP._IOwnership _6870_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6871_recIdents;
                RAST._IExpr _out2929;
                DCOMP._IOwnership _out2930;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2931;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2929, out _out2930, out _out2931);
                _6869_recursiveGen = _out2929;
                _6870_recOwned = _out2930;
                _6871_recIdents = _out2931;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6869_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6867_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6868_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2932;
                DCOMP._IOwnership _out2933;
                DCOMP.COMP.FromOwnership(r, _6870_recOwned, expectedOwnership, out _out2932, out _out2933);
                r = _out2932;
                resultingOwnership = _out2933;
                readIdents = _6871_recIdents;
              }
            } else {
              DAST._IType _6872___mcc_h1246 = _source328.dtor_baseType;
              DAST._INewtypeRange _6873___mcc_h1247 = _source328.dtor_range;
              bool _6874___mcc_h1248 = _source328.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _6875___mcc_h1249 = _source328.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _6876_attributes = _6875___mcc_h1249;
              bool _6877_erase = _6874___mcc_h1248;
              DAST._INewtypeRange _6878_range = _6873___mcc_h1247;
              DAST._IType _6879_b = _6872___mcc_h1246;
              {
                Std.Wrappers._IOption<RAST._IType> _6880_nativeToType;
                _6880_nativeToType = DCOMP.COMP.NewtypeToRustType(_6879_b, _6878_range);
                if (object.Equals(_3741_fromTpe, _6879_b)) {
                  RAST._IExpr _6881_recursiveGen;
                  DCOMP._IOwnership _6882_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6883_recIdents;
                  RAST._IExpr _out2934;
                  DCOMP._IOwnership _out2935;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2936;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2934, out _out2935, out _out2936);
                  _6881_recursiveGen = _out2934;
                  _6882_recOwned = _out2935;
                  _6883_recIdents = _out2936;
                  readIdents = _6883_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source329 = _6880_nativeToType;
                  if (_source329.is_None) {
                    if (_6877_erase) {
                      r = _6881_recursiveGen;
                    } else {
                      RAST._IType _6884_rhsType;
                      RAST._IType _out2937;
                      _out2937 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _6884_rhsType = _out2937;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6884_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6881_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2938;
                    DCOMP._IOwnership _out2939;
                    DCOMP.COMP.FromOwnership(r, _6882_recOwned, expectedOwnership, out _out2938, out _out2939);
                    r = _out2938;
                    resultingOwnership = _out2939;
                  } else {
                    RAST._IType _6885___mcc_h2389 = _source329.dtor_value;
                    RAST._IType _6886_v = _6885___mcc_h2389;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6881_recursiveGen, RAST.Expr.create_ExprFromType(_6886_v)));
                    RAST._IExpr _out2940;
                    DCOMP._IOwnership _out2941;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2940, out _out2941);
                    r = _out2940;
                    resultingOwnership = _out2941;
                  }
                } else {
                  if ((_6880_nativeToType).is_Some) {
                    DAST._IType _source330 = _3741_fromTpe;
                    if (_source330.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6887___mcc_h2390 = _source330.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _6888___mcc_h2391 = _source330.dtor_typeArgs;
                      DAST._IResolvedType _6889___mcc_h2392 = _source330.dtor_resolved;
                      DAST._IResolvedType _source331 = _6889___mcc_h2392;
                      if (_source331.is_AllocatedDatatype) {
                        DAST._IDatatypeType _6890___mcc_h2396 = _source331.dtor_datatypeType;
                      } else if (_source331.is_Datatype) {
                        DAST._IDatatypeType _6891___mcc_h2398 = _source331.dtor_datatypeType;
                      } else if (_source331.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6892___mcc_h2400 = _source331.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _6893___mcc_h2401 = _source331.dtor_attributes;
                      } else {
                        DAST._IType _6894___mcc_h2404 = _source331.dtor_baseType;
                        DAST._INewtypeRange _6895___mcc_h2405 = _source331.dtor_range;
                        bool _6896___mcc_h2406 = _source331.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _6897___mcc_h2407 = _source331.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _6898_attributes0 = _6897___mcc_h2407;
                        bool _6899_erase0 = _6896___mcc_h2406;
                        DAST._INewtypeRange _6900_range0 = _6895___mcc_h2405;
                        DAST._IType _6901_b0 = _6894___mcc_h2404;
                        {
                          Std.Wrappers._IOption<RAST._IType> _6902_nativeFromType;
                          _6902_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6901_b0, _6900_range0);
                          if ((_6902_nativeFromType).is_Some) {
                            RAST._IExpr _6903_recursiveGen;
                            DCOMP._IOwnership _6904_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6905_recIdents;
                            RAST._IExpr _out2942;
                            DCOMP._IOwnership _out2943;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2944;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2942, out _out2943, out _out2944);
                            _6903_recursiveGen = _out2942;
                            _6904_recOwned = _out2943;
                            _6905_recIdents = _out2944;
                            RAST._IExpr _out2945;
                            DCOMP._IOwnership _out2946;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6903_recursiveGen, (_6880_nativeToType).dtor_value), _6904_recOwned, expectedOwnership, out _out2945, out _out2946);
                            r = _out2945;
                            resultingOwnership = _out2946;
                            readIdents = _6905_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source330.is_Nullable) {
                      DAST._IType _6906___mcc_h2412 = _source330.dtor_Nullable_a0;
                    } else if (_source330.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _6907___mcc_h2414 = _source330.dtor_Tuple_a0;
                    } else if (_source330.is_Array) {
                      DAST._IType _6908___mcc_h2416 = _source330.dtor_element;
                      BigInteger _6909___mcc_h2417 = _source330.dtor_dims;
                    } else if (_source330.is_Seq) {
                      DAST._IType _6910___mcc_h2420 = _source330.dtor_element;
                    } else if (_source330.is_Set) {
                      DAST._IType _6911___mcc_h2422 = _source330.dtor_element;
                    } else if (_source330.is_Multiset) {
                      DAST._IType _6912___mcc_h2424 = _source330.dtor_element;
                    } else if (_source330.is_Map) {
                      DAST._IType _6913___mcc_h2426 = _source330.dtor_key;
                      DAST._IType _6914___mcc_h2427 = _source330.dtor_value;
                    } else if (_source330.is_SetBuilder) {
                      DAST._IType _6915___mcc_h2430 = _source330.dtor_element;
                    } else if (_source330.is_MapBuilder) {
                      DAST._IType _6916___mcc_h2432 = _source330.dtor_key;
                      DAST._IType _6917___mcc_h2433 = _source330.dtor_value;
                    } else if (_source330.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _6918___mcc_h2436 = _source330.dtor_args;
                      DAST._IType _6919___mcc_h2437 = _source330.dtor_result;
                    } else if (_source330.is_Primitive) {
                      DAST._IPrimitive _6920___mcc_h2440 = _source330.dtor_Primitive_a0;
                    } else if (_source330.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _6921___mcc_h2442 = _source330.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _6922___mcc_h2444 = _source330.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _6923_recursiveGen;
                      DCOMP._IOwnership _6924_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6925_recIdents;
                      RAST._IExpr _out2947;
                      DCOMP._IOwnership _out2948;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2949;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2947, out _out2948, out _out2949);
                      _6923_recursiveGen = _out2947;
                      _6924_recOwned = _out2948;
                      _6925_recIdents = _out2949;
                      RAST._IExpr _out2950;
                      DCOMP._IOwnership _out2951;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6923_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6880_nativeToType).dtor_value), _6924_recOwned, expectedOwnership, out _out2950, out _out2951);
                      r = _out2950;
                      resultingOwnership = _out2951;
                      readIdents = _6925_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2952;
                  DCOMP._IOwnership _out2953;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2954;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _6879_b), _6879_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out2952, out _out2953, out _out2954);
                  r = _out2952;
                  resultingOwnership = _out2953;
                  readIdents = _out2954;
                }
              }
            }
          } else if (_source327.is_Nullable) {
            DAST._IType _6926___mcc_h1254 = _source327.dtor_Nullable_a0;
            {
              RAST._IExpr _6927_recursiveGen;
              DCOMP._IOwnership _6928_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6929_recIdents;
              RAST._IExpr _out2955;
              DCOMP._IOwnership _out2956;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2957;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2955, out _out2956, out _out2957);
              _6927_recursiveGen = _out2955;
              _6928_recOwned = _out2956;
              _6929_recIdents = _out2957;
              r = _6927_recursiveGen;
              if (object.Equals(_6928_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2958;
              DCOMP._IOwnership _out2959;
              DCOMP.COMP.FromOwnership(r, _6928_recOwned, expectedOwnership, out _out2958, out _out2959);
              r = _out2958;
              resultingOwnership = _out2959;
              readIdents = _6929_recIdents;
            }
          } else if (_source327.is_Tuple) {
            Dafny.ISequence<DAST._IType> _6930___mcc_h1256 = _source327.dtor_Tuple_a0;
            {
              RAST._IType _6931_fromTpeGen;
              RAST._IType _out2960;
              _out2960 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6931_fromTpeGen = _out2960;
              RAST._IType _6932_toTpeGen;
              RAST._IType _out2961;
              _out2961 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6932_toTpeGen = _out2961;
              RAST._IExpr _6933_recursiveGen;
              DCOMP._IOwnership _6934_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6935_recIdents;
              RAST._IExpr _out2962;
              DCOMP._IOwnership _out2963;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2964;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2962, out _out2963, out _out2964);
              _6933_recursiveGen = _out2962;
              _6934_recOwned = _out2963;
              _6935_recIdents = _out2964;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6933_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6931_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6932_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2965;
              DCOMP._IOwnership _out2966;
              DCOMP.COMP.FromOwnership(r, _6934_recOwned, expectedOwnership, out _out2965, out _out2966);
              r = _out2965;
              resultingOwnership = _out2966;
              readIdents = _6935_recIdents;
            }
          } else if (_source327.is_Array) {
            DAST._IType _6936___mcc_h1258 = _source327.dtor_element;
            BigInteger _6937___mcc_h1259 = _source327.dtor_dims;
            {
              RAST._IType _6938_fromTpeGen;
              RAST._IType _out2967;
              _out2967 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6938_fromTpeGen = _out2967;
              RAST._IType _6939_toTpeGen;
              RAST._IType _out2968;
              _out2968 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6939_toTpeGen = _out2968;
              RAST._IExpr _6940_recursiveGen;
              DCOMP._IOwnership _6941_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6942_recIdents;
              RAST._IExpr _out2969;
              DCOMP._IOwnership _out2970;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2971;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2969, out _out2970, out _out2971);
              _6940_recursiveGen = _out2969;
              _6941_recOwned = _out2970;
              _6942_recIdents = _out2971;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6940_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6938_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6939_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2972;
              DCOMP._IOwnership _out2973;
              DCOMP.COMP.FromOwnership(r, _6941_recOwned, expectedOwnership, out _out2972, out _out2973);
              r = _out2972;
              resultingOwnership = _out2973;
              readIdents = _6942_recIdents;
            }
          } else if (_source327.is_Seq) {
            DAST._IType _6943___mcc_h1262 = _source327.dtor_element;
            {
              RAST._IType _6944_fromTpeGen;
              RAST._IType _out2974;
              _out2974 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6944_fromTpeGen = _out2974;
              RAST._IType _6945_toTpeGen;
              RAST._IType _out2975;
              _out2975 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6945_toTpeGen = _out2975;
              RAST._IExpr _6946_recursiveGen;
              DCOMP._IOwnership _6947_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6948_recIdents;
              RAST._IExpr _out2976;
              DCOMP._IOwnership _out2977;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2978;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2976, out _out2977, out _out2978);
              _6946_recursiveGen = _out2976;
              _6947_recOwned = _out2977;
              _6948_recIdents = _out2978;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6946_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6944_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6945_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2979;
              DCOMP._IOwnership _out2980;
              DCOMP.COMP.FromOwnership(r, _6947_recOwned, expectedOwnership, out _out2979, out _out2980);
              r = _out2979;
              resultingOwnership = _out2980;
              readIdents = _6948_recIdents;
            }
          } else if (_source327.is_Set) {
            DAST._IType _6949___mcc_h1264 = _source327.dtor_element;
            {
              RAST._IType _6950_fromTpeGen;
              RAST._IType _out2981;
              _out2981 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6950_fromTpeGen = _out2981;
              RAST._IType _6951_toTpeGen;
              RAST._IType _out2982;
              _out2982 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6951_toTpeGen = _out2982;
              RAST._IExpr _6952_recursiveGen;
              DCOMP._IOwnership _6953_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6954_recIdents;
              RAST._IExpr _out2983;
              DCOMP._IOwnership _out2984;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2985;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2983, out _out2984, out _out2985);
              _6952_recursiveGen = _out2983;
              _6953_recOwned = _out2984;
              _6954_recIdents = _out2985;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6952_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6950_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6951_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2986;
              DCOMP._IOwnership _out2987;
              DCOMP.COMP.FromOwnership(r, _6953_recOwned, expectedOwnership, out _out2986, out _out2987);
              r = _out2986;
              resultingOwnership = _out2987;
              readIdents = _6954_recIdents;
            }
          } else if (_source327.is_Multiset) {
            DAST._IType _6955___mcc_h1266 = _source327.dtor_element;
            {
              RAST._IType _6956_fromTpeGen;
              RAST._IType _out2988;
              _out2988 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6956_fromTpeGen = _out2988;
              RAST._IType _6957_toTpeGen;
              RAST._IType _out2989;
              _out2989 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6957_toTpeGen = _out2989;
              RAST._IExpr _6958_recursiveGen;
              DCOMP._IOwnership _6959_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6960_recIdents;
              RAST._IExpr _out2990;
              DCOMP._IOwnership _out2991;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2992;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2990, out _out2991, out _out2992);
              _6958_recursiveGen = _out2990;
              _6959_recOwned = _out2991;
              _6960_recIdents = _out2992;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6958_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6956_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6957_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2993;
              DCOMP._IOwnership _out2994;
              DCOMP.COMP.FromOwnership(r, _6959_recOwned, expectedOwnership, out _out2993, out _out2994);
              r = _out2993;
              resultingOwnership = _out2994;
              readIdents = _6960_recIdents;
            }
          } else if (_source327.is_Map) {
            DAST._IType _6961___mcc_h1268 = _source327.dtor_key;
            DAST._IType _6962___mcc_h1269 = _source327.dtor_value;
            {
              RAST._IType _6963_fromTpeGen;
              RAST._IType _out2995;
              _out2995 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6963_fromTpeGen = _out2995;
              RAST._IType _6964_toTpeGen;
              RAST._IType _out2996;
              _out2996 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6964_toTpeGen = _out2996;
              RAST._IExpr _6965_recursiveGen;
              DCOMP._IOwnership _6966_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6967_recIdents;
              RAST._IExpr _out2997;
              DCOMP._IOwnership _out2998;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2999;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out2997, out _out2998, out _out2999);
              _6965_recursiveGen = _out2997;
              _6966_recOwned = _out2998;
              _6967_recIdents = _out2999;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6965_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6963_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6964_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3000;
              DCOMP._IOwnership _out3001;
              DCOMP.COMP.FromOwnership(r, _6966_recOwned, expectedOwnership, out _out3000, out _out3001);
              r = _out3000;
              resultingOwnership = _out3001;
              readIdents = _6967_recIdents;
            }
          } else if (_source327.is_SetBuilder) {
            DAST._IType _6968___mcc_h1272 = _source327.dtor_element;
            {
              RAST._IType _6969_fromTpeGen;
              RAST._IType _out3002;
              _out3002 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6969_fromTpeGen = _out3002;
              RAST._IType _6970_toTpeGen;
              RAST._IType _out3003;
              _out3003 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6970_toTpeGen = _out3003;
              RAST._IExpr _6971_recursiveGen;
              DCOMP._IOwnership _6972_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6973_recIdents;
              RAST._IExpr _out3004;
              DCOMP._IOwnership _out3005;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3006;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3004, out _out3005, out _out3006);
              _6971_recursiveGen = _out3004;
              _6972_recOwned = _out3005;
              _6973_recIdents = _out3006;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6971_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6969_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6970_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3007;
              DCOMP._IOwnership _out3008;
              DCOMP.COMP.FromOwnership(r, _6972_recOwned, expectedOwnership, out _out3007, out _out3008);
              r = _out3007;
              resultingOwnership = _out3008;
              readIdents = _6973_recIdents;
            }
          } else if (_source327.is_MapBuilder) {
            DAST._IType _6974___mcc_h1274 = _source327.dtor_key;
            DAST._IType _6975___mcc_h1275 = _source327.dtor_value;
            {
              RAST._IType _6976_fromTpeGen;
              RAST._IType _out3009;
              _out3009 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6976_fromTpeGen = _out3009;
              RAST._IType _6977_toTpeGen;
              RAST._IType _out3010;
              _out3010 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6977_toTpeGen = _out3010;
              RAST._IExpr _6978_recursiveGen;
              DCOMP._IOwnership _6979_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6980_recIdents;
              RAST._IExpr _out3011;
              DCOMP._IOwnership _out3012;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3013;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3011, out _out3012, out _out3013);
              _6978_recursiveGen = _out3011;
              _6979_recOwned = _out3012;
              _6980_recIdents = _out3013;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6978_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6976_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6977_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3014;
              DCOMP._IOwnership _out3015;
              DCOMP.COMP.FromOwnership(r, _6979_recOwned, expectedOwnership, out _out3014, out _out3015);
              r = _out3014;
              resultingOwnership = _out3015;
              readIdents = _6980_recIdents;
            }
          } else if (_source327.is_Arrow) {
            Dafny.ISequence<DAST._IType> _6981___mcc_h1278 = _source327.dtor_args;
            DAST._IType _6982___mcc_h1279 = _source327.dtor_result;
            {
              RAST._IType _6983_fromTpeGen;
              RAST._IType _out3016;
              _out3016 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _6983_fromTpeGen = _out3016;
              RAST._IType _6984_toTpeGen;
              RAST._IType _out3017;
              _out3017 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _6984_toTpeGen = _out3017;
              RAST._IExpr _6985_recursiveGen;
              DCOMP._IOwnership _6986_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6987_recIdents;
              RAST._IExpr _out3018;
              DCOMP._IOwnership _out3019;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3020;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3018, out _out3019, out _out3020);
              _6985_recursiveGen = _out3018;
              _6986_recOwned = _out3019;
              _6987_recIdents = _out3020;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6985_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6983_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6984_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3021;
              DCOMP._IOwnership _out3022;
              DCOMP.COMP.FromOwnership(r, _6986_recOwned, expectedOwnership, out _out3021, out _out3022);
              r = _out3021;
              resultingOwnership = _out3022;
              readIdents = _6987_recIdents;
            }
          } else if (_source327.is_Primitive) {
            DAST._IPrimitive _6988___mcc_h1282 = _source327.dtor_Primitive_a0;
            DAST._IPrimitive _source332 = _6988___mcc_h1282;
            if (_source332.is_Int) {
              {
                RAST._IType _6989_rhsType;
                RAST._IType _out3023;
                _out3023 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6989_rhsType = _out3023;
                RAST._IExpr _6990_recursiveGen;
                DCOMP._IOwnership _6991___v103;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6992_recIdents;
                RAST._IExpr _out3024;
                DCOMP._IOwnership _out3025;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3026;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3024, out _out3025, out _out3026);
                _6990_recursiveGen = _out3024;
                _6991___v103 = _out3025;
                _6992_recIdents = _out3026;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6990_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out3027;
                DCOMP._IOwnership _out3028;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3027, out _out3028);
                r = _out3027;
                resultingOwnership = _out3028;
                readIdents = _6992_recIdents;
              }
            } else if (_source332.is_Real) {
              {
                RAST._IType _6993_fromTpeGen;
                RAST._IType _out3029;
                _out3029 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6993_fromTpeGen = _out3029;
                RAST._IType _6994_toTpeGen;
                RAST._IType _out3030;
                _out3030 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6994_toTpeGen = _out3030;
                RAST._IExpr _6995_recursiveGen;
                DCOMP._IOwnership _6996_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6997_recIdents;
                RAST._IExpr _out3031;
                DCOMP._IOwnership _out3032;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3033;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3031, out _out3032, out _out3033);
                _6995_recursiveGen = _out3031;
                _6996_recOwned = _out3032;
                _6997_recIdents = _out3033;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6995_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6993_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6994_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3034;
                DCOMP._IOwnership _out3035;
                DCOMP.COMP.FromOwnership(r, _6996_recOwned, expectedOwnership, out _out3034, out _out3035);
                r = _out3034;
                resultingOwnership = _out3035;
                readIdents = _6997_recIdents;
              }
            } else if (_source332.is_String) {
              {
                RAST._IType _6998_fromTpeGen;
                RAST._IType _out3036;
                _out3036 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _6998_fromTpeGen = _out3036;
                RAST._IType _6999_toTpeGen;
                RAST._IType _out3037;
                _out3037 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _6999_toTpeGen = _out3037;
                RAST._IExpr _7000_recursiveGen;
                DCOMP._IOwnership _7001_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7002_recIdents;
                RAST._IExpr _out3038;
                DCOMP._IOwnership _out3039;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3040;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3038, out _out3039, out _out3040);
                _7000_recursiveGen = _out3038;
                _7001_recOwned = _out3039;
                _7002_recIdents = _out3040;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7000_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6998_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6999_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3041;
                DCOMP._IOwnership _out3042;
                DCOMP.COMP.FromOwnership(r, _7001_recOwned, expectedOwnership, out _out3041, out _out3042);
                r = _out3041;
                resultingOwnership = _out3042;
                readIdents = _7002_recIdents;
              }
            } else if (_source332.is_Bool) {
              {
                RAST._IType _7003_fromTpeGen;
                RAST._IType _out3043;
                _out3043 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _7003_fromTpeGen = _out3043;
                RAST._IType _7004_toTpeGen;
                RAST._IType _out3044;
                _out3044 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _7004_toTpeGen = _out3044;
                RAST._IExpr _7005_recursiveGen;
                DCOMP._IOwnership _7006_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7007_recIdents;
                RAST._IExpr _out3045;
                DCOMP._IOwnership _out3046;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3047;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3045, out _out3046, out _out3047);
                _7005_recursiveGen = _out3045;
                _7006_recOwned = _out3046;
                _7007_recIdents = _out3047;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7005_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7003_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7004_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3048;
                DCOMP._IOwnership _out3049;
                DCOMP.COMP.FromOwnership(r, _7006_recOwned, expectedOwnership, out _out3048, out _out3049);
                r = _out3048;
                resultingOwnership = _out3049;
                readIdents = _7007_recIdents;
              }
            } else {
              {
                RAST._IType _7008_fromTpeGen;
                RAST._IType _out3050;
                _out3050 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _7008_fromTpeGen = _out3050;
                RAST._IType _7009_toTpeGen;
                RAST._IType _out3051;
                _out3051 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _7009_toTpeGen = _out3051;
                RAST._IExpr _7010_recursiveGen;
                DCOMP._IOwnership _7011_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7012_recIdents;
                RAST._IExpr _out3052;
                DCOMP._IOwnership _out3053;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3054;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3052, out _out3053, out _out3054);
                _7010_recursiveGen = _out3052;
                _7011_recOwned = _out3053;
                _7012_recIdents = _out3054;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7010_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7008_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7009_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3055;
                DCOMP._IOwnership _out3056;
                DCOMP.COMP.FromOwnership(r, _7011_recOwned, expectedOwnership, out _out3055, out _out3056);
                r = _out3055;
                resultingOwnership = _out3056;
                readIdents = _7012_recIdents;
              }
            }
          } else if (_source327.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _7013___mcc_h1284 = _source327.dtor_Passthrough_a0;
            {
              RAST._IExpr _7014_recursiveGen;
              DCOMP._IOwnership _7015___v108;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7016_recIdents;
              RAST._IExpr _out3057;
              DCOMP._IOwnership _out3058;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3059;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3057, out _out3058, out _out3059);
              _7014_recursiveGen = _out3057;
              _7015___v108 = _out3058;
              _7016_recIdents = _out3059;
              RAST._IType _7017_toTpeGen;
              RAST._IType _out3060;
              _out3060 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7017_toTpeGen = _out3060;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_7014_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_7017_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out3061;
              DCOMP._IOwnership _out3062;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3061, out _out3062);
              r = _out3061;
              resultingOwnership = _out3062;
              readIdents = _7016_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _7018___mcc_h1286 = _source327.dtor_TypeArg_a0;
            {
              RAST._IType _7019_fromTpeGen;
              RAST._IType _out3063;
              _out3063 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7019_fromTpeGen = _out3063;
              RAST._IType _7020_toTpeGen;
              RAST._IType _out3064;
              _out3064 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7020_toTpeGen = _out3064;
              RAST._IExpr _7021_recursiveGen;
              DCOMP._IOwnership _7022_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7023_recIdents;
              RAST._IExpr _out3065;
              DCOMP._IOwnership _out3066;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3067;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3065, out _out3066, out _out3067);
              _7021_recursiveGen = _out3065;
              _7022_recOwned = _out3066;
              _7023_recIdents = _out3067;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7021_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7019_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7020_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3068;
              DCOMP._IOwnership _out3069;
              DCOMP.COMP.FromOwnership(r, _7022_recOwned, expectedOwnership, out _out3068, out _out3069);
              r = _out3068;
              resultingOwnership = _out3069;
              readIdents = _7023_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _7024___mcc_h1288 = _source214.dtor_TypeArg_a0;
          DAST._IType _source333 = _3747___mcc_h1;
          if (_source333.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7025___mcc_h1292 = _source333.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _7026___mcc_h1293 = _source333.dtor_typeArgs;
            DAST._IResolvedType _7027___mcc_h1294 = _source333.dtor_resolved;
            DAST._IResolvedType _source334 = _7027___mcc_h1294;
            if (_source334.is_AllocatedDatatype) {
              DAST._IDatatypeType _7028___mcc_h1298 = _source334.dtor_datatypeType;
              {
                RAST._IType _7029_fromTpeGen;
                RAST._IType _out3070;
                _out3070 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _7029_fromTpeGen = _out3070;
                RAST._IType _7030_toTpeGen;
                RAST._IType _out3071;
                _out3071 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _7030_toTpeGen = _out3071;
                RAST._IExpr _7031_recursiveGen;
                DCOMP._IOwnership _7032_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7033_recIdents;
                RAST._IExpr _out3072;
                DCOMP._IOwnership _out3073;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3074;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3072, out _out3073, out _out3074);
                _7031_recursiveGen = _out3072;
                _7032_recOwned = _out3073;
                _7033_recIdents = _out3074;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7031_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7029_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7030_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3075;
                DCOMP._IOwnership _out3076;
                DCOMP.COMP.FromOwnership(r, _7032_recOwned, expectedOwnership, out _out3075, out _out3076);
                r = _out3075;
                resultingOwnership = _out3076;
                readIdents = _7033_recIdents;
              }
            } else if (_source334.is_Datatype) {
              DAST._IDatatypeType _7034___mcc_h1300 = _source334.dtor_datatypeType;
              {
                RAST._IType _7035_fromTpeGen;
                RAST._IType _out3077;
                _out3077 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _7035_fromTpeGen = _out3077;
                RAST._IType _7036_toTpeGen;
                RAST._IType _out3078;
                _out3078 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _7036_toTpeGen = _out3078;
                RAST._IExpr _7037_recursiveGen;
                DCOMP._IOwnership _7038_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7039_recIdents;
                RAST._IExpr _out3079;
                DCOMP._IOwnership _out3080;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3081;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3079, out _out3080, out _out3081);
                _7037_recursiveGen = _out3079;
                _7038_recOwned = _out3080;
                _7039_recIdents = _out3081;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7037_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7035_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7036_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3082;
                DCOMP._IOwnership _out3083;
                DCOMP.COMP.FromOwnership(r, _7038_recOwned, expectedOwnership, out _out3082, out _out3083);
                r = _out3082;
                resultingOwnership = _out3083;
                readIdents = _7039_recIdents;
              }
            } else if (_source334.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7040___mcc_h1302 = _source334.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _7041___mcc_h1303 = _source334.dtor_attributes;
              {
                RAST._IType _7042_fromTpeGen;
                RAST._IType _out3084;
                _out3084 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
                _7042_fromTpeGen = _out3084;
                RAST._IType _7043_toTpeGen;
                RAST._IType _out3085;
                _out3085 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                _7043_toTpeGen = _out3085;
                RAST._IExpr _7044_recursiveGen;
                DCOMP._IOwnership _7045_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7046_recIdents;
                RAST._IExpr _out3086;
                DCOMP._IOwnership _out3087;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3088;
                DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3086, out _out3087, out _out3088);
                _7044_recursiveGen = _out3086;
                _7045_recOwned = _out3087;
                _7046_recIdents = _out3088;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7044_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7042_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7043_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3089;
                DCOMP._IOwnership _out3090;
                DCOMP.COMP.FromOwnership(r, _7045_recOwned, expectedOwnership, out _out3089, out _out3090);
                r = _out3089;
                resultingOwnership = _out3090;
                readIdents = _7046_recIdents;
              }
            } else {
              DAST._IType _7047___mcc_h1306 = _source334.dtor_baseType;
              DAST._INewtypeRange _7048___mcc_h1307 = _source334.dtor_range;
              bool _7049___mcc_h1308 = _source334.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _7050___mcc_h1309 = _source334.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _7051_attributes = _7050___mcc_h1309;
              bool _7052_erase = _7049___mcc_h1308;
              DAST._INewtypeRange _7053_range = _7048___mcc_h1307;
              DAST._IType _7054_b = _7047___mcc_h1306;
              {
                Std.Wrappers._IOption<RAST._IType> _7055_nativeToType;
                _7055_nativeToType = DCOMP.COMP.NewtypeToRustType(_7054_b, _7053_range);
                if (object.Equals(_3741_fromTpe, _7054_b)) {
                  RAST._IExpr _7056_recursiveGen;
                  DCOMP._IOwnership _7057_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7058_recIdents;
                  RAST._IExpr _out3091;
                  DCOMP._IOwnership _out3092;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3093;
                  DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3091, out _out3092, out _out3093);
                  _7056_recursiveGen = _out3091;
                  _7057_recOwned = _out3092;
                  _7058_recIdents = _out3093;
                  readIdents = _7058_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source335 = _7055_nativeToType;
                  if (_source335.is_None) {
                    if (_7052_erase) {
                      r = _7056_recursiveGen;
                    } else {
                      RAST._IType _7059_rhsType;
                      RAST._IType _out3094;
                      _out3094 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
                      _7059_rhsType = _out3094;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_7059_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_7056_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out3095;
                    DCOMP._IOwnership _out3096;
                    DCOMP.COMP.FromOwnership(r, _7057_recOwned, expectedOwnership, out _out3095, out _out3096);
                    r = _out3095;
                    resultingOwnership = _out3096;
                  } else {
                    RAST._IType _7060___mcc_h2446 = _source335.dtor_value;
                    RAST._IType _7061_v = _7060___mcc_h2446;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7056_recursiveGen, RAST.Expr.create_ExprFromType(_7061_v)));
                    RAST._IExpr _out3097;
                    DCOMP._IOwnership _out3098;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3097, out _out3098);
                    r = _out3097;
                    resultingOwnership = _out3098;
                  }
                } else {
                  if ((_7055_nativeToType).is_Some) {
                    DAST._IType _source336 = _3741_fromTpe;
                    if (_source336.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7062___mcc_h2447 = _source336.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _7063___mcc_h2448 = _source336.dtor_typeArgs;
                      DAST._IResolvedType _7064___mcc_h2449 = _source336.dtor_resolved;
                      DAST._IResolvedType _source337 = _7064___mcc_h2449;
                      if (_source337.is_AllocatedDatatype) {
                        DAST._IDatatypeType _7065___mcc_h2453 = _source337.dtor_datatypeType;
                      } else if (_source337.is_Datatype) {
                        DAST._IDatatypeType _7066___mcc_h2455 = _source337.dtor_datatypeType;
                      } else if (_source337.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7067___mcc_h2457 = _source337.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _7068___mcc_h2458 = _source337.dtor_attributes;
                      } else {
                        DAST._IType _7069___mcc_h2461 = _source337.dtor_baseType;
                        DAST._INewtypeRange _7070___mcc_h2462 = _source337.dtor_range;
                        bool _7071___mcc_h2463 = _source337.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _7072___mcc_h2464 = _source337.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _7073_attributes0 = _7072___mcc_h2464;
                        bool _7074_erase0 = _7071___mcc_h2463;
                        DAST._INewtypeRange _7075_range0 = _7070___mcc_h2462;
                        DAST._IType _7076_b0 = _7069___mcc_h2461;
                        {
                          Std.Wrappers._IOption<RAST._IType> _7077_nativeFromType;
                          _7077_nativeFromType = DCOMP.COMP.NewtypeToRustType(_7076_b0, _7075_range0);
                          if ((_7077_nativeFromType).is_Some) {
                            RAST._IExpr _7078_recursiveGen;
                            DCOMP._IOwnership _7079_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7080_recIdents;
                            RAST._IExpr _out3099;
                            DCOMP._IOwnership _out3100;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3101;
                            DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3099, out _out3100, out _out3101);
                            _7078_recursiveGen = _out3099;
                            _7079_recOwned = _out3100;
                            _7080_recIdents = _out3101;
                            RAST._IExpr _out3102;
                            DCOMP._IOwnership _out3103;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_7078_recursiveGen, (_7055_nativeToType).dtor_value), _7079_recOwned, expectedOwnership, out _out3102, out _out3103);
                            r = _out3102;
                            resultingOwnership = _out3103;
                            readIdents = _7080_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source336.is_Nullable) {
                      DAST._IType _7081___mcc_h2469 = _source336.dtor_Nullable_a0;
                    } else if (_source336.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _7082___mcc_h2471 = _source336.dtor_Tuple_a0;
                    } else if (_source336.is_Array) {
                      DAST._IType _7083___mcc_h2473 = _source336.dtor_element;
                      BigInteger _7084___mcc_h2474 = _source336.dtor_dims;
                    } else if (_source336.is_Seq) {
                      DAST._IType _7085___mcc_h2477 = _source336.dtor_element;
                    } else if (_source336.is_Set) {
                      DAST._IType _7086___mcc_h2479 = _source336.dtor_element;
                    } else if (_source336.is_Multiset) {
                      DAST._IType _7087___mcc_h2481 = _source336.dtor_element;
                    } else if (_source336.is_Map) {
                      DAST._IType _7088___mcc_h2483 = _source336.dtor_key;
                      DAST._IType _7089___mcc_h2484 = _source336.dtor_value;
                    } else if (_source336.is_SetBuilder) {
                      DAST._IType _7090___mcc_h2487 = _source336.dtor_element;
                    } else if (_source336.is_MapBuilder) {
                      DAST._IType _7091___mcc_h2489 = _source336.dtor_key;
                      DAST._IType _7092___mcc_h2490 = _source336.dtor_value;
                    } else if (_source336.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _7093___mcc_h2493 = _source336.dtor_args;
                      DAST._IType _7094___mcc_h2494 = _source336.dtor_result;
                    } else if (_source336.is_Primitive) {
                      DAST._IPrimitive _7095___mcc_h2497 = _source336.dtor_Primitive_a0;
                    } else if (_source336.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _7096___mcc_h2499 = _source336.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _7097___mcc_h2501 = _source336.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3741_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _7098_recursiveGen;
                      DCOMP._IOwnership _7099_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7100_recIdents;
                      RAST._IExpr _out3104;
                      DCOMP._IOwnership _out3105;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3106;
                      DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3104, out _out3105, out _out3106);
                      _7098_recursiveGen = _out3104;
                      _7099_recOwned = _out3105;
                      _7100_recIdents = _out3106;
                      RAST._IExpr _out3107;
                      DCOMP._IOwnership _out3108;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_7098_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_7055_nativeToType).dtor_value), _7099_recOwned, expectedOwnership, out _out3107, out _out3108);
                      r = _out3107;
                      resultingOwnership = _out3108;
                      readIdents = _7100_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out3109;
                  DCOMP._IOwnership _out3110;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3111;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3740_expr, _3741_fromTpe, _7054_b), _7054_b, _3742_toTpe), selfIdent, env, expectedOwnership, out _out3109, out _out3110, out _out3111);
                  r = _out3109;
                  resultingOwnership = _out3110;
                  readIdents = _out3111;
                }
              }
            }
          } else if (_source333.is_Nullable) {
            DAST._IType _7101___mcc_h1314 = _source333.dtor_Nullable_a0;
            {
              RAST._IExpr _7102_recursiveGen;
              DCOMP._IOwnership _7103_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7104_recIdents;
              RAST._IExpr _out3112;
              DCOMP._IOwnership _out3113;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3114;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3112, out _out3113, out _out3114);
              _7102_recursiveGen = _out3112;
              _7103_recOwned = _out3113;
              _7104_recIdents = _out3114;
              r = _7102_recursiveGen;
              if (object.Equals(_7103_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out3115;
              DCOMP._IOwnership _out3116;
              DCOMP.COMP.FromOwnership(r, _7103_recOwned, expectedOwnership, out _out3115, out _out3116);
              r = _out3115;
              resultingOwnership = _out3116;
              readIdents = _7104_recIdents;
            }
          } else if (_source333.is_Tuple) {
            Dafny.ISequence<DAST._IType> _7105___mcc_h1316 = _source333.dtor_Tuple_a0;
            {
              RAST._IType _7106_fromTpeGen;
              RAST._IType _out3117;
              _out3117 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7106_fromTpeGen = _out3117;
              RAST._IType _7107_toTpeGen;
              RAST._IType _out3118;
              _out3118 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7107_toTpeGen = _out3118;
              RAST._IExpr _7108_recursiveGen;
              DCOMP._IOwnership _7109_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7110_recIdents;
              RAST._IExpr _out3119;
              DCOMP._IOwnership _out3120;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3121;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3119, out _out3120, out _out3121);
              _7108_recursiveGen = _out3119;
              _7109_recOwned = _out3120;
              _7110_recIdents = _out3121;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7108_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7106_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7107_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3122;
              DCOMP._IOwnership _out3123;
              DCOMP.COMP.FromOwnership(r, _7109_recOwned, expectedOwnership, out _out3122, out _out3123);
              r = _out3122;
              resultingOwnership = _out3123;
              readIdents = _7110_recIdents;
            }
          } else if (_source333.is_Array) {
            DAST._IType _7111___mcc_h1318 = _source333.dtor_element;
            BigInteger _7112___mcc_h1319 = _source333.dtor_dims;
            {
              RAST._IType _7113_fromTpeGen;
              RAST._IType _out3124;
              _out3124 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7113_fromTpeGen = _out3124;
              RAST._IType _7114_toTpeGen;
              RAST._IType _out3125;
              _out3125 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7114_toTpeGen = _out3125;
              RAST._IExpr _7115_recursiveGen;
              DCOMP._IOwnership _7116_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7117_recIdents;
              RAST._IExpr _out3126;
              DCOMP._IOwnership _out3127;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3128;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3126, out _out3127, out _out3128);
              _7115_recursiveGen = _out3126;
              _7116_recOwned = _out3127;
              _7117_recIdents = _out3128;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7115_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7113_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7114_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3129;
              DCOMP._IOwnership _out3130;
              DCOMP.COMP.FromOwnership(r, _7116_recOwned, expectedOwnership, out _out3129, out _out3130);
              r = _out3129;
              resultingOwnership = _out3130;
              readIdents = _7117_recIdents;
            }
          } else if (_source333.is_Seq) {
            DAST._IType _7118___mcc_h1322 = _source333.dtor_element;
            {
              RAST._IType _7119_fromTpeGen;
              RAST._IType _out3131;
              _out3131 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7119_fromTpeGen = _out3131;
              RAST._IType _7120_toTpeGen;
              RAST._IType _out3132;
              _out3132 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7120_toTpeGen = _out3132;
              RAST._IExpr _7121_recursiveGen;
              DCOMP._IOwnership _7122_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7123_recIdents;
              RAST._IExpr _out3133;
              DCOMP._IOwnership _out3134;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3135;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3133, out _out3134, out _out3135);
              _7121_recursiveGen = _out3133;
              _7122_recOwned = _out3134;
              _7123_recIdents = _out3135;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7121_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7119_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7120_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3136;
              DCOMP._IOwnership _out3137;
              DCOMP.COMP.FromOwnership(r, _7122_recOwned, expectedOwnership, out _out3136, out _out3137);
              r = _out3136;
              resultingOwnership = _out3137;
              readIdents = _7123_recIdents;
            }
          } else if (_source333.is_Set) {
            DAST._IType _7124___mcc_h1324 = _source333.dtor_element;
            {
              RAST._IType _7125_fromTpeGen;
              RAST._IType _out3138;
              _out3138 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7125_fromTpeGen = _out3138;
              RAST._IType _7126_toTpeGen;
              RAST._IType _out3139;
              _out3139 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7126_toTpeGen = _out3139;
              RAST._IExpr _7127_recursiveGen;
              DCOMP._IOwnership _7128_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7129_recIdents;
              RAST._IExpr _out3140;
              DCOMP._IOwnership _out3141;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3142;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3140, out _out3141, out _out3142);
              _7127_recursiveGen = _out3140;
              _7128_recOwned = _out3141;
              _7129_recIdents = _out3142;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7127_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7125_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7126_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3143;
              DCOMP._IOwnership _out3144;
              DCOMP.COMP.FromOwnership(r, _7128_recOwned, expectedOwnership, out _out3143, out _out3144);
              r = _out3143;
              resultingOwnership = _out3144;
              readIdents = _7129_recIdents;
            }
          } else if (_source333.is_Multiset) {
            DAST._IType _7130___mcc_h1326 = _source333.dtor_element;
            {
              RAST._IType _7131_fromTpeGen;
              RAST._IType _out3145;
              _out3145 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7131_fromTpeGen = _out3145;
              RAST._IType _7132_toTpeGen;
              RAST._IType _out3146;
              _out3146 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7132_toTpeGen = _out3146;
              RAST._IExpr _7133_recursiveGen;
              DCOMP._IOwnership _7134_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7135_recIdents;
              RAST._IExpr _out3147;
              DCOMP._IOwnership _out3148;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3149;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3147, out _out3148, out _out3149);
              _7133_recursiveGen = _out3147;
              _7134_recOwned = _out3148;
              _7135_recIdents = _out3149;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7133_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7131_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7132_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3150;
              DCOMP._IOwnership _out3151;
              DCOMP.COMP.FromOwnership(r, _7134_recOwned, expectedOwnership, out _out3150, out _out3151);
              r = _out3150;
              resultingOwnership = _out3151;
              readIdents = _7135_recIdents;
            }
          } else if (_source333.is_Map) {
            DAST._IType _7136___mcc_h1328 = _source333.dtor_key;
            DAST._IType _7137___mcc_h1329 = _source333.dtor_value;
            {
              RAST._IType _7138_fromTpeGen;
              RAST._IType _out3152;
              _out3152 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7138_fromTpeGen = _out3152;
              RAST._IType _7139_toTpeGen;
              RAST._IType _out3153;
              _out3153 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7139_toTpeGen = _out3153;
              RAST._IExpr _7140_recursiveGen;
              DCOMP._IOwnership _7141_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7142_recIdents;
              RAST._IExpr _out3154;
              DCOMP._IOwnership _out3155;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3156;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3154, out _out3155, out _out3156);
              _7140_recursiveGen = _out3154;
              _7141_recOwned = _out3155;
              _7142_recIdents = _out3156;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7140_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7138_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7139_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3157;
              DCOMP._IOwnership _out3158;
              DCOMP.COMP.FromOwnership(r, _7141_recOwned, expectedOwnership, out _out3157, out _out3158);
              r = _out3157;
              resultingOwnership = _out3158;
              readIdents = _7142_recIdents;
            }
          } else if (_source333.is_SetBuilder) {
            DAST._IType _7143___mcc_h1332 = _source333.dtor_element;
            {
              RAST._IType _7144_fromTpeGen;
              RAST._IType _out3159;
              _out3159 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7144_fromTpeGen = _out3159;
              RAST._IType _7145_toTpeGen;
              RAST._IType _out3160;
              _out3160 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7145_toTpeGen = _out3160;
              RAST._IExpr _7146_recursiveGen;
              DCOMP._IOwnership _7147_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7148_recIdents;
              RAST._IExpr _out3161;
              DCOMP._IOwnership _out3162;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3163;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3161, out _out3162, out _out3163);
              _7146_recursiveGen = _out3161;
              _7147_recOwned = _out3162;
              _7148_recIdents = _out3163;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7146_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7144_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7145_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3164;
              DCOMP._IOwnership _out3165;
              DCOMP.COMP.FromOwnership(r, _7147_recOwned, expectedOwnership, out _out3164, out _out3165);
              r = _out3164;
              resultingOwnership = _out3165;
              readIdents = _7148_recIdents;
            }
          } else if (_source333.is_MapBuilder) {
            DAST._IType _7149___mcc_h1334 = _source333.dtor_key;
            DAST._IType _7150___mcc_h1335 = _source333.dtor_value;
            {
              RAST._IType _7151_fromTpeGen;
              RAST._IType _out3166;
              _out3166 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7151_fromTpeGen = _out3166;
              RAST._IType _7152_toTpeGen;
              RAST._IType _out3167;
              _out3167 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7152_toTpeGen = _out3167;
              RAST._IExpr _7153_recursiveGen;
              DCOMP._IOwnership _7154_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7155_recIdents;
              RAST._IExpr _out3168;
              DCOMP._IOwnership _out3169;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3170;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3168, out _out3169, out _out3170);
              _7153_recursiveGen = _out3168;
              _7154_recOwned = _out3169;
              _7155_recIdents = _out3170;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7153_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7151_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7152_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3171;
              DCOMP._IOwnership _out3172;
              DCOMP.COMP.FromOwnership(r, _7154_recOwned, expectedOwnership, out _out3171, out _out3172);
              r = _out3171;
              resultingOwnership = _out3172;
              readIdents = _7155_recIdents;
            }
          } else if (_source333.is_Arrow) {
            Dafny.ISequence<DAST._IType> _7156___mcc_h1338 = _source333.dtor_args;
            DAST._IType _7157___mcc_h1339 = _source333.dtor_result;
            {
              RAST._IType _7158_fromTpeGen;
              RAST._IType _out3173;
              _out3173 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7158_fromTpeGen = _out3173;
              RAST._IType _7159_toTpeGen;
              RAST._IType _out3174;
              _out3174 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7159_toTpeGen = _out3174;
              RAST._IExpr _7160_recursiveGen;
              DCOMP._IOwnership _7161_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7162_recIdents;
              RAST._IExpr _out3175;
              DCOMP._IOwnership _out3176;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3177;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3175, out _out3176, out _out3177);
              _7160_recursiveGen = _out3175;
              _7161_recOwned = _out3176;
              _7162_recIdents = _out3177;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7160_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7158_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7159_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3178;
              DCOMP._IOwnership _out3179;
              DCOMP.COMP.FromOwnership(r, _7161_recOwned, expectedOwnership, out _out3178, out _out3179);
              r = _out3178;
              resultingOwnership = _out3179;
              readIdents = _7162_recIdents;
            }
          } else if (_source333.is_Primitive) {
            DAST._IPrimitive _7163___mcc_h1342 = _source333.dtor_Primitive_a0;
            {
              RAST._IType _7164_fromTpeGen;
              RAST._IType _out3180;
              _out3180 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7164_fromTpeGen = _out3180;
              RAST._IType _7165_toTpeGen;
              RAST._IType _out3181;
              _out3181 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7165_toTpeGen = _out3181;
              RAST._IExpr _7166_recursiveGen;
              DCOMP._IOwnership _7167_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7168_recIdents;
              RAST._IExpr _out3182;
              DCOMP._IOwnership _out3183;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3184;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3182, out _out3183, out _out3184);
              _7166_recursiveGen = _out3182;
              _7167_recOwned = _out3183;
              _7168_recIdents = _out3184;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7166_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7164_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7165_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3185;
              DCOMP._IOwnership _out3186;
              DCOMP.COMP.FromOwnership(r, _7167_recOwned, expectedOwnership, out _out3185, out _out3186);
              r = _out3185;
              resultingOwnership = _out3186;
              readIdents = _7168_recIdents;
            }
          } else if (_source333.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _7169___mcc_h1344 = _source333.dtor_Passthrough_a0;
            {
              RAST._IType _7170_fromTpeGen;
              RAST._IType _out3187;
              _out3187 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7170_fromTpeGen = _out3187;
              RAST._IType _7171_toTpeGen;
              RAST._IType _out3188;
              _out3188 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7171_toTpeGen = _out3188;
              RAST._IExpr _7172_recursiveGen;
              DCOMP._IOwnership _7173_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7174_recIdents;
              RAST._IExpr _out3189;
              DCOMP._IOwnership _out3190;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3191;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3189, out _out3190, out _out3191);
              _7172_recursiveGen = _out3189;
              _7173_recOwned = _out3190;
              _7174_recIdents = _out3191;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7172_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7170_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7171_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3192;
              DCOMP._IOwnership _out3193;
              DCOMP.COMP.FromOwnership(r, _7173_recOwned, expectedOwnership, out _out3192, out _out3193);
              r = _out3192;
              resultingOwnership = _out3193;
              readIdents = _7174_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _7175___mcc_h1346 = _source333.dtor_TypeArg_a0;
            {
              RAST._IType _7176_fromTpeGen;
              RAST._IType _out3194;
              _out3194 = DCOMP.COMP.GenType(_3741_fromTpe, true, false);
              _7176_fromTpeGen = _out3194;
              RAST._IType _7177_toTpeGen;
              RAST._IType _out3195;
              _out3195 = DCOMP.COMP.GenType(_3742_toTpe, true, false);
              _7177_toTpeGen = _out3195;
              RAST._IExpr _7178_recursiveGen;
              DCOMP._IOwnership _7179_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7180_recIdents;
              RAST._IExpr _out3196;
              DCOMP._IOwnership _out3197;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3198;
              DCOMP.COMP.GenExpr(_3740_expr, selfIdent, env, expectedOwnership, out _out3196, out _out3197, out _out3198);
              _7178_recursiveGen = _out3196;
              _7179_recOwned = _out3197;
              _7180_recIdents = _out3198;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7178_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_7176_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_7177_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3199;
              DCOMP._IOwnership _out3200;
              DCOMP.COMP.FromOwnership(r, _7179_recOwned, expectedOwnership, out _out3199, out _out3200);
              r = _out3199;
              resultingOwnership = _out3200;
              readIdents = _7180_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source338 = e;
      if (_source338.is_Literal) {
        DAST._ILiteral _7181___mcc_h0 = _source338.dtor_Literal_a0;
        RAST._IExpr _out3201;
        DCOMP._IOwnership _out3202;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3203;
        DCOMP.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out3201, out _out3202, out _out3203);
        r = _out3201;
        resultingOwnership = _out3202;
        readIdents = _out3203;
      } else if (_source338.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _7182___mcc_h1 = _source338.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _7183_name = _7182___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _7184_rName;
          _7184_rName = DCOMP.__default.escapeIdent(_7183_name);
          r = RAST.Expr.create_Identifier(_7184_rName);
          Std.Wrappers._IOption<RAST._IType> _7185_tpe;
          _7185_tpe = (env).GetType(_7184_rName);
          Std.Wrappers._IOption<RAST._IType> _7186_placeboOpt;
          _7186_placeboOpt = (((_7185_tpe).is_Some) ? (((_7185_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _7187_currentlyBorrowed;
          _7187_currentlyBorrowed = (env).IsBorrowed(_7183_name);
          bool _7188_noNeedOfClone;
          _7188_noNeedOfClone = (env).HasCopySemantics(_7183_name);
          if ((_7186_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _7187_currentlyBorrowed = false;
            _7188_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
            if (!(_7188_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (_7187_currentlyBorrowed) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7183_name);
          return ;
        }
      } else if (_source338.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7189___mcc_h2 = _source338.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7190_path = _7189___mcc_h2;
        {
          RAST._IExpr _out3204;
          _out3204 = DCOMP.COMP.GenPathExpr(_7190_path);
          r = _out3204;
          RAST._IExpr _out3205;
          DCOMP._IOwnership _out3206;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3205, out _out3206);
          r = _out3205;
          resultingOwnership = _out3206;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source338.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _7191___mcc_h3 = _source338.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _7192_values = _7191___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _7193_s;
          _7193_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7194_i;
          _7194_i = BigInteger.Zero;
          while ((_7194_i) < (new BigInteger((_7192_values).Count))) {
            if ((_7194_i).Sign == 1) {
              _7193_s = Dafny.Sequence<Dafny.Rune>.Concat(_7193_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _7195_recursiveGen;
            DCOMP._IOwnership _7196___v111;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7197_recIdents;
            RAST._IExpr _out3207;
            DCOMP._IOwnership _out3208;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3209;
            DCOMP.COMP.GenExpr((_7192_values).Select(_7194_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3207, out _out3208, out _out3209);
            _7195_recursiveGen = _out3207;
            _7196___v111 = _out3208;
            _7197_recIdents = _out3209;
            _7193_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7193_s, (_7195_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7197_recIdents);
            _7194_i = (_7194_i) + (BigInteger.One);
          }
          _7193_s = Dafny.Sequence<Dafny.Rune>.Concat(_7193_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_7193_s);
          RAST._IExpr _out3210;
          DCOMP._IOwnership _out3211;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3210, out _out3211);
          r = _out3210;
          resultingOwnership = _out3211;
          return ;
        }
      } else if (_source338.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7198___mcc_h4 = _source338.dtor_path;
        Dafny.ISequence<DAST._IType> _7199___mcc_h5 = _source338.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _7200___mcc_h6 = _source338.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7201_args = _7200___mcc_h6;
        Dafny.ISequence<DAST._IType> _7202_typeArgs = _7199___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7203_path = _7198___mcc_h4;
        {
          RAST._IExpr _out3212;
          _out3212 = DCOMP.COMP.GenPathExpr(_7203_path);
          r = _out3212;
          if ((new BigInteger((_7202_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _7204_typeExprs;
            _7204_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi15 = new BigInteger((_7202_typeArgs).Count);
            for (BigInteger _7205_i = BigInteger.Zero; _7205_i < _hi15; _7205_i++) {
              RAST._IType _7206_typeExpr;
              RAST._IType _out3213;
              _out3213 = DCOMP.COMP.GenType((_7202_typeArgs).Select(_7205_i), false, false);
              _7206_typeExpr = _out3213;
              _7204_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_7204_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_7206_typeExpr));
            }
            r = (r).ApplyType(_7204_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _7207_arguments;
          _7207_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi16 = new BigInteger((_7201_args).Count);
          for (BigInteger _7208_i = BigInteger.Zero; _7208_i < _hi16; _7208_i++) {
            RAST._IExpr _7209_recursiveGen;
            DCOMP._IOwnership _7210___v112;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7211_recIdents;
            RAST._IExpr _out3214;
            DCOMP._IOwnership _out3215;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3216;
            DCOMP.COMP.GenExpr((_7201_args).Select(_7208_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3214, out _out3215, out _out3216);
            _7209_recursiveGen = _out3214;
            _7210___v112 = _out3215;
            _7211_recIdents = _out3216;
            _7207_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7207_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7209_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7211_recIdents);
          }
          r = (r).Apply(_7207_arguments);
          RAST._IExpr _out3217;
          DCOMP._IOwnership _out3218;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3217, out _out3218);
          r = _out3217;
          resultingOwnership = _out3218;
          return ;
        }
      } else if (_source338.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _7212___mcc_h7 = _source338.dtor_dims;
        DAST._IType _7213___mcc_h8 = _source338.dtor_typ;
        DAST._IType _7214_typ = _7213___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _7215_dims = _7212___mcc_h7;
        {
          BigInteger _7216_i;
          _7216_i = (new BigInteger((_7215_dims).Count)) - (BigInteger.One);
          RAST._IType _7217_genTyp;
          RAST._IType _out3219;
          _out3219 = DCOMP.COMP.GenType(_7214_typ, false, false);
          _7217_genTyp = _out3219;
          Dafny.ISequence<Dafny.Rune> _7218_s;
          _7218_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_7217_genTyp)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_7216_i).Sign != -1) {
            RAST._IExpr _7219_recursiveGen;
            DCOMP._IOwnership _7220___v113;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7221_recIdents;
            RAST._IExpr _out3220;
            DCOMP._IOwnership _out3221;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3222;
            DCOMP.COMP.GenExpr((_7215_dims).Select(_7216_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3220, out _out3221, out _out3222);
            _7219_recursiveGen = _out3220;
            _7220___v113 = _out3221;
            _7221_recIdents = _out3222;
            _7218_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _7218_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_7219_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7221_recIdents);
            _7216_i = (_7216_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_7218_s);
          RAST._IExpr _out3223;
          DCOMP._IOwnership _out3224;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3223, out _out3224);
          r = _out3223;
          resultingOwnership = _out3224;
          return ;
        }
      } else if (_source338.is_DatatypeValue) {
        DAST._IDatatypeType _7222___mcc_h9 = _source338.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _7223___mcc_h10 = _source338.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _7224___mcc_h11 = _source338.dtor_variant;
        bool _7225___mcc_h12 = _source338.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7226___mcc_h13 = _source338.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7227_values = _7226___mcc_h13;
        bool _7228_isCo = _7225___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _7229_variant = _7224___mcc_h11;
        Dafny.ISequence<DAST._IType> _7230_typeArgs = _7223___mcc_h10;
        DAST._IDatatypeType _7231_datatypeType = _7222___mcc_h9;
        {
          RAST._IExpr _out3225;
          _out3225 = DCOMP.COMP.GenPathExpr((_7231_datatypeType).dtor_path);
          r = _out3225;
          Dafny.ISequence<RAST._IType> _7232_genTypeArgs;
          _7232_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi17 = new BigInteger((_7230_typeArgs).Count);
          for (BigInteger _7233_i = BigInteger.Zero; _7233_i < _hi17; _7233_i++) {
            RAST._IType _7234_typeExpr;
            RAST._IType _out3226;
            _out3226 = DCOMP.COMP.GenType((_7230_typeArgs).Select(_7233_i), false, false);
            _7234_typeExpr = _out3226;
            _7232_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_7232_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_7234_typeExpr));
          }
          if ((new BigInteger((_7230_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_7232_genTypeArgs);
          }
          r = (r).MSel(DCOMP.__default.escapeIdent(_7229_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _7235_assignments;
          _7235_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi18 = new BigInteger((_7227_values).Count);
          for (BigInteger _7236_i = BigInteger.Zero; _7236_i < _hi18; _7236_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs52 = (_7227_values).Select(_7236_i);
            Dafny.ISequence<Dafny.Rune> _7237_name = _let_tmp_rhs52.dtor__0;
            DAST._IExpression _7238_value = _let_tmp_rhs52.dtor__1;
            if (_7228_isCo) {
              RAST._IExpr _7239_recursiveGen;
              DCOMP._IOwnership _7240___v114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7241_recIdents;
              RAST._IExpr _out3227;
              DCOMP._IOwnership _out3228;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3229;
              DCOMP.COMP.GenExpr(_7238_value, selfIdent, DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out3227, out _out3228, out _out3229);
              _7239_recursiveGen = _out3227;
              _7240___v114 = _out3228;
              _7241_recIdents = _out3229;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7241_recIdents);
              Dafny.ISequence<Dafny.Rune> _7242_allReadCloned;
              _7242_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_7241_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _7243_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_2 in (_7241_recIdents).Elements) {
                  _7243_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_2;
                  if ((_7241_recIdents).Contains(_7243_next)) {
                    goto after__ASSIGN_SUCH_THAT_2;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3099)");
              after__ASSIGN_SUCH_THAT_2: ;
                _7242_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7242_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_7243_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_7243_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _7241_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7241_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7243_next));
              }
              Dafny.ISequence<Dafny.Rune> _7244_assigned;
              _7244_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _7242_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_7239_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _7235_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7235_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_7237_name), RAST.Expr.create_RawExpr(_7244_assigned))));
            } else {
              RAST._IExpr _7245_recursiveGen;
              DCOMP._IOwnership _7246___v115;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7247_recIdents;
              RAST._IExpr _out3230;
              DCOMP._IOwnership _out3231;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3232;
              DCOMP.COMP.GenExpr(_7238_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3230, out _out3231, out _out3232);
              _7245_recursiveGen = _out3230;
              _7246___v115 = _out3231;
              _7247_recIdents = _out3232;
              _7235_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7235_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_7237_name), _7245_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7247_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _7235_assignments);
          if (DCOMP.COMP.IsRcWrapped((_7231_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out3233;
          DCOMP._IOwnership _out3234;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3233, out _out3234);
          r = _out3233;
          resultingOwnership = _out3234;
          return ;
        }
      } else if (_source338.is_Convert) {
        DAST._IExpression _7248___mcc_h14 = _source338.dtor_value;
        DAST._IType _7249___mcc_h15 = _source338.dtor_from;
        DAST._IType _7250___mcc_h16 = _source338.dtor_typ;
        {
          RAST._IExpr _out3235;
          DCOMP._IOwnership _out3236;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3237;
          DCOMP.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out3235, out _out3236, out _out3237);
          r = _out3235;
          resultingOwnership = _out3236;
          readIdents = _out3237;
        }
      } else if (_source338.is_SeqConstruct) {
        DAST._IExpression _7251___mcc_h17 = _source338.dtor_length;
        DAST._IExpression _7252___mcc_h18 = _source338.dtor_elem;
        DAST._IExpression _7253_expr = _7252___mcc_h18;
        DAST._IExpression _7254_length = _7251___mcc_h17;
        {
          RAST._IExpr _7255_recursiveGen;
          DCOMP._IOwnership _7256___v119;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7257_recIdents;
          RAST._IExpr _out3238;
          DCOMP._IOwnership _out3239;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3240;
          DCOMP.COMP.GenExpr(_7253_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3238, out _out3239, out _out3240);
          _7255_recursiveGen = _out3238;
          _7256___v119 = _out3239;
          _7257_recIdents = _out3240;
          RAST._IExpr _7258_lengthGen;
          DCOMP._IOwnership _7259___v120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7260_lengthIdents;
          RAST._IExpr _out3241;
          DCOMP._IOwnership _out3242;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3243;
          DCOMP.COMP.GenExpr(_7254_length, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3241, out _out3242, out _out3243);
          _7258_lengthGen = _out3241;
          _7259___v120 = _out3242;
          _7260_lengthIdents = _out3243;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_7255_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_7258_lengthGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7257_recIdents, _7260_lengthIdents);
          RAST._IExpr _out3244;
          DCOMP._IOwnership _out3245;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3244, out _out3245);
          r = _out3244;
          resultingOwnership = _out3245;
          return ;
        }
      } else if (_source338.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _7261___mcc_h19 = _source338.dtor_elements;
        DAST._IType _7262___mcc_h20 = _source338.dtor_typ;
        DAST._IType _7263_typ = _7262___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _7264_exprs = _7261___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _7265_genTpe;
          RAST._IType _out3246;
          _out3246 = DCOMP.COMP.GenType(_7263_typ, false, false);
          _7265_genTpe = _out3246;
          BigInteger _7266_i;
          _7266_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _7267_args;
          _7267_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_7266_i) < (new BigInteger((_7264_exprs).Count))) {
            RAST._IExpr _7268_recursiveGen;
            DCOMP._IOwnership _7269___v121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7270_recIdents;
            RAST._IExpr _out3247;
            DCOMP._IOwnership _out3248;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3249;
            DCOMP.COMP.GenExpr((_7264_exprs).Select(_7266_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3247, out _out3248, out _out3249);
            _7268_recursiveGen = _out3247;
            _7269___v121 = _out3248;
            _7270_recIdents = _out3249;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7270_recIdents);
            _7267_args = Dafny.Sequence<RAST._IExpr>.Concat(_7267_args, Dafny.Sequence<RAST._IExpr>.FromElements(_7268_recursiveGen));
            _7266_i = (_7266_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_7267_args);
          if ((new BigInteger((_7267_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_7265_genTpe));
          }
          RAST._IExpr _out3250;
          DCOMP._IOwnership _out3251;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3250, out _out3251);
          r = _out3250;
          resultingOwnership = _out3251;
          return ;
        }
      } else if (_source338.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _7271___mcc_h21 = _source338.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _7272_exprs = _7271___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _7273_generatedValues;
          _7273_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7274_i;
          _7274_i = BigInteger.Zero;
          while ((_7274_i) < (new BigInteger((_7272_exprs).Count))) {
            RAST._IExpr _7275_recursiveGen;
            DCOMP._IOwnership _7276___v122;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7277_recIdents;
            RAST._IExpr _out3252;
            DCOMP._IOwnership _out3253;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3254;
            DCOMP.COMP.GenExpr((_7272_exprs).Select(_7274_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3252, out _out3253, out _out3254);
            _7275_recursiveGen = _out3252;
            _7276___v122 = _out3253;
            _7277_recIdents = _out3254;
            _7273_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_7273_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_7275_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7277_recIdents);
            _7274_i = (_7274_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_7273_generatedValues);
          RAST._IExpr _out3255;
          DCOMP._IOwnership _out3256;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3255, out _out3256);
          r = _out3255;
          resultingOwnership = _out3256;
          return ;
        }
      } else if (_source338.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _7278___mcc_h22 = _source338.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _7279_exprs = _7278___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _7280_generatedValues;
          _7280_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7281_i;
          _7281_i = BigInteger.Zero;
          while ((_7281_i) < (new BigInteger((_7279_exprs).Count))) {
            RAST._IExpr _7282_recursiveGen;
            DCOMP._IOwnership _7283___v123;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7284_recIdents;
            RAST._IExpr _out3257;
            DCOMP._IOwnership _out3258;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3259;
            DCOMP.COMP.GenExpr((_7279_exprs).Select(_7281_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3257, out _out3258, out _out3259);
            _7282_recursiveGen = _out3257;
            _7283___v123 = _out3258;
            _7284_recIdents = _out3259;
            _7280_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_7280_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_7282_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7284_recIdents);
            _7281_i = (_7281_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_7280_generatedValues);
          RAST._IExpr _out3260;
          DCOMP._IOwnership _out3261;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3260, out _out3261);
          r = _out3260;
          resultingOwnership = _out3261;
          return ;
        }
      } else if (_source338.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7285___mcc_h23 = _source338.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7286_mapElems = _7285___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _7287_generatedValues;
          _7287_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7288_i;
          _7288_i = BigInteger.Zero;
          while ((_7288_i) < (new BigInteger((_7286_mapElems).Count))) {
            RAST._IExpr _7289_recursiveGenKey;
            DCOMP._IOwnership _7290___v125;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7291_recIdentsKey;
            RAST._IExpr _out3262;
            DCOMP._IOwnership _out3263;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3264;
            DCOMP.COMP.GenExpr(((_7286_mapElems).Select(_7288_i)).dtor__0, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3262, out _out3263, out _out3264);
            _7289_recursiveGenKey = _out3262;
            _7290___v125 = _out3263;
            _7291_recIdentsKey = _out3264;
            RAST._IExpr _7292_recursiveGenValue;
            DCOMP._IOwnership _7293___v126;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7294_recIdentsValue;
            RAST._IExpr _out3265;
            DCOMP._IOwnership _out3266;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3267;
            DCOMP.COMP.GenExpr(((_7286_mapElems).Select(_7288_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3265, out _out3266, out _out3267);
            _7292_recursiveGenValue = _out3265;
            _7293___v126 = _out3266;
            _7294_recIdentsValue = _out3267;
            _7287_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_7287_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_7289_recursiveGenKey, _7292_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7291_recIdentsKey), _7294_recIdentsValue);
            _7288_i = (_7288_i) + (BigInteger.One);
          }
          _7288_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _7295_arguments;
          _7295_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_7288_i) < (new BigInteger((_7287_generatedValues).Count))) {
            RAST._IExpr _7296_genKey;
            _7296_genKey = ((_7287_generatedValues).Select(_7288_i)).dtor__0;
            RAST._IExpr _7297_genValue;
            _7297_genValue = ((_7287_generatedValues).Select(_7288_i)).dtor__1;
            _7295_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7295_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _7296_genKey, _7297_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _7288_i = (_7288_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_7295_arguments);
          RAST._IExpr _out3268;
          DCOMP._IOwnership _out3269;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3268, out _out3269);
          r = _out3268;
          resultingOwnership = _out3269;
          return ;
        }
      } else if (_source338.is_MapBuilder) {
        DAST._IType _7298___mcc_h24 = _source338.dtor_keyType;
        DAST._IType _7299___mcc_h25 = _source338.dtor_valueType;
        DAST._IType _7300_valueType = _7299___mcc_h25;
        DAST._IType _7301_keyType = _7298___mcc_h24;
        {
          RAST._IType _7302_kType;
          RAST._IType _out3270;
          _out3270 = DCOMP.COMP.GenType(_7301_keyType, false, false);
          _7302_kType = _out3270;
          RAST._IType _7303_vType;
          RAST._IType _out3271;
          _out3271 = DCOMP.COMP.GenType(_7300_valueType, false, false);
          _7303_vType = _out3271;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_7302_kType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_7303_vType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out3272;
          DCOMP._IOwnership _out3273;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3272, out _out3273);
          r = _out3272;
          resultingOwnership = _out3273;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source338.is_SeqUpdate) {
        DAST._IExpression _7304___mcc_h26 = _source338.dtor_expr;
        DAST._IExpression _7305___mcc_h27 = _source338.dtor_indexExpr;
        DAST._IExpression _7306___mcc_h28 = _source338.dtor_value;
        DAST._IExpression _7307_value = _7306___mcc_h28;
        DAST._IExpression _7308_index = _7305___mcc_h27;
        DAST._IExpression _7309_expr = _7304___mcc_h26;
        {
          RAST._IExpr _7310_exprR;
          DCOMP._IOwnership _7311___v127;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7312_exprIdents;
          RAST._IExpr _out3274;
          DCOMP._IOwnership _out3275;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3276;
          DCOMP.COMP.GenExpr(_7309_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3274, out _out3275, out _out3276);
          _7310_exprR = _out3274;
          _7311___v127 = _out3275;
          _7312_exprIdents = _out3276;
          RAST._IExpr _7313_indexR;
          DCOMP._IOwnership _7314_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7315_indexIdents;
          RAST._IExpr _out3277;
          DCOMP._IOwnership _out3278;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3279;
          DCOMP.COMP.GenExpr(_7308_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3277, out _out3278, out _out3279);
          _7313_indexR = _out3277;
          _7314_indexOwnership = _out3278;
          _7315_indexIdents = _out3279;
          RAST._IExpr _7316_valueR;
          DCOMP._IOwnership _7317_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7318_valueIdents;
          RAST._IExpr _out3280;
          DCOMP._IOwnership _out3281;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3282;
          DCOMP.COMP.GenExpr(_7307_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3280, out _out3281, out _out3282);
          _7316_valueR = _out3280;
          _7317_valueOwnership = _out3281;
          _7318_valueIdents = _out3282;
          r = ((_7310_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7313_indexR, _7316_valueR));
          RAST._IExpr _out3283;
          DCOMP._IOwnership _out3284;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3283, out _out3284);
          r = _out3283;
          resultingOwnership = _out3284;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7312_exprIdents, _7315_indexIdents), _7318_valueIdents);
          return ;
        }
      } else if (_source338.is_MapUpdate) {
        DAST._IExpression _7319___mcc_h29 = _source338.dtor_expr;
        DAST._IExpression _7320___mcc_h30 = _source338.dtor_indexExpr;
        DAST._IExpression _7321___mcc_h31 = _source338.dtor_value;
        DAST._IExpression _7322_value = _7321___mcc_h31;
        DAST._IExpression _7323_index = _7320___mcc_h30;
        DAST._IExpression _7324_expr = _7319___mcc_h29;
        {
          RAST._IExpr _7325_exprR;
          DCOMP._IOwnership _7326___v128;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7327_exprIdents;
          RAST._IExpr _out3285;
          DCOMP._IOwnership _out3286;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3287;
          DCOMP.COMP.GenExpr(_7324_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3285, out _out3286, out _out3287);
          _7325_exprR = _out3285;
          _7326___v128 = _out3286;
          _7327_exprIdents = _out3287;
          RAST._IExpr _7328_indexR;
          DCOMP._IOwnership _7329_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7330_indexIdents;
          RAST._IExpr _out3288;
          DCOMP._IOwnership _out3289;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3290;
          DCOMP.COMP.GenExpr(_7323_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3288, out _out3289, out _out3290);
          _7328_indexR = _out3288;
          _7329_indexOwnership = _out3289;
          _7330_indexIdents = _out3290;
          RAST._IExpr _7331_valueR;
          DCOMP._IOwnership _7332_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7333_valueIdents;
          RAST._IExpr _out3291;
          DCOMP._IOwnership _out3292;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3293;
          DCOMP.COMP.GenExpr(_7322_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3291, out _out3292, out _out3293);
          _7331_valueR = _out3291;
          _7332_valueOwnership = _out3292;
          _7333_valueIdents = _out3293;
          r = ((_7325_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7328_indexR, _7331_valueR));
          RAST._IExpr _out3294;
          DCOMP._IOwnership _out3295;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3294, out _out3295);
          r = _out3294;
          resultingOwnership = _out3295;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7327_exprIdents, _7330_indexIdents), _7333_valueIdents);
          return ;
        }
      } else if (_source338.is_SetBuilder) {
        DAST._IType _7334___mcc_h32 = _source338.dtor_elemType;
        DAST._IType _7335_elemType = _7334___mcc_h32;
        {
          RAST._IType _7336_eType;
          RAST._IType _out3296;
          _out3296 = DCOMP.COMP.GenType(_7335_elemType, false, false);
          _7336_eType = _out3296;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_7336_eType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out3297;
          DCOMP._IOwnership _out3298;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3297, out _out3298);
          r = _out3297;
          resultingOwnership = _out3298;
          return ;
        }
      } else if (_source338.is_ToMultiset) {
        DAST._IExpression _7337___mcc_h33 = _source338.dtor_ToMultiset_a0;
        DAST._IExpression _7338_expr = _7337___mcc_h33;
        {
          RAST._IExpr _7339_recursiveGen;
          DCOMP._IOwnership _7340___v124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7341_recIdents;
          RAST._IExpr _out3299;
          DCOMP._IOwnership _out3300;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3301;
          DCOMP.COMP.GenExpr(_7338_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3299, out _out3300, out _out3301);
          _7339_recursiveGen = _out3299;
          _7340___v124 = _out3300;
          _7341_recIdents = _out3301;
          r = ((_7339_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _7341_recIdents;
          RAST._IExpr _out3302;
          DCOMP._IOwnership _out3303;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3302, out _out3303);
          r = _out3302;
          resultingOwnership = _out3303;
          return ;
        }
      } else if (_source338.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source339 = selfIdent;
          if (_source339.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out3304;
              DCOMP._IOwnership _out3305;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3304, out _out3305);
              r = _out3304;
              resultingOwnership = _out3305;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _7342___mcc_h273 = _source339.dtor_value;
            Dafny.ISequence<Dafny.Rune> _7343_id = _7342___mcc_h273;
            {
              r = RAST.Expr.create_Identifier(_7343_id);
              if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_7343_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_7343_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7343_id);
            }
          }
          return ;
        }
      } else if (_source338.is_Ite) {
        DAST._IExpression _7344___mcc_h34 = _source338.dtor_cond;
        DAST._IExpression _7345___mcc_h35 = _source338.dtor_thn;
        DAST._IExpression _7346___mcc_h36 = _source338.dtor_els;
        DAST._IExpression _7347_f = _7346___mcc_h36;
        DAST._IExpression _7348_t = _7345___mcc_h35;
        DAST._IExpression _7349_cond = _7344___mcc_h34;
        {
          RAST._IExpr _7350_cond;
          DCOMP._IOwnership _7351___v129;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7352_recIdentsCond;
          RAST._IExpr _out3306;
          DCOMP._IOwnership _out3307;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3308;
          DCOMP.COMP.GenExpr(_7349_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3306, out _out3307, out _out3308);
          _7350_cond = _out3306;
          _7351___v129 = _out3307;
          _7352_recIdentsCond = _out3308;
          Dafny.ISequence<Dafny.Rune> _7353_condString;
          _7353_condString = (_7350_cond)._ToString(DCOMP.__default.IND);
          RAST._IExpr _7354___v130;
          DCOMP._IOwnership _7355_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7356___v131;
          RAST._IExpr _out3309;
          DCOMP._IOwnership _out3310;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3311;
          DCOMP.COMP.GenExpr(_7348_t, selfIdent, env, expectedOwnership, out _out3309, out _out3310, out _out3311);
          _7354___v130 = _out3309;
          _7355_tHasToBeOwned = _out3310;
          _7356___v131 = _out3311;
          RAST._IExpr _7357_fExpr;
          DCOMP._IOwnership _7358_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7359_recIdentsF;
          RAST._IExpr _out3312;
          DCOMP._IOwnership _out3313;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3314;
          DCOMP.COMP.GenExpr(_7347_f, selfIdent, env, _7355_tHasToBeOwned, out _out3312, out _out3313, out _out3314);
          _7357_fExpr = _out3312;
          _7358_fOwned = _out3313;
          _7359_recIdentsF = _out3314;
          Dafny.ISequence<Dafny.Rune> _7360_fString;
          _7360_fString = (_7357_fExpr)._ToString(DCOMP.__default.IND);
          RAST._IExpr _7361_tExpr;
          DCOMP._IOwnership _7362___v132;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7363_recIdentsT;
          RAST._IExpr _out3315;
          DCOMP._IOwnership _out3316;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3317;
          DCOMP.COMP.GenExpr(_7348_t, selfIdent, env, _7358_fOwned, out _out3315, out _out3316, out _out3317);
          _7361_tExpr = _out3315;
          _7362___v132 = _out3316;
          _7363_recIdentsT = _out3317;
          Dafny.ISequence<Dafny.Rune> _7364_tString;
          _7364_tString = (_7361_tExpr)._ToString(DCOMP.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _7353_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _7364_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _7360_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out3318;
          DCOMP._IOwnership _out3319;
          DCOMP.COMP.FromOwnership(r, _7358_fOwned, expectedOwnership, out _out3318, out _out3319);
          r = _out3318;
          resultingOwnership = _out3319;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7352_recIdentsCond, _7363_recIdentsT), _7359_recIdentsF);
          return ;
        }
      } else if (_source338.is_UnOp) {
        DAST._IUnaryOp _7365___mcc_h37 = _source338.dtor_unOp;
        DAST._IExpression _7366___mcc_h38 = _source338.dtor_expr;
        DAST.Format._IUnOpFormat _7367___mcc_h39 = _source338.dtor_format1;
        DAST._IUnaryOp _source340 = _7365___mcc_h37;
        if (_source340.is_Not) {
          DAST.Format._IUnOpFormat _7368_format = _7367___mcc_h39;
          DAST._IExpression _7369_e = _7366___mcc_h38;
          {
            RAST._IExpr _7370_recursiveGen;
            DCOMP._IOwnership _7371___v133;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7372_recIdents;
            RAST._IExpr _out3320;
            DCOMP._IOwnership _out3321;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3322;
            DCOMP.COMP.GenExpr(_7369_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3320, out _out3321, out _out3322);
            _7370_recursiveGen = _out3320;
            _7371___v133 = _out3321;
            _7372_recIdents = _out3322;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _7370_recursiveGen, _7368_format);
            RAST._IExpr _out3323;
            DCOMP._IOwnership _out3324;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3323, out _out3324);
            r = _out3323;
            resultingOwnership = _out3324;
            readIdents = _7372_recIdents;
            return ;
          }
        } else if (_source340.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _7373_format = _7367___mcc_h39;
          DAST._IExpression _7374_e = _7366___mcc_h38;
          {
            RAST._IExpr _7375_recursiveGen;
            DCOMP._IOwnership _7376___v134;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7377_recIdents;
            RAST._IExpr _out3325;
            DCOMP._IOwnership _out3326;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3327;
            DCOMP.COMP.GenExpr(_7374_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3325, out _out3326, out _out3327);
            _7375_recursiveGen = _out3325;
            _7376___v134 = _out3326;
            _7377_recIdents = _out3327;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _7375_recursiveGen, _7373_format);
            RAST._IExpr _out3328;
            DCOMP._IOwnership _out3329;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3328, out _out3329);
            r = _out3328;
            resultingOwnership = _out3329;
            readIdents = _7377_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _7378_format = _7367___mcc_h39;
          DAST._IExpression _7379_e = _7366___mcc_h38;
          {
            RAST._IExpr _7380_recursiveGen;
            DCOMP._IOwnership _7381_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7382_recIdents;
            RAST._IExpr _out3330;
            DCOMP._IOwnership _out3331;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3332;
            DCOMP.COMP.GenExpr(_7379_e, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3330, out _out3331, out _out3332);
            _7380_recursiveGen = _out3330;
            _7381_recOwned = _out3331;
            _7382_recIdents = _out3332;
            r = ((_7380_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out3333;
            DCOMP._IOwnership _out3334;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3333, out _out3334);
            r = _out3333;
            resultingOwnership = _out3334;
            readIdents = _7382_recIdents;
            return ;
          }
        }
      } else if (_source338.is_BinOp) {
        DAST._IBinOp _7383___mcc_h40 = _source338.dtor_op;
        DAST._IExpression _7384___mcc_h41 = _source338.dtor_left;
        DAST._IExpression _7385___mcc_h42 = _source338.dtor_right;
        DAST.Format._IBinOpFormat _7386___mcc_h43 = _source338.dtor_format2;
        RAST._IExpr _out3335;
        DCOMP._IOwnership _out3336;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3337;
        DCOMP.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out3335, out _out3336, out _out3337);
        r = _out3335;
        resultingOwnership = _out3336;
        readIdents = _out3337;
      } else if (_source338.is_ArrayLen) {
        DAST._IExpression _7387___mcc_h44 = _source338.dtor_expr;
        BigInteger _7388___mcc_h45 = _source338.dtor_dim;
        BigInteger _7389_dim = _7388___mcc_h45;
        DAST._IExpression _7390_expr = _7387___mcc_h44;
        {
          RAST._IExpr _7391_recursiveGen;
          DCOMP._IOwnership _7392___v139;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7393_recIdents;
          RAST._IExpr _out3338;
          DCOMP._IOwnership _out3339;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3340;
          DCOMP.COMP.GenExpr(_7390_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3338, out _out3339, out _out3340);
          _7391_recursiveGen = _out3338;
          _7392___v139 = _out3339;
          _7393_recIdents = _out3340;
          if ((_7389_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_7391_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _7394_s;
            _7394_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMP.__default.IND);
            BigInteger _7395_i;
            _7395_i = BigInteger.One;
            while ((_7395_i) < (_7389_dim)) {
              _7394_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _7394_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _7395_i = (_7395_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7391_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _7394_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out3341;
          DCOMP._IOwnership _out3342;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3341, out _out3342);
          r = _out3341;
          resultingOwnership = _out3342;
          readIdents = _7393_recIdents;
          return ;
        }
      } else if (_source338.is_MapKeys) {
        DAST._IExpression _7396___mcc_h46 = _source338.dtor_expr;
        DAST._IExpression _7397_expr = _7396___mcc_h46;
        {
          RAST._IExpr _7398_recursiveGen;
          DCOMP._IOwnership _7399___v140;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7400_recIdents;
          RAST._IExpr _out3343;
          DCOMP._IOwnership _out3344;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3345;
          DCOMP.COMP.GenExpr(_7397_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3343, out _out3344, out _out3345);
          _7398_recursiveGen = _out3343;
          _7399___v140 = _out3344;
          _7400_recIdents = _out3345;
          readIdents = _7400_recIdents;
          r = ((_7398_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3346;
          DCOMP._IOwnership _out3347;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3346, out _out3347);
          r = _out3346;
          resultingOwnership = _out3347;
          return ;
        }
      } else if (_source338.is_MapValues) {
        DAST._IExpression _7401___mcc_h47 = _source338.dtor_expr;
        DAST._IExpression _7402_expr = _7401___mcc_h47;
        {
          RAST._IExpr _7403_recursiveGen;
          DCOMP._IOwnership _7404___v141;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7405_recIdents;
          RAST._IExpr _out3348;
          DCOMP._IOwnership _out3349;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3350;
          DCOMP.COMP.GenExpr(_7402_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3348, out _out3349, out _out3350);
          _7403_recursiveGen = _out3348;
          _7404___v141 = _out3349;
          _7405_recIdents = _out3350;
          readIdents = _7405_recIdents;
          r = ((_7403_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3351;
          DCOMP._IOwnership _out3352;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3351, out _out3352);
          r = _out3351;
          resultingOwnership = _out3352;
          return ;
        }
      } else if (_source338.is_Select) {
        DAST._IExpression _7406___mcc_h48 = _source338.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7407___mcc_h49 = _source338.dtor_field;
        bool _7408___mcc_h50 = _source338.dtor_isConstant;
        bool _7409___mcc_h51 = _source338.dtor_onDatatype;
        DAST._IExpression _source341 = _7406___mcc_h48;
        if (_source341.is_Literal) {
          DAST._ILiteral _7410___mcc_h52 = _source341.dtor_Literal_a0;
          bool _7411_isDatatype = _7409___mcc_h51;
          bool _7412_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7413_field = _7407___mcc_h49;
          DAST._IExpression _7414_on = _7406___mcc_h48;
          {
            if ((_7411_isDatatype) || (_7412_isConstant)) {
              RAST._IExpr _7415_onExpr;
              DCOMP._IOwnership _7416_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7417_recIdents;
              RAST._IExpr _out3353;
              DCOMP._IOwnership _out3354;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3355;
              DCOMP.COMP.GenExpr(_7414_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3353, out _out3354, out _out3355);
              _7415_onExpr = _out3353;
              _7416_onOwned = _out3354;
              _7417_recIdents = _out3355;
              r = ((_7415_onExpr).Sel(DCOMP.__default.escapeIdent(_7413_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3356;
              DCOMP._IOwnership _out3357;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3356, out _out3357);
              r = _out3356;
              resultingOwnership = _out3357;
              readIdents = _7417_recIdents;
            } else {
              RAST._IExpr _7418_onExpr;
              DCOMP._IOwnership _7419_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7420_recIdents;
              RAST._IExpr _out3358;
              DCOMP._IOwnership _out3359;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3360;
              DCOMP.COMP.GenExpr(_7414_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3358, out _out3359, out _out3360);
              _7418_onExpr = _out3358;
              _7419_onOwned = _out3359;
              _7420_recIdents = _out3360;
              r = _7418_onExpr;
              if (!object.Equals(_7418_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7413_field));
              RAST._IExpr _out3361;
              DCOMP._IOwnership _out3362;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3361, out _out3362);
              r = _out3361;
              resultingOwnership = _out3362;
              readIdents = _7420_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _7421___mcc_h54 = _source341.dtor_Ident_a0;
          bool _7422_isDatatype = _7409___mcc_h51;
          bool _7423_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7424_field = _7407___mcc_h49;
          DAST._IExpression _7425_on = _7406___mcc_h48;
          {
            if ((_7422_isDatatype) || (_7423_isConstant)) {
              RAST._IExpr _7426_onExpr;
              DCOMP._IOwnership _7427_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7428_recIdents;
              RAST._IExpr _out3363;
              DCOMP._IOwnership _out3364;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3365;
              DCOMP.COMP.GenExpr(_7425_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3363, out _out3364, out _out3365);
              _7426_onExpr = _out3363;
              _7427_onOwned = _out3364;
              _7428_recIdents = _out3365;
              r = ((_7426_onExpr).Sel(DCOMP.__default.escapeIdent(_7424_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3366;
              DCOMP._IOwnership _out3367;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3366, out _out3367);
              r = _out3366;
              resultingOwnership = _out3367;
              readIdents = _7428_recIdents;
            } else {
              RAST._IExpr _7429_onExpr;
              DCOMP._IOwnership _7430_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7431_recIdents;
              RAST._IExpr _out3368;
              DCOMP._IOwnership _out3369;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3370;
              DCOMP.COMP.GenExpr(_7425_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3368, out _out3369, out _out3370);
              _7429_onExpr = _out3368;
              _7430_onOwned = _out3369;
              _7431_recIdents = _out3370;
              r = _7429_onExpr;
              if (!object.Equals(_7429_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7424_field));
              RAST._IExpr _out3371;
              DCOMP._IOwnership _out3372;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3371, out _out3372);
              r = _out3371;
              resultingOwnership = _out3372;
              readIdents = _7431_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7432___mcc_h56 = _source341.dtor_Companion_a0;
          bool _7433_isDatatype = _7409___mcc_h51;
          bool _7434_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7435_field = _7407___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7436_c = _7432___mcc_h56;
          {
            RAST._IExpr _7437_onExpr;
            DCOMP._IOwnership _7438_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7439_recIdents;
            RAST._IExpr _out3373;
            DCOMP._IOwnership _out3374;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3375;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Companion(_7436_c), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3373, out _out3374, out _out3375);
            _7437_onExpr = _out3373;
            _7438_onOwned = _out3374;
            _7439_recIdents = _out3375;
            r = ((_7437_onExpr).MSel(DCOMP.__default.escapeIdent(_7435_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out3376;
            DCOMP._IOwnership _out3377;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3376, out _out3377);
            r = _out3376;
            resultingOwnership = _out3377;
            readIdents = _7439_recIdents;
            return ;
          }
        } else if (_source341.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _7440___mcc_h58 = _source341.dtor_Tuple_a0;
          bool _7441_isDatatype = _7409___mcc_h51;
          bool _7442_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7443_field = _7407___mcc_h49;
          DAST._IExpression _7444_on = _7406___mcc_h48;
          {
            if ((_7441_isDatatype) || (_7442_isConstant)) {
              RAST._IExpr _7445_onExpr;
              DCOMP._IOwnership _7446_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7447_recIdents;
              RAST._IExpr _out3378;
              DCOMP._IOwnership _out3379;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3380;
              DCOMP.COMP.GenExpr(_7444_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3378, out _out3379, out _out3380);
              _7445_onExpr = _out3378;
              _7446_onOwned = _out3379;
              _7447_recIdents = _out3380;
              r = ((_7445_onExpr).Sel(DCOMP.__default.escapeIdent(_7443_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3381;
              DCOMP._IOwnership _out3382;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3381, out _out3382);
              r = _out3381;
              resultingOwnership = _out3382;
              readIdents = _7447_recIdents;
            } else {
              RAST._IExpr _7448_onExpr;
              DCOMP._IOwnership _7449_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7450_recIdents;
              RAST._IExpr _out3383;
              DCOMP._IOwnership _out3384;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3385;
              DCOMP.COMP.GenExpr(_7444_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3383, out _out3384, out _out3385);
              _7448_onExpr = _out3383;
              _7449_onOwned = _out3384;
              _7450_recIdents = _out3385;
              r = _7448_onExpr;
              if (!object.Equals(_7448_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7443_field));
              RAST._IExpr _out3386;
              DCOMP._IOwnership _out3387;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3386, out _out3387);
              r = _out3386;
              resultingOwnership = _out3387;
              readIdents = _7450_recIdents;
            }
            return ;
          }
        } else if (_source341.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7451___mcc_h60 = _source341.dtor_path;
          Dafny.ISequence<DAST._IType> _7452___mcc_h61 = _source341.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7453___mcc_h62 = _source341.dtor_args;
          bool _7454_isDatatype = _7409___mcc_h51;
          bool _7455_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7456_field = _7407___mcc_h49;
          DAST._IExpression _7457_on = _7406___mcc_h48;
          {
            if ((_7454_isDatatype) || (_7455_isConstant)) {
              RAST._IExpr _7458_onExpr;
              DCOMP._IOwnership _7459_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7460_recIdents;
              RAST._IExpr _out3388;
              DCOMP._IOwnership _out3389;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3390;
              DCOMP.COMP.GenExpr(_7457_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3388, out _out3389, out _out3390);
              _7458_onExpr = _out3388;
              _7459_onOwned = _out3389;
              _7460_recIdents = _out3390;
              r = ((_7458_onExpr).Sel(DCOMP.__default.escapeIdent(_7456_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3391;
              DCOMP._IOwnership _out3392;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3391, out _out3392);
              r = _out3391;
              resultingOwnership = _out3392;
              readIdents = _7460_recIdents;
            } else {
              RAST._IExpr _7461_onExpr;
              DCOMP._IOwnership _7462_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7463_recIdents;
              RAST._IExpr _out3393;
              DCOMP._IOwnership _out3394;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3395;
              DCOMP.COMP.GenExpr(_7457_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3393, out _out3394, out _out3395);
              _7461_onExpr = _out3393;
              _7462_onOwned = _out3394;
              _7463_recIdents = _out3395;
              r = _7461_onExpr;
              if (!object.Equals(_7461_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7456_field));
              RAST._IExpr _out3396;
              DCOMP._IOwnership _out3397;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3396, out _out3397);
              r = _out3396;
              resultingOwnership = _out3397;
              readIdents = _7463_recIdents;
            }
            return ;
          }
        } else if (_source341.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _7464___mcc_h66 = _source341.dtor_dims;
          DAST._IType _7465___mcc_h67 = _source341.dtor_typ;
          bool _7466_isDatatype = _7409___mcc_h51;
          bool _7467_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7468_field = _7407___mcc_h49;
          DAST._IExpression _7469_on = _7406___mcc_h48;
          {
            if ((_7466_isDatatype) || (_7467_isConstant)) {
              RAST._IExpr _7470_onExpr;
              DCOMP._IOwnership _7471_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7472_recIdents;
              RAST._IExpr _out3398;
              DCOMP._IOwnership _out3399;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3400;
              DCOMP.COMP.GenExpr(_7469_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3398, out _out3399, out _out3400);
              _7470_onExpr = _out3398;
              _7471_onOwned = _out3399;
              _7472_recIdents = _out3400;
              r = ((_7470_onExpr).Sel(DCOMP.__default.escapeIdent(_7468_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3401;
              DCOMP._IOwnership _out3402;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3401, out _out3402);
              r = _out3401;
              resultingOwnership = _out3402;
              readIdents = _7472_recIdents;
            } else {
              RAST._IExpr _7473_onExpr;
              DCOMP._IOwnership _7474_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7475_recIdents;
              RAST._IExpr _out3403;
              DCOMP._IOwnership _out3404;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3405;
              DCOMP.COMP.GenExpr(_7469_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3403, out _out3404, out _out3405);
              _7473_onExpr = _out3403;
              _7474_onOwned = _out3404;
              _7475_recIdents = _out3405;
              r = _7473_onExpr;
              if (!object.Equals(_7473_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7468_field));
              RAST._IExpr _out3406;
              DCOMP._IOwnership _out3407;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3406, out _out3407);
              r = _out3406;
              resultingOwnership = _out3407;
              readIdents = _7475_recIdents;
            }
            return ;
          }
        } else if (_source341.is_DatatypeValue) {
          DAST._IDatatypeType _7476___mcc_h70 = _source341.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _7477___mcc_h71 = _source341.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _7478___mcc_h72 = _source341.dtor_variant;
          bool _7479___mcc_h73 = _source341.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7480___mcc_h74 = _source341.dtor_contents;
          bool _7481_isDatatype = _7409___mcc_h51;
          bool _7482_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7483_field = _7407___mcc_h49;
          DAST._IExpression _7484_on = _7406___mcc_h48;
          {
            if ((_7481_isDatatype) || (_7482_isConstant)) {
              RAST._IExpr _7485_onExpr;
              DCOMP._IOwnership _7486_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7487_recIdents;
              RAST._IExpr _out3408;
              DCOMP._IOwnership _out3409;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3410;
              DCOMP.COMP.GenExpr(_7484_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3408, out _out3409, out _out3410);
              _7485_onExpr = _out3408;
              _7486_onOwned = _out3409;
              _7487_recIdents = _out3410;
              r = ((_7485_onExpr).Sel(DCOMP.__default.escapeIdent(_7483_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3411;
              DCOMP._IOwnership _out3412;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3411, out _out3412);
              r = _out3411;
              resultingOwnership = _out3412;
              readIdents = _7487_recIdents;
            } else {
              RAST._IExpr _7488_onExpr;
              DCOMP._IOwnership _7489_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7490_recIdents;
              RAST._IExpr _out3413;
              DCOMP._IOwnership _out3414;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3415;
              DCOMP.COMP.GenExpr(_7484_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3413, out _out3414, out _out3415);
              _7488_onExpr = _out3413;
              _7489_onOwned = _out3414;
              _7490_recIdents = _out3415;
              r = _7488_onExpr;
              if (!object.Equals(_7488_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7483_field));
              RAST._IExpr _out3416;
              DCOMP._IOwnership _out3417;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3416, out _out3417);
              r = _out3416;
              resultingOwnership = _out3417;
              readIdents = _7490_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Convert) {
          DAST._IExpression _7491___mcc_h80 = _source341.dtor_value;
          DAST._IType _7492___mcc_h81 = _source341.dtor_from;
          DAST._IType _7493___mcc_h82 = _source341.dtor_typ;
          bool _7494_isDatatype = _7409___mcc_h51;
          bool _7495_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7496_field = _7407___mcc_h49;
          DAST._IExpression _7497_on = _7406___mcc_h48;
          {
            if ((_7494_isDatatype) || (_7495_isConstant)) {
              RAST._IExpr _7498_onExpr;
              DCOMP._IOwnership _7499_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7500_recIdents;
              RAST._IExpr _out3418;
              DCOMP._IOwnership _out3419;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3420;
              DCOMP.COMP.GenExpr(_7497_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3418, out _out3419, out _out3420);
              _7498_onExpr = _out3418;
              _7499_onOwned = _out3419;
              _7500_recIdents = _out3420;
              r = ((_7498_onExpr).Sel(DCOMP.__default.escapeIdent(_7496_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3421;
              DCOMP._IOwnership _out3422;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3421, out _out3422);
              r = _out3421;
              resultingOwnership = _out3422;
              readIdents = _7500_recIdents;
            } else {
              RAST._IExpr _7501_onExpr;
              DCOMP._IOwnership _7502_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7503_recIdents;
              RAST._IExpr _out3423;
              DCOMP._IOwnership _out3424;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3425;
              DCOMP.COMP.GenExpr(_7497_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3423, out _out3424, out _out3425);
              _7501_onExpr = _out3423;
              _7502_onOwned = _out3424;
              _7503_recIdents = _out3425;
              r = _7501_onExpr;
              if (!object.Equals(_7501_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7496_field));
              RAST._IExpr _out3426;
              DCOMP._IOwnership _out3427;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3426, out _out3427);
              r = _out3426;
              resultingOwnership = _out3427;
              readIdents = _7503_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SeqConstruct) {
          DAST._IExpression _7504___mcc_h86 = _source341.dtor_length;
          DAST._IExpression _7505___mcc_h87 = _source341.dtor_elem;
          bool _7506_isDatatype = _7409___mcc_h51;
          bool _7507_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7508_field = _7407___mcc_h49;
          DAST._IExpression _7509_on = _7406___mcc_h48;
          {
            if ((_7506_isDatatype) || (_7507_isConstant)) {
              RAST._IExpr _7510_onExpr;
              DCOMP._IOwnership _7511_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7512_recIdents;
              RAST._IExpr _out3428;
              DCOMP._IOwnership _out3429;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3430;
              DCOMP.COMP.GenExpr(_7509_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3428, out _out3429, out _out3430);
              _7510_onExpr = _out3428;
              _7511_onOwned = _out3429;
              _7512_recIdents = _out3430;
              r = ((_7510_onExpr).Sel(DCOMP.__default.escapeIdent(_7508_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3431;
              DCOMP._IOwnership _out3432;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3431, out _out3432);
              r = _out3431;
              resultingOwnership = _out3432;
              readIdents = _7512_recIdents;
            } else {
              RAST._IExpr _7513_onExpr;
              DCOMP._IOwnership _7514_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7515_recIdents;
              RAST._IExpr _out3433;
              DCOMP._IOwnership _out3434;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3435;
              DCOMP.COMP.GenExpr(_7509_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3433, out _out3434, out _out3435);
              _7513_onExpr = _out3433;
              _7514_onOwned = _out3434;
              _7515_recIdents = _out3435;
              r = _7513_onExpr;
              if (!object.Equals(_7513_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7508_field));
              RAST._IExpr _out3436;
              DCOMP._IOwnership _out3437;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3436, out _out3437);
              r = _out3436;
              resultingOwnership = _out3437;
              readIdents = _7515_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _7516___mcc_h90 = _source341.dtor_elements;
          DAST._IType _7517___mcc_h91 = _source341.dtor_typ;
          bool _7518_isDatatype = _7409___mcc_h51;
          bool _7519_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7520_field = _7407___mcc_h49;
          DAST._IExpression _7521_on = _7406___mcc_h48;
          {
            if ((_7518_isDatatype) || (_7519_isConstant)) {
              RAST._IExpr _7522_onExpr;
              DCOMP._IOwnership _7523_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7524_recIdents;
              RAST._IExpr _out3438;
              DCOMP._IOwnership _out3439;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3440;
              DCOMP.COMP.GenExpr(_7521_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3438, out _out3439, out _out3440);
              _7522_onExpr = _out3438;
              _7523_onOwned = _out3439;
              _7524_recIdents = _out3440;
              r = ((_7522_onExpr).Sel(DCOMP.__default.escapeIdent(_7520_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3441;
              DCOMP._IOwnership _out3442;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3441, out _out3442);
              r = _out3441;
              resultingOwnership = _out3442;
              readIdents = _7524_recIdents;
            } else {
              RAST._IExpr _7525_onExpr;
              DCOMP._IOwnership _7526_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7527_recIdents;
              RAST._IExpr _out3443;
              DCOMP._IOwnership _out3444;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3445;
              DCOMP.COMP.GenExpr(_7521_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3443, out _out3444, out _out3445);
              _7525_onExpr = _out3443;
              _7526_onOwned = _out3444;
              _7527_recIdents = _out3445;
              r = _7525_onExpr;
              if (!object.Equals(_7525_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7520_field));
              RAST._IExpr _out3446;
              DCOMP._IOwnership _out3447;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3446, out _out3447);
              r = _out3446;
              resultingOwnership = _out3447;
              readIdents = _7527_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _7528___mcc_h94 = _source341.dtor_elements;
          bool _7529_isDatatype = _7409___mcc_h51;
          bool _7530_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7531_field = _7407___mcc_h49;
          DAST._IExpression _7532_on = _7406___mcc_h48;
          {
            if ((_7529_isDatatype) || (_7530_isConstant)) {
              RAST._IExpr _7533_onExpr;
              DCOMP._IOwnership _7534_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7535_recIdents;
              RAST._IExpr _out3448;
              DCOMP._IOwnership _out3449;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3450;
              DCOMP.COMP.GenExpr(_7532_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3448, out _out3449, out _out3450);
              _7533_onExpr = _out3448;
              _7534_onOwned = _out3449;
              _7535_recIdents = _out3450;
              r = ((_7533_onExpr).Sel(DCOMP.__default.escapeIdent(_7531_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3451;
              DCOMP._IOwnership _out3452;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3451, out _out3452);
              r = _out3451;
              resultingOwnership = _out3452;
              readIdents = _7535_recIdents;
            } else {
              RAST._IExpr _7536_onExpr;
              DCOMP._IOwnership _7537_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7538_recIdents;
              RAST._IExpr _out3453;
              DCOMP._IOwnership _out3454;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3455;
              DCOMP.COMP.GenExpr(_7532_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3453, out _out3454, out _out3455);
              _7536_onExpr = _out3453;
              _7537_onOwned = _out3454;
              _7538_recIdents = _out3455;
              r = _7536_onExpr;
              if (!object.Equals(_7536_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7531_field));
              RAST._IExpr _out3456;
              DCOMP._IOwnership _out3457;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3456, out _out3457);
              r = _out3456;
              resultingOwnership = _out3457;
              readIdents = _7538_recIdents;
            }
            return ;
          }
        } else if (_source341.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _7539___mcc_h96 = _source341.dtor_elements;
          bool _7540_isDatatype = _7409___mcc_h51;
          bool _7541_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7542_field = _7407___mcc_h49;
          DAST._IExpression _7543_on = _7406___mcc_h48;
          {
            if ((_7540_isDatatype) || (_7541_isConstant)) {
              RAST._IExpr _7544_onExpr;
              DCOMP._IOwnership _7545_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7546_recIdents;
              RAST._IExpr _out3458;
              DCOMP._IOwnership _out3459;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3460;
              DCOMP.COMP.GenExpr(_7543_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3458, out _out3459, out _out3460);
              _7544_onExpr = _out3458;
              _7545_onOwned = _out3459;
              _7546_recIdents = _out3460;
              r = ((_7544_onExpr).Sel(DCOMP.__default.escapeIdent(_7542_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3461;
              DCOMP._IOwnership _out3462;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3461, out _out3462);
              r = _out3461;
              resultingOwnership = _out3462;
              readIdents = _7546_recIdents;
            } else {
              RAST._IExpr _7547_onExpr;
              DCOMP._IOwnership _7548_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7549_recIdents;
              RAST._IExpr _out3463;
              DCOMP._IOwnership _out3464;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3465;
              DCOMP.COMP.GenExpr(_7543_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3463, out _out3464, out _out3465);
              _7547_onExpr = _out3463;
              _7548_onOwned = _out3464;
              _7549_recIdents = _out3465;
              r = _7547_onExpr;
              if (!object.Equals(_7547_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7542_field));
              RAST._IExpr _out3466;
              DCOMP._IOwnership _out3467;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3466, out _out3467);
              r = _out3466;
              resultingOwnership = _out3467;
              readIdents = _7549_recIdents;
            }
            return ;
          }
        } else if (_source341.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7550___mcc_h98 = _source341.dtor_mapElems;
          bool _7551_isDatatype = _7409___mcc_h51;
          bool _7552_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7553_field = _7407___mcc_h49;
          DAST._IExpression _7554_on = _7406___mcc_h48;
          {
            if ((_7551_isDatatype) || (_7552_isConstant)) {
              RAST._IExpr _7555_onExpr;
              DCOMP._IOwnership _7556_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7557_recIdents;
              RAST._IExpr _out3468;
              DCOMP._IOwnership _out3469;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3470;
              DCOMP.COMP.GenExpr(_7554_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3468, out _out3469, out _out3470);
              _7555_onExpr = _out3468;
              _7556_onOwned = _out3469;
              _7557_recIdents = _out3470;
              r = ((_7555_onExpr).Sel(DCOMP.__default.escapeIdent(_7553_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3471;
              DCOMP._IOwnership _out3472;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3471, out _out3472);
              r = _out3471;
              resultingOwnership = _out3472;
              readIdents = _7557_recIdents;
            } else {
              RAST._IExpr _7558_onExpr;
              DCOMP._IOwnership _7559_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7560_recIdents;
              RAST._IExpr _out3473;
              DCOMP._IOwnership _out3474;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3475;
              DCOMP.COMP.GenExpr(_7554_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3473, out _out3474, out _out3475);
              _7558_onExpr = _out3473;
              _7559_onOwned = _out3474;
              _7560_recIdents = _out3475;
              r = _7558_onExpr;
              if (!object.Equals(_7558_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7553_field));
              RAST._IExpr _out3476;
              DCOMP._IOwnership _out3477;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3476, out _out3477);
              r = _out3476;
              resultingOwnership = _out3477;
              readIdents = _7560_recIdents;
            }
            return ;
          }
        } else if (_source341.is_MapBuilder) {
          DAST._IType _7561___mcc_h100 = _source341.dtor_keyType;
          DAST._IType _7562___mcc_h101 = _source341.dtor_valueType;
          bool _7563_isDatatype = _7409___mcc_h51;
          bool _7564_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7565_field = _7407___mcc_h49;
          DAST._IExpression _7566_on = _7406___mcc_h48;
          {
            if ((_7563_isDatatype) || (_7564_isConstant)) {
              RAST._IExpr _7567_onExpr;
              DCOMP._IOwnership _7568_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7569_recIdents;
              RAST._IExpr _out3478;
              DCOMP._IOwnership _out3479;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3480;
              DCOMP.COMP.GenExpr(_7566_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3478, out _out3479, out _out3480);
              _7567_onExpr = _out3478;
              _7568_onOwned = _out3479;
              _7569_recIdents = _out3480;
              r = ((_7567_onExpr).Sel(DCOMP.__default.escapeIdent(_7565_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3481;
              DCOMP._IOwnership _out3482;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3481, out _out3482);
              r = _out3481;
              resultingOwnership = _out3482;
              readIdents = _7569_recIdents;
            } else {
              RAST._IExpr _7570_onExpr;
              DCOMP._IOwnership _7571_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7572_recIdents;
              RAST._IExpr _out3483;
              DCOMP._IOwnership _out3484;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3485;
              DCOMP.COMP.GenExpr(_7566_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3483, out _out3484, out _out3485);
              _7570_onExpr = _out3483;
              _7571_onOwned = _out3484;
              _7572_recIdents = _out3485;
              r = _7570_onExpr;
              if (!object.Equals(_7570_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7565_field));
              RAST._IExpr _out3486;
              DCOMP._IOwnership _out3487;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3486, out _out3487);
              r = _out3486;
              resultingOwnership = _out3487;
              readIdents = _7572_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SeqUpdate) {
          DAST._IExpression _7573___mcc_h104 = _source341.dtor_expr;
          DAST._IExpression _7574___mcc_h105 = _source341.dtor_indexExpr;
          DAST._IExpression _7575___mcc_h106 = _source341.dtor_value;
          bool _7576_isDatatype = _7409___mcc_h51;
          bool _7577_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7578_field = _7407___mcc_h49;
          DAST._IExpression _7579_on = _7406___mcc_h48;
          {
            if ((_7576_isDatatype) || (_7577_isConstant)) {
              RAST._IExpr _7580_onExpr;
              DCOMP._IOwnership _7581_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7582_recIdents;
              RAST._IExpr _out3488;
              DCOMP._IOwnership _out3489;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3490;
              DCOMP.COMP.GenExpr(_7579_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3488, out _out3489, out _out3490);
              _7580_onExpr = _out3488;
              _7581_onOwned = _out3489;
              _7582_recIdents = _out3490;
              r = ((_7580_onExpr).Sel(DCOMP.__default.escapeIdent(_7578_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3491;
              DCOMP._IOwnership _out3492;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3491, out _out3492);
              r = _out3491;
              resultingOwnership = _out3492;
              readIdents = _7582_recIdents;
            } else {
              RAST._IExpr _7583_onExpr;
              DCOMP._IOwnership _7584_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7585_recIdents;
              RAST._IExpr _out3493;
              DCOMP._IOwnership _out3494;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3495;
              DCOMP.COMP.GenExpr(_7579_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3493, out _out3494, out _out3495);
              _7583_onExpr = _out3493;
              _7584_onOwned = _out3494;
              _7585_recIdents = _out3495;
              r = _7583_onExpr;
              if (!object.Equals(_7583_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7578_field));
              RAST._IExpr _out3496;
              DCOMP._IOwnership _out3497;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3496, out _out3497);
              r = _out3496;
              resultingOwnership = _out3497;
              readIdents = _7585_recIdents;
            }
            return ;
          }
        } else if (_source341.is_MapUpdate) {
          DAST._IExpression _7586___mcc_h110 = _source341.dtor_expr;
          DAST._IExpression _7587___mcc_h111 = _source341.dtor_indexExpr;
          DAST._IExpression _7588___mcc_h112 = _source341.dtor_value;
          bool _7589_isDatatype = _7409___mcc_h51;
          bool _7590_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7591_field = _7407___mcc_h49;
          DAST._IExpression _7592_on = _7406___mcc_h48;
          {
            if ((_7589_isDatatype) || (_7590_isConstant)) {
              RAST._IExpr _7593_onExpr;
              DCOMP._IOwnership _7594_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7595_recIdents;
              RAST._IExpr _out3498;
              DCOMP._IOwnership _out3499;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3500;
              DCOMP.COMP.GenExpr(_7592_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3498, out _out3499, out _out3500);
              _7593_onExpr = _out3498;
              _7594_onOwned = _out3499;
              _7595_recIdents = _out3500;
              r = ((_7593_onExpr).Sel(DCOMP.__default.escapeIdent(_7591_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3501;
              DCOMP._IOwnership _out3502;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3501, out _out3502);
              r = _out3501;
              resultingOwnership = _out3502;
              readIdents = _7595_recIdents;
            } else {
              RAST._IExpr _7596_onExpr;
              DCOMP._IOwnership _7597_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7598_recIdents;
              RAST._IExpr _out3503;
              DCOMP._IOwnership _out3504;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3505;
              DCOMP.COMP.GenExpr(_7592_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3503, out _out3504, out _out3505);
              _7596_onExpr = _out3503;
              _7597_onOwned = _out3504;
              _7598_recIdents = _out3505;
              r = _7596_onExpr;
              if (!object.Equals(_7596_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7591_field));
              RAST._IExpr _out3506;
              DCOMP._IOwnership _out3507;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3506, out _out3507);
              r = _out3506;
              resultingOwnership = _out3507;
              readIdents = _7598_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SetBuilder) {
          DAST._IType _7599___mcc_h116 = _source341.dtor_elemType;
          bool _7600_isDatatype = _7409___mcc_h51;
          bool _7601_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7602_field = _7407___mcc_h49;
          DAST._IExpression _7603_on = _7406___mcc_h48;
          {
            if ((_7600_isDatatype) || (_7601_isConstant)) {
              RAST._IExpr _7604_onExpr;
              DCOMP._IOwnership _7605_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7606_recIdents;
              RAST._IExpr _out3508;
              DCOMP._IOwnership _out3509;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3510;
              DCOMP.COMP.GenExpr(_7603_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3508, out _out3509, out _out3510);
              _7604_onExpr = _out3508;
              _7605_onOwned = _out3509;
              _7606_recIdents = _out3510;
              r = ((_7604_onExpr).Sel(DCOMP.__default.escapeIdent(_7602_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3511;
              DCOMP._IOwnership _out3512;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3511, out _out3512);
              r = _out3511;
              resultingOwnership = _out3512;
              readIdents = _7606_recIdents;
            } else {
              RAST._IExpr _7607_onExpr;
              DCOMP._IOwnership _7608_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7609_recIdents;
              RAST._IExpr _out3513;
              DCOMP._IOwnership _out3514;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3515;
              DCOMP.COMP.GenExpr(_7603_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3513, out _out3514, out _out3515);
              _7607_onExpr = _out3513;
              _7608_onOwned = _out3514;
              _7609_recIdents = _out3515;
              r = _7607_onExpr;
              if (!object.Equals(_7607_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7602_field));
              RAST._IExpr _out3516;
              DCOMP._IOwnership _out3517;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3516, out _out3517);
              r = _out3516;
              resultingOwnership = _out3517;
              readIdents = _7609_recIdents;
            }
            return ;
          }
        } else if (_source341.is_ToMultiset) {
          DAST._IExpression _7610___mcc_h118 = _source341.dtor_ToMultiset_a0;
          bool _7611_isDatatype = _7409___mcc_h51;
          bool _7612_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7613_field = _7407___mcc_h49;
          DAST._IExpression _7614_on = _7406___mcc_h48;
          {
            if ((_7611_isDatatype) || (_7612_isConstant)) {
              RAST._IExpr _7615_onExpr;
              DCOMP._IOwnership _7616_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7617_recIdents;
              RAST._IExpr _out3518;
              DCOMP._IOwnership _out3519;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3520;
              DCOMP.COMP.GenExpr(_7614_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3518, out _out3519, out _out3520);
              _7615_onExpr = _out3518;
              _7616_onOwned = _out3519;
              _7617_recIdents = _out3520;
              r = ((_7615_onExpr).Sel(DCOMP.__default.escapeIdent(_7613_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3521;
              DCOMP._IOwnership _out3522;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3521, out _out3522);
              r = _out3521;
              resultingOwnership = _out3522;
              readIdents = _7617_recIdents;
            } else {
              RAST._IExpr _7618_onExpr;
              DCOMP._IOwnership _7619_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7620_recIdents;
              RAST._IExpr _out3523;
              DCOMP._IOwnership _out3524;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3525;
              DCOMP.COMP.GenExpr(_7614_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3523, out _out3524, out _out3525);
              _7618_onExpr = _out3523;
              _7619_onOwned = _out3524;
              _7620_recIdents = _out3525;
              r = _7618_onExpr;
              if (!object.Equals(_7618_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7613_field));
              RAST._IExpr _out3526;
              DCOMP._IOwnership _out3527;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3526, out _out3527);
              r = _out3526;
              resultingOwnership = _out3527;
              readIdents = _7620_recIdents;
            }
            return ;
          }
        } else if (_source341.is_This) {
          bool _7621_isDatatype = _7409___mcc_h51;
          bool _7622_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7623_field = _7407___mcc_h49;
          DAST._IExpression _7624_on = _7406___mcc_h48;
          {
            if ((_7621_isDatatype) || (_7622_isConstant)) {
              RAST._IExpr _7625_onExpr;
              DCOMP._IOwnership _7626_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7627_recIdents;
              RAST._IExpr _out3528;
              DCOMP._IOwnership _out3529;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3530;
              DCOMP.COMP.GenExpr(_7624_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3528, out _out3529, out _out3530);
              _7625_onExpr = _out3528;
              _7626_onOwned = _out3529;
              _7627_recIdents = _out3530;
              r = ((_7625_onExpr).Sel(DCOMP.__default.escapeIdent(_7623_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3531;
              DCOMP._IOwnership _out3532;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3531, out _out3532);
              r = _out3531;
              resultingOwnership = _out3532;
              readIdents = _7627_recIdents;
            } else {
              RAST._IExpr _7628_onExpr;
              DCOMP._IOwnership _7629_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7630_recIdents;
              RAST._IExpr _out3533;
              DCOMP._IOwnership _out3534;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3535;
              DCOMP.COMP.GenExpr(_7624_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3533, out _out3534, out _out3535);
              _7628_onExpr = _out3533;
              _7629_onOwned = _out3534;
              _7630_recIdents = _out3535;
              r = _7628_onExpr;
              if (!object.Equals(_7628_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7623_field));
              RAST._IExpr _out3536;
              DCOMP._IOwnership _out3537;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3536, out _out3537);
              r = _out3536;
              resultingOwnership = _out3537;
              readIdents = _7630_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Ite) {
          DAST._IExpression _7631___mcc_h120 = _source341.dtor_cond;
          DAST._IExpression _7632___mcc_h121 = _source341.dtor_thn;
          DAST._IExpression _7633___mcc_h122 = _source341.dtor_els;
          bool _7634_isDatatype = _7409___mcc_h51;
          bool _7635_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7636_field = _7407___mcc_h49;
          DAST._IExpression _7637_on = _7406___mcc_h48;
          {
            if ((_7634_isDatatype) || (_7635_isConstant)) {
              RAST._IExpr _7638_onExpr;
              DCOMP._IOwnership _7639_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7640_recIdents;
              RAST._IExpr _out3538;
              DCOMP._IOwnership _out3539;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3540;
              DCOMP.COMP.GenExpr(_7637_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3538, out _out3539, out _out3540);
              _7638_onExpr = _out3538;
              _7639_onOwned = _out3539;
              _7640_recIdents = _out3540;
              r = ((_7638_onExpr).Sel(DCOMP.__default.escapeIdent(_7636_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3541;
              DCOMP._IOwnership _out3542;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3541, out _out3542);
              r = _out3541;
              resultingOwnership = _out3542;
              readIdents = _7640_recIdents;
            } else {
              RAST._IExpr _7641_onExpr;
              DCOMP._IOwnership _7642_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7643_recIdents;
              RAST._IExpr _out3543;
              DCOMP._IOwnership _out3544;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3545;
              DCOMP.COMP.GenExpr(_7637_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3543, out _out3544, out _out3545);
              _7641_onExpr = _out3543;
              _7642_onOwned = _out3544;
              _7643_recIdents = _out3545;
              r = _7641_onExpr;
              if (!object.Equals(_7641_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7636_field));
              RAST._IExpr _out3546;
              DCOMP._IOwnership _out3547;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3546, out _out3547);
              r = _out3546;
              resultingOwnership = _out3547;
              readIdents = _7643_recIdents;
            }
            return ;
          }
        } else if (_source341.is_UnOp) {
          DAST._IUnaryOp _7644___mcc_h126 = _source341.dtor_unOp;
          DAST._IExpression _7645___mcc_h127 = _source341.dtor_expr;
          DAST.Format._IUnOpFormat _7646___mcc_h128 = _source341.dtor_format1;
          bool _7647_isDatatype = _7409___mcc_h51;
          bool _7648_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7649_field = _7407___mcc_h49;
          DAST._IExpression _7650_on = _7406___mcc_h48;
          {
            if ((_7647_isDatatype) || (_7648_isConstant)) {
              RAST._IExpr _7651_onExpr;
              DCOMP._IOwnership _7652_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7653_recIdents;
              RAST._IExpr _out3548;
              DCOMP._IOwnership _out3549;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3550;
              DCOMP.COMP.GenExpr(_7650_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3548, out _out3549, out _out3550);
              _7651_onExpr = _out3548;
              _7652_onOwned = _out3549;
              _7653_recIdents = _out3550;
              r = ((_7651_onExpr).Sel(DCOMP.__default.escapeIdent(_7649_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3551;
              DCOMP._IOwnership _out3552;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3551, out _out3552);
              r = _out3551;
              resultingOwnership = _out3552;
              readIdents = _7653_recIdents;
            } else {
              RAST._IExpr _7654_onExpr;
              DCOMP._IOwnership _7655_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7656_recIdents;
              RAST._IExpr _out3553;
              DCOMP._IOwnership _out3554;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3555;
              DCOMP.COMP.GenExpr(_7650_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3553, out _out3554, out _out3555);
              _7654_onExpr = _out3553;
              _7655_onOwned = _out3554;
              _7656_recIdents = _out3555;
              r = _7654_onExpr;
              if (!object.Equals(_7654_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7649_field));
              RAST._IExpr _out3556;
              DCOMP._IOwnership _out3557;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3556, out _out3557);
              r = _out3556;
              resultingOwnership = _out3557;
              readIdents = _7656_recIdents;
            }
            return ;
          }
        } else if (_source341.is_BinOp) {
          DAST._IBinOp _7657___mcc_h132 = _source341.dtor_op;
          DAST._IExpression _7658___mcc_h133 = _source341.dtor_left;
          DAST._IExpression _7659___mcc_h134 = _source341.dtor_right;
          DAST.Format._IBinOpFormat _7660___mcc_h135 = _source341.dtor_format2;
          bool _7661_isDatatype = _7409___mcc_h51;
          bool _7662_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7663_field = _7407___mcc_h49;
          DAST._IExpression _7664_on = _7406___mcc_h48;
          {
            if ((_7661_isDatatype) || (_7662_isConstant)) {
              RAST._IExpr _7665_onExpr;
              DCOMP._IOwnership _7666_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7667_recIdents;
              RAST._IExpr _out3558;
              DCOMP._IOwnership _out3559;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3560;
              DCOMP.COMP.GenExpr(_7664_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3558, out _out3559, out _out3560);
              _7665_onExpr = _out3558;
              _7666_onOwned = _out3559;
              _7667_recIdents = _out3560;
              r = ((_7665_onExpr).Sel(DCOMP.__default.escapeIdent(_7663_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3561;
              DCOMP._IOwnership _out3562;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3561, out _out3562);
              r = _out3561;
              resultingOwnership = _out3562;
              readIdents = _7667_recIdents;
            } else {
              RAST._IExpr _7668_onExpr;
              DCOMP._IOwnership _7669_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7670_recIdents;
              RAST._IExpr _out3563;
              DCOMP._IOwnership _out3564;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3565;
              DCOMP.COMP.GenExpr(_7664_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3563, out _out3564, out _out3565);
              _7668_onExpr = _out3563;
              _7669_onOwned = _out3564;
              _7670_recIdents = _out3565;
              r = _7668_onExpr;
              if (!object.Equals(_7668_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7663_field));
              RAST._IExpr _out3566;
              DCOMP._IOwnership _out3567;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3566, out _out3567);
              r = _out3566;
              resultingOwnership = _out3567;
              readIdents = _7670_recIdents;
            }
            return ;
          }
        } else if (_source341.is_ArrayLen) {
          DAST._IExpression _7671___mcc_h140 = _source341.dtor_expr;
          BigInteger _7672___mcc_h141 = _source341.dtor_dim;
          bool _7673_isDatatype = _7409___mcc_h51;
          bool _7674_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7675_field = _7407___mcc_h49;
          DAST._IExpression _7676_on = _7406___mcc_h48;
          {
            if ((_7673_isDatatype) || (_7674_isConstant)) {
              RAST._IExpr _7677_onExpr;
              DCOMP._IOwnership _7678_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7679_recIdents;
              RAST._IExpr _out3568;
              DCOMP._IOwnership _out3569;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3570;
              DCOMP.COMP.GenExpr(_7676_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3568, out _out3569, out _out3570);
              _7677_onExpr = _out3568;
              _7678_onOwned = _out3569;
              _7679_recIdents = _out3570;
              r = ((_7677_onExpr).Sel(DCOMP.__default.escapeIdent(_7675_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3571;
              DCOMP._IOwnership _out3572;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3571, out _out3572);
              r = _out3571;
              resultingOwnership = _out3572;
              readIdents = _7679_recIdents;
            } else {
              RAST._IExpr _7680_onExpr;
              DCOMP._IOwnership _7681_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7682_recIdents;
              RAST._IExpr _out3573;
              DCOMP._IOwnership _out3574;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3575;
              DCOMP.COMP.GenExpr(_7676_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3573, out _out3574, out _out3575);
              _7680_onExpr = _out3573;
              _7681_onOwned = _out3574;
              _7682_recIdents = _out3575;
              r = _7680_onExpr;
              if (!object.Equals(_7680_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7675_field));
              RAST._IExpr _out3576;
              DCOMP._IOwnership _out3577;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3576, out _out3577);
              r = _out3576;
              resultingOwnership = _out3577;
              readIdents = _7682_recIdents;
            }
            return ;
          }
        } else if (_source341.is_MapKeys) {
          DAST._IExpression _7683___mcc_h144 = _source341.dtor_expr;
          bool _7684_isDatatype = _7409___mcc_h51;
          bool _7685_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7686_field = _7407___mcc_h49;
          DAST._IExpression _7687_on = _7406___mcc_h48;
          {
            if ((_7684_isDatatype) || (_7685_isConstant)) {
              RAST._IExpr _7688_onExpr;
              DCOMP._IOwnership _7689_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7690_recIdents;
              RAST._IExpr _out3578;
              DCOMP._IOwnership _out3579;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3580;
              DCOMP.COMP.GenExpr(_7687_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3578, out _out3579, out _out3580);
              _7688_onExpr = _out3578;
              _7689_onOwned = _out3579;
              _7690_recIdents = _out3580;
              r = ((_7688_onExpr).Sel(DCOMP.__default.escapeIdent(_7686_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3581;
              DCOMP._IOwnership _out3582;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3581, out _out3582);
              r = _out3581;
              resultingOwnership = _out3582;
              readIdents = _7690_recIdents;
            } else {
              RAST._IExpr _7691_onExpr;
              DCOMP._IOwnership _7692_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7693_recIdents;
              RAST._IExpr _out3583;
              DCOMP._IOwnership _out3584;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3585;
              DCOMP.COMP.GenExpr(_7687_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3583, out _out3584, out _out3585);
              _7691_onExpr = _out3583;
              _7692_onOwned = _out3584;
              _7693_recIdents = _out3585;
              r = _7691_onExpr;
              if (!object.Equals(_7691_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7686_field));
              RAST._IExpr _out3586;
              DCOMP._IOwnership _out3587;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3586, out _out3587);
              r = _out3586;
              resultingOwnership = _out3587;
              readIdents = _7693_recIdents;
            }
            return ;
          }
        } else if (_source341.is_MapValues) {
          DAST._IExpression _7694___mcc_h146 = _source341.dtor_expr;
          bool _7695_isDatatype = _7409___mcc_h51;
          bool _7696_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7697_field = _7407___mcc_h49;
          DAST._IExpression _7698_on = _7406___mcc_h48;
          {
            if ((_7695_isDatatype) || (_7696_isConstant)) {
              RAST._IExpr _7699_onExpr;
              DCOMP._IOwnership _7700_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7701_recIdents;
              RAST._IExpr _out3588;
              DCOMP._IOwnership _out3589;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3590;
              DCOMP.COMP.GenExpr(_7698_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3588, out _out3589, out _out3590);
              _7699_onExpr = _out3588;
              _7700_onOwned = _out3589;
              _7701_recIdents = _out3590;
              r = ((_7699_onExpr).Sel(DCOMP.__default.escapeIdent(_7697_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3591;
              DCOMP._IOwnership _out3592;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3591, out _out3592);
              r = _out3591;
              resultingOwnership = _out3592;
              readIdents = _7701_recIdents;
            } else {
              RAST._IExpr _7702_onExpr;
              DCOMP._IOwnership _7703_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7704_recIdents;
              RAST._IExpr _out3593;
              DCOMP._IOwnership _out3594;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3595;
              DCOMP.COMP.GenExpr(_7698_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3593, out _out3594, out _out3595);
              _7702_onExpr = _out3593;
              _7703_onOwned = _out3594;
              _7704_recIdents = _out3595;
              r = _7702_onExpr;
              if (!object.Equals(_7702_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7697_field));
              RAST._IExpr _out3596;
              DCOMP._IOwnership _out3597;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3596, out _out3597);
              r = _out3596;
              resultingOwnership = _out3597;
              readIdents = _7704_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Select) {
          DAST._IExpression _7705___mcc_h148 = _source341.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7706___mcc_h149 = _source341.dtor_field;
          bool _7707___mcc_h150 = _source341.dtor_isConstant;
          bool _7708___mcc_h151 = _source341.dtor_onDatatype;
          bool _7709_isDatatype = _7409___mcc_h51;
          bool _7710_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7711_field = _7407___mcc_h49;
          DAST._IExpression _7712_on = _7406___mcc_h48;
          {
            if ((_7709_isDatatype) || (_7710_isConstant)) {
              RAST._IExpr _7713_onExpr;
              DCOMP._IOwnership _7714_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7715_recIdents;
              RAST._IExpr _out3598;
              DCOMP._IOwnership _out3599;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3600;
              DCOMP.COMP.GenExpr(_7712_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3598, out _out3599, out _out3600);
              _7713_onExpr = _out3598;
              _7714_onOwned = _out3599;
              _7715_recIdents = _out3600;
              r = ((_7713_onExpr).Sel(DCOMP.__default.escapeIdent(_7711_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3601;
              DCOMP._IOwnership _out3602;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3601, out _out3602);
              r = _out3601;
              resultingOwnership = _out3602;
              readIdents = _7715_recIdents;
            } else {
              RAST._IExpr _7716_onExpr;
              DCOMP._IOwnership _7717_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7718_recIdents;
              RAST._IExpr _out3603;
              DCOMP._IOwnership _out3604;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3605;
              DCOMP.COMP.GenExpr(_7712_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3603, out _out3604, out _out3605);
              _7716_onExpr = _out3603;
              _7717_onOwned = _out3604;
              _7718_recIdents = _out3605;
              r = _7716_onExpr;
              if (!object.Equals(_7716_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7711_field));
              RAST._IExpr _out3606;
              DCOMP._IOwnership _out3607;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3606, out _out3607);
              r = _out3606;
              resultingOwnership = _out3607;
              readIdents = _7718_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SelectFn) {
          DAST._IExpression _7719___mcc_h156 = _source341.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7720___mcc_h157 = _source341.dtor_field;
          bool _7721___mcc_h158 = _source341.dtor_onDatatype;
          bool _7722___mcc_h159 = _source341.dtor_isStatic;
          BigInteger _7723___mcc_h160 = _source341.dtor_arity;
          bool _7724_isDatatype = _7409___mcc_h51;
          bool _7725_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7726_field = _7407___mcc_h49;
          DAST._IExpression _7727_on = _7406___mcc_h48;
          {
            if ((_7724_isDatatype) || (_7725_isConstant)) {
              RAST._IExpr _7728_onExpr;
              DCOMP._IOwnership _7729_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7730_recIdents;
              RAST._IExpr _out3608;
              DCOMP._IOwnership _out3609;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3610;
              DCOMP.COMP.GenExpr(_7727_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3608, out _out3609, out _out3610);
              _7728_onExpr = _out3608;
              _7729_onOwned = _out3609;
              _7730_recIdents = _out3610;
              r = ((_7728_onExpr).Sel(DCOMP.__default.escapeIdent(_7726_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3611;
              DCOMP._IOwnership _out3612;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3611, out _out3612);
              r = _out3611;
              resultingOwnership = _out3612;
              readIdents = _7730_recIdents;
            } else {
              RAST._IExpr _7731_onExpr;
              DCOMP._IOwnership _7732_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7733_recIdents;
              RAST._IExpr _out3613;
              DCOMP._IOwnership _out3614;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3615;
              DCOMP.COMP.GenExpr(_7727_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3613, out _out3614, out _out3615);
              _7731_onExpr = _out3613;
              _7732_onOwned = _out3614;
              _7733_recIdents = _out3615;
              r = _7731_onExpr;
              if (!object.Equals(_7731_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7726_field));
              RAST._IExpr _out3616;
              DCOMP._IOwnership _out3617;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3616, out _out3617);
              r = _out3616;
              resultingOwnership = _out3617;
              readIdents = _7733_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Index) {
          DAST._IExpression _7734___mcc_h166 = _source341.dtor_expr;
          DAST._ICollKind _7735___mcc_h167 = _source341.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _7736___mcc_h168 = _source341.dtor_indices;
          bool _7737_isDatatype = _7409___mcc_h51;
          bool _7738_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7739_field = _7407___mcc_h49;
          DAST._IExpression _7740_on = _7406___mcc_h48;
          {
            if ((_7737_isDatatype) || (_7738_isConstant)) {
              RAST._IExpr _7741_onExpr;
              DCOMP._IOwnership _7742_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7743_recIdents;
              RAST._IExpr _out3618;
              DCOMP._IOwnership _out3619;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3620;
              DCOMP.COMP.GenExpr(_7740_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3618, out _out3619, out _out3620);
              _7741_onExpr = _out3618;
              _7742_onOwned = _out3619;
              _7743_recIdents = _out3620;
              r = ((_7741_onExpr).Sel(DCOMP.__default.escapeIdent(_7739_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3621;
              DCOMP._IOwnership _out3622;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3621, out _out3622);
              r = _out3621;
              resultingOwnership = _out3622;
              readIdents = _7743_recIdents;
            } else {
              RAST._IExpr _7744_onExpr;
              DCOMP._IOwnership _7745_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7746_recIdents;
              RAST._IExpr _out3623;
              DCOMP._IOwnership _out3624;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3625;
              DCOMP.COMP.GenExpr(_7740_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3623, out _out3624, out _out3625);
              _7744_onExpr = _out3623;
              _7745_onOwned = _out3624;
              _7746_recIdents = _out3625;
              r = _7744_onExpr;
              if (!object.Equals(_7744_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7739_field));
              RAST._IExpr _out3626;
              DCOMP._IOwnership _out3627;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3626, out _out3627);
              r = _out3626;
              resultingOwnership = _out3627;
              readIdents = _7746_recIdents;
            }
            return ;
          }
        } else if (_source341.is_IndexRange) {
          DAST._IExpression _7747___mcc_h172 = _source341.dtor_expr;
          bool _7748___mcc_h173 = _source341.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _7749___mcc_h174 = _source341.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _7750___mcc_h175 = _source341.dtor_high;
          bool _7751_isDatatype = _7409___mcc_h51;
          bool _7752_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7753_field = _7407___mcc_h49;
          DAST._IExpression _7754_on = _7406___mcc_h48;
          {
            if ((_7751_isDatatype) || (_7752_isConstant)) {
              RAST._IExpr _7755_onExpr;
              DCOMP._IOwnership _7756_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7757_recIdents;
              RAST._IExpr _out3628;
              DCOMP._IOwnership _out3629;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3630;
              DCOMP.COMP.GenExpr(_7754_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3628, out _out3629, out _out3630);
              _7755_onExpr = _out3628;
              _7756_onOwned = _out3629;
              _7757_recIdents = _out3630;
              r = ((_7755_onExpr).Sel(DCOMP.__default.escapeIdent(_7753_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3631;
              DCOMP._IOwnership _out3632;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3631, out _out3632);
              r = _out3631;
              resultingOwnership = _out3632;
              readIdents = _7757_recIdents;
            } else {
              RAST._IExpr _7758_onExpr;
              DCOMP._IOwnership _7759_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7760_recIdents;
              RAST._IExpr _out3633;
              DCOMP._IOwnership _out3634;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3635;
              DCOMP.COMP.GenExpr(_7754_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3633, out _out3634, out _out3635);
              _7758_onExpr = _out3633;
              _7759_onOwned = _out3634;
              _7760_recIdents = _out3635;
              r = _7758_onExpr;
              if (!object.Equals(_7758_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7753_field));
              RAST._IExpr _out3636;
              DCOMP._IOwnership _out3637;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3636, out _out3637);
              r = _out3636;
              resultingOwnership = _out3637;
              readIdents = _7760_recIdents;
            }
            return ;
          }
        } else if (_source341.is_TupleSelect) {
          DAST._IExpression _7761___mcc_h180 = _source341.dtor_expr;
          BigInteger _7762___mcc_h181 = _source341.dtor_index;
          bool _7763_isDatatype = _7409___mcc_h51;
          bool _7764_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7765_field = _7407___mcc_h49;
          DAST._IExpression _7766_on = _7406___mcc_h48;
          {
            if ((_7763_isDatatype) || (_7764_isConstant)) {
              RAST._IExpr _7767_onExpr;
              DCOMP._IOwnership _7768_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7769_recIdents;
              RAST._IExpr _out3638;
              DCOMP._IOwnership _out3639;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3640;
              DCOMP.COMP.GenExpr(_7766_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3638, out _out3639, out _out3640);
              _7767_onExpr = _out3638;
              _7768_onOwned = _out3639;
              _7769_recIdents = _out3640;
              r = ((_7767_onExpr).Sel(DCOMP.__default.escapeIdent(_7765_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3641;
              DCOMP._IOwnership _out3642;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3641, out _out3642);
              r = _out3641;
              resultingOwnership = _out3642;
              readIdents = _7769_recIdents;
            } else {
              RAST._IExpr _7770_onExpr;
              DCOMP._IOwnership _7771_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7772_recIdents;
              RAST._IExpr _out3643;
              DCOMP._IOwnership _out3644;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3645;
              DCOMP.COMP.GenExpr(_7766_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3643, out _out3644, out _out3645);
              _7770_onExpr = _out3643;
              _7771_onOwned = _out3644;
              _7772_recIdents = _out3645;
              r = _7770_onExpr;
              if (!object.Equals(_7770_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7765_field));
              RAST._IExpr _out3646;
              DCOMP._IOwnership _out3647;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3646, out _out3647);
              r = _out3646;
              resultingOwnership = _out3647;
              readIdents = _7772_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Call) {
          DAST._IExpression _7773___mcc_h184 = _source341.dtor_on;
          DAST._ICallName _7774___mcc_h185 = _source341.dtor_callName;
          Dafny.ISequence<DAST._IType> _7775___mcc_h186 = _source341.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7776___mcc_h187 = _source341.dtor_args;
          bool _7777_isDatatype = _7409___mcc_h51;
          bool _7778_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7779_field = _7407___mcc_h49;
          DAST._IExpression _7780_on = _7406___mcc_h48;
          {
            if ((_7777_isDatatype) || (_7778_isConstant)) {
              RAST._IExpr _7781_onExpr;
              DCOMP._IOwnership _7782_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7783_recIdents;
              RAST._IExpr _out3648;
              DCOMP._IOwnership _out3649;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3650;
              DCOMP.COMP.GenExpr(_7780_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3648, out _out3649, out _out3650);
              _7781_onExpr = _out3648;
              _7782_onOwned = _out3649;
              _7783_recIdents = _out3650;
              r = ((_7781_onExpr).Sel(DCOMP.__default.escapeIdent(_7779_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3651;
              DCOMP._IOwnership _out3652;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3651, out _out3652);
              r = _out3651;
              resultingOwnership = _out3652;
              readIdents = _7783_recIdents;
            } else {
              RAST._IExpr _7784_onExpr;
              DCOMP._IOwnership _7785_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7786_recIdents;
              RAST._IExpr _out3653;
              DCOMP._IOwnership _out3654;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3655;
              DCOMP.COMP.GenExpr(_7780_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3653, out _out3654, out _out3655);
              _7784_onExpr = _out3653;
              _7785_onOwned = _out3654;
              _7786_recIdents = _out3655;
              r = _7784_onExpr;
              if (!object.Equals(_7784_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7779_field));
              RAST._IExpr _out3656;
              DCOMP._IOwnership _out3657;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3656, out _out3657);
              r = _out3656;
              resultingOwnership = _out3657;
              readIdents = _7786_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _7787___mcc_h192 = _source341.dtor_params;
          DAST._IType _7788___mcc_h193 = _source341.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _7789___mcc_h194 = _source341.dtor_body;
          bool _7790_isDatatype = _7409___mcc_h51;
          bool _7791_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7792_field = _7407___mcc_h49;
          DAST._IExpression _7793_on = _7406___mcc_h48;
          {
            if ((_7790_isDatatype) || (_7791_isConstant)) {
              RAST._IExpr _7794_onExpr;
              DCOMP._IOwnership _7795_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7796_recIdents;
              RAST._IExpr _out3658;
              DCOMP._IOwnership _out3659;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3660;
              DCOMP.COMP.GenExpr(_7793_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3658, out _out3659, out _out3660);
              _7794_onExpr = _out3658;
              _7795_onOwned = _out3659;
              _7796_recIdents = _out3660;
              r = ((_7794_onExpr).Sel(DCOMP.__default.escapeIdent(_7792_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3661;
              DCOMP._IOwnership _out3662;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3661, out _out3662);
              r = _out3661;
              resultingOwnership = _out3662;
              readIdents = _7796_recIdents;
            } else {
              RAST._IExpr _7797_onExpr;
              DCOMP._IOwnership _7798_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7799_recIdents;
              RAST._IExpr _out3663;
              DCOMP._IOwnership _out3664;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3665;
              DCOMP.COMP.GenExpr(_7793_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3663, out _out3664, out _out3665);
              _7797_onExpr = _out3663;
              _7798_onOwned = _out3664;
              _7799_recIdents = _out3665;
              r = _7797_onExpr;
              if (!object.Equals(_7797_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7792_field));
              RAST._IExpr _out3666;
              DCOMP._IOwnership _out3667;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3666, out _out3667);
              r = _out3666;
              resultingOwnership = _out3667;
              readIdents = _7799_recIdents;
            }
            return ;
          }
        } else if (_source341.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7800___mcc_h198 = _source341.dtor_values;
          DAST._IType _7801___mcc_h199 = _source341.dtor_retType;
          DAST._IExpression _7802___mcc_h200 = _source341.dtor_expr;
          bool _7803_isDatatype = _7409___mcc_h51;
          bool _7804_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7805_field = _7407___mcc_h49;
          DAST._IExpression _7806_on = _7406___mcc_h48;
          {
            if ((_7803_isDatatype) || (_7804_isConstant)) {
              RAST._IExpr _7807_onExpr;
              DCOMP._IOwnership _7808_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7809_recIdents;
              RAST._IExpr _out3668;
              DCOMP._IOwnership _out3669;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3670;
              DCOMP.COMP.GenExpr(_7806_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3668, out _out3669, out _out3670);
              _7807_onExpr = _out3668;
              _7808_onOwned = _out3669;
              _7809_recIdents = _out3670;
              r = ((_7807_onExpr).Sel(DCOMP.__default.escapeIdent(_7805_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3671;
              DCOMP._IOwnership _out3672;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3671, out _out3672);
              r = _out3671;
              resultingOwnership = _out3672;
              readIdents = _7809_recIdents;
            } else {
              RAST._IExpr _7810_onExpr;
              DCOMP._IOwnership _7811_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7812_recIdents;
              RAST._IExpr _out3673;
              DCOMP._IOwnership _out3674;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3675;
              DCOMP.COMP.GenExpr(_7806_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3673, out _out3674, out _out3675);
              _7810_onExpr = _out3673;
              _7811_onOwned = _out3674;
              _7812_recIdents = _out3675;
              r = _7810_onExpr;
              if (!object.Equals(_7810_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7805_field));
              RAST._IExpr _out3676;
              DCOMP._IOwnership _out3677;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3676, out _out3677);
              r = _out3676;
              resultingOwnership = _out3677;
              readIdents = _7812_recIdents;
            }
            return ;
          }
        } else if (_source341.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _7813___mcc_h204 = _source341.dtor_name;
          DAST._IType _7814___mcc_h205 = _source341.dtor_typ;
          DAST._IExpression _7815___mcc_h206 = _source341.dtor_value;
          DAST._IExpression _7816___mcc_h207 = _source341.dtor_iifeBody;
          bool _7817_isDatatype = _7409___mcc_h51;
          bool _7818_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7819_field = _7407___mcc_h49;
          DAST._IExpression _7820_on = _7406___mcc_h48;
          {
            if ((_7817_isDatatype) || (_7818_isConstant)) {
              RAST._IExpr _7821_onExpr;
              DCOMP._IOwnership _7822_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7823_recIdents;
              RAST._IExpr _out3678;
              DCOMP._IOwnership _out3679;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3680;
              DCOMP.COMP.GenExpr(_7820_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3678, out _out3679, out _out3680);
              _7821_onExpr = _out3678;
              _7822_onOwned = _out3679;
              _7823_recIdents = _out3680;
              r = ((_7821_onExpr).Sel(DCOMP.__default.escapeIdent(_7819_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3681;
              DCOMP._IOwnership _out3682;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3681, out _out3682);
              r = _out3681;
              resultingOwnership = _out3682;
              readIdents = _7823_recIdents;
            } else {
              RAST._IExpr _7824_onExpr;
              DCOMP._IOwnership _7825_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7826_recIdents;
              RAST._IExpr _out3683;
              DCOMP._IOwnership _out3684;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3685;
              DCOMP.COMP.GenExpr(_7820_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3683, out _out3684, out _out3685);
              _7824_onExpr = _out3683;
              _7825_onOwned = _out3684;
              _7826_recIdents = _out3685;
              r = _7824_onExpr;
              if (!object.Equals(_7824_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7819_field));
              RAST._IExpr _out3686;
              DCOMP._IOwnership _out3687;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3686, out _out3687);
              r = _out3686;
              resultingOwnership = _out3687;
              readIdents = _7826_recIdents;
            }
            return ;
          }
        } else if (_source341.is_Apply) {
          DAST._IExpression _7827___mcc_h212 = _source341.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _7828___mcc_h213 = _source341.dtor_args;
          bool _7829_isDatatype = _7409___mcc_h51;
          bool _7830_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7831_field = _7407___mcc_h49;
          DAST._IExpression _7832_on = _7406___mcc_h48;
          {
            if ((_7829_isDatatype) || (_7830_isConstant)) {
              RAST._IExpr _7833_onExpr;
              DCOMP._IOwnership _7834_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7835_recIdents;
              RAST._IExpr _out3688;
              DCOMP._IOwnership _out3689;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3690;
              DCOMP.COMP.GenExpr(_7832_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3688, out _out3689, out _out3690);
              _7833_onExpr = _out3688;
              _7834_onOwned = _out3689;
              _7835_recIdents = _out3690;
              r = ((_7833_onExpr).Sel(DCOMP.__default.escapeIdent(_7831_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3691;
              DCOMP._IOwnership _out3692;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3691, out _out3692);
              r = _out3691;
              resultingOwnership = _out3692;
              readIdents = _7835_recIdents;
            } else {
              RAST._IExpr _7836_onExpr;
              DCOMP._IOwnership _7837_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7838_recIdents;
              RAST._IExpr _out3693;
              DCOMP._IOwnership _out3694;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3695;
              DCOMP.COMP.GenExpr(_7832_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3693, out _out3694, out _out3695);
              _7836_onExpr = _out3693;
              _7837_onOwned = _out3694;
              _7838_recIdents = _out3695;
              r = _7836_onExpr;
              if (!object.Equals(_7836_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7831_field));
              RAST._IExpr _out3696;
              DCOMP._IOwnership _out3697;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3696, out _out3697);
              r = _out3696;
              resultingOwnership = _out3697;
              readIdents = _7838_recIdents;
            }
            return ;
          }
        } else if (_source341.is_TypeTest) {
          DAST._IExpression _7839___mcc_h216 = _source341.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7840___mcc_h217 = _source341.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _7841___mcc_h218 = _source341.dtor_variant;
          bool _7842_isDatatype = _7409___mcc_h51;
          bool _7843_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7844_field = _7407___mcc_h49;
          DAST._IExpression _7845_on = _7406___mcc_h48;
          {
            if ((_7842_isDatatype) || (_7843_isConstant)) {
              RAST._IExpr _7846_onExpr;
              DCOMP._IOwnership _7847_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7848_recIdents;
              RAST._IExpr _out3698;
              DCOMP._IOwnership _out3699;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3700;
              DCOMP.COMP.GenExpr(_7845_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3698, out _out3699, out _out3700);
              _7846_onExpr = _out3698;
              _7847_onOwned = _out3699;
              _7848_recIdents = _out3700;
              r = ((_7846_onExpr).Sel(DCOMP.__default.escapeIdent(_7844_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3701;
              DCOMP._IOwnership _out3702;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3701, out _out3702);
              r = _out3701;
              resultingOwnership = _out3702;
              readIdents = _7848_recIdents;
            } else {
              RAST._IExpr _7849_onExpr;
              DCOMP._IOwnership _7850_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7851_recIdents;
              RAST._IExpr _out3703;
              DCOMP._IOwnership _out3704;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3705;
              DCOMP.COMP.GenExpr(_7845_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3703, out _out3704, out _out3705);
              _7849_onExpr = _out3703;
              _7850_onOwned = _out3704;
              _7851_recIdents = _out3705;
              r = _7849_onExpr;
              if (!object.Equals(_7849_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7844_field));
              RAST._IExpr _out3706;
              DCOMP._IOwnership _out3707;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3706, out _out3707);
              r = _out3706;
              resultingOwnership = _out3707;
              readIdents = _7851_recIdents;
            }
            return ;
          }
        } else if (_source341.is_InitializationValue) {
          DAST._IType _7852___mcc_h222 = _source341.dtor_typ;
          bool _7853_isDatatype = _7409___mcc_h51;
          bool _7854_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7855_field = _7407___mcc_h49;
          DAST._IExpression _7856_on = _7406___mcc_h48;
          {
            if ((_7853_isDatatype) || (_7854_isConstant)) {
              RAST._IExpr _7857_onExpr;
              DCOMP._IOwnership _7858_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7859_recIdents;
              RAST._IExpr _out3708;
              DCOMP._IOwnership _out3709;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3710;
              DCOMP.COMP.GenExpr(_7856_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3708, out _out3709, out _out3710);
              _7857_onExpr = _out3708;
              _7858_onOwned = _out3709;
              _7859_recIdents = _out3710;
              r = ((_7857_onExpr).Sel(DCOMP.__default.escapeIdent(_7855_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3711;
              DCOMP._IOwnership _out3712;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3711, out _out3712);
              r = _out3711;
              resultingOwnership = _out3712;
              readIdents = _7859_recIdents;
            } else {
              RAST._IExpr _7860_onExpr;
              DCOMP._IOwnership _7861_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7862_recIdents;
              RAST._IExpr _out3713;
              DCOMP._IOwnership _out3714;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3715;
              DCOMP.COMP.GenExpr(_7856_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3713, out _out3714, out _out3715);
              _7860_onExpr = _out3713;
              _7861_onOwned = _out3714;
              _7862_recIdents = _out3715;
              r = _7860_onExpr;
              if (!object.Equals(_7860_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7855_field));
              RAST._IExpr _out3716;
              DCOMP._IOwnership _out3717;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3716, out _out3717);
              r = _out3716;
              resultingOwnership = _out3717;
              readIdents = _7862_recIdents;
            }
            return ;
          }
        } else if (_source341.is_BoolBoundedPool) {
          bool _7863_isDatatype = _7409___mcc_h51;
          bool _7864_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7865_field = _7407___mcc_h49;
          DAST._IExpression _7866_on = _7406___mcc_h48;
          {
            if ((_7863_isDatatype) || (_7864_isConstant)) {
              RAST._IExpr _7867_onExpr;
              DCOMP._IOwnership _7868_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7869_recIdents;
              RAST._IExpr _out3718;
              DCOMP._IOwnership _out3719;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3720;
              DCOMP.COMP.GenExpr(_7866_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3718, out _out3719, out _out3720);
              _7867_onExpr = _out3718;
              _7868_onOwned = _out3719;
              _7869_recIdents = _out3720;
              r = ((_7867_onExpr).Sel(DCOMP.__default.escapeIdent(_7865_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3721;
              DCOMP._IOwnership _out3722;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3721, out _out3722);
              r = _out3721;
              resultingOwnership = _out3722;
              readIdents = _7869_recIdents;
            } else {
              RAST._IExpr _7870_onExpr;
              DCOMP._IOwnership _7871_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7872_recIdents;
              RAST._IExpr _out3723;
              DCOMP._IOwnership _out3724;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3725;
              DCOMP.COMP.GenExpr(_7866_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3723, out _out3724, out _out3725);
              _7870_onExpr = _out3723;
              _7871_onOwned = _out3724;
              _7872_recIdents = _out3725;
              r = _7870_onExpr;
              if (!object.Equals(_7870_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7865_field));
              RAST._IExpr _out3726;
              DCOMP._IOwnership _out3727;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3726, out _out3727);
              r = _out3726;
              resultingOwnership = _out3727;
              readIdents = _7872_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SetBoundedPool) {
          DAST._IExpression _7873___mcc_h224 = _source341.dtor_of;
          bool _7874_isDatatype = _7409___mcc_h51;
          bool _7875_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7876_field = _7407___mcc_h49;
          DAST._IExpression _7877_on = _7406___mcc_h48;
          {
            if ((_7874_isDatatype) || (_7875_isConstant)) {
              RAST._IExpr _7878_onExpr;
              DCOMP._IOwnership _7879_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7880_recIdents;
              RAST._IExpr _out3728;
              DCOMP._IOwnership _out3729;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3730;
              DCOMP.COMP.GenExpr(_7877_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3728, out _out3729, out _out3730);
              _7878_onExpr = _out3728;
              _7879_onOwned = _out3729;
              _7880_recIdents = _out3730;
              r = ((_7878_onExpr).Sel(DCOMP.__default.escapeIdent(_7876_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3731;
              DCOMP._IOwnership _out3732;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3731, out _out3732);
              r = _out3731;
              resultingOwnership = _out3732;
              readIdents = _7880_recIdents;
            } else {
              RAST._IExpr _7881_onExpr;
              DCOMP._IOwnership _7882_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7883_recIdents;
              RAST._IExpr _out3733;
              DCOMP._IOwnership _out3734;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3735;
              DCOMP.COMP.GenExpr(_7877_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3733, out _out3734, out _out3735);
              _7881_onExpr = _out3733;
              _7882_onOwned = _out3734;
              _7883_recIdents = _out3735;
              r = _7881_onExpr;
              if (!object.Equals(_7881_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7876_field));
              RAST._IExpr _out3736;
              DCOMP._IOwnership _out3737;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3736, out _out3737);
              r = _out3736;
              resultingOwnership = _out3737;
              readIdents = _7883_recIdents;
            }
            return ;
          }
        } else if (_source341.is_SeqBoundedPool) {
          DAST._IExpression _7884___mcc_h226 = _source341.dtor_of;
          bool _7885___mcc_h227 = _source341.dtor_includeDuplicates;
          bool _7886_isDatatype = _7409___mcc_h51;
          bool _7887_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7888_field = _7407___mcc_h49;
          DAST._IExpression _7889_on = _7406___mcc_h48;
          {
            if ((_7886_isDatatype) || (_7887_isConstant)) {
              RAST._IExpr _7890_onExpr;
              DCOMP._IOwnership _7891_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7892_recIdents;
              RAST._IExpr _out3738;
              DCOMP._IOwnership _out3739;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3740;
              DCOMP.COMP.GenExpr(_7889_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3738, out _out3739, out _out3740);
              _7890_onExpr = _out3738;
              _7891_onOwned = _out3739;
              _7892_recIdents = _out3740;
              r = ((_7890_onExpr).Sel(DCOMP.__default.escapeIdent(_7888_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3741;
              DCOMP._IOwnership _out3742;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3741, out _out3742);
              r = _out3741;
              resultingOwnership = _out3742;
              readIdents = _7892_recIdents;
            } else {
              RAST._IExpr _7893_onExpr;
              DCOMP._IOwnership _7894_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7895_recIdents;
              RAST._IExpr _out3743;
              DCOMP._IOwnership _out3744;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3745;
              DCOMP.COMP.GenExpr(_7889_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3743, out _out3744, out _out3745);
              _7893_onExpr = _out3743;
              _7894_onOwned = _out3744;
              _7895_recIdents = _out3745;
              r = _7893_onExpr;
              if (!object.Equals(_7893_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7888_field));
              RAST._IExpr _out3746;
              DCOMP._IOwnership _out3747;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3746, out _out3747);
              r = _out3746;
              resultingOwnership = _out3747;
              readIdents = _7895_recIdents;
            }
            return ;
          }
        } else {
          DAST._IExpression _7896___mcc_h230 = _source341.dtor_lo;
          DAST._IExpression _7897___mcc_h231 = _source341.dtor_hi;
          bool _7898_isDatatype = _7409___mcc_h51;
          bool _7899_isConstant = _7408___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7900_field = _7407___mcc_h49;
          DAST._IExpression _7901_on = _7406___mcc_h48;
          {
            if ((_7898_isDatatype) || (_7899_isConstant)) {
              RAST._IExpr _7902_onExpr;
              DCOMP._IOwnership _7903_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7904_recIdents;
              RAST._IExpr _out3748;
              DCOMP._IOwnership _out3749;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3750;
              DCOMP.COMP.GenExpr(_7901_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3748, out _out3749, out _out3750);
              _7902_onExpr = _out3748;
              _7903_onOwned = _out3749;
              _7904_recIdents = _out3750;
              r = ((_7902_onExpr).Sel(DCOMP.__default.escapeIdent(_7900_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3751;
              DCOMP._IOwnership _out3752;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3751, out _out3752);
              r = _out3751;
              resultingOwnership = _out3752;
              readIdents = _7904_recIdents;
            } else {
              RAST._IExpr _7905_onExpr;
              DCOMP._IOwnership _7906_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7907_recIdents;
              RAST._IExpr _out3753;
              DCOMP._IOwnership _out3754;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3755;
              DCOMP.COMP.GenExpr(_7901_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3753, out _out3754, out _out3755);
              _7905_onExpr = _out3753;
              _7906_onOwned = _out3754;
              _7907_recIdents = _out3755;
              r = _7905_onExpr;
              if (!object.Equals(_7905_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeIdent(_7900_field));
              RAST._IExpr _out3756;
              DCOMP._IOwnership _out3757;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3756, out _out3757);
              r = _out3756;
              resultingOwnership = _out3757;
              readIdents = _7907_recIdents;
            }
            return ;
          }
        }
      } else if (_source338.is_SelectFn) {
        DAST._IExpression _7908___mcc_h234 = _source338.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7909___mcc_h235 = _source338.dtor_field;
        bool _7910___mcc_h236 = _source338.dtor_onDatatype;
        bool _7911___mcc_h237 = _source338.dtor_isStatic;
        BigInteger _7912___mcc_h238 = _source338.dtor_arity;
        BigInteger _7913_arity = _7912___mcc_h238;
        bool _7914_isStatic = _7911___mcc_h237;
        bool _7915_isDatatype = _7910___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _7916_field = _7909___mcc_h235;
        DAST._IExpression _7917_on = _7908___mcc_h234;
        {
          RAST._IExpr _7918_onExpr;
          DCOMP._IOwnership _7919_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7920_recIdents;
          RAST._IExpr _out3758;
          DCOMP._IOwnership _out3759;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3760;
          DCOMP.COMP.GenExpr(_7917_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3758, out _out3759, out _out3760);
          _7918_onExpr = _out3758;
          _7919_onOwned = _out3759;
          _7920_recIdents = _out3760;
          Dafny.ISequence<Dafny.Rune> _7921_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _7922_onString;
          _7922_onString = (_7918_onExpr)._ToString(DCOMP.__default.IND);
          if (_7914_isStatic) {
            _7921_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7922_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent(_7916_field));
          } else {
            _7921_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _7921_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7921_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _7922_onString), ((object.Equals(_7919_onOwned, DCOMP.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _7923_args;
            _7923_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _7924_i;
            _7924_i = BigInteger.Zero;
            while ((_7924_i) < (_7913_arity)) {
              if ((_7924_i).Sign == 1) {
                _7923_args = Dafny.Sequence<Dafny.Rune>.Concat(_7923_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _7923_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7923_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_7924_i));
              _7924_i = (_7924_i) + (BigInteger.One);
            }
            _7921_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7921_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _7923_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _7921_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7921_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _7916_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _7923_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _7921_s = Dafny.Sequence<Dafny.Rune>.Concat(_7921_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _7921_s = Dafny.Sequence<Dafny.Rune>.Concat(_7921_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _7925_typeShape;
          _7925_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _7926_i;
          _7926_i = BigInteger.Zero;
          while ((_7926_i) < (_7913_arity)) {
            if ((_7926_i).Sign == 1) {
              _7925_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7925_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _7925_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7925_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _7926_i = (_7926_i) + (BigInteger.One);
          }
          _7925_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7925_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _7921_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _7921_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _7925_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_7921_s);
          RAST._IExpr _out3761;
          DCOMP._IOwnership _out3762;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3761, out _out3762);
          r = _out3761;
          resultingOwnership = _out3762;
          readIdents = _7920_recIdents;
          return ;
        }
      } else if (_source338.is_Index) {
        DAST._IExpression _7927___mcc_h239 = _source338.dtor_expr;
        DAST._ICollKind _7928___mcc_h240 = _source338.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _7929___mcc_h241 = _source338.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _7930_indices = _7929___mcc_h241;
        DAST._ICollKind _7931_collKind = _7928___mcc_h240;
        DAST._IExpression _7932_on = _7927___mcc_h239;
        {
          RAST._IExpr _7933_onExpr;
          DCOMP._IOwnership _7934_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7935_recIdents;
          RAST._IExpr _out3763;
          DCOMP._IOwnership _out3764;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3765;
          DCOMP.COMP.GenExpr(_7932_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3763, out _out3764, out _out3765);
          _7933_onExpr = _out3763;
          _7934_onOwned = _out3764;
          _7935_recIdents = _out3765;
          readIdents = _7935_recIdents;
          r = _7933_onExpr;
          BigInteger _7936_i;
          _7936_i = BigInteger.Zero;
          while ((_7936_i) < (new BigInteger((_7930_indices).Count))) {
            if (object.Equals(_7931_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _7937_idx;
            DCOMP._IOwnership _7938_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7939_recIdentsIdx;
            RAST._IExpr _out3766;
            DCOMP._IOwnership _out3767;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3768;
            DCOMP.COMP.GenExpr((_7930_indices).Select(_7936_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3766, out _out3767, out _out3768);
            _7937_idx = _out3766;
            _7938_idxOwned = _out3767;
            _7939_recIdentsIdx = _out3768;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_7937_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7939_recIdentsIdx);
            _7936_i = (_7936_i) + (BigInteger.One);
          }
          RAST._IExpr _out3769;
          DCOMP._IOwnership _out3770;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3769, out _out3770);
          r = _out3769;
          resultingOwnership = _out3770;
          return ;
        }
      } else if (_source338.is_IndexRange) {
        DAST._IExpression _7940___mcc_h242 = _source338.dtor_expr;
        bool _7941___mcc_h243 = _source338.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _7942___mcc_h244 = _source338.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _7943___mcc_h245 = _source338.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _7944_high = _7943___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _7945_low = _7942___mcc_h244;
        bool _7946_isArray = _7941___mcc_h243;
        DAST._IExpression _7947_on = _7940___mcc_h242;
        {
          RAST._IExpr _7948_onExpr;
          DCOMP._IOwnership _7949_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7950_recIdents;
          RAST._IExpr _out3771;
          DCOMP._IOwnership _out3772;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3773;
          DCOMP.COMP.GenExpr(_7947_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3771, out _out3772, out _out3773);
          _7948_onExpr = _out3771;
          _7949_onOwned = _out3772;
          _7950_recIdents = _out3773;
          readIdents = _7950_recIdents;
          Dafny.ISequence<Dafny.Rune> _7951_methodName;
          _7951_methodName = (((_7945_low).is_Some) ? ((((_7944_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_7944_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _7952_arguments;
          _7952_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source342 = _7945_low;
          if (_source342.is_None) {
          } else {
            DAST._IExpression _7953___mcc_h274 = _source342.dtor_value;
            DAST._IExpression _7954_l = _7953___mcc_h274;
            {
              RAST._IExpr _7955_lExpr;
              DCOMP._IOwnership _7956___v142;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7957_recIdentsL;
              RAST._IExpr _out3774;
              DCOMP._IOwnership _out3775;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3776;
              DCOMP.COMP.GenExpr(_7954_l, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3774, out _out3775, out _out3776);
              _7955_lExpr = _out3774;
              _7956___v142 = _out3775;
              _7957_recIdentsL = _out3776;
              _7952_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7952_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7955_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7957_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source343 = _7944_high;
          if (_source343.is_None) {
          } else {
            DAST._IExpression _7958___mcc_h275 = _source343.dtor_value;
            DAST._IExpression _7959_h = _7958___mcc_h275;
            {
              RAST._IExpr _7960_hExpr;
              DCOMP._IOwnership _7961___v143;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7962_recIdentsH;
              RAST._IExpr _out3777;
              DCOMP._IOwnership _out3778;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3779;
              DCOMP.COMP.GenExpr(_7959_h, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3777, out _out3778, out _out3779);
              _7960_hExpr = _out3777;
              _7961___v143 = _out3778;
              _7962_recIdentsH = _out3779;
              _7952_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7952_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7960_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7962_recIdentsH);
            }
          }
          r = _7948_onExpr;
          if (_7946_isArray) {
            if (!(_7951_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _7951_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _7951_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _7951_methodName))).Apply(_7952_arguments);
          } else {
            if (!(_7951_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_7951_methodName)).Apply(_7952_arguments);
            }
          }
          RAST._IExpr _out3780;
          DCOMP._IOwnership _out3781;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3780, out _out3781);
          r = _out3780;
          resultingOwnership = _out3781;
          return ;
        }
      } else if (_source338.is_TupleSelect) {
        DAST._IExpression _7963___mcc_h246 = _source338.dtor_expr;
        BigInteger _7964___mcc_h247 = _source338.dtor_index;
        BigInteger _7965_idx = _7964___mcc_h247;
        DAST._IExpression _7966_on = _7963___mcc_h246;
        {
          RAST._IExpr _7967_onExpr;
          DCOMP._IOwnership _7968_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7969_recIdents;
          RAST._IExpr _out3782;
          DCOMP._IOwnership _out3783;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3784;
          DCOMP.COMP.GenExpr(_7966_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3782, out _out3783, out _out3784);
          _7967_onExpr = _out3782;
          _7968_onOwnership = _out3783;
          _7969_recIdents = _out3784;
          r = (_7967_onExpr).Sel(Std.Strings.__default.OfNat(_7965_idx));
          RAST._IExpr _out3785;
          DCOMP._IOwnership _out3786;
          DCOMP.COMP.FromOwnership(r, _7968_onOwnership, expectedOwnership, out _out3785, out _out3786);
          r = _out3785;
          resultingOwnership = _out3786;
          readIdents = _7969_recIdents;
          return ;
        }
      } else if (_source338.is_Call) {
        DAST._IExpression _7970___mcc_h248 = _source338.dtor_on;
        DAST._ICallName _7971___mcc_h249 = _source338.dtor_callName;
        Dafny.ISequence<DAST._IType> _7972___mcc_h250 = _source338.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _7973___mcc_h251 = _source338.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7974_args = _7973___mcc_h251;
        Dafny.ISequence<DAST._IType> _7975_typeArgs = _7972___mcc_h250;
        DAST._ICallName _7976_name = _7971___mcc_h249;
        DAST._IExpression _7977_on = _7970___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _7978_onExpr;
          DCOMP._IOwnership _7979___v144;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7980_recIdents;
          RAST._IExpr _out3787;
          DCOMP._IOwnership _out3788;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3789;
          DCOMP.COMP.GenExpr(_7977_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3787, out _out3788, out _out3789);
          _7978_onExpr = _out3787;
          _7979___v144 = _out3788;
          _7980_recIdents = _out3789;
          Dafny.ISequence<RAST._IType> _7981_typeExprs;
          _7981_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_7975_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi19 = new BigInteger((_7975_typeArgs).Count);
            for (BigInteger _7982_typeI = BigInteger.Zero; _7982_typeI < _hi19; _7982_typeI++) {
              RAST._IType _7983_typeExpr;
              RAST._IType _out3790;
              _out3790 = DCOMP.COMP.GenType((_7975_typeArgs).Select(_7982_typeI), false, false);
              _7983_typeExpr = _out3790;
              _7981_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_7981_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_7983_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _7984_argExprs;
          _7984_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi20 = new BigInteger((_7974_args).Count);
          for (BigInteger _7985_i = BigInteger.Zero; _7985_i < _hi20; _7985_i++) {
            DCOMP._IOwnership _7986_argOwnership;
            _7986_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_7976_name).is_Name) && ((_7985_i) < (new BigInteger((((_7976_name).dtor_signature)).Count)))) {
              RAST._IType _7987_tpe;
              RAST._IType _out3791;
              _out3791 = DCOMP.COMP.GenType(((((_7976_name).dtor_signature)).Select(_7985_i)).dtor_typ, false, false);
              _7987_tpe = _out3791;
              if ((_7987_tpe).HasCopySemantics()) {
                _7986_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _7988_argExpr;
            DCOMP._IOwnership _7989___v145;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7990_argIdents;
            RAST._IExpr _out3792;
            DCOMP._IOwnership _out3793;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3794;
            DCOMP.COMP.GenExpr((_7974_args).Select(_7985_i), selfIdent, env, _7986_argOwnership, out _out3792, out _out3793, out _out3794);
            _7988_argExpr = _out3792;
            _7989___v145 = _out3793;
            _7990_argIdents = _out3794;
            _7984_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_7984_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_7988_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7990_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7980_recIdents);
          Dafny.ISequence<Dafny.Rune> _7991_renderedName;
          _7991_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source344) => {
            if (_source344.is_Name) {
              Dafny.ISequence<Dafny.Rune> _7992___mcc_h276 = _source344.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _7993___mcc_h277 = _source344.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _7994___mcc_h278 = _source344.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _7995_ident = _7992___mcc_h276;
              return DCOMP.__default.escapeIdent(_7995_ident);
            } else if (_source344.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source344.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source344.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_7976_name);
          DAST._IExpression _source345 = _7977_on;
          if (_source345.is_Literal) {
            DAST._ILiteral _7996___mcc_h279 = _source345.dtor_Literal_a0;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source346 = _7976_name;
                if (_source346.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _7997___mcc_h461 = _source346.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _7998___mcc_h462 = _source346.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _7999___mcc_h463 = _source346.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source347 = _7998___mcc_h462;
                  if (_source347.is_None) {
                  } else {
                    DAST._IType _8000___mcc_h467 = _source347.dtor_value;
                    DAST._IType _8001_tpe = _8000___mcc_h467;
                    RAST._IType _8002_typ;
                    RAST._IType _out3795;
                    _out3795 = DCOMP.COMP.GenType(_8001_tpe, false, false);
                    _8002_typ = _out3795;
                    if (((_8002_typ).is_Pointer) || ((_8002_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source346.is_MapBuilderAdd) {
                } else if (_source346.is_MapBuilderBuild) {
                } else if (_source346.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _8003___mcc_h281 = _source345.dtor_Ident_a0;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source348 = _7976_name;
                if (_source348.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8004___mcc_h469 = _source348.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8005___mcc_h470 = _source348.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8006___mcc_h471 = _source348.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source349 = _8005___mcc_h470;
                  if (_source349.is_None) {
                  } else {
                    DAST._IType _8007___mcc_h475 = _source349.dtor_value;
                    DAST._IType _8008_tpe = _8007___mcc_h475;
                    RAST._IType _8009_typ;
                    RAST._IType _out3796;
                    _out3796 = DCOMP.COMP.GenType(_8008_tpe, false, false);
                    _8009_typ = _out3796;
                    if (((_8009_typ).is_Pointer) || ((_8009_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source348.is_MapBuilderAdd) {
                } else if (_source348.is_MapBuilderBuild) {
                } else if (_source348.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8010___mcc_h283 = _source345.dtor_Companion_a0;
            {
              _7978_onExpr = (_7978_onExpr).MSel(_7991_renderedName);
            }
          } else if (_source345.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _8011___mcc_h285 = _source345.dtor_Tuple_a0;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source350 = _7976_name;
                if (_source350.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8012___mcc_h477 = _source350.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8013___mcc_h478 = _source350.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8014___mcc_h479 = _source350.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source351 = _8013___mcc_h478;
                  if (_source351.is_None) {
                  } else {
                    DAST._IType _8015___mcc_h483 = _source351.dtor_value;
                    DAST._IType _8016_tpe = _8015___mcc_h483;
                    RAST._IType _8017_typ;
                    RAST._IType _out3797;
                    _out3797 = DCOMP.COMP.GenType(_8016_tpe, false, false);
                    _8017_typ = _out3797;
                    if (((_8017_typ).is_Pointer) || ((_8017_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source350.is_MapBuilderAdd) {
                } else if (_source350.is_MapBuilderBuild) {
                } else if (_source350.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8018___mcc_h287 = _source345.dtor_path;
            Dafny.ISequence<DAST._IType> _8019___mcc_h288 = _source345.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _8020___mcc_h289 = _source345.dtor_args;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source352 = _7976_name;
                if (_source352.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8021___mcc_h485 = _source352.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8022___mcc_h486 = _source352.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8023___mcc_h487 = _source352.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source353 = _8022___mcc_h486;
                  if (_source353.is_None) {
                  } else {
                    DAST._IType _8024___mcc_h491 = _source353.dtor_value;
                    DAST._IType _8025_tpe = _8024___mcc_h491;
                    RAST._IType _8026_typ;
                    RAST._IType _out3798;
                    _out3798 = DCOMP.COMP.GenType(_8025_tpe, false, false);
                    _8026_typ = _out3798;
                    if (((_8026_typ).is_Pointer) || ((_8026_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source352.is_MapBuilderAdd) {
                } else if (_source352.is_MapBuilderBuild) {
                } else if (_source352.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _8027___mcc_h293 = _source345.dtor_dims;
            DAST._IType _8028___mcc_h294 = _source345.dtor_typ;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source354 = _7976_name;
                if (_source354.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8029___mcc_h493 = _source354.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8030___mcc_h494 = _source354.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8031___mcc_h495 = _source354.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source355 = _8030___mcc_h494;
                  if (_source355.is_None) {
                  } else {
                    DAST._IType _8032___mcc_h499 = _source355.dtor_value;
                    DAST._IType _8033_tpe = _8032___mcc_h499;
                    RAST._IType _8034_typ;
                    RAST._IType _out3799;
                    _out3799 = DCOMP.COMP.GenType(_8033_tpe, false, false);
                    _8034_typ = _out3799;
                    if (((_8034_typ).is_Pointer) || ((_8034_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source354.is_MapBuilderAdd) {
                } else if (_source354.is_MapBuilderBuild) {
                } else if (_source354.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_DatatypeValue) {
            DAST._IDatatypeType _8035___mcc_h297 = _source345.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _8036___mcc_h298 = _source345.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _8037___mcc_h299 = _source345.dtor_variant;
            bool _8038___mcc_h300 = _source345.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _8039___mcc_h301 = _source345.dtor_contents;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source356 = _7976_name;
                if (_source356.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8040___mcc_h501 = _source356.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8041___mcc_h502 = _source356.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8042___mcc_h503 = _source356.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source357 = _8041___mcc_h502;
                  if (_source357.is_None) {
                  } else {
                    DAST._IType _8043___mcc_h507 = _source357.dtor_value;
                    DAST._IType _8044_tpe = _8043___mcc_h507;
                    RAST._IType _8045_typ;
                    RAST._IType _out3800;
                    _out3800 = DCOMP.COMP.GenType(_8044_tpe, false, false);
                    _8045_typ = _out3800;
                    if (((_8045_typ).is_Pointer) || ((_8045_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source356.is_MapBuilderAdd) {
                } else if (_source356.is_MapBuilderBuild) {
                } else if (_source356.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Convert) {
            DAST._IExpression _8046___mcc_h307 = _source345.dtor_value;
            DAST._IType _8047___mcc_h308 = _source345.dtor_from;
            DAST._IType _8048___mcc_h309 = _source345.dtor_typ;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source358 = _7976_name;
                if (_source358.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8049___mcc_h509 = _source358.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8050___mcc_h510 = _source358.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8051___mcc_h511 = _source358.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source359 = _8050___mcc_h510;
                  if (_source359.is_None) {
                  } else {
                    DAST._IType _8052___mcc_h515 = _source359.dtor_value;
                    DAST._IType _8053_tpe = _8052___mcc_h515;
                    RAST._IType _8054_typ;
                    RAST._IType _out3801;
                    _out3801 = DCOMP.COMP.GenType(_8053_tpe, false, false);
                    _8054_typ = _out3801;
                    if (((_8054_typ).is_Pointer) || ((_8054_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source358.is_MapBuilderAdd) {
                } else if (_source358.is_MapBuilderBuild) {
                } else if (_source358.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SeqConstruct) {
            DAST._IExpression _8055___mcc_h313 = _source345.dtor_length;
            DAST._IExpression _8056___mcc_h314 = _source345.dtor_elem;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source360 = _7976_name;
                if (_source360.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8057___mcc_h517 = _source360.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8058___mcc_h518 = _source360.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8059___mcc_h519 = _source360.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source361 = _8058___mcc_h518;
                  if (_source361.is_None) {
                  } else {
                    DAST._IType _8060___mcc_h523 = _source361.dtor_value;
                    DAST._IType _8061_tpe = _8060___mcc_h523;
                    RAST._IType _8062_typ;
                    RAST._IType _out3802;
                    _out3802 = DCOMP.COMP.GenType(_8061_tpe, false, false);
                    _8062_typ = _out3802;
                    if (((_8062_typ).is_Pointer) || ((_8062_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source360.is_MapBuilderAdd) {
                } else if (_source360.is_MapBuilderBuild) {
                } else if (_source360.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _8063___mcc_h317 = _source345.dtor_elements;
            DAST._IType _8064___mcc_h318 = _source345.dtor_typ;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source362 = _7976_name;
                if (_source362.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8065___mcc_h525 = _source362.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8066___mcc_h526 = _source362.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8067___mcc_h527 = _source362.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source363 = _8066___mcc_h526;
                  if (_source363.is_None) {
                  } else {
                    DAST._IType _8068___mcc_h531 = _source363.dtor_value;
                    DAST._IType _8069_tpe = _8068___mcc_h531;
                    RAST._IType _8070_typ;
                    RAST._IType _out3803;
                    _out3803 = DCOMP.COMP.GenType(_8069_tpe, false, false);
                    _8070_typ = _out3803;
                    if (((_8070_typ).is_Pointer) || ((_8070_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source362.is_MapBuilderAdd) {
                } else if (_source362.is_MapBuilderBuild) {
                } else if (_source362.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _8071___mcc_h321 = _source345.dtor_elements;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source364 = _7976_name;
                if (_source364.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8072___mcc_h533 = _source364.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8073___mcc_h534 = _source364.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8074___mcc_h535 = _source364.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source365 = _8073___mcc_h534;
                  if (_source365.is_None) {
                  } else {
                    DAST._IType _8075___mcc_h539 = _source365.dtor_value;
                    DAST._IType _8076_tpe = _8075___mcc_h539;
                    RAST._IType _8077_typ;
                    RAST._IType _out3804;
                    _out3804 = DCOMP.COMP.GenType(_8076_tpe, false, false);
                    _8077_typ = _out3804;
                    if (((_8077_typ).is_Pointer) || ((_8077_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source364.is_MapBuilderAdd) {
                } else if (_source364.is_MapBuilderBuild) {
                } else if (_source364.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _8078___mcc_h323 = _source345.dtor_elements;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source366 = _7976_name;
                if (_source366.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8079___mcc_h541 = _source366.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8080___mcc_h542 = _source366.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8081___mcc_h543 = _source366.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source367 = _8080___mcc_h542;
                  if (_source367.is_None) {
                  } else {
                    DAST._IType _8082___mcc_h547 = _source367.dtor_value;
                    DAST._IType _8083_tpe = _8082___mcc_h547;
                    RAST._IType _8084_typ;
                    RAST._IType _out3805;
                    _out3805 = DCOMP.COMP.GenType(_8083_tpe, false, false);
                    _8084_typ = _out3805;
                    if (((_8084_typ).is_Pointer) || ((_8084_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source366.is_MapBuilderAdd) {
                } else if (_source366.is_MapBuilderBuild) {
                } else if (_source366.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _8085___mcc_h325 = _source345.dtor_mapElems;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source368 = _7976_name;
                if (_source368.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8086___mcc_h549 = _source368.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8087___mcc_h550 = _source368.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8088___mcc_h551 = _source368.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source369 = _8087___mcc_h550;
                  if (_source369.is_None) {
                  } else {
                    DAST._IType _8089___mcc_h555 = _source369.dtor_value;
                    DAST._IType _8090_tpe = _8089___mcc_h555;
                    RAST._IType _8091_typ;
                    RAST._IType _out3806;
                    _out3806 = DCOMP.COMP.GenType(_8090_tpe, false, false);
                    _8091_typ = _out3806;
                    if (((_8091_typ).is_Pointer) || ((_8091_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source368.is_MapBuilderAdd) {
                } else if (_source368.is_MapBuilderBuild) {
                } else if (_source368.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_MapBuilder) {
            DAST._IType _8092___mcc_h327 = _source345.dtor_keyType;
            DAST._IType _8093___mcc_h328 = _source345.dtor_valueType;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source370 = _7976_name;
                if (_source370.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8094___mcc_h557 = _source370.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8095___mcc_h558 = _source370.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8096___mcc_h559 = _source370.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source371 = _8095___mcc_h558;
                  if (_source371.is_None) {
                  } else {
                    DAST._IType _8097___mcc_h563 = _source371.dtor_value;
                    DAST._IType _8098_tpe = _8097___mcc_h563;
                    RAST._IType _8099_typ;
                    RAST._IType _out3807;
                    _out3807 = DCOMP.COMP.GenType(_8098_tpe, false, false);
                    _8099_typ = _out3807;
                    if (((_8099_typ).is_Pointer) || ((_8099_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source370.is_MapBuilderAdd) {
                } else if (_source370.is_MapBuilderBuild) {
                } else if (_source370.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SeqUpdate) {
            DAST._IExpression _8100___mcc_h331 = _source345.dtor_expr;
            DAST._IExpression _8101___mcc_h332 = _source345.dtor_indexExpr;
            DAST._IExpression _8102___mcc_h333 = _source345.dtor_value;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source372 = _7976_name;
                if (_source372.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8103___mcc_h565 = _source372.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8104___mcc_h566 = _source372.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8105___mcc_h567 = _source372.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source373 = _8104___mcc_h566;
                  if (_source373.is_None) {
                  } else {
                    DAST._IType _8106___mcc_h571 = _source373.dtor_value;
                    DAST._IType _8107_tpe = _8106___mcc_h571;
                    RAST._IType _8108_typ;
                    RAST._IType _out3808;
                    _out3808 = DCOMP.COMP.GenType(_8107_tpe, false, false);
                    _8108_typ = _out3808;
                    if (((_8108_typ).is_Pointer) || ((_8108_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source372.is_MapBuilderAdd) {
                } else if (_source372.is_MapBuilderBuild) {
                } else if (_source372.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_MapUpdate) {
            DAST._IExpression _8109___mcc_h337 = _source345.dtor_expr;
            DAST._IExpression _8110___mcc_h338 = _source345.dtor_indexExpr;
            DAST._IExpression _8111___mcc_h339 = _source345.dtor_value;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source374 = _7976_name;
                if (_source374.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8112___mcc_h573 = _source374.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8113___mcc_h574 = _source374.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8114___mcc_h575 = _source374.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source375 = _8113___mcc_h574;
                  if (_source375.is_None) {
                  } else {
                    DAST._IType _8115___mcc_h579 = _source375.dtor_value;
                    DAST._IType _8116_tpe = _8115___mcc_h579;
                    RAST._IType _8117_typ;
                    RAST._IType _out3809;
                    _out3809 = DCOMP.COMP.GenType(_8116_tpe, false, false);
                    _8117_typ = _out3809;
                    if (((_8117_typ).is_Pointer) || ((_8117_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source374.is_MapBuilderAdd) {
                } else if (_source374.is_MapBuilderBuild) {
                } else if (_source374.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SetBuilder) {
            DAST._IType _8118___mcc_h343 = _source345.dtor_elemType;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source376 = _7976_name;
                if (_source376.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8119___mcc_h581 = _source376.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8120___mcc_h582 = _source376.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8121___mcc_h583 = _source376.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source377 = _8120___mcc_h582;
                  if (_source377.is_None) {
                  } else {
                    DAST._IType _8122___mcc_h587 = _source377.dtor_value;
                    DAST._IType _8123_tpe = _8122___mcc_h587;
                    RAST._IType _8124_typ;
                    RAST._IType _out3810;
                    _out3810 = DCOMP.COMP.GenType(_8123_tpe, false, false);
                    _8124_typ = _out3810;
                    if (((_8124_typ).is_Pointer) || ((_8124_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source376.is_MapBuilderAdd) {
                } else if (_source376.is_MapBuilderBuild) {
                } else if (_source376.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_ToMultiset) {
            DAST._IExpression _8125___mcc_h345 = _source345.dtor_ToMultiset_a0;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source378 = _7976_name;
                if (_source378.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8126___mcc_h589 = _source378.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8127___mcc_h590 = _source378.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8128___mcc_h591 = _source378.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source379 = _8127___mcc_h590;
                  if (_source379.is_None) {
                  } else {
                    DAST._IType _8129___mcc_h595 = _source379.dtor_value;
                    DAST._IType _8130_tpe = _8129___mcc_h595;
                    RAST._IType _8131_typ;
                    RAST._IType _out3811;
                    _out3811 = DCOMP.COMP.GenType(_8130_tpe, false, false);
                    _8131_typ = _out3811;
                    if (((_8131_typ).is_Pointer) || ((_8131_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source378.is_MapBuilderAdd) {
                } else if (_source378.is_MapBuilderBuild) {
                } else if (_source378.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_This) {
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source380 = _7976_name;
                if (_source380.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8132___mcc_h597 = _source380.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8133___mcc_h598 = _source380.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8134___mcc_h599 = _source380.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source381 = _8133___mcc_h598;
                  if (_source381.is_None) {
                  } else {
                    DAST._IType _8135___mcc_h603 = _source381.dtor_value;
                    DAST._IType _8136_tpe = _8135___mcc_h603;
                    RAST._IType _8137_typ;
                    RAST._IType _out3812;
                    _out3812 = DCOMP.COMP.GenType(_8136_tpe, false, false);
                    _8137_typ = _out3812;
                    if (((_8137_typ).is_Pointer) || ((_8137_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source380.is_MapBuilderAdd) {
                } else if (_source380.is_MapBuilderBuild) {
                } else if (_source380.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Ite) {
            DAST._IExpression _8138___mcc_h347 = _source345.dtor_cond;
            DAST._IExpression _8139___mcc_h348 = _source345.dtor_thn;
            DAST._IExpression _8140___mcc_h349 = _source345.dtor_els;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source382 = _7976_name;
                if (_source382.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8141___mcc_h605 = _source382.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8142___mcc_h606 = _source382.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8143___mcc_h607 = _source382.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source383 = _8142___mcc_h606;
                  if (_source383.is_None) {
                  } else {
                    DAST._IType _8144___mcc_h611 = _source383.dtor_value;
                    DAST._IType _8145_tpe = _8144___mcc_h611;
                    RAST._IType _8146_typ;
                    RAST._IType _out3813;
                    _out3813 = DCOMP.COMP.GenType(_8145_tpe, false, false);
                    _8146_typ = _out3813;
                    if (((_8146_typ).is_Pointer) || ((_8146_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source382.is_MapBuilderAdd) {
                } else if (_source382.is_MapBuilderBuild) {
                } else if (_source382.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_UnOp) {
            DAST._IUnaryOp _8147___mcc_h353 = _source345.dtor_unOp;
            DAST._IExpression _8148___mcc_h354 = _source345.dtor_expr;
            DAST.Format._IUnOpFormat _8149___mcc_h355 = _source345.dtor_format1;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source384 = _7976_name;
                if (_source384.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8150___mcc_h613 = _source384.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8151___mcc_h614 = _source384.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8152___mcc_h615 = _source384.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source385 = _8151___mcc_h614;
                  if (_source385.is_None) {
                  } else {
                    DAST._IType _8153___mcc_h619 = _source385.dtor_value;
                    DAST._IType _8154_tpe = _8153___mcc_h619;
                    RAST._IType _8155_typ;
                    RAST._IType _out3814;
                    _out3814 = DCOMP.COMP.GenType(_8154_tpe, false, false);
                    _8155_typ = _out3814;
                    if (((_8155_typ).is_Pointer) || ((_8155_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source384.is_MapBuilderAdd) {
                } else if (_source384.is_MapBuilderBuild) {
                } else if (_source384.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_BinOp) {
            DAST._IBinOp _8156___mcc_h359 = _source345.dtor_op;
            DAST._IExpression _8157___mcc_h360 = _source345.dtor_left;
            DAST._IExpression _8158___mcc_h361 = _source345.dtor_right;
            DAST.Format._IBinOpFormat _8159___mcc_h362 = _source345.dtor_format2;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source386 = _7976_name;
                if (_source386.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8160___mcc_h621 = _source386.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8161___mcc_h622 = _source386.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8162___mcc_h623 = _source386.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source387 = _8161___mcc_h622;
                  if (_source387.is_None) {
                  } else {
                    DAST._IType _8163___mcc_h627 = _source387.dtor_value;
                    DAST._IType _8164_tpe = _8163___mcc_h627;
                    RAST._IType _8165_typ;
                    RAST._IType _out3815;
                    _out3815 = DCOMP.COMP.GenType(_8164_tpe, false, false);
                    _8165_typ = _out3815;
                    if (((_8165_typ).is_Pointer) || ((_8165_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source386.is_MapBuilderAdd) {
                } else if (_source386.is_MapBuilderBuild) {
                } else if (_source386.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_ArrayLen) {
            DAST._IExpression _8166___mcc_h367 = _source345.dtor_expr;
            BigInteger _8167___mcc_h368 = _source345.dtor_dim;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source388 = _7976_name;
                if (_source388.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8168___mcc_h629 = _source388.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8169___mcc_h630 = _source388.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8170___mcc_h631 = _source388.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source389 = _8169___mcc_h630;
                  if (_source389.is_None) {
                  } else {
                    DAST._IType _8171___mcc_h635 = _source389.dtor_value;
                    DAST._IType _8172_tpe = _8171___mcc_h635;
                    RAST._IType _8173_typ;
                    RAST._IType _out3816;
                    _out3816 = DCOMP.COMP.GenType(_8172_tpe, false, false);
                    _8173_typ = _out3816;
                    if (((_8173_typ).is_Pointer) || ((_8173_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source388.is_MapBuilderAdd) {
                } else if (_source388.is_MapBuilderBuild) {
                } else if (_source388.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_MapKeys) {
            DAST._IExpression _8174___mcc_h371 = _source345.dtor_expr;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source390 = _7976_name;
                if (_source390.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8175___mcc_h637 = _source390.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8176___mcc_h638 = _source390.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8177___mcc_h639 = _source390.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source391 = _8176___mcc_h638;
                  if (_source391.is_None) {
                  } else {
                    DAST._IType _8178___mcc_h643 = _source391.dtor_value;
                    DAST._IType _8179_tpe = _8178___mcc_h643;
                    RAST._IType _8180_typ;
                    RAST._IType _out3817;
                    _out3817 = DCOMP.COMP.GenType(_8179_tpe, false, false);
                    _8180_typ = _out3817;
                    if (((_8180_typ).is_Pointer) || ((_8180_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source390.is_MapBuilderAdd) {
                } else if (_source390.is_MapBuilderBuild) {
                } else if (_source390.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_MapValues) {
            DAST._IExpression _8181___mcc_h373 = _source345.dtor_expr;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source392 = _7976_name;
                if (_source392.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8182___mcc_h645 = _source392.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8183___mcc_h646 = _source392.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8184___mcc_h647 = _source392.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source393 = _8183___mcc_h646;
                  if (_source393.is_None) {
                  } else {
                    DAST._IType _8185___mcc_h651 = _source393.dtor_value;
                    DAST._IType _8186_tpe = _8185___mcc_h651;
                    RAST._IType _8187_typ;
                    RAST._IType _out3818;
                    _out3818 = DCOMP.COMP.GenType(_8186_tpe, false, false);
                    _8187_typ = _out3818;
                    if (((_8187_typ).is_Pointer) || ((_8187_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source392.is_MapBuilderAdd) {
                } else if (_source392.is_MapBuilderBuild) {
                } else if (_source392.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Select) {
            DAST._IExpression _8188___mcc_h375 = _source345.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _8189___mcc_h376 = _source345.dtor_field;
            bool _8190___mcc_h377 = _source345.dtor_isConstant;
            bool _8191___mcc_h378 = _source345.dtor_onDatatype;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source394 = _7976_name;
                if (_source394.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8192___mcc_h653 = _source394.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8193___mcc_h654 = _source394.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8194___mcc_h655 = _source394.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source395 = _8193___mcc_h654;
                  if (_source395.is_None) {
                  } else {
                    DAST._IType _8195___mcc_h659 = _source395.dtor_value;
                    DAST._IType _8196_tpe = _8195___mcc_h659;
                    RAST._IType _8197_typ;
                    RAST._IType _out3819;
                    _out3819 = DCOMP.COMP.GenType(_8196_tpe, false, false);
                    _8197_typ = _out3819;
                    if (((_8197_typ).is_Pointer) || ((_8197_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source394.is_MapBuilderAdd) {
                } else if (_source394.is_MapBuilderBuild) {
                } else if (_source394.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SelectFn) {
            DAST._IExpression _8198___mcc_h383 = _source345.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _8199___mcc_h384 = _source345.dtor_field;
            bool _8200___mcc_h385 = _source345.dtor_onDatatype;
            bool _8201___mcc_h386 = _source345.dtor_isStatic;
            BigInteger _8202___mcc_h387 = _source345.dtor_arity;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source396 = _7976_name;
                if (_source396.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8203___mcc_h661 = _source396.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8204___mcc_h662 = _source396.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8205___mcc_h663 = _source396.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source397 = _8204___mcc_h662;
                  if (_source397.is_None) {
                  } else {
                    DAST._IType _8206___mcc_h667 = _source397.dtor_value;
                    DAST._IType _8207_tpe = _8206___mcc_h667;
                    RAST._IType _8208_typ;
                    RAST._IType _out3820;
                    _out3820 = DCOMP.COMP.GenType(_8207_tpe, false, false);
                    _8208_typ = _out3820;
                    if (((_8208_typ).is_Pointer) || ((_8208_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source396.is_MapBuilderAdd) {
                } else if (_source396.is_MapBuilderBuild) {
                } else if (_source396.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Index) {
            DAST._IExpression _8209___mcc_h393 = _source345.dtor_expr;
            DAST._ICollKind _8210___mcc_h394 = _source345.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _8211___mcc_h395 = _source345.dtor_indices;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source398 = _7976_name;
                if (_source398.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8212___mcc_h669 = _source398.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8213___mcc_h670 = _source398.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8214___mcc_h671 = _source398.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source399 = _8213___mcc_h670;
                  if (_source399.is_None) {
                  } else {
                    DAST._IType _8215___mcc_h675 = _source399.dtor_value;
                    DAST._IType _8216_tpe = _8215___mcc_h675;
                    RAST._IType _8217_typ;
                    RAST._IType _out3821;
                    _out3821 = DCOMP.COMP.GenType(_8216_tpe, false, false);
                    _8217_typ = _out3821;
                    if (((_8217_typ).is_Pointer) || ((_8217_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source398.is_MapBuilderAdd) {
                } else if (_source398.is_MapBuilderBuild) {
                } else if (_source398.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_IndexRange) {
            DAST._IExpression _8218___mcc_h399 = _source345.dtor_expr;
            bool _8219___mcc_h400 = _source345.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _8220___mcc_h401 = _source345.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _8221___mcc_h402 = _source345.dtor_high;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source400 = _7976_name;
                if (_source400.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8222___mcc_h677 = _source400.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8223___mcc_h678 = _source400.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8224___mcc_h679 = _source400.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source401 = _8223___mcc_h678;
                  if (_source401.is_None) {
                  } else {
                    DAST._IType _8225___mcc_h683 = _source401.dtor_value;
                    DAST._IType _8226_tpe = _8225___mcc_h683;
                    RAST._IType _8227_typ;
                    RAST._IType _out3822;
                    _out3822 = DCOMP.COMP.GenType(_8226_tpe, false, false);
                    _8227_typ = _out3822;
                    if (((_8227_typ).is_Pointer) || ((_8227_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source400.is_MapBuilderAdd) {
                } else if (_source400.is_MapBuilderBuild) {
                } else if (_source400.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_TupleSelect) {
            DAST._IExpression _8228___mcc_h407 = _source345.dtor_expr;
            BigInteger _8229___mcc_h408 = _source345.dtor_index;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source402 = _7976_name;
                if (_source402.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8230___mcc_h685 = _source402.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8231___mcc_h686 = _source402.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8232___mcc_h687 = _source402.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source403 = _8231___mcc_h686;
                  if (_source403.is_None) {
                  } else {
                    DAST._IType _8233___mcc_h691 = _source403.dtor_value;
                    DAST._IType _8234_tpe = _8233___mcc_h691;
                    RAST._IType _8235_typ;
                    RAST._IType _out3823;
                    _out3823 = DCOMP.COMP.GenType(_8234_tpe, false, false);
                    _8235_typ = _out3823;
                    if (((_8235_typ).is_Pointer) || ((_8235_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source402.is_MapBuilderAdd) {
                } else if (_source402.is_MapBuilderBuild) {
                } else if (_source402.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Call) {
            DAST._IExpression _8236___mcc_h411 = _source345.dtor_on;
            DAST._ICallName _8237___mcc_h412 = _source345.dtor_callName;
            Dafny.ISequence<DAST._IType> _8238___mcc_h413 = _source345.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _8239___mcc_h414 = _source345.dtor_args;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source404 = _7976_name;
                if (_source404.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8240___mcc_h693 = _source404.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8241___mcc_h694 = _source404.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8242___mcc_h695 = _source404.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source405 = _8241___mcc_h694;
                  if (_source405.is_None) {
                  } else {
                    DAST._IType _8243___mcc_h699 = _source405.dtor_value;
                    DAST._IType _8244_tpe = _8243___mcc_h699;
                    RAST._IType _8245_typ;
                    RAST._IType _out3824;
                    _out3824 = DCOMP.COMP.GenType(_8244_tpe, false, false);
                    _8245_typ = _out3824;
                    if (((_8245_typ).is_Pointer) || ((_8245_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source404.is_MapBuilderAdd) {
                } else if (_source404.is_MapBuilderBuild) {
                } else if (_source404.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _8246___mcc_h419 = _source345.dtor_params;
            DAST._IType _8247___mcc_h420 = _source345.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _8248___mcc_h421 = _source345.dtor_body;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source406 = _7976_name;
                if (_source406.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8249___mcc_h701 = _source406.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8250___mcc_h702 = _source406.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8251___mcc_h703 = _source406.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source407 = _8250___mcc_h702;
                  if (_source407.is_None) {
                  } else {
                    DAST._IType _8252___mcc_h707 = _source407.dtor_value;
                    DAST._IType _8253_tpe = _8252___mcc_h707;
                    RAST._IType _8254_typ;
                    RAST._IType _out3825;
                    _out3825 = DCOMP.COMP.GenType(_8253_tpe, false, false);
                    _8254_typ = _out3825;
                    if (((_8254_typ).is_Pointer) || ((_8254_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source406.is_MapBuilderAdd) {
                } else if (_source406.is_MapBuilderBuild) {
                } else if (_source406.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8255___mcc_h425 = _source345.dtor_values;
            DAST._IType _8256___mcc_h426 = _source345.dtor_retType;
            DAST._IExpression _8257___mcc_h427 = _source345.dtor_expr;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source408 = _7976_name;
                if (_source408.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8258___mcc_h709 = _source408.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8259___mcc_h710 = _source408.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8260___mcc_h711 = _source408.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source409 = _8259___mcc_h710;
                  if (_source409.is_None) {
                  } else {
                    DAST._IType _8261___mcc_h715 = _source409.dtor_value;
                    DAST._IType _8262_tpe = _8261___mcc_h715;
                    RAST._IType _8263_typ;
                    RAST._IType _out3826;
                    _out3826 = DCOMP.COMP.GenType(_8262_tpe, false, false);
                    _8263_typ = _out3826;
                    if (((_8263_typ).is_Pointer) || ((_8263_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source408.is_MapBuilderAdd) {
                } else if (_source408.is_MapBuilderBuild) {
                } else if (_source408.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _8264___mcc_h431 = _source345.dtor_name;
            DAST._IType _8265___mcc_h432 = _source345.dtor_typ;
            DAST._IExpression _8266___mcc_h433 = _source345.dtor_value;
            DAST._IExpression _8267___mcc_h434 = _source345.dtor_iifeBody;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source410 = _7976_name;
                if (_source410.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8268___mcc_h717 = _source410.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8269___mcc_h718 = _source410.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8270___mcc_h719 = _source410.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source411 = _8269___mcc_h718;
                  if (_source411.is_None) {
                  } else {
                    DAST._IType _8271___mcc_h723 = _source411.dtor_value;
                    DAST._IType _8272_tpe = _8271___mcc_h723;
                    RAST._IType _8273_typ;
                    RAST._IType _out3827;
                    _out3827 = DCOMP.COMP.GenType(_8272_tpe, false, false);
                    _8273_typ = _out3827;
                    if (((_8273_typ).is_Pointer) || ((_8273_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source410.is_MapBuilderAdd) {
                } else if (_source410.is_MapBuilderBuild) {
                } else if (_source410.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_Apply) {
            DAST._IExpression _8274___mcc_h439 = _source345.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _8275___mcc_h440 = _source345.dtor_args;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source412 = _7976_name;
                if (_source412.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8276___mcc_h725 = _source412.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8277___mcc_h726 = _source412.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8278___mcc_h727 = _source412.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source413 = _8277___mcc_h726;
                  if (_source413.is_None) {
                  } else {
                    DAST._IType _8279___mcc_h731 = _source413.dtor_value;
                    DAST._IType _8280_tpe = _8279___mcc_h731;
                    RAST._IType _8281_typ;
                    RAST._IType _out3828;
                    _out3828 = DCOMP.COMP.GenType(_8280_tpe, false, false);
                    _8281_typ = _out3828;
                    if (((_8281_typ).is_Pointer) || ((_8281_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source412.is_MapBuilderAdd) {
                } else if (_source412.is_MapBuilderBuild) {
                } else if (_source412.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_TypeTest) {
            DAST._IExpression _8282___mcc_h443 = _source345.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8283___mcc_h444 = _source345.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _8284___mcc_h445 = _source345.dtor_variant;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source414 = _7976_name;
                if (_source414.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8285___mcc_h733 = _source414.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8286___mcc_h734 = _source414.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8287___mcc_h735 = _source414.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source415 = _8286___mcc_h734;
                  if (_source415.is_None) {
                  } else {
                    DAST._IType _8288___mcc_h739 = _source415.dtor_value;
                    DAST._IType _8289_tpe = _8288___mcc_h739;
                    RAST._IType _8290_typ;
                    RAST._IType _out3829;
                    _out3829 = DCOMP.COMP.GenType(_8289_tpe, false, false);
                    _8290_typ = _out3829;
                    if (((_8290_typ).is_Pointer) || ((_8290_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source414.is_MapBuilderAdd) {
                } else if (_source414.is_MapBuilderBuild) {
                } else if (_source414.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_InitializationValue) {
            DAST._IType _8291___mcc_h449 = _source345.dtor_typ;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source416 = _7976_name;
                if (_source416.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8292___mcc_h741 = _source416.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8293___mcc_h742 = _source416.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8294___mcc_h743 = _source416.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source417 = _8293___mcc_h742;
                  if (_source417.is_None) {
                  } else {
                    DAST._IType _8295___mcc_h747 = _source417.dtor_value;
                    DAST._IType _8296_tpe = _8295___mcc_h747;
                    RAST._IType _8297_typ;
                    RAST._IType _out3830;
                    _out3830 = DCOMP.COMP.GenType(_8296_tpe, false, false);
                    _8297_typ = _out3830;
                    if (((_8297_typ).is_Pointer) || ((_8297_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source416.is_MapBuilderAdd) {
                } else if (_source416.is_MapBuilderBuild) {
                } else if (_source416.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_BoolBoundedPool) {
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source418 = _7976_name;
                if (_source418.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8298___mcc_h749 = _source418.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8299___mcc_h750 = _source418.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8300___mcc_h751 = _source418.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source419 = _8299___mcc_h750;
                  if (_source419.is_None) {
                  } else {
                    DAST._IType _8301___mcc_h755 = _source419.dtor_value;
                    DAST._IType _8302_tpe = _8301___mcc_h755;
                    RAST._IType _8303_typ;
                    RAST._IType _out3831;
                    _out3831 = DCOMP.COMP.GenType(_8302_tpe, false, false);
                    _8303_typ = _out3831;
                    if (((_8303_typ).is_Pointer) || ((_8303_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source418.is_MapBuilderAdd) {
                } else if (_source418.is_MapBuilderBuild) {
                } else if (_source418.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SetBoundedPool) {
            DAST._IExpression _8304___mcc_h451 = _source345.dtor_of;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source420 = _7976_name;
                if (_source420.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8305___mcc_h757 = _source420.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8306___mcc_h758 = _source420.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8307___mcc_h759 = _source420.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source421 = _8306___mcc_h758;
                  if (_source421.is_None) {
                  } else {
                    DAST._IType _8308___mcc_h763 = _source421.dtor_value;
                    DAST._IType _8309_tpe = _8308___mcc_h763;
                    RAST._IType _8310_typ;
                    RAST._IType _out3832;
                    _out3832 = DCOMP.COMP.GenType(_8309_tpe, false, false);
                    _8310_typ = _out3832;
                    if (((_8310_typ).is_Pointer) || ((_8310_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source420.is_MapBuilderAdd) {
                } else if (_source420.is_MapBuilderBuild) {
                } else if (_source420.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else if (_source345.is_SeqBoundedPool) {
            DAST._IExpression _8311___mcc_h453 = _source345.dtor_of;
            bool _8312___mcc_h454 = _source345.dtor_includeDuplicates;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source422 = _7976_name;
                if (_source422.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8313___mcc_h765 = _source422.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8314___mcc_h766 = _source422.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8315___mcc_h767 = _source422.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source423 = _8314___mcc_h766;
                  if (_source423.is_None) {
                  } else {
                    DAST._IType _8316___mcc_h771 = _source423.dtor_value;
                    DAST._IType _8317_tpe = _8316___mcc_h771;
                    RAST._IType _8318_typ;
                    RAST._IType _out3833;
                    _out3833 = DCOMP.COMP.GenType(_8317_tpe, false, false);
                    _8318_typ = _out3833;
                    if (((_8318_typ).is_Pointer) || ((_8318_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source422.is_MapBuilderAdd) {
                } else if (_source422.is_MapBuilderBuild) {
                } else if (_source422.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          } else {
            DAST._IExpression _8319___mcc_h457 = _source345.dtor_lo;
            DAST._IExpression _8320___mcc_h458 = _source345.dtor_hi;
            {
              if (!object.Equals(_7978_onExpr, RAST.__default.self)) {
                DAST._ICallName _source424 = _7976_name;
                if (_source424.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _8321___mcc_h773 = _source424.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _8322___mcc_h774 = _source424.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _8323___mcc_h775 = _source424.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source425 = _8322___mcc_h774;
                  if (_source425.is_None) {
                  } else {
                    DAST._IType _8324___mcc_h779 = _source425.dtor_value;
                    DAST._IType _8325_tpe = _8324___mcc_h779;
                    RAST._IType _8326_typ;
                    RAST._IType _out3834;
                    _out3834 = DCOMP.COMP.GenType(_8325_tpe, false, false);
                    _8326_typ = _out3834;
                    if (((_8326_typ).is_Pointer) || ((_8326_typ).is_PointerMut)) {
                      _7978_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7978_onExpr);
                    }
                  }
                } else if (_source424.is_MapBuilderAdd) {
                } else if (_source424.is_MapBuilderBuild) {
                } else if (_source424.is_SetBuilderAdd) {
                } else {
                }
              }
              _7978_onExpr = (_7978_onExpr).Sel(_7991_renderedName);
            }
          }
          r = _7978_onExpr;
          if ((new BigInteger((_7981_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_7981_typeExprs);
          }
          r = (r).Apply(_7984_argExprs);
          RAST._IExpr _out3835;
          DCOMP._IOwnership _out3836;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3835, out _out3836);
          r = _out3835;
          resultingOwnership = _out3836;
          return ;
        }
      } else if (_source338.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _8327___mcc_h252 = _source338.dtor_params;
        DAST._IType _8328___mcc_h253 = _source338.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _8329___mcc_h254 = _source338.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8330_body = _8329___mcc_h254;
        DAST._IType _8331_retType = _8328___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _8332_paramsDafny = _8327___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _8333_params;
          Dafny.ISequence<RAST._IFormal> _out3837;
          _out3837 = DCOMP.COMP.GenParams(_8332_paramsDafny);
          _8333_params = _out3837;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8334_paramNames;
          _8334_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8335_paramTypesMap;
          _8335_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi21 = new BigInteger((_8333_params).Count);
          for (BigInteger _8336_i = BigInteger.Zero; _8336_i < _hi21; _8336_i++) {
            Dafny.ISequence<Dafny.Rune> _8337_name;
            _8337_name = ((_8333_params).Select(_8336_i)).dtor_name;
            _8334_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8334_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8337_name));
            _8335_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8335_paramTypesMap, _8337_name, ((_8333_params).Select(_8336_i)).dtor_tpe);
          }
          DCOMP._IEnvironment _8338_env;
          _8338_env = DCOMP.Environment.create(_8334_paramNames, _8335_paramTypesMap);
          RAST._IExpr _8339_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8340_recIdents;
          DCOMP._IEnvironment _8341___v153;
          RAST._IExpr _out3838;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3839;
          DCOMP._IEnvironment _out3840;
          DCOMP.COMP.GenStmts(_8330_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _8338_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out3838, out _out3839, out _out3840);
          _8339_recursiveGen = _out3838;
          _8340_recIdents = _out3839;
          _8341___v153 = _out3840;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _8342_allReadCloned;
          _8342_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_8340_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _8343_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_3 in (_8340_recIdents).Elements) {
              _8343_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_3;
              if ((_8340_recIdents).Contains(_8343_next)) {
                goto after__ASSIGN_SUCH_THAT_3;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3557)");
          after__ASSIGN_SUCH_THAT_3: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_8343_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _8342_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_8342_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_8334_paramNames).Contains(_8343_next))) {
              _8342_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8342_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_8343_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_8343_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8343_next));
            }
            _8340_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8340_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8343_next));
          }
          Dafny.ISequence<Dafny.Rune> _8344_paramsString;
          _8344_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _8345_paramTypes;
          _8345_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi22 = new BigInteger((_8333_params).Count);
          for (BigInteger _8346_i = BigInteger.Zero; _8346_i < _hi22; _8346_i++) {
            if ((_8346_i).Sign == 1) {
              _8344_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_8344_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _8345_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_8345_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _8344_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8344_paramsString, DCOMP.__default.escapeIdent(((_8333_params).Select(_8346_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_8333_params).Select(_8346_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
            _8345_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_8345_paramTypes, (RAST.Type.create_Borrowed(((_8333_params).Select(_8346_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
          }
          RAST._IType _8347_retTypeGen;
          RAST._IType _out3841;
          _out3841 = DCOMP.COMP.GenType(_8331_retType, false, true);
          _8347_retTypeGen = _out3841;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _8345_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_8347_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _8342_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _8344_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_8347_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_8339_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out3842;
          DCOMP._IOwnership _out3843;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3842, out _out3843);
          r = _out3842;
          resultingOwnership = _out3843;
          return ;
        }
      } else if (_source338.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8348___mcc_h255 = _source338.dtor_values;
        DAST._IType _8349___mcc_h256 = _source338.dtor_retType;
        DAST._IExpression _8350___mcc_h257 = _source338.dtor_expr;
        DAST._IExpression _8351_expr = _8350___mcc_h257;
        DAST._IType _8352_retType = _8349___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8353_values = _8348___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8354_paramNames;
          _8354_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _8355_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out3844;
          _out3844 = DCOMP.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_8356_value) => {
            return (_8356_value).dtor__0;
          })), _8353_values));
          _8355_paramFormals = _out3844;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8357_paramTypes;
          _8357_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8358_paramNamesSet;
          _8358_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi23 = new BigInteger((_8353_values).Count);
          for (BigInteger _8359_i = BigInteger.Zero; _8359_i < _hi23; _8359_i++) {
            Dafny.ISequence<Dafny.Rune> _8360_name;
            _8360_name = (((_8353_values).Select(_8359_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _8361_rName;
            _8361_rName = DCOMP.__default.escapeIdent(_8360_name);
            _8354_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8354_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8361_rName));
            _8357_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8357_paramTypes, _8361_rName, ((_8355_paramFormals).Select(_8359_i)).dtor_tpe);
            _8358_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8358_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8360_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _8362_s;
          _8362_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _8363_paramsString;
          _8363_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi24 = new BigInteger((_8353_values).Count);
          for (BigInteger _8364_i = BigInteger.Zero; _8364_i < _hi24; _8364_i++) {
            if ((_8364_i).Sign == 1) {
              _8363_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_8363_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _8365_typStr;
            RAST._IType _out3845;
            _out3845 = DCOMP.COMP.GenType((((_8353_values).Select(_8364_i)).dtor__0).dtor_typ, false, true);
            _8365_typStr = _out3845;
            RAST._IExpr _8366_valueGen;
            DCOMP._IOwnership _8367___v154;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8368_recIdents;
            RAST._IExpr _out3846;
            DCOMP._IOwnership _out3847;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3848;
            DCOMP.COMP.GenExpr(((_8353_values).Select(_8364_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3846, out _out3847, out _out3848);
            _8366_valueGen = _out3846;
            _8367___v154 = _out3847;
            _8368_recIdents = _out3848;
            _8362_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8362_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent((((_8353_values).Select(_8364_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_8365_typStr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8368_recIdents);
            _8362_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8362_s, (_8366_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMP._IEnvironment _8369_newEnv;
          _8369_newEnv = DCOMP.Environment.create(_8354_paramNames, _8357_paramTypes);
          RAST._IExpr _8370_recGen;
          DCOMP._IOwnership _8371_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8372_recIdents;
          RAST._IExpr _out3849;
          DCOMP._IOwnership _out3850;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3851;
          DCOMP.COMP.GenExpr(_8351_expr, selfIdent, _8369_newEnv, expectedOwnership, out _out3849, out _out3850, out _out3851);
          _8370_recGen = _out3849;
          _8371_recOwned = _out3850;
          _8372_recIdents = _out3851;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8372_recIdents, _8358_paramNamesSet);
          _8362_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8362_s, (_8370_recGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_8362_s);
          RAST._IExpr _out3852;
          DCOMP._IOwnership _out3853;
          DCOMP.COMP.FromOwnership(r, _8371_recOwned, expectedOwnership, out _out3852, out _out3853);
          r = _out3852;
          resultingOwnership = _out3853;
          return ;
        }
      } else if (_source338.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _8373___mcc_h258 = _source338.dtor_name;
        DAST._IType _8374___mcc_h259 = _source338.dtor_typ;
        DAST._IExpression _8375___mcc_h260 = _source338.dtor_value;
        DAST._IExpression _8376___mcc_h261 = _source338.dtor_iifeBody;
        DAST._IExpression _8377_iifeBody = _8376___mcc_h261;
        DAST._IExpression _8378_value = _8375___mcc_h260;
        DAST._IType _8379_tpe = _8374___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _8380_name = _8373___mcc_h258;
        {
          RAST._IExpr _8381_valueGen;
          DCOMP._IOwnership _8382___v155;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8383_recIdents;
          RAST._IExpr _out3854;
          DCOMP._IOwnership _out3855;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3856;
          DCOMP.COMP.GenExpr(_8378_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3854, out _out3855, out _out3856);
          _8381_valueGen = _out3854;
          _8382___v155 = _out3855;
          _8383_recIdents = _out3856;
          readIdents = _8383_recIdents;
          RAST._IType _8384_valueTypeGen;
          RAST._IType _out3857;
          _out3857 = DCOMP.COMP.GenType(_8379_tpe, false, true);
          _8384_valueTypeGen = _out3857;
          RAST._IExpr _8385_bodyGen;
          DCOMP._IOwnership _8386___v156;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8387_bodyIdents;
          RAST._IExpr _out3858;
          DCOMP._IOwnership _out3859;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3860;
          DCOMP.COMP.GenExpr(_8377_iifeBody, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3858, out _out3859, out _out3860);
          _8385_bodyGen = _out3858;
          _8386___v156 = _out3859;
          _8387_bodyIdents = _out3860;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8387_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_8380_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMP.__default.escapeIdent((_8380_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_8384_valueTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_8381_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_8385_bodyGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out3861;
          DCOMP._IOwnership _out3862;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3861, out _out3862);
          r = _out3861;
          resultingOwnership = _out3862;
          return ;
        }
      } else if (_source338.is_Apply) {
        DAST._IExpression _8388___mcc_h262 = _source338.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _8389___mcc_h263 = _source338.dtor_args;
        Dafny.ISequence<DAST._IExpression> _8390_args = _8389___mcc_h263;
        DAST._IExpression _8391_func = _8388___mcc_h262;
        {
          RAST._IExpr _8392_funcExpr;
          DCOMP._IOwnership _8393___v157;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8394_recIdents;
          RAST._IExpr _out3863;
          DCOMP._IOwnership _out3864;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3865;
          DCOMP.COMP.GenExpr(_8391_func, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3863, out _out3864, out _out3865);
          _8392_funcExpr = _out3863;
          _8393___v157 = _out3864;
          _8394_recIdents = _out3865;
          readIdents = _8394_recIdents;
          Dafny.ISequence<Dafny.Rune> _8395_argString;
          _8395_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _8396_i;
          _8396_i = BigInteger.Zero;
          while ((_8396_i) < (new BigInteger((_8390_args).Count))) {
            if ((_8396_i).Sign == 1) {
              _8395_argString = Dafny.Sequence<Dafny.Rune>.Concat(_8395_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _8397_argExpr;
            DCOMP._IOwnership _8398_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8399_argIdents;
            RAST._IExpr _out3866;
            DCOMP._IOwnership _out3867;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3868;
            DCOMP.COMP.GenExpr((_8390_args).Select(_8396_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3866, out _out3867, out _out3868);
            _8397_argExpr = _out3866;
            _8398_argOwned = _out3867;
            _8399_argIdents = _out3868;
            Dafny.ISequence<Dafny.Rune> _8400_argExprString;
            _8400_argExprString = (_8397_argExpr)._ToString(DCOMP.__default.IND);
            if (object.Equals(_8398_argOwned, DCOMP.Ownership.create_OwnershipOwned())) {
              _8400_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _8400_argExprString);
            }
            _8395_argString = Dafny.Sequence<Dafny.Rune>.Concat(_8395_argString, _8400_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8399_argIdents);
            _8396_i = (_8396_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_8392_funcExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _8395_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out3869;
          DCOMP._IOwnership _out3870;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3869, out _out3870);
          r = _out3869;
          resultingOwnership = _out3870;
          return ;
        }
      } else if (_source338.is_TypeTest) {
        DAST._IExpression _8401___mcc_h264 = _source338.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8402___mcc_h265 = _source338.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _8403___mcc_h266 = _source338.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _8404_variant = _8403___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8405_dType = _8402___mcc_h265;
        DAST._IExpression _8406_on = _8401___mcc_h264;
        {
          RAST._IExpr _8407_exprGen;
          DCOMP._IOwnership _8408___v158;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8409_recIdents;
          RAST._IExpr _out3871;
          DCOMP._IOwnership _out3872;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3873;
          DCOMP.COMP.GenExpr(_8406_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3871, out _out3872, out _out3873);
          _8407_exprGen = _out3871;
          _8408___v158 = _out3872;
          _8409_recIdents = _out3873;
          RAST._IType _8410_dTypePath;
          RAST._IType _out3874;
          _out3874 = DCOMP.COMP.GenPath(_8405_dType);
          _8410_dTypePath = _out3874;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_8407_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_8410_dTypePath).MSel(DCOMP.__default.escapeIdent(_8404_variant)))._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out3875;
          DCOMP._IOwnership _out3876;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3875, out _out3876);
          r = _out3875;
          resultingOwnership = _out3876;
          readIdents = _8409_recIdents;
          return ;
        }
      } else if (_source338.is_InitializationValue) {
        DAST._IType _8411___mcc_h267 = _source338.dtor_typ;
        DAST._IType _8412_typ = _8411___mcc_h267;
        {
          RAST._IType _8413_typExpr;
          RAST._IType _out3877;
          _out3877 = DCOMP.COMP.GenType(_8412_typ, false, false);
          _8413_typExpr = _out3877;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_8413_typExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out3878;
          DCOMP._IOwnership _out3879;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3878, out _out3879);
          r = _out3878;
          resultingOwnership = _out3879;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source338.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out3880;
          DCOMP._IOwnership _out3881;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3880, out _out3881);
          r = _out3880;
          resultingOwnership = _out3881;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source338.is_SetBoundedPool) {
        DAST._IExpression _8414___mcc_h268 = _source338.dtor_of;
        DAST._IExpression _8415_of = _8414___mcc_h268;
        {
          RAST._IExpr _8416_exprGen;
          DCOMP._IOwnership _8417___v159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8418_recIdents;
          RAST._IExpr _out3882;
          DCOMP._IOwnership _out3883;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3884;
          DCOMP.COMP.GenExpr(_8415_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3882, out _out3883, out _out3884);
          _8416_exprGen = _out3882;
          _8417___v159 = _out3883;
          _8418_recIdents = _out3884;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8416_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out3885;
          DCOMP._IOwnership _out3886;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3885, out _out3886);
          r = _out3885;
          resultingOwnership = _out3886;
          readIdents = _8418_recIdents;
          return ;
        }
      } else if (_source338.is_SeqBoundedPool) {
        DAST._IExpression _8419___mcc_h269 = _source338.dtor_of;
        bool _8420___mcc_h270 = _source338.dtor_includeDuplicates;
        bool _8421_includeDuplicates = _8420___mcc_h270;
        DAST._IExpression _8422_of = _8419___mcc_h269;
        {
          RAST._IExpr _8423_exprGen;
          DCOMP._IOwnership _8424___v160;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8425_recIdents;
          RAST._IExpr _out3887;
          DCOMP._IOwnership _out3888;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3889;
          DCOMP.COMP.GenExpr(_8422_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3887, out _out3888, out _out3889);
          _8423_exprGen = _out3887;
          _8424___v160 = _out3888;
          _8425_recIdents = _out3889;
          Dafny.ISequence<Dafny.Rune> _8426_s;
          _8426_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8423_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_8421_includeDuplicates)) {
            _8426_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _8426_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_8426_s);
          RAST._IExpr _out3890;
          DCOMP._IOwnership _out3891;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3890, out _out3891);
          r = _out3890;
          resultingOwnership = _out3891;
          readIdents = _8425_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _8427___mcc_h271 = _source338.dtor_lo;
        DAST._IExpression _8428___mcc_h272 = _source338.dtor_hi;
        DAST._IExpression _8429_hi = _8428___mcc_h272;
        DAST._IExpression _8430_lo = _8427___mcc_h271;
        {
          RAST._IExpr _8431_lo;
          DCOMP._IOwnership _8432___v161;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8433_recIdentsLo;
          RAST._IExpr _out3892;
          DCOMP._IOwnership _out3893;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3894;
          DCOMP.COMP.GenExpr(_8430_lo, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3892, out _out3893, out _out3894);
          _8431_lo = _out3892;
          _8432___v161 = _out3893;
          _8433_recIdentsLo = _out3894;
          RAST._IExpr _8434_hi;
          DCOMP._IOwnership _8435___v162;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8436_recIdentsHi;
          RAST._IExpr _out3895;
          DCOMP._IOwnership _out3896;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3897;
          DCOMP.COMP.GenExpr(_8429_hi, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3895, out _out3896, out _out3897);
          _8434_hi = _out3895;
          _8435___v162 = _out3896;
          _8436_recIdentsHi = _out3897;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_8431_lo)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_8434_hi)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out3898;
          DCOMP._IOwnership _out3899;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3898, out _out3899);
          r = _out3898;
          resultingOwnership = _out3899;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8433_recIdentsLo, _8436_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _8437_i;
      _8437_i = BigInteger.Zero;
      while ((_8437_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _8438_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _8439_m;
        RAST._IMod _out3900;
        _out3900 = DCOMP.COMP.GenModule((p).Select(_8437_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _8439_m = _out3900;
        _8438_generated = (_8439_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_8437_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _8438_generated);
        _8437_i = (_8437_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _8440_i;
      _8440_i = BigInteger.Zero;
      while ((_8440_i) < (new BigInteger((fullName).Count))) {
        if ((_8440_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMP.__default.escapeIdent((fullName).Select(_8440_i)));
        _8440_i = (_8440_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMP
namespace DCOMPUTF16 {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in119 = (i).Drop(new BigInteger(2));
            i = _in119;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in120 = (i).Drop(BigInteger.One);
        i = _in120;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _8441___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_8441___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _8441___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8441___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in121 = (i).Drop(new BigInteger(2));
        i = _in121;
        goto TAIL_CALL_START;
      } else {
        _8441___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8441___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in122 = (i).Drop(BigInteger.One);
        i = _in122;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _8442___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_8442___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _8442___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8442___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in123 = (i).Drop(BigInteger.One);
        i = _in123;
        goto TAIL_CALL_START;
      } else {
        _8442___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_8442___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in124 = (i).Drop(BigInteger.One);
        i = _in124;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMPUTF16.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMPUTF16.__default.has__special(i)))) && (!(DCOMPUTF16.__default.reserved__rust).Contains(i))) && (!(DCOMPUTF16.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMPUTF16.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMPUTF16.__default.is__tuple__builder(i)) {
        return DCOMPUTF16.__default.better__tuple__builder__name(i);
      } else if ((DCOMPUTF16.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMPUTF16.__default.is__idiomatic__rust__id(i)) {
        return DCOMPUTF16.__default.idiomatic__rust(i);
      } else if (DCOMPUTF16.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _8443_r = DCOMPUTF16.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _8443_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return false;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
    public static Dafny.ISequence<Dafny.Rune> ASSIGNED__PREFIX { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_assigned_");
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMPUTF16._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMPUTF16._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IOwnership>(DCOMPUTF16.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMPUTF16._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMPUTF16._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus>(DCOMPUTF16.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMPUTF16._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMPUTF16._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment>(DCOMPUTF16.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMPUTF16._IEnvironment Empty() {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _8444_body;
      Dafny.ISequence<RAST._IModDecl> _out3901;
      _out3901 = DCOMPUTF16.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _8444_body = _out3901;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name), _8444_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((containingPath).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System")))) {
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements()))));
      }
      BigInteger _hi25 = new BigInteger((body).Count);
      for (BigInteger _8445_i = BigInteger.Zero; _8445_i < _hi25; _8445_i++) {
        Dafny.ISequence<RAST._IModDecl> _8446_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source426 = (body).Select(_8445_i);
        if (_source426.is_Module) {
          DAST._IModule _8447___mcc_h0 = _source426.dtor_Module_a0;
          DAST._IModule _8448_m = _8447___mcc_h0;
          RAST._IMod _8449_mm;
          RAST._IMod _out3902;
          _out3902 = DCOMPUTF16.COMP.GenModule(_8448_m, containingPath);
          _8449_mm = _out3902;
          _8446_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_8449_mm));
        } else if (_source426.is_Class) {
          DAST._IClass _8450___mcc_h1 = _source426.dtor_Class_a0;
          DAST._IClass _8451_c = _8450___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out3903;
          _out3903 = DCOMPUTF16.COMP.GenClass(_8451_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_8451_c).dtor_name)));
          _8446_generated = _out3903;
        } else if (_source426.is_Trait) {
          DAST._ITrait _8452___mcc_h2 = _source426.dtor_Trait_a0;
          DAST._ITrait _8453_t = _8452___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _8454_tt;
          Dafny.ISequence<Dafny.Rune> _out3904;
          _out3904 = DCOMPUTF16.COMP.GenTrait(_8453_t, containingPath);
          _8454_tt = _out3904;
          _8446_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_8454_tt));
        } else if (_source426.is_Newtype) {
          DAST._INewtype _8455___mcc_h3 = _source426.dtor_Newtype_a0;
          DAST._INewtype _8456_n = _8455___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out3905;
          _out3905 = DCOMPUTF16.COMP.GenNewtype(_8456_n);
          _8446_generated = _out3905;
        } else {
          DAST._IDatatype _8457___mcc_h4 = _source426.dtor_Datatype_a0;
          DAST._IDatatype _8458_d = _8457___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out3906;
          _out3906 = DCOMPUTF16.COMP.GenDatatype(_8458_d);
          _8446_generated = _out3906;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _8446_generated);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _8459_tpI;
      _8459_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_8459_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _8460_tp;
          _8460_tp = (@params).Select(_8459_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_8460_tp));
          RAST._IType _8461_genTp;
          RAST._IType _out3907;
          _out3907 = DCOMPUTF16.COMP.GenType(_8460_tp, false, false);
          _8461_genTp = _out3907;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_8461_genTp)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _8459_tpI = (_8459_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _8462_baseConstraints;
      _8462_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _8462_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _8463_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _8464_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _8465_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _8466_whereConstraints;
      Dafny.ISet<DAST._IType> _out3908;
      Dafny.ISequence<RAST._ITypeParam> _out3909;
      Dafny.ISequence<RAST._ITypeParam> _out3910;
      Dafny.ISequence<Dafny.Rune> _out3911;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3908, out _out3909, out _out3910, out _out3911);
      _8463_typeParamsSet = _out3908;
      _8464_sTypeParams = _out3909;
      _8465_sConstrainedTypeParams = _out3910;
      _8466_whereConstraints = _out3911;
      Dafny.ISequence<Dafny.Rune> _8467_constrainedTypeParams;
      _8467_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_8465_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _8468_fields;
      _8468_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _8469_fieldInits;
      _8469_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _8470_fieldI;
      _8470_fieldI = BigInteger.Zero;
      while ((_8470_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _8471_field;
        _8471_field = ((c).dtor_fields).Select(_8470_fieldI);
        RAST._IType _8472_fieldType;
        RAST._IType _out3912;
        _out3912 = DCOMPUTF16.COMP.GenType(((_8471_field).dtor_formal).dtor_typ, false, false);
        _8472_fieldType = _out3912;
        Dafny.ISequence<Dafny.Rune> _8473_fieldRustName;
        _8473_fieldRustName = DCOMPUTF16.__default.escapeIdent(((_8471_field).dtor_formal).dtor_name);
        _8468_fields = Dafny.Sequence<RAST._IField>.Concat(_8468_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_8473_fieldRustName, _8472_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source427 = (_8471_field).dtor_defaultValue;
        if (_source427.is_None) {
          {
            RAST._IExpr _8474_default;
            _8474_default = RAST.__default.std__Default__default;
            _8469_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8469_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_8473_fieldRustName, _8474_default)));
          }
        } else {
          DAST._IExpression _8475___mcc_h0 = _source427.dtor_value;
          DAST._IExpression _8476_e = _8475___mcc_h0;
          {
            RAST._IExpr _8477_expr;
            DCOMPUTF16._IOwnership _8478___v41;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8479___v42;
            RAST._IExpr _out3913;
            DCOMPUTF16._IOwnership _out3914;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3915;
            DCOMPUTF16.COMP.GenExpr(_8476_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3913, out _out3914, out _out3915);
            _8477_expr = _out3913;
            _8478___v41 = _out3914;
            _8479___v42 = _out3915;
            _8469_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8469_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_8473_fieldRustName, _8477_expr)));
          }
        }
        _8470_fieldI = (_8470_fieldI) + (BigInteger.One);
      }
      BigInteger _hi26 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _8480_typeParamI = BigInteger.Zero; _8480_typeParamI < _hi26; _8480_typeParamI++) {
        RAST._IType _8481_tpeGen;
        RAST._IType _out3916;
        _out3916 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_8480_typeParamI), false, false);
        _8481_tpeGen = _out3916;
        _8468_fields = Dafny.Sequence<RAST._IField>.Concat(_8468_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_8480_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_8481_tpeGen))))));
        _8469_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8469_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_8480_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _8482_datatypeName;
      _8482_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _8483_struct;
      _8483_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _8482_datatypeName, _8464_sTypeParams, RAST.Fields.create_NamedFields(_8468_fields));
      Dafny.ISequence<RAST._IType> _8484_typeParamsAsTypes;
      _8484_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_8485_typeParam) => {
        return RAST.__default.RawType((_8485_typeParam).dtor_content);
      })), _8464_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_8483_struct));
      DAST._IType _8486_underlyingDatatype;
      _8486_underlyingDatatype = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes)));
      Dafny.ISequence<RAST._IImplMember> _8487_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _8488_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3917;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3918;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_AllocatedDatatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _8463_typeParamsSet, out _out3917, out _out3918);
      _8487_implBodyRaw = _out3917;
      _8488_traitBodies = _out3918;
      Dafny.ISequence<RAST._IImplMember> _8489_implBody;
      _8489_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_8482_datatypeName), _8469_fieldInits))))), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.SelfPointerMut), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate"))).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())))))), _8487_implBodyRaw);
      RAST._IImpl _8490_i;
      _8490_i = RAST.Impl.create_Impl(_8465_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8482_datatypeName), _8484_typeParamsAsTypes), _8466_whereConstraints, _8489_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8490_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _8491_i;
        _8491_i = BigInteger.Zero;
        while ((_8491_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _8492_superClass;
          _8492_superClass = ((c).dtor_superClasses).Select(_8491_i);
          DAST._IType _source428 = _8492_superClass;
          if (_source428.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8493___mcc_h1 = _source428.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8494___mcc_h2 = _source428.dtor_typeArgs;
            DAST._IResolvedType _8495___mcc_h3 = _source428.dtor_resolved;
            DAST._IResolvedType _source429 = _8495___mcc_h3;
            if (_source429.is_AllocatedDatatype) {
              DAST._IDatatypeType _8496___mcc_h7 = _source429.dtor_datatypeType;
            } else if (_source429.is_Datatype) {
              DAST._IDatatypeType _8497___mcc_h9 = _source429.dtor_datatypeType;
            } else if (_source429.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8498___mcc_h11 = _source429.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _8499___mcc_h12 = _source429.dtor_attributes;
              Dafny.ISequence<DAST._IType> _8500_typeArgs = _8494___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8501_traitPath = _8493___mcc_h1;
              {
                RAST._IType _8502_pathStr;
                RAST._IType _out3919;
                _out3919 = DCOMPUTF16.COMP.GenPath(_8501_traitPath);
                _8502_pathStr = _out3919;
                Dafny.ISequence<RAST._IType> _8503_typeArgs;
                Dafny.ISequence<RAST._IType> _out3920;
                _out3920 = DCOMPUTF16.COMP.GenTypeArgs(_8500_typeArgs, false, false);
                _8503_typeArgs = _out3920;
                Dafny.ISequence<RAST._IImplMember> _8504_body;
                _8504_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_8488_traitBodies).Contains(_8501_traitPath)) {
                  _8504_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_8488_traitBodies,_8501_traitPath);
                }
                RAST._IType _8505_genSelfPath;
                RAST._IType _out3921;
                _out3921 = DCOMPUTF16.COMP.GenPath(path);
                _8505_genSelfPath = _out3921;
                RAST._IModDecl _8506_x;
                _8506_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8465_sConstrainedTypeParams, RAST.Type.create_TypeApp(_8502_pathStr, _8503_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_8505_genSelfPath, _8484_typeParamsAsTypes)), _8466_whereConstraints, _8504_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_8506_x));
              }
            } else {
              DAST._IType _8507___mcc_h15 = _source429.dtor_baseType;
              DAST._INewtypeRange _8508___mcc_h16 = _source429.dtor_range;
              bool _8509___mcc_h17 = _source429.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _8510___mcc_h18 = _source429.dtor_attributes;
            }
          } else if (_source428.is_Nullable) {
            DAST._IType _8511___mcc_h23 = _source428.dtor_Nullable_a0;
          } else if (_source428.is_Tuple) {
            Dafny.ISequence<DAST._IType> _8512___mcc_h25 = _source428.dtor_Tuple_a0;
          } else if (_source428.is_Array) {
            DAST._IType _8513___mcc_h27 = _source428.dtor_element;
            BigInteger _8514___mcc_h28 = _source428.dtor_dims;
          } else if (_source428.is_Seq) {
            DAST._IType _8515___mcc_h31 = _source428.dtor_element;
          } else if (_source428.is_Set) {
            DAST._IType _8516___mcc_h33 = _source428.dtor_element;
          } else if (_source428.is_Multiset) {
            DAST._IType _8517___mcc_h35 = _source428.dtor_element;
          } else if (_source428.is_Map) {
            DAST._IType _8518___mcc_h37 = _source428.dtor_key;
            DAST._IType _8519___mcc_h38 = _source428.dtor_value;
          } else if (_source428.is_SetBuilder) {
            DAST._IType _8520___mcc_h41 = _source428.dtor_element;
          } else if (_source428.is_MapBuilder) {
            DAST._IType _8521___mcc_h43 = _source428.dtor_key;
            DAST._IType _8522___mcc_h44 = _source428.dtor_value;
          } else if (_source428.is_Arrow) {
            Dafny.ISequence<DAST._IType> _8523___mcc_h47 = _source428.dtor_args;
            DAST._IType _8524___mcc_h48 = _source428.dtor_result;
          } else if (_source428.is_Primitive) {
            DAST._IPrimitive _8525___mcc_h51 = _source428.dtor_Primitive_a0;
          } else if (_source428.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _8526___mcc_h53 = _source428.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _8527___mcc_h55 = _source428.dtor_TypeArg_a0;
          }
          _8491_i = (_8491_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _8528_d;
      _8528_d = RAST.Impl.create_ImplFor(_8465_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8482_datatypeName), _8484_typeParamsAsTypes), _8466_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_8482_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _8529_defaultImpl;
      _8529_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8528_d));
      RAST._IImpl _8530_p;
      _8530_p = RAST.Impl.create_ImplFor(_8465_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8482_datatypeName), _8484_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _8531_printImpl;
      _8531_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8530_p));
      RAST._IImpl _8532_pp;
      _8532_pp = RAST.Impl.create_ImplFor(_8464_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8482_datatypeName), _8484_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _8533_ptrPartialEqImpl;
      _8533_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_8532_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _8529_defaultImpl), _8531_printImpl), _8533_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _8534_typeParamsSet;
      _8534_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _8535_typeParams;
      _8535_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _8536_tpI;
      _8536_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_8536_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _8537_tp;
          _8537_tp = ((t).dtor_typeParams).Select(_8536_tpI);
          _8534_typeParamsSet = Dafny.Set<DAST._IType>.Union(_8534_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_8537_tp));
          RAST._IType _8538_genTp;
          RAST._IType _out3922;
          _out3922 = DCOMPUTF16.COMP.GenType(_8537_tp, false, false);
          _8538_genTp = _out3922;
          _8535_typeParams = Dafny.Sequence<RAST._IType>.Concat(_8535_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_8538_genTp));
          _8536_tpI = (_8536_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8539_fullPath;
      _8539_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _8540_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _8541___v46;
      Dafny.ISequence<RAST._IImplMember> _out3923;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3924;
      DCOMPUTF16.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_8539_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_8539_fullPath, (t).dtor_attributes)), _8534_typeParamsSet, out _out3923, out _out3924);
      _8540_implBody = _out3923;
      _8541___v46 = _out3924;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMPUTF16.__default.escapeIdent((t).dtor_name)), _8535_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _8540_implBody)))._ToString(DCOMPUTF16.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _8542_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _8543_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _8544_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _8545_whereConstraints;
      Dafny.ISet<DAST._IType> _out3925;
      Dafny.ISequence<RAST._ITypeParam> _out3926;
      Dafny.ISequence<RAST._ITypeParam> _out3927;
      Dafny.ISequence<Dafny.Rune> _out3928;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3925, out _out3926, out _out3927, out _out3928);
      _8542_typeParamsSet = _out3925;
      _8543_sTypeParams = _out3926;
      _8544_sConstrainedTypeParams = _out3927;
      _8545_whereConstraints = _out3928;
      Dafny.ISequence<RAST._IType> _8546_typeParamsAsTypes;
      _8546_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_8547_t) => {
        return RAST.__default.RawType((_8547_t).dtor_content);
      })), _8543_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _8548_constrainedTypeParams;
      _8548_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_8544_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _8549_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source430 = DCOMPUTF16.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source430.is_None) {
        RAST._IType _out3929;
        _out3929 = DCOMPUTF16.COMP.GenType((c).dtor_base, false, false);
        _8549_underlyingType = _out3929;
      } else {
        RAST._IType _8550___mcc_h0 = _source430.dtor_value;
        RAST._IType _8551_v = _8550___mcc_h0;
        _8549_underlyingType = _8551_v;
      }
      DAST._IType _8552_resultingType;
      _8552_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _8553_datatypeName;
      _8553_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _8553_datatypeName, _8543_sTypeParams, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _8549_underlyingType))))));
      RAST._IExpr _8554_fnBody;
      _8554_fnBody = RAST.Expr.create_Identifier(_8553_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source431 = (c).dtor_witnessExpr;
      if (_source431.is_None) {
        {
          _8554_fnBody = (_8554_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _8555___mcc_h1 = _source431.dtor_value;
        DAST._IExpression _8556_e = _8555___mcc_h1;
        {
          DAST._IExpression _8557_e;
          _8557_e = ((object.Equals((c).dtor_base, _8552_resultingType)) ? (_8556_e) : (DAST.Expression.create_Convert(_8556_e, (c).dtor_base, _8552_resultingType)));
          RAST._IExpr _8558_eStr;
          DCOMPUTF16._IOwnership _8559___v47;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8560___v48;
          RAST._IExpr _out3930;
          DCOMPUTF16._IOwnership _out3931;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3932;
          DCOMPUTF16.COMP.GenExpr(_8557_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3930, out _out3931, out _out3932);
          _8558_eStr = _out3930;
          _8559___v47 = _out3931;
          _8560___v48 = _out3932;
          _8554_fnBody = (_8554_fnBody).Apply1(_8558_eStr);
        }
      }
      RAST._IImplMember _8561_body;
      _8561_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8554_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8544_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8553_datatypeName), _8546_typeParamsAsTypes), _8545_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_8561_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8544_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8553_datatypeName), _8546_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8544_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8553_datatypeName), _8546_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_8549_underlyingType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _8562_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _8563_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _8564_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _8565_whereConstraints;
      Dafny.ISet<DAST._IType> _out3933;
      Dafny.ISequence<RAST._ITypeParam> _out3934;
      Dafny.ISequence<RAST._ITypeParam> _out3935;
      Dafny.ISequence<Dafny.Rune> _out3936;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3933, out _out3934, out _out3935, out _out3936);
      _8562_typeParamsSet = _out3933;
      _8563_sTypeParams = _out3934;
      _8564_sConstrainedTypeParams = _out3935;
      _8565_whereConstraints = _out3936;
      Dafny.ISequence<RAST._IType> _8566_typeParamsAsTypes;
      _8566_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_8567_t) => {
        return RAST.__default.RawType((_8567_t).dtor_content);
      })), _8563_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _8568_constrainedTypeParams;
      _8568_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_8564_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.IND, DCOMPUTF16.__default.IND));
      Dafny.ISequence<Dafny.Rune> _8569_datatypeName;
      _8569_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _8570_ctors;
      _8570_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _8571_i;
      _8571_i = BigInteger.Zero;
      while ((_8571_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _8572_ctor;
        _8572_ctor = ((c).dtor_ctors).Select(_8571_i);
        Dafny.ISequence<RAST._IField> _8573_ctorArgs;
        _8573_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _8574_j;
        _8574_j = BigInteger.Zero;
        while ((_8574_j) < (new BigInteger(((_8572_ctor).dtor_args).Count))) {
          DAST._IFormal _8575_formal;
          _8575_formal = ((_8572_ctor).dtor_args).Select(_8574_j);
          RAST._IType _8576_formalType;
          RAST._IType _out3937;
          _out3937 = DCOMPUTF16.COMP.GenType((_8575_formal).dtor_typ, false, false);
          _8576_formalType = _out3937;
          if ((c).dtor_isCo) {
            _8573_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_8573_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_8575_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_8576_formalType))))));
          } else {
            _8573_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_8573_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_8575_formal).dtor_name), _8576_formalType))));
          }
          _8574_j = (_8574_j) + (BigInteger.One);
        }
        _8570_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_8570_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMPUTF16.__default.escapeIdent((_8572_ctor).dtor_name), RAST.Fields.create_NamedFields(_8573_ctorArgs))));
        _8571_i = (_8571_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8577_selfPath;
      _8577_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _8578_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _8579_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3938;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3939;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_8577_selfPath, (c).dtor_attributes))), _8562_typeParamsSet, out _out3938, out _out3939);
      _8578_implBodyRaw = _out3938;
      _8579_traitBodies = _out3939;
      Dafny.ISequence<RAST._IImplMember> _8580_implBody;
      _8580_implBody = _8578_implBodyRaw;
      _8571_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8581_emittedFields;
      _8581_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_8571_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _8582_ctor;
        _8582_ctor = ((c).dtor_ctors).Select(_8571_i);
        BigInteger _8583_j;
        _8583_j = BigInteger.Zero;
        while ((_8583_j) < (new BigInteger(((_8582_ctor).dtor_args).Count))) {
          DAST._IFormal _8584_formal;
          _8584_formal = ((_8582_ctor).dtor_args).Select(_8583_j);
          if (!((_8581_emittedFields).Contains((_8584_formal).dtor_name))) {
            _8581_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8581_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_8584_formal).dtor_name));
            RAST._IType _8585_formalType;
            RAST._IType _out3940;
            _out3940 = DCOMPUTF16.COMP.GenType((_8584_formal).dtor_typ, false, false);
            _8585_formalType = _out3940;
            Dafny.ISequence<RAST._IMatchCase> _8586_cases;
            _8586_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _8587_k;
            _8587_k = BigInteger.Zero;
            while ((_8587_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _8588_ctor2;
              _8588_ctor2 = ((c).dtor_ctors).Select(_8587_k);
              Dafny.ISequence<Dafny.Rune> _8589_pattern;
              _8589_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8569_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent((_8588_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _8590_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _8591_l;
              _8591_l = BigInteger.Zero;
              bool _8592_hasMatchingField;
              _8592_hasMatchingField = false;
              while ((_8591_l) < (new BigInteger(((_8588_ctor2).dtor_args).Count))) {
                DAST._IFormal _8593_formal2;
                _8593_formal2 = ((_8588_ctor2).dtor_args).Select(_8591_l);
                if (((_8584_formal).dtor_name).Equals((_8593_formal2).dtor_name)) {
                  _8592_hasMatchingField = true;
                }
                _8589_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8589_pattern, DCOMPUTF16.__default.escapeIdent((_8593_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _8591_l = (_8591_l) + (BigInteger.One);
              }
              _8589_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_8589_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_8592_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _8590_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMPUTF16.__default.escapeIdent((_8584_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _8590_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_8584_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _8590_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _8594_ctorMatch;
              _8594_ctorMatch = RAST.MatchCase.create(_8589_pattern, RAST.Expr.create_RawExpr(_8590_rhs));
              _8586_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8586_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_8594_ctorMatch));
              _8587_k = (_8587_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _8586_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8586_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_8569_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _8595_methodBody;
            _8595_methodBody = RAST.Expr.create_Match(RAST.__default.self, _8586_cases);
            _8580_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_8580_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMPUTF16.__default.escapeIdent((_8584_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_8585_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8595_methodBody)))));
          }
          _8583_j = (_8583_j) + (BigInteger.One);
        }
        _8571_i = (_8571_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _8596_typeI;
        _8596_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _8597_types;
        _8597_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_8596_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _8598_genTp;
          RAST._IType _out3941;
          _out3941 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_8596_typeI), false, false);
          _8598_genTp = _out3941;
          _8597_types = Dafny.Sequence<RAST._IType>.Concat(_8597_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_8598_genTp))));
          _8596_typeI = (_8596_typeI) + (BigInteger.One);
        }
        _8570_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_8570_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_8599_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _8599_tpe);
})), _8597_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _8600_enumBody;
      _8600_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _8569_datatypeName, _8563_sTypeParams, _8570_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_8564_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8569_datatypeName), _8566_typeParamsAsTypes), _8565_whereConstraints, _8580_implBody)));
      _8571_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _8601_printImplBodyCases;
      _8601_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_8571_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _8602_ctor;
        _8602_ctor = ((c).dtor_ctors).Select(_8571_i);
        Dafny.ISequence<Dafny.Rune> _8603_ctorMatch;
        _8603_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_8602_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _8604_modulePrefix;
        _8604_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _8605_printRhs;
        _8605_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _8604_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent((_8602_ctor).dtor_name)), (((_8602_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _8606_j;
        _8606_j = BigInteger.Zero;
        while ((_8606_j) < (new BigInteger(((_8602_ctor).dtor_args).Count))) {
          DAST._IFormal _8607_formal;
          _8607_formal = ((_8602_ctor).dtor_args).Select(_8606_j);
          _8603_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8603_ctorMatch, DCOMPUTF16.__default.escapeIdent((_8607_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_8606_j).Sign == 1) {
            _8605_printRhs = (_8605_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _8605_printRhs = (_8605_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMPUTF16.__default.escapeIdent((_8607_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _8606_j = (_8606_j) + (BigInteger.One);
        }
        _8603_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_8603_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_8602_ctor).dtor_hasAnyArgs) {
          _8605_printRhs = (_8605_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _8605_printRhs = (_8605_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _8601_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8601_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8569_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _8603_ctorMatch), RAST.Expr.create_Block(_8605_printRhs))));
        _8571_i = (_8571_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _8601_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_8601_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_8569_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _8608_printImplBody;
      _8608_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _8601_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _8609_printImpl;
      _8609_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8564_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8569_datatypeName), _8566_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8608_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _8610_defaultImpl;
      _8610_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _8611_asRefImpl;
      _8611_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _8571_i = BigInteger.Zero;
        RAST._IExpr _8612_structName;
        _8612_structName = (RAST.Expr.create_Identifier(_8569_datatypeName)).MSel(DCOMPUTF16.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _8613_structAssignments;
        _8613_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_8571_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _8614_formal;
          _8614_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_8571_i);
          _8613_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_8613_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent((_8614_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _8571_i = (_8571_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _8615_defaultConstrainedTypeParams;
        _8615_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_8563_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _8616_fullType;
        _8616_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_8569_datatypeName), _8566_typeParamsAsTypes);
        _8610_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8615_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _8616_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_8616_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_8612_structName, _8613_structAssignments))))))));
        _8611_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_8615_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_8616_fullType), RAST.Type.create_Borrowed(_8616_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_8600_enumBody, _8609_printImpl), _8610_defaultImpl), _8611_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi27 = new BigInteger((p).Count);
        for (BigInteger _8617_i = BigInteger.Zero; _8617_i < _hi27; _8617_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_8617_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi28 = new BigInteger((p).Count);
        for (BigInteger _8618_i = BigInteger.Zero; _8618_i < _hi28; _8618_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_8618_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _8619_i;
        _8619_i = BigInteger.Zero;
        while ((_8619_i) < (new BigInteger((args).Count))) {
          RAST._IType _8620_genTp;
          RAST._IType _out3942;
          _out3942 = DCOMPUTF16.COMP.GenType((args).Select(_8619_i), inBinding, inFn);
          _8620_genTp = _out3942;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_8620_genTp));
          _8619_i = (_8619_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source432 = c;
      if (_source432.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8621___mcc_h0 = _source432.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _8622___mcc_h1 = _source432.dtor_typeArgs;
        DAST._IResolvedType _8623___mcc_h2 = _source432.dtor_resolved;
        DAST._IResolvedType _8624_resolved = _8623___mcc_h2;
        Dafny.ISequence<DAST._IType> _8625_args = _8622___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8626_p = _8621___mcc_h0;
        {
          RAST._IType _8627_t;
          RAST._IType _out3943;
          _out3943 = DCOMPUTF16.COMP.GenPath(_8626_p);
          _8627_t = _out3943;
          Dafny.ISequence<RAST._IType> _8628_typeArgs;
          Dafny.ISequence<RAST._IType> _out3944;
          _out3944 = DCOMPUTF16.COMP.GenTypeArgs(_8625_args, inBinding, inFn);
          _8628_typeArgs = _out3944;
          s = RAST.Type.create_TypeApp(_8627_t, _8628_typeArgs);
          DAST._IResolvedType _source433 = _8624_resolved;
          if (_source433.is_AllocatedDatatype) {
            DAST._IDatatypeType _8629___mcc_h21 = _source433.dtor_datatypeType;
            DAST._IDatatypeType _source434 = _8629___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8630___mcc_h22 = _source434.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8631___mcc_h23 = _source434.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8632_attributes = _8631___mcc_h23;
            {
              s = RAST.Type.create_PointerMut(s);
            }
          } else if (_source433.is_Datatype) {
            DAST._IDatatypeType _8633___mcc_h24 = _source433.dtor_datatypeType;
            DAST._IDatatypeType _source435 = _8633___mcc_h24;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8634___mcc_h25 = _source435.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8635___mcc_h26 = _source435.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8636_attributes = _8635___mcc_h26;
            {
              if (DCOMPUTF16.COMP.IsRcWrapped(_8636_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source433.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8637___mcc_h27 = _source433.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8638___mcc_h28 = _source433.dtor_attributes;
            {
              if ((_8626_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _8639___mcc_h29 = _source433.dtor_baseType;
            DAST._INewtypeRange _8640___mcc_h30 = _source433.dtor_range;
            bool _8641___mcc_h31 = _source433.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _8642___mcc_h32 = _source433.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8643_attributes = _8642___mcc_h32;
            bool _8644_erased = _8641___mcc_h31;
            DAST._INewtypeRange _8645_range = _8640___mcc_h30;
            DAST._IType _8646_t = _8639___mcc_h29;
            {
              if (_8644_erased) {
                Std.Wrappers._IOption<RAST._IType> _source436 = DCOMPUTF16.COMP.NewtypeToRustType(_8646_t, _8645_range);
                if (_source436.is_None) {
                } else {
                  RAST._IType _8647___mcc_h33 = _source436.dtor_value;
                  RAST._IType _8648_v = _8647___mcc_h33;
                  s = _8648_v;
                }
              }
            }
          }
        }
      } else if (_source432.is_Nullable) {
        DAST._IType _8649___mcc_h3 = _source432.dtor_Nullable_a0;
        DAST._IType _8650_inner = _8649___mcc_h3;
        {
          RAST._IType _8651_innerExpr;
          RAST._IType _out3945;
          _out3945 = DCOMPUTF16.COMP.GenType(_8650_inner, inBinding, inFn);
          _8651_innerExpr = _out3945;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_8651_innerExpr));
        }
      } else if (_source432.is_Tuple) {
        Dafny.ISequence<DAST._IType> _8652___mcc_h4 = _source432.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _8653_types = _8652___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _8654_args;
          _8654_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _8655_i;
          _8655_i = BigInteger.Zero;
          while ((_8655_i) < (new BigInteger((_8653_types).Count))) {
            RAST._IType _8656_generated;
            RAST._IType _out3946;
            _out3946 = DCOMPUTF16.COMP.GenType((_8653_types).Select(_8655_i), inBinding, inFn);
            _8656_generated = _out3946;
            _8654_args = Dafny.Sequence<RAST._IType>.Concat(_8654_args, Dafny.Sequence<RAST._IType>.FromElements(_8656_generated));
            _8655_i = (_8655_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_8654_args);
        }
      } else if (_source432.is_Array) {
        DAST._IType _8657___mcc_h5 = _source432.dtor_element;
        BigInteger _8658___mcc_h6 = _source432.dtor_dims;
        BigInteger _8659_dims = _8658___mcc_h6;
        DAST._IType _8660_element = _8657___mcc_h5;
        {
          RAST._IType _8661_elem;
          RAST._IType _out3947;
          _out3947 = DCOMPUTF16.COMP.GenType(_8660_element, inBinding, inFn);
          _8661_elem = _out3947;
          s = _8661_elem;
          BigInteger _8662_i;
          _8662_i = BigInteger.Zero;
          while ((_8662_i) < (_8659_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _8662_i = (_8662_i) + (BigInteger.One);
          }
        }
      } else if (_source432.is_Seq) {
        DAST._IType _8663___mcc_h7 = _source432.dtor_element;
        DAST._IType _8664_element = _8663___mcc_h7;
        {
          RAST._IType _8665_elem;
          RAST._IType _out3948;
          _out3948 = DCOMPUTF16.COMP.GenType(_8664_element, inBinding, inFn);
          _8665_elem = _out3948;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_8665_elem));
        }
      } else if (_source432.is_Set) {
        DAST._IType _8666___mcc_h8 = _source432.dtor_element;
        DAST._IType _8667_element = _8666___mcc_h8;
        {
          RAST._IType _8668_elem;
          RAST._IType _out3949;
          _out3949 = DCOMPUTF16.COMP.GenType(_8667_element, inBinding, inFn);
          _8668_elem = _out3949;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_8668_elem));
        }
      } else if (_source432.is_Multiset) {
        DAST._IType _8669___mcc_h9 = _source432.dtor_element;
        DAST._IType _8670_element = _8669___mcc_h9;
        {
          RAST._IType _8671_elem;
          RAST._IType _out3950;
          _out3950 = DCOMPUTF16.COMP.GenType(_8670_element, inBinding, inFn);
          _8671_elem = _out3950;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_8671_elem));
        }
      } else if (_source432.is_Map) {
        DAST._IType _8672___mcc_h10 = _source432.dtor_key;
        DAST._IType _8673___mcc_h11 = _source432.dtor_value;
        DAST._IType _8674_value = _8673___mcc_h11;
        DAST._IType _8675_key = _8672___mcc_h10;
        {
          RAST._IType _8676_keyType;
          RAST._IType _out3951;
          _out3951 = DCOMPUTF16.COMP.GenType(_8675_key, inBinding, inFn);
          _8676_keyType = _out3951;
          RAST._IType _8677_valueType;
          RAST._IType _out3952;
          _out3952 = DCOMPUTF16.COMP.GenType(_8674_value, inBinding, inFn);
          _8677_valueType = _out3952;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_8676_keyType, _8677_valueType));
        }
      } else if (_source432.is_SetBuilder) {
        DAST._IType _8678___mcc_h12 = _source432.dtor_element;
        DAST._IType _8679_elem = _8678___mcc_h12;
        {
          RAST._IType _8680_elemType;
          RAST._IType _out3953;
          _out3953 = DCOMPUTF16.COMP.GenType(_8679_elem, inBinding, inFn);
          _8680_elemType = _out3953;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_8680_elemType));
        }
      } else if (_source432.is_MapBuilder) {
        DAST._IType _8681___mcc_h13 = _source432.dtor_key;
        DAST._IType _8682___mcc_h14 = _source432.dtor_value;
        DAST._IType _8683_value = _8682___mcc_h14;
        DAST._IType _8684_key = _8681___mcc_h13;
        {
          RAST._IType _8685_keyType;
          RAST._IType _out3954;
          _out3954 = DCOMPUTF16.COMP.GenType(_8684_key, inBinding, inFn);
          _8685_keyType = _out3954;
          RAST._IType _8686_valueType;
          RAST._IType _out3955;
          _out3955 = DCOMPUTF16.COMP.GenType(_8683_value, inBinding, inFn);
          _8686_valueType = _out3955;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_8685_keyType, _8686_valueType));
        }
      } else if (_source432.is_Arrow) {
        Dafny.ISequence<DAST._IType> _8687___mcc_h15 = _source432.dtor_args;
        DAST._IType _8688___mcc_h16 = _source432.dtor_result;
        DAST._IType _8689_result = _8688___mcc_h16;
        Dafny.ISequence<DAST._IType> _8690_args = _8687___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _8691_argTypes;
          _8691_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _8692_i;
          _8692_i = BigInteger.Zero;
          while ((_8692_i) < (new BigInteger((_8690_args).Count))) {
            RAST._IType _8693_generated;
            RAST._IType _out3956;
            _out3956 = DCOMPUTF16.COMP.GenType((_8690_args).Select(_8692_i), inBinding, true);
            _8693_generated = _out3956;
            _8691_argTypes = Dafny.Sequence<RAST._IType>.Concat(_8691_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_8693_generated)));
            _8692_i = (_8692_i) + (BigInteger.One);
          }
          RAST._IType _8694_resultType;
          RAST._IType _out3957;
          _out3957 = DCOMPUTF16.COMP.GenType(_8689_result, inBinding, (inFn) || (inBinding));
          _8694_resultType = _out3957;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_8691_argTypes, RAST.Type.create_IntersectionType(_8694_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source432.is_Primitive) {
        DAST._IPrimitive _8695___mcc_h17 = _source432.dtor_Primitive_a0;
        DAST._IPrimitive _8696_p = _8695___mcc_h17;
        {
          DAST._IPrimitive _source437 = _8696_p;
          if (_source437.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source437.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source437.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar)));
          } else if (_source437.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar);
          }
        }
      } else if (_source432.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _8697___mcc_h18 = _source432.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _8698_v = _8697___mcc_h18;
        s = RAST.__default.RawType(_8698_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _8699___mcc_h19 = _source432.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source438 = _8699___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _8700___mcc_h20 = _source438;
        Dafny.ISequence<Dafny.Rune> _8701_name = _8700___mcc_h20;
        s = RAST.__default.RawType(DCOMPUTF16.__default.escapeIdent(_8701_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _8702_i;
      _8702_i = BigInteger.Zero;
      while ((_8702_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source439 = (body).Select(_8702_i);
        DAST._IMethod _8703___mcc_h0 = _source439;
        DAST._IMethod _8704_m = _8703___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source440 = (_8704_m).dtor_overridingPath;
          if (_source440.is_None) {
            {
              RAST._IImplMember _8705_generated;
              RAST._IImplMember _out3958;
              _out3958 = DCOMPUTF16.COMP.GenMethod(_8704_m, forTrait, enclosingType, enclosingTypeParams);
              _8705_generated = _out3958;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_8705_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8706___mcc_h1 = _source440.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8707_p = _8706___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _8708_existing;
              _8708_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_8707_p)) {
                _8708_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_8707_p);
              }
              RAST._IImplMember _8709_genMethod;
              RAST._IImplMember _out3959;
              _out3959 = DCOMPUTF16.COMP.GenMethod(_8704_m, true, enclosingType, enclosingTypeParams);
              _8709_genMethod = _out3959;
              _8708_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_8708_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_8709_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_8707_p, _8708_existing)));
            }
          }
        }
        _8702_i = (_8702_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _8710_i;
      _8710_i = BigInteger.Zero;
      while ((_8710_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _8711_param;
        _8711_param = (@params).Select(_8710_i);
        RAST._IType _8712_paramType;
        RAST._IType _out3960;
        _out3960 = DCOMPUTF16.COMP.GenType((_8711_param).dtor_typ, false, false);
        _8712_paramType = _out3960;
        if (!((_8712_paramType).HasCopySemantics())) {
          _8712_paramType = RAST.Type.create_Borrowed(_8712_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_8711_param).dtor_name), _8712_paramType)));
        _8710_i = (_8710_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _8713_params;
      Dafny.ISequence<RAST._IFormal> _out3961;
      _out3961 = DCOMPUTF16.COMP.GenParams((m).dtor_params);
      _8713_params = _out3961;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8714_paramNames;
      _8714_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8715_paramTypes;
      _8715_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi29 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _8716_paramI = BigInteger.Zero; _8716_paramI < _hi29; _8716_paramI++) {
        DAST._IFormal _8717_dafny__formal;
        _8717_dafny__formal = ((m).dtor_params).Select(_8716_paramI);
        RAST._IFormal _8718_formal;
        _8718_formal = (_8713_params).Select(_8716_paramI);
        Dafny.ISequence<Dafny.Rune> _8719_name;
        _8719_name = (_8718_formal).dtor_name;
        _8714_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8714_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8719_name));
        _8715_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8715_paramTypes, _8719_name, (_8718_formal).dtor_tpe);
      }
      Dafny.ISequence<Dafny.Rune> _8720_fnName;
      _8720_fnName = DCOMPUTF16.__default.escapeIdent((m).dtor_name);
      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8721_selfIdentifier;
      _8721_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      if (!((m).dtor_isStatic)) {
        Dafny.ISequence<Dafny.Rune> _8722_selfId;
        _8722_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self");
        if ((_8720_fnName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ctor"))) {
          _8722_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this");
        }
        if (forTrait) {
          RAST._IFormal _8723_selfFormal;
          _8723_selfFormal = (((m).dtor_wasFunction) ? (RAST.Formal.selfBorrowed) : (RAST.Formal.selfBorrowedMut));
          _8713_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(_8723_selfFormal), _8713_params);
        } else {
          RAST._IType _8724_tpe;
          RAST._IType _out3962;
          _out3962 = DCOMPUTF16.COMP.GenType(enclosingType, false, false);
          _8724_tpe = _out3962;
          if (!((_8724_tpe).HasCopySemantics())) {
            _8724_tpe = RAST.Type.create_Borrowed(_8724_tpe);
          }
          if ((_8722_selfId).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
            if ((_8724_tpe).IsSelfPointer()) {
              if ((m).dtor_wasFunction) {
                _8724_tpe = RAST.__default.SelfBorrowed;
              } else {
                _8724_tpe = RAST.__default.SelfBorrowedMut;
              }
            } else {
              Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#### Weird this type: ")).ToVerbatimString(false));
              Dafny.Helpers.Print((_8724_tpe));
              Dafny.Helpers.Print((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")).ToVerbatimString(false));
            }
          }
          _8713_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(_8722_selfId, _8724_tpe)), _8713_params);
        }
        _8721_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_8722_selfId);
      }
      Dafny.ISequence<RAST._IType> _8725_retTypeArgs;
      _8725_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _8726_typeI;
      _8726_typeI = BigInteger.Zero;
      while ((_8726_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _8727_typeExpr;
        RAST._IType _out3963;
        _out3963 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_8726_typeI), false, false);
        _8727_typeExpr = _out3963;
        _8725_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_8725_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_8727_typeExpr));
        _8726_typeI = (_8726_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _8728_visibility;
      _8728_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<DAST._IType> _8729_typeParamsFiltered;
      _8729_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _hi30 = new BigInteger(((m).dtor_typeParams).Count);
      for (BigInteger _8730_typeParamI = BigInteger.Zero; _8730_typeParamI < _hi30; _8730_typeParamI++) {
        DAST._IType _8731_typeParam;
        _8731_typeParam = ((m).dtor_typeParams).Select(_8730_typeParamI);
        if (!((enclosingTypeParams).Contains(_8731_typeParam))) {
          _8729_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_8729_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_8731_typeParam));
        }
      }
      Dafny.ISequence<Dafny.Rune> _8732_whereClauses;
      _8732_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _8733_typeParams;
      _8733_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_8729_typeParamsFiltered).Count)).Sign == 1) {
        _8732_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_8732_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _8734_i;
        _8734_i = BigInteger.Zero;
        while ((_8734_i) < (new BigInteger((_8729_typeParamsFiltered).Count))) {
          RAST._IType _8735_typeExpr;
          RAST._IType _out3964;
          _out3964 = DCOMPUTF16.COMP.GenType((_8729_typeParamsFiltered).Select(_8734_i), false, false);
          _8735_typeExpr = _out3964;
          _8733_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_8733_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_8735_typeExpr)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _8734_i = (_8734_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _8736_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMPUTF16._IEnvironment _8737_env = DCOMPUTF16.Environment.Default();
      RAST._IExpr _8738_preBody;
      _8738_preBody = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8739_preAssignNames;
      _8739_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8740_preAssignTypes;
      _8740_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      if ((m).dtor_hasBody) {
        RAST._IExpr _8741_earlyReturn;
        _8741_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source441 = (m).dtor_outVars;
        if (_source441.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8742___mcc_h0 = _source441.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8743_outVars = _8742___mcc_h0;
          {
            if ((m).dtor_outVarsAreUninitFieldsToAssign) {
              _8741_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(Dafny.Sequence<RAST._IExpr>.FromElements())));
              BigInteger _hi31 = new BigInteger((_8743_outVars).Count);
              for (BigInteger _8744_outI = BigInteger.Zero; _8744_outI < _hi31; _8744_outI++) {
                Dafny.ISequence<Dafny.Rune> _8745_outVar;
                _8745_outVar = (_8743_outVars).Select(_8744_outI);
                Dafny.ISequence<Dafny.Rune> _8746_outName;
                _8746_outName = DCOMPUTF16.__default.escapeIdent((_8745_outVar));
                Dafny.ISequence<Dafny.Rune> _8747_tracker__name;
                _8747_tracker__name = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.ASSIGNED__PREFIX, _8746_outName);
                _8739_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8739_preAssignNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8747_tracker__name));
                _8740_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8740_preAssignTypes, _8747_tracker__name, RAST.Type.create_Bool());
                _8738_preBody = (_8738_preBody).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _8747_tracker__name, Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_LiteralBool(false))));
              }
            } else {
              Dafny.ISequence<RAST._IExpr> _8748_tupleArgs;
              _8748_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
              BigInteger _hi32 = new BigInteger((_8743_outVars).Count);
              for (BigInteger _8749_outI = BigInteger.Zero; _8749_outI < _hi32; _8749_outI++) {
                Dafny.ISequence<Dafny.Rune> _8750_outVar;
                _8750_outVar = (_8743_outVars).Select(_8749_outI);
                RAST._IType _8751_outType;
                RAST._IType _out3965;
                _out3965 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_8749_outI), false, false);
                _8751_outType = _out3965;
                Dafny.ISequence<Dafny.Rune> _8752_outName;
                _8752_outName = DCOMPUTF16.__default.escapeIdent((_8750_outVar));
                _8714_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8714_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8752_outName));
                RAST._IType _8753_outMaybeType;
                _8753_outMaybeType = (((_8751_outType).HasCopySemantics()) ? (_8751_outType) : (RAST.__default.MaybePlaceboType(_8751_outType)));
                _8715_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8715_paramTypes, _8752_outName, _8753_outMaybeType);
                RAST._IExpr _8754_outVarReturn;
                DCOMPUTF16._IOwnership _8755___v53;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8756___v54;
                RAST._IExpr _out3966;
                DCOMPUTF16._IOwnership _out3967;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3968;
                DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident((_8750_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8752_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_8752_outName, _8753_outMaybeType))), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3966, out _out3967, out _out3968);
                _8754_outVarReturn = _out3966;
                _8755___v53 = _out3967;
                _8756___v54 = _out3968;
                _8748_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_8748_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_8754_outVarReturn));
              }
              if ((new BigInteger((_8748_tupleArgs).Count)) == (BigInteger.One)) {
                _8741_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_8748_tupleArgs).Select(BigInteger.Zero)));
              } else {
                _8741_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_8748_tupleArgs)));
              }
            }
          }
        }
        _8737_env = DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8739_preAssignNames, _8714_paramNames), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Merge(_8740_preAssignTypes, _8715_paramTypes));
        RAST._IExpr _8757_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8758___v55;
        DCOMPUTF16._IEnvironment _8759___v56;
        RAST._IExpr _out3969;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3970;
        DCOMPUTF16._IEnvironment _out3971;
        DCOMPUTF16.COMP.GenStmts((m).dtor_body, _8721_selfIdentifier, _8737_env, true, _8741_earlyReturn, out _out3969, out _out3970, out _out3971);
        _8757_body = _out3969;
        _8758___v55 = _out3970;
        _8759___v56 = _out3971;
        _8736_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some((_8738_preBody).Then(_8757_body));
      } else {
        _8737_env = DCOMPUTF16.Environment.create(_8714_paramNames, _8715_paramTypes);
        _8736_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_8728_visibility, RAST.Fn.create(_8720_fnName, _8733_typeParams, _8713_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_8725_retTypeArgs).Count)) == (BigInteger.One)) ? ((_8725_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_8725_retTypeArgs)))), _8732_whereClauses, _8736_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8760_declarations;
      _8760_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _8761_i;
      _8761_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _8762_stmts;
      _8762_stmts = stmts;
      while ((_8761_i) < (new BigInteger((_8762_stmts).Count))) {
        DAST._IStatement _8763_stmt;
        _8763_stmt = (_8762_stmts).Select(_8761_i);
        DAST._IStatement _source442 = _8763_stmt;
        if (_source442.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _8764___mcc_h0 = _source442.dtor_name;
          DAST._IType _8765___mcc_h1 = _source442.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _8766___mcc_h2 = _source442.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source443 = _8766___mcc_h2;
          if (_source443.is_None) {
            DAST._IType _8767_optType = _8765___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _8768_name = _8764___mcc_h0;
            if (((_8761_i) + (BigInteger.One)) < (new BigInteger((_8762_stmts).Count))) {
              DAST._IStatement _source444 = (_8762_stmts).Select((_8761_i) + (BigInteger.One));
              if (_source444.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _8769___mcc_h52 = _source444.dtor_name;
                DAST._IType _8770___mcc_h53 = _source444.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _8771___mcc_h54 = _source444.dtor_maybeValue;
              } else if (_source444.is_Assign) {
                DAST._IAssignLhs _8772___mcc_h58 = _source444.dtor_lhs;
                DAST._IExpression _8773___mcc_h59 = _source444.dtor_value;
                DAST._IAssignLhs _source445 = _8772___mcc_h58;
                if (_source445.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _8774___mcc_h62 = _source445.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source446 = _8774___mcc_h62;
                  Dafny.ISequence<Dafny.Rune> _8775___mcc_h64 = _source446;
                  DAST._IExpression _8776_rhs = _8773___mcc_h59;
                  Dafny.ISequence<Dafny.Rune> _8777_name2 = _8775___mcc_h64;
                  if ((_8777_name2).Equals(_8768_name)) {
                    _8762_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_8762_stmts).Subsequence(BigInteger.Zero, _8761_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_8768_name, _8767_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_8776_rhs)))), (_8762_stmts).Drop((_8761_i) + (BigInteger.One)));
                    _8763_stmt = (_8762_stmts).Select(_8761_i);
                  }
                } else if (_source445.is_Select) {
                  DAST._IExpression _8778___mcc_h66 = _source445.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _8779___mcc_h67 = _source445.dtor_field;
                } else {
                  DAST._IExpression _8780___mcc_h70 = _source445.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _8781___mcc_h71 = _source445.dtor_indices;
                }
              } else if (_source444.is_If) {
                DAST._IExpression _8782___mcc_h74 = _source444.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _8783___mcc_h75 = _source444.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _8784___mcc_h76 = _source444.dtor_els;
              } else if (_source444.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _8785___mcc_h80 = _source444.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _8786___mcc_h81 = _source444.dtor_body;
              } else if (_source444.is_While) {
                DAST._IExpression _8787___mcc_h84 = _source444.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _8788___mcc_h85 = _source444.dtor_body;
              } else if (_source444.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _8789___mcc_h88 = _source444.dtor_boundName;
                DAST._IType _8790___mcc_h89 = _source444.dtor_boundType;
                DAST._IExpression _8791___mcc_h90 = _source444.dtor_over;
                Dafny.ISequence<DAST._IStatement> _8792___mcc_h91 = _source444.dtor_body;
              } else if (_source444.is_Call) {
                DAST._IExpression _8793___mcc_h96 = _source444.dtor_on;
                DAST._ICallName _8794___mcc_h97 = _source444.dtor_callName;
                Dafny.ISequence<DAST._IType> _8795___mcc_h98 = _source444.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _8796___mcc_h99 = _source444.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8797___mcc_h100 = _source444.dtor_outs;
              } else if (_source444.is_Return) {
                DAST._IExpression _8798___mcc_h106 = _source444.dtor_expr;
              } else if (_source444.is_EarlyReturn) {
              } else if (_source444.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8799___mcc_h108 = _source444.dtor_toLabel;
              } else if (_source444.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _8800___mcc_h110 = _source444.dtor_body;
              } else if (_source444.is_JumpTailCallStart) {
              } else if (_source444.is_Halt) {
              } else {
                DAST._IExpression _8801___mcc_h112 = _source444.dtor_Print_a0;
              }
            }
          } else {
            DAST._IExpression _8802___mcc_h6 = _source443.dtor_value;
          }
        } else if (_source442.is_Assign) {
          DAST._IAssignLhs _8803___mcc_h8 = _source442.dtor_lhs;
          DAST._IExpression _8804___mcc_h9 = _source442.dtor_value;
        } else if (_source442.is_If) {
          DAST._IExpression _8805___mcc_h12 = _source442.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8806___mcc_h13 = _source442.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _8807___mcc_h14 = _source442.dtor_els;
        } else if (_source442.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _8808___mcc_h18 = _source442.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _8809___mcc_h19 = _source442.dtor_body;
        } else if (_source442.is_While) {
          DAST._IExpression _8810___mcc_h22 = _source442.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8811___mcc_h23 = _source442.dtor_body;
        } else if (_source442.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _8812___mcc_h26 = _source442.dtor_boundName;
          DAST._IType _8813___mcc_h27 = _source442.dtor_boundType;
          DAST._IExpression _8814___mcc_h28 = _source442.dtor_over;
          Dafny.ISequence<DAST._IStatement> _8815___mcc_h29 = _source442.dtor_body;
        } else if (_source442.is_Call) {
          DAST._IExpression _8816___mcc_h34 = _source442.dtor_on;
          DAST._ICallName _8817___mcc_h35 = _source442.dtor_callName;
          Dafny.ISequence<DAST._IType> _8818___mcc_h36 = _source442.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8819___mcc_h37 = _source442.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8820___mcc_h38 = _source442.dtor_outs;
        } else if (_source442.is_Return) {
          DAST._IExpression _8821___mcc_h44 = _source442.dtor_expr;
        } else if (_source442.is_EarlyReturn) {
        } else if (_source442.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8822___mcc_h46 = _source442.dtor_toLabel;
        } else if (_source442.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _8823___mcc_h48 = _source442.dtor_body;
        } else if (_source442.is_JumpTailCallStart) {
        } else if (_source442.is_Halt) {
        } else {
          DAST._IExpression _8824___mcc_h50 = _source442.dtor_Print_a0;
        }
        RAST._IExpr _8825_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8826_recIdents;
        DCOMPUTF16._IEnvironment _8827_newEnv2;
        RAST._IExpr _out3972;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3973;
        DCOMPUTF16._IEnvironment _out3974;
        DCOMPUTF16.COMP.GenStmt(_8763_stmt, selfIdent, newEnv, (isLast) && ((_8761_i) == ((new BigInteger((_8762_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out3972, out _out3973, out _out3974);
        _8825_stmtExpr = _out3972;
        _8826_recIdents = _out3973;
        _8827_newEnv2 = _out3974;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8826_recIdents, _8760_declarations));
        newEnv = _8827_newEnv2;
        DAST._IStatement _source447 = _8763_stmt;
        if (_source447.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _8828___mcc_h114 = _source447.dtor_name;
          DAST._IType _8829___mcc_h115 = _source447.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _8830___mcc_h116 = _source447.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _8831_name = _8828___mcc_h114;
          {
            _8760_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8760_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8831_name));
          }
        } else if (_source447.is_Assign) {
          DAST._IAssignLhs _8832___mcc_h120 = _source447.dtor_lhs;
          DAST._IExpression _8833___mcc_h121 = _source447.dtor_value;
        } else if (_source447.is_If) {
          DAST._IExpression _8834___mcc_h124 = _source447.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8835___mcc_h125 = _source447.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _8836___mcc_h126 = _source447.dtor_els;
        } else if (_source447.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _8837___mcc_h130 = _source447.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _8838___mcc_h131 = _source447.dtor_body;
        } else if (_source447.is_While) {
          DAST._IExpression _8839___mcc_h134 = _source447.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8840___mcc_h135 = _source447.dtor_body;
        } else if (_source447.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _8841___mcc_h138 = _source447.dtor_boundName;
          DAST._IType _8842___mcc_h139 = _source447.dtor_boundType;
          DAST._IExpression _8843___mcc_h140 = _source447.dtor_over;
          Dafny.ISequence<DAST._IStatement> _8844___mcc_h141 = _source447.dtor_body;
        } else if (_source447.is_Call) {
          DAST._IExpression _8845___mcc_h146 = _source447.dtor_on;
          DAST._ICallName _8846___mcc_h147 = _source447.dtor_callName;
          Dafny.ISequence<DAST._IType> _8847___mcc_h148 = _source447.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8848___mcc_h149 = _source447.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8849___mcc_h150 = _source447.dtor_outs;
        } else if (_source447.is_Return) {
          DAST._IExpression _8850___mcc_h156 = _source447.dtor_expr;
        } else if (_source447.is_EarlyReturn) {
        } else if (_source447.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8851___mcc_h158 = _source447.dtor_toLabel;
        } else if (_source447.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _8852___mcc_h160 = _source447.dtor_body;
        } else if (_source447.is_JumpTailCallStart) {
        } else if (_source447.is_Halt) {
        } else {
          DAST._IExpression _8853___mcc_h162 = _source447.dtor_Print_a0;
        }
        generated = (generated).Then(_8825_stmtExpr);
        _8761_i = (_8761_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, RAST._IExpr rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, out RAST._IExpr generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = RAST.Expr.Default();
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source448 = lhs;
      if (_source448.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _8854___mcc_h0 = _source448.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source449 = _8854___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _8855___mcc_h1 = _source449;
        Dafny.ISequence<Dafny.Rune> _8856_id = _8855___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _8857_idRust;
          _8857_idRust = DCOMPUTF16.__default.escapeIdent(_8856_id);
          if (((env).IsBorrowed(_8857_idRust)) || ((env).IsBorrowedMut(_8857_idRust))) {
            generated = RAST.__default.AssignVar(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), _8857_idRust), rhs);
          } else {
            generated = RAST.__default.AssignVar(_8857_idRust, rhs);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8856_id);
          needsIIFE = false;
        }
      } else if (_source448.is_Select) {
        DAST._IExpression _8858___mcc_h2 = _source448.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _8859___mcc_h3 = _source448.dtor_field;
        Dafny.ISequence<Dafny.Rune> _8860_field = _8859___mcc_h3;
        DAST._IExpression _8861_on = _8858___mcc_h2;
        {
          Dafny.ISequence<Dafny.Rune> _8862_fieldName;
          _8862_fieldName = DCOMPUTF16.__default.escapeIdent(_8860_field);
          RAST._IExpr _8863_onExpr;
          DCOMPUTF16._IOwnership _8864_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8865_recIdents;
          RAST._IExpr _out3975;
          DCOMPUTF16._IOwnership _out3976;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3977;
          DCOMPUTF16.COMP.GenExpr(_8861_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3975, out _out3976, out _out3977);
          _8863_onExpr = _out3975;
          _8864_onOwned = _out3976;
          _8865_recIdents = _out3977;
          if ((object.Equals(_8863_onExpr, RAST.__default.Borrow(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))))) && (((env).dtor_names).Contains(Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.ASSIGNED__PREFIX, _8862_fieldName)))) {
            generated = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_uninit!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this")), RAST.Expr.create_Identifier(_8862_fieldName), RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.ASSIGNED__PREFIX, _8862_fieldName)), rhs));
          } else {
            if (!object.Equals(_8863_onExpr, RAST.__default.self)) {
              _8863_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8863_onExpr);
            }
            generated = RAST.__default.AssignMember(_8863_onExpr, _8862_fieldName, rhs);
          }
          readIdents = _8865_recIdents;
          needsIIFE = false;
        }
      } else {
        DAST._IExpression _8866___mcc_h4 = _source448.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _8867___mcc_h5 = _source448.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _8868_indices = _8867___mcc_h5;
        DAST._IExpression _8869_on = _8866___mcc_h4;
        {
          RAST._IExpr _8870_onExpr;
          DCOMPUTF16._IOwnership _8871_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8872_recIdents;
          RAST._IExpr _out3978;
          DCOMPUTF16._IOwnership _out3979;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3980;
          DCOMPUTF16.COMP.GenExpr(_8869_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3978, out _out3979, out _out3980);
          _8870_onExpr = _out3978;
          _8871_onOwned = _out3979;
          _8872_recIdents = _out3980;
          readIdents = _8872_recIdents;
          Dafny.ISequence<Dafny.Rune> _8873_s;
          _8873_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _8874_i;
          _8874_i = BigInteger.Zero;
          while ((_8874_i) < (new BigInteger((_8868_indices).Count))) {
            RAST._IExpr _8875_idx;
            DCOMPUTF16._IOwnership _8876___v62;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8877_recIdentsIdx;
            RAST._IExpr _out3981;
            DCOMPUTF16._IOwnership _out3982;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3983;
            DCOMPUTF16.COMP.GenExpr((_8868_indices).Select(_8874_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3981, out _out3982, out _out3983);
            _8875_idx = _out3981;
            _8876___v62 = _out3982;
            _8877_recIdentsIdx = _out3983;
            _8873_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8873_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_8874_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_8875_idx)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8877_recIdentsIdx);
            _8874_i = (_8874_i) + (BigInteger.One);
          }
          _8873_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8873_s, (_8870_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _8874_i = BigInteger.Zero;
          while ((_8874_i) < (new BigInteger((_8868_indices).Count))) {
            _8873_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8873_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_8874_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _8874_i = (_8874_i) + (BigInteger.One);
          }
          _8873_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_8873_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (rhs)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          generated = RAST.Expr.create_RawExpr(_8873_s);
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      DAST._IStatement _source450 = stmt;
      if (_source450.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _8878___mcc_h0 = _source450.dtor_name;
        DAST._IType _8879___mcc_h1 = _source450.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _8880___mcc_h2 = _source450.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source451 = _8880___mcc_h2;
        if (_source451.is_None) {
          DAST._IType _8881_typ = _8879___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _8882_name = _8878___mcc_h0;
          {
            DAST._IStatement _8883_newStmt;
            _8883_newStmt = DAST.Statement.create_DeclareVar(_8882_name, _8881_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_8881_typ)));
            RAST._IExpr _out3984;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3985;
            DCOMPUTF16._IEnvironment _out3986;
            DCOMPUTF16.COMP.GenStmt(_8883_newStmt, selfIdent, env, isLast, earlyReturn, out _out3984, out _out3985, out _out3986);
            generated = _out3984;
            readIdents = _out3985;
            newEnv = _out3986;
          }
        } else {
          DAST._IExpression _8884___mcc_h3 = _source451.dtor_value;
          DAST._IExpression _8885_expression = _8884___mcc_h3;
          DAST._IType _8886_typ = _8879___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _8887_name = _8878___mcc_h0;
          {
            RAST._IType _8888_tpe;
            RAST._IType _out3987;
            _out3987 = DCOMPUTF16.COMP.GenType(_8886_typ, true, false);
            _8888_tpe = _out3987;
            Dafny.ISequence<Dafny.Rune> _8889_varName;
            _8889_varName = DCOMPUTF16.__default.escapeIdent(_8887_name);
            bool _8890_hasCopySemantics;
            _8890_hasCopySemantics = (_8888_tpe).HasCopySemantics();
            if (((_8885_expression).is_InitializationValue) && (!(_8890_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _8889_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_8888_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_8889_varName, RAST.__default.MaybePlaceboType(_8888_tpe));
            } else {
              RAST._IExpr _8891_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8892_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_8885_expression).is_InitializationValue) && (((_8888_tpe).is_Pointer) || ((_8888_tpe).is_PointerMut))) {
                _8891_expr = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ptr"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("null_mut"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                _8892_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMPUTF16._IOwnership _8893_exprOwnership = DCOMPUTF16.Ownership.Default();
                RAST._IExpr _out3988;
                DCOMPUTF16._IOwnership _out3989;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3990;
                DCOMPUTF16.COMP.GenExpr(_8885_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3988, out _out3989, out _out3990);
                _8891_expr = _out3988;
                _8893_exprOwnership = _out3989;
                _8892_recIdents = _out3990;
              }
              readIdents = _8892_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_8887_name), Std.Wrappers.Option<RAST._IType>.create_Some(_8888_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8891_expr));
              newEnv = (env).AddAssigned(DCOMPUTF16.__default.escapeIdent(_8887_name), _8888_tpe);
            }
          }
        }
      } else if (_source450.is_Assign) {
        DAST._IAssignLhs _8894___mcc_h4 = _source450.dtor_lhs;
        DAST._IExpression _8895___mcc_h5 = _source450.dtor_value;
        DAST._IExpression _8896_expression = _8895___mcc_h5;
        DAST._IAssignLhs _8897_lhs = _8894___mcc_h4;
        {
          RAST._IExpr _8898_exprGen;
          DCOMPUTF16._IOwnership _8899___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8900_exprIdents;
          RAST._IExpr _out3991;
          DCOMPUTF16._IOwnership _out3992;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3993;
          DCOMPUTF16.COMP.GenExpr(_8896_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3991, out _out3992, out _out3993);
          _8898_exprGen = _out3991;
          _8899___v63 = _out3992;
          _8900_exprIdents = _out3993;
          if ((_8897_lhs).is_Ident) {
            Dafny.ISequence<Dafny.Rune> _8901_rustId;
            _8901_rustId = DCOMPUTF16.__default.escapeIdent(((_8897_lhs).dtor_ident));
            Std.Wrappers._IOption<RAST._IType> _8902_tpe;
            _8902_tpe = (env).GetType(_8901_rustId);
            if (((_8902_tpe).is_Some) && ((((_8902_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
              _8898_exprGen = RAST.__default.MaybePlacebo(_8898_exprGen);
            }
          }
          RAST._IExpr _8903_lhsGen;
          bool _8904_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8905_recIdents;
          RAST._IExpr _out3994;
          bool _out3995;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3996;
          DCOMPUTF16.COMP.GenAssignLhs(_8897_lhs, _8898_exprGen, selfIdent, env, out _out3994, out _out3995, out _out3996);
          _8903_lhsGen = _out3994;
          _8904_needsIIFE = _out3995;
          _8905_recIdents = _out3996;
          generated = _8903_lhsGen;
          if (_8904_needsIIFE) {
            generated = RAST.Expr.create_Block(generated);
          }
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8905_recIdents, _8900_exprIdents);
        }
      } else if (_source450.is_If) {
        DAST._IExpression _8906___mcc_h6 = _source450.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _8907___mcc_h7 = _source450.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _8908___mcc_h8 = _source450.dtor_els;
        Dafny.ISequence<DAST._IStatement> _8909_elsDafny = _8908___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _8910_thnDafny = _8907___mcc_h7;
        DAST._IExpression _8911_cond = _8906___mcc_h6;
        {
          RAST._IExpr _8912_cond;
          DCOMPUTF16._IOwnership _8913___v64;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8914_recIdents;
          RAST._IExpr _out3997;
          DCOMPUTF16._IOwnership _out3998;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3999;
          DCOMPUTF16.COMP.GenExpr(_8911_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3997, out _out3998, out _out3999);
          _8912_cond = _out3997;
          _8913___v64 = _out3998;
          _8914_recIdents = _out3999;
          Dafny.ISequence<Dafny.Rune> _8915_condString;
          _8915_condString = (_8912_cond)._ToString(DCOMPUTF16.__default.IND);
          readIdents = _8914_recIdents;
          RAST._IExpr _8916_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8917_thnIdents;
          DCOMPUTF16._IEnvironment _8918_thnEnv;
          RAST._IExpr _out4000;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4001;
          DCOMPUTF16._IEnvironment _out4002;
          DCOMPUTF16.COMP.GenStmts(_8910_thnDafny, selfIdent, env, isLast, earlyReturn, out _out4000, out _out4001, out _out4002);
          _8916_thn = _out4000;
          _8917_thnIdents = _out4001;
          _8918_thnEnv = _out4002;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8917_thnIdents);
          RAST._IExpr _8919_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8920_elsIdents;
          DCOMPUTF16._IEnvironment _8921_elsEnv;
          RAST._IExpr _out4003;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4004;
          DCOMPUTF16._IEnvironment _out4005;
          DCOMPUTF16.COMP.GenStmts(_8909_elsDafny, selfIdent, env, isLast, earlyReturn, out _out4003, out _out4004, out _out4005);
          _8919_els = _out4003;
          _8920_elsIdents = _out4004;
          _8921_elsEnv = _out4005;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8920_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_8912_cond, _8916_thn, _8919_els);
        }
      } else if (_source450.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _8922___mcc_h9 = _source450.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _8923___mcc_h10 = _source450.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8924_body = _8923___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _8925_lbl = _8922___mcc_h9;
        {
          RAST._IExpr _8926_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8927_bodyIdents;
          DCOMPUTF16._IEnvironment _8928_env2;
          RAST._IExpr _out4006;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4007;
          DCOMPUTF16._IEnvironment _out4008;
          DCOMPUTF16.COMP.GenStmts(_8924_body, selfIdent, env, isLast, earlyReturn, out _out4006, out _out4007, out _out4008);
          _8926_body = _out4006;
          _8927_bodyIdents = _out4007;
          _8928_env2 = _out4008;
          readIdents = _8927_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _8925_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_8926_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source450.is_While) {
        DAST._IExpression _8929___mcc_h11 = _source450.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _8930___mcc_h12 = _source450.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8931_body = _8930___mcc_h12;
        DAST._IExpression _8932_cond = _8929___mcc_h11;
        {
          RAST._IExpr _8933_cond;
          DCOMPUTF16._IOwnership _8934___v65;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8935_recIdents;
          RAST._IExpr _out4009;
          DCOMPUTF16._IOwnership _out4010;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4011;
          DCOMPUTF16.COMP.GenExpr(_8932_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4009, out _out4010, out _out4011);
          _8933_cond = _out4009;
          _8934___v65 = _out4010;
          _8935_recIdents = _out4011;
          readIdents = _8935_recIdents;
          RAST._IExpr _8936_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8937_bodyIdents;
          DCOMPUTF16._IEnvironment _8938_bodyEnv;
          RAST._IExpr _out4012;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4013;
          DCOMPUTF16._IEnvironment _out4014;
          DCOMPUTF16.COMP.GenStmts(_8931_body, selfIdent, env, false, earlyReturn, out _out4012, out _out4013, out _out4014);
          _8936_bodyExpr = _out4012;
          _8937_bodyIdents = _out4013;
          _8938_bodyEnv = _out4014;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8937_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_8933_cond), _8936_bodyExpr);
        }
      } else if (_source450.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _8939___mcc_h13 = _source450.dtor_boundName;
        DAST._IType _8940___mcc_h14 = _source450.dtor_boundType;
        DAST._IExpression _8941___mcc_h15 = _source450.dtor_over;
        Dafny.ISequence<DAST._IStatement> _8942___mcc_h16 = _source450.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8943_body = _8942___mcc_h16;
        DAST._IExpression _8944_over = _8941___mcc_h15;
        DAST._IType _8945_boundType = _8940___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _8946_boundName = _8939___mcc_h13;
        {
          RAST._IExpr _8947_over;
          DCOMPUTF16._IOwnership _8948___v66;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8949_recIdents;
          RAST._IExpr _out4015;
          DCOMPUTF16._IOwnership _out4016;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4017;
          DCOMPUTF16.COMP.GenExpr(_8944_over, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4015, out _out4016, out _out4017);
          _8947_over = _out4015;
          _8948___v66 = _out4016;
          _8949_recIdents = _out4017;
          RAST._IType _8950_boundTpe;
          RAST._IType _out4018;
          _out4018 = DCOMPUTF16.COMP.GenType(_8945_boundType, false, false);
          _8950_boundTpe = _out4018;
          readIdents = _8949_recIdents;
          RAST._IExpr _8951_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8952_bodyIdents;
          DCOMPUTF16._IEnvironment _8953_bodyEnv;
          RAST._IExpr _out4019;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4020;
          DCOMPUTF16._IEnvironment _out4021;
          DCOMPUTF16.COMP.GenStmts(_8943_body, selfIdent, (env).AddAssigned(_8946_boundName, RAST.Type.create_Borrowed(_8950_boundTpe)), false, earlyReturn, out _out4019, out _out4020, out _out4021);
          _8951_bodyExpr = _out4019;
          _8952_bodyIdents = _out4020;
          _8953_bodyEnv = _out4021;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8952_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8946_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMPUTF16.__default.escapeIdent(_8946_boundName), _8947_over, _8951_bodyExpr);
        }
      } else if (_source450.is_Call) {
        DAST._IExpression _8954___mcc_h17 = _source450.dtor_on;
        DAST._ICallName _8955___mcc_h18 = _source450.dtor_callName;
        Dafny.ISequence<DAST._IType> _8956___mcc_h19 = _source450.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _8957___mcc_h20 = _source450.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8958___mcc_h21 = _source450.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8959_maybeOutVars = _8958___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _8960_args = _8957___mcc_h20;
        Dafny.ISequence<DAST._IType> _8961_typeArgs = _8956___mcc_h19;
        DAST._ICallName _8962_name = _8955___mcc_h18;
        DAST._IExpression _8963_on = _8954___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _8964_onExpr;
          DCOMPUTF16._IOwnership _8965___v69;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8966_enclosingIdents;
          RAST._IExpr _out4022;
          DCOMPUTF16._IOwnership _out4023;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4024;
          DCOMPUTF16.COMP.GenExpr(_8963_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out4022, out _out4023, out _out4024);
          _8964_onExpr = _out4022;
          _8965___v69 = _out4023;
          _8966_enclosingIdents = _out4024;
          Dafny.ISequence<RAST._IType> _8967_typeExprs;
          _8967_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_8961_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _8968_typeI;
            _8968_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _8969_typeArgsR;
            _8969_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_8968_typeI) < (new BigInteger((_8961_typeArgs).Count))) {
              RAST._IType _8970_tpe;
              RAST._IType _out4025;
              _out4025 = DCOMPUTF16.COMP.GenType((_8961_typeArgs).Select(_8968_typeI), false, false);
              _8970_tpe = _out4025;
              _8969_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_8969_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_8970_tpe));
              _8968_typeI = (_8968_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _8971_argExprs;
          _8971_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi33 = new BigInteger((_8960_args).Count);
          for (BigInteger _8972_i = BigInteger.Zero; _8972_i < _hi33; _8972_i++) {
            DCOMPUTF16._IOwnership _8973_argOwnership;
            _8973_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_8962_name).is_Name) && ((_8972_i) < (new BigInteger((((_8962_name).dtor_signature)).Count)))) {
              RAST._IType _8974_tpe;
              RAST._IType _out4026;
              _out4026 = DCOMPUTF16.COMP.GenType(((((_8962_name).dtor_signature)).Select(_8972_i)).dtor_typ, false, false);
              _8974_tpe = _out4026;
              if ((_8974_tpe).HasCopySemantics()) {
                _8973_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _8975_argExpr;
            DCOMPUTF16._IOwnership _8976_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8977_argIdents;
            RAST._IExpr _out4027;
            DCOMPUTF16._IOwnership _out4028;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4029;
            DCOMPUTF16.COMP.GenExpr((_8960_args).Select(_8972_i), selfIdent, env, _8973_argOwnership, out _out4027, out _out4028, out _out4029);
            _8975_argExpr = _out4027;
            _8976_ownership = _out4028;
            _8977_argIdents = _out4029;
            _8971_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_8971_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_8975_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8977_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8966_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _8978_renderedName;
          _8978_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source452) => {
            if (_source452.is_Name) {
              Dafny.ISequence<Dafny.Rune> _8979___mcc_h26 = _source452.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _8980___mcc_h27 = _source452.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _8981___mcc_h28 = _source452.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _8982_name = _8979___mcc_h26;
              return DCOMPUTF16.__default.escapeIdent(_8982_name);
            } else if (_source452.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source452.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source452.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_8962_name);
          DAST._IExpression _source453 = _8963_on;
          if (_source453.is_Literal) {
            DAST._ILiteral _8983___mcc_h29 = _source453.dtor_Literal_a0;
            {
              DAST._ICallName _source454 = _8962_name;
              if (_source454.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8984___mcc_h211 = _source454.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8985___mcc_h212 = _source454.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8986___mcc_h213 = _source454.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source455 = _8985___mcc_h212;
                if (_source455.is_None) {
                } else {
                  DAST._IType _8987___mcc_h217 = _source455.dtor_value;
                  DAST._IType _8988_tpe = _8987___mcc_h217;
                  RAST._IType _8989_typ;
                  RAST._IType _out4030;
                  _out4030 = DCOMPUTF16.COMP.GenType(_8988_tpe, false, false);
                  _8989_typ = _out4030;
                  if (((_8989_typ).is_Pointer) || ((_8989_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source454.is_MapBuilderAdd) {
              } else if (_source454.is_MapBuilderBuild) {
              } else if (_source454.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _8990___mcc_h31 = _source453.dtor_Ident_a0;
            {
              DAST._ICallName _source456 = _8962_name;
              if (_source456.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8991___mcc_h219 = _source456.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _8992___mcc_h220 = _source456.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _8993___mcc_h221 = _source456.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source457 = _8992___mcc_h220;
                if (_source457.is_None) {
                } else {
                  DAST._IType _8994___mcc_h225 = _source457.dtor_value;
                  DAST._IType _8995_tpe = _8994___mcc_h225;
                  RAST._IType _8996_typ;
                  RAST._IType _out4031;
                  _out4031 = DCOMPUTF16.COMP.GenType(_8995_tpe, false, false);
                  _8996_typ = _out4031;
                  if (((_8996_typ).is_Pointer) || ((_8996_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source456.is_MapBuilderAdd) {
              } else if (_source456.is_MapBuilderBuild) {
              } else if (_source456.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8997___mcc_h33 = _source453.dtor_Companion_a0;
            {
              _8964_onExpr = (_8964_onExpr).MSel(_8978_renderedName);
            }
          } else if (_source453.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _8998___mcc_h35 = _source453.dtor_Tuple_a0;
            {
              DAST._ICallName _source458 = _8962_name;
              if (_source458.is_Name) {
                Dafny.ISequence<Dafny.Rune> _8999___mcc_h227 = _source458.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9000___mcc_h228 = _source458.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9001___mcc_h229 = _source458.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source459 = _9000___mcc_h228;
                if (_source459.is_None) {
                } else {
                  DAST._IType _9002___mcc_h233 = _source459.dtor_value;
                  DAST._IType _9003_tpe = _9002___mcc_h233;
                  RAST._IType _9004_typ;
                  RAST._IType _out4032;
                  _out4032 = DCOMPUTF16.COMP.GenType(_9003_tpe, false, false);
                  _9004_typ = _out4032;
                  if (((_9004_typ).is_Pointer) || ((_9004_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source458.is_MapBuilderAdd) {
              } else if (_source458.is_MapBuilderBuild) {
              } else if (_source458.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9005___mcc_h37 = _source453.dtor_path;
            Dafny.ISequence<DAST._IType> _9006___mcc_h38 = _source453.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _9007___mcc_h39 = _source453.dtor_args;
            {
              DAST._ICallName _source460 = _8962_name;
              if (_source460.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9008___mcc_h235 = _source460.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9009___mcc_h236 = _source460.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9010___mcc_h237 = _source460.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source461 = _9009___mcc_h236;
                if (_source461.is_None) {
                } else {
                  DAST._IType _9011___mcc_h241 = _source461.dtor_value;
                  DAST._IType _9012_tpe = _9011___mcc_h241;
                  RAST._IType _9013_typ;
                  RAST._IType _out4033;
                  _out4033 = DCOMPUTF16.COMP.GenType(_9012_tpe, false, false);
                  _9013_typ = _out4033;
                  if (((_9013_typ).is_Pointer) || ((_9013_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source460.is_MapBuilderAdd) {
              } else if (_source460.is_MapBuilderBuild) {
              } else if (_source460.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _9014___mcc_h43 = _source453.dtor_dims;
            DAST._IType _9015___mcc_h44 = _source453.dtor_typ;
            {
              DAST._ICallName _source462 = _8962_name;
              if (_source462.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9016___mcc_h243 = _source462.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9017___mcc_h244 = _source462.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9018___mcc_h245 = _source462.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source463 = _9017___mcc_h244;
                if (_source463.is_None) {
                } else {
                  DAST._IType _9019___mcc_h249 = _source463.dtor_value;
                  DAST._IType _9020_tpe = _9019___mcc_h249;
                  RAST._IType _9021_typ;
                  RAST._IType _out4034;
                  _out4034 = DCOMPUTF16.COMP.GenType(_9020_tpe, false, false);
                  _9021_typ = _out4034;
                  if (((_9021_typ).is_Pointer) || ((_9021_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source462.is_MapBuilderAdd) {
              } else if (_source462.is_MapBuilderBuild) {
              } else if (_source462.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_DatatypeValue) {
            DAST._IDatatypeType _9022___mcc_h47 = _source453.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _9023___mcc_h48 = _source453.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _9024___mcc_h49 = _source453.dtor_variant;
            bool _9025___mcc_h50 = _source453.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _9026___mcc_h51 = _source453.dtor_contents;
            {
              DAST._ICallName _source464 = _8962_name;
              if (_source464.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9027___mcc_h251 = _source464.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9028___mcc_h252 = _source464.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9029___mcc_h253 = _source464.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source465 = _9028___mcc_h252;
                if (_source465.is_None) {
                } else {
                  DAST._IType _9030___mcc_h257 = _source465.dtor_value;
                  DAST._IType _9031_tpe = _9030___mcc_h257;
                  RAST._IType _9032_typ;
                  RAST._IType _out4035;
                  _out4035 = DCOMPUTF16.COMP.GenType(_9031_tpe, false, false);
                  _9032_typ = _out4035;
                  if (((_9032_typ).is_Pointer) || ((_9032_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source464.is_MapBuilderAdd) {
              } else if (_source464.is_MapBuilderBuild) {
              } else if (_source464.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Convert) {
            DAST._IExpression _9033___mcc_h57 = _source453.dtor_value;
            DAST._IType _9034___mcc_h58 = _source453.dtor_from;
            DAST._IType _9035___mcc_h59 = _source453.dtor_typ;
            {
              DAST._ICallName _source466 = _8962_name;
              if (_source466.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9036___mcc_h259 = _source466.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9037___mcc_h260 = _source466.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9038___mcc_h261 = _source466.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source467 = _9037___mcc_h260;
                if (_source467.is_None) {
                } else {
                  DAST._IType _9039___mcc_h265 = _source467.dtor_value;
                  DAST._IType _9040_tpe = _9039___mcc_h265;
                  RAST._IType _9041_typ;
                  RAST._IType _out4036;
                  _out4036 = DCOMPUTF16.COMP.GenType(_9040_tpe, false, false);
                  _9041_typ = _out4036;
                  if (((_9041_typ).is_Pointer) || ((_9041_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source466.is_MapBuilderAdd) {
              } else if (_source466.is_MapBuilderBuild) {
              } else if (_source466.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SeqConstruct) {
            DAST._IExpression _9042___mcc_h63 = _source453.dtor_length;
            DAST._IExpression _9043___mcc_h64 = _source453.dtor_elem;
            {
              DAST._ICallName _source468 = _8962_name;
              if (_source468.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9044___mcc_h267 = _source468.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9045___mcc_h268 = _source468.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9046___mcc_h269 = _source468.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source469 = _9045___mcc_h268;
                if (_source469.is_None) {
                } else {
                  DAST._IType _9047___mcc_h273 = _source469.dtor_value;
                  DAST._IType _9048_tpe = _9047___mcc_h273;
                  RAST._IType _9049_typ;
                  RAST._IType _out4037;
                  _out4037 = DCOMPUTF16.COMP.GenType(_9048_tpe, false, false);
                  _9049_typ = _out4037;
                  if (((_9049_typ).is_Pointer) || ((_9049_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source468.is_MapBuilderAdd) {
              } else if (_source468.is_MapBuilderBuild) {
              } else if (_source468.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _9050___mcc_h67 = _source453.dtor_elements;
            DAST._IType _9051___mcc_h68 = _source453.dtor_typ;
            {
              DAST._ICallName _source470 = _8962_name;
              if (_source470.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9052___mcc_h275 = _source470.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9053___mcc_h276 = _source470.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9054___mcc_h277 = _source470.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source471 = _9053___mcc_h276;
                if (_source471.is_None) {
                } else {
                  DAST._IType _9055___mcc_h281 = _source471.dtor_value;
                  DAST._IType _9056_tpe = _9055___mcc_h281;
                  RAST._IType _9057_typ;
                  RAST._IType _out4038;
                  _out4038 = DCOMPUTF16.COMP.GenType(_9056_tpe, false, false);
                  _9057_typ = _out4038;
                  if (((_9057_typ).is_Pointer) || ((_9057_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source470.is_MapBuilderAdd) {
              } else if (_source470.is_MapBuilderBuild) {
              } else if (_source470.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _9058___mcc_h71 = _source453.dtor_elements;
            {
              DAST._ICallName _source472 = _8962_name;
              if (_source472.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9059___mcc_h283 = _source472.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9060___mcc_h284 = _source472.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9061___mcc_h285 = _source472.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source473 = _9060___mcc_h284;
                if (_source473.is_None) {
                } else {
                  DAST._IType _9062___mcc_h289 = _source473.dtor_value;
                  DAST._IType _9063_tpe = _9062___mcc_h289;
                  RAST._IType _9064_typ;
                  RAST._IType _out4039;
                  _out4039 = DCOMPUTF16.COMP.GenType(_9063_tpe, false, false);
                  _9064_typ = _out4039;
                  if (((_9064_typ).is_Pointer) || ((_9064_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source472.is_MapBuilderAdd) {
              } else if (_source472.is_MapBuilderBuild) {
              } else if (_source472.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _9065___mcc_h73 = _source453.dtor_elements;
            {
              DAST._ICallName _source474 = _8962_name;
              if (_source474.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9066___mcc_h291 = _source474.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9067___mcc_h292 = _source474.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9068___mcc_h293 = _source474.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source475 = _9067___mcc_h292;
                if (_source475.is_None) {
                } else {
                  DAST._IType _9069___mcc_h297 = _source475.dtor_value;
                  DAST._IType _9070_tpe = _9069___mcc_h297;
                  RAST._IType _9071_typ;
                  RAST._IType _out4040;
                  _out4040 = DCOMPUTF16.COMP.GenType(_9070_tpe, false, false);
                  _9071_typ = _out4040;
                  if (((_9071_typ).is_Pointer) || ((_9071_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source474.is_MapBuilderAdd) {
              } else if (_source474.is_MapBuilderBuild) {
              } else if (_source474.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _9072___mcc_h75 = _source453.dtor_mapElems;
            {
              DAST._ICallName _source476 = _8962_name;
              if (_source476.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9073___mcc_h299 = _source476.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9074___mcc_h300 = _source476.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9075___mcc_h301 = _source476.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source477 = _9074___mcc_h300;
                if (_source477.is_None) {
                } else {
                  DAST._IType _9076___mcc_h305 = _source477.dtor_value;
                  DAST._IType _9077_tpe = _9076___mcc_h305;
                  RAST._IType _9078_typ;
                  RAST._IType _out4041;
                  _out4041 = DCOMPUTF16.COMP.GenType(_9077_tpe, false, false);
                  _9078_typ = _out4041;
                  if (((_9078_typ).is_Pointer) || ((_9078_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source476.is_MapBuilderAdd) {
              } else if (_source476.is_MapBuilderBuild) {
              } else if (_source476.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_MapBuilder) {
            DAST._IType _9079___mcc_h77 = _source453.dtor_keyType;
            DAST._IType _9080___mcc_h78 = _source453.dtor_valueType;
            {
              DAST._ICallName _source478 = _8962_name;
              if (_source478.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9081___mcc_h307 = _source478.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9082___mcc_h308 = _source478.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9083___mcc_h309 = _source478.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source479 = _9082___mcc_h308;
                if (_source479.is_None) {
                } else {
                  DAST._IType _9084___mcc_h313 = _source479.dtor_value;
                  DAST._IType _9085_tpe = _9084___mcc_h313;
                  RAST._IType _9086_typ;
                  RAST._IType _out4042;
                  _out4042 = DCOMPUTF16.COMP.GenType(_9085_tpe, false, false);
                  _9086_typ = _out4042;
                  if (((_9086_typ).is_Pointer) || ((_9086_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source478.is_MapBuilderAdd) {
              } else if (_source478.is_MapBuilderBuild) {
              } else if (_source478.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SeqUpdate) {
            DAST._IExpression _9087___mcc_h81 = _source453.dtor_expr;
            DAST._IExpression _9088___mcc_h82 = _source453.dtor_indexExpr;
            DAST._IExpression _9089___mcc_h83 = _source453.dtor_value;
            {
              DAST._ICallName _source480 = _8962_name;
              if (_source480.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9090___mcc_h315 = _source480.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9091___mcc_h316 = _source480.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9092___mcc_h317 = _source480.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source481 = _9091___mcc_h316;
                if (_source481.is_None) {
                } else {
                  DAST._IType _9093___mcc_h321 = _source481.dtor_value;
                  DAST._IType _9094_tpe = _9093___mcc_h321;
                  RAST._IType _9095_typ;
                  RAST._IType _out4043;
                  _out4043 = DCOMPUTF16.COMP.GenType(_9094_tpe, false, false);
                  _9095_typ = _out4043;
                  if (((_9095_typ).is_Pointer) || ((_9095_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source480.is_MapBuilderAdd) {
              } else if (_source480.is_MapBuilderBuild) {
              } else if (_source480.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_MapUpdate) {
            DAST._IExpression _9096___mcc_h87 = _source453.dtor_expr;
            DAST._IExpression _9097___mcc_h88 = _source453.dtor_indexExpr;
            DAST._IExpression _9098___mcc_h89 = _source453.dtor_value;
            {
              DAST._ICallName _source482 = _8962_name;
              if (_source482.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9099___mcc_h323 = _source482.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9100___mcc_h324 = _source482.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9101___mcc_h325 = _source482.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source483 = _9100___mcc_h324;
                if (_source483.is_None) {
                } else {
                  DAST._IType _9102___mcc_h329 = _source483.dtor_value;
                  DAST._IType _9103_tpe = _9102___mcc_h329;
                  RAST._IType _9104_typ;
                  RAST._IType _out4044;
                  _out4044 = DCOMPUTF16.COMP.GenType(_9103_tpe, false, false);
                  _9104_typ = _out4044;
                  if (((_9104_typ).is_Pointer) || ((_9104_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source482.is_MapBuilderAdd) {
              } else if (_source482.is_MapBuilderBuild) {
              } else if (_source482.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SetBuilder) {
            DAST._IType _9105___mcc_h93 = _source453.dtor_elemType;
            {
              DAST._ICallName _source484 = _8962_name;
              if (_source484.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9106___mcc_h331 = _source484.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9107___mcc_h332 = _source484.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9108___mcc_h333 = _source484.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source485 = _9107___mcc_h332;
                if (_source485.is_None) {
                } else {
                  DAST._IType _9109___mcc_h337 = _source485.dtor_value;
                  DAST._IType _9110_tpe = _9109___mcc_h337;
                  RAST._IType _9111_typ;
                  RAST._IType _out4045;
                  _out4045 = DCOMPUTF16.COMP.GenType(_9110_tpe, false, false);
                  _9111_typ = _out4045;
                  if (((_9111_typ).is_Pointer) || ((_9111_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source484.is_MapBuilderAdd) {
              } else if (_source484.is_MapBuilderBuild) {
              } else if (_source484.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_ToMultiset) {
            DAST._IExpression _9112___mcc_h95 = _source453.dtor_ToMultiset_a0;
            {
              DAST._ICallName _source486 = _8962_name;
              if (_source486.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9113___mcc_h339 = _source486.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9114___mcc_h340 = _source486.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9115___mcc_h341 = _source486.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source487 = _9114___mcc_h340;
                if (_source487.is_None) {
                } else {
                  DAST._IType _9116___mcc_h345 = _source487.dtor_value;
                  DAST._IType _9117_tpe = _9116___mcc_h345;
                  RAST._IType _9118_typ;
                  RAST._IType _out4046;
                  _out4046 = DCOMPUTF16.COMP.GenType(_9117_tpe, false, false);
                  _9118_typ = _out4046;
                  if (((_9118_typ).is_Pointer) || ((_9118_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source486.is_MapBuilderAdd) {
              } else if (_source486.is_MapBuilderBuild) {
              } else if (_source486.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_This) {
            {
              DAST._ICallName _source488 = _8962_name;
              if (_source488.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9119___mcc_h347 = _source488.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9120___mcc_h348 = _source488.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9121___mcc_h349 = _source488.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source489 = _9120___mcc_h348;
                if (_source489.is_None) {
                } else {
                  DAST._IType _9122___mcc_h353 = _source489.dtor_value;
                  DAST._IType _9123_tpe = _9122___mcc_h353;
                  RAST._IType _9124_typ;
                  RAST._IType _out4047;
                  _out4047 = DCOMPUTF16.COMP.GenType(_9123_tpe, false, false);
                  _9124_typ = _out4047;
                  if (((_9124_typ).is_Pointer) || ((_9124_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source488.is_MapBuilderAdd) {
              } else if (_source488.is_MapBuilderBuild) {
              } else if (_source488.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Ite) {
            DAST._IExpression _9125___mcc_h97 = _source453.dtor_cond;
            DAST._IExpression _9126___mcc_h98 = _source453.dtor_thn;
            DAST._IExpression _9127___mcc_h99 = _source453.dtor_els;
            {
              DAST._ICallName _source490 = _8962_name;
              if (_source490.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9128___mcc_h355 = _source490.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9129___mcc_h356 = _source490.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9130___mcc_h357 = _source490.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source491 = _9129___mcc_h356;
                if (_source491.is_None) {
                } else {
                  DAST._IType _9131___mcc_h361 = _source491.dtor_value;
                  DAST._IType _9132_tpe = _9131___mcc_h361;
                  RAST._IType _9133_typ;
                  RAST._IType _out4048;
                  _out4048 = DCOMPUTF16.COMP.GenType(_9132_tpe, false, false);
                  _9133_typ = _out4048;
                  if (((_9133_typ).is_Pointer) || ((_9133_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source490.is_MapBuilderAdd) {
              } else if (_source490.is_MapBuilderBuild) {
              } else if (_source490.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_UnOp) {
            DAST._IUnaryOp _9134___mcc_h103 = _source453.dtor_unOp;
            DAST._IExpression _9135___mcc_h104 = _source453.dtor_expr;
            DAST.Format._IUnOpFormat _9136___mcc_h105 = _source453.dtor_format1;
            {
              DAST._ICallName _source492 = _8962_name;
              if (_source492.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9137___mcc_h363 = _source492.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9138___mcc_h364 = _source492.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9139___mcc_h365 = _source492.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source493 = _9138___mcc_h364;
                if (_source493.is_None) {
                } else {
                  DAST._IType _9140___mcc_h369 = _source493.dtor_value;
                  DAST._IType _9141_tpe = _9140___mcc_h369;
                  RAST._IType _9142_typ;
                  RAST._IType _out4049;
                  _out4049 = DCOMPUTF16.COMP.GenType(_9141_tpe, false, false);
                  _9142_typ = _out4049;
                  if (((_9142_typ).is_Pointer) || ((_9142_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source492.is_MapBuilderAdd) {
              } else if (_source492.is_MapBuilderBuild) {
              } else if (_source492.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_BinOp) {
            DAST._IBinOp _9143___mcc_h109 = _source453.dtor_op;
            DAST._IExpression _9144___mcc_h110 = _source453.dtor_left;
            DAST._IExpression _9145___mcc_h111 = _source453.dtor_right;
            DAST.Format._IBinOpFormat _9146___mcc_h112 = _source453.dtor_format2;
            {
              DAST._ICallName _source494 = _8962_name;
              if (_source494.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9147___mcc_h371 = _source494.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9148___mcc_h372 = _source494.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9149___mcc_h373 = _source494.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source495 = _9148___mcc_h372;
                if (_source495.is_None) {
                } else {
                  DAST._IType _9150___mcc_h377 = _source495.dtor_value;
                  DAST._IType _9151_tpe = _9150___mcc_h377;
                  RAST._IType _9152_typ;
                  RAST._IType _out4050;
                  _out4050 = DCOMPUTF16.COMP.GenType(_9151_tpe, false, false);
                  _9152_typ = _out4050;
                  if (((_9152_typ).is_Pointer) || ((_9152_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source494.is_MapBuilderAdd) {
              } else if (_source494.is_MapBuilderBuild) {
              } else if (_source494.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_ArrayLen) {
            DAST._IExpression _9153___mcc_h117 = _source453.dtor_expr;
            BigInteger _9154___mcc_h118 = _source453.dtor_dim;
            {
              DAST._ICallName _source496 = _8962_name;
              if (_source496.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9155___mcc_h379 = _source496.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9156___mcc_h380 = _source496.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9157___mcc_h381 = _source496.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source497 = _9156___mcc_h380;
                if (_source497.is_None) {
                } else {
                  DAST._IType _9158___mcc_h385 = _source497.dtor_value;
                  DAST._IType _9159_tpe = _9158___mcc_h385;
                  RAST._IType _9160_typ;
                  RAST._IType _out4051;
                  _out4051 = DCOMPUTF16.COMP.GenType(_9159_tpe, false, false);
                  _9160_typ = _out4051;
                  if (((_9160_typ).is_Pointer) || ((_9160_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source496.is_MapBuilderAdd) {
              } else if (_source496.is_MapBuilderBuild) {
              } else if (_source496.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_MapKeys) {
            DAST._IExpression _9161___mcc_h121 = _source453.dtor_expr;
            {
              DAST._ICallName _source498 = _8962_name;
              if (_source498.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9162___mcc_h387 = _source498.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9163___mcc_h388 = _source498.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9164___mcc_h389 = _source498.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source499 = _9163___mcc_h388;
                if (_source499.is_None) {
                } else {
                  DAST._IType _9165___mcc_h393 = _source499.dtor_value;
                  DAST._IType _9166_tpe = _9165___mcc_h393;
                  RAST._IType _9167_typ;
                  RAST._IType _out4052;
                  _out4052 = DCOMPUTF16.COMP.GenType(_9166_tpe, false, false);
                  _9167_typ = _out4052;
                  if (((_9167_typ).is_Pointer) || ((_9167_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source498.is_MapBuilderAdd) {
              } else if (_source498.is_MapBuilderBuild) {
              } else if (_source498.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_MapValues) {
            DAST._IExpression _9168___mcc_h123 = _source453.dtor_expr;
            {
              DAST._ICallName _source500 = _8962_name;
              if (_source500.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9169___mcc_h395 = _source500.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9170___mcc_h396 = _source500.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9171___mcc_h397 = _source500.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source501 = _9170___mcc_h396;
                if (_source501.is_None) {
                } else {
                  DAST._IType _9172___mcc_h401 = _source501.dtor_value;
                  DAST._IType _9173_tpe = _9172___mcc_h401;
                  RAST._IType _9174_typ;
                  RAST._IType _out4053;
                  _out4053 = DCOMPUTF16.COMP.GenType(_9173_tpe, false, false);
                  _9174_typ = _out4053;
                  if (((_9174_typ).is_Pointer) || ((_9174_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source500.is_MapBuilderAdd) {
              } else if (_source500.is_MapBuilderBuild) {
              } else if (_source500.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Select) {
            DAST._IExpression _9175___mcc_h125 = _source453.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _9176___mcc_h126 = _source453.dtor_field;
            bool _9177___mcc_h127 = _source453.dtor_isConstant;
            bool _9178___mcc_h128 = _source453.dtor_onDatatype;
            {
              DAST._ICallName _source502 = _8962_name;
              if (_source502.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9179___mcc_h403 = _source502.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9180___mcc_h404 = _source502.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9181___mcc_h405 = _source502.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source503 = _9180___mcc_h404;
                if (_source503.is_None) {
                } else {
                  DAST._IType _9182___mcc_h409 = _source503.dtor_value;
                  DAST._IType _9183_tpe = _9182___mcc_h409;
                  RAST._IType _9184_typ;
                  RAST._IType _out4054;
                  _out4054 = DCOMPUTF16.COMP.GenType(_9183_tpe, false, false);
                  _9184_typ = _out4054;
                  if (((_9184_typ).is_Pointer) || ((_9184_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source502.is_MapBuilderAdd) {
              } else if (_source502.is_MapBuilderBuild) {
              } else if (_source502.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SelectFn) {
            DAST._IExpression _9185___mcc_h133 = _source453.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _9186___mcc_h134 = _source453.dtor_field;
            bool _9187___mcc_h135 = _source453.dtor_onDatatype;
            bool _9188___mcc_h136 = _source453.dtor_isStatic;
            BigInteger _9189___mcc_h137 = _source453.dtor_arity;
            {
              DAST._ICallName _source504 = _8962_name;
              if (_source504.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9190___mcc_h411 = _source504.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9191___mcc_h412 = _source504.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9192___mcc_h413 = _source504.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source505 = _9191___mcc_h412;
                if (_source505.is_None) {
                } else {
                  DAST._IType _9193___mcc_h417 = _source505.dtor_value;
                  DAST._IType _9194_tpe = _9193___mcc_h417;
                  RAST._IType _9195_typ;
                  RAST._IType _out4055;
                  _out4055 = DCOMPUTF16.COMP.GenType(_9194_tpe, false, false);
                  _9195_typ = _out4055;
                  if (((_9195_typ).is_Pointer) || ((_9195_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source504.is_MapBuilderAdd) {
              } else if (_source504.is_MapBuilderBuild) {
              } else if (_source504.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Index) {
            DAST._IExpression _9196___mcc_h143 = _source453.dtor_expr;
            DAST._ICollKind _9197___mcc_h144 = _source453.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _9198___mcc_h145 = _source453.dtor_indices;
            {
              DAST._ICallName _source506 = _8962_name;
              if (_source506.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9199___mcc_h419 = _source506.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9200___mcc_h420 = _source506.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9201___mcc_h421 = _source506.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source507 = _9200___mcc_h420;
                if (_source507.is_None) {
                } else {
                  DAST._IType _9202___mcc_h425 = _source507.dtor_value;
                  DAST._IType _9203_tpe = _9202___mcc_h425;
                  RAST._IType _9204_typ;
                  RAST._IType _out4056;
                  _out4056 = DCOMPUTF16.COMP.GenType(_9203_tpe, false, false);
                  _9204_typ = _out4056;
                  if (((_9204_typ).is_Pointer) || ((_9204_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source506.is_MapBuilderAdd) {
              } else if (_source506.is_MapBuilderBuild) {
              } else if (_source506.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_IndexRange) {
            DAST._IExpression _9205___mcc_h149 = _source453.dtor_expr;
            bool _9206___mcc_h150 = _source453.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _9207___mcc_h151 = _source453.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _9208___mcc_h152 = _source453.dtor_high;
            {
              DAST._ICallName _source508 = _8962_name;
              if (_source508.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9209___mcc_h427 = _source508.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9210___mcc_h428 = _source508.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9211___mcc_h429 = _source508.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source509 = _9210___mcc_h428;
                if (_source509.is_None) {
                } else {
                  DAST._IType _9212___mcc_h433 = _source509.dtor_value;
                  DAST._IType _9213_tpe = _9212___mcc_h433;
                  RAST._IType _9214_typ;
                  RAST._IType _out4057;
                  _out4057 = DCOMPUTF16.COMP.GenType(_9213_tpe, false, false);
                  _9214_typ = _out4057;
                  if (((_9214_typ).is_Pointer) || ((_9214_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source508.is_MapBuilderAdd) {
              } else if (_source508.is_MapBuilderBuild) {
              } else if (_source508.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_TupleSelect) {
            DAST._IExpression _9215___mcc_h157 = _source453.dtor_expr;
            BigInteger _9216___mcc_h158 = _source453.dtor_index;
            {
              DAST._ICallName _source510 = _8962_name;
              if (_source510.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9217___mcc_h435 = _source510.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9218___mcc_h436 = _source510.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9219___mcc_h437 = _source510.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source511 = _9218___mcc_h436;
                if (_source511.is_None) {
                } else {
                  DAST._IType _9220___mcc_h441 = _source511.dtor_value;
                  DAST._IType _9221_tpe = _9220___mcc_h441;
                  RAST._IType _9222_typ;
                  RAST._IType _out4058;
                  _out4058 = DCOMPUTF16.COMP.GenType(_9221_tpe, false, false);
                  _9222_typ = _out4058;
                  if (((_9222_typ).is_Pointer) || ((_9222_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source510.is_MapBuilderAdd) {
              } else if (_source510.is_MapBuilderBuild) {
              } else if (_source510.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Call) {
            DAST._IExpression _9223___mcc_h161 = _source453.dtor_on;
            DAST._ICallName _9224___mcc_h162 = _source453.dtor_callName;
            Dafny.ISequence<DAST._IType> _9225___mcc_h163 = _source453.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _9226___mcc_h164 = _source453.dtor_args;
            {
              DAST._ICallName _source512 = _8962_name;
              if (_source512.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9227___mcc_h443 = _source512.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9228___mcc_h444 = _source512.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9229___mcc_h445 = _source512.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source513 = _9228___mcc_h444;
                if (_source513.is_None) {
                } else {
                  DAST._IType _9230___mcc_h449 = _source513.dtor_value;
                  DAST._IType _9231_tpe = _9230___mcc_h449;
                  RAST._IType _9232_typ;
                  RAST._IType _out4059;
                  _out4059 = DCOMPUTF16.COMP.GenType(_9231_tpe, false, false);
                  _9232_typ = _out4059;
                  if (((_9232_typ).is_Pointer) || ((_9232_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source512.is_MapBuilderAdd) {
              } else if (_source512.is_MapBuilderBuild) {
              } else if (_source512.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _9233___mcc_h169 = _source453.dtor_params;
            DAST._IType _9234___mcc_h170 = _source453.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _9235___mcc_h171 = _source453.dtor_body;
            {
              DAST._ICallName _source514 = _8962_name;
              if (_source514.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9236___mcc_h451 = _source514.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9237___mcc_h452 = _source514.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9238___mcc_h453 = _source514.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source515 = _9237___mcc_h452;
                if (_source515.is_None) {
                } else {
                  DAST._IType _9239___mcc_h457 = _source515.dtor_value;
                  DAST._IType _9240_tpe = _9239___mcc_h457;
                  RAST._IType _9241_typ;
                  RAST._IType _out4060;
                  _out4060 = DCOMPUTF16.COMP.GenType(_9240_tpe, false, false);
                  _9241_typ = _out4060;
                  if (((_9241_typ).is_Pointer) || ((_9241_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source514.is_MapBuilderAdd) {
              } else if (_source514.is_MapBuilderBuild) {
              } else if (_source514.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _9242___mcc_h175 = _source453.dtor_values;
            DAST._IType _9243___mcc_h176 = _source453.dtor_retType;
            DAST._IExpression _9244___mcc_h177 = _source453.dtor_expr;
            {
              DAST._ICallName _source516 = _8962_name;
              if (_source516.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9245___mcc_h459 = _source516.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9246___mcc_h460 = _source516.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9247___mcc_h461 = _source516.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source517 = _9246___mcc_h460;
                if (_source517.is_None) {
                } else {
                  DAST._IType _9248___mcc_h465 = _source517.dtor_value;
                  DAST._IType _9249_tpe = _9248___mcc_h465;
                  RAST._IType _9250_typ;
                  RAST._IType _out4061;
                  _out4061 = DCOMPUTF16.COMP.GenType(_9249_tpe, false, false);
                  _9250_typ = _out4061;
                  if (((_9250_typ).is_Pointer) || ((_9250_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source516.is_MapBuilderAdd) {
              } else if (_source516.is_MapBuilderBuild) {
              } else if (_source516.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _9251___mcc_h181 = _source453.dtor_name;
            DAST._IType _9252___mcc_h182 = _source453.dtor_typ;
            DAST._IExpression _9253___mcc_h183 = _source453.dtor_value;
            DAST._IExpression _9254___mcc_h184 = _source453.dtor_iifeBody;
            {
              DAST._ICallName _source518 = _8962_name;
              if (_source518.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9255___mcc_h467 = _source518.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9256___mcc_h468 = _source518.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9257___mcc_h469 = _source518.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source519 = _9256___mcc_h468;
                if (_source519.is_None) {
                } else {
                  DAST._IType _9258___mcc_h473 = _source519.dtor_value;
                  DAST._IType _9259_tpe = _9258___mcc_h473;
                  RAST._IType _9260_typ;
                  RAST._IType _out4062;
                  _out4062 = DCOMPUTF16.COMP.GenType(_9259_tpe, false, false);
                  _9260_typ = _out4062;
                  if (((_9260_typ).is_Pointer) || ((_9260_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source518.is_MapBuilderAdd) {
              } else if (_source518.is_MapBuilderBuild) {
              } else if (_source518.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_Apply) {
            DAST._IExpression _9261___mcc_h189 = _source453.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _9262___mcc_h190 = _source453.dtor_args;
            {
              DAST._ICallName _source520 = _8962_name;
              if (_source520.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9263___mcc_h475 = _source520.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9264___mcc_h476 = _source520.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9265___mcc_h477 = _source520.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source521 = _9264___mcc_h476;
                if (_source521.is_None) {
                } else {
                  DAST._IType _9266___mcc_h481 = _source521.dtor_value;
                  DAST._IType _9267_tpe = _9266___mcc_h481;
                  RAST._IType _9268_typ;
                  RAST._IType _out4063;
                  _out4063 = DCOMPUTF16.COMP.GenType(_9267_tpe, false, false);
                  _9268_typ = _out4063;
                  if (((_9268_typ).is_Pointer) || ((_9268_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source520.is_MapBuilderAdd) {
              } else if (_source520.is_MapBuilderBuild) {
              } else if (_source520.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_TypeTest) {
            DAST._IExpression _9269___mcc_h193 = _source453.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9270___mcc_h194 = _source453.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _9271___mcc_h195 = _source453.dtor_variant;
            {
              DAST._ICallName _source522 = _8962_name;
              if (_source522.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9272___mcc_h483 = _source522.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9273___mcc_h484 = _source522.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9274___mcc_h485 = _source522.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source523 = _9273___mcc_h484;
                if (_source523.is_None) {
                } else {
                  DAST._IType _9275___mcc_h489 = _source523.dtor_value;
                  DAST._IType _9276_tpe = _9275___mcc_h489;
                  RAST._IType _9277_typ;
                  RAST._IType _out4064;
                  _out4064 = DCOMPUTF16.COMP.GenType(_9276_tpe, false, false);
                  _9277_typ = _out4064;
                  if (((_9277_typ).is_Pointer) || ((_9277_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source522.is_MapBuilderAdd) {
              } else if (_source522.is_MapBuilderBuild) {
              } else if (_source522.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_InitializationValue) {
            DAST._IType _9278___mcc_h199 = _source453.dtor_typ;
            {
              DAST._ICallName _source524 = _8962_name;
              if (_source524.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9279___mcc_h491 = _source524.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9280___mcc_h492 = _source524.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9281___mcc_h493 = _source524.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source525 = _9280___mcc_h492;
                if (_source525.is_None) {
                } else {
                  DAST._IType _9282___mcc_h497 = _source525.dtor_value;
                  DAST._IType _9283_tpe = _9282___mcc_h497;
                  RAST._IType _9284_typ;
                  RAST._IType _out4065;
                  _out4065 = DCOMPUTF16.COMP.GenType(_9283_tpe, false, false);
                  _9284_typ = _out4065;
                  if (((_9284_typ).is_Pointer) || ((_9284_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source524.is_MapBuilderAdd) {
              } else if (_source524.is_MapBuilderBuild) {
              } else if (_source524.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_BoolBoundedPool) {
            {
              DAST._ICallName _source526 = _8962_name;
              if (_source526.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9285___mcc_h499 = _source526.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9286___mcc_h500 = _source526.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9287___mcc_h501 = _source526.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source527 = _9286___mcc_h500;
                if (_source527.is_None) {
                } else {
                  DAST._IType _9288___mcc_h505 = _source527.dtor_value;
                  DAST._IType _9289_tpe = _9288___mcc_h505;
                  RAST._IType _9290_typ;
                  RAST._IType _out4066;
                  _out4066 = DCOMPUTF16.COMP.GenType(_9289_tpe, false, false);
                  _9290_typ = _out4066;
                  if (((_9290_typ).is_Pointer) || ((_9290_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source526.is_MapBuilderAdd) {
              } else if (_source526.is_MapBuilderBuild) {
              } else if (_source526.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SetBoundedPool) {
            DAST._IExpression _9291___mcc_h201 = _source453.dtor_of;
            {
              DAST._ICallName _source528 = _8962_name;
              if (_source528.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9292___mcc_h507 = _source528.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9293___mcc_h508 = _source528.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9294___mcc_h509 = _source528.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source529 = _9293___mcc_h508;
                if (_source529.is_None) {
                } else {
                  DAST._IType _9295___mcc_h513 = _source529.dtor_value;
                  DAST._IType _9296_tpe = _9295___mcc_h513;
                  RAST._IType _9297_typ;
                  RAST._IType _out4067;
                  _out4067 = DCOMPUTF16.COMP.GenType(_9296_tpe, false, false);
                  _9297_typ = _out4067;
                  if (((_9297_typ).is_Pointer) || ((_9297_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source528.is_MapBuilderAdd) {
              } else if (_source528.is_MapBuilderBuild) {
              } else if (_source528.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else if (_source453.is_SeqBoundedPool) {
            DAST._IExpression _9298___mcc_h203 = _source453.dtor_of;
            bool _9299___mcc_h204 = _source453.dtor_includeDuplicates;
            {
              DAST._ICallName _source530 = _8962_name;
              if (_source530.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9300___mcc_h515 = _source530.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9301___mcc_h516 = _source530.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9302___mcc_h517 = _source530.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source531 = _9301___mcc_h516;
                if (_source531.is_None) {
                } else {
                  DAST._IType _9303___mcc_h521 = _source531.dtor_value;
                  DAST._IType _9304_tpe = _9303___mcc_h521;
                  RAST._IType _9305_typ;
                  RAST._IType _out4068;
                  _out4068 = DCOMPUTF16.COMP.GenType(_9304_tpe, false, false);
                  _9305_typ = _out4068;
                  if (((_9305_typ).is_Pointer) || ((_9305_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source530.is_MapBuilderAdd) {
              } else if (_source530.is_MapBuilderBuild) {
              } else if (_source530.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          } else {
            DAST._IExpression _9306___mcc_h207 = _source453.dtor_lo;
            DAST._IExpression _9307___mcc_h208 = _source453.dtor_hi;
            {
              DAST._ICallName _source532 = _8962_name;
              if (_source532.is_Name) {
                Dafny.ISequence<Dafny.Rune> _9308___mcc_h523 = _source532.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _9309___mcc_h524 = _source532.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _9310___mcc_h525 = _source532.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source533 = _9309___mcc_h524;
                if (_source533.is_None) {
                } else {
                  DAST._IType _9311___mcc_h529 = _source533.dtor_value;
                  DAST._IType _9312_tpe = _9311___mcc_h529;
                  RAST._IType _9313_typ;
                  RAST._IType _out4069;
                  _out4069 = DCOMPUTF16.COMP.GenType(_9312_tpe, false, false);
                  _9313_typ = _out4069;
                  if (((_9313_typ).is_Pointer) || ((_9313_typ).is_PointerMut)) {
                    _8964_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!"))).Apply1(_8964_onExpr);
                  }
                }
              } else if (_source532.is_MapBuilderAdd) {
              } else if (_source532.is_MapBuilderBuild) {
              } else if (_source532.is_SetBuilderAdd) {
              } else {
              }
              _8964_onExpr = (_8964_onExpr).Sel(_8978_renderedName);
            }
          }
          generated = _8964_onExpr;
          if ((new BigInteger((_8967_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_8967_typeExprs);
          }
          generated = (generated).Apply(_8971_argExprs);
          if (((_8959_maybeOutVars).is_Some) && ((new BigInteger(((_8959_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _9314_outVar;
            _9314_outVar = (((_8959_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_9314_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_9314_outVar, generated);
          } else if (((_8959_maybeOutVars).is_None) || ((new BigInteger(((_8959_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _9315_tmpVar;
            _9315_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _9316_tmpId;
            _9316_tmpId = RAST.Expr.create_Identifier(_9315_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _9315_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9317_outVars;
            _9317_outVars = (_8959_maybeOutVars).dtor_value;
            BigInteger _hi34 = new BigInteger((_9317_outVars).Count);
            for (BigInteger _9318_outI = BigInteger.Zero; _9318_outI < _hi34; _9318_outI++) {
              Dafny.ISequence<Dafny.Rune> _9319_outVar;
              _9319_outVar = ((_9317_outVars).Select(_9318_outI));
              RAST._IExpr _9320_rhs;
              _9320_rhs = (_9316_tmpId).Sel(Std.Strings.__default.OfNat(_9318_outI));
              if (!((env).HasCopySemantics(_9319_outVar))) {
                _9320_rhs = RAST.__default.MaybePlacebo(_9320_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_9319_outVar, _9320_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source450.is_Return) {
        DAST._IExpression _9321___mcc_h22 = _source450.dtor_expr;
        DAST._IExpression _9322_exprDafny = _9321___mcc_h22;
        {
          RAST._IExpr _9323_expr;
          DCOMPUTF16._IOwnership _9324___v77;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9325_recIdents;
          RAST._IExpr _out4070;
          DCOMPUTF16._IOwnership _out4071;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4072;
          DCOMPUTF16.COMP.GenExpr(_9322_exprDafny, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4070, out _out4071, out _out4072);
          _9323_expr = _out4070;
          _9324___v77 = _out4071;
          _9325_recIdents = _out4072;
          readIdents = _9325_recIdents;
          if (isLast) {
            generated = _9323_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_9323_expr));
          }
          newEnv = env;
        }
      } else if (_source450.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source450.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9326___mcc_h23 = _source450.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9327_toLabel = _9326___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source534 = _9327_toLabel;
          if (_source534.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9328___mcc_h531 = _source534.dtor_value;
            Dafny.ISequence<Dafny.Rune> _9329_lbl = _9328___mcc_h531;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _9329_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source450.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _9330___mcc_h24 = _source450.dtor_body;
        Dafny.ISequence<DAST._IStatement> _9331_body = _9330___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi35 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _9332_paramI = BigInteger.Zero; _9332_paramI < _hi35; _9332_paramI++) {
            Dafny.ISequence<Dafny.Rune> _9333_param;
            _9333_param = ((env).dtor_names).Select(_9332_paramI);
            RAST._IExpr _9334_paramInit;
            DCOMPUTF16._IOwnership _9335___v67;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9336___v68;
            RAST._IExpr _out4073;
            DCOMPUTF16._IOwnership _out4074;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4075;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident(_9333_param), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4073, out _out4074, out _out4075);
            _9334_paramInit = _out4073;
            _9335___v67 = _out4074;
            _9336___v68 = _out4075;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_9333_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_9334_paramInit)));
          }
          RAST._IExpr _9337_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9338_bodyIdents;
          DCOMPUTF16._IEnvironment _9339_bodyEnv;
          RAST._IExpr _out4076;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4077;
          DCOMPUTF16._IEnvironment _out4078;
          DCOMPUTF16.COMP.GenStmts(_9331_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out4076, out _out4077, out _out4078);
          _9337_bodyExpr = _out4076;
          _9338_bodyIdents = _out4077;
          _9339_bodyEnv = _out4078;
          newEnv = env;
          readIdents = _9338_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _9337_bodyExpr)));
        }
      } else if (_source450.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source450.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _9340___mcc_h25 = _source450.dtor_Print_a0;
        DAST._IExpression _9341_e = _9340___mcc_h25;
        {
          RAST._IExpr _9342_printedExpr;
          DCOMPUTF16._IOwnership _9343_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9344_recIdents;
          RAST._IExpr _out4079;
          DCOMPUTF16._IOwnership _out4080;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4081;
          DCOMPUTF16.COMP.GenExpr(_9341_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out4079, out _out4080, out _out4081);
          _9342_printedExpr = _out4079;
          _9343_recOwnership = _out4080;
          _9344_recIdents = _out4081;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_9342_printedExpr)));
          readIdents = _9344_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source535 = range;
      if (_source535.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source535.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source535.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source535.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source535.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source535.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source535.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source535.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source535.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source535.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source535.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMPUTF16._IOwnership ownership, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out4082;
        DCOMPUTF16._IOwnership _out4083;
        DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4082, out _out4083);
        @out = _out4082;
        resultingOwnership = _out4083;
        return ;
      } else if ((object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMPUTF16._IOwnership expectedOwnership, DCOMPUTF16._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source536 = e;
      DAST._ILiteral _9345___mcc_h0 = _source536.dtor_Literal_a0;
      DAST._ILiteral _source537 = _9345___mcc_h0;
      if (_source537.is_BoolLiteral) {
        bool _9346___mcc_h1 = _source537.dtor_BoolLiteral_a0;
        bool _9347_b = _9346___mcc_h1;
        {
          RAST._IExpr _out4084;
          DCOMPUTF16._IOwnership _out4085;
          DCOMPUTF16.COMP.FromOwned(RAST.Expr.create_LiteralBool(_9347_b), expectedOwnership, out _out4084, out _out4085);
          r = _out4084;
          resultingOwnership = _out4085;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source537.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _9348___mcc_h2 = _source537.dtor_IntLiteral_a0;
        DAST._IType _9349___mcc_h3 = _source537.dtor_IntLiteral_a1;
        DAST._IType _9350_t = _9349___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _9351_i = _9348___mcc_h2;
        {
          DAST._IType _source538 = _9350_t;
          if (_source538.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9352___mcc_h100 = _source538.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9353___mcc_h101 = _source538.dtor_typeArgs;
            DAST._IResolvedType _9354___mcc_h102 = _source538.dtor_resolved;
            DAST._IType _9355_o = _9350_t;
            {
              RAST._IType _9356_genType;
              RAST._IType _out4086;
              _out4086 = DCOMPUTF16.COMP.GenType(_9355_o, false, false);
              _9356_genType = _out4086;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9356_genType);
            }
          } else if (_source538.is_Nullable) {
            DAST._IType _9357___mcc_h106 = _source538.dtor_Nullable_a0;
            DAST._IType _9358_o = _9350_t;
            {
              RAST._IType _9359_genType;
              RAST._IType _out4087;
              _out4087 = DCOMPUTF16.COMP.GenType(_9358_o, false, false);
              _9359_genType = _out4087;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9359_genType);
            }
          } else if (_source538.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9360___mcc_h108 = _source538.dtor_Tuple_a0;
            DAST._IType _9361_o = _9350_t;
            {
              RAST._IType _9362_genType;
              RAST._IType _out4088;
              _out4088 = DCOMPUTF16.COMP.GenType(_9361_o, false, false);
              _9362_genType = _out4088;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9362_genType);
            }
          } else if (_source538.is_Array) {
            DAST._IType _9363___mcc_h110 = _source538.dtor_element;
            BigInteger _9364___mcc_h111 = _source538.dtor_dims;
            DAST._IType _9365_o = _9350_t;
            {
              RAST._IType _9366_genType;
              RAST._IType _out4089;
              _out4089 = DCOMPUTF16.COMP.GenType(_9365_o, false, false);
              _9366_genType = _out4089;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9366_genType);
            }
          } else if (_source538.is_Seq) {
            DAST._IType _9367___mcc_h114 = _source538.dtor_element;
            DAST._IType _9368_o = _9350_t;
            {
              RAST._IType _9369_genType;
              RAST._IType _out4090;
              _out4090 = DCOMPUTF16.COMP.GenType(_9368_o, false, false);
              _9369_genType = _out4090;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9369_genType);
            }
          } else if (_source538.is_Set) {
            DAST._IType _9370___mcc_h116 = _source538.dtor_element;
            DAST._IType _9371_o = _9350_t;
            {
              RAST._IType _9372_genType;
              RAST._IType _out4091;
              _out4091 = DCOMPUTF16.COMP.GenType(_9371_o, false, false);
              _9372_genType = _out4091;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9372_genType);
            }
          } else if (_source538.is_Multiset) {
            DAST._IType _9373___mcc_h118 = _source538.dtor_element;
            DAST._IType _9374_o = _9350_t;
            {
              RAST._IType _9375_genType;
              RAST._IType _out4092;
              _out4092 = DCOMPUTF16.COMP.GenType(_9374_o, false, false);
              _9375_genType = _out4092;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9375_genType);
            }
          } else if (_source538.is_Map) {
            DAST._IType _9376___mcc_h120 = _source538.dtor_key;
            DAST._IType _9377___mcc_h121 = _source538.dtor_value;
            DAST._IType _9378_o = _9350_t;
            {
              RAST._IType _9379_genType;
              RAST._IType _out4093;
              _out4093 = DCOMPUTF16.COMP.GenType(_9378_o, false, false);
              _9379_genType = _out4093;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9379_genType);
            }
          } else if (_source538.is_SetBuilder) {
            DAST._IType _9380___mcc_h124 = _source538.dtor_element;
            DAST._IType _9381_o = _9350_t;
            {
              RAST._IType _9382_genType;
              RAST._IType _out4094;
              _out4094 = DCOMPUTF16.COMP.GenType(_9381_o, false, false);
              _9382_genType = _out4094;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9382_genType);
            }
          } else if (_source538.is_MapBuilder) {
            DAST._IType _9383___mcc_h126 = _source538.dtor_key;
            DAST._IType _9384___mcc_h127 = _source538.dtor_value;
            DAST._IType _9385_o = _9350_t;
            {
              RAST._IType _9386_genType;
              RAST._IType _out4095;
              _out4095 = DCOMPUTF16.COMP.GenType(_9385_o, false, false);
              _9386_genType = _out4095;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9386_genType);
            }
          } else if (_source538.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9387___mcc_h130 = _source538.dtor_args;
            DAST._IType _9388___mcc_h131 = _source538.dtor_result;
            DAST._IType _9389_o = _9350_t;
            {
              RAST._IType _9390_genType;
              RAST._IType _out4096;
              _out4096 = DCOMPUTF16.COMP.GenType(_9389_o, false, false);
              _9390_genType = _out4096;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9390_genType);
            }
          } else if (_source538.is_Primitive) {
            DAST._IPrimitive _9391___mcc_h134 = _source538.dtor_Primitive_a0;
            DAST._IPrimitive _source539 = _9391___mcc_h134;
            if (_source539.is_Int) {
              {
                if ((new BigInteger((_9351_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_9351_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_9351_i, true));
                }
              }
            } else if (_source539.is_Real) {
              DAST._IType _9392_o = _9350_t;
              {
                RAST._IType _9393_genType;
                RAST._IType _out4097;
                _out4097 = DCOMPUTF16.COMP.GenType(_9392_o, false, false);
                _9393_genType = _out4097;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9393_genType);
              }
            } else if (_source539.is_String) {
              DAST._IType _9394_o = _9350_t;
              {
                RAST._IType _9395_genType;
                RAST._IType _out4098;
                _out4098 = DCOMPUTF16.COMP.GenType(_9394_o, false, false);
                _9395_genType = _out4098;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9395_genType);
              }
            } else if (_source539.is_Bool) {
              DAST._IType _9396_o = _9350_t;
              {
                RAST._IType _9397_genType;
                RAST._IType _out4099;
                _out4099 = DCOMPUTF16.COMP.GenType(_9396_o, false, false);
                _9397_genType = _out4099;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9397_genType);
              }
            } else {
              DAST._IType _9398_o = _9350_t;
              {
                RAST._IType _9399_genType;
                RAST._IType _out4100;
                _out4100 = DCOMPUTF16.COMP.GenType(_9398_o, false, false);
                _9399_genType = _out4100;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9399_genType);
              }
            }
          } else if (_source538.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9400___mcc_h136 = _source538.dtor_Passthrough_a0;
            DAST._IType _9401_o = _9350_t;
            {
              RAST._IType _9402_genType;
              RAST._IType _out4101;
              _out4101 = DCOMPUTF16.COMP.GenType(_9401_o, false, false);
              _9402_genType = _out4101;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9402_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9403___mcc_h138 = _source538.dtor_TypeArg_a0;
            DAST._IType _9404_o = _9350_t;
            {
              RAST._IType _9405_genType;
              RAST._IType _out4102;
              _out4102 = DCOMPUTF16.COMP.GenType(_9404_o, false, false);
              _9405_genType = _out4102;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_9351_i), _9405_genType);
            }
          }
          RAST._IExpr _out4103;
          DCOMPUTF16._IOwnership _out4104;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4103, out _out4104);
          r = _out4103;
          resultingOwnership = _out4104;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source537.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _9406___mcc_h4 = _source537.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _9407___mcc_h5 = _source537.dtor_DecLiteral_a1;
        DAST._IType _9408___mcc_h6 = _source537.dtor_DecLiteral_a2;
        DAST._IType _9409_t = _9408___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _9410_d = _9407___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _9411_n = _9406___mcc_h4;
        {
          DAST._IType _source540 = _9409_t;
          if (_source540.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9412___mcc_h140 = _source540.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9413___mcc_h141 = _source540.dtor_typeArgs;
            DAST._IResolvedType _9414___mcc_h142 = _source540.dtor_resolved;
            DAST._IType _9415_o = _9409_t;
            {
              RAST._IType _9416_genType;
              RAST._IType _out4105;
              _out4105 = DCOMPUTF16.COMP.GenType(_9415_o, false, false);
              _9416_genType = _out4105;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9416_genType);
            }
          } else if (_source540.is_Nullable) {
            DAST._IType _9417___mcc_h146 = _source540.dtor_Nullable_a0;
            DAST._IType _9418_o = _9409_t;
            {
              RAST._IType _9419_genType;
              RAST._IType _out4106;
              _out4106 = DCOMPUTF16.COMP.GenType(_9418_o, false, false);
              _9419_genType = _out4106;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9419_genType);
            }
          } else if (_source540.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9420___mcc_h148 = _source540.dtor_Tuple_a0;
            DAST._IType _9421_o = _9409_t;
            {
              RAST._IType _9422_genType;
              RAST._IType _out4107;
              _out4107 = DCOMPUTF16.COMP.GenType(_9421_o, false, false);
              _9422_genType = _out4107;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9422_genType);
            }
          } else if (_source540.is_Array) {
            DAST._IType _9423___mcc_h150 = _source540.dtor_element;
            BigInteger _9424___mcc_h151 = _source540.dtor_dims;
            DAST._IType _9425_o = _9409_t;
            {
              RAST._IType _9426_genType;
              RAST._IType _out4108;
              _out4108 = DCOMPUTF16.COMP.GenType(_9425_o, false, false);
              _9426_genType = _out4108;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9426_genType);
            }
          } else if (_source540.is_Seq) {
            DAST._IType _9427___mcc_h154 = _source540.dtor_element;
            DAST._IType _9428_o = _9409_t;
            {
              RAST._IType _9429_genType;
              RAST._IType _out4109;
              _out4109 = DCOMPUTF16.COMP.GenType(_9428_o, false, false);
              _9429_genType = _out4109;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9429_genType);
            }
          } else if (_source540.is_Set) {
            DAST._IType _9430___mcc_h156 = _source540.dtor_element;
            DAST._IType _9431_o = _9409_t;
            {
              RAST._IType _9432_genType;
              RAST._IType _out4110;
              _out4110 = DCOMPUTF16.COMP.GenType(_9431_o, false, false);
              _9432_genType = _out4110;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9432_genType);
            }
          } else if (_source540.is_Multiset) {
            DAST._IType _9433___mcc_h158 = _source540.dtor_element;
            DAST._IType _9434_o = _9409_t;
            {
              RAST._IType _9435_genType;
              RAST._IType _out4111;
              _out4111 = DCOMPUTF16.COMP.GenType(_9434_o, false, false);
              _9435_genType = _out4111;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9435_genType);
            }
          } else if (_source540.is_Map) {
            DAST._IType _9436___mcc_h160 = _source540.dtor_key;
            DAST._IType _9437___mcc_h161 = _source540.dtor_value;
            DAST._IType _9438_o = _9409_t;
            {
              RAST._IType _9439_genType;
              RAST._IType _out4112;
              _out4112 = DCOMPUTF16.COMP.GenType(_9438_o, false, false);
              _9439_genType = _out4112;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9439_genType);
            }
          } else if (_source540.is_SetBuilder) {
            DAST._IType _9440___mcc_h164 = _source540.dtor_element;
            DAST._IType _9441_o = _9409_t;
            {
              RAST._IType _9442_genType;
              RAST._IType _out4113;
              _out4113 = DCOMPUTF16.COMP.GenType(_9441_o, false, false);
              _9442_genType = _out4113;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9442_genType);
            }
          } else if (_source540.is_MapBuilder) {
            DAST._IType _9443___mcc_h166 = _source540.dtor_key;
            DAST._IType _9444___mcc_h167 = _source540.dtor_value;
            DAST._IType _9445_o = _9409_t;
            {
              RAST._IType _9446_genType;
              RAST._IType _out4114;
              _out4114 = DCOMPUTF16.COMP.GenType(_9445_o, false, false);
              _9446_genType = _out4114;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9446_genType);
            }
          } else if (_source540.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9447___mcc_h170 = _source540.dtor_args;
            DAST._IType _9448___mcc_h171 = _source540.dtor_result;
            DAST._IType _9449_o = _9409_t;
            {
              RAST._IType _9450_genType;
              RAST._IType _out4115;
              _out4115 = DCOMPUTF16.COMP.GenType(_9449_o, false, false);
              _9450_genType = _out4115;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9450_genType);
            }
          } else if (_source540.is_Primitive) {
            DAST._IPrimitive _9451___mcc_h174 = _source540.dtor_Primitive_a0;
            DAST._IPrimitive _source541 = _9451___mcc_h174;
            if (_source541.is_Int) {
              DAST._IType _9452_o = _9409_t;
              {
                RAST._IType _9453_genType;
                RAST._IType _out4116;
                _out4116 = DCOMPUTF16.COMP.GenType(_9452_o, false, false);
                _9453_genType = _out4116;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9453_genType);
              }
            } else if (_source541.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source541.is_String) {
              DAST._IType _9454_o = _9409_t;
              {
                RAST._IType _9455_genType;
                RAST._IType _out4117;
                _out4117 = DCOMPUTF16.COMP.GenType(_9454_o, false, false);
                _9455_genType = _out4117;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9455_genType);
              }
            } else if (_source541.is_Bool) {
              DAST._IType _9456_o = _9409_t;
              {
                RAST._IType _9457_genType;
                RAST._IType _out4118;
                _out4118 = DCOMPUTF16.COMP.GenType(_9456_o, false, false);
                _9457_genType = _out4118;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9457_genType);
              }
            } else {
              DAST._IType _9458_o = _9409_t;
              {
                RAST._IType _9459_genType;
                RAST._IType _out4119;
                _out4119 = DCOMPUTF16.COMP.GenType(_9458_o, false, false);
                _9459_genType = _out4119;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9459_genType);
              }
            }
          } else if (_source540.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9460___mcc_h176 = _source540.dtor_Passthrough_a0;
            DAST._IType _9461_o = _9409_t;
            {
              RAST._IType _9462_genType;
              RAST._IType _out4120;
              _out4120 = DCOMPUTF16.COMP.GenType(_9461_o, false, false);
              _9462_genType = _out4120;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9462_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9463___mcc_h178 = _source540.dtor_TypeArg_a0;
            DAST._IType _9464_o = _9409_t;
            {
              RAST._IType _9465_genType;
              RAST._IType _out4121;
              _out4121 = DCOMPUTF16.COMP.GenType(_9464_o, false, false);
              _9465_genType = _out4121;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _9411_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _9410_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _9465_genType);
            }
          }
          RAST._IExpr _out4122;
          DCOMPUTF16._IOwnership _out4123;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4122, out _out4123);
          r = _out4122;
          resultingOwnership = _out4123;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source537.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _9466___mcc_h7 = _source537.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _9467_l = _9466___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_9467_l, false));
          RAST._IExpr _out4124;
          DCOMPUTF16._IOwnership _out4125;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4124, out _out4125);
          r = _out4124;
          resultingOwnership = _out4125;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source537.is_CharLiteral) {
        Dafny.Rune _9468___mcc_h8 = _source537.dtor_CharLiteral_a0;
        Dafny.Rune _9469_c = _9468___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_9469_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMPUTF16.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out4126;
          DCOMPUTF16._IOwnership _out4127;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4126, out _out4127);
          r = _out4126;
          resultingOwnership = _out4127;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _9470___mcc_h9 = _source537.dtor_Null_a0;
        DAST._IType _9471_tpe = _9470___mcc_h9;
        {
          RAST._IType _9472_tpeGen;
          RAST._IType _out4128;
          _out4128 = DCOMPUTF16.COMP.GenType(_9471_tpe, false, false);
          _9472_tpeGen = _out4128;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _9472_tpeGen);
          RAST._IExpr _out4129;
          DCOMPUTF16._IOwnership _out4130;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4129, out _out4130);
          r = _out4129;
          resultingOwnership = _out4130;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs53 = e;
      DAST._IBinOp _9473_op = _let_tmp_rhs53.dtor_op;
      DAST._IExpression _9474_lExpr = _let_tmp_rhs53.dtor_left;
      DAST._IExpression _9475_rExpr = _let_tmp_rhs53.dtor_right;
      DAST.Format._IBinOpFormat _9476_format = _let_tmp_rhs53.dtor_format2;
      bool _9477_becomesLeftCallsRight;
      _9477_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source542) => {
        if (_source542.is_Eq) {
          bool _9478___mcc_h0 = _source542.dtor_referential;
          bool _9479___mcc_h1 = _source542.dtor_nullable;
          return false;
        } else if (_source542.is_Div) {
          return false;
        } else if (_source542.is_EuclidianDiv) {
          return false;
        } else if (_source542.is_Mod) {
          return false;
        } else if (_source542.is_EuclidianMod) {
          return false;
        } else if (_source542.is_Lt) {
          return false;
        } else if (_source542.is_LtChar) {
          return false;
        } else if (_source542.is_Plus) {
          return false;
        } else if (_source542.is_Minus) {
          return false;
        } else if (_source542.is_Times) {
          return false;
        } else if (_source542.is_BitwiseAnd) {
          return false;
        } else if (_source542.is_BitwiseOr) {
          return false;
        } else if (_source542.is_BitwiseXor) {
          return false;
        } else if (_source542.is_BitwiseShiftRight) {
          return false;
        } else if (_source542.is_BitwiseShiftLeft) {
          return false;
        } else if (_source542.is_And) {
          return false;
        } else if (_source542.is_Or) {
          return false;
        } else if (_source542.is_In) {
          return false;
        } else if (_source542.is_SeqProperPrefix) {
          return false;
        } else if (_source542.is_SeqPrefix) {
          return false;
        } else if (_source542.is_SetMerge) {
          return true;
        } else if (_source542.is_SetSubtraction) {
          return true;
        } else if (_source542.is_SetIntersection) {
          return true;
        } else if (_source542.is_Subset) {
          return false;
        } else if (_source542.is_ProperSubset) {
          return false;
        } else if (_source542.is_SetDisjoint) {
          return true;
        } else if (_source542.is_MapMerge) {
          return true;
        } else if (_source542.is_MapSubtraction) {
          return true;
        } else if (_source542.is_MultisetMerge) {
          return true;
        } else if (_source542.is_MultisetSubtraction) {
          return true;
        } else if (_source542.is_MultisetIntersection) {
          return true;
        } else if (_source542.is_Submultiset) {
          return false;
        } else if (_source542.is_ProperSubmultiset) {
          return false;
        } else if (_source542.is_MultisetDisjoint) {
          return true;
        } else if (_source542.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _9480___mcc_h4 = _source542.dtor_Passthrough_a0;
          return false;
        }
      }))(_9473_op);
      bool _9481_becomesRightCallsLeft;
      _9481_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source543) => {
        if (_source543.is_Eq) {
          bool _9482___mcc_h6 = _source543.dtor_referential;
          bool _9483___mcc_h7 = _source543.dtor_nullable;
          return false;
        } else if (_source543.is_Div) {
          return false;
        } else if (_source543.is_EuclidianDiv) {
          return false;
        } else if (_source543.is_Mod) {
          return false;
        } else if (_source543.is_EuclidianMod) {
          return false;
        } else if (_source543.is_Lt) {
          return false;
        } else if (_source543.is_LtChar) {
          return false;
        } else if (_source543.is_Plus) {
          return false;
        } else if (_source543.is_Minus) {
          return false;
        } else if (_source543.is_Times) {
          return false;
        } else if (_source543.is_BitwiseAnd) {
          return false;
        } else if (_source543.is_BitwiseOr) {
          return false;
        } else if (_source543.is_BitwiseXor) {
          return false;
        } else if (_source543.is_BitwiseShiftRight) {
          return false;
        } else if (_source543.is_BitwiseShiftLeft) {
          return false;
        } else if (_source543.is_And) {
          return false;
        } else if (_source543.is_Or) {
          return false;
        } else if (_source543.is_In) {
          return true;
        } else if (_source543.is_SeqProperPrefix) {
          return false;
        } else if (_source543.is_SeqPrefix) {
          return false;
        } else if (_source543.is_SetMerge) {
          return false;
        } else if (_source543.is_SetSubtraction) {
          return false;
        } else if (_source543.is_SetIntersection) {
          return false;
        } else if (_source543.is_Subset) {
          return false;
        } else if (_source543.is_ProperSubset) {
          return false;
        } else if (_source543.is_SetDisjoint) {
          return false;
        } else if (_source543.is_MapMerge) {
          return false;
        } else if (_source543.is_MapSubtraction) {
          return false;
        } else if (_source543.is_MultisetMerge) {
          return false;
        } else if (_source543.is_MultisetSubtraction) {
          return false;
        } else if (_source543.is_MultisetIntersection) {
          return false;
        } else if (_source543.is_Submultiset) {
          return false;
        } else if (_source543.is_ProperSubmultiset) {
          return false;
        } else if (_source543.is_MultisetDisjoint) {
          return false;
        } else if (_source543.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _9484___mcc_h10 = _source543.dtor_Passthrough_a0;
          return false;
        }
      }))(_9473_op);
      bool _9485_becomesCallLeftRight;
      _9485_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source544) => {
        if (_source544.is_Eq) {
          bool _9486___mcc_h12 = _source544.dtor_referential;
          bool _9487___mcc_h13 = _source544.dtor_nullable;
          if ((_9486___mcc_h12) == (true)) {
            if ((_9487___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source544.is_Div) {
          return false;
        } else if (_source544.is_EuclidianDiv) {
          return false;
        } else if (_source544.is_Mod) {
          return false;
        } else if (_source544.is_EuclidianMod) {
          return false;
        } else if (_source544.is_Lt) {
          return false;
        } else if (_source544.is_LtChar) {
          return false;
        } else if (_source544.is_Plus) {
          return false;
        } else if (_source544.is_Minus) {
          return false;
        } else if (_source544.is_Times) {
          return false;
        } else if (_source544.is_BitwiseAnd) {
          return false;
        } else if (_source544.is_BitwiseOr) {
          return false;
        } else if (_source544.is_BitwiseXor) {
          return false;
        } else if (_source544.is_BitwiseShiftRight) {
          return false;
        } else if (_source544.is_BitwiseShiftLeft) {
          return false;
        } else if (_source544.is_And) {
          return false;
        } else if (_source544.is_Or) {
          return false;
        } else if (_source544.is_In) {
          return false;
        } else if (_source544.is_SeqProperPrefix) {
          return false;
        } else if (_source544.is_SeqPrefix) {
          return false;
        } else if (_source544.is_SetMerge) {
          return false;
        } else if (_source544.is_SetSubtraction) {
          return false;
        } else if (_source544.is_SetIntersection) {
          return false;
        } else if (_source544.is_Subset) {
          return false;
        } else if (_source544.is_ProperSubset) {
          return false;
        } else if (_source544.is_SetDisjoint) {
          return false;
        } else if (_source544.is_MapMerge) {
          return false;
        } else if (_source544.is_MapSubtraction) {
          return false;
        } else if (_source544.is_MultisetMerge) {
          return false;
        } else if (_source544.is_MultisetSubtraction) {
          return false;
        } else if (_source544.is_MultisetIntersection) {
          return false;
        } else if (_source544.is_Submultiset) {
          return false;
        } else if (_source544.is_ProperSubmultiset) {
          return false;
        } else if (_source544.is_MultisetDisjoint) {
          return false;
        } else if (_source544.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _9488___mcc_h16 = _source544.dtor_Passthrough_a0;
          return false;
        }
      }))(_9473_op);
      DCOMPUTF16._IOwnership _9489_expectedLeftOwnership;
      _9489_expectedLeftOwnership = ((_9477_becomesLeftCallsRight) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : ((((_9481_becomesRightCallsLeft) || (_9485_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      DCOMPUTF16._IOwnership _9490_expectedRightOwnership;
      _9490_expectedRightOwnership = (((_9477_becomesLeftCallsRight) || (_9485_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (((_9481_becomesRightCallsLeft) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _9491_left;
      DCOMPUTF16._IOwnership _9492___v82;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9493_recIdentsL;
      RAST._IExpr _out4131;
      DCOMPUTF16._IOwnership _out4132;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4133;
      DCOMPUTF16.COMP.GenExpr(_9474_lExpr, selfIdent, env, _9489_expectedLeftOwnership, out _out4131, out _out4132, out _out4133);
      _9491_left = _out4131;
      _9492___v82 = _out4132;
      _9493_recIdentsL = _out4133;
      RAST._IExpr _9494_right;
      DCOMPUTF16._IOwnership _9495___v83;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9496_recIdentsR;
      RAST._IExpr _out4134;
      DCOMPUTF16._IOwnership _out4135;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4136;
      DCOMPUTF16.COMP.GenExpr(_9475_rExpr, selfIdent, env, _9490_expectedRightOwnership, out _out4134, out _out4135, out _out4136);
      _9494_right = _out4134;
      _9495___v83 = _out4135;
      _9496_recIdentsR = _out4136;
      DAST._IBinOp _source545 = _9473_op;
      if (_source545.is_Eq) {
        bool _9497___mcc_h18 = _source545.dtor_referential;
        bool _9498___mcc_h19 = _source545.dtor_nullable;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source546 = _9473_op;
            if (_source546.is_Eq) {
              bool _9499___mcc_h24 = _source546.dtor_referential;
              bool _9500___mcc_h25 = _source546.dtor_nullable;
              bool _9501_nullable = _9500___mcc_h25;
              bool _9502_referential = _9499___mcc_h24;
              {
                if (_9502_referential) {
                  if (_9501_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source546.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source546.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9503___mcc_h26 = _source546.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9504_op = _9503___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_9504_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_Div) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source547 = _9473_op;
            if (_source547.is_Eq) {
              bool _9505___mcc_h27 = _source547.dtor_referential;
              bool _9506___mcc_h28 = _source547.dtor_nullable;
              bool _9507_nullable = _9506___mcc_h28;
              bool _9508_referential = _9505___mcc_h27;
              {
                if (_9508_referential) {
                  if (_9507_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source547.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source547.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9509___mcc_h29 = _source547.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9510_op = _9509___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_9510_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_EuclidianDiv) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source548 = _9473_op;
            if (_source548.is_Eq) {
              bool _9511___mcc_h30 = _source548.dtor_referential;
              bool _9512___mcc_h31 = _source548.dtor_nullable;
              bool _9513_nullable = _9512___mcc_h31;
              bool _9514_referential = _9511___mcc_h30;
              {
                if (_9514_referential) {
                  if (_9513_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source548.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source548.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9515___mcc_h32 = _source548.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9516_op = _9515___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_9516_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_Mod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source549 = _9473_op;
            if (_source549.is_Eq) {
              bool _9517___mcc_h33 = _source549.dtor_referential;
              bool _9518___mcc_h34 = _source549.dtor_nullable;
              bool _9519_nullable = _9518___mcc_h34;
              bool _9520_referential = _9517___mcc_h33;
              {
                if (_9520_referential) {
                  if (_9519_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source549.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source549.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9521___mcc_h35 = _source549.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9522_op = _9521___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_9522_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_EuclidianMod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source550 = _9473_op;
            if (_source550.is_Eq) {
              bool _9523___mcc_h36 = _source550.dtor_referential;
              bool _9524___mcc_h37 = _source550.dtor_nullable;
              bool _9525_nullable = _9524___mcc_h37;
              bool _9526_referential = _9523___mcc_h36;
              {
                if (_9526_referential) {
                  if (_9525_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source550.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source550.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9527___mcc_h38 = _source550.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9528_op = _9527___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_9528_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_Lt) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source551 = _9473_op;
            if (_source551.is_Eq) {
              bool _9529___mcc_h39 = _source551.dtor_referential;
              bool _9530___mcc_h40 = _source551.dtor_nullable;
              bool _9531_nullable = _9530___mcc_h40;
              bool _9532_referential = _9529___mcc_h39;
              {
                if (_9532_referential) {
                  if (_9531_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source551.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source551.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9533___mcc_h41 = _source551.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9534_op = _9533___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_9534_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_LtChar) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source552 = _9473_op;
            if (_source552.is_Eq) {
              bool _9535___mcc_h42 = _source552.dtor_referential;
              bool _9536___mcc_h43 = _source552.dtor_nullable;
              bool _9537_nullable = _9536___mcc_h43;
              bool _9538_referential = _9535___mcc_h42;
              {
                if (_9538_referential) {
                  if (_9537_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source552.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source552.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9539___mcc_h44 = _source552.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9540_op = _9539___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_9540_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_Plus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source553 = _9473_op;
            if (_source553.is_Eq) {
              bool _9541___mcc_h45 = _source553.dtor_referential;
              bool _9542___mcc_h46 = _source553.dtor_nullable;
              bool _9543_nullable = _9542___mcc_h46;
              bool _9544_referential = _9541___mcc_h45;
              {
                if (_9544_referential) {
                  if (_9543_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source553.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source553.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9545___mcc_h47 = _source553.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9546_op = _9545___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_9546_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_Minus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source554 = _9473_op;
            if (_source554.is_Eq) {
              bool _9547___mcc_h48 = _source554.dtor_referential;
              bool _9548___mcc_h49 = _source554.dtor_nullable;
              bool _9549_nullable = _9548___mcc_h49;
              bool _9550_referential = _9547___mcc_h48;
              {
                if (_9550_referential) {
                  if (_9549_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source554.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source554.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9551___mcc_h50 = _source554.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9552_op = _9551___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_9552_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_Times) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source555 = _9473_op;
            if (_source555.is_Eq) {
              bool _9553___mcc_h51 = _source555.dtor_referential;
              bool _9554___mcc_h52 = _source555.dtor_nullable;
              bool _9555_nullable = _9554___mcc_h52;
              bool _9556_referential = _9553___mcc_h51;
              {
                if (_9556_referential) {
                  if (_9555_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source555.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source555.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9557___mcc_h53 = _source555.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9558_op = _9557___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_9558_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_BitwiseAnd) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source556 = _9473_op;
            if (_source556.is_Eq) {
              bool _9559___mcc_h54 = _source556.dtor_referential;
              bool _9560___mcc_h55 = _source556.dtor_nullable;
              bool _9561_nullable = _9560___mcc_h55;
              bool _9562_referential = _9559___mcc_h54;
              {
                if (_9562_referential) {
                  if (_9561_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source556.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source556.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9563___mcc_h56 = _source556.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9564_op = _9563___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_9564_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_BitwiseOr) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source557 = _9473_op;
            if (_source557.is_Eq) {
              bool _9565___mcc_h57 = _source557.dtor_referential;
              bool _9566___mcc_h58 = _source557.dtor_nullable;
              bool _9567_nullable = _9566___mcc_h58;
              bool _9568_referential = _9565___mcc_h57;
              {
                if (_9568_referential) {
                  if (_9567_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source557.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source557.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9569___mcc_h59 = _source557.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9570_op = _9569___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_9570_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_BitwiseXor) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source558 = _9473_op;
            if (_source558.is_Eq) {
              bool _9571___mcc_h60 = _source558.dtor_referential;
              bool _9572___mcc_h61 = _source558.dtor_nullable;
              bool _9573_nullable = _9572___mcc_h61;
              bool _9574_referential = _9571___mcc_h60;
              {
                if (_9574_referential) {
                  if (_9573_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source558.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source558.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9575___mcc_h62 = _source558.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9576_op = _9575___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_9576_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_BitwiseShiftRight) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source559 = _9473_op;
            if (_source559.is_Eq) {
              bool _9577___mcc_h63 = _source559.dtor_referential;
              bool _9578___mcc_h64 = _source559.dtor_nullable;
              bool _9579_nullable = _9578___mcc_h64;
              bool _9580_referential = _9577___mcc_h63;
              {
                if (_9580_referential) {
                  if (_9579_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source559.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source559.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9581___mcc_h65 = _source559.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9582_op = _9581___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_9582_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_BitwiseShiftLeft) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source560 = _9473_op;
            if (_source560.is_Eq) {
              bool _9583___mcc_h66 = _source560.dtor_referential;
              bool _9584___mcc_h67 = _source560.dtor_nullable;
              bool _9585_nullable = _9584___mcc_h67;
              bool _9586_referential = _9583___mcc_h66;
              {
                if (_9586_referential) {
                  if (_9585_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source560.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source560.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9587___mcc_h68 = _source560.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9588_op = _9587___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_9588_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_And) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source561 = _9473_op;
            if (_source561.is_Eq) {
              bool _9589___mcc_h69 = _source561.dtor_referential;
              bool _9590___mcc_h70 = _source561.dtor_nullable;
              bool _9591_nullable = _9590___mcc_h70;
              bool _9592_referential = _9589___mcc_h69;
              {
                if (_9592_referential) {
                  if (_9591_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source561.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source561.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9593___mcc_h71 = _source561.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9594_op = _9593___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_9594_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_Or) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source562 = _9473_op;
            if (_source562.is_Eq) {
              bool _9595___mcc_h72 = _source562.dtor_referential;
              bool _9596___mcc_h73 = _source562.dtor_nullable;
              bool _9597_nullable = _9596___mcc_h73;
              bool _9598_referential = _9595___mcc_h72;
              {
                if (_9598_referential) {
                  if (_9597_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source562.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source562.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9599___mcc_h74 = _source562.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9600_op = _9599___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_9600_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      } else if (_source545.is_In) {
        {
          r = ((_9494_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_9491_left);
        }
      } else if (_source545.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _9491_left, _9494_right, _9476_format);
      } else if (_source545.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _9491_left, _9494_right, _9476_format);
      } else if (_source545.is_SetMerge) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_9494_right);
        }
      } else if (_source545.is_SetSubtraction) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_9494_right);
        }
      } else if (_source545.is_SetIntersection) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_9494_right);
        }
      } else if (_source545.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _9491_left, _9494_right, _9476_format);
        }
      } else if (_source545.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _9491_left, _9494_right, _9476_format);
        }
      } else if (_source545.is_SetDisjoint) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_9494_right);
        }
      } else if (_source545.is_MapMerge) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_9494_right);
        }
      } else if (_source545.is_MapSubtraction) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_9494_right);
        }
      } else if (_source545.is_MultisetMerge) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_9494_right);
        }
      } else if (_source545.is_MultisetSubtraction) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_9494_right);
        }
      } else if (_source545.is_MultisetIntersection) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_9494_right);
        }
      } else if (_source545.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _9491_left, _9494_right, _9476_format);
        }
      } else if (_source545.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _9491_left, _9494_right, _9476_format);
        }
      } else if (_source545.is_MultisetDisjoint) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_9494_right);
        }
      } else if (_source545.is_Concat) {
        {
          r = ((_9491_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_9494_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _9601___mcc_h22 = _source545.dtor_Passthrough_a0;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_9473_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_9473_op), _9491_left, _9494_right, _9476_format);
          } else {
            DAST._IBinOp _source563 = _9473_op;
            if (_source563.is_Eq) {
              bool _9602___mcc_h75 = _source563.dtor_referential;
              bool _9603___mcc_h76 = _source563.dtor_nullable;
              bool _9604_nullable = _9603___mcc_h76;
              bool _9605_referential = _9602___mcc_h75;
              {
                if (_9605_referential) {
                  if (_9604_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _9491_left, _9494_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source563.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else if (_source563.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9491_left, _9494_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9606___mcc_h77 = _source563.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _9607_op = _9606___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_9607_op, _9491_left, _9494_right, _9476_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out4137;
      DCOMPUTF16._IOwnership _out4138;
      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4137, out _out4138);
      r = _out4137;
      resultingOwnership = _out4138;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_9493_recIdentsL, _9496_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs54 = e;
      DAST._IExpression _9608_expr = _let_tmp_rhs54.dtor_value;
      DAST._IType _9609_fromTpe = _let_tmp_rhs54.dtor_from;
      DAST._IType _9610_toTpe = _let_tmp_rhs54.dtor_typ;
      if (object.Equals(_9609_fromTpe, _9610_toTpe)) {
        RAST._IExpr _9611_recursiveGen;
        DCOMPUTF16._IOwnership _9612_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9613_recIdents;
        RAST._IExpr _out4139;
        DCOMPUTF16._IOwnership _out4140;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4141;
        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4139, out _out4140, out _out4141);
        _9611_recursiveGen = _out4139;
        _9612_recOwned = _out4140;
        _9613_recIdents = _out4141;
        r = _9611_recursiveGen;
        RAST._IExpr _out4142;
        DCOMPUTF16._IOwnership _out4143;
        DCOMPUTF16.COMP.FromOwnership(r, _9612_recOwned, expectedOwnership, out _out4142, out _out4143);
        r = _out4142;
        resultingOwnership = _out4143;
        readIdents = _9613_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source564 = _System.Tuple2<DAST._IType, DAST._IType>.create(_9609_fromTpe, _9610_toTpe);
        DAST._IType _9614___mcc_h0 = _source564.dtor__0;
        DAST._IType _9615___mcc_h1 = _source564.dtor__1;
        DAST._IType _source565 = _9614___mcc_h0;
        if (_source565.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9616___mcc_h4 = _source565.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _9617___mcc_h5 = _source565.dtor_typeArgs;
          DAST._IResolvedType _9618___mcc_h6 = _source565.dtor_resolved;
          DAST._IResolvedType _source566 = _9618___mcc_h6;
          if (_source566.is_AllocatedDatatype) {
            DAST._IDatatypeType _9619___mcc_h16 = _source566.dtor_datatypeType;
            DAST._IType _source567 = _9615___mcc_h1;
            if (_source567.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9620___mcc_h20 = _source567.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9621___mcc_h21 = _source567.dtor_typeArgs;
              DAST._IResolvedType _9622___mcc_h22 = _source567.dtor_resolved;
              DAST._IResolvedType _source568 = _9622___mcc_h22;
              if (_source568.is_AllocatedDatatype) {
                DAST._IDatatypeType _9623___mcc_h26 = _source568.dtor_datatypeType;
                {
                  RAST._IType _9624_fromTpeGen;
                  RAST._IType _out4144;
                  _out4144 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9624_fromTpeGen = _out4144;
                  RAST._IType _9625_toTpeGen;
                  RAST._IType _out4145;
                  _out4145 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9625_toTpeGen = _out4145;
                  RAST._IExpr _9626_recursiveGen;
                  DCOMPUTF16._IOwnership _9627_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9628_recIdents;
                  RAST._IExpr _out4146;
                  DCOMPUTF16._IOwnership _out4147;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4148;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4146, out _out4147, out _out4148);
                  _9626_recursiveGen = _out4146;
                  _9627_recOwned = _out4147;
                  _9628_recIdents = _out4148;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9626_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9624_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9625_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4149;
                  DCOMPUTF16._IOwnership _out4150;
                  DCOMPUTF16.COMP.FromOwnership(r, _9627_recOwned, expectedOwnership, out _out4149, out _out4150);
                  r = _out4149;
                  resultingOwnership = _out4150;
                  readIdents = _9628_recIdents;
                }
              } else if (_source568.is_Datatype) {
                DAST._IDatatypeType _9629___mcc_h28 = _source568.dtor_datatypeType;
                {
                  RAST._IType _9630_fromTpeGen;
                  RAST._IType _out4151;
                  _out4151 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9630_fromTpeGen = _out4151;
                  RAST._IType _9631_toTpeGen;
                  RAST._IType _out4152;
                  _out4152 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9631_toTpeGen = _out4152;
                  RAST._IExpr _9632_recursiveGen;
                  DCOMPUTF16._IOwnership _9633_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9634_recIdents;
                  RAST._IExpr _out4153;
                  DCOMPUTF16._IOwnership _out4154;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4155;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4153, out _out4154, out _out4155);
                  _9632_recursiveGen = _out4153;
                  _9633_recOwned = _out4154;
                  _9634_recIdents = _out4155;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9632_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9630_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9631_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4156;
                  DCOMPUTF16._IOwnership _out4157;
                  DCOMPUTF16.COMP.FromOwnership(r, _9633_recOwned, expectedOwnership, out _out4156, out _out4157);
                  r = _out4156;
                  resultingOwnership = _out4157;
                  readIdents = _9634_recIdents;
                }
              } else if (_source568.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9635___mcc_h30 = _source568.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9636___mcc_h31 = _source568.dtor_attributes;
                {
                  RAST._IType _9637_fromTpeGen;
                  RAST._IType _out4158;
                  _out4158 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9637_fromTpeGen = _out4158;
                  RAST._IType _9638_toTpeGen;
                  RAST._IType _out4159;
                  _out4159 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9638_toTpeGen = _out4159;
                  RAST._IExpr _9639_recursiveGen;
                  DCOMPUTF16._IOwnership _9640_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9641_recIdents;
                  RAST._IExpr _out4160;
                  DCOMPUTF16._IOwnership _out4161;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4162;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4160, out _out4161, out _out4162);
                  _9639_recursiveGen = _out4160;
                  _9640_recOwned = _out4161;
                  _9641_recIdents = _out4162;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9639_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9637_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9638_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4163;
                  DCOMPUTF16._IOwnership _out4164;
                  DCOMPUTF16.COMP.FromOwnership(r, _9640_recOwned, expectedOwnership, out _out4163, out _out4164);
                  r = _out4163;
                  resultingOwnership = _out4164;
                  readIdents = _9641_recIdents;
                }
              } else {
                DAST._IType _9642___mcc_h34 = _source568.dtor_baseType;
                DAST._INewtypeRange _9643___mcc_h35 = _source568.dtor_range;
                bool _9644___mcc_h36 = _source568.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9645___mcc_h37 = _source568.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9646_attributes = _9645___mcc_h37;
                bool _9647_erase = _9644___mcc_h36;
                DAST._INewtypeRange _9648_range = _9643___mcc_h35;
                DAST._IType _9649_b = _9642___mcc_h34;
                {
                  Std.Wrappers._IOption<RAST._IType> _9650_nativeToType;
                  _9650_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9649_b, _9648_range);
                  if (object.Equals(_9609_fromTpe, _9649_b)) {
                    RAST._IExpr _9651_recursiveGen;
                    DCOMPUTF16._IOwnership _9652_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9653_recIdents;
                    RAST._IExpr _out4165;
                    DCOMPUTF16._IOwnership _out4166;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4167;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4165, out _out4166, out _out4167);
                    _9651_recursiveGen = _out4165;
                    _9652_recOwned = _out4166;
                    _9653_recIdents = _out4167;
                    readIdents = _9653_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source569 = _9650_nativeToType;
                    if (_source569.is_None) {
                      if (_9647_erase) {
                        r = _9651_recursiveGen;
                      } else {
                        RAST._IType _9654_rhsType;
                        RAST._IType _out4168;
                        _out4168 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _9654_rhsType = _out4168;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9654_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9651_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4169;
                      DCOMPUTF16._IOwnership _out4170;
                      DCOMPUTF16.COMP.FromOwnership(r, _9652_recOwned, expectedOwnership, out _out4169, out _out4170);
                      r = _out4169;
                      resultingOwnership = _out4170;
                    } else {
                      RAST._IType _9655___mcc_h1348 = _source569.dtor_value;
                      RAST._IType _9656_v = _9655___mcc_h1348;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9651_recursiveGen, RAST.Expr.create_ExprFromType(_9656_v)));
                      RAST._IExpr _out4171;
                      DCOMPUTF16._IOwnership _out4172;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4171, out _out4172);
                      r = _out4171;
                      resultingOwnership = _out4172;
                    }
                  } else {
                    if ((_9650_nativeToType).is_Some) {
                      DAST._IType _source570 = _9609_fromTpe;
                      if (_source570.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9657___mcc_h1349 = _source570.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9658___mcc_h1350 = _source570.dtor_typeArgs;
                        DAST._IResolvedType _9659___mcc_h1351 = _source570.dtor_resolved;
                        DAST._IResolvedType _source571 = _9659___mcc_h1351;
                        if (_source571.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9660___mcc_h1355 = _source571.dtor_datatypeType;
                        } else if (_source571.is_Datatype) {
                          DAST._IDatatypeType _9661___mcc_h1357 = _source571.dtor_datatypeType;
                        } else if (_source571.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9662___mcc_h1359 = _source571.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9663___mcc_h1360 = _source571.dtor_attributes;
                        } else {
                          DAST._IType _9664___mcc_h1363 = _source571.dtor_baseType;
                          DAST._INewtypeRange _9665___mcc_h1364 = _source571.dtor_range;
                          bool _9666___mcc_h1365 = _source571.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9667___mcc_h1366 = _source571.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9668_attributes0 = _9667___mcc_h1366;
                          bool _9669_erase0 = _9666___mcc_h1365;
                          DAST._INewtypeRange _9670_range0 = _9665___mcc_h1364;
                          DAST._IType _9671_b0 = _9664___mcc_h1363;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9672_nativeFromType;
                            _9672_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9671_b0, _9670_range0);
                            if ((_9672_nativeFromType).is_Some) {
                              RAST._IExpr _9673_recursiveGen;
                              DCOMPUTF16._IOwnership _9674_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9675_recIdents;
                              RAST._IExpr _out4173;
                              DCOMPUTF16._IOwnership _out4174;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4175;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4173, out _out4174, out _out4175);
                              _9673_recursiveGen = _out4173;
                              _9674_recOwned = _out4174;
                              _9675_recIdents = _out4175;
                              RAST._IExpr _out4176;
                              DCOMPUTF16._IOwnership _out4177;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9673_recursiveGen, (_9650_nativeToType).dtor_value), _9674_recOwned, expectedOwnership, out _out4176, out _out4177);
                              r = _out4176;
                              resultingOwnership = _out4177;
                              readIdents = _9675_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source570.is_Nullable) {
                        DAST._IType _9676___mcc_h1371 = _source570.dtor_Nullable_a0;
                      } else if (_source570.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9677___mcc_h1373 = _source570.dtor_Tuple_a0;
                      } else if (_source570.is_Array) {
                        DAST._IType _9678___mcc_h1375 = _source570.dtor_element;
                        BigInteger _9679___mcc_h1376 = _source570.dtor_dims;
                      } else if (_source570.is_Seq) {
                        DAST._IType _9680___mcc_h1379 = _source570.dtor_element;
                      } else if (_source570.is_Set) {
                        DAST._IType _9681___mcc_h1381 = _source570.dtor_element;
                      } else if (_source570.is_Multiset) {
                        DAST._IType _9682___mcc_h1383 = _source570.dtor_element;
                      } else if (_source570.is_Map) {
                        DAST._IType _9683___mcc_h1385 = _source570.dtor_key;
                        DAST._IType _9684___mcc_h1386 = _source570.dtor_value;
                      } else if (_source570.is_SetBuilder) {
                        DAST._IType _9685___mcc_h1389 = _source570.dtor_element;
                      } else if (_source570.is_MapBuilder) {
                        DAST._IType _9686___mcc_h1391 = _source570.dtor_key;
                        DAST._IType _9687___mcc_h1392 = _source570.dtor_value;
                      } else if (_source570.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _9688___mcc_h1395 = _source570.dtor_args;
                        DAST._IType _9689___mcc_h1396 = _source570.dtor_result;
                      } else if (_source570.is_Primitive) {
                        DAST._IPrimitive _9690___mcc_h1399 = _source570.dtor_Primitive_a0;
                      } else if (_source570.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _9691___mcc_h1401 = _source570.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _9692___mcc_h1403 = _source570.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9693_recursiveGen;
                        DCOMPUTF16._IOwnership _9694_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9695_recIdents;
                        RAST._IExpr _out4178;
                        DCOMPUTF16._IOwnership _out4179;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4180;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4178, out _out4179, out _out4180);
                        _9693_recursiveGen = _out4178;
                        _9694_recOwned = _out4179;
                        _9695_recIdents = _out4180;
                        RAST._IExpr _out4181;
                        DCOMPUTF16._IOwnership _out4182;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9693_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9650_nativeToType).dtor_value), _9694_recOwned, expectedOwnership, out _out4181, out _out4182);
                        r = _out4181;
                        resultingOwnership = _out4182;
                        readIdents = _9695_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4183;
                    DCOMPUTF16._IOwnership _out4184;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4185;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _9649_b), _9649_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4183, out _out4184, out _out4185);
                    r = _out4183;
                    resultingOwnership = _out4184;
                    readIdents = _out4185;
                  }
                }
              }
            } else if (_source567.is_Nullable) {
              DAST._IType _9696___mcc_h42 = _source567.dtor_Nullable_a0;
              {
                RAST._IExpr _9697_recursiveGen;
                DCOMPUTF16._IOwnership _9698_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9699_recIdents;
                RAST._IExpr _out4186;
                DCOMPUTF16._IOwnership _out4187;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4188;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4186, out _out4187, out _out4188);
                _9697_recursiveGen = _out4186;
                _9698_recOwned = _out4187;
                _9699_recIdents = _out4188;
                r = _9697_recursiveGen;
                if (object.Equals(_9698_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4189;
                DCOMPUTF16._IOwnership _out4190;
                DCOMPUTF16.COMP.FromOwnership(r, _9698_recOwned, expectedOwnership, out _out4189, out _out4190);
                r = _out4189;
                resultingOwnership = _out4190;
                readIdents = _9699_recIdents;
              }
            } else if (_source567.is_Tuple) {
              Dafny.ISequence<DAST._IType> _9700___mcc_h44 = _source567.dtor_Tuple_a0;
              {
                RAST._IType _9701_fromTpeGen;
                RAST._IType _out4191;
                _out4191 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9701_fromTpeGen = _out4191;
                RAST._IType _9702_toTpeGen;
                RAST._IType _out4192;
                _out4192 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9702_toTpeGen = _out4192;
                RAST._IExpr _9703_recursiveGen;
                DCOMPUTF16._IOwnership _9704_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9705_recIdents;
                RAST._IExpr _out4193;
                DCOMPUTF16._IOwnership _out4194;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4195;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4193, out _out4194, out _out4195);
                _9703_recursiveGen = _out4193;
                _9704_recOwned = _out4194;
                _9705_recIdents = _out4195;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9703_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9701_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9702_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4196;
                DCOMPUTF16._IOwnership _out4197;
                DCOMPUTF16.COMP.FromOwnership(r, _9704_recOwned, expectedOwnership, out _out4196, out _out4197);
                r = _out4196;
                resultingOwnership = _out4197;
                readIdents = _9705_recIdents;
              }
            } else if (_source567.is_Array) {
              DAST._IType _9706___mcc_h46 = _source567.dtor_element;
              BigInteger _9707___mcc_h47 = _source567.dtor_dims;
              {
                RAST._IType _9708_fromTpeGen;
                RAST._IType _out4198;
                _out4198 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9708_fromTpeGen = _out4198;
                RAST._IType _9709_toTpeGen;
                RAST._IType _out4199;
                _out4199 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9709_toTpeGen = _out4199;
                RAST._IExpr _9710_recursiveGen;
                DCOMPUTF16._IOwnership _9711_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9712_recIdents;
                RAST._IExpr _out4200;
                DCOMPUTF16._IOwnership _out4201;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4202;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4200, out _out4201, out _out4202);
                _9710_recursiveGen = _out4200;
                _9711_recOwned = _out4201;
                _9712_recIdents = _out4202;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9710_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9708_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9709_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4203;
                DCOMPUTF16._IOwnership _out4204;
                DCOMPUTF16.COMP.FromOwnership(r, _9711_recOwned, expectedOwnership, out _out4203, out _out4204);
                r = _out4203;
                resultingOwnership = _out4204;
                readIdents = _9712_recIdents;
              }
            } else if (_source567.is_Seq) {
              DAST._IType _9713___mcc_h50 = _source567.dtor_element;
              {
                RAST._IType _9714_fromTpeGen;
                RAST._IType _out4205;
                _out4205 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9714_fromTpeGen = _out4205;
                RAST._IType _9715_toTpeGen;
                RAST._IType _out4206;
                _out4206 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9715_toTpeGen = _out4206;
                RAST._IExpr _9716_recursiveGen;
                DCOMPUTF16._IOwnership _9717_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9718_recIdents;
                RAST._IExpr _out4207;
                DCOMPUTF16._IOwnership _out4208;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4209;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4207, out _out4208, out _out4209);
                _9716_recursiveGen = _out4207;
                _9717_recOwned = _out4208;
                _9718_recIdents = _out4209;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9716_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9714_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9715_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4210;
                DCOMPUTF16._IOwnership _out4211;
                DCOMPUTF16.COMP.FromOwnership(r, _9717_recOwned, expectedOwnership, out _out4210, out _out4211);
                r = _out4210;
                resultingOwnership = _out4211;
                readIdents = _9718_recIdents;
              }
            } else if (_source567.is_Set) {
              DAST._IType _9719___mcc_h52 = _source567.dtor_element;
              {
                RAST._IType _9720_fromTpeGen;
                RAST._IType _out4212;
                _out4212 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9720_fromTpeGen = _out4212;
                RAST._IType _9721_toTpeGen;
                RAST._IType _out4213;
                _out4213 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9721_toTpeGen = _out4213;
                RAST._IExpr _9722_recursiveGen;
                DCOMPUTF16._IOwnership _9723_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9724_recIdents;
                RAST._IExpr _out4214;
                DCOMPUTF16._IOwnership _out4215;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4216;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4214, out _out4215, out _out4216);
                _9722_recursiveGen = _out4214;
                _9723_recOwned = _out4215;
                _9724_recIdents = _out4216;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9722_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9720_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9721_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4217;
                DCOMPUTF16._IOwnership _out4218;
                DCOMPUTF16.COMP.FromOwnership(r, _9723_recOwned, expectedOwnership, out _out4217, out _out4218);
                r = _out4217;
                resultingOwnership = _out4218;
                readIdents = _9724_recIdents;
              }
            } else if (_source567.is_Multiset) {
              DAST._IType _9725___mcc_h54 = _source567.dtor_element;
              {
                RAST._IType _9726_fromTpeGen;
                RAST._IType _out4219;
                _out4219 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9726_fromTpeGen = _out4219;
                RAST._IType _9727_toTpeGen;
                RAST._IType _out4220;
                _out4220 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9727_toTpeGen = _out4220;
                RAST._IExpr _9728_recursiveGen;
                DCOMPUTF16._IOwnership _9729_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9730_recIdents;
                RAST._IExpr _out4221;
                DCOMPUTF16._IOwnership _out4222;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4223;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4221, out _out4222, out _out4223);
                _9728_recursiveGen = _out4221;
                _9729_recOwned = _out4222;
                _9730_recIdents = _out4223;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9728_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9726_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9727_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4224;
                DCOMPUTF16._IOwnership _out4225;
                DCOMPUTF16.COMP.FromOwnership(r, _9729_recOwned, expectedOwnership, out _out4224, out _out4225);
                r = _out4224;
                resultingOwnership = _out4225;
                readIdents = _9730_recIdents;
              }
            } else if (_source567.is_Map) {
              DAST._IType _9731___mcc_h56 = _source567.dtor_key;
              DAST._IType _9732___mcc_h57 = _source567.dtor_value;
              {
                RAST._IType _9733_fromTpeGen;
                RAST._IType _out4226;
                _out4226 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9733_fromTpeGen = _out4226;
                RAST._IType _9734_toTpeGen;
                RAST._IType _out4227;
                _out4227 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9734_toTpeGen = _out4227;
                RAST._IExpr _9735_recursiveGen;
                DCOMPUTF16._IOwnership _9736_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9737_recIdents;
                RAST._IExpr _out4228;
                DCOMPUTF16._IOwnership _out4229;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4230;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4228, out _out4229, out _out4230);
                _9735_recursiveGen = _out4228;
                _9736_recOwned = _out4229;
                _9737_recIdents = _out4230;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9735_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9733_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9734_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4231;
                DCOMPUTF16._IOwnership _out4232;
                DCOMPUTF16.COMP.FromOwnership(r, _9736_recOwned, expectedOwnership, out _out4231, out _out4232);
                r = _out4231;
                resultingOwnership = _out4232;
                readIdents = _9737_recIdents;
              }
            } else if (_source567.is_SetBuilder) {
              DAST._IType _9738___mcc_h60 = _source567.dtor_element;
              {
                RAST._IType _9739_fromTpeGen;
                RAST._IType _out4233;
                _out4233 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9739_fromTpeGen = _out4233;
                RAST._IType _9740_toTpeGen;
                RAST._IType _out4234;
                _out4234 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9740_toTpeGen = _out4234;
                RAST._IExpr _9741_recursiveGen;
                DCOMPUTF16._IOwnership _9742_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9743_recIdents;
                RAST._IExpr _out4235;
                DCOMPUTF16._IOwnership _out4236;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4237;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4235, out _out4236, out _out4237);
                _9741_recursiveGen = _out4235;
                _9742_recOwned = _out4236;
                _9743_recIdents = _out4237;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9741_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9739_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9740_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4238;
                DCOMPUTF16._IOwnership _out4239;
                DCOMPUTF16.COMP.FromOwnership(r, _9742_recOwned, expectedOwnership, out _out4238, out _out4239);
                r = _out4238;
                resultingOwnership = _out4239;
                readIdents = _9743_recIdents;
              }
            } else if (_source567.is_MapBuilder) {
              DAST._IType _9744___mcc_h62 = _source567.dtor_key;
              DAST._IType _9745___mcc_h63 = _source567.dtor_value;
              {
                RAST._IType _9746_fromTpeGen;
                RAST._IType _out4240;
                _out4240 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9746_fromTpeGen = _out4240;
                RAST._IType _9747_toTpeGen;
                RAST._IType _out4241;
                _out4241 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9747_toTpeGen = _out4241;
                RAST._IExpr _9748_recursiveGen;
                DCOMPUTF16._IOwnership _9749_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9750_recIdents;
                RAST._IExpr _out4242;
                DCOMPUTF16._IOwnership _out4243;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4244;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4242, out _out4243, out _out4244);
                _9748_recursiveGen = _out4242;
                _9749_recOwned = _out4243;
                _9750_recIdents = _out4244;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9748_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9746_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9747_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4245;
                DCOMPUTF16._IOwnership _out4246;
                DCOMPUTF16.COMP.FromOwnership(r, _9749_recOwned, expectedOwnership, out _out4245, out _out4246);
                r = _out4245;
                resultingOwnership = _out4246;
                readIdents = _9750_recIdents;
              }
            } else if (_source567.is_Arrow) {
              Dafny.ISequence<DAST._IType> _9751___mcc_h66 = _source567.dtor_args;
              DAST._IType _9752___mcc_h67 = _source567.dtor_result;
              {
                RAST._IType _9753_fromTpeGen;
                RAST._IType _out4247;
                _out4247 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9753_fromTpeGen = _out4247;
                RAST._IType _9754_toTpeGen;
                RAST._IType _out4248;
                _out4248 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9754_toTpeGen = _out4248;
                RAST._IExpr _9755_recursiveGen;
                DCOMPUTF16._IOwnership _9756_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9757_recIdents;
                RAST._IExpr _out4249;
                DCOMPUTF16._IOwnership _out4250;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4251;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4249, out _out4250, out _out4251);
                _9755_recursiveGen = _out4249;
                _9756_recOwned = _out4250;
                _9757_recIdents = _out4251;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9755_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9753_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9754_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4252;
                DCOMPUTF16._IOwnership _out4253;
                DCOMPUTF16.COMP.FromOwnership(r, _9756_recOwned, expectedOwnership, out _out4252, out _out4253);
                r = _out4252;
                resultingOwnership = _out4253;
                readIdents = _9757_recIdents;
              }
            } else if (_source567.is_Primitive) {
              DAST._IPrimitive _9758___mcc_h70 = _source567.dtor_Primitive_a0;
              {
                RAST._IType _9759_fromTpeGen;
                RAST._IType _out4254;
                _out4254 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9759_fromTpeGen = _out4254;
                RAST._IType _9760_toTpeGen;
                RAST._IType _out4255;
                _out4255 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9760_toTpeGen = _out4255;
                RAST._IExpr _9761_recursiveGen;
                DCOMPUTF16._IOwnership _9762_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9763_recIdents;
                RAST._IExpr _out4256;
                DCOMPUTF16._IOwnership _out4257;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4258;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4256, out _out4257, out _out4258);
                _9761_recursiveGen = _out4256;
                _9762_recOwned = _out4257;
                _9763_recIdents = _out4258;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9761_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9759_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9760_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4259;
                DCOMPUTF16._IOwnership _out4260;
                DCOMPUTF16.COMP.FromOwnership(r, _9762_recOwned, expectedOwnership, out _out4259, out _out4260);
                r = _out4259;
                resultingOwnership = _out4260;
                readIdents = _9763_recIdents;
              }
            } else if (_source567.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _9764___mcc_h72 = _source567.dtor_Passthrough_a0;
              {
                RAST._IType _9765_fromTpeGen;
                RAST._IType _out4261;
                _out4261 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9765_fromTpeGen = _out4261;
                RAST._IType _9766_toTpeGen;
                RAST._IType _out4262;
                _out4262 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9766_toTpeGen = _out4262;
                RAST._IExpr _9767_recursiveGen;
                DCOMPUTF16._IOwnership _9768_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9769_recIdents;
                RAST._IExpr _out4263;
                DCOMPUTF16._IOwnership _out4264;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4265;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4263, out _out4264, out _out4265);
                _9767_recursiveGen = _out4263;
                _9768_recOwned = _out4264;
                _9769_recIdents = _out4265;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9767_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9765_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9766_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4266;
                DCOMPUTF16._IOwnership _out4267;
                DCOMPUTF16.COMP.FromOwnership(r, _9768_recOwned, expectedOwnership, out _out4266, out _out4267);
                r = _out4266;
                resultingOwnership = _out4267;
                readIdents = _9769_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9770___mcc_h74 = _source567.dtor_TypeArg_a0;
              {
                RAST._IType _9771_fromTpeGen;
                RAST._IType _out4268;
                _out4268 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9771_fromTpeGen = _out4268;
                RAST._IType _9772_toTpeGen;
                RAST._IType _out4269;
                _out4269 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9772_toTpeGen = _out4269;
                RAST._IExpr _9773_recursiveGen;
                DCOMPUTF16._IOwnership _9774_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9775_recIdents;
                RAST._IExpr _out4270;
                DCOMPUTF16._IOwnership _out4271;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4272;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4270, out _out4271, out _out4272);
                _9773_recursiveGen = _out4270;
                _9774_recOwned = _out4271;
                _9775_recIdents = _out4272;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9773_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9771_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9772_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4273;
                DCOMPUTF16._IOwnership _out4274;
                DCOMPUTF16.COMP.FromOwnership(r, _9774_recOwned, expectedOwnership, out _out4273, out _out4274);
                r = _out4273;
                resultingOwnership = _out4274;
                readIdents = _9775_recIdents;
              }
            }
          } else if (_source566.is_Datatype) {
            DAST._IDatatypeType _9776___mcc_h76 = _source566.dtor_datatypeType;
            DAST._IType _source572 = _9615___mcc_h1;
            if (_source572.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9777___mcc_h80 = _source572.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9778___mcc_h81 = _source572.dtor_typeArgs;
              DAST._IResolvedType _9779___mcc_h82 = _source572.dtor_resolved;
              DAST._IResolvedType _source573 = _9779___mcc_h82;
              if (_source573.is_AllocatedDatatype) {
                DAST._IDatatypeType _9780___mcc_h86 = _source573.dtor_datatypeType;
                {
                  RAST._IType _9781_fromTpeGen;
                  RAST._IType _out4275;
                  _out4275 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9781_fromTpeGen = _out4275;
                  RAST._IType _9782_toTpeGen;
                  RAST._IType _out4276;
                  _out4276 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9782_toTpeGen = _out4276;
                  RAST._IExpr _9783_recursiveGen;
                  DCOMPUTF16._IOwnership _9784_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9785_recIdents;
                  RAST._IExpr _out4277;
                  DCOMPUTF16._IOwnership _out4278;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4279;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4277, out _out4278, out _out4279);
                  _9783_recursiveGen = _out4277;
                  _9784_recOwned = _out4278;
                  _9785_recIdents = _out4279;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9783_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9781_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9782_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4280;
                  DCOMPUTF16._IOwnership _out4281;
                  DCOMPUTF16.COMP.FromOwnership(r, _9784_recOwned, expectedOwnership, out _out4280, out _out4281);
                  r = _out4280;
                  resultingOwnership = _out4281;
                  readIdents = _9785_recIdents;
                }
              } else if (_source573.is_Datatype) {
                DAST._IDatatypeType _9786___mcc_h88 = _source573.dtor_datatypeType;
                {
                  RAST._IType _9787_fromTpeGen;
                  RAST._IType _out4282;
                  _out4282 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9787_fromTpeGen = _out4282;
                  RAST._IType _9788_toTpeGen;
                  RAST._IType _out4283;
                  _out4283 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9788_toTpeGen = _out4283;
                  RAST._IExpr _9789_recursiveGen;
                  DCOMPUTF16._IOwnership _9790_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9791_recIdents;
                  RAST._IExpr _out4284;
                  DCOMPUTF16._IOwnership _out4285;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4286;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4284, out _out4285, out _out4286);
                  _9789_recursiveGen = _out4284;
                  _9790_recOwned = _out4285;
                  _9791_recIdents = _out4286;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9789_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9787_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9788_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4287;
                  DCOMPUTF16._IOwnership _out4288;
                  DCOMPUTF16.COMP.FromOwnership(r, _9790_recOwned, expectedOwnership, out _out4287, out _out4288);
                  r = _out4287;
                  resultingOwnership = _out4288;
                  readIdents = _9791_recIdents;
                }
              } else if (_source573.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9792___mcc_h90 = _source573.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9793___mcc_h91 = _source573.dtor_attributes;
                {
                  RAST._IType _9794_fromTpeGen;
                  RAST._IType _out4289;
                  _out4289 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9794_fromTpeGen = _out4289;
                  RAST._IType _9795_toTpeGen;
                  RAST._IType _out4290;
                  _out4290 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9795_toTpeGen = _out4290;
                  RAST._IExpr _9796_recursiveGen;
                  DCOMPUTF16._IOwnership _9797_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9798_recIdents;
                  RAST._IExpr _out4291;
                  DCOMPUTF16._IOwnership _out4292;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4293;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4291, out _out4292, out _out4293);
                  _9796_recursiveGen = _out4291;
                  _9797_recOwned = _out4292;
                  _9798_recIdents = _out4293;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9796_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9794_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9795_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4294;
                  DCOMPUTF16._IOwnership _out4295;
                  DCOMPUTF16.COMP.FromOwnership(r, _9797_recOwned, expectedOwnership, out _out4294, out _out4295);
                  r = _out4294;
                  resultingOwnership = _out4295;
                  readIdents = _9798_recIdents;
                }
              } else {
                DAST._IType _9799___mcc_h94 = _source573.dtor_baseType;
                DAST._INewtypeRange _9800___mcc_h95 = _source573.dtor_range;
                bool _9801___mcc_h96 = _source573.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9802___mcc_h97 = _source573.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9803_attributes = _9802___mcc_h97;
                bool _9804_erase = _9801___mcc_h96;
                DAST._INewtypeRange _9805_range = _9800___mcc_h95;
                DAST._IType _9806_b = _9799___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _9807_nativeToType;
                  _9807_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9806_b, _9805_range);
                  if (object.Equals(_9609_fromTpe, _9806_b)) {
                    RAST._IExpr _9808_recursiveGen;
                    DCOMPUTF16._IOwnership _9809_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9810_recIdents;
                    RAST._IExpr _out4296;
                    DCOMPUTF16._IOwnership _out4297;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4298;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4296, out _out4297, out _out4298);
                    _9808_recursiveGen = _out4296;
                    _9809_recOwned = _out4297;
                    _9810_recIdents = _out4298;
                    readIdents = _9810_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source574 = _9807_nativeToType;
                    if (_source574.is_None) {
                      if (_9804_erase) {
                        r = _9808_recursiveGen;
                      } else {
                        RAST._IType _9811_rhsType;
                        RAST._IType _out4299;
                        _out4299 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _9811_rhsType = _out4299;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9811_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9808_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4300;
                      DCOMPUTF16._IOwnership _out4301;
                      DCOMPUTF16.COMP.FromOwnership(r, _9809_recOwned, expectedOwnership, out _out4300, out _out4301);
                      r = _out4300;
                      resultingOwnership = _out4301;
                    } else {
                      RAST._IType _9812___mcc_h1405 = _source574.dtor_value;
                      RAST._IType _9813_v = _9812___mcc_h1405;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9808_recursiveGen, RAST.Expr.create_ExprFromType(_9813_v)));
                      RAST._IExpr _out4302;
                      DCOMPUTF16._IOwnership _out4303;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4302, out _out4303);
                      r = _out4302;
                      resultingOwnership = _out4303;
                    }
                  } else {
                    if ((_9807_nativeToType).is_Some) {
                      DAST._IType _source575 = _9609_fromTpe;
                      if (_source575.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9814___mcc_h1406 = _source575.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9815___mcc_h1407 = _source575.dtor_typeArgs;
                        DAST._IResolvedType _9816___mcc_h1408 = _source575.dtor_resolved;
                        DAST._IResolvedType _source576 = _9816___mcc_h1408;
                        if (_source576.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9817___mcc_h1412 = _source576.dtor_datatypeType;
                        } else if (_source576.is_Datatype) {
                          DAST._IDatatypeType _9818___mcc_h1414 = _source576.dtor_datatypeType;
                        } else if (_source576.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9819___mcc_h1416 = _source576.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9820___mcc_h1417 = _source576.dtor_attributes;
                        } else {
                          DAST._IType _9821___mcc_h1420 = _source576.dtor_baseType;
                          DAST._INewtypeRange _9822___mcc_h1421 = _source576.dtor_range;
                          bool _9823___mcc_h1422 = _source576.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9824___mcc_h1423 = _source576.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9825_attributes0 = _9824___mcc_h1423;
                          bool _9826_erase0 = _9823___mcc_h1422;
                          DAST._INewtypeRange _9827_range0 = _9822___mcc_h1421;
                          DAST._IType _9828_b0 = _9821___mcc_h1420;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9829_nativeFromType;
                            _9829_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9828_b0, _9827_range0);
                            if ((_9829_nativeFromType).is_Some) {
                              RAST._IExpr _9830_recursiveGen;
                              DCOMPUTF16._IOwnership _9831_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9832_recIdents;
                              RAST._IExpr _out4304;
                              DCOMPUTF16._IOwnership _out4305;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4306;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4304, out _out4305, out _out4306);
                              _9830_recursiveGen = _out4304;
                              _9831_recOwned = _out4305;
                              _9832_recIdents = _out4306;
                              RAST._IExpr _out4307;
                              DCOMPUTF16._IOwnership _out4308;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9830_recursiveGen, (_9807_nativeToType).dtor_value), _9831_recOwned, expectedOwnership, out _out4307, out _out4308);
                              r = _out4307;
                              resultingOwnership = _out4308;
                              readIdents = _9832_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source575.is_Nullable) {
                        DAST._IType _9833___mcc_h1428 = _source575.dtor_Nullable_a0;
                      } else if (_source575.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9834___mcc_h1430 = _source575.dtor_Tuple_a0;
                      } else if (_source575.is_Array) {
                        DAST._IType _9835___mcc_h1432 = _source575.dtor_element;
                        BigInteger _9836___mcc_h1433 = _source575.dtor_dims;
                      } else if (_source575.is_Seq) {
                        DAST._IType _9837___mcc_h1436 = _source575.dtor_element;
                      } else if (_source575.is_Set) {
                        DAST._IType _9838___mcc_h1438 = _source575.dtor_element;
                      } else if (_source575.is_Multiset) {
                        DAST._IType _9839___mcc_h1440 = _source575.dtor_element;
                      } else if (_source575.is_Map) {
                        DAST._IType _9840___mcc_h1442 = _source575.dtor_key;
                        DAST._IType _9841___mcc_h1443 = _source575.dtor_value;
                      } else if (_source575.is_SetBuilder) {
                        DAST._IType _9842___mcc_h1446 = _source575.dtor_element;
                      } else if (_source575.is_MapBuilder) {
                        DAST._IType _9843___mcc_h1448 = _source575.dtor_key;
                        DAST._IType _9844___mcc_h1449 = _source575.dtor_value;
                      } else if (_source575.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _9845___mcc_h1452 = _source575.dtor_args;
                        DAST._IType _9846___mcc_h1453 = _source575.dtor_result;
                      } else if (_source575.is_Primitive) {
                        DAST._IPrimitive _9847___mcc_h1456 = _source575.dtor_Primitive_a0;
                      } else if (_source575.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _9848___mcc_h1458 = _source575.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _9849___mcc_h1460 = _source575.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9850_recursiveGen;
                        DCOMPUTF16._IOwnership _9851_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9852_recIdents;
                        RAST._IExpr _out4309;
                        DCOMPUTF16._IOwnership _out4310;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4311;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4309, out _out4310, out _out4311);
                        _9850_recursiveGen = _out4309;
                        _9851_recOwned = _out4310;
                        _9852_recIdents = _out4311;
                        RAST._IExpr _out4312;
                        DCOMPUTF16._IOwnership _out4313;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9850_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9807_nativeToType).dtor_value), _9851_recOwned, expectedOwnership, out _out4312, out _out4313);
                        r = _out4312;
                        resultingOwnership = _out4313;
                        readIdents = _9852_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4314;
                    DCOMPUTF16._IOwnership _out4315;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4316;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _9806_b), _9806_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4314, out _out4315, out _out4316);
                    r = _out4314;
                    resultingOwnership = _out4315;
                    readIdents = _out4316;
                  }
                }
              }
            } else if (_source572.is_Nullable) {
              DAST._IType _9853___mcc_h102 = _source572.dtor_Nullable_a0;
              {
                RAST._IExpr _9854_recursiveGen;
                DCOMPUTF16._IOwnership _9855_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9856_recIdents;
                RAST._IExpr _out4317;
                DCOMPUTF16._IOwnership _out4318;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4319;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4317, out _out4318, out _out4319);
                _9854_recursiveGen = _out4317;
                _9855_recOwned = _out4318;
                _9856_recIdents = _out4319;
                r = _9854_recursiveGen;
                if (object.Equals(_9855_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4320;
                DCOMPUTF16._IOwnership _out4321;
                DCOMPUTF16.COMP.FromOwnership(r, _9855_recOwned, expectedOwnership, out _out4320, out _out4321);
                r = _out4320;
                resultingOwnership = _out4321;
                readIdents = _9856_recIdents;
              }
            } else if (_source572.is_Tuple) {
              Dafny.ISequence<DAST._IType> _9857___mcc_h104 = _source572.dtor_Tuple_a0;
              {
                RAST._IType _9858_fromTpeGen;
                RAST._IType _out4322;
                _out4322 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9858_fromTpeGen = _out4322;
                RAST._IType _9859_toTpeGen;
                RAST._IType _out4323;
                _out4323 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9859_toTpeGen = _out4323;
                RAST._IExpr _9860_recursiveGen;
                DCOMPUTF16._IOwnership _9861_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9862_recIdents;
                RAST._IExpr _out4324;
                DCOMPUTF16._IOwnership _out4325;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4326;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4324, out _out4325, out _out4326);
                _9860_recursiveGen = _out4324;
                _9861_recOwned = _out4325;
                _9862_recIdents = _out4326;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9860_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9858_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9859_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4327;
                DCOMPUTF16._IOwnership _out4328;
                DCOMPUTF16.COMP.FromOwnership(r, _9861_recOwned, expectedOwnership, out _out4327, out _out4328);
                r = _out4327;
                resultingOwnership = _out4328;
                readIdents = _9862_recIdents;
              }
            } else if (_source572.is_Array) {
              DAST._IType _9863___mcc_h106 = _source572.dtor_element;
              BigInteger _9864___mcc_h107 = _source572.dtor_dims;
              {
                RAST._IType _9865_fromTpeGen;
                RAST._IType _out4329;
                _out4329 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9865_fromTpeGen = _out4329;
                RAST._IType _9866_toTpeGen;
                RAST._IType _out4330;
                _out4330 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9866_toTpeGen = _out4330;
                RAST._IExpr _9867_recursiveGen;
                DCOMPUTF16._IOwnership _9868_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9869_recIdents;
                RAST._IExpr _out4331;
                DCOMPUTF16._IOwnership _out4332;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4333;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4331, out _out4332, out _out4333);
                _9867_recursiveGen = _out4331;
                _9868_recOwned = _out4332;
                _9869_recIdents = _out4333;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9867_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9865_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9866_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4334;
                DCOMPUTF16._IOwnership _out4335;
                DCOMPUTF16.COMP.FromOwnership(r, _9868_recOwned, expectedOwnership, out _out4334, out _out4335);
                r = _out4334;
                resultingOwnership = _out4335;
                readIdents = _9869_recIdents;
              }
            } else if (_source572.is_Seq) {
              DAST._IType _9870___mcc_h110 = _source572.dtor_element;
              {
                RAST._IType _9871_fromTpeGen;
                RAST._IType _out4336;
                _out4336 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9871_fromTpeGen = _out4336;
                RAST._IType _9872_toTpeGen;
                RAST._IType _out4337;
                _out4337 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9872_toTpeGen = _out4337;
                RAST._IExpr _9873_recursiveGen;
                DCOMPUTF16._IOwnership _9874_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9875_recIdents;
                RAST._IExpr _out4338;
                DCOMPUTF16._IOwnership _out4339;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4340;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4338, out _out4339, out _out4340);
                _9873_recursiveGen = _out4338;
                _9874_recOwned = _out4339;
                _9875_recIdents = _out4340;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9873_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9871_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9872_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4341;
                DCOMPUTF16._IOwnership _out4342;
                DCOMPUTF16.COMP.FromOwnership(r, _9874_recOwned, expectedOwnership, out _out4341, out _out4342);
                r = _out4341;
                resultingOwnership = _out4342;
                readIdents = _9875_recIdents;
              }
            } else if (_source572.is_Set) {
              DAST._IType _9876___mcc_h112 = _source572.dtor_element;
              {
                RAST._IType _9877_fromTpeGen;
                RAST._IType _out4343;
                _out4343 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9877_fromTpeGen = _out4343;
                RAST._IType _9878_toTpeGen;
                RAST._IType _out4344;
                _out4344 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9878_toTpeGen = _out4344;
                RAST._IExpr _9879_recursiveGen;
                DCOMPUTF16._IOwnership _9880_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9881_recIdents;
                RAST._IExpr _out4345;
                DCOMPUTF16._IOwnership _out4346;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4347;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4345, out _out4346, out _out4347);
                _9879_recursiveGen = _out4345;
                _9880_recOwned = _out4346;
                _9881_recIdents = _out4347;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9879_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9877_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9878_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4348;
                DCOMPUTF16._IOwnership _out4349;
                DCOMPUTF16.COMP.FromOwnership(r, _9880_recOwned, expectedOwnership, out _out4348, out _out4349);
                r = _out4348;
                resultingOwnership = _out4349;
                readIdents = _9881_recIdents;
              }
            } else if (_source572.is_Multiset) {
              DAST._IType _9882___mcc_h114 = _source572.dtor_element;
              {
                RAST._IType _9883_fromTpeGen;
                RAST._IType _out4350;
                _out4350 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9883_fromTpeGen = _out4350;
                RAST._IType _9884_toTpeGen;
                RAST._IType _out4351;
                _out4351 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9884_toTpeGen = _out4351;
                RAST._IExpr _9885_recursiveGen;
                DCOMPUTF16._IOwnership _9886_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9887_recIdents;
                RAST._IExpr _out4352;
                DCOMPUTF16._IOwnership _out4353;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4354;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4352, out _out4353, out _out4354);
                _9885_recursiveGen = _out4352;
                _9886_recOwned = _out4353;
                _9887_recIdents = _out4354;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9885_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9883_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9884_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4355;
                DCOMPUTF16._IOwnership _out4356;
                DCOMPUTF16.COMP.FromOwnership(r, _9886_recOwned, expectedOwnership, out _out4355, out _out4356);
                r = _out4355;
                resultingOwnership = _out4356;
                readIdents = _9887_recIdents;
              }
            } else if (_source572.is_Map) {
              DAST._IType _9888___mcc_h116 = _source572.dtor_key;
              DAST._IType _9889___mcc_h117 = _source572.dtor_value;
              {
                RAST._IType _9890_fromTpeGen;
                RAST._IType _out4357;
                _out4357 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9890_fromTpeGen = _out4357;
                RAST._IType _9891_toTpeGen;
                RAST._IType _out4358;
                _out4358 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9891_toTpeGen = _out4358;
                RAST._IExpr _9892_recursiveGen;
                DCOMPUTF16._IOwnership _9893_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9894_recIdents;
                RAST._IExpr _out4359;
                DCOMPUTF16._IOwnership _out4360;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4361;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4359, out _out4360, out _out4361);
                _9892_recursiveGen = _out4359;
                _9893_recOwned = _out4360;
                _9894_recIdents = _out4361;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9892_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9890_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9891_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4362;
                DCOMPUTF16._IOwnership _out4363;
                DCOMPUTF16.COMP.FromOwnership(r, _9893_recOwned, expectedOwnership, out _out4362, out _out4363);
                r = _out4362;
                resultingOwnership = _out4363;
                readIdents = _9894_recIdents;
              }
            } else if (_source572.is_SetBuilder) {
              DAST._IType _9895___mcc_h120 = _source572.dtor_element;
              {
                RAST._IType _9896_fromTpeGen;
                RAST._IType _out4364;
                _out4364 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9896_fromTpeGen = _out4364;
                RAST._IType _9897_toTpeGen;
                RAST._IType _out4365;
                _out4365 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9897_toTpeGen = _out4365;
                RAST._IExpr _9898_recursiveGen;
                DCOMPUTF16._IOwnership _9899_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9900_recIdents;
                RAST._IExpr _out4366;
                DCOMPUTF16._IOwnership _out4367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4368;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4366, out _out4367, out _out4368);
                _9898_recursiveGen = _out4366;
                _9899_recOwned = _out4367;
                _9900_recIdents = _out4368;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9898_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9896_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9897_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4369;
                DCOMPUTF16._IOwnership _out4370;
                DCOMPUTF16.COMP.FromOwnership(r, _9899_recOwned, expectedOwnership, out _out4369, out _out4370);
                r = _out4369;
                resultingOwnership = _out4370;
                readIdents = _9900_recIdents;
              }
            } else if (_source572.is_MapBuilder) {
              DAST._IType _9901___mcc_h122 = _source572.dtor_key;
              DAST._IType _9902___mcc_h123 = _source572.dtor_value;
              {
                RAST._IType _9903_fromTpeGen;
                RAST._IType _out4371;
                _out4371 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9903_fromTpeGen = _out4371;
                RAST._IType _9904_toTpeGen;
                RAST._IType _out4372;
                _out4372 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9904_toTpeGen = _out4372;
                RAST._IExpr _9905_recursiveGen;
                DCOMPUTF16._IOwnership _9906_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9907_recIdents;
                RAST._IExpr _out4373;
                DCOMPUTF16._IOwnership _out4374;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4375;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4373, out _out4374, out _out4375);
                _9905_recursiveGen = _out4373;
                _9906_recOwned = _out4374;
                _9907_recIdents = _out4375;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9905_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9903_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9904_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4376;
                DCOMPUTF16._IOwnership _out4377;
                DCOMPUTF16.COMP.FromOwnership(r, _9906_recOwned, expectedOwnership, out _out4376, out _out4377);
                r = _out4376;
                resultingOwnership = _out4377;
                readIdents = _9907_recIdents;
              }
            } else if (_source572.is_Arrow) {
              Dafny.ISequence<DAST._IType> _9908___mcc_h126 = _source572.dtor_args;
              DAST._IType _9909___mcc_h127 = _source572.dtor_result;
              {
                RAST._IType _9910_fromTpeGen;
                RAST._IType _out4378;
                _out4378 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9910_fromTpeGen = _out4378;
                RAST._IType _9911_toTpeGen;
                RAST._IType _out4379;
                _out4379 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9911_toTpeGen = _out4379;
                RAST._IExpr _9912_recursiveGen;
                DCOMPUTF16._IOwnership _9913_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9914_recIdents;
                RAST._IExpr _out4380;
                DCOMPUTF16._IOwnership _out4381;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4382;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4380, out _out4381, out _out4382);
                _9912_recursiveGen = _out4380;
                _9913_recOwned = _out4381;
                _9914_recIdents = _out4382;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9912_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9910_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9911_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4383;
                DCOMPUTF16._IOwnership _out4384;
                DCOMPUTF16.COMP.FromOwnership(r, _9913_recOwned, expectedOwnership, out _out4383, out _out4384);
                r = _out4383;
                resultingOwnership = _out4384;
                readIdents = _9914_recIdents;
              }
            } else if (_source572.is_Primitive) {
              DAST._IPrimitive _9915___mcc_h130 = _source572.dtor_Primitive_a0;
              {
                RAST._IType _9916_fromTpeGen;
                RAST._IType _out4385;
                _out4385 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9916_fromTpeGen = _out4385;
                RAST._IType _9917_toTpeGen;
                RAST._IType _out4386;
                _out4386 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9917_toTpeGen = _out4386;
                RAST._IExpr _9918_recursiveGen;
                DCOMPUTF16._IOwnership _9919_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9920_recIdents;
                RAST._IExpr _out4387;
                DCOMPUTF16._IOwnership _out4388;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4389;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4387, out _out4388, out _out4389);
                _9918_recursiveGen = _out4387;
                _9919_recOwned = _out4388;
                _9920_recIdents = _out4389;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9918_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9916_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9917_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4390;
                DCOMPUTF16._IOwnership _out4391;
                DCOMPUTF16.COMP.FromOwnership(r, _9919_recOwned, expectedOwnership, out _out4390, out _out4391);
                r = _out4390;
                resultingOwnership = _out4391;
                readIdents = _9920_recIdents;
              }
            } else if (_source572.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _9921___mcc_h132 = _source572.dtor_Passthrough_a0;
              {
                RAST._IType _9922_fromTpeGen;
                RAST._IType _out4392;
                _out4392 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9922_fromTpeGen = _out4392;
                RAST._IType _9923_toTpeGen;
                RAST._IType _out4393;
                _out4393 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9923_toTpeGen = _out4393;
                RAST._IExpr _9924_recursiveGen;
                DCOMPUTF16._IOwnership _9925_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9926_recIdents;
                RAST._IExpr _out4394;
                DCOMPUTF16._IOwnership _out4395;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4396;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4394, out _out4395, out _out4396);
                _9924_recursiveGen = _out4394;
                _9925_recOwned = _out4395;
                _9926_recIdents = _out4396;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9924_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9922_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9923_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4397;
                DCOMPUTF16._IOwnership _out4398;
                DCOMPUTF16.COMP.FromOwnership(r, _9925_recOwned, expectedOwnership, out _out4397, out _out4398);
                r = _out4397;
                resultingOwnership = _out4398;
                readIdents = _9926_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9927___mcc_h134 = _source572.dtor_TypeArg_a0;
              {
                RAST._IType _9928_fromTpeGen;
                RAST._IType _out4399;
                _out4399 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _9928_fromTpeGen = _out4399;
                RAST._IType _9929_toTpeGen;
                RAST._IType _out4400;
                _out4400 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _9929_toTpeGen = _out4400;
                RAST._IExpr _9930_recursiveGen;
                DCOMPUTF16._IOwnership _9931_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9932_recIdents;
                RAST._IExpr _out4401;
                DCOMPUTF16._IOwnership _out4402;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4403;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4401, out _out4402, out _out4403);
                _9930_recursiveGen = _out4401;
                _9931_recOwned = _out4402;
                _9932_recIdents = _out4403;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9930_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9928_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9929_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4404;
                DCOMPUTF16._IOwnership _out4405;
                DCOMPUTF16.COMP.FromOwnership(r, _9931_recOwned, expectedOwnership, out _out4404, out _out4405);
                r = _out4404;
                resultingOwnership = _out4405;
                readIdents = _9932_recIdents;
              }
            }
          } else if (_source566.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9933___mcc_h136 = _source566.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _9934___mcc_h137 = _source566.dtor_attributes;
            DAST._IType _source577 = _9615___mcc_h1;
            if (_source577.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9935___mcc_h144 = _source577.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9936___mcc_h145 = _source577.dtor_typeArgs;
              DAST._IResolvedType _9937___mcc_h146 = _source577.dtor_resolved;
              DAST._IResolvedType _source578 = _9937___mcc_h146;
              if (_source578.is_AllocatedDatatype) {
                DAST._IDatatypeType _9938___mcc_h150 = _source578.dtor_datatypeType;
                {
                  RAST._IType _9939_fromTpeGen;
                  RAST._IType _out4406;
                  _out4406 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9939_fromTpeGen = _out4406;
                  RAST._IType _9940_toTpeGen;
                  RAST._IType _out4407;
                  _out4407 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9940_toTpeGen = _out4407;
                  RAST._IExpr _9941_recursiveGen;
                  DCOMPUTF16._IOwnership _9942_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9943_recIdents;
                  RAST._IExpr _out4408;
                  DCOMPUTF16._IOwnership _out4409;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4410;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4408, out _out4409, out _out4410);
                  _9941_recursiveGen = _out4408;
                  _9942_recOwned = _out4409;
                  _9943_recIdents = _out4410;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9941_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9939_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9940_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4411;
                  DCOMPUTF16._IOwnership _out4412;
                  DCOMPUTF16.COMP.FromOwnership(r, _9942_recOwned, expectedOwnership, out _out4411, out _out4412);
                  r = _out4411;
                  resultingOwnership = _out4412;
                  readIdents = _9943_recIdents;
                }
              } else if (_source578.is_Datatype) {
                DAST._IDatatypeType _9944___mcc_h152 = _source578.dtor_datatypeType;
                {
                  RAST._IType _9945_fromTpeGen;
                  RAST._IType _out4413;
                  _out4413 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9945_fromTpeGen = _out4413;
                  RAST._IType _9946_toTpeGen;
                  RAST._IType _out4414;
                  _out4414 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9946_toTpeGen = _out4414;
                  RAST._IExpr _9947_recursiveGen;
                  DCOMPUTF16._IOwnership _9948_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9949_recIdents;
                  RAST._IExpr _out4415;
                  DCOMPUTF16._IOwnership _out4416;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4417;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4415, out _out4416, out _out4417);
                  _9947_recursiveGen = _out4415;
                  _9948_recOwned = _out4416;
                  _9949_recIdents = _out4417;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9947_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9945_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9946_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4418;
                  DCOMPUTF16._IOwnership _out4419;
                  DCOMPUTF16.COMP.FromOwnership(r, _9948_recOwned, expectedOwnership, out _out4418, out _out4419);
                  r = _out4418;
                  resultingOwnership = _out4419;
                  readIdents = _9949_recIdents;
                }
              } else if (_source578.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9950___mcc_h154 = _source578.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9951___mcc_h155 = _source578.dtor_attributes;
                {
                  RAST._IType _9952_fromTpeGen;
                  RAST._IType _out4420;
                  _out4420 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _9952_fromTpeGen = _out4420;
                  RAST._IType _9953_toTpeGen;
                  RAST._IType _out4421;
                  _out4421 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _9953_toTpeGen = _out4421;
                  RAST._IExpr _9954_recursiveGen;
                  DCOMPUTF16._IOwnership _9955_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9956_recIdents;
                  RAST._IExpr _out4422;
                  DCOMPUTF16._IOwnership _out4423;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4424;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4422, out _out4423, out _out4424);
                  _9954_recursiveGen = _out4422;
                  _9955_recOwned = _out4423;
                  _9956_recIdents = _out4424;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9954_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9952_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9953_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4425;
                  DCOMPUTF16._IOwnership _out4426;
                  DCOMPUTF16.COMP.FromOwnership(r, _9955_recOwned, expectedOwnership, out _out4425, out _out4426);
                  r = _out4425;
                  resultingOwnership = _out4426;
                  readIdents = _9956_recIdents;
                }
              } else {
                DAST._IType _9957___mcc_h158 = _source578.dtor_baseType;
                DAST._INewtypeRange _9958___mcc_h159 = _source578.dtor_range;
                bool _9959___mcc_h160 = _source578.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9960___mcc_h161 = _source578.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9961_attributes = _9960___mcc_h161;
                bool _9962_erase = _9959___mcc_h160;
                DAST._INewtypeRange _9963_range = _9958___mcc_h159;
                DAST._IType _9964_b = _9957___mcc_h158;
                {
                  Std.Wrappers._IOption<RAST._IType> _9965_nativeToType;
                  _9965_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9964_b, _9963_range);
                  if (object.Equals(_9609_fromTpe, _9964_b)) {
                    RAST._IExpr _9966_recursiveGen;
                    DCOMPUTF16._IOwnership _9967_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9968_recIdents;
                    RAST._IExpr _out4427;
                    DCOMPUTF16._IOwnership _out4428;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4429;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4427, out _out4428, out _out4429);
                    _9966_recursiveGen = _out4427;
                    _9967_recOwned = _out4428;
                    _9968_recIdents = _out4429;
                    readIdents = _9968_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source579 = _9965_nativeToType;
                    if (_source579.is_None) {
                      if (_9962_erase) {
                        r = _9966_recursiveGen;
                      } else {
                        RAST._IType _9969_rhsType;
                        RAST._IType _out4430;
                        _out4430 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _9969_rhsType = _out4430;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9969_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9966_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4431;
                      DCOMPUTF16._IOwnership _out4432;
                      DCOMPUTF16.COMP.FromOwnership(r, _9967_recOwned, expectedOwnership, out _out4431, out _out4432);
                      r = _out4431;
                      resultingOwnership = _out4432;
                    } else {
                      RAST._IType _9970___mcc_h1462 = _source579.dtor_value;
                      RAST._IType _9971_v = _9970___mcc_h1462;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9966_recursiveGen, RAST.Expr.create_ExprFromType(_9971_v)));
                      RAST._IExpr _out4433;
                      DCOMPUTF16._IOwnership _out4434;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4433, out _out4434);
                      r = _out4433;
                      resultingOwnership = _out4434;
                    }
                  } else {
                    if ((_9965_nativeToType).is_Some) {
                      DAST._IType _source580 = _9609_fromTpe;
                      if (_source580.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9972___mcc_h1463 = _source580.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9973___mcc_h1464 = _source580.dtor_typeArgs;
                        DAST._IResolvedType _9974___mcc_h1465 = _source580.dtor_resolved;
                        DAST._IResolvedType _source581 = _9974___mcc_h1465;
                        if (_source581.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9975___mcc_h1469 = _source581.dtor_datatypeType;
                        } else if (_source581.is_Datatype) {
                          DAST._IDatatypeType _9976___mcc_h1471 = _source581.dtor_datatypeType;
                        } else if (_source581.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9977___mcc_h1473 = _source581.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9978___mcc_h1474 = _source581.dtor_attributes;
                        } else {
                          DAST._IType _9979___mcc_h1477 = _source581.dtor_baseType;
                          DAST._INewtypeRange _9980___mcc_h1478 = _source581.dtor_range;
                          bool _9981___mcc_h1479 = _source581.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9982___mcc_h1480 = _source581.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9983_attributes0 = _9982___mcc_h1480;
                          bool _9984_erase0 = _9981___mcc_h1479;
                          DAST._INewtypeRange _9985_range0 = _9980___mcc_h1478;
                          DAST._IType _9986_b0 = _9979___mcc_h1477;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9987_nativeFromType;
                            _9987_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9986_b0, _9985_range0);
                            if ((_9987_nativeFromType).is_Some) {
                              RAST._IExpr _9988_recursiveGen;
                              DCOMPUTF16._IOwnership _9989_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9990_recIdents;
                              RAST._IExpr _out4435;
                              DCOMPUTF16._IOwnership _out4436;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4437;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4435, out _out4436, out _out4437);
                              _9988_recursiveGen = _out4435;
                              _9989_recOwned = _out4436;
                              _9990_recIdents = _out4437;
                              RAST._IExpr _out4438;
                              DCOMPUTF16._IOwnership _out4439;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9988_recursiveGen, (_9965_nativeToType).dtor_value), _9989_recOwned, expectedOwnership, out _out4438, out _out4439);
                              r = _out4438;
                              resultingOwnership = _out4439;
                              readIdents = _9990_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source580.is_Nullable) {
                        DAST._IType _9991___mcc_h1485 = _source580.dtor_Nullable_a0;
                      } else if (_source580.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9992___mcc_h1487 = _source580.dtor_Tuple_a0;
                      } else if (_source580.is_Array) {
                        DAST._IType _9993___mcc_h1489 = _source580.dtor_element;
                        BigInteger _9994___mcc_h1490 = _source580.dtor_dims;
                      } else if (_source580.is_Seq) {
                        DAST._IType _9995___mcc_h1493 = _source580.dtor_element;
                      } else if (_source580.is_Set) {
                        DAST._IType _9996___mcc_h1495 = _source580.dtor_element;
                      } else if (_source580.is_Multiset) {
                        DAST._IType _9997___mcc_h1497 = _source580.dtor_element;
                      } else if (_source580.is_Map) {
                        DAST._IType _9998___mcc_h1499 = _source580.dtor_key;
                        DAST._IType _9999___mcc_h1500 = _source580.dtor_value;
                      } else if (_source580.is_SetBuilder) {
                        DAST._IType _10000___mcc_h1503 = _source580.dtor_element;
                      } else if (_source580.is_MapBuilder) {
                        DAST._IType _10001___mcc_h1505 = _source580.dtor_key;
                        DAST._IType _10002___mcc_h1506 = _source580.dtor_value;
                      } else if (_source580.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _10003___mcc_h1509 = _source580.dtor_args;
                        DAST._IType _10004___mcc_h1510 = _source580.dtor_result;
                      } else if (_source580.is_Primitive) {
                        DAST._IPrimitive _10005___mcc_h1513 = _source580.dtor_Primitive_a0;
                      } else if (_source580.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _10006___mcc_h1515 = _source580.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _10007___mcc_h1517 = _source580.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10008_recursiveGen;
                        DCOMPUTF16._IOwnership _10009_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10010_recIdents;
                        RAST._IExpr _out4440;
                        DCOMPUTF16._IOwnership _out4441;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4442;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4440, out _out4441, out _out4442);
                        _10008_recursiveGen = _out4440;
                        _10009_recOwned = _out4441;
                        _10010_recIdents = _out4442;
                        RAST._IExpr _out4443;
                        DCOMPUTF16._IOwnership _out4444;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10008_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9965_nativeToType).dtor_value), _10009_recOwned, expectedOwnership, out _out4443, out _out4444);
                        r = _out4443;
                        resultingOwnership = _out4444;
                        readIdents = _10010_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4445;
                    DCOMPUTF16._IOwnership _out4446;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4447;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _9964_b), _9964_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4445, out _out4446, out _out4447);
                    r = _out4445;
                    resultingOwnership = _out4446;
                    readIdents = _out4447;
                  }
                }
              }
            } else if (_source577.is_Nullable) {
              DAST._IType _10011___mcc_h166 = _source577.dtor_Nullable_a0;
              {
                RAST._IExpr _10012_recursiveGen;
                DCOMPUTF16._IOwnership _10013_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10014_recIdents;
                RAST._IExpr _out4448;
                DCOMPUTF16._IOwnership _out4449;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4450;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4448, out _out4449, out _out4450);
                _10012_recursiveGen = _out4448;
                _10013_recOwned = _out4449;
                _10014_recIdents = _out4450;
                r = _10012_recursiveGen;
                if (object.Equals(_10013_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4451;
                DCOMPUTF16._IOwnership _out4452;
                DCOMPUTF16.COMP.FromOwnership(r, _10013_recOwned, expectedOwnership, out _out4451, out _out4452);
                r = _out4451;
                resultingOwnership = _out4452;
                readIdents = _10014_recIdents;
              }
            } else if (_source577.is_Tuple) {
              Dafny.ISequence<DAST._IType> _10015___mcc_h168 = _source577.dtor_Tuple_a0;
              {
                RAST._IType _10016_fromTpeGen;
                RAST._IType _out4453;
                _out4453 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10016_fromTpeGen = _out4453;
                RAST._IType _10017_toTpeGen;
                RAST._IType _out4454;
                _out4454 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10017_toTpeGen = _out4454;
                RAST._IExpr _10018_recursiveGen;
                DCOMPUTF16._IOwnership _10019_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10020_recIdents;
                RAST._IExpr _out4455;
                DCOMPUTF16._IOwnership _out4456;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4457;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4455, out _out4456, out _out4457);
                _10018_recursiveGen = _out4455;
                _10019_recOwned = _out4456;
                _10020_recIdents = _out4457;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10018_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10016_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10017_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4458;
                DCOMPUTF16._IOwnership _out4459;
                DCOMPUTF16.COMP.FromOwnership(r, _10019_recOwned, expectedOwnership, out _out4458, out _out4459);
                r = _out4458;
                resultingOwnership = _out4459;
                readIdents = _10020_recIdents;
              }
            } else if (_source577.is_Array) {
              DAST._IType _10021___mcc_h170 = _source577.dtor_element;
              BigInteger _10022___mcc_h171 = _source577.dtor_dims;
              {
                RAST._IType _10023_fromTpeGen;
                RAST._IType _out4460;
                _out4460 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10023_fromTpeGen = _out4460;
                RAST._IType _10024_toTpeGen;
                RAST._IType _out4461;
                _out4461 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10024_toTpeGen = _out4461;
                RAST._IExpr _10025_recursiveGen;
                DCOMPUTF16._IOwnership _10026_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10027_recIdents;
                RAST._IExpr _out4462;
                DCOMPUTF16._IOwnership _out4463;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4464;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4462, out _out4463, out _out4464);
                _10025_recursiveGen = _out4462;
                _10026_recOwned = _out4463;
                _10027_recIdents = _out4464;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10025_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10023_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10024_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4465;
                DCOMPUTF16._IOwnership _out4466;
                DCOMPUTF16.COMP.FromOwnership(r, _10026_recOwned, expectedOwnership, out _out4465, out _out4466);
                r = _out4465;
                resultingOwnership = _out4466;
                readIdents = _10027_recIdents;
              }
            } else if (_source577.is_Seq) {
              DAST._IType _10028___mcc_h174 = _source577.dtor_element;
              {
                RAST._IType _10029_fromTpeGen;
                RAST._IType _out4467;
                _out4467 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10029_fromTpeGen = _out4467;
                RAST._IType _10030_toTpeGen;
                RAST._IType _out4468;
                _out4468 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10030_toTpeGen = _out4468;
                RAST._IExpr _10031_recursiveGen;
                DCOMPUTF16._IOwnership _10032_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10033_recIdents;
                RAST._IExpr _out4469;
                DCOMPUTF16._IOwnership _out4470;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4471;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4469, out _out4470, out _out4471);
                _10031_recursiveGen = _out4469;
                _10032_recOwned = _out4470;
                _10033_recIdents = _out4471;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10031_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10029_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10030_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4472;
                DCOMPUTF16._IOwnership _out4473;
                DCOMPUTF16.COMP.FromOwnership(r, _10032_recOwned, expectedOwnership, out _out4472, out _out4473);
                r = _out4472;
                resultingOwnership = _out4473;
                readIdents = _10033_recIdents;
              }
            } else if (_source577.is_Set) {
              DAST._IType _10034___mcc_h176 = _source577.dtor_element;
              {
                RAST._IType _10035_fromTpeGen;
                RAST._IType _out4474;
                _out4474 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10035_fromTpeGen = _out4474;
                RAST._IType _10036_toTpeGen;
                RAST._IType _out4475;
                _out4475 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10036_toTpeGen = _out4475;
                RAST._IExpr _10037_recursiveGen;
                DCOMPUTF16._IOwnership _10038_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10039_recIdents;
                RAST._IExpr _out4476;
                DCOMPUTF16._IOwnership _out4477;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4478;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4476, out _out4477, out _out4478);
                _10037_recursiveGen = _out4476;
                _10038_recOwned = _out4477;
                _10039_recIdents = _out4478;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10037_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10035_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10036_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4479;
                DCOMPUTF16._IOwnership _out4480;
                DCOMPUTF16.COMP.FromOwnership(r, _10038_recOwned, expectedOwnership, out _out4479, out _out4480);
                r = _out4479;
                resultingOwnership = _out4480;
                readIdents = _10039_recIdents;
              }
            } else if (_source577.is_Multiset) {
              DAST._IType _10040___mcc_h178 = _source577.dtor_element;
              {
                RAST._IType _10041_fromTpeGen;
                RAST._IType _out4481;
                _out4481 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10041_fromTpeGen = _out4481;
                RAST._IType _10042_toTpeGen;
                RAST._IType _out4482;
                _out4482 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10042_toTpeGen = _out4482;
                RAST._IExpr _10043_recursiveGen;
                DCOMPUTF16._IOwnership _10044_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10045_recIdents;
                RAST._IExpr _out4483;
                DCOMPUTF16._IOwnership _out4484;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4485;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4483, out _out4484, out _out4485);
                _10043_recursiveGen = _out4483;
                _10044_recOwned = _out4484;
                _10045_recIdents = _out4485;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10043_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10041_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10042_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4486;
                DCOMPUTF16._IOwnership _out4487;
                DCOMPUTF16.COMP.FromOwnership(r, _10044_recOwned, expectedOwnership, out _out4486, out _out4487);
                r = _out4486;
                resultingOwnership = _out4487;
                readIdents = _10045_recIdents;
              }
            } else if (_source577.is_Map) {
              DAST._IType _10046___mcc_h180 = _source577.dtor_key;
              DAST._IType _10047___mcc_h181 = _source577.dtor_value;
              {
                RAST._IType _10048_fromTpeGen;
                RAST._IType _out4488;
                _out4488 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10048_fromTpeGen = _out4488;
                RAST._IType _10049_toTpeGen;
                RAST._IType _out4489;
                _out4489 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10049_toTpeGen = _out4489;
                RAST._IExpr _10050_recursiveGen;
                DCOMPUTF16._IOwnership _10051_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10052_recIdents;
                RAST._IExpr _out4490;
                DCOMPUTF16._IOwnership _out4491;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4492;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4490, out _out4491, out _out4492);
                _10050_recursiveGen = _out4490;
                _10051_recOwned = _out4491;
                _10052_recIdents = _out4492;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10050_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10048_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10049_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4493;
                DCOMPUTF16._IOwnership _out4494;
                DCOMPUTF16.COMP.FromOwnership(r, _10051_recOwned, expectedOwnership, out _out4493, out _out4494);
                r = _out4493;
                resultingOwnership = _out4494;
                readIdents = _10052_recIdents;
              }
            } else if (_source577.is_SetBuilder) {
              DAST._IType _10053___mcc_h184 = _source577.dtor_element;
              {
                RAST._IType _10054_fromTpeGen;
                RAST._IType _out4495;
                _out4495 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10054_fromTpeGen = _out4495;
                RAST._IType _10055_toTpeGen;
                RAST._IType _out4496;
                _out4496 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10055_toTpeGen = _out4496;
                RAST._IExpr _10056_recursiveGen;
                DCOMPUTF16._IOwnership _10057_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10058_recIdents;
                RAST._IExpr _out4497;
                DCOMPUTF16._IOwnership _out4498;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4499;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4497, out _out4498, out _out4499);
                _10056_recursiveGen = _out4497;
                _10057_recOwned = _out4498;
                _10058_recIdents = _out4499;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10056_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10054_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10055_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4500;
                DCOMPUTF16._IOwnership _out4501;
                DCOMPUTF16.COMP.FromOwnership(r, _10057_recOwned, expectedOwnership, out _out4500, out _out4501);
                r = _out4500;
                resultingOwnership = _out4501;
                readIdents = _10058_recIdents;
              }
            } else if (_source577.is_MapBuilder) {
              DAST._IType _10059___mcc_h186 = _source577.dtor_key;
              DAST._IType _10060___mcc_h187 = _source577.dtor_value;
              {
                RAST._IType _10061_fromTpeGen;
                RAST._IType _out4502;
                _out4502 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10061_fromTpeGen = _out4502;
                RAST._IType _10062_toTpeGen;
                RAST._IType _out4503;
                _out4503 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10062_toTpeGen = _out4503;
                RAST._IExpr _10063_recursiveGen;
                DCOMPUTF16._IOwnership _10064_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10065_recIdents;
                RAST._IExpr _out4504;
                DCOMPUTF16._IOwnership _out4505;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4506;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4504, out _out4505, out _out4506);
                _10063_recursiveGen = _out4504;
                _10064_recOwned = _out4505;
                _10065_recIdents = _out4506;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10063_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10061_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10062_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4507;
                DCOMPUTF16._IOwnership _out4508;
                DCOMPUTF16.COMP.FromOwnership(r, _10064_recOwned, expectedOwnership, out _out4507, out _out4508);
                r = _out4507;
                resultingOwnership = _out4508;
                readIdents = _10065_recIdents;
              }
            } else if (_source577.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10066___mcc_h190 = _source577.dtor_args;
              DAST._IType _10067___mcc_h191 = _source577.dtor_result;
              {
                RAST._IType _10068_fromTpeGen;
                RAST._IType _out4509;
                _out4509 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10068_fromTpeGen = _out4509;
                RAST._IType _10069_toTpeGen;
                RAST._IType _out4510;
                _out4510 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10069_toTpeGen = _out4510;
                RAST._IExpr _10070_recursiveGen;
                DCOMPUTF16._IOwnership _10071_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10072_recIdents;
                RAST._IExpr _out4511;
                DCOMPUTF16._IOwnership _out4512;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4513;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4511, out _out4512, out _out4513);
                _10070_recursiveGen = _out4511;
                _10071_recOwned = _out4512;
                _10072_recIdents = _out4513;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10070_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10068_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10069_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4514;
                DCOMPUTF16._IOwnership _out4515;
                DCOMPUTF16.COMP.FromOwnership(r, _10071_recOwned, expectedOwnership, out _out4514, out _out4515);
                r = _out4514;
                resultingOwnership = _out4515;
                readIdents = _10072_recIdents;
              }
            } else if (_source577.is_Primitive) {
              DAST._IPrimitive _10073___mcc_h194 = _source577.dtor_Primitive_a0;
              {
                RAST._IType _10074_fromTpeGen;
                RAST._IType _out4516;
                _out4516 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10074_fromTpeGen = _out4516;
                RAST._IType _10075_toTpeGen;
                RAST._IType _out4517;
                _out4517 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10075_toTpeGen = _out4517;
                RAST._IExpr _10076_recursiveGen;
                DCOMPUTF16._IOwnership _10077_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10078_recIdents;
                RAST._IExpr _out4518;
                DCOMPUTF16._IOwnership _out4519;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4520;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4518, out _out4519, out _out4520);
                _10076_recursiveGen = _out4518;
                _10077_recOwned = _out4519;
                _10078_recIdents = _out4520;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10076_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10074_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10075_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4521;
                DCOMPUTF16._IOwnership _out4522;
                DCOMPUTF16.COMP.FromOwnership(r, _10077_recOwned, expectedOwnership, out _out4521, out _out4522);
                r = _out4521;
                resultingOwnership = _out4522;
                readIdents = _10078_recIdents;
              }
            } else if (_source577.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10079___mcc_h196 = _source577.dtor_Passthrough_a0;
              {
                RAST._IType _10080_fromTpeGen;
                RAST._IType _out4523;
                _out4523 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10080_fromTpeGen = _out4523;
                RAST._IType _10081_toTpeGen;
                RAST._IType _out4524;
                _out4524 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10081_toTpeGen = _out4524;
                RAST._IExpr _10082_recursiveGen;
                DCOMPUTF16._IOwnership _10083_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10084_recIdents;
                RAST._IExpr _out4525;
                DCOMPUTF16._IOwnership _out4526;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4527;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4525, out _out4526, out _out4527);
                _10082_recursiveGen = _out4525;
                _10083_recOwned = _out4526;
                _10084_recIdents = _out4527;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10082_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10080_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10081_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4528;
                DCOMPUTF16._IOwnership _out4529;
                DCOMPUTF16.COMP.FromOwnership(r, _10083_recOwned, expectedOwnership, out _out4528, out _out4529);
                r = _out4528;
                resultingOwnership = _out4529;
                readIdents = _10084_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10085___mcc_h198 = _source577.dtor_TypeArg_a0;
              {
                RAST._IType _10086_fromTpeGen;
                RAST._IType _out4530;
                _out4530 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10086_fromTpeGen = _out4530;
                RAST._IType _10087_toTpeGen;
                RAST._IType _out4531;
                _out4531 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10087_toTpeGen = _out4531;
                RAST._IExpr _10088_recursiveGen;
                DCOMPUTF16._IOwnership _10089_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10090_recIdents;
                RAST._IExpr _out4532;
                DCOMPUTF16._IOwnership _out4533;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4534;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4532, out _out4533, out _out4534);
                _10088_recursiveGen = _out4532;
                _10089_recOwned = _out4533;
                _10090_recIdents = _out4534;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10088_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10086_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10087_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4535;
                DCOMPUTF16._IOwnership _out4536;
                DCOMPUTF16.COMP.FromOwnership(r, _10089_recOwned, expectedOwnership, out _out4535, out _out4536);
                r = _out4535;
                resultingOwnership = _out4536;
                readIdents = _10090_recIdents;
              }
            }
          } else {
            DAST._IType _10091___mcc_h200 = _source566.dtor_baseType;
            DAST._INewtypeRange _10092___mcc_h201 = _source566.dtor_range;
            bool _10093___mcc_h202 = _source566.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _10094___mcc_h203 = _source566.dtor_attributes;
            DAST._IType _source582 = _9615___mcc_h1;
            if (_source582.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10095___mcc_h216 = _source582.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10096___mcc_h217 = _source582.dtor_typeArgs;
              DAST._IResolvedType _10097___mcc_h218 = _source582.dtor_resolved;
              DAST._IResolvedType _source583 = _10097___mcc_h218;
              if (_source583.is_AllocatedDatatype) {
                DAST._IDatatypeType _10098___mcc_h225 = _source583.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _10099_attributes = _10094___mcc_h203;
                bool _10100_erase = _10093___mcc_h202;
                DAST._INewtypeRange _10101_range = _10092___mcc_h201;
                DAST._IType _10102_b = _10091___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _10103_nativeFromType;
                  _10103_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10102_b, _10101_range);
                  if (object.Equals(_10102_b, _9610_toTpe)) {
                    RAST._IExpr _10104_recursiveGen;
                    DCOMPUTF16._IOwnership _10105_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10106_recIdents;
                    RAST._IExpr _out4537;
                    DCOMPUTF16._IOwnership _out4538;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4539;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4537, out _out4538, out _out4539);
                    _10104_recursiveGen = _out4537;
                    _10105_recOwned = _out4538;
                    _10106_recIdents = _out4539;
                    readIdents = _10106_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source584 = _10103_nativeFromType;
                    if (_source584.is_None) {
                      if (_10100_erase) {
                        r = _10104_recursiveGen;
                      } else {
                        r = (_10104_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4540;
                      DCOMPUTF16._IOwnership _out4541;
                      DCOMPUTF16.COMP.FromOwnership(r, _10105_recOwned, expectedOwnership, out _out4540, out _out4541);
                      r = _out4540;
                      resultingOwnership = _out4541;
                    } else {
                      RAST._IType _10107___mcc_h1519 = _source584.dtor_value;
                      RAST._IType _10108_v = _10107___mcc_h1519;
                      RAST._IType _10109_toTpeRust;
                      RAST._IType _out4542;
                      _out4542 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                      _10109_toTpeRust = _out4542;
                      r = (((_10104_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10109_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4543;
                      DCOMPUTF16._IOwnership _out4544;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4543, out _out4544);
                      r = _out4543;
                      resultingOwnership = _out4544;
                    }
                  } else {
                    if ((_10103_nativeFromType).is_Some) {
                      if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10110_recursiveGen;
                        DCOMPUTF16._IOwnership _10111_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10112_recIdents;
                        RAST._IExpr _out4545;
                        DCOMPUTF16._IOwnership _out4546;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4547;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4545, out _out4546, out _out4547);
                        _10110_recursiveGen = _out4545;
                        _10111_recOwned = _out4546;
                        _10112_recIdents = _out4547;
                        RAST._IExpr _out4548;
                        DCOMPUTF16._IOwnership _out4549;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10110_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10111_recOwned, expectedOwnership, out _out4548, out _out4549);
                        r = _out4548;
                        resultingOwnership = _out4549;
                        readIdents = _10112_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4550;
                    DCOMPUTF16._IOwnership _out4551;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4552;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10102_b), _10102_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4550, out _out4551, out _out4552);
                    r = _out4550;
                    resultingOwnership = _out4551;
                    readIdents = _out4552;
                  }
                }
              } else if (_source583.is_Datatype) {
                DAST._IDatatypeType _10113___mcc_h228 = _source583.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _10114_attributes = _10094___mcc_h203;
                bool _10115_erase = _10093___mcc_h202;
                DAST._INewtypeRange _10116_range = _10092___mcc_h201;
                DAST._IType _10117_b = _10091___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _10118_nativeFromType;
                  _10118_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10117_b, _10116_range);
                  if (object.Equals(_10117_b, _9610_toTpe)) {
                    RAST._IExpr _10119_recursiveGen;
                    DCOMPUTF16._IOwnership _10120_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10121_recIdents;
                    RAST._IExpr _out4553;
                    DCOMPUTF16._IOwnership _out4554;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4555;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4553, out _out4554, out _out4555);
                    _10119_recursiveGen = _out4553;
                    _10120_recOwned = _out4554;
                    _10121_recIdents = _out4555;
                    readIdents = _10121_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source585 = _10118_nativeFromType;
                    if (_source585.is_None) {
                      if (_10115_erase) {
                        r = _10119_recursiveGen;
                      } else {
                        r = (_10119_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4556;
                      DCOMPUTF16._IOwnership _out4557;
                      DCOMPUTF16.COMP.FromOwnership(r, _10120_recOwned, expectedOwnership, out _out4556, out _out4557);
                      r = _out4556;
                      resultingOwnership = _out4557;
                    } else {
                      RAST._IType _10122___mcc_h1520 = _source585.dtor_value;
                      RAST._IType _10123_v = _10122___mcc_h1520;
                      RAST._IType _10124_toTpeRust;
                      RAST._IType _out4558;
                      _out4558 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                      _10124_toTpeRust = _out4558;
                      r = (((_10119_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10124_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4559;
                      DCOMPUTF16._IOwnership _out4560;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4559, out _out4560);
                      r = _out4559;
                      resultingOwnership = _out4560;
                    }
                  } else {
                    if ((_10118_nativeFromType).is_Some) {
                      if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10125_recursiveGen;
                        DCOMPUTF16._IOwnership _10126_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10127_recIdents;
                        RAST._IExpr _out4561;
                        DCOMPUTF16._IOwnership _out4562;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4563;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4561, out _out4562, out _out4563);
                        _10125_recursiveGen = _out4561;
                        _10126_recOwned = _out4562;
                        _10127_recIdents = _out4563;
                        RAST._IExpr _out4564;
                        DCOMPUTF16._IOwnership _out4565;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10125_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10126_recOwned, expectedOwnership, out _out4564, out _out4565);
                        r = _out4564;
                        resultingOwnership = _out4565;
                        readIdents = _10127_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4566;
                    DCOMPUTF16._IOwnership _out4567;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4568;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10117_b), _10117_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4566, out _out4567, out _out4568);
                    r = _out4566;
                    resultingOwnership = _out4567;
                    readIdents = _out4568;
                  }
                }
              } else if (_source583.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10128___mcc_h231 = _source583.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _10129___mcc_h232 = _source583.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10130_attributes = _10094___mcc_h203;
                bool _10131_erase = _10093___mcc_h202;
                DAST._INewtypeRange _10132_range = _10092___mcc_h201;
                DAST._IType _10133_b = _10091___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _10134_nativeFromType;
                  _10134_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10133_b, _10132_range);
                  if (object.Equals(_10133_b, _9610_toTpe)) {
                    RAST._IExpr _10135_recursiveGen;
                    DCOMPUTF16._IOwnership _10136_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10137_recIdents;
                    RAST._IExpr _out4569;
                    DCOMPUTF16._IOwnership _out4570;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4571;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4569, out _out4570, out _out4571);
                    _10135_recursiveGen = _out4569;
                    _10136_recOwned = _out4570;
                    _10137_recIdents = _out4571;
                    readIdents = _10137_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source586 = _10134_nativeFromType;
                    if (_source586.is_None) {
                      if (_10131_erase) {
                        r = _10135_recursiveGen;
                      } else {
                        r = (_10135_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4572;
                      DCOMPUTF16._IOwnership _out4573;
                      DCOMPUTF16.COMP.FromOwnership(r, _10136_recOwned, expectedOwnership, out _out4572, out _out4573);
                      r = _out4572;
                      resultingOwnership = _out4573;
                    } else {
                      RAST._IType _10138___mcc_h1521 = _source586.dtor_value;
                      RAST._IType _10139_v = _10138___mcc_h1521;
                      RAST._IType _10140_toTpeRust;
                      RAST._IType _out4574;
                      _out4574 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                      _10140_toTpeRust = _out4574;
                      r = (((_10135_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10140_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4575;
                      DCOMPUTF16._IOwnership _out4576;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4575, out _out4576);
                      r = _out4575;
                      resultingOwnership = _out4576;
                    }
                  } else {
                    if ((_10134_nativeFromType).is_Some) {
                      if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10141_recursiveGen;
                        DCOMPUTF16._IOwnership _10142_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10143_recIdents;
                        RAST._IExpr _out4577;
                        DCOMPUTF16._IOwnership _out4578;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4579;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4577, out _out4578, out _out4579);
                        _10141_recursiveGen = _out4577;
                        _10142_recOwned = _out4578;
                        _10143_recIdents = _out4579;
                        RAST._IExpr _out4580;
                        DCOMPUTF16._IOwnership _out4581;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10141_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10142_recOwned, expectedOwnership, out _out4580, out _out4581);
                        r = _out4580;
                        resultingOwnership = _out4581;
                        readIdents = _10143_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4582;
                    DCOMPUTF16._IOwnership _out4583;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4584;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10133_b), _10133_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4582, out _out4583, out _out4584);
                    r = _out4582;
                    resultingOwnership = _out4583;
                    readIdents = _out4584;
                  }
                }
              } else {
                DAST._IType _10144___mcc_h237 = _source583.dtor_baseType;
                DAST._INewtypeRange _10145___mcc_h238 = _source583.dtor_range;
                bool _10146___mcc_h239 = _source583.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _10147___mcc_h240 = _source583.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _10148_attributes = _10147___mcc_h240;
                bool _10149_erase = _10146___mcc_h239;
                DAST._INewtypeRange _10150_range = _10145___mcc_h238;
                DAST._IType _10151_b = _10144___mcc_h237;
                {
                  Std.Wrappers._IOption<RAST._IType> _10152_nativeToType;
                  _10152_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10151_b, _10150_range);
                  if (object.Equals(_9609_fromTpe, _10151_b)) {
                    RAST._IExpr _10153_recursiveGen;
                    DCOMPUTF16._IOwnership _10154_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10155_recIdents;
                    RAST._IExpr _out4585;
                    DCOMPUTF16._IOwnership _out4586;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4587;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4585, out _out4586, out _out4587);
                    _10153_recursiveGen = _out4585;
                    _10154_recOwned = _out4586;
                    _10155_recIdents = _out4587;
                    readIdents = _10155_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source587 = _10152_nativeToType;
                    if (_source587.is_None) {
                      if (_10149_erase) {
                        r = _10153_recursiveGen;
                      } else {
                        RAST._IType _10156_rhsType;
                        RAST._IType _out4588;
                        _out4588 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _10156_rhsType = _out4588;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10156_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10153_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4589;
                      DCOMPUTF16._IOwnership _out4590;
                      DCOMPUTF16.COMP.FromOwnership(r, _10154_recOwned, expectedOwnership, out _out4589, out _out4590);
                      r = _out4589;
                      resultingOwnership = _out4590;
                    } else {
                      RAST._IType _10157___mcc_h1522 = _source587.dtor_value;
                      RAST._IType _10158_v = _10157___mcc_h1522;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10153_recursiveGen, RAST.Expr.create_ExprFromType(_10158_v)));
                      RAST._IExpr _out4591;
                      DCOMPUTF16._IOwnership _out4592;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4591, out _out4592);
                      r = _out4591;
                      resultingOwnership = _out4592;
                    }
                  } else {
                    if ((_10152_nativeToType).is_Some) {
                      DAST._IType _source588 = _9609_fromTpe;
                      if (_source588.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10159___mcc_h1523 = _source588.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _10160___mcc_h1524 = _source588.dtor_typeArgs;
                        DAST._IResolvedType _10161___mcc_h1525 = _source588.dtor_resolved;
                        DAST._IResolvedType _source589 = _10161___mcc_h1525;
                        if (_source589.is_AllocatedDatatype) {
                          DAST._IDatatypeType _10162___mcc_h1529 = _source589.dtor_datatypeType;
                        } else if (_source589.is_Datatype) {
                          DAST._IDatatypeType _10163___mcc_h1531 = _source589.dtor_datatypeType;
                        } else if (_source589.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10164___mcc_h1533 = _source589.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _10165___mcc_h1534 = _source589.dtor_attributes;
                        } else {
                          DAST._IType _10166___mcc_h1537 = _source589.dtor_baseType;
                          DAST._INewtypeRange _10167___mcc_h1538 = _source589.dtor_range;
                          bool _10168___mcc_h1539 = _source589.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _10169___mcc_h1540 = _source589.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _10170_attributes0 = _10169___mcc_h1540;
                          bool _10171_erase0 = _10168___mcc_h1539;
                          DAST._INewtypeRange _10172_range0 = _10167___mcc_h1538;
                          DAST._IType _10173_b0 = _10166___mcc_h1537;
                          {
                            Std.Wrappers._IOption<RAST._IType> _10174_nativeFromType;
                            _10174_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10173_b0, _10172_range0);
                            if ((_10174_nativeFromType).is_Some) {
                              RAST._IExpr _10175_recursiveGen;
                              DCOMPUTF16._IOwnership _10176_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10177_recIdents;
                              RAST._IExpr _out4593;
                              DCOMPUTF16._IOwnership _out4594;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4595;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4593, out _out4594, out _out4595);
                              _10175_recursiveGen = _out4593;
                              _10176_recOwned = _out4594;
                              _10177_recIdents = _out4595;
                              RAST._IExpr _out4596;
                              DCOMPUTF16._IOwnership _out4597;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10175_recursiveGen, (_10152_nativeToType).dtor_value), _10176_recOwned, expectedOwnership, out _out4596, out _out4597);
                              r = _out4596;
                              resultingOwnership = _out4597;
                              readIdents = _10177_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source588.is_Nullable) {
                        DAST._IType _10178___mcc_h1545 = _source588.dtor_Nullable_a0;
                      } else if (_source588.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _10179___mcc_h1547 = _source588.dtor_Tuple_a0;
                      } else if (_source588.is_Array) {
                        DAST._IType _10180___mcc_h1549 = _source588.dtor_element;
                        BigInteger _10181___mcc_h1550 = _source588.dtor_dims;
                      } else if (_source588.is_Seq) {
                        DAST._IType _10182___mcc_h1553 = _source588.dtor_element;
                      } else if (_source588.is_Set) {
                        DAST._IType _10183___mcc_h1555 = _source588.dtor_element;
                      } else if (_source588.is_Multiset) {
                        DAST._IType _10184___mcc_h1557 = _source588.dtor_element;
                      } else if (_source588.is_Map) {
                        DAST._IType _10185___mcc_h1559 = _source588.dtor_key;
                        DAST._IType _10186___mcc_h1560 = _source588.dtor_value;
                      } else if (_source588.is_SetBuilder) {
                        DAST._IType _10187___mcc_h1563 = _source588.dtor_element;
                      } else if (_source588.is_MapBuilder) {
                        DAST._IType _10188___mcc_h1565 = _source588.dtor_key;
                        DAST._IType _10189___mcc_h1566 = _source588.dtor_value;
                      } else if (_source588.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _10190___mcc_h1569 = _source588.dtor_args;
                        DAST._IType _10191___mcc_h1570 = _source588.dtor_result;
                      } else if (_source588.is_Primitive) {
                        DAST._IPrimitive _10192___mcc_h1573 = _source588.dtor_Primitive_a0;
                      } else if (_source588.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _10193___mcc_h1575 = _source588.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _10194___mcc_h1577 = _source588.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _10195_recursiveGen;
                        DCOMPUTF16._IOwnership _10196_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10197_recIdents;
                        RAST._IExpr _out4598;
                        DCOMPUTF16._IOwnership _out4599;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4600;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4598, out _out4599, out _out4600);
                        _10195_recursiveGen = _out4598;
                        _10196_recOwned = _out4599;
                        _10197_recIdents = _out4600;
                        RAST._IExpr _out4601;
                        DCOMPUTF16._IOwnership _out4602;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10195_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10152_nativeToType).dtor_value), _10196_recOwned, expectedOwnership, out _out4601, out _out4602);
                        r = _out4601;
                        resultingOwnership = _out4602;
                        readIdents = _10197_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4603;
                    DCOMPUTF16._IOwnership _out4604;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4605;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10151_b), _10151_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4603, out _out4604, out _out4605);
                    r = _out4603;
                    resultingOwnership = _out4604;
                    readIdents = _out4605;
                  }
                }
              }
            } else if (_source582.is_Nullable) {
              DAST._IType _10198___mcc_h249 = _source582.dtor_Nullable_a0;
              {
                RAST._IExpr _10199_recursiveGen;
                DCOMPUTF16._IOwnership _10200_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10201_recIdents;
                RAST._IExpr _out4606;
                DCOMPUTF16._IOwnership _out4607;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4608;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4606, out _out4607, out _out4608);
                _10199_recursiveGen = _out4606;
                _10200_recOwned = _out4607;
                _10201_recIdents = _out4608;
                r = _10199_recursiveGen;
                if (object.Equals(_10200_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4609;
                DCOMPUTF16._IOwnership _out4610;
                DCOMPUTF16.COMP.FromOwnership(r, _10200_recOwned, expectedOwnership, out _out4609, out _out4610);
                r = _out4609;
                resultingOwnership = _out4610;
                readIdents = _10201_recIdents;
              }
            } else if (_source582.is_Tuple) {
              Dafny.ISequence<DAST._IType> _10202___mcc_h252 = _source582.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _10203_attributes = _10094___mcc_h203;
              bool _10204_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10205_range = _10092___mcc_h201;
              DAST._IType _10206_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10207_nativeFromType;
                _10207_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10206_b, _10205_range);
                if (object.Equals(_10206_b, _9610_toTpe)) {
                  RAST._IExpr _10208_recursiveGen;
                  DCOMPUTF16._IOwnership _10209_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10210_recIdents;
                  RAST._IExpr _out4611;
                  DCOMPUTF16._IOwnership _out4612;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4613;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4611, out _out4612, out _out4613);
                  _10208_recursiveGen = _out4611;
                  _10209_recOwned = _out4612;
                  _10210_recIdents = _out4613;
                  readIdents = _10210_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source590 = _10207_nativeFromType;
                  if (_source590.is_None) {
                    if (_10204_erase) {
                      r = _10208_recursiveGen;
                    } else {
                      r = (_10208_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4614;
                    DCOMPUTF16._IOwnership _out4615;
                    DCOMPUTF16.COMP.FromOwnership(r, _10209_recOwned, expectedOwnership, out _out4614, out _out4615);
                    r = _out4614;
                    resultingOwnership = _out4615;
                  } else {
                    RAST._IType _10211___mcc_h1579 = _source590.dtor_value;
                    RAST._IType _10212_v = _10211___mcc_h1579;
                    RAST._IType _10213_toTpeRust;
                    RAST._IType _out4616;
                    _out4616 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10213_toTpeRust = _out4616;
                    r = (((_10208_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10213_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4617;
                    DCOMPUTF16._IOwnership _out4618;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4617, out _out4618);
                    r = _out4617;
                    resultingOwnership = _out4618;
                  }
                } else {
                  if ((_10207_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10214_recursiveGen;
                      DCOMPUTF16._IOwnership _10215_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10216_recIdents;
                      RAST._IExpr _out4619;
                      DCOMPUTF16._IOwnership _out4620;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4621;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4619, out _out4620, out _out4621);
                      _10214_recursiveGen = _out4619;
                      _10215_recOwned = _out4620;
                      _10216_recIdents = _out4621;
                      RAST._IExpr _out4622;
                      DCOMPUTF16._IOwnership _out4623;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10214_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10215_recOwned, expectedOwnership, out _out4622, out _out4623);
                      r = _out4622;
                      resultingOwnership = _out4623;
                      readIdents = _10216_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4624;
                  DCOMPUTF16._IOwnership _out4625;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4626;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10206_b), _10206_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4624, out _out4625, out _out4626);
                  r = _out4624;
                  resultingOwnership = _out4625;
                  readIdents = _out4626;
                }
              }
            } else if (_source582.is_Array) {
              DAST._IType _10217___mcc_h255 = _source582.dtor_element;
              BigInteger _10218___mcc_h256 = _source582.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _10219_attributes = _10094___mcc_h203;
              bool _10220_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10221_range = _10092___mcc_h201;
              DAST._IType _10222_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10223_nativeFromType;
                _10223_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10222_b, _10221_range);
                if (object.Equals(_10222_b, _9610_toTpe)) {
                  RAST._IExpr _10224_recursiveGen;
                  DCOMPUTF16._IOwnership _10225_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10226_recIdents;
                  RAST._IExpr _out4627;
                  DCOMPUTF16._IOwnership _out4628;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4629;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4627, out _out4628, out _out4629);
                  _10224_recursiveGen = _out4627;
                  _10225_recOwned = _out4628;
                  _10226_recIdents = _out4629;
                  readIdents = _10226_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source591 = _10223_nativeFromType;
                  if (_source591.is_None) {
                    if (_10220_erase) {
                      r = _10224_recursiveGen;
                    } else {
                      r = (_10224_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4630;
                    DCOMPUTF16._IOwnership _out4631;
                    DCOMPUTF16.COMP.FromOwnership(r, _10225_recOwned, expectedOwnership, out _out4630, out _out4631);
                    r = _out4630;
                    resultingOwnership = _out4631;
                  } else {
                    RAST._IType _10227___mcc_h1580 = _source591.dtor_value;
                    RAST._IType _10228_v = _10227___mcc_h1580;
                    RAST._IType _10229_toTpeRust;
                    RAST._IType _out4632;
                    _out4632 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10229_toTpeRust = _out4632;
                    r = (((_10224_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10229_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4633;
                    DCOMPUTF16._IOwnership _out4634;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4633, out _out4634);
                    r = _out4633;
                    resultingOwnership = _out4634;
                  }
                } else {
                  if ((_10223_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10230_recursiveGen;
                      DCOMPUTF16._IOwnership _10231_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10232_recIdents;
                      RAST._IExpr _out4635;
                      DCOMPUTF16._IOwnership _out4636;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4637;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4635, out _out4636, out _out4637);
                      _10230_recursiveGen = _out4635;
                      _10231_recOwned = _out4636;
                      _10232_recIdents = _out4637;
                      RAST._IExpr _out4638;
                      DCOMPUTF16._IOwnership _out4639;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10230_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10231_recOwned, expectedOwnership, out _out4638, out _out4639);
                      r = _out4638;
                      resultingOwnership = _out4639;
                      readIdents = _10232_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4640;
                  DCOMPUTF16._IOwnership _out4641;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4642;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10222_b), _10222_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4640, out _out4641, out _out4642);
                  r = _out4640;
                  resultingOwnership = _out4641;
                  readIdents = _out4642;
                }
              }
            } else if (_source582.is_Seq) {
              DAST._IType _10233___mcc_h261 = _source582.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10234_attributes = _10094___mcc_h203;
              bool _10235_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10236_range = _10092___mcc_h201;
              DAST._IType _10237_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10238_nativeFromType;
                _10238_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10237_b, _10236_range);
                if (object.Equals(_10237_b, _9610_toTpe)) {
                  RAST._IExpr _10239_recursiveGen;
                  DCOMPUTF16._IOwnership _10240_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10241_recIdents;
                  RAST._IExpr _out4643;
                  DCOMPUTF16._IOwnership _out4644;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4645;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4643, out _out4644, out _out4645);
                  _10239_recursiveGen = _out4643;
                  _10240_recOwned = _out4644;
                  _10241_recIdents = _out4645;
                  readIdents = _10241_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source592 = _10238_nativeFromType;
                  if (_source592.is_None) {
                    if (_10235_erase) {
                      r = _10239_recursiveGen;
                    } else {
                      r = (_10239_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4646;
                    DCOMPUTF16._IOwnership _out4647;
                    DCOMPUTF16.COMP.FromOwnership(r, _10240_recOwned, expectedOwnership, out _out4646, out _out4647);
                    r = _out4646;
                    resultingOwnership = _out4647;
                  } else {
                    RAST._IType _10242___mcc_h1581 = _source592.dtor_value;
                    RAST._IType _10243_v = _10242___mcc_h1581;
                    RAST._IType _10244_toTpeRust;
                    RAST._IType _out4648;
                    _out4648 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10244_toTpeRust = _out4648;
                    r = (((_10239_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10244_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4649;
                    DCOMPUTF16._IOwnership _out4650;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4649, out _out4650);
                    r = _out4649;
                    resultingOwnership = _out4650;
                  }
                } else {
                  if ((_10238_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10245_recursiveGen;
                      DCOMPUTF16._IOwnership _10246_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10247_recIdents;
                      RAST._IExpr _out4651;
                      DCOMPUTF16._IOwnership _out4652;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4653;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4651, out _out4652, out _out4653);
                      _10245_recursiveGen = _out4651;
                      _10246_recOwned = _out4652;
                      _10247_recIdents = _out4653;
                      RAST._IExpr _out4654;
                      DCOMPUTF16._IOwnership _out4655;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10245_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10246_recOwned, expectedOwnership, out _out4654, out _out4655);
                      r = _out4654;
                      resultingOwnership = _out4655;
                      readIdents = _10247_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4656;
                  DCOMPUTF16._IOwnership _out4657;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4658;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10237_b), _10237_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4656, out _out4657, out _out4658);
                  r = _out4656;
                  resultingOwnership = _out4657;
                  readIdents = _out4658;
                }
              }
            } else if (_source582.is_Set) {
              DAST._IType _10248___mcc_h264 = _source582.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10249_attributes = _10094___mcc_h203;
              bool _10250_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10251_range = _10092___mcc_h201;
              DAST._IType _10252_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10253_nativeFromType;
                _10253_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10252_b, _10251_range);
                if (object.Equals(_10252_b, _9610_toTpe)) {
                  RAST._IExpr _10254_recursiveGen;
                  DCOMPUTF16._IOwnership _10255_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10256_recIdents;
                  RAST._IExpr _out4659;
                  DCOMPUTF16._IOwnership _out4660;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4661;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4659, out _out4660, out _out4661);
                  _10254_recursiveGen = _out4659;
                  _10255_recOwned = _out4660;
                  _10256_recIdents = _out4661;
                  readIdents = _10256_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source593 = _10253_nativeFromType;
                  if (_source593.is_None) {
                    if (_10250_erase) {
                      r = _10254_recursiveGen;
                    } else {
                      r = (_10254_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4662;
                    DCOMPUTF16._IOwnership _out4663;
                    DCOMPUTF16.COMP.FromOwnership(r, _10255_recOwned, expectedOwnership, out _out4662, out _out4663);
                    r = _out4662;
                    resultingOwnership = _out4663;
                  } else {
                    RAST._IType _10257___mcc_h1582 = _source593.dtor_value;
                    RAST._IType _10258_v = _10257___mcc_h1582;
                    RAST._IType _10259_toTpeRust;
                    RAST._IType _out4664;
                    _out4664 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10259_toTpeRust = _out4664;
                    r = (((_10254_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10259_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4665;
                    DCOMPUTF16._IOwnership _out4666;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4665, out _out4666);
                    r = _out4665;
                    resultingOwnership = _out4666;
                  }
                } else {
                  if ((_10253_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10260_recursiveGen;
                      DCOMPUTF16._IOwnership _10261_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10262_recIdents;
                      RAST._IExpr _out4667;
                      DCOMPUTF16._IOwnership _out4668;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4669;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4667, out _out4668, out _out4669);
                      _10260_recursiveGen = _out4667;
                      _10261_recOwned = _out4668;
                      _10262_recIdents = _out4669;
                      RAST._IExpr _out4670;
                      DCOMPUTF16._IOwnership _out4671;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10260_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10261_recOwned, expectedOwnership, out _out4670, out _out4671);
                      r = _out4670;
                      resultingOwnership = _out4671;
                      readIdents = _10262_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4672;
                  DCOMPUTF16._IOwnership _out4673;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4674;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10252_b), _10252_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4672, out _out4673, out _out4674);
                  r = _out4672;
                  resultingOwnership = _out4673;
                  readIdents = _out4674;
                }
              }
            } else if (_source582.is_Multiset) {
              DAST._IType _10263___mcc_h267 = _source582.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10264_attributes = _10094___mcc_h203;
              bool _10265_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10266_range = _10092___mcc_h201;
              DAST._IType _10267_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10268_nativeFromType;
                _10268_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10267_b, _10266_range);
                if (object.Equals(_10267_b, _9610_toTpe)) {
                  RAST._IExpr _10269_recursiveGen;
                  DCOMPUTF16._IOwnership _10270_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10271_recIdents;
                  RAST._IExpr _out4675;
                  DCOMPUTF16._IOwnership _out4676;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4677;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4675, out _out4676, out _out4677);
                  _10269_recursiveGen = _out4675;
                  _10270_recOwned = _out4676;
                  _10271_recIdents = _out4677;
                  readIdents = _10271_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source594 = _10268_nativeFromType;
                  if (_source594.is_None) {
                    if (_10265_erase) {
                      r = _10269_recursiveGen;
                    } else {
                      r = (_10269_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4678;
                    DCOMPUTF16._IOwnership _out4679;
                    DCOMPUTF16.COMP.FromOwnership(r, _10270_recOwned, expectedOwnership, out _out4678, out _out4679);
                    r = _out4678;
                    resultingOwnership = _out4679;
                  } else {
                    RAST._IType _10272___mcc_h1583 = _source594.dtor_value;
                    RAST._IType _10273_v = _10272___mcc_h1583;
                    RAST._IType _10274_toTpeRust;
                    RAST._IType _out4680;
                    _out4680 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10274_toTpeRust = _out4680;
                    r = (((_10269_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10274_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4681;
                    DCOMPUTF16._IOwnership _out4682;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4681, out _out4682);
                    r = _out4681;
                    resultingOwnership = _out4682;
                  }
                } else {
                  if ((_10268_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10275_recursiveGen;
                      DCOMPUTF16._IOwnership _10276_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10277_recIdents;
                      RAST._IExpr _out4683;
                      DCOMPUTF16._IOwnership _out4684;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4685;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4683, out _out4684, out _out4685);
                      _10275_recursiveGen = _out4683;
                      _10276_recOwned = _out4684;
                      _10277_recIdents = _out4685;
                      RAST._IExpr _out4686;
                      DCOMPUTF16._IOwnership _out4687;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10275_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10276_recOwned, expectedOwnership, out _out4686, out _out4687);
                      r = _out4686;
                      resultingOwnership = _out4687;
                      readIdents = _10277_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4688;
                  DCOMPUTF16._IOwnership _out4689;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4690;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10267_b), _10267_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4688, out _out4689, out _out4690);
                  r = _out4688;
                  resultingOwnership = _out4689;
                  readIdents = _out4690;
                }
              }
            } else if (_source582.is_Map) {
              DAST._IType _10278___mcc_h270 = _source582.dtor_key;
              DAST._IType _10279___mcc_h271 = _source582.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _10280_attributes = _10094___mcc_h203;
              bool _10281_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10282_range = _10092___mcc_h201;
              DAST._IType _10283_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10284_nativeFromType;
                _10284_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10283_b, _10282_range);
                if (object.Equals(_10283_b, _9610_toTpe)) {
                  RAST._IExpr _10285_recursiveGen;
                  DCOMPUTF16._IOwnership _10286_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10287_recIdents;
                  RAST._IExpr _out4691;
                  DCOMPUTF16._IOwnership _out4692;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4693;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4691, out _out4692, out _out4693);
                  _10285_recursiveGen = _out4691;
                  _10286_recOwned = _out4692;
                  _10287_recIdents = _out4693;
                  readIdents = _10287_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source595 = _10284_nativeFromType;
                  if (_source595.is_None) {
                    if (_10281_erase) {
                      r = _10285_recursiveGen;
                    } else {
                      r = (_10285_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4694;
                    DCOMPUTF16._IOwnership _out4695;
                    DCOMPUTF16.COMP.FromOwnership(r, _10286_recOwned, expectedOwnership, out _out4694, out _out4695);
                    r = _out4694;
                    resultingOwnership = _out4695;
                  } else {
                    RAST._IType _10288___mcc_h1584 = _source595.dtor_value;
                    RAST._IType _10289_v = _10288___mcc_h1584;
                    RAST._IType _10290_toTpeRust;
                    RAST._IType _out4696;
                    _out4696 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10290_toTpeRust = _out4696;
                    r = (((_10285_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10290_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4697;
                    DCOMPUTF16._IOwnership _out4698;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4697, out _out4698);
                    r = _out4697;
                    resultingOwnership = _out4698;
                  }
                } else {
                  if ((_10284_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10291_recursiveGen;
                      DCOMPUTF16._IOwnership _10292_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10293_recIdents;
                      RAST._IExpr _out4699;
                      DCOMPUTF16._IOwnership _out4700;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4701;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4699, out _out4700, out _out4701);
                      _10291_recursiveGen = _out4699;
                      _10292_recOwned = _out4700;
                      _10293_recIdents = _out4701;
                      RAST._IExpr _out4702;
                      DCOMPUTF16._IOwnership _out4703;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10291_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10292_recOwned, expectedOwnership, out _out4702, out _out4703);
                      r = _out4702;
                      resultingOwnership = _out4703;
                      readIdents = _10293_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4704;
                  DCOMPUTF16._IOwnership _out4705;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4706;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10283_b), _10283_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4704, out _out4705, out _out4706);
                  r = _out4704;
                  resultingOwnership = _out4705;
                  readIdents = _out4706;
                }
              }
            } else if (_source582.is_SetBuilder) {
              DAST._IType _10294___mcc_h276 = _source582.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _10295_attributes = _10094___mcc_h203;
              bool _10296_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10297_range = _10092___mcc_h201;
              DAST._IType _10298_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10299_nativeFromType;
                _10299_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10298_b, _10297_range);
                if (object.Equals(_10298_b, _9610_toTpe)) {
                  RAST._IExpr _10300_recursiveGen;
                  DCOMPUTF16._IOwnership _10301_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10302_recIdents;
                  RAST._IExpr _out4707;
                  DCOMPUTF16._IOwnership _out4708;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4709;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4707, out _out4708, out _out4709);
                  _10300_recursiveGen = _out4707;
                  _10301_recOwned = _out4708;
                  _10302_recIdents = _out4709;
                  readIdents = _10302_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source596 = _10299_nativeFromType;
                  if (_source596.is_None) {
                    if (_10296_erase) {
                      r = _10300_recursiveGen;
                    } else {
                      r = (_10300_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4710;
                    DCOMPUTF16._IOwnership _out4711;
                    DCOMPUTF16.COMP.FromOwnership(r, _10301_recOwned, expectedOwnership, out _out4710, out _out4711);
                    r = _out4710;
                    resultingOwnership = _out4711;
                  } else {
                    RAST._IType _10303___mcc_h1585 = _source596.dtor_value;
                    RAST._IType _10304_v = _10303___mcc_h1585;
                    RAST._IType _10305_toTpeRust;
                    RAST._IType _out4712;
                    _out4712 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10305_toTpeRust = _out4712;
                    r = (((_10300_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10305_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4713;
                    DCOMPUTF16._IOwnership _out4714;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4713, out _out4714);
                    r = _out4713;
                    resultingOwnership = _out4714;
                  }
                } else {
                  if ((_10299_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10306_recursiveGen;
                      DCOMPUTF16._IOwnership _10307_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10308_recIdents;
                      RAST._IExpr _out4715;
                      DCOMPUTF16._IOwnership _out4716;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4717;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4715, out _out4716, out _out4717);
                      _10306_recursiveGen = _out4715;
                      _10307_recOwned = _out4716;
                      _10308_recIdents = _out4717;
                      RAST._IExpr _out4718;
                      DCOMPUTF16._IOwnership _out4719;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10306_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10307_recOwned, expectedOwnership, out _out4718, out _out4719);
                      r = _out4718;
                      resultingOwnership = _out4719;
                      readIdents = _10308_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4720;
                  DCOMPUTF16._IOwnership _out4721;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4722;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10298_b), _10298_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4720, out _out4721, out _out4722);
                  r = _out4720;
                  resultingOwnership = _out4721;
                  readIdents = _out4722;
                }
              }
            } else if (_source582.is_MapBuilder) {
              DAST._IType _10309___mcc_h279 = _source582.dtor_key;
              DAST._IType _10310___mcc_h280 = _source582.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _10311_attributes = _10094___mcc_h203;
              bool _10312_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10313_range = _10092___mcc_h201;
              DAST._IType _10314_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10315_nativeFromType;
                _10315_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10314_b, _10313_range);
                if (object.Equals(_10314_b, _9610_toTpe)) {
                  RAST._IExpr _10316_recursiveGen;
                  DCOMPUTF16._IOwnership _10317_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10318_recIdents;
                  RAST._IExpr _out4723;
                  DCOMPUTF16._IOwnership _out4724;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4725;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4723, out _out4724, out _out4725);
                  _10316_recursiveGen = _out4723;
                  _10317_recOwned = _out4724;
                  _10318_recIdents = _out4725;
                  readIdents = _10318_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source597 = _10315_nativeFromType;
                  if (_source597.is_None) {
                    if (_10312_erase) {
                      r = _10316_recursiveGen;
                    } else {
                      r = (_10316_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4726;
                    DCOMPUTF16._IOwnership _out4727;
                    DCOMPUTF16.COMP.FromOwnership(r, _10317_recOwned, expectedOwnership, out _out4726, out _out4727);
                    r = _out4726;
                    resultingOwnership = _out4727;
                  } else {
                    RAST._IType _10319___mcc_h1586 = _source597.dtor_value;
                    RAST._IType _10320_v = _10319___mcc_h1586;
                    RAST._IType _10321_toTpeRust;
                    RAST._IType _out4728;
                    _out4728 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10321_toTpeRust = _out4728;
                    r = (((_10316_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10321_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4729;
                    DCOMPUTF16._IOwnership _out4730;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4729, out _out4730);
                    r = _out4729;
                    resultingOwnership = _out4730;
                  }
                } else {
                  if ((_10315_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10322_recursiveGen;
                      DCOMPUTF16._IOwnership _10323_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10324_recIdents;
                      RAST._IExpr _out4731;
                      DCOMPUTF16._IOwnership _out4732;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4733;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4731, out _out4732, out _out4733);
                      _10322_recursiveGen = _out4731;
                      _10323_recOwned = _out4732;
                      _10324_recIdents = _out4733;
                      RAST._IExpr _out4734;
                      DCOMPUTF16._IOwnership _out4735;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10322_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10323_recOwned, expectedOwnership, out _out4734, out _out4735);
                      r = _out4734;
                      resultingOwnership = _out4735;
                      readIdents = _10324_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4736;
                  DCOMPUTF16._IOwnership _out4737;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4738;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10314_b), _10314_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4736, out _out4737, out _out4738);
                  r = _out4736;
                  resultingOwnership = _out4737;
                  readIdents = _out4738;
                }
              }
            } else if (_source582.is_Arrow) {
              Dafny.ISequence<DAST._IType> _10325___mcc_h285 = _source582.dtor_args;
              DAST._IType _10326___mcc_h286 = _source582.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _10327_attributes = _10094___mcc_h203;
              bool _10328_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10329_range = _10092___mcc_h201;
              DAST._IType _10330_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10331_nativeFromType;
                _10331_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10330_b, _10329_range);
                if (object.Equals(_10330_b, _9610_toTpe)) {
                  RAST._IExpr _10332_recursiveGen;
                  DCOMPUTF16._IOwnership _10333_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10334_recIdents;
                  RAST._IExpr _out4739;
                  DCOMPUTF16._IOwnership _out4740;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4741;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4739, out _out4740, out _out4741);
                  _10332_recursiveGen = _out4739;
                  _10333_recOwned = _out4740;
                  _10334_recIdents = _out4741;
                  readIdents = _10334_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source598 = _10331_nativeFromType;
                  if (_source598.is_None) {
                    if (_10328_erase) {
                      r = _10332_recursiveGen;
                    } else {
                      r = (_10332_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4742;
                    DCOMPUTF16._IOwnership _out4743;
                    DCOMPUTF16.COMP.FromOwnership(r, _10333_recOwned, expectedOwnership, out _out4742, out _out4743);
                    r = _out4742;
                    resultingOwnership = _out4743;
                  } else {
                    RAST._IType _10335___mcc_h1587 = _source598.dtor_value;
                    RAST._IType _10336_v = _10335___mcc_h1587;
                    RAST._IType _10337_toTpeRust;
                    RAST._IType _out4744;
                    _out4744 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10337_toTpeRust = _out4744;
                    r = (((_10332_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10337_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4745;
                    DCOMPUTF16._IOwnership _out4746;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4745, out _out4746);
                    r = _out4745;
                    resultingOwnership = _out4746;
                  }
                } else {
                  if ((_10331_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10338_recursiveGen;
                      DCOMPUTF16._IOwnership _10339_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10340_recIdents;
                      RAST._IExpr _out4747;
                      DCOMPUTF16._IOwnership _out4748;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4749;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4747, out _out4748, out _out4749);
                      _10338_recursiveGen = _out4747;
                      _10339_recOwned = _out4748;
                      _10340_recIdents = _out4749;
                      RAST._IExpr _out4750;
                      DCOMPUTF16._IOwnership _out4751;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10338_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10339_recOwned, expectedOwnership, out _out4750, out _out4751);
                      r = _out4750;
                      resultingOwnership = _out4751;
                      readIdents = _10340_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4752;
                  DCOMPUTF16._IOwnership _out4753;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4754;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10330_b), _10330_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4752, out _out4753, out _out4754);
                  r = _out4752;
                  resultingOwnership = _out4753;
                  readIdents = _out4754;
                }
              }
            } else if (_source582.is_Primitive) {
              DAST._IPrimitive _10341___mcc_h291 = _source582.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _10342_attributes = _10094___mcc_h203;
              bool _10343_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10344_range = _10092___mcc_h201;
              DAST._IType _10345_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10346_nativeFromType;
                _10346_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10345_b, _10344_range);
                if (object.Equals(_10345_b, _9610_toTpe)) {
                  RAST._IExpr _10347_recursiveGen;
                  DCOMPUTF16._IOwnership _10348_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10349_recIdents;
                  RAST._IExpr _out4755;
                  DCOMPUTF16._IOwnership _out4756;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4757;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4755, out _out4756, out _out4757);
                  _10347_recursiveGen = _out4755;
                  _10348_recOwned = _out4756;
                  _10349_recIdents = _out4757;
                  readIdents = _10349_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source599 = _10346_nativeFromType;
                  if (_source599.is_None) {
                    if (_10343_erase) {
                      r = _10347_recursiveGen;
                    } else {
                      r = (_10347_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4758;
                    DCOMPUTF16._IOwnership _out4759;
                    DCOMPUTF16.COMP.FromOwnership(r, _10348_recOwned, expectedOwnership, out _out4758, out _out4759);
                    r = _out4758;
                    resultingOwnership = _out4759;
                  } else {
                    RAST._IType _10350___mcc_h1588 = _source599.dtor_value;
                    RAST._IType _10351_v = _10350___mcc_h1588;
                    RAST._IType _10352_toTpeRust;
                    RAST._IType _out4760;
                    _out4760 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10352_toTpeRust = _out4760;
                    r = (((_10347_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10352_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4761;
                    DCOMPUTF16._IOwnership _out4762;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4761, out _out4762);
                    r = _out4761;
                    resultingOwnership = _out4762;
                  }
                } else {
                  if ((_10346_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10353_recursiveGen;
                      DCOMPUTF16._IOwnership _10354_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10355_recIdents;
                      RAST._IExpr _out4763;
                      DCOMPUTF16._IOwnership _out4764;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4765;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4763, out _out4764, out _out4765);
                      _10353_recursiveGen = _out4763;
                      _10354_recOwned = _out4764;
                      _10355_recIdents = _out4765;
                      RAST._IExpr _out4766;
                      DCOMPUTF16._IOwnership _out4767;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10353_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10354_recOwned, expectedOwnership, out _out4766, out _out4767);
                      r = _out4766;
                      resultingOwnership = _out4767;
                      readIdents = _10355_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4768;
                  DCOMPUTF16._IOwnership _out4769;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4770;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10345_b), _10345_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4768, out _out4769, out _out4770);
                  r = _out4768;
                  resultingOwnership = _out4769;
                  readIdents = _out4770;
                }
              }
            } else if (_source582.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _10356___mcc_h294 = _source582.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _10357_attributes = _10094___mcc_h203;
              bool _10358_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10359_range = _10092___mcc_h201;
              DAST._IType _10360_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10361_nativeFromType;
                _10361_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10360_b, _10359_range);
                if (object.Equals(_10360_b, _9610_toTpe)) {
                  RAST._IExpr _10362_recursiveGen;
                  DCOMPUTF16._IOwnership _10363_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10364_recIdents;
                  RAST._IExpr _out4771;
                  DCOMPUTF16._IOwnership _out4772;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4773;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4771, out _out4772, out _out4773);
                  _10362_recursiveGen = _out4771;
                  _10363_recOwned = _out4772;
                  _10364_recIdents = _out4773;
                  readIdents = _10364_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source600 = _10361_nativeFromType;
                  if (_source600.is_None) {
                    if (_10358_erase) {
                      r = _10362_recursiveGen;
                    } else {
                      r = (_10362_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4774;
                    DCOMPUTF16._IOwnership _out4775;
                    DCOMPUTF16.COMP.FromOwnership(r, _10363_recOwned, expectedOwnership, out _out4774, out _out4775);
                    r = _out4774;
                    resultingOwnership = _out4775;
                  } else {
                    RAST._IType _10365___mcc_h1589 = _source600.dtor_value;
                    RAST._IType _10366_v = _10365___mcc_h1589;
                    RAST._IType _10367_toTpeRust;
                    RAST._IType _out4776;
                    _out4776 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10367_toTpeRust = _out4776;
                    r = (((_10362_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10367_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4777;
                    DCOMPUTF16._IOwnership _out4778;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4777, out _out4778);
                    r = _out4777;
                    resultingOwnership = _out4778;
                  }
                } else {
                  if ((_10361_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10368_recursiveGen;
                      DCOMPUTF16._IOwnership _10369_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10370_recIdents;
                      RAST._IExpr _out4779;
                      DCOMPUTF16._IOwnership _out4780;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4781;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4779, out _out4780, out _out4781);
                      _10368_recursiveGen = _out4779;
                      _10369_recOwned = _out4780;
                      _10370_recIdents = _out4781;
                      RAST._IExpr _out4782;
                      DCOMPUTF16._IOwnership _out4783;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10368_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10369_recOwned, expectedOwnership, out _out4782, out _out4783);
                      r = _out4782;
                      resultingOwnership = _out4783;
                      readIdents = _10370_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4784;
                  DCOMPUTF16._IOwnership _out4785;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4786;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10360_b), _10360_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4784, out _out4785, out _out4786);
                  r = _out4784;
                  resultingOwnership = _out4785;
                  readIdents = _out4786;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _10371___mcc_h297 = _source582.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _10372_attributes = _10094___mcc_h203;
              bool _10373_erase = _10093___mcc_h202;
              DAST._INewtypeRange _10374_range = _10092___mcc_h201;
              DAST._IType _10375_b = _10091___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _10376_nativeFromType;
                _10376_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10375_b, _10374_range);
                if (object.Equals(_10375_b, _9610_toTpe)) {
                  RAST._IExpr _10377_recursiveGen;
                  DCOMPUTF16._IOwnership _10378_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10379_recIdents;
                  RAST._IExpr _out4787;
                  DCOMPUTF16._IOwnership _out4788;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4789;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4787, out _out4788, out _out4789);
                  _10377_recursiveGen = _out4787;
                  _10378_recOwned = _out4788;
                  _10379_recIdents = _out4789;
                  readIdents = _10379_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source601 = _10376_nativeFromType;
                  if (_source601.is_None) {
                    if (_10373_erase) {
                      r = _10377_recursiveGen;
                    } else {
                      r = (_10377_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4790;
                    DCOMPUTF16._IOwnership _out4791;
                    DCOMPUTF16.COMP.FromOwnership(r, _10378_recOwned, expectedOwnership, out _out4790, out _out4791);
                    r = _out4790;
                    resultingOwnership = _out4791;
                  } else {
                    RAST._IType _10380___mcc_h1590 = _source601.dtor_value;
                    RAST._IType _10381_v = _10380___mcc_h1590;
                    RAST._IType _10382_toTpeRust;
                    RAST._IType _out4792;
                    _out4792 = DCOMPUTF16.COMP.GenType(_9610_toTpe, false, false);
                    _10382_toTpeRust = _out4792;
                    r = (((_10377_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_10382_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4793;
                    DCOMPUTF16._IOwnership _out4794;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4793, out _out4794);
                    r = _out4793;
                    resultingOwnership = _out4794;
                  }
                } else {
                  if ((_10376_nativeFromType).is_Some) {
                    if (object.Equals(_9610_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10383_recursiveGen;
                      DCOMPUTF16._IOwnership _10384_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10385_recIdents;
                      RAST._IExpr _out4795;
                      DCOMPUTF16._IOwnership _out4796;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4797;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4795, out _out4796, out _out4797);
                      _10383_recursiveGen = _out4795;
                      _10384_recOwned = _out4796;
                      _10385_recIdents = _out4797;
                      RAST._IExpr _out4798;
                      DCOMPUTF16._IOwnership _out4799;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_10383_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _10384_recOwned, expectedOwnership, out _out4798, out _out4799);
                      r = _out4798;
                      resultingOwnership = _out4799;
                      readIdents = _10385_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4800;
                  DCOMPUTF16._IOwnership _out4801;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4802;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10375_b), _10375_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4800, out _out4801, out _out4802);
                  r = _out4800;
                  resultingOwnership = _out4801;
                  readIdents = _out4802;
                }
              }
            }
          }
        } else if (_source565.is_Nullable) {
          DAST._IType _10386___mcc_h300 = _source565.dtor_Nullable_a0;
          DAST._IType _source602 = _9615___mcc_h1;
          if (_source602.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10387___mcc_h304 = _source602.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10388___mcc_h305 = _source602.dtor_typeArgs;
            DAST._IResolvedType _10389___mcc_h306 = _source602.dtor_resolved;
            DAST._IResolvedType _source603 = _10389___mcc_h306;
            if (_source603.is_AllocatedDatatype) {
              DAST._IDatatypeType _10390___mcc_h313 = _source603.dtor_datatypeType;
              {
                RAST._IExpr _10391_recursiveGen;
                DCOMPUTF16._IOwnership _10392_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10393_recIdents;
                RAST._IExpr _out4803;
                DCOMPUTF16._IOwnership _out4804;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4805;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4803, out _out4804, out _out4805);
                _10391_recursiveGen = _out4803;
                _10392_recOwned = _out4804;
                _10393_recIdents = _out4805;
                r = _10391_recursiveGen;
                if (object.Equals(_10392_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4806;
                DCOMPUTF16._IOwnership _out4807;
                DCOMPUTF16.COMP.FromOwnership(r, _10392_recOwned, expectedOwnership, out _out4806, out _out4807);
                r = _out4806;
                resultingOwnership = _out4807;
                readIdents = _10393_recIdents;
              }
            } else if (_source603.is_Datatype) {
              DAST._IDatatypeType _10394___mcc_h316 = _source603.dtor_datatypeType;
              {
                RAST._IExpr _10395_recursiveGen;
                DCOMPUTF16._IOwnership _10396_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10397_recIdents;
                RAST._IExpr _out4808;
                DCOMPUTF16._IOwnership _out4809;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4810;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4808, out _out4809, out _out4810);
                _10395_recursiveGen = _out4808;
                _10396_recOwned = _out4809;
                _10397_recIdents = _out4810;
                r = _10395_recursiveGen;
                if (object.Equals(_10396_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4811;
                DCOMPUTF16._IOwnership _out4812;
                DCOMPUTF16.COMP.FromOwnership(r, _10396_recOwned, expectedOwnership, out _out4811, out _out4812);
                r = _out4811;
                resultingOwnership = _out4812;
                readIdents = _10397_recIdents;
              }
            } else if (_source603.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10398___mcc_h319 = _source603.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10399___mcc_h320 = _source603.dtor_attributes;
              {
                RAST._IExpr _10400_recursiveGen;
                DCOMPUTF16._IOwnership _10401_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10402_recIdents;
                RAST._IExpr _out4813;
                DCOMPUTF16._IOwnership _out4814;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4815;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4813, out _out4814, out _out4815);
                _10400_recursiveGen = _out4813;
                _10401_recOwned = _out4814;
                _10402_recIdents = _out4815;
                r = _10400_recursiveGen;
                if (object.Equals(_10401_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4816;
                DCOMPUTF16._IOwnership _out4817;
                DCOMPUTF16.COMP.FromOwnership(r, _10401_recOwned, expectedOwnership, out _out4816, out _out4817);
                r = _out4816;
                resultingOwnership = _out4817;
                readIdents = _10402_recIdents;
              }
            } else {
              DAST._IType _10403___mcc_h325 = _source603.dtor_baseType;
              DAST._INewtypeRange _10404___mcc_h326 = _source603.dtor_range;
              bool _10405___mcc_h327 = _source603.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10406___mcc_h328 = _source603.dtor_attributes;
              {
                RAST._IExpr _10407_recursiveGen;
                DCOMPUTF16._IOwnership _10408_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10409_recIdents;
                RAST._IExpr _out4818;
                DCOMPUTF16._IOwnership _out4819;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4820;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4818, out _out4819, out _out4820);
                _10407_recursiveGen = _out4818;
                _10408_recOwned = _out4819;
                _10409_recIdents = _out4820;
                r = _10407_recursiveGen;
                if (object.Equals(_10408_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4821;
                DCOMPUTF16._IOwnership _out4822;
                DCOMPUTF16.COMP.FromOwnership(r, _10408_recOwned, expectedOwnership, out _out4821, out _out4822);
                r = _out4821;
                resultingOwnership = _out4822;
                readIdents = _10409_recIdents;
              }
            }
          } else if (_source602.is_Nullable) {
            DAST._IType _10410___mcc_h337 = _source602.dtor_Nullable_a0;
            {
              RAST._IExpr _10411_recursiveGen;
              DCOMPUTF16._IOwnership _10412_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10413_recIdents;
              RAST._IExpr _out4823;
              DCOMPUTF16._IOwnership _out4824;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4825;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4823, out _out4824, out _out4825);
              _10411_recursiveGen = _out4823;
              _10412_recOwned = _out4824;
              _10413_recIdents = _out4825;
              r = _10411_recursiveGen;
              if (object.Equals(_10412_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4826;
              DCOMPUTF16._IOwnership _out4827;
              DCOMPUTF16.COMP.FromOwnership(r, _10412_recOwned, expectedOwnership, out _out4826, out _out4827);
              r = _out4826;
              resultingOwnership = _out4827;
              readIdents = _10413_recIdents;
            }
          } else if (_source602.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10414___mcc_h340 = _source602.dtor_Tuple_a0;
            {
              RAST._IExpr _10415_recursiveGen;
              DCOMPUTF16._IOwnership _10416_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10417_recIdents;
              RAST._IExpr _out4828;
              DCOMPUTF16._IOwnership _out4829;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4830;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4828, out _out4829, out _out4830);
              _10415_recursiveGen = _out4828;
              _10416_recOwned = _out4829;
              _10417_recIdents = _out4830;
              r = _10415_recursiveGen;
              if (object.Equals(_10416_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4831;
              DCOMPUTF16._IOwnership _out4832;
              DCOMPUTF16.COMP.FromOwnership(r, _10416_recOwned, expectedOwnership, out _out4831, out _out4832);
              r = _out4831;
              resultingOwnership = _out4832;
              readIdents = _10417_recIdents;
            }
          } else if (_source602.is_Array) {
            DAST._IType _10418___mcc_h343 = _source602.dtor_element;
            BigInteger _10419___mcc_h344 = _source602.dtor_dims;
            {
              RAST._IExpr _10420_recursiveGen;
              DCOMPUTF16._IOwnership _10421_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10422_recIdents;
              RAST._IExpr _out4833;
              DCOMPUTF16._IOwnership _out4834;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4835;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4833, out _out4834, out _out4835);
              _10420_recursiveGen = _out4833;
              _10421_recOwned = _out4834;
              _10422_recIdents = _out4835;
              r = _10420_recursiveGen;
              if (object.Equals(_10421_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4836;
              DCOMPUTF16._IOwnership _out4837;
              DCOMPUTF16.COMP.FromOwnership(r, _10421_recOwned, expectedOwnership, out _out4836, out _out4837);
              r = _out4836;
              resultingOwnership = _out4837;
              readIdents = _10422_recIdents;
            }
          } else if (_source602.is_Seq) {
            DAST._IType _10423___mcc_h349 = _source602.dtor_element;
            {
              RAST._IExpr _10424_recursiveGen;
              DCOMPUTF16._IOwnership _10425_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10426_recIdents;
              RAST._IExpr _out4838;
              DCOMPUTF16._IOwnership _out4839;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4840;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4838, out _out4839, out _out4840);
              _10424_recursiveGen = _out4838;
              _10425_recOwned = _out4839;
              _10426_recIdents = _out4840;
              r = _10424_recursiveGen;
              if (object.Equals(_10425_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4841;
              DCOMPUTF16._IOwnership _out4842;
              DCOMPUTF16.COMP.FromOwnership(r, _10425_recOwned, expectedOwnership, out _out4841, out _out4842);
              r = _out4841;
              resultingOwnership = _out4842;
              readIdents = _10426_recIdents;
            }
          } else if (_source602.is_Set) {
            DAST._IType _10427___mcc_h352 = _source602.dtor_element;
            {
              RAST._IExpr _10428_recursiveGen;
              DCOMPUTF16._IOwnership _10429_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10430_recIdents;
              RAST._IExpr _out4843;
              DCOMPUTF16._IOwnership _out4844;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4845;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4843, out _out4844, out _out4845);
              _10428_recursiveGen = _out4843;
              _10429_recOwned = _out4844;
              _10430_recIdents = _out4845;
              r = _10428_recursiveGen;
              if (object.Equals(_10429_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4846;
              DCOMPUTF16._IOwnership _out4847;
              DCOMPUTF16.COMP.FromOwnership(r, _10429_recOwned, expectedOwnership, out _out4846, out _out4847);
              r = _out4846;
              resultingOwnership = _out4847;
              readIdents = _10430_recIdents;
            }
          } else if (_source602.is_Multiset) {
            DAST._IType _10431___mcc_h355 = _source602.dtor_element;
            {
              RAST._IExpr _10432_recursiveGen;
              DCOMPUTF16._IOwnership _10433_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10434_recIdents;
              RAST._IExpr _out4848;
              DCOMPUTF16._IOwnership _out4849;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4850;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4848, out _out4849, out _out4850);
              _10432_recursiveGen = _out4848;
              _10433_recOwned = _out4849;
              _10434_recIdents = _out4850;
              r = _10432_recursiveGen;
              if (object.Equals(_10433_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4851;
              DCOMPUTF16._IOwnership _out4852;
              DCOMPUTF16.COMP.FromOwnership(r, _10433_recOwned, expectedOwnership, out _out4851, out _out4852);
              r = _out4851;
              resultingOwnership = _out4852;
              readIdents = _10434_recIdents;
            }
          } else if (_source602.is_Map) {
            DAST._IType _10435___mcc_h358 = _source602.dtor_key;
            DAST._IType _10436___mcc_h359 = _source602.dtor_value;
            {
              RAST._IExpr _10437_recursiveGen;
              DCOMPUTF16._IOwnership _10438_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10439_recIdents;
              RAST._IExpr _out4853;
              DCOMPUTF16._IOwnership _out4854;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4855;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4853, out _out4854, out _out4855);
              _10437_recursiveGen = _out4853;
              _10438_recOwned = _out4854;
              _10439_recIdents = _out4855;
              r = _10437_recursiveGen;
              if (object.Equals(_10438_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4856;
              DCOMPUTF16._IOwnership _out4857;
              DCOMPUTF16.COMP.FromOwnership(r, _10438_recOwned, expectedOwnership, out _out4856, out _out4857);
              r = _out4856;
              resultingOwnership = _out4857;
              readIdents = _10439_recIdents;
            }
          } else if (_source602.is_SetBuilder) {
            DAST._IType _10440___mcc_h364 = _source602.dtor_element;
            {
              RAST._IExpr _10441_recursiveGen;
              DCOMPUTF16._IOwnership _10442_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10443_recIdents;
              RAST._IExpr _out4858;
              DCOMPUTF16._IOwnership _out4859;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4860;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4858, out _out4859, out _out4860);
              _10441_recursiveGen = _out4858;
              _10442_recOwned = _out4859;
              _10443_recIdents = _out4860;
              r = _10441_recursiveGen;
              if (object.Equals(_10442_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4861;
              DCOMPUTF16._IOwnership _out4862;
              DCOMPUTF16.COMP.FromOwnership(r, _10442_recOwned, expectedOwnership, out _out4861, out _out4862);
              r = _out4861;
              resultingOwnership = _out4862;
              readIdents = _10443_recIdents;
            }
          } else if (_source602.is_MapBuilder) {
            DAST._IType _10444___mcc_h367 = _source602.dtor_key;
            DAST._IType _10445___mcc_h368 = _source602.dtor_value;
            {
              RAST._IExpr _10446_recursiveGen;
              DCOMPUTF16._IOwnership _10447_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10448_recIdents;
              RAST._IExpr _out4863;
              DCOMPUTF16._IOwnership _out4864;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4865;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4863, out _out4864, out _out4865);
              _10446_recursiveGen = _out4863;
              _10447_recOwned = _out4864;
              _10448_recIdents = _out4865;
              r = _10446_recursiveGen;
              if (object.Equals(_10447_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4866;
              DCOMPUTF16._IOwnership _out4867;
              DCOMPUTF16.COMP.FromOwnership(r, _10447_recOwned, expectedOwnership, out _out4866, out _out4867);
              r = _out4866;
              resultingOwnership = _out4867;
              readIdents = _10448_recIdents;
            }
          } else if (_source602.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10449___mcc_h373 = _source602.dtor_args;
            DAST._IType _10450___mcc_h374 = _source602.dtor_result;
            {
              RAST._IExpr _10451_recursiveGen;
              DCOMPUTF16._IOwnership _10452_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10453_recIdents;
              RAST._IExpr _out4868;
              DCOMPUTF16._IOwnership _out4869;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4870;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4868, out _out4869, out _out4870);
              _10451_recursiveGen = _out4868;
              _10452_recOwned = _out4869;
              _10453_recIdents = _out4870;
              r = _10451_recursiveGen;
              if (object.Equals(_10452_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4871;
              DCOMPUTF16._IOwnership _out4872;
              DCOMPUTF16.COMP.FromOwnership(r, _10452_recOwned, expectedOwnership, out _out4871, out _out4872);
              r = _out4871;
              resultingOwnership = _out4872;
              readIdents = _10453_recIdents;
            }
          } else if (_source602.is_Primitive) {
            DAST._IPrimitive _10454___mcc_h379 = _source602.dtor_Primitive_a0;
            {
              RAST._IExpr _10455_recursiveGen;
              DCOMPUTF16._IOwnership _10456_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10457_recIdents;
              RAST._IExpr _out4873;
              DCOMPUTF16._IOwnership _out4874;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4875;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4873, out _out4874, out _out4875);
              _10455_recursiveGen = _out4873;
              _10456_recOwned = _out4874;
              _10457_recIdents = _out4875;
              r = _10455_recursiveGen;
              if (object.Equals(_10456_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4876;
              DCOMPUTF16._IOwnership _out4877;
              DCOMPUTF16.COMP.FromOwnership(r, _10456_recOwned, expectedOwnership, out _out4876, out _out4877);
              r = _out4876;
              resultingOwnership = _out4877;
              readIdents = _10457_recIdents;
            }
          } else if (_source602.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10458___mcc_h382 = _source602.dtor_Passthrough_a0;
            {
              RAST._IExpr _10459_recursiveGen;
              DCOMPUTF16._IOwnership _10460_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10461_recIdents;
              RAST._IExpr _out4878;
              DCOMPUTF16._IOwnership _out4879;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4880;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4878, out _out4879, out _out4880);
              _10459_recursiveGen = _out4878;
              _10460_recOwned = _out4879;
              _10461_recIdents = _out4880;
              r = _10459_recursiveGen;
              if (object.Equals(_10460_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4881;
              DCOMPUTF16._IOwnership _out4882;
              DCOMPUTF16.COMP.FromOwnership(r, _10460_recOwned, expectedOwnership, out _out4881, out _out4882);
              r = _out4881;
              resultingOwnership = _out4882;
              readIdents = _10461_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10462___mcc_h385 = _source602.dtor_TypeArg_a0;
            {
              RAST._IExpr _10463_recursiveGen;
              DCOMPUTF16._IOwnership _10464_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10465_recIdents;
              RAST._IExpr _out4883;
              DCOMPUTF16._IOwnership _out4884;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4885;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4883, out _out4884, out _out4885);
              _10463_recursiveGen = _out4883;
              _10464_recOwned = _out4884;
              _10465_recIdents = _out4885;
              r = _10463_recursiveGen;
              if (object.Equals(_10464_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4886;
              DCOMPUTF16._IOwnership _out4887;
              DCOMPUTF16.COMP.FromOwnership(r, _10464_recOwned, expectedOwnership, out _out4886, out _out4887);
              r = _out4886;
              resultingOwnership = _out4887;
              readIdents = _10465_recIdents;
            }
          }
        } else if (_source565.is_Tuple) {
          Dafny.ISequence<DAST._IType> _10466___mcc_h388 = _source565.dtor_Tuple_a0;
          DAST._IType _source604 = _9615___mcc_h1;
          if (_source604.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10467___mcc_h392 = _source604.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10468___mcc_h393 = _source604.dtor_typeArgs;
            DAST._IResolvedType _10469___mcc_h394 = _source604.dtor_resolved;
            DAST._IResolvedType _source605 = _10469___mcc_h394;
            if (_source605.is_AllocatedDatatype) {
              DAST._IDatatypeType _10470___mcc_h398 = _source605.dtor_datatypeType;
              {
                RAST._IType _10471_fromTpeGen;
                RAST._IType _out4888;
                _out4888 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10471_fromTpeGen = _out4888;
                RAST._IType _10472_toTpeGen;
                RAST._IType _out4889;
                _out4889 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10472_toTpeGen = _out4889;
                RAST._IExpr _10473_recursiveGen;
                DCOMPUTF16._IOwnership _10474_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10475_recIdents;
                RAST._IExpr _out4890;
                DCOMPUTF16._IOwnership _out4891;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4892;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4890, out _out4891, out _out4892);
                _10473_recursiveGen = _out4890;
                _10474_recOwned = _out4891;
                _10475_recIdents = _out4892;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10473_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10471_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10472_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4893;
                DCOMPUTF16._IOwnership _out4894;
                DCOMPUTF16.COMP.FromOwnership(r, _10474_recOwned, expectedOwnership, out _out4893, out _out4894);
                r = _out4893;
                resultingOwnership = _out4894;
                readIdents = _10475_recIdents;
              }
            } else if (_source605.is_Datatype) {
              DAST._IDatatypeType _10476___mcc_h400 = _source605.dtor_datatypeType;
              {
                RAST._IType _10477_fromTpeGen;
                RAST._IType _out4895;
                _out4895 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10477_fromTpeGen = _out4895;
                RAST._IType _10478_toTpeGen;
                RAST._IType _out4896;
                _out4896 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10478_toTpeGen = _out4896;
                RAST._IExpr _10479_recursiveGen;
                DCOMPUTF16._IOwnership _10480_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10481_recIdents;
                RAST._IExpr _out4897;
                DCOMPUTF16._IOwnership _out4898;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4899;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4897, out _out4898, out _out4899);
                _10479_recursiveGen = _out4897;
                _10480_recOwned = _out4898;
                _10481_recIdents = _out4899;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10479_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10477_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10478_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4900;
                DCOMPUTF16._IOwnership _out4901;
                DCOMPUTF16.COMP.FromOwnership(r, _10480_recOwned, expectedOwnership, out _out4900, out _out4901);
                r = _out4900;
                resultingOwnership = _out4901;
                readIdents = _10481_recIdents;
              }
            } else if (_source605.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10482___mcc_h402 = _source605.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10483___mcc_h403 = _source605.dtor_attributes;
              {
                RAST._IType _10484_fromTpeGen;
                RAST._IType _out4902;
                _out4902 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10484_fromTpeGen = _out4902;
                RAST._IType _10485_toTpeGen;
                RAST._IType _out4903;
                _out4903 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10485_toTpeGen = _out4903;
                RAST._IExpr _10486_recursiveGen;
                DCOMPUTF16._IOwnership _10487_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10488_recIdents;
                RAST._IExpr _out4904;
                DCOMPUTF16._IOwnership _out4905;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4906;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4904, out _out4905, out _out4906);
                _10486_recursiveGen = _out4904;
                _10487_recOwned = _out4905;
                _10488_recIdents = _out4906;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10486_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10484_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10485_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4907;
                DCOMPUTF16._IOwnership _out4908;
                DCOMPUTF16.COMP.FromOwnership(r, _10487_recOwned, expectedOwnership, out _out4907, out _out4908);
                r = _out4907;
                resultingOwnership = _out4908;
                readIdents = _10488_recIdents;
              }
            } else {
              DAST._IType _10489___mcc_h406 = _source605.dtor_baseType;
              DAST._INewtypeRange _10490___mcc_h407 = _source605.dtor_range;
              bool _10491___mcc_h408 = _source605.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10492___mcc_h409 = _source605.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10493_attributes = _10492___mcc_h409;
              bool _10494_erase = _10491___mcc_h408;
              DAST._INewtypeRange _10495_range = _10490___mcc_h407;
              DAST._IType _10496_b = _10489___mcc_h406;
              {
                Std.Wrappers._IOption<RAST._IType> _10497_nativeToType;
                _10497_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10496_b, _10495_range);
                if (object.Equals(_9609_fromTpe, _10496_b)) {
                  RAST._IExpr _10498_recursiveGen;
                  DCOMPUTF16._IOwnership _10499_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10500_recIdents;
                  RAST._IExpr _out4909;
                  DCOMPUTF16._IOwnership _out4910;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4911;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4909, out _out4910, out _out4911);
                  _10498_recursiveGen = _out4909;
                  _10499_recOwned = _out4910;
                  _10500_recIdents = _out4911;
                  readIdents = _10500_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source606 = _10497_nativeToType;
                  if (_source606.is_None) {
                    if (_10494_erase) {
                      r = _10498_recursiveGen;
                    } else {
                      RAST._IType _10501_rhsType;
                      RAST._IType _out4912;
                      _out4912 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _10501_rhsType = _out4912;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10501_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10498_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4913;
                    DCOMPUTF16._IOwnership _out4914;
                    DCOMPUTF16.COMP.FromOwnership(r, _10499_recOwned, expectedOwnership, out _out4913, out _out4914);
                    r = _out4913;
                    resultingOwnership = _out4914;
                  } else {
                    RAST._IType _10502___mcc_h1591 = _source606.dtor_value;
                    RAST._IType _10503_v = _10502___mcc_h1591;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10498_recursiveGen, RAST.Expr.create_ExprFromType(_10503_v)));
                    RAST._IExpr _out4915;
                    DCOMPUTF16._IOwnership _out4916;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4915, out _out4916);
                    r = _out4915;
                    resultingOwnership = _out4916;
                  }
                } else {
                  if ((_10497_nativeToType).is_Some) {
                    DAST._IType _source607 = _9609_fromTpe;
                    if (_source607.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10504___mcc_h1592 = _source607.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10505___mcc_h1593 = _source607.dtor_typeArgs;
                      DAST._IResolvedType _10506___mcc_h1594 = _source607.dtor_resolved;
                      DAST._IResolvedType _source608 = _10506___mcc_h1594;
                      if (_source608.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10507___mcc_h1598 = _source608.dtor_datatypeType;
                      } else if (_source608.is_Datatype) {
                        DAST._IDatatypeType _10508___mcc_h1600 = _source608.dtor_datatypeType;
                      } else if (_source608.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10509___mcc_h1602 = _source608.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10510___mcc_h1603 = _source608.dtor_attributes;
                      } else {
                        DAST._IType _10511___mcc_h1606 = _source608.dtor_baseType;
                        DAST._INewtypeRange _10512___mcc_h1607 = _source608.dtor_range;
                        bool _10513___mcc_h1608 = _source608.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10514___mcc_h1609 = _source608.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10515_attributes0 = _10514___mcc_h1609;
                        bool _10516_erase0 = _10513___mcc_h1608;
                        DAST._INewtypeRange _10517_range0 = _10512___mcc_h1607;
                        DAST._IType _10518_b0 = _10511___mcc_h1606;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10519_nativeFromType;
                          _10519_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10518_b0, _10517_range0);
                          if ((_10519_nativeFromType).is_Some) {
                            RAST._IExpr _10520_recursiveGen;
                            DCOMPUTF16._IOwnership _10521_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10522_recIdents;
                            RAST._IExpr _out4917;
                            DCOMPUTF16._IOwnership _out4918;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4919;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4917, out _out4918, out _out4919);
                            _10520_recursiveGen = _out4917;
                            _10521_recOwned = _out4918;
                            _10522_recIdents = _out4919;
                            RAST._IExpr _out4920;
                            DCOMPUTF16._IOwnership _out4921;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10520_recursiveGen, (_10497_nativeToType).dtor_value), _10521_recOwned, expectedOwnership, out _out4920, out _out4921);
                            r = _out4920;
                            resultingOwnership = _out4921;
                            readIdents = _10522_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source607.is_Nullable) {
                      DAST._IType _10523___mcc_h1614 = _source607.dtor_Nullable_a0;
                    } else if (_source607.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10524___mcc_h1616 = _source607.dtor_Tuple_a0;
                    } else if (_source607.is_Array) {
                      DAST._IType _10525___mcc_h1618 = _source607.dtor_element;
                      BigInteger _10526___mcc_h1619 = _source607.dtor_dims;
                    } else if (_source607.is_Seq) {
                      DAST._IType _10527___mcc_h1622 = _source607.dtor_element;
                    } else if (_source607.is_Set) {
                      DAST._IType _10528___mcc_h1624 = _source607.dtor_element;
                    } else if (_source607.is_Multiset) {
                      DAST._IType _10529___mcc_h1626 = _source607.dtor_element;
                    } else if (_source607.is_Map) {
                      DAST._IType _10530___mcc_h1628 = _source607.dtor_key;
                      DAST._IType _10531___mcc_h1629 = _source607.dtor_value;
                    } else if (_source607.is_SetBuilder) {
                      DAST._IType _10532___mcc_h1632 = _source607.dtor_element;
                    } else if (_source607.is_MapBuilder) {
                      DAST._IType _10533___mcc_h1634 = _source607.dtor_key;
                      DAST._IType _10534___mcc_h1635 = _source607.dtor_value;
                    } else if (_source607.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10535___mcc_h1638 = _source607.dtor_args;
                      DAST._IType _10536___mcc_h1639 = _source607.dtor_result;
                    } else if (_source607.is_Primitive) {
                      DAST._IPrimitive _10537___mcc_h1642 = _source607.dtor_Primitive_a0;
                    } else if (_source607.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10538___mcc_h1644 = _source607.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10539___mcc_h1646 = _source607.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10540_recursiveGen;
                      DCOMPUTF16._IOwnership _10541_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10542_recIdents;
                      RAST._IExpr _out4922;
                      DCOMPUTF16._IOwnership _out4923;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4924;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4922, out _out4923, out _out4924);
                      _10540_recursiveGen = _out4922;
                      _10541_recOwned = _out4923;
                      _10542_recIdents = _out4924;
                      RAST._IExpr _out4925;
                      DCOMPUTF16._IOwnership _out4926;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10540_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10497_nativeToType).dtor_value), _10541_recOwned, expectedOwnership, out _out4925, out _out4926);
                      r = _out4925;
                      resultingOwnership = _out4926;
                      readIdents = _10542_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4927;
                  DCOMPUTF16._IOwnership _out4928;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4929;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10496_b), _10496_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out4927, out _out4928, out _out4929);
                  r = _out4927;
                  resultingOwnership = _out4928;
                  readIdents = _out4929;
                }
              }
            }
          } else if (_source604.is_Nullable) {
            DAST._IType _10543___mcc_h414 = _source604.dtor_Nullable_a0;
            {
              RAST._IExpr _10544_recursiveGen;
              DCOMPUTF16._IOwnership _10545_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10546_recIdents;
              RAST._IExpr _out4930;
              DCOMPUTF16._IOwnership _out4931;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4932;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4930, out _out4931, out _out4932);
              _10544_recursiveGen = _out4930;
              _10545_recOwned = _out4931;
              _10546_recIdents = _out4932;
              r = _10544_recursiveGen;
              if (object.Equals(_10545_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4933;
              DCOMPUTF16._IOwnership _out4934;
              DCOMPUTF16.COMP.FromOwnership(r, _10545_recOwned, expectedOwnership, out _out4933, out _out4934);
              r = _out4933;
              resultingOwnership = _out4934;
              readIdents = _10546_recIdents;
            }
          } else if (_source604.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10547___mcc_h416 = _source604.dtor_Tuple_a0;
            {
              RAST._IType _10548_fromTpeGen;
              RAST._IType _out4935;
              _out4935 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10548_fromTpeGen = _out4935;
              RAST._IType _10549_toTpeGen;
              RAST._IType _out4936;
              _out4936 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10549_toTpeGen = _out4936;
              RAST._IExpr _10550_recursiveGen;
              DCOMPUTF16._IOwnership _10551_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10552_recIdents;
              RAST._IExpr _out4937;
              DCOMPUTF16._IOwnership _out4938;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4939;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4937, out _out4938, out _out4939);
              _10550_recursiveGen = _out4937;
              _10551_recOwned = _out4938;
              _10552_recIdents = _out4939;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10550_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10548_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10549_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4940;
              DCOMPUTF16._IOwnership _out4941;
              DCOMPUTF16.COMP.FromOwnership(r, _10551_recOwned, expectedOwnership, out _out4940, out _out4941);
              r = _out4940;
              resultingOwnership = _out4941;
              readIdents = _10552_recIdents;
            }
          } else if (_source604.is_Array) {
            DAST._IType _10553___mcc_h418 = _source604.dtor_element;
            BigInteger _10554___mcc_h419 = _source604.dtor_dims;
            {
              RAST._IType _10555_fromTpeGen;
              RAST._IType _out4942;
              _out4942 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10555_fromTpeGen = _out4942;
              RAST._IType _10556_toTpeGen;
              RAST._IType _out4943;
              _out4943 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10556_toTpeGen = _out4943;
              RAST._IExpr _10557_recursiveGen;
              DCOMPUTF16._IOwnership _10558_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10559_recIdents;
              RAST._IExpr _out4944;
              DCOMPUTF16._IOwnership _out4945;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4946;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4944, out _out4945, out _out4946);
              _10557_recursiveGen = _out4944;
              _10558_recOwned = _out4945;
              _10559_recIdents = _out4946;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10557_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10555_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10556_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4947;
              DCOMPUTF16._IOwnership _out4948;
              DCOMPUTF16.COMP.FromOwnership(r, _10558_recOwned, expectedOwnership, out _out4947, out _out4948);
              r = _out4947;
              resultingOwnership = _out4948;
              readIdents = _10559_recIdents;
            }
          } else if (_source604.is_Seq) {
            DAST._IType _10560___mcc_h422 = _source604.dtor_element;
            {
              RAST._IType _10561_fromTpeGen;
              RAST._IType _out4949;
              _out4949 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10561_fromTpeGen = _out4949;
              RAST._IType _10562_toTpeGen;
              RAST._IType _out4950;
              _out4950 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10562_toTpeGen = _out4950;
              RAST._IExpr _10563_recursiveGen;
              DCOMPUTF16._IOwnership _10564_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10565_recIdents;
              RAST._IExpr _out4951;
              DCOMPUTF16._IOwnership _out4952;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4953;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4951, out _out4952, out _out4953);
              _10563_recursiveGen = _out4951;
              _10564_recOwned = _out4952;
              _10565_recIdents = _out4953;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10563_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10561_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10562_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4954;
              DCOMPUTF16._IOwnership _out4955;
              DCOMPUTF16.COMP.FromOwnership(r, _10564_recOwned, expectedOwnership, out _out4954, out _out4955);
              r = _out4954;
              resultingOwnership = _out4955;
              readIdents = _10565_recIdents;
            }
          } else if (_source604.is_Set) {
            DAST._IType _10566___mcc_h424 = _source604.dtor_element;
            {
              RAST._IType _10567_fromTpeGen;
              RAST._IType _out4956;
              _out4956 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10567_fromTpeGen = _out4956;
              RAST._IType _10568_toTpeGen;
              RAST._IType _out4957;
              _out4957 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10568_toTpeGen = _out4957;
              RAST._IExpr _10569_recursiveGen;
              DCOMPUTF16._IOwnership _10570_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10571_recIdents;
              RAST._IExpr _out4958;
              DCOMPUTF16._IOwnership _out4959;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4960;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4958, out _out4959, out _out4960);
              _10569_recursiveGen = _out4958;
              _10570_recOwned = _out4959;
              _10571_recIdents = _out4960;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10569_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10567_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10568_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4961;
              DCOMPUTF16._IOwnership _out4962;
              DCOMPUTF16.COMP.FromOwnership(r, _10570_recOwned, expectedOwnership, out _out4961, out _out4962);
              r = _out4961;
              resultingOwnership = _out4962;
              readIdents = _10571_recIdents;
            }
          } else if (_source604.is_Multiset) {
            DAST._IType _10572___mcc_h426 = _source604.dtor_element;
            {
              RAST._IType _10573_fromTpeGen;
              RAST._IType _out4963;
              _out4963 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10573_fromTpeGen = _out4963;
              RAST._IType _10574_toTpeGen;
              RAST._IType _out4964;
              _out4964 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10574_toTpeGen = _out4964;
              RAST._IExpr _10575_recursiveGen;
              DCOMPUTF16._IOwnership _10576_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10577_recIdents;
              RAST._IExpr _out4965;
              DCOMPUTF16._IOwnership _out4966;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4967;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4965, out _out4966, out _out4967);
              _10575_recursiveGen = _out4965;
              _10576_recOwned = _out4966;
              _10577_recIdents = _out4967;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10575_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10573_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10574_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4968;
              DCOMPUTF16._IOwnership _out4969;
              DCOMPUTF16.COMP.FromOwnership(r, _10576_recOwned, expectedOwnership, out _out4968, out _out4969);
              r = _out4968;
              resultingOwnership = _out4969;
              readIdents = _10577_recIdents;
            }
          } else if (_source604.is_Map) {
            DAST._IType _10578___mcc_h428 = _source604.dtor_key;
            DAST._IType _10579___mcc_h429 = _source604.dtor_value;
            {
              RAST._IType _10580_fromTpeGen;
              RAST._IType _out4970;
              _out4970 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10580_fromTpeGen = _out4970;
              RAST._IType _10581_toTpeGen;
              RAST._IType _out4971;
              _out4971 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10581_toTpeGen = _out4971;
              RAST._IExpr _10582_recursiveGen;
              DCOMPUTF16._IOwnership _10583_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10584_recIdents;
              RAST._IExpr _out4972;
              DCOMPUTF16._IOwnership _out4973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4974;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4972, out _out4973, out _out4974);
              _10582_recursiveGen = _out4972;
              _10583_recOwned = _out4973;
              _10584_recIdents = _out4974;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10582_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10580_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10581_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4975;
              DCOMPUTF16._IOwnership _out4976;
              DCOMPUTF16.COMP.FromOwnership(r, _10583_recOwned, expectedOwnership, out _out4975, out _out4976);
              r = _out4975;
              resultingOwnership = _out4976;
              readIdents = _10584_recIdents;
            }
          } else if (_source604.is_SetBuilder) {
            DAST._IType _10585___mcc_h432 = _source604.dtor_element;
            {
              RAST._IType _10586_fromTpeGen;
              RAST._IType _out4977;
              _out4977 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10586_fromTpeGen = _out4977;
              RAST._IType _10587_toTpeGen;
              RAST._IType _out4978;
              _out4978 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10587_toTpeGen = _out4978;
              RAST._IExpr _10588_recursiveGen;
              DCOMPUTF16._IOwnership _10589_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10590_recIdents;
              RAST._IExpr _out4979;
              DCOMPUTF16._IOwnership _out4980;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4981;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4979, out _out4980, out _out4981);
              _10588_recursiveGen = _out4979;
              _10589_recOwned = _out4980;
              _10590_recIdents = _out4981;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10588_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10586_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10587_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4982;
              DCOMPUTF16._IOwnership _out4983;
              DCOMPUTF16.COMP.FromOwnership(r, _10589_recOwned, expectedOwnership, out _out4982, out _out4983);
              r = _out4982;
              resultingOwnership = _out4983;
              readIdents = _10590_recIdents;
            }
          } else if (_source604.is_MapBuilder) {
            DAST._IType _10591___mcc_h434 = _source604.dtor_key;
            DAST._IType _10592___mcc_h435 = _source604.dtor_value;
            {
              RAST._IType _10593_fromTpeGen;
              RAST._IType _out4984;
              _out4984 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10593_fromTpeGen = _out4984;
              RAST._IType _10594_toTpeGen;
              RAST._IType _out4985;
              _out4985 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10594_toTpeGen = _out4985;
              RAST._IExpr _10595_recursiveGen;
              DCOMPUTF16._IOwnership _10596_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10597_recIdents;
              RAST._IExpr _out4986;
              DCOMPUTF16._IOwnership _out4987;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4988;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4986, out _out4987, out _out4988);
              _10595_recursiveGen = _out4986;
              _10596_recOwned = _out4987;
              _10597_recIdents = _out4988;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10595_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10593_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10594_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4989;
              DCOMPUTF16._IOwnership _out4990;
              DCOMPUTF16.COMP.FromOwnership(r, _10596_recOwned, expectedOwnership, out _out4989, out _out4990);
              r = _out4989;
              resultingOwnership = _out4990;
              readIdents = _10597_recIdents;
            }
          } else if (_source604.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10598___mcc_h438 = _source604.dtor_args;
            DAST._IType _10599___mcc_h439 = _source604.dtor_result;
            {
              RAST._IType _10600_fromTpeGen;
              RAST._IType _out4991;
              _out4991 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10600_fromTpeGen = _out4991;
              RAST._IType _10601_toTpeGen;
              RAST._IType _out4992;
              _out4992 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10601_toTpeGen = _out4992;
              RAST._IExpr _10602_recursiveGen;
              DCOMPUTF16._IOwnership _10603_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10604_recIdents;
              RAST._IExpr _out4993;
              DCOMPUTF16._IOwnership _out4994;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4995;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out4993, out _out4994, out _out4995);
              _10602_recursiveGen = _out4993;
              _10603_recOwned = _out4994;
              _10604_recIdents = _out4995;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10602_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10600_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10601_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4996;
              DCOMPUTF16._IOwnership _out4997;
              DCOMPUTF16.COMP.FromOwnership(r, _10603_recOwned, expectedOwnership, out _out4996, out _out4997);
              r = _out4996;
              resultingOwnership = _out4997;
              readIdents = _10604_recIdents;
            }
          } else if (_source604.is_Primitive) {
            DAST._IPrimitive _10605___mcc_h442 = _source604.dtor_Primitive_a0;
            {
              RAST._IType _10606_fromTpeGen;
              RAST._IType _out4998;
              _out4998 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10606_fromTpeGen = _out4998;
              RAST._IType _10607_toTpeGen;
              RAST._IType _out4999;
              _out4999 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10607_toTpeGen = _out4999;
              RAST._IExpr _10608_recursiveGen;
              DCOMPUTF16._IOwnership _10609_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10610_recIdents;
              RAST._IExpr _out5000;
              DCOMPUTF16._IOwnership _out5001;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5002;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5000, out _out5001, out _out5002);
              _10608_recursiveGen = _out5000;
              _10609_recOwned = _out5001;
              _10610_recIdents = _out5002;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10608_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10606_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10607_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5003;
              DCOMPUTF16._IOwnership _out5004;
              DCOMPUTF16.COMP.FromOwnership(r, _10609_recOwned, expectedOwnership, out _out5003, out _out5004);
              r = _out5003;
              resultingOwnership = _out5004;
              readIdents = _10610_recIdents;
            }
          } else if (_source604.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10611___mcc_h444 = _source604.dtor_Passthrough_a0;
            {
              RAST._IType _10612_fromTpeGen;
              RAST._IType _out5005;
              _out5005 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10612_fromTpeGen = _out5005;
              RAST._IType _10613_toTpeGen;
              RAST._IType _out5006;
              _out5006 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10613_toTpeGen = _out5006;
              RAST._IExpr _10614_recursiveGen;
              DCOMPUTF16._IOwnership _10615_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10616_recIdents;
              RAST._IExpr _out5007;
              DCOMPUTF16._IOwnership _out5008;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5009;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5007, out _out5008, out _out5009);
              _10614_recursiveGen = _out5007;
              _10615_recOwned = _out5008;
              _10616_recIdents = _out5009;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10614_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10612_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10613_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5010;
              DCOMPUTF16._IOwnership _out5011;
              DCOMPUTF16.COMP.FromOwnership(r, _10615_recOwned, expectedOwnership, out _out5010, out _out5011);
              r = _out5010;
              resultingOwnership = _out5011;
              readIdents = _10616_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10617___mcc_h446 = _source604.dtor_TypeArg_a0;
            {
              RAST._IType _10618_fromTpeGen;
              RAST._IType _out5012;
              _out5012 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10618_fromTpeGen = _out5012;
              RAST._IType _10619_toTpeGen;
              RAST._IType _out5013;
              _out5013 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10619_toTpeGen = _out5013;
              RAST._IExpr _10620_recursiveGen;
              DCOMPUTF16._IOwnership _10621_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10622_recIdents;
              RAST._IExpr _out5014;
              DCOMPUTF16._IOwnership _out5015;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5016;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5014, out _out5015, out _out5016);
              _10620_recursiveGen = _out5014;
              _10621_recOwned = _out5015;
              _10622_recIdents = _out5016;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10620_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10618_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10619_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5017;
              DCOMPUTF16._IOwnership _out5018;
              DCOMPUTF16.COMP.FromOwnership(r, _10621_recOwned, expectedOwnership, out _out5017, out _out5018);
              r = _out5017;
              resultingOwnership = _out5018;
              readIdents = _10622_recIdents;
            }
          }
        } else if (_source565.is_Array) {
          DAST._IType _10623___mcc_h448 = _source565.dtor_element;
          BigInteger _10624___mcc_h449 = _source565.dtor_dims;
          DAST._IType _source609 = _9615___mcc_h1;
          if (_source609.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10625___mcc_h456 = _source609.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10626___mcc_h457 = _source609.dtor_typeArgs;
            DAST._IResolvedType _10627___mcc_h458 = _source609.dtor_resolved;
            DAST._IResolvedType _source610 = _10627___mcc_h458;
            if (_source610.is_AllocatedDatatype) {
              DAST._IDatatypeType _10628___mcc_h462 = _source610.dtor_datatypeType;
              {
                RAST._IType _10629_fromTpeGen;
                RAST._IType _out5019;
                _out5019 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10629_fromTpeGen = _out5019;
                RAST._IType _10630_toTpeGen;
                RAST._IType _out5020;
                _out5020 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10630_toTpeGen = _out5020;
                RAST._IExpr _10631_recursiveGen;
                DCOMPUTF16._IOwnership _10632_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10633_recIdents;
                RAST._IExpr _out5021;
                DCOMPUTF16._IOwnership _out5022;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5023;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5021, out _out5022, out _out5023);
                _10631_recursiveGen = _out5021;
                _10632_recOwned = _out5022;
                _10633_recIdents = _out5023;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10631_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10629_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10630_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5024;
                DCOMPUTF16._IOwnership _out5025;
                DCOMPUTF16.COMP.FromOwnership(r, _10632_recOwned, expectedOwnership, out _out5024, out _out5025);
                r = _out5024;
                resultingOwnership = _out5025;
                readIdents = _10633_recIdents;
              }
            } else if (_source610.is_Datatype) {
              DAST._IDatatypeType _10634___mcc_h464 = _source610.dtor_datatypeType;
              {
                RAST._IType _10635_fromTpeGen;
                RAST._IType _out5026;
                _out5026 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10635_fromTpeGen = _out5026;
                RAST._IType _10636_toTpeGen;
                RAST._IType _out5027;
                _out5027 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10636_toTpeGen = _out5027;
                RAST._IExpr _10637_recursiveGen;
                DCOMPUTF16._IOwnership _10638_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10639_recIdents;
                RAST._IExpr _out5028;
                DCOMPUTF16._IOwnership _out5029;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5030;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5028, out _out5029, out _out5030);
                _10637_recursiveGen = _out5028;
                _10638_recOwned = _out5029;
                _10639_recIdents = _out5030;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10637_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10635_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10636_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5031;
                DCOMPUTF16._IOwnership _out5032;
                DCOMPUTF16.COMP.FromOwnership(r, _10638_recOwned, expectedOwnership, out _out5031, out _out5032);
                r = _out5031;
                resultingOwnership = _out5032;
                readIdents = _10639_recIdents;
              }
            } else if (_source610.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10640___mcc_h466 = _source610.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10641___mcc_h467 = _source610.dtor_attributes;
              {
                RAST._IType _10642_fromTpeGen;
                RAST._IType _out5033;
                _out5033 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10642_fromTpeGen = _out5033;
                RAST._IType _10643_toTpeGen;
                RAST._IType _out5034;
                _out5034 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10643_toTpeGen = _out5034;
                RAST._IExpr _10644_recursiveGen;
                DCOMPUTF16._IOwnership _10645_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10646_recIdents;
                RAST._IExpr _out5035;
                DCOMPUTF16._IOwnership _out5036;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5037;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5035, out _out5036, out _out5037);
                _10644_recursiveGen = _out5035;
                _10645_recOwned = _out5036;
                _10646_recIdents = _out5037;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10644_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10642_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10643_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5038;
                DCOMPUTF16._IOwnership _out5039;
                DCOMPUTF16.COMP.FromOwnership(r, _10645_recOwned, expectedOwnership, out _out5038, out _out5039);
                r = _out5038;
                resultingOwnership = _out5039;
                readIdents = _10646_recIdents;
              }
            } else {
              DAST._IType _10647___mcc_h470 = _source610.dtor_baseType;
              DAST._INewtypeRange _10648___mcc_h471 = _source610.dtor_range;
              bool _10649___mcc_h472 = _source610.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10650___mcc_h473 = _source610.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10651_attributes = _10650___mcc_h473;
              bool _10652_erase = _10649___mcc_h472;
              DAST._INewtypeRange _10653_range = _10648___mcc_h471;
              DAST._IType _10654_b = _10647___mcc_h470;
              {
                Std.Wrappers._IOption<RAST._IType> _10655_nativeToType;
                _10655_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10654_b, _10653_range);
                if (object.Equals(_9609_fromTpe, _10654_b)) {
                  RAST._IExpr _10656_recursiveGen;
                  DCOMPUTF16._IOwnership _10657_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10658_recIdents;
                  RAST._IExpr _out5040;
                  DCOMPUTF16._IOwnership _out5041;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5042;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5040, out _out5041, out _out5042);
                  _10656_recursiveGen = _out5040;
                  _10657_recOwned = _out5041;
                  _10658_recIdents = _out5042;
                  readIdents = _10658_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source611 = _10655_nativeToType;
                  if (_source611.is_None) {
                    if (_10652_erase) {
                      r = _10656_recursiveGen;
                    } else {
                      RAST._IType _10659_rhsType;
                      RAST._IType _out5043;
                      _out5043 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _10659_rhsType = _out5043;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10659_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10656_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5044;
                    DCOMPUTF16._IOwnership _out5045;
                    DCOMPUTF16.COMP.FromOwnership(r, _10657_recOwned, expectedOwnership, out _out5044, out _out5045);
                    r = _out5044;
                    resultingOwnership = _out5045;
                  } else {
                    RAST._IType _10660___mcc_h1648 = _source611.dtor_value;
                    RAST._IType _10661_v = _10660___mcc_h1648;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10656_recursiveGen, RAST.Expr.create_ExprFromType(_10661_v)));
                    RAST._IExpr _out5046;
                    DCOMPUTF16._IOwnership _out5047;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5046, out _out5047);
                    r = _out5046;
                    resultingOwnership = _out5047;
                  }
                } else {
                  if ((_10655_nativeToType).is_Some) {
                    DAST._IType _source612 = _9609_fromTpe;
                    if (_source612.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10662___mcc_h1649 = _source612.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10663___mcc_h1650 = _source612.dtor_typeArgs;
                      DAST._IResolvedType _10664___mcc_h1651 = _source612.dtor_resolved;
                      DAST._IResolvedType _source613 = _10664___mcc_h1651;
                      if (_source613.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10665___mcc_h1655 = _source613.dtor_datatypeType;
                      } else if (_source613.is_Datatype) {
                        DAST._IDatatypeType _10666___mcc_h1657 = _source613.dtor_datatypeType;
                      } else if (_source613.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10667___mcc_h1659 = _source613.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10668___mcc_h1660 = _source613.dtor_attributes;
                      } else {
                        DAST._IType _10669___mcc_h1663 = _source613.dtor_baseType;
                        DAST._INewtypeRange _10670___mcc_h1664 = _source613.dtor_range;
                        bool _10671___mcc_h1665 = _source613.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10672___mcc_h1666 = _source613.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10673_attributes0 = _10672___mcc_h1666;
                        bool _10674_erase0 = _10671___mcc_h1665;
                        DAST._INewtypeRange _10675_range0 = _10670___mcc_h1664;
                        DAST._IType _10676_b0 = _10669___mcc_h1663;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10677_nativeFromType;
                          _10677_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10676_b0, _10675_range0);
                          if ((_10677_nativeFromType).is_Some) {
                            RAST._IExpr _10678_recursiveGen;
                            DCOMPUTF16._IOwnership _10679_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10680_recIdents;
                            RAST._IExpr _out5048;
                            DCOMPUTF16._IOwnership _out5049;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5050;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5048, out _out5049, out _out5050);
                            _10678_recursiveGen = _out5048;
                            _10679_recOwned = _out5049;
                            _10680_recIdents = _out5050;
                            RAST._IExpr _out5051;
                            DCOMPUTF16._IOwnership _out5052;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10678_recursiveGen, (_10655_nativeToType).dtor_value), _10679_recOwned, expectedOwnership, out _out5051, out _out5052);
                            r = _out5051;
                            resultingOwnership = _out5052;
                            readIdents = _10680_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source612.is_Nullable) {
                      DAST._IType _10681___mcc_h1671 = _source612.dtor_Nullable_a0;
                    } else if (_source612.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10682___mcc_h1673 = _source612.dtor_Tuple_a0;
                    } else if (_source612.is_Array) {
                      DAST._IType _10683___mcc_h1675 = _source612.dtor_element;
                      BigInteger _10684___mcc_h1676 = _source612.dtor_dims;
                    } else if (_source612.is_Seq) {
                      DAST._IType _10685___mcc_h1679 = _source612.dtor_element;
                    } else if (_source612.is_Set) {
                      DAST._IType _10686___mcc_h1681 = _source612.dtor_element;
                    } else if (_source612.is_Multiset) {
                      DAST._IType _10687___mcc_h1683 = _source612.dtor_element;
                    } else if (_source612.is_Map) {
                      DAST._IType _10688___mcc_h1685 = _source612.dtor_key;
                      DAST._IType _10689___mcc_h1686 = _source612.dtor_value;
                    } else if (_source612.is_SetBuilder) {
                      DAST._IType _10690___mcc_h1689 = _source612.dtor_element;
                    } else if (_source612.is_MapBuilder) {
                      DAST._IType _10691___mcc_h1691 = _source612.dtor_key;
                      DAST._IType _10692___mcc_h1692 = _source612.dtor_value;
                    } else if (_source612.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10693___mcc_h1695 = _source612.dtor_args;
                      DAST._IType _10694___mcc_h1696 = _source612.dtor_result;
                    } else if (_source612.is_Primitive) {
                      DAST._IPrimitive _10695___mcc_h1699 = _source612.dtor_Primitive_a0;
                    } else if (_source612.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10696___mcc_h1701 = _source612.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10697___mcc_h1703 = _source612.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10698_recursiveGen;
                      DCOMPUTF16._IOwnership _10699_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10700_recIdents;
                      RAST._IExpr _out5053;
                      DCOMPUTF16._IOwnership _out5054;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5055;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5053, out _out5054, out _out5055);
                      _10698_recursiveGen = _out5053;
                      _10699_recOwned = _out5054;
                      _10700_recIdents = _out5055;
                      RAST._IExpr _out5056;
                      DCOMPUTF16._IOwnership _out5057;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10698_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10655_nativeToType).dtor_value), _10699_recOwned, expectedOwnership, out _out5056, out _out5057);
                      r = _out5056;
                      resultingOwnership = _out5057;
                      readIdents = _10700_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5058;
                  DCOMPUTF16._IOwnership _out5059;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5060;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10654_b), _10654_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5058, out _out5059, out _out5060);
                  r = _out5058;
                  resultingOwnership = _out5059;
                  readIdents = _out5060;
                }
              }
            }
          } else if (_source609.is_Nullable) {
            DAST._IType _10701___mcc_h478 = _source609.dtor_Nullable_a0;
            {
              RAST._IExpr _10702_recursiveGen;
              DCOMPUTF16._IOwnership _10703_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10704_recIdents;
              RAST._IExpr _out5061;
              DCOMPUTF16._IOwnership _out5062;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5063;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5061, out _out5062, out _out5063);
              _10702_recursiveGen = _out5061;
              _10703_recOwned = _out5062;
              _10704_recIdents = _out5063;
              r = _10702_recursiveGen;
              if (object.Equals(_10703_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5064;
              DCOMPUTF16._IOwnership _out5065;
              DCOMPUTF16.COMP.FromOwnership(r, _10703_recOwned, expectedOwnership, out _out5064, out _out5065);
              r = _out5064;
              resultingOwnership = _out5065;
              readIdents = _10704_recIdents;
            }
          } else if (_source609.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10705___mcc_h480 = _source609.dtor_Tuple_a0;
            {
              RAST._IType _10706_fromTpeGen;
              RAST._IType _out5066;
              _out5066 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10706_fromTpeGen = _out5066;
              RAST._IType _10707_toTpeGen;
              RAST._IType _out5067;
              _out5067 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10707_toTpeGen = _out5067;
              RAST._IExpr _10708_recursiveGen;
              DCOMPUTF16._IOwnership _10709_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10710_recIdents;
              RAST._IExpr _out5068;
              DCOMPUTF16._IOwnership _out5069;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5070;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5068, out _out5069, out _out5070);
              _10708_recursiveGen = _out5068;
              _10709_recOwned = _out5069;
              _10710_recIdents = _out5070;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10708_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10706_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10707_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5071;
              DCOMPUTF16._IOwnership _out5072;
              DCOMPUTF16.COMP.FromOwnership(r, _10709_recOwned, expectedOwnership, out _out5071, out _out5072);
              r = _out5071;
              resultingOwnership = _out5072;
              readIdents = _10710_recIdents;
            }
          } else if (_source609.is_Array) {
            DAST._IType _10711___mcc_h482 = _source609.dtor_element;
            BigInteger _10712___mcc_h483 = _source609.dtor_dims;
            {
              RAST._IType _10713_fromTpeGen;
              RAST._IType _out5073;
              _out5073 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10713_fromTpeGen = _out5073;
              RAST._IType _10714_toTpeGen;
              RAST._IType _out5074;
              _out5074 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10714_toTpeGen = _out5074;
              RAST._IExpr _10715_recursiveGen;
              DCOMPUTF16._IOwnership _10716_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10717_recIdents;
              RAST._IExpr _out5075;
              DCOMPUTF16._IOwnership _out5076;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5077;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5075, out _out5076, out _out5077);
              _10715_recursiveGen = _out5075;
              _10716_recOwned = _out5076;
              _10717_recIdents = _out5077;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10715_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10713_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10714_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5078;
              DCOMPUTF16._IOwnership _out5079;
              DCOMPUTF16.COMP.FromOwnership(r, _10716_recOwned, expectedOwnership, out _out5078, out _out5079);
              r = _out5078;
              resultingOwnership = _out5079;
              readIdents = _10717_recIdents;
            }
          } else if (_source609.is_Seq) {
            DAST._IType _10718___mcc_h486 = _source609.dtor_element;
            {
              RAST._IType _10719_fromTpeGen;
              RAST._IType _out5080;
              _out5080 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10719_fromTpeGen = _out5080;
              RAST._IType _10720_toTpeGen;
              RAST._IType _out5081;
              _out5081 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10720_toTpeGen = _out5081;
              RAST._IExpr _10721_recursiveGen;
              DCOMPUTF16._IOwnership _10722_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10723_recIdents;
              RAST._IExpr _out5082;
              DCOMPUTF16._IOwnership _out5083;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5084;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5082, out _out5083, out _out5084);
              _10721_recursiveGen = _out5082;
              _10722_recOwned = _out5083;
              _10723_recIdents = _out5084;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10721_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10719_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10720_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5085;
              DCOMPUTF16._IOwnership _out5086;
              DCOMPUTF16.COMP.FromOwnership(r, _10722_recOwned, expectedOwnership, out _out5085, out _out5086);
              r = _out5085;
              resultingOwnership = _out5086;
              readIdents = _10723_recIdents;
            }
          } else if (_source609.is_Set) {
            DAST._IType _10724___mcc_h488 = _source609.dtor_element;
            {
              RAST._IType _10725_fromTpeGen;
              RAST._IType _out5087;
              _out5087 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10725_fromTpeGen = _out5087;
              RAST._IType _10726_toTpeGen;
              RAST._IType _out5088;
              _out5088 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10726_toTpeGen = _out5088;
              RAST._IExpr _10727_recursiveGen;
              DCOMPUTF16._IOwnership _10728_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10729_recIdents;
              RAST._IExpr _out5089;
              DCOMPUTF16._IOwnership _out5090;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5091;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5089, out _out5090, out _out5091);
              _10727_recursiveGen = _out5089;
              _10728_recOwned = _out5090;
              _10729_recIdents = _out5091;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10727_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10725_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10726_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5092;
              DCOMPUTF16._IOwnership _out5093;
              DCOMPUTF16.COMP.FromOwnership(r, _10728_recOwned, expectedOwnership, out _out5092, out _out5093);
              r = _out5092;
              resultingOwnership = _out5093;
              readIdents = _10729_recIdents;
            }
          } else if (_source609.is_Multiset) {
            DAST._IType _10730___mcc_h490 = _source609.dtor_element;
            {
              RAST._IType _10731_fromTpeGen;
              RAST._IType _out5094;
              _out5094 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10731_fromTpeGen = _out5094;
              RAST._IType _10732_toTpeGen;
              RAST._IType _out5095;
              _out5095 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10732_toTpeGen = _out5095;
              RAST._IExpr _10733_recursiveGen;
              DCOMPUTF16._IOwnership _10734_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10735_recIdents;
              RAST._IExpr _out5096;
              DCOMPUTF16._IOwnership _out5097;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5098;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5096, out _out5097, out _out5098);
              _10733_recursiveGen = _out5096;
              _10734_recOwned = _out5097;
              _10735_recIdents = _out5098;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10733_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10731_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10732_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5099;
              DCOMPUTF16._IOwnership _out5100;
              DCOMPUTF16.COMP.FromOwnership(r, _10734_recOwned, expectedOwnership, out _out5099, out _out5100);
              r = _out5099;
              resultingOwnership = _out5100;
              readIdents = _10735_recIdents;
            }
          } else if (_source609.is_Map) {
            DAST._IType _10736___mcc_h492 = _source609.dtor_key;
            DAST._IType _10737___mcc_h493 = _source609.dtor_value;
            {
              RAST._IType _10738_fromTpeGen;
              RAST._IType _out5101;
              _out5101 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10738_fromTpeGen = _out5101;
              RAST._IType _10739_toTpeGen;
              RAST._IType _out5102;
              _out5102 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10739_toTpeGen = _out5102;
              RAST._IExpr _10740_recursiveGen;
              DCOMPUTF16._IOwnership _10741_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10742_recIdents;
              RAST._IExpr _out5103;
              DCOMPUTF16._IOwnership _out5104;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5105;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5103, out _out5104, out _out5105);
              _10740_recursiveGen = _out5103;
              _10741_recOwned = _out5104;
              _10742_recIdents = _out5105;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10740_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10738_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10739_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5106;
              DCOMPUTF16._IOwnership _out5107;
              DCOMPUTF16.COMP.FromOwnership(r, _10741_recOwned, expectedOwnership, out _out5106, out _out5107);
              r = _out5106;
              resultingOwnership = _out5107;
              readIdents = _10742_recIdents;
            }
          } else if (_source609.is_SetBuilder) {
            DAST._IType _10743___mcc_h496 = _source609.dtor_element;
            {
              RAST._IType _10744_fromTpeGen;
              RAST._IType _out5108;
              _out5108 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10744_fromTpeGen = _out5108;
              RAST._IType _10745_toTpeGen;
              RAST._IType _out5109;
              _out5109 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10745_toTpeGen = _out5109;
              RAST._IExpr _10746_recursiveGen;
              DCOMPUTF16._IOwnership _10747_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10748_recIdents;
              RAST._IExpr _out5110;
              DCOMPUTF16._IOwnership _out5111;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5112;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5110, out _out5111, out _out5112);
              _10746_recursiveGen = _out5110;
              _10747_recOwned = _out5111;
              _10748_recIdents = _out5112;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10746_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10744_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10745_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5113;
              DCOMPUTF16._IOwnership _out5114;
              DCOMPUTF16.COMP.FromOwnership(r, _10747_recOwned, expectedOwnership, out _out5113, out _out5114);
              r = _out5113;
              resultingOwnership = _out5114;
              readIdents = _10748_recIdents;
            }
          } else if (_source609.is_MapBuilder) {
            DAST._IType _10749___mcc_h498 = _source609.dtor_key;
            DAST._IType _10750___mcc_h499 = _source609.dtor_value;
            {
              RAST._IType _10751_fromTpeGen;
              RAST._IType _out5115;
              _out5115 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10751_fromTpeGen = _out5115;
              RAST._IType _10752_toTpeGen;
              RAST._IType _out5116;
              _out5116 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10752_toTpeGen = _out5116;
              RAST._IExpr _10753_recursiveGen;
              DCOMPUTF16._IOwnership _10754_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10755_recIdents;
              RAST._IExpr _out5117;
              DCOMPUTF16._IOwnership _out5118;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5119;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5117, out _out5118, out _out5119);
              _10753_recursiveGen = _out5117;
              _10754_recOwned = _out5118;
              _10755_recIdents = _out5119;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10753_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10751_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10752_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5120;
              DCOMPUTF16._IOwnership _out5121;
              DCOMPUTF16.COMP.FromOwnership(r, _10754_recOwned, expectedOwnership, out _out5120, out _out5121);
              r = _out5120;
              resultingOwnership = _out5121;
              readIdents = _10755_recIdents;
            }
          } else if (_source609.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10756___mcc_h502 = _source609.dtor_args;
            DAST._IType _10757___mcc_h503 = _source609.dtor_result;
            {
              RAST._IType _10758_fromTpeGen;
              RAST._IType _out5122;
              _out5122 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10758_fromTpeGen = _out5122;
              RAST._IType _10759_toTpeGen;
              RAST._IType _out5123;
              _out5123 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10759_toTpeGen = _out5123;
              RAST._IExpr _10760_recursiveGen;
              DCOMPUTF16._IOwnership _10761_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10762_recIdents;
              RAST._IExpr _out5124;
              DCOMPUTF16._IOwnership _out5125;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5126;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5124, out _out5125, out _out5126);
              _10760_recursiveGen = _out5124;
              _10761_recOwned = _out5125;
              _10762_recIdents = _out5126;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10760_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10758_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10759_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5127;
              DCOMPUTF16._IOwnership _out5128;
              DCOMPUTF16.COMP.FromOwnership(r, _10761_recOwned, expectedOwnership, out _out5127, out _out5128);
              r = _out5127;
              resultingOwnership = _out5128;
              readIdents = _10762_recIdents;
            }
          } else if (_source609.is_Primitive) {
            DAST._IPrimitive _10763___mcc_h506 = _source609.dtor_Primitive_a0;
            {
              RAST._IType _10764_fromTpeGen;
              RAST._IType _out5129;
              _out5129 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10764_fromTpeGen = _out5129;
              RAST._IType _10765_toTpeGen;
              RAST._IType _out5130;
              _out5130 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10765_toTpeGen = _out5130;
              RAST._IExpr _10766_recursiveGen;
              DCOMPUTF16._IOwnership _10767_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10768_recIdents;
              RAST._IExpr _out5131;
              DCOMPUTF16._IOwnership _out5132;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5133;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5131, out _out5132, out _out5133);
              _10766_recursiveGen = _out5131;
              _10767_recOwned = _out5132;
              _10768_recIdents = _out5133;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10766_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10764_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10765_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5134;
              DCOMPUTF16._IOwnership _out5135;
              DCOMPUTF16.COMP.FromOwnership(r, _10767_recOwned, expectedOwnership, out _out5134, out _out5135);
              r = _out5134;
              resultingOwnership = _out5135;
              readIdents = _10768_recIdents;
            }
          } else if (_source609.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10769___mcc_h508 = _source609.dtor_Passthrough_a0;
            {
              RAST._IType _10770_fromTpeGen;
              RAST._IType _out5136;
              _out5136 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10770_fromTpeGen = _out5136;
              RAST._IType _10771_toTpeGen;
              RAST._IType _out5137;
              _out5137 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10771_toTpeGen = _out5137;
              RAST._IExpr _10772_recursiveGen;
              DCOMPUTF16._IOwnership _10773_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10774_recIdents;
              RAST._IExpr _out5138;
              DCOMPUTF16._IOwnership _out5139;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5140;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5138, out _out5139, out _out5140);
              _10772_recursiveGen = _out5138;
              _10773_recOwned = _out5139;
              _10774_recIdents = _out5140;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10772_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10770_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10771_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5141;
              DCOMPUTF16._IOwnership _out5142;
              DCOMPUTF16.COMP.FromOwnership(r, _10773_recOwned, expectedOwnership, out _out5141, out _out5142);
              r = _out5141;
              resultingOwnership = _out5142;
              readIdents = _10774_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10775___mcc_h510 = _source609.dtor_TypeArg_a0;
            {
              RAST._IType _10776_fromTpeGen;
              RAST._IType _out5143;
              _out5143 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10776_fromTpeGen = _out5143;
              RAST._IType _10777_toTpeGen;
              RAST._IType _out5144;
              _out5144 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10777_toTpeGen = _out5144;
              RAST._IExpr _10778_recursiveGen;
              DCOMPUTF16._IOwnership _10779_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10780_recIdents;
              RAST._IExpr _out5145;
              DCOMPUTF16._IOwnership _out5146;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5147;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5145, out _out5146, out _out5147);
              _10778_recursiveGen = _out5145;
              _10779_recOwned = _out5146;
              _10780_recIdents = _out5147;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10778_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10776_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10777_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5148;
              DCOMPUTF16._IOwnership _out5149;
              DCOMPUTF16.COMP.FromOwnership(r, _10779_recOwned, expectedOwnership, out _out5148, out _out5149);
              r = _out5148;
              resultingOwnership = _out5149;
              readIdents = _10780_recIdents;
            }
          }
        } else if (_source565.is_Seq) {
          DAST._IType _10781___mcc_h512 = _source565.dtor_element;
          DAST._IType _source614 = _9615___mcc_h1;
          if (_source614.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10782___mcc_h516 = _source614.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10783___mcc_h517 = _source614.dtor_typeArgs;
            DAST._IResolvedType _10784___mcc_h518 = _source614.dtor_resolved;
            DAST._IResolvedType _source615 = _10784___mcc_h518;
            if (_source615.is_AllocatedDatatype) {
              DAST._IDatatypeType _10785___mcc_h522 = _source615.dtor_datatypeType;
              {
                RAST._IType _10786_fromTpeGen;
                RAST._IType _out5150;
                _out5150 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10786_fromTpeGen = _out5150;
                RAST._IType _10787_toTpeGen;
                RAST._IType _out5151;
                _out5151 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10787_toTpeGen = _out5151;
                RAST._IExpr _10788_recursiveGen;
                DCOMPUTF16._IOwnership _10789_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10790_recIdents;
                RAST._IExpr _out5152;
                DCOMPUTF16._IOwnership _out5153;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5154;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5152, out _out5153, out _out5154);
                _10788_recursiveGen = _out5152;
                _10789_recOwned = _out5153;
                _10790_recIdents = _out5154;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10788_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10786_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10787_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5155;
                DCOMPUTF16._IOwnership _out5156;
                DCOMPUTF16.COMP.FromOwnership(r, _10789_recOwned, expectedOwnership, out _out5155, out _out5156);
                r = _out5155;
                resultingOwnership = _out5156;
                readIdents = _10790_recIdents;
              }
            } else if (_source615.is_Datatype) {
              DAST._IDatatypeType _10791___mcc_h524 = _source615.dtor_datatypeType;
              {
                RAST._IType _10792_fromTpeGen;
                RAST._IType _out5157;
                _out5157 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10792_fromTpeGen = _out5157;
                RAST._IType _10793_toTpeGen;
                RAST._IType _out5158;
                _out5158 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10793_toTpeGen = _out5158;
                RAST._IExpr _10794_recursiveGen;
                DCOMPUTF16._IOwnership _10795_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10796_recIdents;
                RAST._IExpr _out5159;
                DCOMPUTF16._IOwnership _out5160;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5161;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5159, out _out5160, out _out5161);
                _10794_recursiveGen = _out5159;
                _10795_recOwned = _out5160;
                _10796_recIdents = _out5161;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10794_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10792_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10793_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5162;
                DCOMPUTF16._IOwnership _out5163;
                DCOMPUTF16.COMP.FromOwnership(r, _10795_recOwned, expectedOwnership, out _out5162, out _out5163);
                r = _out5162;
                resultingOwnership = _out5163;
                readIdents = _10796_recIdents;
              }
            } else if (_source615.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10797___mcc_h526 = _source615.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10798___mcc_h527 = _source615.dtor_attributes;
              {
                RAST._IType _10799_fromTpeGen;
                RAST._IType _out5164;
                _out5164 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10799_fromTpeGen = _out5164;
                RAST._IType _10800_toTpeGen;
                RAST._IType _out5165;
                _out5165 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10800_toTpeGen = _out5165;
                RAST._IExpr _10801_recursiveGen;
                DCOMPUTF16._IOwnership _10802_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10803_recIdents;
                RAST._IExpr _out5166;
                DCOMPUTF16._IOwnership _out5167;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5168;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5166, out _out5167, out _out5168);
                _10801_recursiveGen = _out5166;
                _10802_recOwned = _out5167;
                _10803_recIdents = _out5168;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10801_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10799_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10800_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5169;
                DCOMPUTF16._IOwnership _out5170;
                DCOMPUTF16.COMP.FromOwnership(r, _10802_recOwned, expectedOwnership, out _out5169, out _out5170);
                r = _out5169;
                resultingOwnership = _out5170;
                readIdents = _10803_recIdents;
              }
            } else {
              DAST._IType _10804___mcc_h530 = _source615.dtor_baseType;
              DAST._INewtypeRange _10805___mcc_h531 = _source615.dtor_range;
              bool _10806___mcc_h532 = _source615.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10807___mcc_h533 = _source615.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10808_attributes = _10807___mcc_h533;
              bool _10809_erase = _10806___mcc_h532;
              DAST._INewtypeRange _10810_range = _10805___mcc_h531;
              DAST._IType _10811_b = _10804___mcc_h530;
              {
                Std.Wrappers._IOption<RAST._IType> _10812_nativeToType;
                _10812_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10811_b, _10810_range);
                if (object.Equals(_9609_fromTpe, _10811_b)) {
                  RAST._IExpr _10813_recursiveGen;
                  DCOMPUTF16._IOwnership _10814_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10815_recIdents;
                  RAST._IExpr _out5171;
                  DCOMPUTF16._IOwnership _out5172;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5173;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5171, out _out5172, out _out5173);
                  _10813_recursiveGen = _out5171;
                  _10814_recOwned = _out5172;
                  _10815_recIdents = _out5173;
                  readIdents = _10815_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source616 = _10812_nativeToType;
                  if (_source616.is_None) {
                    if (_10809_erase) {
                      r = _10813_recursiveGen;
                    } else {
                      RAST._IType _10816_rhsType;
                      RAST._IType _out5174;
                      _out5174 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _10816_rhsType = _out5174;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10816_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10813_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5175;
                    DCOMPUTF16._IOwnership _out5176;
                    DCOMPUTF16.COMP.FromOwnership(r, _10814_recOwned, expectedOwnership, out _out5175, out _out5176);
                    r = _out5175;
                    resultingOwnership = _out5176;
                  } else {
                    RAST._IType _10817___mcc_h1705 = _source616.dtor_value;
                    RAST._IType _10818_v = _10817___mcc_h1705;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10813_recursiveGen, RAST.Expr.create_ExprFromType(_10818_v)));
                    RAST._IExpr _out5177;
                    DCOMPUTF16._IOwnership _out5178;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5177, out _out5178);
                    r = _out5177;
                    resultingOwnership = _out5178;
                  }
                } else {
                  if ((_10812_nativeToType).is_Some) {
                    DAST._IType _source617 = _9609_fromTpe;
                    if (_source617.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10819___mcc_h1706 = _source617.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10820___mcc_h1707 = _source617.dtor_typeArgs;
                      DAST._IResolvedType _10821___mcc_h1708 = _source617.dtor_resolved;
                      DAST._IResolvedType _source618 = _10821___mcc_h1708;
                      if (_source618.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10822___mcc_h1712 = _source618.dtor_datatypeType;
                      } else if (_source618.is_Datatype) {
                        DAST._IDatatypeType _10823___mcc_h1714 = _source618.dtor_datatypeType;
                      } else if (_source618.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10824___mcc_h1716 = _source618.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10825___mcc_h1717 = _source618.dtor_attributes;
                      } else {
                        DAST._IType _10826___mcc_h1720 = _source618.dtor_baseType;
                        DAST._INewtypeRange _10827___mcc_h1721 = _source618.dtor_range;
                        bool _10828___mcc_h1722 = _source618.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10829___mcc_h1723 = _source618.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10830_attributes0 = _10829___mcc_h1723;
                        bool _10831_erase0 = _10828___mcc_h1722;
                        DAST._INewtypeRange _10832_range0 = _10827___mcc_h1721;
                        DAST._IType _10833_b0 = _10826___mcc_h1720;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10834_nativeFromType;
                          _10834_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10833_b0, _10832_range0);
                          if ((_10834_nativeFromType).is_Some) {
                            RAST._IExpr _10835_recursiveGen;
                            DCOMPUTF16._IOwnership _10836_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10837_recIdents;
                            RAST._IExpr _out5179;
                            DCOMPUTF16._IOwnership _out5180;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5181;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5179, out _out5180, out _out5181);
                            _10835_recursiveGen = _out5179;
                            _10836_recOwned = _out5180;
                            _10837_recIdents = _out5181;
                            RAST._IExpr _out5182;
                            DCOMPUTF16._IOwnership _out5183;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10835_recursiveGen, (_10812_nativeToType).dtor_value), _10836_recOwned, expectedOwnership, out _out5182, out _out5183);
                            r = _out5182;
                            resultingOwnership = _out5183;
                            readIdents = _10837_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source617.is_Nullable) {
                      DAST._IType _10838___mcc_h1728 = _source617.dtor_Nullable_a0;
                    } else if (_source617.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10839___mcc_h1730 = _source617.dtor_Tuple_a0;
                    } else if (_source617.is_Array) {
                      DAST._IType _10840___mcc_h1732 = _source617.dtor_element;
                      BigInteger _10841___mcc_h1733 = _source617.dtor_dims;
                    } else if (_source617.is_Seq) {
                      DAST._IType _10842___mcc_h1736 = _source617.dtor_element;
                    } else if (_source617.is_Set) {
                      DAST._IType _10843___mcc_h1738 = _source617.dtor_element;
                    } else if (_source617.is_Multiset) {
                      DAST._IType _10844___mcc_h1740 = _source617.dtor_element;
                    } else if (_source617.is_Map) {
                      DAST._IType _10845___mcc_h1742 = _source617.dtor_key;
                      DAST._IType _10846___mcc_h1743 = _source617.dtor_value;
                    } else if (_source617.is_SetBuilder) {
                      DAST._IType _10847___mcc_h1746 = _source617.dtor_element;
                    } else if (_source617.is_MapBuilder) {
                      DAST._IType _10848___mcc_h1748 = _source617.dtor_key;
                      DAST._IType _10849___mcc_h1749 = _source617.dtor_value;
                    } else if (_source617.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10850___mcc_h1752 = _source617.dtor_args;
                      DAST._IType _10851___mcc_h1753 = _source617.dtor_result;
                    } else if (_source617.is_Primitive) {
                      DAST._IPrimitive _10852___mcc_h1756 = _source617.dtor_Primitive_a0;
                    } else if (_source617.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10853___mcc_h1758 = _source617.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10854___mcc_h1760 = _source617.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10855_recursiveGen;
                      DCOMPUTF16._IOwnership _10856_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10857_recIdents;
                      RAST._IExpr _out5184;
                      DCOMPUTF16._IOwnership _out5185;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5186;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5184, out _out5185, out _out5186);
                      _10855_recursiveGen = _out5184;
                      _10856_recOwned = _out5185;
                      _10857_recIdents = _out5186;
                      RAST._IExpr _out5187;
                      DCOMPUTF16._IOwnership _out5188;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10855_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10812_nativeToType).dtor_value), _10856_recOwned, expectedOwnership, out _out5187, out _out5188);
                      r = _out5187;
                      resultingOwnership = _out5188;
                      readIdents = _10857_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5189;
                  DCOMPUTF16._IOwnership _out5190;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5191;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10811_b), _10811_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5189, out _out5190, out _out5191);
                  r = _out5189;
                  resultingOwnership = _out5190;
                  readIdents = _out5191;
                }
              }
            }
          } else if (_source614.is_Nullable) {
            DAST._IType _10858___mcc_h538 = _source614.dtor_Nullable_a0;
            {
              RAST._IExpr _10859_recursiveGen;
              DCOMPUTF16._IOwnership _10860_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10861_recIdents;
              RAST._IExpr _out5192;
              DCOMPUTF16._IOwnership _out5193;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5194;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5192, out _out5193, out _out5194);
              _10859_recursiveGen = _out5192;
              _10860_recOwned = _out5193;
              _10861_recIdents = _out5194;
              r = _10859_recursiveGen;
              if (object.Equals(_10860_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5195;
              DCOMPUTF16._IOwnership _out5196;
              DCOMPUTF16.COMP.FromOwnership(r, _10860_recOwned, expectedOwnership, out _out5195, out _out5196);
              r = _out5195;
              resultingOwnership = _out5196;
              readIdents = _10861_recIdents;
            }
          } else if (_source614.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10862___mcc_h540 = _source614.dtor_Tuple_a0;
            {
              RAST._IType _10863_fromTpeGen;
              RAST._IType _out5197;
              _out5197 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10863_fromTpeGen = _out5197;
              RAST._IType _10864_toTpeGen;
              RAST._IType _out5198;
              _out5198 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10864_toTpeGen = _out5198;
              RAST._IExpr _10865_recursiveGen;
              DCOMPUTF16._IOwnership _10866_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10867_recIdents;
              RAST._IExpr _out5199;
              DCOMPUTF16._IOwnership _out5200;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5201;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5199, out _out5200, out _out5201);
              _10865_recursiveGen = _out5199;
              _10866_recOwned = _out5200;
              _10867_recIdents = _out5201;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10865_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10863_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10864_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5202;
              DCOMPUTF16._IOwnership _out5203;
              DCOMPUTF16.COMP.FromOwnership(r, _10866_recOwned, expectedOwnership, out _out5202, out _out5203);
              r = _out5202;
              resultingOwnership = _out5203;
              readIdents = _10867_recIdents;
            }
          } else if (_source614.is_Array) {
            DAST._IType _10868___mcc_h542 = _source614.dtor_element;
            BigInteger _10869___mcc_h543 = _source614.dtor_dims;
            {
              RAST._IType _10870_fromTpeGen;
              RAST._IType _out5204;
              _out5204 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10870_fromTpeGen = _out5204;
              RAST._IType _10871_toTpeGen;
              RAST._IType _out5205;
              _out5205 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10871_toTpeGen = _out5205;
              RAST._IExpr _10872_recursiveGen;
              DCOMPUTF16._IOwnership _10873_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10874_recIdents;
              RAST._IExpr _out5206;
              DCOMPUTF16._IOwnership _out5207;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5208;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5206, out _out5207, out _out5208);
              _10872_recursiveGen = _out5206;
              _10873_recOwned = _out5207;
              _10874_recIdents = _out5208;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10872_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10870_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10871_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5209;
              DCOMPUTF16._IOwnership _out5210;
              DCOMPUTF16.COMP.FromOwnership(r, _10873_recOwned, expectedOwnership, out _out5209, out _out5210);
              r = _out5209;
              resultingOwnership = _out5210;
              readIdents = _10874_recIdents;
            }
          } else if (_source614.is_Seq) {
            DAST._IType _10875___mcc_h546 = _source614.dtor_element;
            {
              RAST._IType _10876_fromTpeGen;
              RAST._IType _out5211;
              _out5211 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10876_fromTpeGen = _out5211;
              RAST._IType _10877_toTpeGen;
              RAST._IType _out5212;
              _out5212 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10877_toTpeGen = _out5212;
              RAST._IExpr _10878_recursiveGen;
              DCOMPUTF16._IOwnership _10879_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10880_recIdents;
              RAST._IExpr _out5213;
              DCOMPUTF16._IOwnership _out5214;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5215;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5213, out _out5214, out _out5215);
              _10878_recursiveGen = _out5213;
              _10879_recOwned = _out5214;
              _10880_recIdents = _out5215;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10878_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10876_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10877_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5216;
              DCOMPUTF16._IOwnership _out5217;
              DCOMPUTF16.COMP.FromOwnership(r, _10879_recOwned, expectedOwnership, out _out5216, out _out5217);
              r = _out5216;
              resultingOwnership = _out5217;
              readIdents = _10880_recIdents;
            }
          } else if (_source614.is_Set) {
            DAST._IType _10881___mcc_h548 = _source614.dtor_element;
            {
              RAST._IType _10882_fromTpeGen;
              RAST._IType _out5218;
              _out5218 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10882_fromTpeGen = _out5218;
              RAST._IType _10883_toTpeGen;
              RAST._IType _out5219;
              _out5219 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10883_toTpeGen = _out5219;
              RAST._IExpr _10884_recursiveGen;
              DCOMPUTF16._IOwnership _10885_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10886_recIdents;
              RAST._IExpr _out5220;
              DCOMPUTF16._IOwnership _out5221;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5222;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5220, out _out5221, out _out5222);
              _10884_recursiveGen = _out5220;
              _10885_recOwned = _out5221;
              _10886_recIdents = _out5222;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10884_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10882_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10883_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5223;
              DCOMPUTF16._IOwnership _out5224;
              DCOMPUTF16.COMP.FromOwnership(r, _10885_recOwned, expectedOwnership, out _out5223, out _out5224);
              r = _out5223;
              resultingOwnership = _out5224;
              readIdents = _10886_recIdents;
            }
          } else if (_source614.is_Multiset) {
            DAST._IType _10887___mcc_h550 = _source614.dtor_element;
            {
              RAST._IType _10888_fromTpeGen;
              RAST._IType _out5225;
              _out5225 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10888_fromTpeGen = _out5225;
              RAST._IType _10889_toTpeGen;
              RAST._IType _out5226;
              _out5226 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10889_toTpeGen = _out5226;
              RAST._IExpr _10890_recursiveGen;
              DCOMPUTF16._IOwnership _10891_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10892_recIdents;
              RAST._IExpr _out5227;
              DCOMPUTF16._IOwnership _out5228;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5229;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5227, out _out5228, out _out5229);
              _10890_recursiveGen = _out5227;
              _10891_recOwned = _out5228;
              _10892_recIdents = _out5229;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10890_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10888_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10889_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5230;
              DCOMPUTF16._IOwnership _out5231;
              DCOMPUTF16.COMP.FromOwnership(r, _10891_recOwned, expectedOwnership, out _out5230, out _out5231);
              r = _out5230;
              resultingOwnership = _out5231;
              readIdents = _10892_recIdents;
            }
          } else if (_source614.is_Map) {
            DAST._IType _10893___mcc_h552 = _source614.dtor_key;
            DAST._IType _10894___mcc_h553 = _source614.dtor_value;
            {
              RAST._IType _10895_fromTpeGen;
              RAST._IType _out5232;
              _out5232 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10895_fromTpeGen = _out5232;
              RAST._IType _10896_toTpeGen;
              RAST._IType _out5233;
              _out5233 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10896_toTpeGen = _out5233;
              RAST._IExpr _10897_recursiveGen;
              DCOMPUTF16._IOwnership _10898_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10899_recIdents;
              RAST._IExpr _out5234;
              DCOMPUTF16._IOwnership _out5235;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5236;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5234, out _out5235, out _out5236);
              _10897_recursiveGen = _out5234;
              _10898_recOwned = _out5235;
              _10899_recIdents = _out5236;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10897_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10895_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10896_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5237;
              DCOMPUTF16._IOwnership _out5238;
              DCOMPUTF16.COMP.FromOwnership(r, _10898_recOwned, expectedOwnership, out _out5237, out _out5238);
              r = _out5237;
              resultingOwnership = _out5238;
              readIdents = _10899_recIdents;
            }
          } else if (_source614.is_SetBuilder) {
            DAST._IType _10900___mcc_h556 = _source614.dtor_element;
            {
              RAST._IType _10901_fromTpeGen;
              RAST._IType _out5239;
              _out5239 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10901_fromTpeGen = _out5239;
              RAST._IType _10902_toTpeGen;
              RAST._IType _out5240;
              _out5240 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10902_toTpeGen = _out5240;
              RAST._IExpr _10903_recursiveGen;
              DCOMPUTF16._IOwnership _10904_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10905_recIdents;
              RAST._IExpr _out5241;
              DCOMPUTF16._IOwnership _out5242;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5243;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5241, out _out5242, out _out5243);
              _10903_recursiveGen = _out5241;
              _10904_recOwned = _out5242;
              _10905_recIdents = _out5243;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10903_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10901_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10902_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5244;
              DCOMPUTF16._IOwnership _out5245;
              DCOMPUTF16.COMP.FromOwnership(r, _10904_recOwned, expectedOwnership, out _out5244, out _out5245);
              r = _out5244;
              resultingOwnership = _out5245;
              readIdents = _10905_recIdents;
            }
          } else if (_source614.is_MapBuilder) {
            DAST._IType _10906___mcc_h558 = _source614.dtor_key;
            DAST._IType _10907___mcc_h559 = _source614.dtor_value;
            {
              RAST._IType _10908_fromTpeGen;
              RAST._IType _out5246;
              _out5246 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10908_fromTpeGen = _out5246;
              RAST._IType _10909_toTpeGen;
              RAST._IType _out5247;
              _out5247 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10909_toTpeGen = _out5247;
              RAST._IExpr _10910_recursiveGen;
              DCOMPUTF16._IOwnership _10911_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10912_recIdents;
              RAST._IExpr _out5248;
              DCOMPUTF16._IOwnership _out5249;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5250;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5248, out _out5249, out _out5250);
              _10910_recursiveGen = _out5248;
              _10911_recOwned = _out5249;
              _10912_recIdents = _out5250;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10910_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10908_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10909_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5251;
              DCOMPUTF16._IOwnership _out5252;
              DCOMPUTF16.COMP.FromOwnership(r, _10911_recOwned, expectedOwnership, out _out5251, out _out5252);
              r = _out5251;
              resultingOwnership = _out5252;
              readIdents = _10912_recIdents;
            }
          } else if (_source614.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10913___mcc_h562 = _source614.dtor_args;
            DAST._IType _10914___mcc_h563 = _source614.dtor_result;
            {
              RAST._IType _10915_fromTpeGen;
              RAST._IType _out5253;
              _out5253 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10915_fromTpeGen = _out5253;
              RAST._IType _10916_toTpeGen;
              RAST._IType _out5254;
              _out5254 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10916_toTpeGen = _out5254;
              RAST._IExpr _10917_recursiveGen;
              DCOMPUTF16._IOwnership _10918_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10919_recIdents;
              RAST._IExpr _out5255;
              DCOMPUTF16._IOwnership _out5256;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5257;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5255, out _out5256, out _out5257);
              _10917_recursiveGen = _out5255;
              _10918_recOwned = _out5256;
              _10919_recIdents = _out5257;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10917_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10915_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10916_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5258;
              DCOMPUTF16._IOwnership _out5259;
              DCOMPUTF16.COMP.FromOwnership(r, _10918_recOwned, expectedOwnership, out _out5258, out _out5259);
              r = _out5258;
              resultingOwnership = _out5259;
              readIdents = _10919_recIdents;
            }
          } else if (_source614.is_Primitive) {
            DAST._IPrimitive _10920___mcc_h566 = _source614.dtor_Primitive_a0;
            {
              RAST._IType _10921_fromTpeGen;
              RAST._IType _out5260;
              _out5260 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10921_fromTpeGen = _out5260;
              RAST._IType _10922_toTpeGen;
              RAST._IType _out5261;
              _out5261 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10922_toTpeGen = _out5261;
              RAST._IExpr _10923_recursiveGen;
              DCOMPUTF16._IOwnership _10924_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10925_recIdents;
              RAST._IExpr _out5262;
              DCOMPUTF16._IOwnership _out5263;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5264;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5262, out _out5263, out _out5264);
              _10923_recursiveGen = _out5262;
              _10924_recOwned = _out5263;
              _10925_recIdents = _out5264;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10923_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10921_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10922_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5265;
              DCOMPUTF16._IOwnership _out5266;
              DCOMPUTF16.COMP.FromOwnership(r, _10924_recOwned, expectedOwnership, out _out5265, out _out5266);
              r = _out5265;
              resultingOwnership = _out5266;
              readIdents = _10925_recIdents;
            }
          } else if (_source614.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10926___mcc_h568 = _source614.dtor_Passthrough_a0;
            {
              RAST._IType _10927_fromTpeGen;
              RAST._IType _out5267;
              _out5267 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10927_fromTpeGen = _out5267;
              RAST._IType _10928_toTpeGen;
              RAST._IType _out5268;
              _out5268 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10928_toTpeGen = _out5268;
              RAST._IExpr _10929_recursiveGen;
              DCOMPUTF16._IOwnership _10930_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10931_recIdents;
              RAST._IExpr _out5269;
              DCOMPUTF16._IOwnership _out5270;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5271;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5269, out _out5270, out _out5271);
              _10929_recursiveGen = _out5269;
              _10930_recOwned = _out5270;
              _10931_recIdents = _out5271;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10929_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10927_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10928_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5272;
              DCOMPUTF16._IOwnership _out5273;
              DCOMPUTF16.COMP.FromOwnership(r, _10930_recOwned, expectedOwnership, out _out5272, out _out5273);
              r = _out5272;
              resultingOwnership = _out5273;
              readIdents = _10931_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10932___mcc_h570 = _source614.dtor_TypeArg_a0;
            {
              RAST._IType _10933_fromTpeGen;
              RAST._IType _out5274;
              _out5274 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _10933_fromTpeGen = _out5274;
              RAST._IType _10934_toTpeGen;
              RAST._IType _out5275;
              _out5275 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _10934_toTpeGen = _out5275;
              RAST._IExpr _10935_recursiveGen;
              DCOMPUTF16._IOwnership _10936_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10937_recIdents;
              RAST._IExpr _out5276;
              DCOMPUTF16._IOwnership _out5277;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5278;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5276, out _out5277, out _out5278);
              _10935_recursiveGen = _out5276;
              _10936_recOwned = _out5277;
              _10937_recIdents = _out5278;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10935_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10933_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10934_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5279;
              DCOMPUTF16._IOwnership _out5280;
              DCOMPUTF16.COMP.FromOwnership(r, _10936_recOwned, expectedOwnership, out _out5279, out _out5280);
              r = _out5279;
              resultingOwnership = _out5280;
              readIdents = _10937_recIdents;
            }
          }
        } else if (_source565.is_Set) {
          DAST._IType _10938___mcc_h572 = _source565.dtor_element;
          DAST._IType _source619 = _9615___mcc_h1;
          if (_source619.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10939___mcc_h576 = _source619.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10940___mcc_h577 = _source619.dtor_typeArgs;
            DAST._IResolvedType _10941___mcc_h578 = _source619.dtor_resolved;
            DAST._IResolvedType _source620 = _10941___mcc_h578;
            if (_source620.is_AllocatedDatatype) {
              DAST._IDatatypeType _10942___mcc_h582 = _source620.dtor_datatypeType;
              {
                RAST._IType _10943_fromTpeGen;
                RAST._IType _out5281;
                _out5281 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10943_fromTpeGen = _out5281;
                RAST._IType _10944_toTpeGen;
                RAST._IType _out5282;
                _out5282 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10944_toTpeGen = _out5282;
                RAST._IExpr _10945_recursiveGen;
                DCOMPUTF16._IOwnership _10946_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10947_recIdents;
                RAST._IExpr _out5283;
                DCOMPUTF16._IOwnership _out5284;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5285;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5283, out _out5284, out _out5285);
                _10945_recursiveGen = _out5283;
                _10946_recOwned = _out5284;
                _10947_recIdents = _out5285;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10945_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10943_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10944_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5286;
                DCOMPUTF16._IOwnership _out5287;
                DCOMPUTF16.COMP.FromOwnership(r, _10946_recOwned, expectedOwnership, out _out5286, out _out5287);
                r = _out5286;
                resultingOwnership = _out5287;
                readIdents = _10947_recIdents;
              }
            } else if (_source620.is_Datatype) {
              DAST._IDatatypeType _10948___mcc_h584 = _source620.dtor_datatypeType;
              {
                RAST._IType _10949_fromTpeGen;
                RAST._IType _out5288;
                _out5288 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10949_fromTpeGen = _out5288;
                RAST._IType _10950_toTpeGen;
                RAST._IType _out5289;
                _out5289 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10950_toTpeGen = _out5289;
                RAST._IExpr _10951_recursiveGen;
                DCOMPUTF16._IOwnership _10952_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10953_recIdents;
                RAST._IExpr _out5290;
                DCOMPUTF16._IOwnership _out5291;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5292;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5290, out _out5291, out _out5292);
                _10951_recursiveGen = _out5290;
                _10952_recOwned = _out5291;
                _10953_recIdents = _out5292;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10951_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10949_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10950_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5293;
                DCOMPUTF16._IOwnership _out5294;
                DCOMPUTF16.COMP.FromOwnership(r, _10952_recOwned, expectedOwnership, out _out5293, out _out5294);
                r = _out5293;
                resultingOwnership = _out5294;
                readIdents = _10953_recIdents;
              }
            } else if (_source620.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10954___mcc_h586 = _source620.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10955___mcc_h587 = _source620.dtor_attributes;
              {
                RAST._IType _10956_fromTpeGen;
                RAST._IType _out5295;
                _out5295 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _10956_fromTpeGen = _out5295;
                RAST._IType _10957_toTpeGen;
                RAST._IType _out5296;
                _out5296 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _10957_toTpeGen = _out5296;
                RAST._IExpr _10958_recursiveGen;
                DCOMPUTF16._IOwnership _10959_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10960_recIdents;
                RAST._IExpr _out5297;
                DCOMPUTF16._IOwnership _out5298;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5299;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5297, out _out5298, out _out5299);
                _10958_recursiveGen = _out5297;
                _10959_recOwned = _out5298;
                _10960_recIdents = _out5299;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10958_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10956_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10957_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5300;
                DCOMPUTF16._IOwnership _out5301;
                DCOMPUTF16.COMP.FromOwnership(r, _10959_recOwned, expectedOwnership, out _out5300, out _out5301);
                r = _out5300;
                resultingOwnership = _out5301;
                readIdents = _10960_recIdents;
              }
            } else {
              DAST._IType _10961___mcc_h590 = _source620.dtor_baseType;
              DAST._INewtypeRange _10962___mcc_h591 = _source620.dtor_range;
              bool _10963___mcc_h592 = _source620.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10964___mcc_h593 = _source620.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10965_attributes = _10964___mcc_h593;
              bool _10966_erase = _10963___mcc_h592;
              DAST._INewtypeRange _10967_range = _10962___mcc_h591;
              DAST._IType _10968_b = _10961___mcc_h590;
              {
                Std.Wrappers._IOption<RAST._IType> _10969_nativeToType;
                _10969_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10968_b, _10967_range);
                if (object.Equals(_9609_fromTpe, _10968_b)) {
                  RAST._IExpr _10970_recursiveGen;
                  DCOMPUTF16._IOwnership _10971_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10972_recIdents;
                  RAST._IExpr _out5302;
                  DCOMPUTF16._IOwnership _out5303;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5304;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5302, out _out5303, out _out5304);
                  _10970_recursiveGen = _out5302;
                  _10971_recOwned = _out5303;
                  _10972_recIdents = _out5304;
                  readIdents = _10972_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source621 = _10969_nativeToType;
                  if (_source621.is_None) {
                    if (_10966_erase) {
                      r = _10970_recursiveGen;
                    } else {
                      RAST._IType _10973_rhsType;
                      RAST._IType _out5305;
                      _out5305 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _10973_rhsType = _out5305;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10973_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10970_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5306;
                    DCOMPUTF16._IOwnership _out5307;
                    DCOMPUTF16.COMP.FromOwnership(r, _10971_recOwned, expectedOwnership, out _out5306, out _out5307);
                    r = _out5306;
                    resultingOwnership = _out5307;
                  } else {
                    RAST._IType _10974___mcc_h1762 = _source621.dtor_value;
                    RAST._IType _10975_v = _10974___mcc_h1762;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10970_recursiveGen, RAST.Expr.create_ExprFromType(_10975_v)));
                    RAST._IExpr _out5308;
                    DCOMPUTF16._IOwnership _out5309;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5308, out _out5309);
                    r = _out5308;
                    resultingOwnership = _out5309;
                  }
                } else {
                  if ((_10969_nativeToType).is_Some) {
                    DAST._IType _source622 = _9609_fromTpe;
                    if (_source622.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10976___mcc_h1763 = _source622.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10977___mcc_h1764 = _source622.dtor_typeArgs;
                      DAST._IResolvedType _10978___mcc_h1765 = _source622.dtor_resolved;
                      DAST._IResolvedType _source623 = _10978___mcc_h1765;
                      if (_source623.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10979___mcc_h1769 = _source623.dtor_datatypeType;
                      } else if (_source623.is_Datatype) {
                        DAST._IDatatypeType _10980___mcc_h1771 = _source623.dtor_datatypeType;
                      } else if (_source623.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10981___mcc_h1773 = _source623.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10982___mcc_h1774 = _source623.dtor_attributes;
                      } else {
                        DAST._IType _10983___mcc_h1777 = _source623.dtor_baseType;
                        DAST._INewtypeRange _10984___mcc_h1778 = _source623.dtor_range;
                        bool _10985___mcc_h1779 = _source623.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10986___mcc_h1780 = _source623.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10987_attributes0 = _10986___mcc_h1780;
                        bool _10988_erase0 = _10985___mcc_h1779;
                        DAST._INewtypeRange _10989_range0 = _10984___mcc_h1778;
                        DAST._IType _10990_b0 = _10983___mcc_h1777;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10991_nativeFromType;
                          _10991_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10990_b0, _10989_range0);
                          if ((_10991_nativeFromType).is_Some) {
                            RAST._IExpr _10992_recursiveGen;
                            DCOMPUTF16._IOwnership _10993_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10994_recIdents;
                            RAST._IExpr _out5310;
                            DCOMPUTF16._IOwnership _out5311;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5312;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5310, out _out5311, out _out5312);
                            _10992_recursiveGen = _out5310;
                            _10993_recOwned = _out5311;
                            _10994_recIdents = _out5312;
                            RAST._IExpr _out5313;
                            DCOMPUTF16._IOwnership _out5314;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10992_recursiveGen, (_10969_nativeToType).dtor_value), _10993_recOwned, expectedOwnership, out _out5313, out _out5314);
                            r = _out5313;
                            resultingOwnership = _out5314;
                            readIdents = _10994_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source622.is_Nullable) {
                      DAST._IType _10995___mcc_h1785 = _source622.dtor_Nullable_a0;
                    } else if (_source622.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10996___mcc_h1787 = _source622.dtor_Tuple_a0;
                    } else if (_source622.is_Array) {
                      DAST._IType _10997___mcc_h1789 = _source622.dtor_element;
                      BigInteger _10998___mcc_h1790 = _source622.dtor_dims;
                    } else if (_source622.is_Seq) {
                      DAST._IType _10999___mcc_h1793 = _source622.dtor_element;
                    } else if (_source622.is_Set) {
                      DAST._IType _11000___mcc_h1795 = _source622.dtor_element;
                    } else if (_source622.is_Multiset) {
                      DAST._IType _11001___mcc_h1797 = _source622.dtor_element;
                    } else if (_source622.is_Map) {
                      DAST._IType _11002___mcc_h1799 = _source622.dtor_key;
                      DAST._IType _11003___mcc_h1800 = _source622.dtor_value;
                    } else if (_source622.is_SetBuilder) {
                      DAST._IType _11004___mcc_h1803 = _source622.dtor_element;
                    } else if (_source622.is_MapBuilder) {
                      DAST._IType _11005___mcc_h1805 = _source622.dtor_key;
                      DAST._IType _11006___mcc_h1806 = _source622.dtor_value;
                    } else if (_source622.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11007___mcc_h1809 = _source622.dtor_args;
                      DAST._IType _11008___mcc_h1810 = _source622.dtor_result;
                    } else if (_source622.is_Primitive) {
                      DAST._IPrimitive _11009___mcc_h1813 = _source622.dtor_Primitive_a0;
                    } else if (_source622.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11010___mcc_h1815 = _source622.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11011___mcc_h1817 = _source622.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11012_recursiveGen;
                      DCOMPUTF16._IOwnership _11013_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11014_recIdents;
                      RAST._IExpr _out5315;
                      DCOMPUTF16._IOwnership _out5316;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5317;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5315, out _out5316, out _out5317);
                      _11012_recursiveGen = _out5315;
                      _11013_recOwned = _out5316;
                      _11014_recIdents = _out5317;
                      RAST._IExpr _out5318;
                      DCOMPUTF16._IOwnership _out5319;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11012_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10969_nativeToType).dtor_value), _11013_recOwned, expectedOwnership, out _out5318, out _out5319);
                      r = _out5318;
                      resultingOwnership = _out5319;
                      readIdents = _11014_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5320;
                  DCOMPUTF16._IOwnership _out5321;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5322;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _10968_b), _10968_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5320, out _out5321, out _out5322);
                  r = _out5320;
                  resultingOwnership = _out5321;
                  readIdents = _out5322;
                }
              }
            }
          } else if (_source619.is_Nullable) {
            DAST._IType _11015___mcc_h598 = _source619.dtor_Nullable_a0;
            {
              RAST._IExpr _11016_recursiveGen;
              DCOMPUTF16._IOwnership _11017_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11018_recIdents;
              RAST._IExpr _out5323;
              DCOMPUTF16._IOwnership _out5324;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5325;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5323, out _out5324, out _out5325);
              _11016_recursiveGen = _out5323;
              _11017_recOwned = _out5324;
              _11018_recIdents = _out5325;
              r = _11016_recursiveGen;
              if (object.Equals(_11017_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5326;
              DCOMPUTF16._IOwnership _out5327;
              DCOMPUTF16.COMP.FromOwnership(r, _11017_recOwned, expectedOwnership, out _out5326, out _out5327);
              r = _out5326;
              resultingOwnership = _out5327;
              readIdents = _11018_recIdents;
            }
          } else if (_source619.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11019___mcc_h600 = _source619.dtor_Tuple_a0;
            {
              RAST._IType _11020_fromTpeGen;
              RAST._IType _out5328;
              _out5328 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11020_fromTpeGen = _out5328;
              RAST._IType _11021_toTpeGen;
              RAST._IType _out5329;
              _out5329 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11021_toTpeGen = _out5329;
              RAST._IExpr _11022_recursiveGen;
              DCOMPUTF16._IOwnership _11023_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11024_recIdents;
              RAST._IExpr _out5330;
              DCOMPUTF16._IOwnership _out5331;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5332;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5330, out _out5331, out _out5332);
              _11022_recursiveGen = _out5330;
              _11023_recOwned = _out5331;
              _11024_recIdents = _out5332;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11022_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11020_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11021_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5333;
              DCOMPUTF16._IOwnership _out5334;
              DCOMPUTF16.COMP.FromOwnership(r, _11023_recOwned, expectedOwnership, out _out5333, out _out5334);
              r = _out5333;
              resultingOwnership = _out5334;
              readIdents = _11024_recIdents;
            }
          } else if (_source619.is_Array) {
            DAST._IType _11025___mcc_h602 = _source619.dtor_element;
            BigInteger _11026___mcc_h603 = _source619.dtor_dims;
            {
              RAST._IType _11027_fromTpeGen;
              RAST._IType _out5335;
              _out5335 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11027_fromTpeGen = _out5335;
              RAST._IType _11028_toTpeGen;
              RAST._IType _out5336;
              _out5336 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11028_toTpeGen = _out5336;
              RAST._IExpr _11029_recursiveGen;
              DCOMPUTF16._IOwnership _11030_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11031_recIdents;
              RAST._IExpr _out5337;
              DCOMPUTF16._IOwnership _out5338;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5339;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5337, out _out5338, out _out5339);
              _11029_recursiveGen = _out5337;
              _11030_recOwned = _out5338;
              _11031_recIdents = _out5339;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11029_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11027_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11028_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5340;
              DCOMPUTF16._IOwnership _out5341;
              DCOMPUTF16.COMP.FromOwnership(r, _11030_recOwned, expectedOwnership, out _out5340, out _out5341);
              r = _out5340;
              resultingOwnership = _out5341;
              readIdents = _11031_recIdents;
            }
          } else if (_source619.is_Seq) {
            DAST._IType _11032___mcc_h606 = _source619.dtor_element;
            {
              RAST._IType _11033_fromTpeGen;
              RAST._IType _out5342;
              _out5342 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11033_fromTpeGen = _out5342;
              RAST._IType _11034_toTpeGen;
              RAST._IType _out5343;
              _out5343 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11034_toTpeGen = _out5343;
              RAST._IExpr _11035_recursiveGen;
              DCOMPUTF16._IOwnership _11036_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11037_recIdents;
              RAST._IExpr _out5344;
              DCOMPUTF16._IOwnership _out5345;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5346;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5344, out _out5345, out _out5346);
              _11035_recursiveGen = _out5344;
              _11036_recOwned = _out5345;
              _11037_recIdents = _out5346;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11035_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11033_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11034_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5347;
              DCOMPUTF16._IOwnership _out5348;
              DCOMPUTF16.COMP.FromOwnership(r, _11036_recOwned, expectedOwnership, out _out5347, out _out5348);
              r = _out5347;
              resultingOwnership = _out5348;
              readIdents = _11037_recIdents;
            }
          } else if (_source619.is_Set) {
            DAST._IType _11038___mcc_h608 = _source619.dtor_element;
            {
              RAST._IType _11039_fromTpeGen;
              RAST._IType _out5349;
              _out5349 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11039_fromTpeGen = _out5349;
              RAST._IType _11040_toTpeGen;
              RAST._IType _out5350;
              _out5350 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11040_toTpeGen = _out5350;
              RAST._IExpr _11041_recursiveGen;
              DCOMPUTF16._IOwnership _11042_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11043_recIdents;
              RAST._IExpr _out5351;
              DCOMPUTF16._IOwnership _out5352;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5353;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5351, out _out5352, out _out5353);
              _11041_recursiveGen = _out5351;
              _11042_recOwned = _out5352;
              _11043_recIdents = _out5353;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11041_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11039_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11040_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5354;
              DCOMPUTF16._IOwnership _out5355;
              DCOMPUTF16.COMP.FromOwnership(r, _11042_recOwned, expectedOwnership, out _out5354, out _out5355);
              r = _out5354;
              resultingOwnership = _out5355;
              readIdents = _11043_recIdents;
            }
          } else if (_source619.is_Multiset) {
            DAST._IType _11044___mcc_h610 = _source619.dtor_element;
            {
              RAST._IType _11045_fromTpeGen;
              RAST._IType _out5356;
              _out5356 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11045_fromTpeGen = _out5356;
              RAST._IType _11046_toTpeGen;
              RAST._IType _out5357;
              _out5357 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11046_toTpeGen = _out5357;
              RAST._IExpr _11047_recursiveGen;
              DCOMPUTF16._IOwnership _11048_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11049_recIdents;
              RAST._IExpr _out5358;
              DCOMPUTF16._IOwnership _out5359;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5360;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5358, out _out5359, out _out5360);
              _11047_recursiveGen = _out5358;
              _11048_recOwned = _out5359;
              _11049_recIdents = _out5360;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11047_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11045_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11046_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5361;
              DCOMPUTF16._IOwnership _out5362;
              DCOMPUTF16.COMP.FromOwnership(r, _11048_recOwned, expectedOwnership, out _out5361, out _out5362);
              r = _out5361;
              resultingOwnership = _out5362;
              readIdents = _11049_recIdents;
            }
          } else if (_source619.is_Map) {
            DAST._IType _11050___mcc_h612 = _source619.dtor_key;
            DAST._IType _11051___mcc_h613 = _source619.dtor_value;
            {
              RAST._IType _11052_fromTpeGen;
              RAST._IType _out5363;
              _out5363 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11052_fromTpeGen = _out5363;
              RAST._IType _11053_toTpeGen;
              RAST._IType _out5364;
              _out5364 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11053_toTpeGen = _out5364;
              RAST._IExpr _11054_recursiveGen;
              DCOMPUTF16._IOwnership _11055_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11056_recIdents;
              RAST._IExpr _out5365;
              DCOMPUTF16._IOwnership _out5366;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5367;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5365, out _out5366, out _out5367);
              _11054_recursiveGen = _out5365;
              _11055_recOwned = _out5366;
              _11056_recIdents = _out5367;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11054_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11052_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11053_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5368;
              DCOMPUTF16._IOwnership _out5369;
              DCOMPUTF16.COMP.FromOwnership(r, _11055_recOwned, expectedOwnership, out _out5368, out _out5369);
              r = _out5368;
              resultingOwnership = _out5369;
              readIdents = _11056_recIdents;
            }
          } else if (_source619.is_SetBuilder) {
            DAST._IType _11057___mcc_h616 = _source619.dtor_element;
            {
              RAST._IType _11058_fromTpeGen;
              RAST._IType _out5370;
              _out5370 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11058_fromTpeGen = _out5370;
              RAST._IType _11059_toTpeGen;
              RAST._IType _out5371;
              _out5371 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11059_toTpeGen = _out5371;
              RAST._IExpr _11060_recursiveGen;
              DCOMPUTF16._IOwnership _11061_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11062_recIdents;
              RAST._IExpr _out5372;
              DCOMPUTF16._IOwnership _out5373;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5374;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5372, out _out5373, out _out5374);
              _11060_recursiveGen = _out5372;
              _11061_recOwned = _out5373;
              _11062_recIdents = _out5374;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11060_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11058_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11059_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5375;
              DCOMPUTF16._IOwnership _out5376;
              DCOMPUTF16.COMP.FromOwnership(r, _11061_recOwned, expectedOwnership, out _out5375, out _out5376);
              r = _out5375;
              resultingOwnership = _out5376;
              readIdents = _11062_recIdents;
            }
          } else if (_source619.is_MapBuilder) {
            DAST._IType _11063___mcc_h618 = _source619.dtor_key;
            DAST._IType _11064___mcc_h619 = _source619.dtor_value;
            {
              RAST._IType _11065_fromTpeGen;
              RAST._IType _out5377;
              _out5377 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11065_fromTpeGen = _out5377;
              RAST._IType _11066_toTpeGen;
              RAST._IType _out5378;
              _out5378 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11066_toTpeGen = _out5378;
              RAST._IExpr _11067_recursiveGen;
              DCOMPUTF16._IOwnership _11068_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11069_recIdents;
              RAST._IExpr _out5379;
              DCOMPUTF16._IOwnership _out5380;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5381;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5379, out _out5380, out _out5381);
              _11067_recursiveGen = _out5379;
              _11068_recOwned = _out5380;
              _11069_recIdents = _out5381;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11067_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11065_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11066_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5382;
              DCOMPUTF16._IOwnership _out5383;
              DCOMPUTF16.COMP.FromOwnership(r, _11068_recOwned, expectedOwnership, out _out5382, out _out5383);
              r = _out5382;
              resultingOwnership = _out5383;
              readIdents = _11069_recIdents;
            }
          } else if (_source619.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11070___mcc_h622 = _source619.dtor_args;
            DAST._IType _11071___mcc_h623 = _source619.dtor_result;
            {
              RAST._IType _11072_fromTpeGen;
              RAST._IType _out5384;
              _out5384 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11072_fromTpeGen = _out5384;
              RAST._IType _11073_toTpeGen;
              RAST._IType _out5385;
              _out5385 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11073_toTpeGen = _out5385;
              RAST._IExpr _11074_recursiveGen;
              DCOMPUTF16._IOwnership _11075_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11076_recIdents;
              RAST._IExpr _out5386;
              DCOMPUTF16._IOwnership _out5387;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5388;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5386, out _out5387, out _out5388);
              _11074_recursiveGen = _out5386;
              _11075_recOwned = _out5387;
              _11076_recIdents = _out5388;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11074_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11072_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11073_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5389;
              DCOMPUTF16._IOwnership _out5390;
              DCOMPUTF16.COMP.FromOwnership(r, _11075_recOwned, expectedOwnership, out _out5389, out _out5390);
              r = _out5389;
              resultingOwnership = _out5390;
              readIdents = _11076_recIdents;
            }
          } else if (_source619.is_Primitive) {
            DAST._IPrimitive _11077___mcc_h626 = _source619.dtor_Primitive_a0;
            {
              RAST._IType _11078_fromTpeGen;
              RAST._IType _out5391;
              _out5391 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11078_fromTpeGen = _out5391;
              RAST._IType _11079_toTpeGen;
              RAST._IType _out5392;
              _out5392 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11079_toTpeGen = _out5392;
              RAST._IExpr _11080_recursiveGen;
              DCOMPUTF16._IOwnership _11081_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11082_recIdents;
              RAST._IExpr _out5393;
              DCOMPUTF16._IOwnership _out5394;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5395;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5393, out _out5394, out _out5395);
              _11080_recursiveGen = _out5393;
              _11081_recOwned = _out5394;
              _11082_recIdents = _out5395;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11080_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11078_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11079_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5396;
              DCOMPUTF16._IOwnership _out5397;
              DCOMPUTF16.COMP.FromOwnership(r, _11081_recOwned, expectedOwnership, out _out5396, out _out5397);
              r = _out5396;
              resultingOwnership = _out5397;
              readIdents = _11082_recIdents;
            }
          } else if (_source619.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11083___mcc_h628 = _source619.dtor_Passthrough_a0;
            {
              RAST._IType _11084_fromTpeGen;
              RAST._IType _out5398;
              _out5398 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11084_fromTpeGen = _out5398;
              RAST._IType _11085_toTpeGen;
              RAST._IType _out5399;
              _out5399 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11085_toTpeGen = _out5399;
              RAST._IExpr _11086_recursiveGen;
              DCOMPUTF16._IOwnership _11087_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11088_recIdents;
              RAST._IExpr _out5400;
              DCOMPUTF16._IOwnership _out5401;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5402;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5400, out _out5401, out _out5402);
              _11086_recursiveGen = _out5400;
              _11087_recOwned = _out5401;
              _11088_recIdents = _out5402;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11086_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11084_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11085_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5403;
              DCOMPUTF16._IOwnership _out5404;
              DCOMPUTF16.COMP.FromOwnership(r, _11087_recOwned, expectedOwnership, out _out5403, out _out5404);
              r = _out5403;
              resultingOwnership = _out5404;
              readIdents = _11088_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11089___mcc_h630 = _source619.dtor_TypeArg_a0;
            {
              RAST._IType _11090_fromTpeGen;
              RAST._IType _out5405;
              _out5405 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11090_fromTpeGen = _out5405;
              RAST._IType _11091_toTpeGen;
              RAST._IType _out5406;
              _out5406 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11091_toTpeGen = _out5406;
              RAST._IExpr _11092_recursiveGen;
              DCOMPUTF16._IOwnership _11093_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11094_recIdents;
              RAST._IExpr _out5407;
              DCOMPUTF16._IOwnership _out5408;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5409;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5407, out _out5408, out _out5409);
              _11092_recursiveGen = _out5407;
              _11093_recOwned = _out5408;
              _11094_recIdents = _out5409;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11092_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11090_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11091_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5410;
              DCOMPUTF16._IOwnership _out5411;
              DCOMPUTF16.COMP.FromOwnership(r, _11093_recOwned, expectedOwnership, out _out5410, out _out5411);
              r = _out5410;
              resultingOwnership = _out5411;
              readIdents = _11094_recIdents;
            }
          }
        } else if (_source565.is_Multiset) {
          DAST._IType _11095___mcc_h632 = _source565.dtor_element;
          DAST._IType _source624 = _9615___mcc_h1;
          if (_source624.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11096___mcc_h636 = _source624.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11097___mcc_h637 = _source624.dtor_typeArgs;
            DAST._IResolvedType _11098___mcc_h638 = _source624.dtor_resolved;
            DAST._IResolvedType _source625 = _11098___mcc_h638;
            if (_source625.is_AllocatedDatatype) {
              DAST._IDatatypeType _11099___mcc_h642 = _source625.dtor_datatypeType;
              {
                RAST._IType _11100_fromTpeGen;
                RAST._IType _out5412;
                _out5412 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11100_fromTpeGen = _out5412;
                RAST._IType _11101_toTpeGen;
                RAST._IType _out5413;
                _out5413 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11101_toTpeGen = _out5413;
                RAST._IExpr _11102_recursiveGen;
                DCOMPUTF16._IOwnership _11103_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11104_recIdents;
                RAST._IExpr _out5414;
                DCOMPUTF16._IOwnership _out5415;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5416;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5414, out _out5415, out _out5416);
                _11102_recursiveGen = _out5414;
                _11103_recOwned = _out5415;
                _11104_recIdents = _out5416;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11102_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11100_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11101_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5417;
                DCOMPUTF16._IOwnership _out5418;
                DCOMPUTF16.COMP.FromOwnership(r, _11103_recOwned, expectedOwnership, out _out5417, out _out5418);
                r = _out5417;
                resultingOwnership = _out5418;
                readIdents = _11104_recIdents;
              }
            } else if (_source625.is_Datatype) {
              DAST._IDatatypeType _11105___mcc_h644 = _source625.dtor_datatypeType;
              {
                RAST._IType _11106_fromTpeGen;
                RAST._IType _out5419;
                _out5419 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11106_fromTpeGen = _out5419;
                RAST._IType _11107_toTpeGen;
                RAST._IType _out5420;
                _out5420 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11107_toTpeGen = _out5420;
                RAST._IExpr _11108_recursiveGen;
                DCOMPUTF16._IOwnership _11109_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11110_recIdents;
                RAST._IExpr _out5421;
                DCOMPUTF16._IOwnership _out5422;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5423;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5421, out _out5422, out _out5423);
                _11108_recursiveGen = _out5421;
                _11109_recOwned = _out5422;
                _11110_recIdents = _out5423;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11108_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11106_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11107_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5424;
                DCOMPUTF16._IOwnership _out5425;
                DCOMPUTF16.COMP.FromOwnership(r, _11109_recOwned, expectedOwnership, out _out5424, out _out5425);
                r = _out5424;
                resultingOwnership = _out5425;
                readIdents = _11110_recIdents;
              }
            } else if (_source625.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11111___mcc_h646 = _source625.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11112___mcc_h647 = _source625.dtor_attributes;
              {
                RAST._IType _11113_fromTpeGen;
                RAST._IType _out5426;
                _out5426 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11113_fromTpeGen = _out5426;
                RAST._IType _11114_toTpeGen;
                RAST._IType _out5427;
                _out5427 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11114_toTpeGen = _out5427;
                RAST._IExpr _11115_recursiveGen;
                DCOMPUTF16._IOwnership _11116_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11117_recIdents;
                RAST._IExpr _out5428;
                DCOMPUTF16._IOwnership _out5429;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5430;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5428, out _out5429, out _out5430);
                _11115_recursiveGen = _out5428;
                _11116_recOwned = _out5429;
                _11117_recIdents = _out5430;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11115_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11113_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11114_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5431;
                DCOMPUTF16._IOwnership _out5432;
                DCOMPUTF16.COMP.FromOwnership(r, _11116_recOwned, expectedOwnership, out _out5431, out _out5432);
                r = _out5431;
                resultingOwnership = _out5432;
                readIdents = _11117_recIdents;
              }
            } else {
              DAST._IType _11118___mcc_h650 = _source625.dtor_baseType;
              DAST._INewtypeRange _11119___mcc_h651 = _source625.dtor_range;
              bool _11120___mcc_h652 = _source625.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11121___mcc_h653 = _source625.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11122_attributes = _11121___mcc_h653;
              bool _11123_erase = _11120___mcc_h652;
              DAST._INewtypeRange _11124_range = _11119___mcc_h651;
              DAST._IType _11125_b = _11118___mcc_h650;
              {
                Std.Wrappers._IOption<RAST._IType> _11126_nativeToType;
                _11126_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11125_b, _11124_range);
                if (object.Equals(_9609_fromTpe, _11125_b)) {
                  RAST._IExpr _11127_recursiveGen;
                  DCOMPUTF16._IOwnership _11128_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11129_recIdents;
                  RAST._IExpr _out5433;
                  DCOMPUTF16._IOwnership _out5434;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5435;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5433, out _out5434, out _out5435);
                  _11127_recursiveGen = _out5433;
                  _11128_recOwned = _out5434;
                  _11129_recIdents = _out5435;
                  readIdents = _11129_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source626 = _11126_nativeToType;
                  if (_source626.is_None) {
                    if (_11123_erase) {
                      r = _11127_recursiveGen;
                    } else {
                      RAST._IType _11130_rhsType;
                      RAST._IType _out5436;
                      _out5436 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _11130_rhsType = _out5436;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11130_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11127_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5437;
                    DCOMPUTF16._IOwnership _out5438;
                    DCOMPUTF16.COMP.FromOwnership(r, _11128_recOwned, expectedOwnership, out _out5437, out _out5438);
                    r = _out5437;
                    resultingOwnership = _out5438;
                  } else {
                    RAST._IType _11131___mcc_h1819 = _source626.dtor_value;
                    RAST._IType _11132_v = _11131___mcc_h1819;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11127_recursiveGen, RAST.Expr.create_ExprFromType(_11132_v)));
                    RAST._IExpr _out5439;
                    DCOMPUTF16._IOwnership _out5440;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5439, out _out5440);
                    r = _out5439;
                    resultingOwnership = _out5440;
                  }
                } else {
                  if ((_11126_nativeToType).is_Some) {
                    DAST._IType _source627 = _9609_fromTpe;
                    if (_source627.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11133___mcc_h1820 = _source627.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11134___mcc_h1821 = _source627.dtor_typeArgs;
                      DAST._IResolvedType _11135___mcc_h1822 = _source627.dtor_resolved;
                      DAST._IResolvedType _source628 = _11135___mcc_h1822;
                      if (_source628.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11136___mcc_h1826 = _source628.dtor_datatypeType;
                      } else if (_source628.is_Datatype) {
                        DAST._IDatatypeType _11137___mcc_h1828 = _source628.dtor_datatypeType;
                      } else if (_source628.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11138___mcc_h1830 = _source628.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11139___mcc_h1831 = _source628.dtor_attributes;
                      } else {
                        DAST._IType _11140___mcc_h1834 = _source628.dtor_baseType;
                        DAST._INewtypeRange _11141___mcc_h1835 = _source628.dtor_range;
                        bool _11142___mcc_h1836 = _source628.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11143___mcc_h1837 = _source628.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11144_attributes0 = _11143___mcc_h1837;
                        bool _11145_erase0 = _11142___mcc_h1836;
                        DAST._INewtypeRange _11146_range0 = _11141___mcc_h1835;
                        DAST._IType _11147_b0 = _11140___mcc_h1834;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11148_nativeFromType;
                          _11148_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11147_b0, _11146_range0);
                          if ((_11148_nativeFromType).is_Some) {
                            RAST._IExpr _11149_recursiveGen;
                            DCOMPUTF16._IOwnership _11150_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11151_recIdents;
                            RAST._IExpr _out5441;
                            DCOMPUTF16._IOwnership _out5442;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5443;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5441, out _out5442, out _out5443);
                            _11149_recursiveGen = _out5441;
                            _11150_recOwned = _out5442;
                            _11151_recIdents = _out5443;
                            RAST._IExpr _out5444;
                            DCOMPUTF16._IOwnership _out5445;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11149_recursiveGen, (_11126_nativeToType).dtor_value), _11150_recOwned, expectedOwnership, out _out5444, out _out5445);
                            r = _out5444;
                            resultingOwnership = _out5445;
                            readIdents = _11151_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source627.is_Nullable) {
                      DAST._IType _11152___mcc_h1842 = _source627.dtor_Nullable_a0;
                    } else if (_source627.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11153___mcc_h1844 = _source627.dtor_Tuple_a0;
                    } else if (_source627.is_Array) {
                      DAST._IType _11154___mcc_h1846 = _source627.dtor_element;
                      BigInteger _11155___mcc_h1847 = _source627.dtor_dims;
                    } else if (_source627.is_Seq) {
                      DAST._IType _11156___mcc_h1850 = _source627.dtor_element;
                    } else if (_source627.is_Set) {
                      DAST._IType _11157___mcc_h1852 = _source627.dtor_element;
                    } else if (_source627.is_Multiset) {
                      DAST._IType _11158___mcc_h1854 = _source627.dtor_element;
                    } else if (_source627.is_Map) {
                      DAST._IType _11159___mcc_h1856 = _source627.dtor_key;
                      DAST._IType _11160___mcc_h1857 = _source627.dtor_value;
                    } else if (_source627.is_SetBuilder) {
                      DAST._IType _11161___mcc_h1860 = _source627.dtor_element;
                    } else if (_source627.is_MapBuilder) {
                      DAST._IType _11162___mcc_h1862 = _source627.dtor_key;
                      DAST._IType _11163___mcc_h1863 = _source627.dtor_value;
                    } else if (_source627.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11164___mcc_h1866 = _source627.dtor_args;
                      DAST._IType _11165___mcc_h1867 = _source627.dtor_result;
                    } else if (_source627.is_Primitive) {
                      DAST._IPrimitive _11166___mcc_h1870 = _source627.dtor_Primitive_a0;
                    } else if (_source627.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11167___mcc_h1872 = _source627.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11168___mcc_h1874 = _source627.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11169_recursiveGen;
                      DCOMPUTF16._IOwnership _11170_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11171_recIdents;
                      RAST._IExpr _out5446;
                      DCOMPUTF16._IOwnership _out5447;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5448;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5446, out _out5447, out _out5448);
                      _11169_recursiveGen = _out5446;
                      _11170_recOwned = _out5447;
                      _11171_recIdents = _out5448;
                      RAST._IExpr _out5449;
                      DCOMPUTF16._IOwnership _out5450;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11169_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11126_nativeToType).dtor_value), _11170_recOwned, expectedOwnership, out _out5449, out _out5450);
                      r = _out5449;
                      resultingOwnership = _out5450;
                      readIdents = _11171_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5451;
                  DCOMPUTF16._IOwnership _out5452;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5453;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _11125_b), _11125_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5451, out _out5452, out _out5453);
                  r = _out5451;
                  resultingOwnership = _out5452;
                  readIdents = _out5453;
                }
              }
            }
          } else if (_source624.is_Nullable) {
            DAST._IType _11172___mcc_h658 = _source624.dtor_Nullable_a0;
            {
              RAST._IExpr _11173_recursiveGen;
              DCOMPUTF16._IOwnership _11174_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11175_recIdents;
              RAST._IExpr _out5454;
              DCOMPUTF16._IOwnership _out5455;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5456;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5454, out _out5455, out _out5456);
              _11173_recursiveGen = _out5454;
              _11174_recOwned = _out5455;
              _11175_recIdents = _out5456;
              r = _11173_recursiveGen;
              if (object.Equals(_11174_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5457;
              DCOMPUTF16._IOwnership _out5458;
              DCOMPUTF16.COMP.FromOwnership(r, _11174_recOwned, expectedOwnership, out _out5457, out _out5458);
              r = _out5457;
              resultingOwnership = _out5458;
              readIdents = _11175_recIdents;
            }
          } else if (_source624.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11176___mcc_h660 = _source624.dtor_Tuple_a0;
            {
              RAST._IType _11177_fromTpeGen;
              RAST._IType _out5459;
              _out5459 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11177_fromTpeGen = _out5459;
              RAST._IType _11178_toTpeGen;
              RAST._IType _out5460;
              _out5460 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11178_toTpeGen = _out5460;
              RAST._IExpr _11179_recursiveGen;
              DCOMPUTF16._IOwnership _11180_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11181_recIdents;
              RAST._IExpr _out5461;
              DCOMPUTF16._IOwnership _out5462;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5463;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5461, out _out5462, out _out5463);
              _11179_recursiveGen = _out5461;
              _11180_recOwned = _out5462;
              _11181_recIdents = _out5463;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11179_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11177_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11178_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5464;
              DCOMPUTF16._IOwnership _out5465;
              DCOMPUTF16.COMP.FromOwnership(r, _11180_recOwned, expectedOwnership, out _out5464, out _out5465);
              r = _out5464;
              resultingOwnership = _out5465;
              readIdents = _11181_recIdents;
            }
          } else if (_source624.is_Array) {
            DAST._IType _11182___mcc_h662 = _source624.dtor_element;
            BigInteger _11183___mcc_h663 = _source624.dtor_dims;
            {
              RAST._IType _11184_fromTpeGen;
              RAST._IType _out5466;
              _out5466 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11184_fromTpeGen = _out5466;
              RAST._IType _11185_toTpeGen;
              RAST._IType _out5467;
              _out5467 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11185_toTpeGen = _out5467;
              RAST._IExpr _11186_recursiveGen;
              DCOMPUTF16._IOwnership _11187_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11188_recIdents;
              RAST._IExpr _out5468;
              DCOMPUTF16._IOwnership _out5469;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5470;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5468, out _out5469, out _out5470);
              _11186_recursiveGen = _out5468;
              _11187_recOwned = _out5469;
              _11188_recIdents = _out5470;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11186_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11184_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11185_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5471;
              DCOMPUTF16._IOwnership _out5472;
              DCOMPUTF16.COMP.FromOwnership(r, _11187_recOwned, expectedOwnership, out _out5471, out _out5472);
              r = _out5471;
              resultingOwnership = _out5472;
              readIdents = _11188_recIdents;
            }
          } else if (_source624.is_Seq) {
            DAST._IType _11189___mcc_h666 = _source624.dtor_element;
            {
              RAST._IType _11190_fromTpeGen;
              RAST._IType _out5473;
              _out5473 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11190_fromTpeGen = _out5473;
              RAST._IType _11191_toTpeGen;
              RAST._IType _out5474;
              _out5474 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11191_toTpeGen = _out5474;
              RAST._IExpr _11192_recursiveGen;
              DCOMPUTF16._IOwnership _11193_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11194_recIdents;
              RAST._IExpr _out5475;
              DCOMPUTF16._IOwnership _out5476;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5477;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5475, out _out5476, out _out5477);
              _11192_recursiveGen = _out5475;
              _11193_recOwned = _out5476;
              _11194_recIdents = _out5477;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11192_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11190_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11191_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5478;
              DCOMPUTF16._IOwnership _out5479;
              DCOMPUTF16.COMP.FromOwnership(r, _11193_recOwned, expectedOwnership, out _out5478, out _out5479);
              r = _out5478;
              resultingOwnership = _out5479;
              readIdents = _11194_recIdents;
            }
          } else if (_source624.is_Set) {
            DAST._IType _11195___mcc_h668 = _source624.dtor_element;
            {
              RAST._IType _11196_fromTpeGen;
              RAST._IType _out5480;
              _out5480 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11196_fromTpeGen = _out5480;
              RAST._IType _11197_toTpeGen;
              RAST._IType _out5481;
              _out5481 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11197_toTpeGen = _out5481;
              RAST._IExpr _11198_recursiveGen;
              DCOMPUTF16._IOwnership _11199_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11200_recIdents;
              RAST._IExpr _out5482;
              DCOMPUTF16._IOwnership _out5483;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5484;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5482, out _out5483, out _out5484);
              _11198_recursiveGen = _out5482;
              _11199_recOwned = _out5483;
              _11200_recIdents = _out5484;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11198_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11196_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11197_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5485;
              DCOMPUTF16._IOwnership _out5486;
              DCOMPUTF16.COMP.FromOwnership(r, _11199_recOwned, expectedOwnership, out _out5485, out _out5486);
              r = _out5485;
              resultingOwnership = _out5486;
              readIdents = _11200_recIdents;
            }
          } else if (_source624.is_Multiset) {
            DAST._IType _11201___mcc_h670 = _source624.dtor_element;
            {
              RAST._IType _11202_fromTpeGen;
              RAST._IType _out5487;
              _out5487 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11202_fromTpeGen = _out5487;
              RAST._IType _11203_toTpeGen;
              RAST._IType _out5488;
              _out5488 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11203_toTpeGen = _out5488;
              RAST._IExpr _11204_recursiveGen;
              DCOMPUTF16._IOwnership _11205_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11206_recIdents;
              RAST._IExpr _out5489;
              DCOMPUTF16._IOwnership _out5490;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5491;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5489, out _out5490, out _out5491);
              _11204_recursiveGen = _out5489;
              _11205_recOwned = _out5490;
              _11206_recIdents = _out5491;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11204_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11202_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11203_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5492;
              DCOMPUTF16._IOwnership _out5493;
              DCOMPUTF16.COMP.FromOwnership(r, _11205_recOwned, expectedOwnership, out _out5492, out _out5493);
              r = _out5492;
              resultingOwnership = _out5493;
              readIdents = _11206_recIdents;
            }
          } else if (_source624.is_Map) {
            DAST._IType _11207___mcc_h672 = _source624.dtor_key;
            DAST._IType _11208___mcc_h673 = _source624.dtor_value;
            {
              RAST._IType _11209_fromTpeGen;
              RAST._IType _out5494;
              _out5494 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11209_fromTpeGen = _out5494;
              RAST._IType _11210_toTpeGen;
              RAST._IType _out5495;
              _out5495 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11210_toTpeGen = _out5495;
              RAST._IExpr _11211_recursiveGen;
              DCOMPUTF16._IOwnership _11212_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11213_recIdents;
              RAST._IExpr _out5496;
              DCOMPUTF16._IOwnership _out5497;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5498;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5496, out _out5497, out _out5498);
              _11211_recursiveGen = _out5496;
              _11212_recOwned = _out5497;
              _11213_recIdents = _out5498;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11211_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11209_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11210_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5499;
              DCOMPUTF16._IOwnership _out5500;
              DCOMPUTF16.COMP.FromOwnership(r, _11212_recOwned, expectedOwnership, out _out5499, out _out5500);
              r = _out5499;
              resultingOwnership = _out5500;
              readIdents = _11213_recIdents;
            }
          } else if (_source624.is_SetBuilder) {
            DAST._IType _11214___mcc_h676 = _source624.dtor_element;
            {
              RAST._IType _11215_fromTpeGen;
              RAST._IType _out5501;
              _out5501 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11215_fromTpeGen = _out5501;
              RAST._IType _11216_toTpeGen;
              RAST._IType _out5502;
              _out5502 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11216_toTpeGen = _out5502;
              RAST._IExpr _11217_recursiveGen;
              DCOMPUTF16._IOwnership _11218_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11219_recIdents;
              RAST._IExpr _out5503;
              DCOMPUTF16._IOwnership _out5504;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5505;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5503, out _out5504, out _out5505);
              _11217_recursiveGen = _out5503;
              _11218_recOwned = _out5504;
              _11219_recIdents = _out5505;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11217_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11215_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11216_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5506;
              DCOMPUTF16._IOwnership _out5507;
              DCOMPUTF16.COMP.FromOwnership(r, _11218_recOwned, expectedOwnership, out _out5506, out _out5507);
              r = _out5506;
              resultingOwnership = _out5507;
              readIdents = _11219_recIdents;
            }
          } else if (_source624.is_MapBuilder) {
            DAST._IType _11220___mcc_h678 = _source624.dtor_key;
            DAST._IType _11221___mcc_h679 = _source624.dtor_value;
            {
              RAST._IType _11222_fromTpeGen;
              RAST._IType _out5508;
              _out5508 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11222_fromTpeGen = _out5508;
              RAST._IType _11223_toTpeGen;
              RAST._IType _out5509;
              _out5509 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11223_toTpeGen = _out5509;
              RAST._IExpr _11224_recursiveGen;
              DCOMPUTF16._IOwnership _11225_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11226_recIdents;
              RAST._IExpr _out5510;
              DCOMPUTF16._IOwnership _out5511;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5512;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5510, out _out5511, out _out5512);
              _11224_recursiveGen = _out5510;
              _11225_recOwned = _out5511;
              _11226_recIdents = _out5512;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11224_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11222_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11223_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5513;
              DCOMPUTF16._IOwnership _out5514;
              DCOMPUTF16.COMP.FromOwnership(r, _11225_recOwned, expectedOwnership, out _out5513, out _out5514);
              r = _out5513;
              resultingOwnership = _out5514;
              readIdents = _11226_recIdents;
            }
          } else if (_source624.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11227___mcc_h682 = _source624.dtor_args;
            DAST._IType _11228___mcc_h683 = _source624.dtor_result;
            {
              RAST._IType _11229_fromTpeGen;
              RAST._IType _out5515;
              _out5515 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11229_fromTpeGen = _out5515;
              RAST._IType _11230_toTpeGen;
              RAST._IType _out5516;
              _out5516 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11230_toTpeGen = _out5516;
              RAST._IExpr _11231_recursiveGen;
              DCOMPUTF16._IOwnership _11232_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11233_recIdents;
              RAST._IExpr _out5517;
              DCOMPUTF16._IOwnership _out5518;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5519;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5517, out _out5518, out _out5519);
              _11231_recursiveGen = _out5517;
              _11232_recOwned = _out5518;
              _11233_recIdents = _out5519;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11231_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11229_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11230_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5520;
              DCOMPUTF16._IOwnership _out5521;
              DCOMPUTF16.COMP.FromOwnership(r, _11232_recOwned, expectedOwnership, out _out5520, out _out5521);
              r = _out5520;
              resultingOwnership = _out5521;
              readIdents = _11233_recIdents;
            }
          } else if (_source624.is_Primitive) {
            DAST._IPrimitive _11234___mcc_h686 = _source624.dtor_Primitive_a0;
            {
              RAST._IType _11235_fromTpeGen;
              RAST._IType _out5522;
              _out5522 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11235_fromTpeGen = _out5522;
              RAST._IType _11236_toTpeGen;
              RAST._IType _out5523;
              _out5523 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11236_toTpeGen = _out5523;
              RAST._IExpr _11237_recursiveGen;
              DCOMPUTF16._IOwnership _11238_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11239_recIdents;
              RAST._IExpr _out5524;
              DCOMPUTF16._IOwnership _out5525;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5526;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5524, out _out5525, out _out5526);
              _11237_recursiveGen = _out5524;
              _11238_recOwned = _out5525;
              _11239_recIdents = _out5526;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11237_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11235_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11236_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5527;
              DCOMPUTF16._IOwnership _out5528;
              DCOMPUTF16.COMP.FromOwnership(r, _11238_recOwned, expectedOwnership, out _out5527, out _out5528);
              r = _out5527;
              resultingOwnership = _out5528;
              readIdents = _11239_recIdents;
            }
          } else if (_source624.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11240___mcc_h688 = _source624.dtor_Passthrough_a0;
            {
              RAST._IType _11241_fromTpeGen;
              RAST._IType _out5529;
              _out5529 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11241_fromTpeGen = _out5529;
              RAST._IType _11242_toTpeGen;
              RAST._IType _out5530;
              _out5530 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11242_toTpeGen = _out5530;
              RAST._IExpr _11243_recursiveGen;
              DCOMPUTF16._IOwnership _11244_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11245_recIdents;
              RAST._IExpr _out5531;
              DCOMPUTF16._IOwnership _out5532;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5533;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5531, out _out5532, out _out5533);
              _11243_recursiveGen = _out5531;
              _11244_recOwned = _out5532;
              _11245_recIdents = _out5533;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11243_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11241_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11242_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5534;
              DCOMPUTF16._IOwnership _out5535;
              DCOMPUTF16.COMP.FromOwnership(r, _11244_recOwned, expectedOwnership, out _out5534, out _out5535);
              r = _out5534;
              resultingOwnership = _out5535;
              readIdents = _11245_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11246___mcc_h690 = _source624.dtor_TypeArg_a0;
            {
              RAST._IType _11247_fromTpeGen;
              RAST._IType _out5536;
              _out5536 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11247_fromTpeGen = _out5536;
              RAST._IType _11248_toTpeGen;
              RAST._IType _out5537;
              _out5537 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11248_toTpeGen = _out5537;
              RAST._IExpr _11249_recursiveGen;
              DCOMPUTF16._IOwnership _11250_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11251_recIdents;
              RAST._IExpr _out5538;
              DCOMPUTF16._IOwnership _out5539;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5540;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5538, out _out5539, out _out5540);
              _11249_recursiveGen = _out5538;
              _11250_recOwned = _out5539;
              _11251_recIdents = _out5540;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11249_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11247_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11248_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5541;
              DCOMPUTF16._IOwnership _out5542;
              DCOMPUTF16.COMP.FromOwnership(r, _11250_recOwned, expectedOwnership, out _out5541, out _out5542);
              r = _out5541;
              resultingOwnership = _out5542;
              readIdents = _11251_recIdents;
            }
          }
        } else if (_source565.is_Map) {
          DAST._IType _11252___mcc_h692 = _source565.dtor_key;
          DAST._IType _11253___mcc_h693 = _source565.dtor_value;
          DAST._IType _source629 = _9615___mcc_h1;
          if (_source629.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11254___mcc_h700 = _source629.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11255___mcc_h701 = _source629.dtor_typeArgs;
            DAST._IResolvedType _11256___mcc_h702 = _source629.dtor_resolved;
            DAST._IResolvedType _source630 = _11256___mcc_h702;
            if (_source630.is_AllocatedDatatype) {
              DAST._IDatatypeType _11257___mcc_h706 = _source630.dtor_datatypeType;
              {
                RAST._IType _11258_fromTpeGen;
                RAST._IType _out5543;
                _out5543 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11258_fromTpeGen = _out5543;
                RAST._IType _11259_toTpeGen;
                RAST._IType _out5544;
                _out5544 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11259_toTpeGen = _out5544;
                RAST._IExpr _11260_recursiveGen;
                DCOMPUTF16._IOwnership _11261_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11262_recIdents;
                RAST._IExpr _out5545;
                DCOMPUTF16._IOwnership _out5546;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5547;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5545, out _out5546, out _out5547);
                _11260_recursiveGen = _out5545;
                _11261_recOwned = _out5546;
                _11262_recIdents = _out5547;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11260_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11258_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11259_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5548;
                DCOMPUTF16._IOwnership _out5549;
                DCOMPUTF16.COMP.FromOwnership(r, _11261_recOwned, expectedOwnership, out _out5548, out _out5549);
                r = _out5548;
                resultingOwnership = _out5549;
                readIdents = _11262_recIdents;
              }
            } else if (_source630.is_Datatype) {
              DAST._IDatatypeType _11263___mcc_h708 = _source630.dtor_datatypeType;
              {
                RAST._IType _11264_fromTpeGen;
                RAST._IType _out5550;
                _out5550 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11264_fromTpeGen = _out5550;
                RAST._IType _11265_toTpeGen;
                RAST._IType _out5551;
                _out5551 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11265_toTpeGen = _out5551;
                RAST._IExpr _11266_recursiveGen;
                DCOMPUTF16._IOwnership _11267_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11268_recIdents;
                RAST._IExpr _out5552;
                DCOMPUTF16._IOwnership _out5553;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5554;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5552, out _out5553, out _out5554);
                _11266_recursiveGen = _out5552;
                _11267_recOwned = _out5553;
                _11268_recIdents = _out5554;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11266_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11264_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11265_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5555;
                DCOMPUTF16._IOwnership _out5556;
                DCOMPUTF16.COMP.FromOwnership(r, _11267_recOwned, expectedOwnership, out _out5555, out _out5556);
                r = _out5555;
                resultingOwnership = _out5556;
                readIdents = _11268_recIdents;
              }
            } else if (_source630.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11269___mcc_h710 = _source630.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11270___mcc_h711 = _source630.dtor_attributes;
              {
                RAST._IType _11271_fromTpeGen;
                RAST._IType _out5557;
                _out5557 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11271_fromTpeGen = _out5557;
                RAST._IType _11272_toTpeGen;
                RAST._IType _out5558;
                _out5558 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11272_toTpeGen = _out5558;
                RAST._IExpr _11273_recursiveGen;
                DCOMPUTF16._IOwnership _11274_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11275_recIdents;
                RAST._IExpr _out5559;
                DCOMPUTF16._IOwnership _out5560;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5561;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5559, out _out5560, out _out5561);
                _11273_recursiveGen = _out5559;
                _11274_recOwned = _out5560;
                _11275_recIdents = _out5561;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11273_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11271_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11272_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5562;
                DCOMPUTF16._IOwnership _out5563;
                DCOMPUTF16.COMP.FromOwnership(r, _11274_recOwned, expectedOwnership, out _out5562, out _out5563);
                r = _out5562;
                resultingOwnership = _out5563;
                readIdents = _11275_recIdents;
              }
            } else {
              DAST._IType _11276___mcc_h714 = _source630.dtor_baseType;
              DAST._INewtypeRange _11277___mcc_h715 = _source630.dtor_range;
              bool _11278___mcc_h716 = _source630.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11279___mcc_h717 = _source630.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11280_attributes = _11279___mcc_h717;
              bool _11281_erase = _11278___mcc_h716;
              DAST._INewtypeRange _11282_range = _11277___mcc_h715;
              DAST._IType _11283_b = _11276___mcc_h714;
              {
                Std.Wrappers._IOption<RAST._IType> _11284_nativeToType;
                _11284_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11283_b, _11282_range);
                if (object.Equals(_9609_fromTpe, _11283_b)) {
                  RAST._IExpr _11285_recursiveGen;
                  DCOMPUTF16._IOwnership _11286_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11287_recIdents;
                  RAST._IExpr _out5564;
                  DCOMPUTF16._IOwnership _out5565;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5566;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5564, out _out5565, out _out5566);
                  _11285_recursiveGen = _out5564;
                  _11286_recOwned = _out5565;
                  _11287_recIdents = _out5566;
                  readIdents = _11287_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source631 = _11284_nativeToType;
                  if (_source631.is_None) {
                    if (_11281_erase) {
                      r = _11285_recursiveGen;
                    } else {
                      RAST._IType _11288_rhsType;
                      RAST._IType _out5567;
                      _out5567 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _11288_rhsType = _out5567;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11288_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11285_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5568;
                    DCOMPUTF16._IOwnership _out5569;
                    DCOMPUTF16.COMP.FromOwnership(r, _11286_recOwned, expectedOwnership, out _out5568, out _out5569);
                    r = _out5568;
                    resultingOwnership = _out5569;
                  } else {
                    RAST._IType _11289___mcc_h1876 = _source631.dtor_value;
                    RAST._IType _11290_v = _11289___mcc_h1876;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11285_recursiveGen, RAST.Expr.create_ExprFromType(_11290_v)));
                    RAST._IExpr _out5570;
                    DCOMPUTF16._IOwnership _out5571;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5570, out _out5571);
                    r = _out5570;
                    resultingOwnership = _out5571;
                  }
                } else {
                  if ((_11284_nativeToType).is_Some) {
                    DAST._IType _source632 = _9609_fromTpe;
                    if (_source632.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11291___mcc_h1877 = _source632.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11292___mcc_h1878 = _source632.dtor_typeArgs;
                      DAST._IResolvedType _11293___mcc_h1879 = _source632.dtor_resolved;
                      DAST._IResolvedType _source633 = _11293___mcc_h1879;
                      if (_source633.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11294___mcc_h1883 = _source633.dtor_datatypeType;
                      } else if (_source633.is_Datatype) {
                        DAST._IDatatypeType _11295___mcc_h1885 = _source633.dtor_datatypeType;
                      } else if (_source633.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11296___mcc_h1887 = _source633.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11297___mcc_h1888 = _source633.dtor_attributes;
                      } else {
                        DAST._IType _11298___mcc_h1891 = _source633.dtor_baseType;
                        DAST._INewtypeRange _11299___mcc_h1892 = _source633.dtor_range;
                        bool _11300___mcc_h1893 = _source633.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11301___mcc_h1894 = _source633.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11302_attributes0 = _11301___mcc_h1894;
                        bool _11303_erase0 = _11300___mcc_h1893;
                        DAST._INewtypeRange _11304_range0 = _11299___mcc_h1892;
                        DAST._IType _11305_b0 = _11298___mcc_h1891;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11306_nativeFromType;
                          _11306_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11305_b0, _11304_range0);
                          if ((_11306_nativeFromType).is_Some) {
                            RAST._IExpr _11307_recursiveGen;
                            DCOMPUTF16._IOwnership _11308_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11309_recIdents;
                            RAST._IExpr _out5572;
                            DCOMPUTF16._IOwnership _out5573;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5574;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5572, out _out5573, out _out5574);
                            _11307_recursiveGen = _out5572;
                            _11308_recOwned = _out5573;
                            _11309_recIdents = _out5574;
                            RAST._IExpr _out5575;
                            DCOMPUTF16._IOwnership _out5576;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11307_recursiveGen, (_11284_nativeToType).dtor_value), _11308_recOwned, expectedOwnership, out _out5575, out _out5576);
                            r = _out5575;
                            resultingOwnership = _out5576;
                            readIdents = _11309_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source632.is_Nullable) {
                      DAST._IType _11310___mcc_h1899 = _source632.dtor_Nullable_a0;
                    } else if (_source632.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11311___mcc_h1901 = _source632.dtor_Tuple_a0;
                    } else if (_source632.is_Array) {
                      DAST._IType _11312___mcc_h1903 = _source632.dtor_element;
                      BigInteger _11313___mcc_h1904 = _source632.dtor_dims;
                    } else if (_source632.is_Seq) {
                      DAST._IType _11314___mcc_h1907 = _source632.dtor_element;
                    } else if (_source632.is_Set) {
                      DAST._IType _11315___mcc_h1909 = _source632.dtor_element;
                    } else if (_source632.is_Multiset) {
                      DAST._IType _11316___mcc_h1911 = _source632.dtor_element;
                    } else if (_source632.is_Map) {
                      DAST._IType _11317___mcc_h1913 = _source632.dtor_key;
                      DAST._IType _11318___mcc_h1914 = _source632.dtor_value;
                    } else if (_source632.is_SetBuilder) {
                      DAST._IType _11319___mcc_h1917 = _source632.dtor_element;
                    } else if (_source632.is_MapBuilder) {
                      DAST._IType _11320___mcc_h1919 = _source632.dtor_key;
                      DAST._IType _11321___mcc_h1920 = _source632.dtor_value;
                    } else if (_source632.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11322___mcc_h1923 = _source632.dtor_args;
                      DAST._IType _11323___mcc_h1924 = _source632.dtor_result;
                    } else if (_source632.is_Primitive) {
                      DAST._IPrimitive _11324___mcc_h1927 = _source632.dtor_Primitive_a0;
                    } else if (_source632.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11325___mcc_h1929 = _source632.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11326___mcc_h1931 = _source632.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11327_recursiveGen;
                      DCOMPUTF16._IOwnership _11328_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11329_recIdents;
                      RAST._IExpr _out5577;
                      DCOMPUTF16._IOwnership _out5578;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5579;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5577, out _out5578, out _out5579);
                      _11327_recursiveGen = _out5577;
                      _11328_recOwned = _out5578;
                      _11329_recIdents = _out5579;
                      RAST._IExpr _out5580;
                      DCOMPUTF16._IOwnership _out5581;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11327_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11284_nativeToType).dtor_value), _11328_recOwned, expectedOwnership, out _out5580, out _out5581);
                      r = _out5580;
                      resultingOwnership = _out5581;
                      readIdents = _11329_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5582;
                  DCOMPUTF16._IOwnership _out5583;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5584;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _11283_b), _11283_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5582, out _out5583, out _out5584);
                  r = _out5582;
                  resultingOwnership = _out5583;
                  readIdents = _out5584;
                }
              }
            }
          } else if (_source629.is_Nullable) {
            DAST._IType _11330___mcc_h722 = _source629.dtor_Nullable_a0;
            {
              RAST._IExpr _11331_recursiveGen;
              DCOMPUTF16._IOwnership _11332_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11333_recIdents;
              RAST._IExpr _out5585;
              DCOMPUTF16._IOwnership _out5586;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5587;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5585, out _out5586, out _out5587);
              _11331_recursiveGen = _out5585;
              _11332_recOwned = _out5586;
              _11333_recIdents = _out5587;
              r = _11331_recursiveGen;
              if (object.Equals(_11332_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5588;
              DCOMPUTF16._IOwnership _out5589;
              DCOMPUTF16.COMP.FromOwnership(r, _11332_recOwned, expectedOwnership, out _out5588, out _out5589);
              r = _out5588;
              resultingOwnership = _out5589;
              readIdents = _11333_recIdents;
            }
          } else if (_source629.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11334___mcc_h724 = _source629.dtor_Tuple_a0;
            {
              RAST._IType _11335_fromTpeGen;
              RAST._IType _out5590;
              _out5590 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11335_fromTpeGen = _out5590;
              RAST._IType _11336_toTpeGen;
              RAST._IType _out5591;
              _out5591 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11336_toTpeGen = _out5591;
              RAST._IExpr _11337_recursiveGen;
              DCOMPUTF16._IOwnership _11338_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11339_recIdents;
              RAST._IExpr _out5592;
              DCOMPUTF16._IOwnership _out5593;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5594;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5592, out _out5593, out _out5594);
              _11337_recursiveGen = _out5592;
              _11338_recOwned = _out5593;
              _11339_recIdents = _out5594;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11337_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11335_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11336_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5595;
              DCOMPUTF16._IOwnership _out5596;
              DCOMPUTF16.COMP.FromOwnership(r, _11338_recOwned, expectedOwnership, out _out5595, out _out5596);
              r = _out5595;
              resultingOwnership = _out5596;
              readIdents = _11339_recIdents;
            }
          } else if (_source629.is_Array) {
            DAST._IType _11340___mcc_h726 = _source629.dtor_element;
            BigInteger _11341___mcc_h727 = _source629.dtor_dims;
            {
              RAST._IType _11342_fromTpeGen;
              RAST._IType _out5597;
              _out5597 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11342_fromTpeGen = _out5597;
              RAST._IType _11343_toTpeGen;
              RAST._IType _out5598;
              _out5598 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11343_toTpeGen = _out5598;
              RAST._IExpr _11344_recursiveGen;
              DCOMPUTF16._IOwnership _11345_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11346_recIdents;
              RAST._IExpr _out5599;
              DCOMPUTF16._IOwnership _out5600;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5601;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5599, out _out5600, out _out5601);
              _11344_recursiveGen = _out5599;
              _11345_recOwned = _out5600;
              _11346_recIdents = _out5601;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11344_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11342_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11343_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5602;
              DCOMPUTF16._IOwnership _out5603;
              DCOMPUTF16.COMP.FromOwnership(r, _11345_recOwned, expectedOwnership, out _out5602, out _out5603);
              r = _out5602;
              resultingOwnership = _out5603;
              readIdents = _11346_recIdents;
            }
          } else if (_source629.is_Seq) {
            DAST._IType _11347___mcc_h730 = _source629.dtor_element;
            {
              RAST._IType _11348_fromTpeGen;
              RAST._IType _out5604;
              _out5604 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11348_fromTpeGen = _out5604;
              RAST._IType _11349_toTpeGen;
              RAST._IType _out5605;
              _out5605 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11349_toTpeGen = _out5605;
              RAST._IExpr _11350_recursiveGen;
              DCOMPUTF16._IOwnership _11351_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11352_recIdents;
              RAST._IExpr _out5606;
              DCOMPUTF16._IOwnership _out5607;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5608;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5606, out _out5607, out _out5608);
              _11350_recursiveGen = _out5606;
              _11351_recOwned = _out5607;
              _11352_recIdents = _out5608;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11350_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11348_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11349_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5609;
              DCOMPUTF16._IOwnership _out5610;
              DCOMPUTF16.COMP.FromOwnership(r, _11351_recOwned, expectedOwnership, out _out5609, out _out5610);
              r = _out5609;
              resultingOwnership = _out5610;
              readIdents = _11352_recIdents;
            }
          } else if (_source629.is_Set) {
            DAST._IType _11353___mcc_h732 = _source629.dtor_element;
            {
              RAST._IType _11354_fromTpeGen;
              RAST._IType _out5611;
              _out5611 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11354_fromTpeGen = _out5611;
              RAST._IType _11355_toTpeGen;
              RAST._IType _out5612;
              _out5612 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11355_toTpeGen = _out5612;
              RAST._IExpr _11356_recursiveGen;
              DCOMPUTF16._IOwnership _11357_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11358_recIdents;
              RAST._IExpr _out5613;
              DCOMPUTF16._IOwnership _out5614;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5615;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5613, out _out5614, out _out5615);
              _11356_recursiveGen = _out5613;
              _11357_recOwned = _out5614;
              _11358_recIdents = _out5615;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11356_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11354_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11355_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5616;
              DCOMPUTF16._IOwnership _out5617;
              DCOMPUTF16.COMP.FromOwnership(r, _11357_recOwned, expectedOwnership, out _out5616, out _out5617);
              r = _out5616;
              resultingOwnership = _out5617;
              readIdents = _11358_recIdents;
            }
          } else if (_source629.is_Multiset) {
            DAST._IType _11359___mcc_h734 = _source629.dtor_element;
            {
              RAST._IType _11360_fromTpeGen;
              RAST._IType _out5618;
              _out5618 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11360_fromTpeGen = _out5618;
              RAST._IType _11361_toTpeGen;
              RAST._IType _out5619;
              _out5619 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11361_toTpeGen = _out5619;
              RAST._IExpr _11362_recursiveGen;
              DCOMPUTF16._IOwnership _11363_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11364_recIdents;
              RAST._IExpr _out5620;
              DCOMPUTF16._IOwnership _out5621;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5622;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5620, out _out5621, out _out5622);
              _11362_recursiveGen = _out5620;
              _11363_recOwned = _out5621;
              _11364_recIdents = _out5622;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11362_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11360_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11361_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5623;
              DCOMPUTF16._IOwnership _out5624;
              DCOMPUTF16.COMP.FromOwnership(r, _11363_recOwned, expectedOwnership, out _out5623, out _out5624);
              r = _out5623;
              resultingOwnership = _out5624;
              readIdents = _11364_recIdents;
            }
          } else if (_source629.is_Map) {
            DAST._IType _11365___mcc_h736 = _source629.dtor_key;
            DAST._IType _11366___mcc_h737 = _source629.dtor_value;
            {
              RAST._IType _11367_fromTpeGen;
              RAST._IType _out5625;
              _out5625 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11367_fromTpeGen = _out5625;
              RAST._IType _11368_toTpeGen;
              RAST._IType _out5626;
              _out5626 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11368_toTpeGen = _out5626;
              RAST._IExpr _11369_recursiveGen;
              DCOMPUTF16._IOwnership _11370_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11371_recIdents;
              RAST._IExpr _out5627;
              DCOMPUTF16._IOwnership _out5628;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5629;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5627, out _out5628, out _out5629);
              _11369_recursiveGen = _out5627;
              _11370_recOwned = _out5628;
              _11371_recIdents = _out5629;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11369_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11367_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11368_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5630;
              DCOMPUTF16._IOwnership _out5631;
              DCOMPUTF16.COMP.FromOwnership(r, _11370_recOwned, expectedOwnership, out _out5630, out _out5631);
              r = _out5630;
              resultingOwnership = _out5631;
              readIdents = _11371_recIdents;
            }
          } else if (_source629.is_SetBuilder) {
            DAST._IType _11372___mcc_h740 = _source629.dtor_element;
            {
              RAST._IType _11373_fromTpeGen;
              RAST._IType _out5632;
              _out5632 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11373_fromTpeGen = _out5632;
              RAST._IType _11374_toTpeGen;
              RAST._IType _out5633;
              _out5633 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11374_toTpeGen = _out5633;
              RAST._IExpr _11375_recursiveGen;
              DCOMPUTF16._IOwnership _11376_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11377_recIdents;
              RAST._IExpr _out5634;
              DCOMPUTF16._IOwnership _out5635;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5636;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5634, out _out5635, out _out5636);
              _11375_recursiveGen = _out5634;
              _11376_recOwned = _out5635;
              _11377_recIdents = _out5636;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11375_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11373_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11374_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5637;
              DCOMPUTF16._IOwnership _out5638;
              DCOMPUTF16.COMP.FromOwnership(r, _11376_recOwned, expectedOwnership, out _out5637, out _out5638);
              r = _out5637;
              resultingOwnership = _out5638;
              readIdents = _11377_recIdents;
            }
          } else if (_source629.is_MapBuilder) {
            DAST._IType _11378___mcc_h742 = _source629.dtor_key;
            DAST._IType _11379___mcc_h743 = _source629.dtor_value;
            {
              RAST._IType _11380_fromTpeGen;
              RAST._IType _out5639;
              _out5639 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11380_fromTpeGen = _out5639;
              RAST._IType _11381_toTpeGen;
              RAST._IType _out5640;
              _out5640 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11381_toTpeGen = _out5640;
              RAST._IExpr _11382_recursiveGen;
              DCOMPUTF16._IOwnership _11383_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11384_recIdents;
              RAST._IExpr _out5641;
              DCOMPUTF16._IOwnership _out5642;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5643;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5641, out _out5642, out _out5643);
              _11382_recursiveGen = _out5641;
              _11383_recOwned = _out5642;
              _11384_recIdents = _out5643;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11382_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11380_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11381_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5644;
              DCOMPUTF16._IOwnership _out5645;
              DCOMPUTF16.COMP.FromOwnership(r, _11383_recOwned, expectedOwnership, out _out5644, out _out5645);
              r = _out5644;
              resultingOwnership = _out5645;
              readIdents = _11384_recIdents;
            }
          } else if (_source629.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11385___mcc_h746 = _source629.dtor_args;
            DAST._IType _11386___mcc_h747 = _source629.dtor_result;
            {
              RAST._IType _11387_fromTpeGen;
              RAST._IType _out5646;
              _out5646 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11387_fromTpeGen = _out5646;
              RAST._IType _11388_toTpeGen;
              RAST._IType _out5647;
              _out5647 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11388_toTpeGen = _out5647;
              RAST._IExpr _11389_recursiveGen;
              DCOMPUTF16._IOwnership _11390_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11391_recIdents;
              RAST._IExpr _out5648;
              DCOMPUTF16._IOwnership _out5649;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5650;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5648, out _out5649, out _out5650);
              _11389_recursiveGen = _out5648;
              _11390_recOwned = _out5649;
              _11391_recIdents = _out5650;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11389_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11387_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11388_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5651;
              DCOMPUTF16._IOwnership _out5652;
              DCOMPUTF16.COMP.FromOwnership(r, _11390_recOwned, expectedOwnership, out _out5651, out _out5652);
              r = _out5651;
              resultingOwnership = _out5652;
              readIdents = _11391_recIdents;
            }
          } else if (_source629.is_Primitive) {
            DAST._IPrimitive _11392___mcc_h750 = _source629.dtor_Primitive_a0;
            {
              RAST._IType _11393_fromTpeGen;
              RAST._IType _out5653;
              _out5653 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11393_fromTpeGen = _out5653;
              RAST._IType _11394_toTpeGen;
              RAST._IType _out5654;
              _out5654 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11394_toTpeGen = _out5654;
              RAST._IExpr _11395_recursiveGen;
              DCOMPUTF16._IOwnership _11396_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11397_recIdents;
              RAST._IExpr _out5655;
              DCOMPUTF16._IOwnership _out5656;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5657;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5655, out _out5656, out _out5657);
              _11395_recursiveGen = _out5655;
              _11396_recOwned = _out5656;
              _11397_recIdents = _out5657;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11395_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11393_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11394_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5658;
              DCOMPUTF16._IOwnership _out5659;
              DCOMPUTF16.COMP.FromOwnership(r, _11396_recOwned, expectedOwnership, out _out5658, out _out5659);
              r = _out5658;
              resultingOwnership = _out5659;
              readIdents = _11397_recIdents;
            }
          } else if (_source629.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11398___mcc_h752 = _source629.dtor_Passthrough_a0;
            {
              RAST._IType _11399_fromTpeGen;
              RAST._IType _out5660;
              _out5660 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11399_fromTpeGen = _out5660;
              RAST._IType _11400_toTpeGen;
              RAST._IType _out5661;
              _out5661 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11400_toTpeGen = _out5661;
              RAST._IExpr _11401_recursiveGen;
              DCOMPUTF16._IOwnership _11402_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11403_recIdents;
              RAST._IExpr _out5662;
              DCOMPUTF16._IOwnership _out5663;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5664;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5662, out _out5663, out _out5664);
              _11401_recursiveGen = _out5662;
              _11402_recOwned = _out5663;
              _11403_recIdents = _out5664;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11401_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11399_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11400_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5665;
              DCOMPUTF16._IOwnership _out5666;
              DCOMPUTF16.COMP.FromOwnership(r, _11402_recOwned, expectedOwnership, out _out5665, out _out5666);
              r = _out5665;
              resultingOwnership = _out5666;
              readIdents = _11403_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11404___mcc_h754 = _source629.dtor_TypeArg_a0;
            {
              RAST._IType _11405_fromTpeGen;
              RAST._IType _out5667;
              _out5667 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11405_fromTpeGen = _out5667;
              RAST._IType _11406_toTpeGen;
              RAST._IType _out5668;
              _out5668 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11406_toTpeGen = _out5668;
              RAST._IExpr _11407_recursiveGen;
              DCOMPUTF16._IOwnership _11408_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11409_recIdents;
              RAST._IExpr _out5669;
              DCOMPUTF16._IOwnership _out5670;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5671;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5669, out _out5670, out _out5671);
              _11407_recursiveGen = _out5669;
              _11408_recOwned = _out5670;
              _11409_recIdents = _out5671;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11407_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11405_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11406_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5672;
              DCOMPUTF16._IOwnership _out5673;
              DCOMPUTF16.COMP.FromOwnership(r, _11408_recOwned, expectedOwnership, out _out5672, out _out5673);
              r = _out5672;
              resultingOwnership = _out5673;
              readIdents = _11409_recIdents;
            }
          }
        } else if (_source565.is_SetBuilder) {
          DAST._IType _11410___mcc_h756 = _source565.dtor_element;
          DAST._IType _source634 = _9615___mcc_h1;
          if (_source634.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11411___mcc_h760 = _source634.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11412___mcc_h761 = _source634.dtor_typeArgs;
            DAST._IResolvedType _11413___mcc_h762 = _source634.dtor_resolved;
            DAST._IResolvedType _source635 = _11413___mcc_h762;
            if (_source635.is_AllocatedDatatype) {
              DAST._IDatatypeType _11414___mcc_h766 = _source635.dtor_datatypeType;
              {
                RAST._IType _11415_fromTpeGen;
                RAST._IType _out5674;
                _out5674 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11415_fromTpeGen = _out5674;
                RAST._IType _11416_toTpeGen;
                RAST._IType _out5675;
                _out5675 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11416_toTpeGen = _out5675;
                RAST._IExpr _11417_recursiveGen;
                DCOMPUTF16._IOwnership _11418_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11419_recIdents;
                RAST._IExpr _out5676;
                DCOMPUTF16._IOwnership _out5677;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5678;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5676, out _out5677, out _out5678);
                _11417_recursiveGen = _out5676;
                _11418_recOwned = _out5677;
                _11419_recIdents = _out5678;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11417_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11415_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11416_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5679;
                DCOMPUTF16._IOwnership _out5680;
                DCOMPUTF16.COMP.FromOwnership(r, _11418_recOwned, expectedOwnership, out _out5679, out _out5680);
                r = _out5679;
                resultingOwnership = _out5680;
                readIdents = _11419_recIdents;
              }
            } else if (_source635.is_Datatype) {
              DAST._IDatatypeType _11420___mcc_h768 = _source635.dtor_datatypeType;
              {
                RAST._IType _11421_fromTpeGen;
                RAST._IType _out5681;
                _out5681 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11421_fromTpeGen = _out5681;
                RAST._IType _11422_toTpeGen;
                RAST._IType _out5682;
                _out5682 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11422_toTpeGen = _out5682;
                RAST._IExpr _11423_recursiveGen;
                DCOMPUTF16._IOwnership _11424_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11425_recIdents;
                RAST._IExpr _out5683;
                DCOMPUTF16._IOwnership _out5684;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5685;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5683, out _out5684, out _out5685);
                _11423_recursiveGen = _out5683;
                _11424_recOwned = _out5684;
                _11425_recIdents = _out5685;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11423_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11421_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11422_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5686;
                DCOMPUTF16._IOwnership _out5687;
                DCOMPUTF16.COMP.FromOwnership(r, _11424_recOwned, expectedOwnership, out _out5686, out _out5687);
                r = _out5686;
                resultingOwnership = _out5687;
                readIdents = _11425_recIdents;
              }
            } else if (_source635.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11426___mcc_h770 = _source635.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11427___mcc_h771 = _source635.dtor_attributes;
              {
                RAST._IType _11428_fromTpeGen;
                RAST._IType _out5688;
                _out5688 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11428_fromTpeGen = _out5688;
                RAST._IType _11429_toTpeGen;
                RAST._IType _out5689;
                _out5689 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11429_toTpeGen = _out5689;
                RAST._IExpr _11430_recursiveGen;
                DCOMPUTF16._IOwnership _11431_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11432_recIdents;
                RAST._IExpr _out5690;
                DCOMPUTF16._IOwnership _out5691;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5692;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5690, out _out5691, out _out5692);
                _11430_recursiveGen = _out5690;
                _11431_recOwned = _out5691;
                _11432_recIdents = _out5692;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11430_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11428_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11429_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5693;
                DCOMPUTF16._IOwnership _out5694;
                DCOMPUTF16.COMP.FromOwnership(r, _11431_recOwned, expectedOwnership, out _out5693, out _out5694);
                r = _out5693;
                resultingOwnership = _out5694;
                readIdents = _11432_recIdents;
              }
            } else {
              DAST._IType _11433___mcc_h774 = _source635.dtor_baseType;
              DAST._INewtypeRange _11434___mcc_h775 = _source635.dtor_range;
              bool _11435___mcc_h776 = _source635.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11436___mcc_h777 = _source635.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11437_attributes = _11436___mcc_h777;
              bool _11438_erase = _11435___mcc_h776;
              DAST._INewtypeRange _11439_range = _11434___mcc_h775;
              DAST._IType _11440_b = _11433___mcc_h774;
              {
                Std.Wrappers._IOption<RAST._IType> _11441_nativeToType;
                _11441_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11440_b, _11439_range);
                if (object.Equals(_9609_fromTpe, _11440_b)) {
                  RAST._IExpr _11442_recursiveGen;
                  DCOMPUTF16._IOwnership _11443_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11444_recIdents;
                  RAST._IExpr _out5695;
                  DCOMPUTF16._IOwnership _out5696;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5697;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5695, out _out5696, out _out5697);
                  _11442_recursiveGen = _out5695;
                  _11443_recOwned = _out5696;
                  _11444_recIdents = _out5697;
                  readIdents = _11444_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source636 = _11441_nativeToType;
                  if (_source636.is_None) {
                    if (_11438_erase) {
                      r = _11442_recursiveGen;
                    } else {
                      RAST._IType _11445_rhsType;
                      RAST._IType _out5698;
                      _out5698 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _11445_rhsType = _out5698;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11445_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11442_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5699;
                    DCOMPUTF16._IOwnership _out5700;
                    DCOMPUTF16.COMP.FromOwnership(r, _11443_recOwned, expectedOwnership, out _out5699, out _out5700);
                    r = _out5699;
                    resultingOwnership = _out5700;
                  } else {
                    RAST._IType _11446___mcc_h1933 = _source636.dtor_value;
                    RAST._IType _11447_v = _11446___mcc_h1933;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11442_recursiveGen, RAST.Expr.create_ExprFromType(_11447_v)));
                    RAST._IExpr _out5701;
                    DCOMPUTF16._IOwnership _out5702;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5701, out _out5702);
                    r = _out5701;
                    resultingOwnership = _out5702;
                  }
                } else {
                  if ((_11441_nativeToType).is_Some) {
                    DAST._IType _source637 = _9609_fromTpe;
                    if (_source637.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11448___mcc_h1934 = _source637.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11449___mcc_h1935 = _source637.dtor_typeArgs;
                      DAST._IResolvedType _11450___mcc_h1936 = _source637.dtor_resolved;
                      DAST._IResolvedType _source638 = _11450___mcc_h1936;
                      if (_source638.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11451___mcc_h1940 = _source638.dtor_datatypeType;
                      } else if (_source638.is_Datatype) {
                        DAST._IDatatypeType _11452___mcc_h1942 = _source638.dtor_datatypeType;
                      } else if (_source638.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11453___mcc_h1944 = _source638.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11454___mcc_h1945 = _source638.dtor_attributes;
                      } else {
                        DAST._IType _11455___mcc_h1948 = _source638.dtor_baseType;
                        DAST._INewtypeRange _11456___mcc_h1949 = _source638.dtor_range;
                        bool _11457___mcc_h1950 = _source638.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11458___mcc_h1951 = _source638.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11459_attributes0 = _11458___mcc_h1951;
                        bool _11460_erase0 = _11457___mcc_h1950;
                        DAST._INewtypeRange _11461_range0 = _11456___mcc_h1949;
                        DAST._IType _11462_b0 = _11455___mcc_h1948;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11463_nativeFromType;
                          _11463_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11462_b0, _11461_range0);
                          if ((_11463_nativeFromType).is_Some) {
                            RAST._IExpr _11464_recursiveGen;
                            DCOMPUTF16._IOwnership _11465_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11466_recIdents;
                            RAST._IExpr _out5703;
                            DCOMPUTF16._IOwnership _out5704;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5705;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5703, out _out5704, out _out5705);
                            _11464_recursiveGen = _out5703;
                            _11465_recOwned = _out5704;
                            _11466_recIdents = _out5705;
                            RAST._IExpr _out5706;
                            DCOMPUTF16._IOwnership _out5707;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11464_recursiveGen, (_11441_nativeToType).dtor_value), _11465_recOwned, expectedOwnership, out _out5706, out _out5707);
                            r = _out5706;
                            resultingOwnership = _out5707;
                            readIdents = _11466_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source637.is_Nullable) {
                      DAST._IType _11467___mcc_h1956 = _source637.dtor_Nullable_a0;
                    } else if (_source637.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11468___mcc_h1958 = _source637.dtor_Tuple_a0;
                    } else if (_source637.is_Array) {
                      DAST._IType _11469___mcc_h1960 = _source637.dtor_element;
                      BigInteger _11470___mcc_h1961 = _source637.dtor_dims;
                    } else if (_source637.is_Seq) {
                      DAST._IType _11471___mcc_h1964 = _source637.dtor_element;
                    } else if (_source637.is_Set) {
                      DAST._IType _11472___mcc_h1966 = _source637.dtor_element;
                    } else if (_source637.is_Multiset) {
                      DAST._IType _11473___mcc_h1968 = _source637.dtor_element;
                    } else if (_source637.is_Map) {
                      DAST._IType _11474___mcc_h1970 = _source637.dtor_key;
                      DAST._IType _11475___mcc_h1971 = _source637.dtor_value;
                    } else if (_source637.is_SetBuilder) {
                      DAST._IType _11476___mcc_h1974 = _source637.dtor_element;
                    } else if (_source637.is_MapBuilder) {
                      DAST._IType _11477___mcc_h1976 = _source637.dtor_key;
                      DAST._IType _11478___mcc_h1977 = _source637.dtor_value;
                    } else if (_source637.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11479___mcc_h1980 = _source637.dtor_args;
                      DAST._IType _11480___mcc_h1981 = _source637.dtor_result;
                    } else if (_source637.is_Primitive) {
                      DAST._IPrimitive _11481___mcc_h1984 = _source637.dtor_Primitive_a0;
                    } else if (_source637.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11482___mcc_h1986 = _source637.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11483___mcc_h1988 = _source637.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11484_recursiveGen;
                      DCOMPUTF16._IOwnership _11485_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11486_recIdents;
                      RAST._IExpr _out5708;
                      DCOMPUTF16._IOwnership _out5709;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5710;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5708, out _out5709, out _out5710);
                      _11484_recursiveGen = _out5708;
                      _11485_recOwned = _out5709;
                      _11486_recIdents = _out5710;
                      RAST._IExpr _out5711;
                      DCOMPUTF16._IOwnership _out5712;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11484_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11441_nativeToType).dtor_value), _11485_recOwned, expectedOwnership, out _out5711, out _out5712);
                      r = _out5711;
                      resultingOwnership = _out5712;
                      readIdents = _11486_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5713;
                  DCOMPUTF16._IOwnership _out5714;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5715;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _11440_b), _11440_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5713, out _out5714, out _out5715);
                  r = _out5713;
                  resultingOwnership = _out5714;
                  readIdents = _out5715;
                }
              }
            }
          } else if (_source634.is_Nullable) {
            DAST._IType _11487___mcc_h782 = _source634.dtor_Nullable_a0;
            {
              RAST._IExpr _11488_recursiveGen;
              DCOMPUTF16._IOwnership _11489_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11490_recIdents;
              RAST._IExpr _out5716;
              DCOMPUTF16._IOwnership _out5717;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5718;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5716, out _out5717, out _out5718);
              _11488_recursiveGen = _out5716;
              _11489_recOwned = _out5717;
              _11490_recIdents = _out5718;
              r = _11488_recursiveGen;
              if (object.Equals(_11489_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5719;
              DCOMPUTF16._IOwnership _out5720;
              DCOMPUTF16.COMP.FromOwnership(r, _11489_recOwned, expectedOwnership, out _out5719, out _out5720);
              r = _out5719;
              resultingOwnership = _out5720;
              readIdents = _11490_recIdents;
            }
          } else if (_source634.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11491___mcc_h784 = _source634.dtor_Tuple_a0;
            {
              RAST._IType _11492_fromTpeGen;
              RAST._IType _out5721;
              _out5721 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11492_fromTpeGen = _out5721;
              RAST._IType _11493_toTpeGen;
              RAST._IType _out5722;
              _out5722 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11493_toTpeGen = _out5722;
              RAST._IExpr _11494_recursiveGen;
              DCOMPUTF16._IOwnership _11495_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11496_recIdents;
              RAST._IExpr _out5723;
              DCOMPUTF16._IOwnership _out5724;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5725;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5723, out _out5724, out _out5725);
              _11494_recursiveGen = _out5723;
              _11495_recOwned = _out5724;
              _11496_recIdents = _out5725;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11494_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11492_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11493_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5726;
              DCOMPUTF16._IOwnership _out5727;
              DCOMPUTF16.COMP.FromOwnership(r, _11495_recOwned, expectedOwnership, out _out5726, out _out5727);
              r = _out5726;
              resultingOwnership = _out5727;
              readIdents = _11496_recIdents;
            }
          } else if (_source634.is_Array) {
            DAST._IType _11497___mcc_h786 = _source634.dtor_element;
            BigInteger _11498___mcc_h787 = _source634.dtor_dims;
            {
              RAST._IType _11499_fromTpeGen;
              RAST._IType _out5728;
              _out5728 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11499_fromTpeGen = _out5728;
              RAST._IType _11500_toTpeGen;
              RAST._IType _out5729;
              _out5729 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11500_toTpeGen = _out5729;
              RAST._IExpr _11501_recursiveGen;
              DCOMPUTF16._IOwnership _11502_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11503_recIdents;
              RAST._IExpr _out5730;
              DCOMPUTF16._IOwnership _out5731;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5732;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5730, out _out5731, out _out5732);
              _11501_recursiveGen = _out5730;
              _11502_recOwned = _out5731;
              _11503_recIdents = _out5732;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11501_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11499_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11500_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5733;
              DCOMPUTF16._IOwnership _out5734;
              DCOMPUTF16.COMP.FromOwnership(r, _11502_recOwned, expectedOwnership, out _out5733, out _out5734);
              r = _out5733;
              resultingOwnership = _out5734;
              readIdents = _11503_recIdents;
            }
          } else if (_source634.is_Seq) {
            DAST._IType _11504___mcc_h790 = _source634.dtor_element;
            {
              RAST._IType _11505_fromTpeGen;
              RAST._IType _out5735;
              _out5735 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11505_fromTpeGen = _out5735;
              RAST._IType _11506_toTpeGen;
              RAST._IType _out5736;
              _out5736 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11506_toTpeGen = _out5736;
              RAST._IExpr _11507_recursiveGen;
              DCOMPUTF16._IOwnership _11508_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11509_recIdents;
              RAST._IExpr _out5737;
              DCOMPUTF16._IOwnership _out5738;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5739;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5737, out _out5738, out _out5739);
              _11507_recursiveGen = _out5737;
              _11508_recOwned = _out5738;
              _11509_recIdents = _out5739;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11507_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11505_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11506_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5740;
              DCOMPUTF16._IOwnership _out5741;
              DCOMPUTF16.COMP.FromOwnership(r, _11508_recOwned, expectedOwnership, out _out5740, out _out5741);
              r = _out5740;
              resultingOwnership = _out5741;
              readIdents = _11509_recIdents;
            }
          } else if (_source634.is_Set) {
            DAST._IType _11510___mcc_h792 = _source634.dtor_element;
            {
              RAST._IType _11511_fromTpeGen;
              RAST._IType _out5742;
              _out5742 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11511_fromTpeGen = _out5742;
              RAST._IType _11512_toTpeGen;
              RAST._IType _out5743;
              _out5743 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11512_toTpeGen = _out5743;
              RAST._IExpr _11513_recursiveGen;
              DCOMPUTF16._IOwnership _11514_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11515_recIdents;
              RAST._IExpr _out5744;
              DCOMPUTF16._IOwnership _out5745;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5746;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5744, out _out5745, out _out5746);
              _11513_recursiveGen = _out5744;
              _11514_recOwned = _out5745;
              _11515_recIdents = _out5746;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11513_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11511_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11512_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5747;
              DCOMPUTF16._IOwnership _out5748;
              DCOMPUTF16.COMP.FromOwnership(r, _11514_recOwned, expectedOwnership, out _out5747, out _out5748);
              r = _out5747;
              resultingOwnership = _out5748;
              readIdents = _11515_recIdents;
            }
          } else if (_source634.is_Multiset) {
            DAST._IType _11516___mcc_h794 = _source634.dtor_element;
            {
              RAST._IType _11517_fromTpeGen;
              RAST._IType _out5749;
              _out5749 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11517_fromTpeGen = _out5749;
              RAST._IType _11518_toTpeGen;
              RAST._IType _out5750;
              _out5750 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11518_toTpeGen = _out5750;
              RAST._IExpr _11519_recursiveGen;
              DCOMPUTF16._IOwnership _11520_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11521_recIdents;
              RAST._IExpr _out5751;
              DCOMPUTF16._IOwnership _out5752;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5753;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5751, out _out5752, out _out5753);
              _11519_recursiveGen = _out5751;
              _11520_recOwned = _out5752;
              _11521_recIdents = _out5753;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11519_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11517_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11518_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5754;
              DCOMPUTF16._IOwnership _out5755;
              DCOMPUTF16.COMP.FromOwnership(r, _11520_recOwned, expectedOwnership, out _out5754, out _out5755);
              r = _out5754;
              resultingOwnership = _out5755;
              readIdents = _11521_recIdents;
            }
          } else if (_source634.is_Map) {
            DAST._IType _11522___mcc_h796 = _source634.dtor_key;
            DAST._IType _11523___mcc_h797 = _source634.dtor_value;
            {
              RAST._IType _11524_fromTpeGen;
              RAST._IType _out5756;
              _out5756 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11524_fromTpeGen = _out5756;
              RAST._IType _11525_toTpeGen;
              RAST._IType _out5757;
              _out5757 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11525_toTpeGen = _out5757;
              RAST._IExpr _11526_recursiveGen;
              DCOMPUTF16._IOwnership _11527_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11528_recIdents;
              RAST._IExpr _out5758;
              DCOMPUTF16._IOwnership _out5759;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5760;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5758, out _out5759, out _out5760);
              _11526_recursiveGen = _out5758;
              _11527_recOwned = _out5759;
              _11528_recIdents = _out5760;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11526_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11524_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11525_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5761;
              DCOMPUTF16._IOwnership _out5762;
              DCOMPUTF16.COMP.FromOwnership(r, _11527_recOwned, expectedOwnership, out _out5761, out _out5762);
              r = _out5761;
              resultingOwnership = _out5762;
              readIdents = _11528_recIdents;
            }
          } else if (_source634.is_SetBuilder) {
            DAST._IType _11529___mcc_h800 = _source634.dtor_element;
            {
              RAST._IType _11530_fromTpeGen;
              RAST._IType _out5763;
              _out5763 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11530_fromTpeGen = _out5763;
              RAST._IType _11531_toTpeGen;
              RAST._IType _out5764;
              _out5764 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11531_toTpeGen = _out5764;
              RAST._IExpr _11532_recursiveGen;
              DCOMPUTF16._IOwnership _11533_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11534_recIdents;
              RAST._IExpr _out5765;
              DCOMPUTF16._IOwnership _out5766;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5767;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5765, out _out5766, out _out5767);
              _11532_recursiveGen = _out5765;
              _11533_recOwned = _out5766;
              _11534_recIdents = _out5767;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11532_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11530_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11531_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5768;
              DCOMPUTF16._IOwnership _out5769;
              DCOMPUTF16.COMP.FromOwnership(r, _11533_recOwned, expectedOwnership, out _out5768, out _out5769);
              r = _out5768;
              resultingOwnership = _out5769;
              readIdents = _11534_recIdents;
            }
          } else if (_source634.is_MapBuilder) {
            DAST._IType _11535___mcc_h802 = _source634.dtor_key;
            DAST._IType _11536___mcc_h803 = _source634.dtor_value;
            {
              RAST._IType _11537_fromTpeGen;
              RAST._IType _out5770;
              _out5770 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11537_fromTpeGen = _out5770;
              RAST._IType _11538_toTpeGen;
              RAST._IType _out5771;
              _out5771 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11538_toTpeGen = _out5771;
              RAST._IExpr _11539_recursiveGen;
              DCOMPUTF16._IOwnership _11540_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11541_recIdents;
              RAST._IExpr _out5772;
              DCOMPUTF16._IOwnership _out5773;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5774;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5772, out _out5773, out _out5774);
              _11539_recursiveGen = _out5772;
              _11540_recOwned = _out5773;
              _11541_recIdents = _out5774;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11539_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11537_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11538_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5775;
              DCOMPUTF16._IOwnership _out5776;
              DCOMPUTF16.COMP.FromOwnership(r, _11540_recOwned, expectedOwnership, out _out5775, out _out5776);
              r = _out5775;
              resultingOwnership = _out5776;
              readIdents = _11541_recIdents;
            }
          } else if (_source634.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11542___mcc_h806 = _source634.dtor_args;
            DAST._IType _11543___mcc_h807 = _source634.dtor_result;
            {
              RAST._IType _11544_fromTpeGen;
              RAST._IType _out5777;
              _out5777 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11544_fromTpeGen = _out5777;
              RAST._IType _11545_toTpeGen;
              RAST._IType _out5778;
              _out5778 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11545_toTpeGen = _out5778;
              RAST._IExpr _11546_recursiveGen;
              DCOMPUTF16._IOwnership _11547_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11548_recIdents;
              RAST._IExpr _out5779;
              DCOMPUTF16._IOwnership _out5780;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5781;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5779, out _out5780, out _out5781);
              _11546_recursiveGen = _out5779;
              _11547_recOwned = _out5780;
              _11548_recIdents = _out5781;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11546_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11544_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11545_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5782;
              DCOMPUTF16._IOwnership _out5783;
              DCOMPUTF16.COMP.FromOwnership(r, _11547_recOwned, expectedOwnership, out _out5782, out _out5783);
              r = _out5782;
              resultingOwnership = _out5783;
              readIdents = _11548_recIdents;
            }
          } else if (_source634.is_Primitive) {
            DAST._IPrimitive _11549___mcc_h810 = _source634.dtor_Primitive_a0;
            {
              RAST._IType _11550_fromTpeGen;
              RAST._IType _out5784;
              _out5784 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11550_fromTpeGen = _out5784;
              RAST._IType _11551_toTpeGen;
              RAST._IType _out5785;
              _out5785 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11551_toTpeGen = _out5785;
              RAST._IExpr _11552_recursiveGen;
              DCOMPUTF16._IOwnership _11553_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11554_recIdents;
              RAST._IExpr _out5786;
              DCOMPUTF16._IOwnership _out5787;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5788;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5786, out _out5787, out _out5788);
              _11552_recursiveGen = _out5786;
              _11553_recOwned = _out5787;
              _11554_recIdents = _out5788;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11552_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11550_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11551_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5789;
              DCOMPUTF16._IOwnership _out5790;
              DCOMPUTF16.COMP.FromOwnership(r, _11553_recOwned, expectedOwnership, out _out5789, out _out5790);
              r = _out5789;
              resultingOwnership = _out5790;
              readIdents = _11554_recIdents;
            }
          } else if (_source634.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11555___mcc_h812 = _source634.dtor_Passthrough_a0;
            {
              RAST._IType _11556_fromTpeGen;
              RAST._IType _out5791;
              _out5791 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11556_fromTpeGen = _out5791;
              RAST._IType _11557_toTpeGen;
              RAST._IType _out5792;
              _out5792 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11557_toTpeGen = _out5792;
              RAST._IExpr _11558_recursiveGen;
              DCOMPUTF16._IOwnership _11559_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11560_recIdents;
              RAST._IExpr _out5793;
              DCOMPUTF16._IOwnership _out5794;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5795;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5793, out _out5794, out _out5795);
              _11558_recursiveGen = _out5793;
              _11559_recOwned = _out5794;
              _11560_recIdents = _out5795;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11558_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11556_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11557_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5796;
              DCOMPUTF16._IOwnership _out5797;
              DCOMPUTF16.COMP.FromOwnership(r, _11559_recOwned, expectedOwnership, out _out5796, out _out5797);
              r = _out5796;
              resultingOwnership = _out5797;
              readIdents = _11560_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11561___mcc_h814 = _source634.dtor_TypeArg_a0;
            {
              RAST._IType _11562_fromTpeGen;
              RAST._IType _out5798;
              _out5798 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11562_fromTpeGen = _out5798;
              RAST._IType _11563_toTpeGen;
              RAST._IType _out5799;
              _out5799 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11563_toTpeGen = _out5799;
              RAST._IExpr _11564_recursiveGen;
              DCOMPUTF16._IOwnership _11565_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11566_recIdents;
              RAST._IExpr _out5800;
              DCOMPUTF16._IOwnership _out5801;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5802;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5800, out _out5801, out _out5802);
              _11564_recursiveGen = _out5800;
              _11565_recOwned = _out5801;
              _11566_recIdents = _out5802;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11564_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11562_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11563_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5803;
              DCOMPUTF16._IOwnership _out5804;
              DCOMPUTF16.COMP.FromOwnership(r, _11565_recOwned, expectedOwnership, out _out5803, out _out5804);
              r = _out5803;
              resultingOwnership = _out5804;
              readIdents = _11566_recIdents;
            }
          }
        } else if (_source565.is_MapBuilder) {
          DAST._IType _11567___mcc_h816 = _source565.dtor_key;
          DAST._IType _11568___mcc_h817 = _source565.dtor_value;
          DAST._IType _source639 = _9615___mcc_h1;
          if (_source639.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11569___mcc_h824 = _source639.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11570___mcc_h825 = _source639.dtor_typeArgs;
            DAST._IResolvedType _11571___mcc_h826 = _source639.dtor_resolved;
            DAST._IResolvedType _source640 = _11571___mcc_h826;
            if (_source640.is_AllocatedDatatype) {
              DAST._IDatatypeType _11572___mcc_h830 = _source640.dtor_datatypeType;
              {
                RAST._IType _11573_fromTpeGen;
                RAST._IType _out5805;
                _out5805 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11573_fromTpeGen = _out5805;
                RAST._IType _11574_toTpeGen;
                RAST._IType _out5806;
                _out5806 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11574_toTpeGen = _out5806;
                RAST._IExpr _11575_recursiveGen;
                DCOMPUTF16._IOwnership _11576_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11577_recIdents;
                RAST._IExpr _out5807;
                DCOMPUTF16._IOwnership _out5808;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5809;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5807, out _out5808, out _out5809);
                _11575_recursiveGen = _out5807;
                _11576_recOwned = _out5808;
                _11577_recIdents = _out5809;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11575_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11573_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11574_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5810;
                DCOMPUTF16._IOwnership _out5811;
                DCOMPUTF16.COMP.FromOwnership(r, _11576_recOwned, expectedOwnership, out _out5810, out _out5811);
                r = _out5810;
                resultingOwnership = _out5811;
                readIdents = _11577_recIdents;
              }
            } else if (_source640.is_Datatype) {
              DAST._IDatatypeType _11578___mcc_h832 = _source640.dtor_datatypeType;
              {
                RAST._IType _11579_fromTpeGen;
                RAST._IType _out5812;
                _out5812 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11579_fromTpeGen = _out5812;
                RAST._IType _11580_toTpeGen;
                RAST._IType _out5813;
                _out5813 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11580_toTpeGen = _out5813;
                RAST._IExpr _11581_recursiveGen;
                DCOMPUTF16._IOwnership _11582_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11583_recIdents;
                RAST._IExpr _out5814;
                DCOMPUTF16._IOwnership _out5815;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5816;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5814, out _out5815, out _out5816);
                _11581_recursiveGen = _out5814;
                _11582_recOwned = _out5815;
                _11583_recIdents = _out5816;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11581_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11579_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11580_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5817;
                DCOMPUTF16._IOwnership _out5818;
                DCOMPUTF16.COMP.FromOwnership(r, _11582_recOwned, expectedOwnership, out _out5817, out _out5818);
                r = _out5817;
                resultingOwnership = _out5818;
                readIdents = _11583_recIdents;
              }
            } else if (_source640.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11584___mcc_h834 = _source640.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11585___mcc_h835 = _source640.dtor_attributes;
              {
                RAST._IType _11586_fromTpeGen;
                RAST._IType _out5819;
                _out5819 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11586_fromTpeGen = _out5819;
                RAST._IType _11587_toTpeGen;
                RAST._IType _out5820;
                _out5820 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11587_toTpeGen = _out5820;
                RAST._IExpr _11588_recursiveGen;
                DCOMPUTF16._IOwnership _11589_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11590_recIdents;
                RAST._IExpr _out5821;
                DCOMPUTF16._IOwnership _out5822;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5823;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5821, out _out5822, out _out5823);
                _11588_recursiveGen = _out5821;
                _11589_recOwned = _out5822;
                _11590_recIdents = _out5823;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11588_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11586_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11587_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5824;
                DCOMPUTF16._IOwnership _out5825;
                DCOMPUTF16.COMP.FromOwnership(r, _11589_recOwned, expectedOwnership, out _out5824, out _out5825);
                r = _out5824;
                resultingOwnership = _out5825;
                readIdents = _11590_recIdents;
              }
            } else {
              DAST._IType _11591___mcc_h838 = _source640.dtor_baseType;
              DAST._INewtypeRange _11592___mcc_h839 = _source640.dtor_range;
              bool _11593___mcc_h840 = _source640.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11594___mcc_h841 = _source640.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11595_attributes = _11594___mcc_h841;
              bool _11596_erase = _11593___mcc_h840;
              DAST._INewtypeRange _11597_range = _11592___mcc_h839;
              DAST._IType _11598_b = _11591___mcc_h838;
              {
                Std.Wrappers._IOption<RAST._IType> _11599_nativeToType;
                _11599_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11598_b, _11597_range);
                if (object.Equals(_9609_fromTpe, _11598_b)) {
                  RAST._IExpr _11600_recursiveGen;
                  DCOMPUTF16._IOwnership _11601_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11602_recIdents;
                  RAST._IExpr _out5826;
                  DCOMPUTF16._IOwnership _out5827;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5828;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5826, out _out5827, out _out5828);
                  _11600_recursiveGen = _out5826;
                  _11601_recOwned = _out5827;
                  _11602_recIdents = _out5828;
                  readIdents = _11602_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source641 = _11599_nativeToType;
                  if (_source641.is_None) {
                    if (_11596_erase) {
                      r = _11600_recursiveGen;
                    } else {
                      RAST._IType _11603_rhsType;
                      RAST._IType _out5829;
                      _out5829 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _11603_rhsType = _out5829;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11603_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11600_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5830;
                    DCOMPUTF16._IOwnership _out5831;
                    DCOMPUTF16.COMP.FromOwnership(r, _11601_recOwned, expectedOwnership, out _out5830, out _out5831);
                    r = _out5830;
                    resultingOwnership = _out5831;
                  } else {
                    RAST._IType _11604___mcc_h1990 = _source641.dtor_value;
                    RAST._IType _11605_v = _11604___mcc_h1990;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11600_recursiveGen, RAST.Expr.create_ExprFromType(_11605_v)));
                    RAST._IExpr _out5832;
                    DCOMPUTF16._IOwnership _out5833;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5832, out _out5833);
                    r = _out5832;
                    resultingOwnership = _out5833;
                  }
                } else {
                  if ((_11599_nativeToType).is_Some) {
                    DAST._IType _source642 = _9609_fromTpe;
                    if (_source642.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11606___mcc_h1991 = _source642.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11607___mcc_h1992 = _source642.dtor_typeArgs;
                      DAST._IResolvedType _11608___mcc_h1993 = _source642.dtor_resolved;
                      DAST._IResolvedType _source643 = _11608___mcc_h1993;
                      if (_source643.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11609___mcc_h1997 = _source643.dtor_datatypeType;
                      } else if (_source643.is_Datatype) {
                        DAST._IDatatypeType _11610___mcc_h1999 = _source643.dtor_datatypeType;
                      } else if (_source643.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11611___mcc_h2001 = _source643.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11612___mcc_h2002 = _source643.dtor_attributes;
                      } else {
                        DAST._IType _11613___mcc_h2005 = _source643.dtor_baseType;
                        DAST._INewtypeRange _11614___mcc_h2006 = _source643.dtor_range;
                        bool _11615___mcc_h2007 = _source643.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11616___mcc_h2008 = _source643.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11617_attributes0 = _11616___mcc_h2008;
                        bool _11618_erase0 = _11615___mcc_h2007;
                        DAST._INewtypeRange _11619_range0 = _11614___mcc_h2006;
                        DAST._IType _11620_b0 = _11613___mcc_h2005;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11621_nativeFromType;
                          _11621_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11620_b0, _11619_range0);
                          if ((_11621_nativeFromType).is_Some) {
                            RAST._IExpr _11622_recursiveGen;
                            DCOMPUTF16._IOwnership _11623_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11624_recIdents;
                            RAST._IExpr _out5834;
                            DCOMPUTF16._IOwnership _out5835;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5836;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5834, out _out5835, out _out5836);
                            _11622_recursiveGen = _out5834;
                            _11623_recOwned = _out5835;
                            _11624_recIdents = _out5836;
                            RAST._IExpr _out5837;
                            DCOMPUTF16._IOwnership _out5838;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11622_recursiveGen, (_11599_nativeToType).dtor_value), _11623_recOwned, expectedOwnership, out _out5837, out _out5838);
                            r = _out5837;
                            resultingOwnership = _out5838;
                            readIdents = _11624_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source642.is_Nullable) {
                      DAST._IType _11625___mcc_h2013 = _source642.dtor_Nullable_a0;
                    } else if (_source642.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11626___mcc_h2015 = _source642.dtor_Tuple_a0;
                    } else if (_source642.is_Array) {
                      DAST._IType _11627___mcc_h2017 = _source642.dtor_element;
                      BigInteger _11628___mcc_h2018 = _source642.dtor_dims;
                    } else if (_source642.is_Seq) {
                      DAST._IType _11629___mcc_h2021 = _source642.dtor_element;
                    } else if (_source642.is_Set) {
                      DAST._IType _11630___mcc_h2023 = _source642.dtor_element;
                    } else if (_source642.is_Multiset) {
                      DAST._IType _11631___mcc_h2025 = _source642.dtor_element;
                    } else if (_source642.is_Map) {
                      DAST._IType _11632___mcc_h2027 = _source642.dtor_key;
                      DAST._IType _11633___mcc_h2028 = _source642.dtor_value;
                    } else if (_source642.is_SetBuilder) {
                      DAST._IType _11634___mcc_h2031 = _source642.dtor_element;
                    } else if (_source642.is_MapBuilder) {
                      DAST._IType _11635___mcc_h2033 = _source642.dtor_key;
                      DAST._IType _11636___mcc_h2034 = _source642.dtor_value;
                    } else if (_source642.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11637___mcc_h2037 = _source642.dtor_args;
                      DAST._IType _11638___mcc_h2038 = _source642.dtor_result;
                    } else if (_source642.is_Primitive) {
                      DAST._IPrimitive _11639___mcc_h2041 = _source642.dtor_Primitive_a0;
                    } else if (_source642.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11640___mcc_h2043 = _source642.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11641___mcc_h2045 = _source642.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11642_recursiveGen;
                      DCOMPUTF16._IOwnership _11643_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11644_recIdents;
                      RAST._IExpr _out5839;
                      DCOMPUTF16._IOwnership _out5840;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5841;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5839, out _out5840, out _out5841);
                      _11642_recursiveGen = _out5839;
                      _11643_recOwned = _out5840;
                      _11644_recIdents = _out5841;
                      RAST._IExpr _out5842;
                      DCOMPUTF16._IOwnership _out5843;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11642_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11599_nativeToType).dtor_value), _11643_recOwned, expectedOwnership, out _out5842, out _out5843);
                      r = _out5842;
                      resultingOwnership = _out5843;
                      readIdents = _11644_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5844;
                  DCOMPUTF16._IOwnership _out5845;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5846;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _11598_b), _11598_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5844, out _out5845, out _out5846);
                  r = _out5844;
                  resultingOwnership = _out5845;
                  readIdents = _out5846;
                }
              }
            }
          } else if (_source639.is_Nullable) {
            DAST._IType _11645___mcc_h846 = _source639.dtor_Nullable_a0;
            {
              RAST._IExpr _11646_recursiveGen;
              DCOMPUTF16._IOwnership _11647_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11648_recIdents;
              RAST._IExpr _out5847;
              DCOMPUTF16._IOwnership _out5848;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5849;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5847, out _out5848, out _out5849);
              _11646_recursiveGen = _out5847;
              _11647_recOwned = _out5848;
              _11648_recIdents = _out5849;
              r = _11646_recursiveGen;
              if (object.Equals(_11647_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5850;
              DCOMPUTF16._IOwnership _out5851;
              DCOMPUTF16.COMP.FromOwnership(r, _11647_recOwned, expectedOwnership, out _out5850, out _out5851);
              r = _out5850;
              resultingOwnership = _out5851;
              readIdents = _11648_recIdents;
            }
          } else if (_source639.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11649___mcc_h848 = _source639.dtor_Tuple_a0;
            {
              RAST._IType _11650_fromTpeGen;
              RAST._IType _out5852;
              _out5852 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11650_fromTpeGen = _out5852;
              RAST._IType _11651_toTpeGen;
              RAST._IType _out5853;
              _out5853 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11651_toTpeGen = _out5853;
              RAST._IExpr _11652_recursiveGen;
              DCOMPUTF16._IOwnership _11653_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11654_recIdents;
              RAST._IExpr _out5854;
              DCOMPUTF16._IOwnership _out5855;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5856;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5854, out _out5855, out _out5856);
              _11652_recursiveGen = _out5854;
              _11653_recOwned = _out5855;
              _11654_recIdents = _out5856;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11652_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11650_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11651_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5857;
              DCOMPUTF16._IOwnership _out5858;
              DCOMPUTF16.COMP.FromOwnership(r, _11653_recOwned, expectedOwnership, out _out5857, out _out5858);
              r = _out5857;
              resultingOwnership = _out5858;
              readIdents = _11654_recIdents;
            }
          } else if (_source639.is_Array) {
            DAST._IType _11655___mcc_h850 = _source639.dtor_element;
            BigInteger _11656___mcc_h851 = _source639.dtor_dims;
            {
              RAST._IType _11657_fromTpeGen;
              RAST._IType _out5859;
              _out5859 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11657_fromTpeGen = _out5859;
              RAST._IType _11658_toTpeGen;
              RAST._IType _out5860;
              _out5860 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11658_toTpeGen = _out5860;
              RAST._IExpr _11659_recursiveGen;
              DCOMPUTF16._IOwnership _11660_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11661_recIdents;
              RAST._IExpr _out5861;
              DCOMPUTF16._IOwnership _out5862;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5863;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5861, out _out5862, out _out5863);
              _11659_recursiveGen = _out5861;
              _11660_recOwned = _out5862;
              _11661_recIdents = _out5863;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11659_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11657_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11658_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5864;
              DCOMPUTF16._IOwnership _out5865;
              DCOMPUTF16.COMP.FromOwnership(r, _11660_recOwned, expectedOwnership, out _out5864, out _out5865);
              r = _out5864;
              resultingOwnership = _out5865;
              readIdents = _11661_recIdents;
            }
          } else if (_source639.is_Seq) {
            DAST._IType _11662___mcc_h854 = _source639.dtor_element;
            {
              RAST._IType _11663_fromTpeGen;
              RAST._IType _out5866;
              _out5866 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11663_fromTpeGen = _out5866;
              RAST._IType _11664_toTpeGen;
              RAST._IType _out5867;
              _out5867 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11664_toTpeGen = _out5867;
              RAST._IExpr _11665_recursiveGen;
              DCOMPUTF16._IOwnership _11666_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11667_recIdents;
              RAST._IExpr _out5868;
              DCOMPUTF16._IOwnership _out5869;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5870;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5868, out _out5869, out _out5870);
              _11665_recursiveGen = _out5868;
              _11666_recOwned = _out5869;
              _11667_recIdents = _out5870;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11665_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11663_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11664_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5871;
              DCOMPUTF16._IOwnership _out5872;
              DCOMPUTF16.COMP.FromOwnership(r, _11666_recOwned, expectedOwnership, out _out5871, out _out5872);
              r = _out5871;
              resultingOwnership = _out5872;
              readIdents = _11667_recIdents;
            }
          } else if (_source639.is_Set) {
            DAST._IType _11668___mcc_h856 = _source639.dtor_element;
            {
              RAST._IType _11669_fromTpeGen;
              RAST._IType _out5873;
              _out5873 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11669_fromTpeGen = _out5873;
              RAST._IType _11670_toTpeGen;
              RAST._IType _out5874;
              _out5874 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11670_toTpeGen = _out5874;
              RAST._IExpr _11671_recursiveGen;
              DCOMPUTF16._IOwnership _11672_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11673_recIdents;
              RAST._IExpr _out5875;
              DCOMPUTF16._IOwnership _out5876;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5877;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5875, out _out5876, out _out5877);
              _11671_recursiveGen = _out5875;
              _11672_recOwned = _out5876;
              _11673_recIdents = _out5877;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11671_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11669_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11670_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5878;
              DCOMPUTF16._IOwnership _out5879;
              DCOMPUTF16.COMP.FromOwnership(r, _11672_recOwned, expectedOwnership, out _out5878, out _out5879);
              r = _out5878;
              resultingOwnership = _out5879;
              readIdents = _11673_recIdents;
            }
          } else if (_source639.is_Multiset) {
            DAST._IType _11674___mcc_h858 = _source639.dtor_element;
            {
              RAST._IType _11675_fromTpeGen;
              RAST._IType _out5880;
              _out5880 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11675_fromTpeGen = _out5880;
              RAST._IType _11676_toTpeGen;
              RAST._IType _out5881;
              _out5881 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11676_toTpeGen = _out5881;
              RAST._IExpr _11677_recursiveGen;
              DCOMPUTF16._IOwnership _11678_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11679_recIdents;
              RAST._IExpr _out5882;
              DCOMPUTF16._IOwnership _out5883;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5884;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5882, out _out5883, out _out5884);
              _11677_recursiveGen = _out5882;
              _11678_recOwned = _out5883;
              _11679_recIdents = _out5884;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11677_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11675_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11676_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5885;
              DCOMPUTF16._IOwnership _out5886;
              DCOMPUTF16.COMP.FromOwnership(r, _11678_recOwned, expectedOwnership, out _out5885, out _out5886);
              r = _out5885;
              resultingOwnership = _out5886;
              readIdents = _11679_recIdents;
            }
          } else if (_source639.is_Map) {
            DAST._IType _11680___mcc_h860 = _source639.dtor_key;
            DAST._IType _11681___mcc_h861 = _source639.dtor_value;
            {
              RAST._IType _11682_fromTpeGen;
              RAST._IType _out5887;
              _out5887 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11682_fromTpeGen = _out5887;
              RAST._IType _11683_toTpeGen;
              RAST._IType _out5888;
              _out5888 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11683_toTpeGen = _out5888;
              RAST._IExpr _11684_recursiveGen;
              DCOMPUTF16._IOwnership _11685_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11686_recIdents;
              RAST._IExpr _out5889;
              DCOMPUTF16._IOwnership _out5890;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5891;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5889, out _out5890, out _out5891);
              _11684_recursiveGen = _out5889;
              _11685_recOwned = _out5890;
              _11686_recIdents = _out5891;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11684_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11682_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11683_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5892;
              DCOMPUTF16._IOwnership _out5893;
              DCOMPUTF16.COMP.FromOwnership(r, _11685_recOwned, expectedOwnership, out _out5892, out _out5893);
              r = _out5892;
              resultingOwnership = _out5893;
              readIdents = _11686_recIdents;
            }
          } else if (_source639.is_SetBuilder) {
            DAST._IType _11687___mcc_h864 = _source639.dtor_element;
            {
              RAST._IType _11688_fromTpeGen;
              RAST._IType _out5894;
              _out5894 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11688_fromTpeGen = _out5894;
              RAST._IType _11689_toTpeGen;
              RAST._IType _out5895;
              _out5895 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11689_toTpeGen = _out5895;
              RAST._IExpr _11690_recursiveGen;
              DCOMPUTF16._IOwnership _11691_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11692_recIdents;
              RAST._IExpr _out5896;
              DCOMPUTF16._IOwnership _out5897;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5898;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5896, out _out5897, out _out5898);
              _11690_recursiveGen = _out5896;
              _11691_recOwned = _out5897;
              _11692_recIdents = _out5898;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11690_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11688_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11689_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5899;
              DCOMPUTF16._IOwnership _out5900;
              DCOMPUTF16.COMP.FromOwnership(r, _11691_recOwned, expectedOwnership, out _out5899, out _out5900);
              r = _out5899;
              resultingOwnership = _out5900;
              readIdents = _11692_recIdents;
            }
          } else if (_source639.is_MapBuilder) {
            DAST._IType _11693___mcc_h866 = _source639.dtor_key;
            DAST._IType _11694___mcc_h867 = _source639.dtor_value;
            {
              RAST._IType _11695_fromTpeGen;
              RAST._IType _out5901;
              _out5901 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11695_fromTpeGen = _out5901;
              RAST._IType _11696_toTpeGen;
              RAST._IType _out5902;
              _out5902 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11696_toTpeGen = _out5902;
              RAST._IExpr _11697_recursiveGen;
              DCOMPUTF16._IOwnership _11698_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11699_recIdents;
              RAST._IExpr _out5903;
              DCOMPUTF16._IOwnership _out5904;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5905;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5903, out _out5904, out _out5905);
              _11697_recursiveGen = _out5903;
              _11698_recOwned = _out5904;
              _11699_recIdents = _out5905;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11697_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11695_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11696_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5906;
              DCOMPUTF16._IOwnership _out5907;
              DCOMPUTF16.COMP.FromOwnership(r, _11698_recOwned, expectedOwnership, out _out5906, out _out5907);
              r = _out5906;
              resultingOwnership = _out5907;
              readIdents = _11699_recIdents;
            }
          } else if (_source639.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11700___mcc_h870 = _source639.dtor_args;
            DAST._IType _11701___mcc_h871 = _source639.dtor_result;
            {
              RAST._IType _11702_fromTpeGen;
              RAST._IType _out5908;
              _out5908 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11702_fromTpeGen = _out5908;
              RAST._IType _11703_toTpeGen;
              RAST._IType _out5909;
              _out5909 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11703_toTpeGen = _out5909;
              RAST._IExpr _11704_recursiveGen;
              DCOMPUTF16._IOwnership _11705_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11706_recIdents;
              RAST._IExpr _out5910;
              DCOMPUTF16._IOwnership _out5911;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5912;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5910, out _out5911, out _out5912);
              _11704_recursiveGen = _out5910;
              _11705_recOwned = _out5911;
              _11706_recIdents = _out5912;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11704_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11702_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11703_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5913;
              DCOMPUTF16._IOwnership _out5914;
              DCOMPUTF16.COMP.FromOwnership(r, _11705_recOwned, expectedOwnership, out _out5913, out _out5914);
              r = _out5913;
              resultingOwnership = _out5914;
              readIdents = _11706_recIdents;
            }
          } else if (_source639.is_Primitive) {
            DAST._IPrimitive _11707___mcc_h874 = _source639.dtor_Primitive_a0;
            {
              RAST._IType _11708_fromTpeGen;
              RAST._IType _out5915;
              _out5915 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11708_fromTpeGen = _out5915;
              RAST._IType _11709_toTpeGen;
              RAST._IType _out5916;
              _out5916 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11709_toTpeGen = _out5916;
              RAST._IExpr _11710_recursiveGen;
              DCOMPUTF16._IOwnership _11711_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11712_recIdents;
              RAST._IExpr _out5917;
              DCOMPUTF16._IOwnership _out5918;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5919;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5917, out _out5918, out _out5919);
              _11710_recursiveGen = _out5917;
              _11711_recOwned = _out5918;
              _11712_recIdents = _out5919;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11710_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11708_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11709_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5920;
              DCOMPUTF16._IOwnership _out5921;
              DCOMPUTF16.COMP.FromOwnership(r, _11711_recOwned, expectedOwnership, out _out5920, out _out5921);
              r = _out5920;
              resultingOwnership = _out5921;
              readIdents = _11712_recIdents;
            }
          } else if (_source639.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11713___mcc_h876 = _source639.dtor_Passthrough_a0;
            {
              RAST._IType _11714_fromTpeGen;
              RAST._IType _out5922;
              _out5922 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11714_fromTpeGen = _out5922;
              RAST._IType _11715_toTpeGen;
              RAST._IType _out5923;
              _out5923 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11715_toTpeGen = _out5923;
              RAST._IExpr _11716_recursiveGen;
              DCOMPUTF16._IOwnership _11717_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11718_recIdents;
              RAST._IExpr _out5924;
              DCOMPUTF16._IOwnership _out5925;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5926;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5924, out _out5925, out _out5926);
              _11716_recursiveGen = _out5924;
              _11717_recOwned = _out5925;
              _11718_recIdents = _out5926;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11716_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11714_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11715_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5927;
              DCOMPUTF16._IOwnership _out5928;
              DCOMPUTF16.COMP.FromOwnership(r, _11717_recOwned, expectedOwnership, out _out5927, out _out5928);
              r = _out5927;
              resultingOwnership = _out5928;
              readIdents = _11718_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11719___mcc_h878 = _source639.dtor_TypeArg_a0;
            {
              RAST._IType _11720_fromTpeGen;
              RAST._IType _out5929;
              _out5929 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11720_fromTpeGen = _out5929;
              RAST._IType _11721_toTpeGen;
              RAST._IType _out5930;
              _out5930 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11721_toTpeGen = _out5930;
              RAST._IExpr _11722_recursiveGen;
              DCOMPUTF16._IOwnership _11723_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11724_recIdents;
              RAST._IExpr _out5931;
              DCOMPUTF16._IOwnership _out5932;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5933;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5931, out _out5932, out _out5933);
              _11722_recursiveGen = _out5931;
              _11723_recOwned = _out5932;
              _11724_recIdents = _out5933;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11722_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11720_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11721_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5934;
              DCOMPUTF16._IOwnership _out5935;
              DCOMPUTF16.COMP.FromOwnership(r, _11723_recOwned, expectedOwnership, out _out5934, out _out5935);
              r = _out5934;
              resultingOwnership = _out5935;
              readIdents = _11724_recIdents;
            }
          }
        } else if (_source565.is_Arrow) {
          Dafny.ISequence<DAST._IType> _11725___mcc_h880 = _source565.dtor_args;
          DAST._IType _11726___mcc_h881 = _source565.dtor_result;
          DAST._IType _source644 = _9615___mcc_h1;
          if (_source644.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11727___mcc_h888 = _source644.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11728___mcc_h889 = _source644.dtor_typeArgs;
            DAST._IResolvedType _11729___mcc_h890 = _source644.dtor_resolved;
            DAST._IResolvedType _source645 = _11729___mcc_h890;
            if (_source645.is_AllocatedDatatype) {
              DAST._IDatatypeType _11730___mcc_h894 = _source645.dtor_datatypeType;
              {
                RAST._IType _11731_fromTpeGen;
                RAST._IType _out5936;
                _out5936 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11731_fromTpeGen = _out5936;
                RAST._IType _11732_toTpeGen;
                RAST._IType _out5937;
                _out5937 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11732_toTpeGen = _out5937;
                RAST._IExpr _11733_recursiveGen;
                DCOMPUTF16._IOwnership _11734_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11735_recIdents;
                RAST._IExpr _out5938;
                DCOMPUTF16._IOwnership _out5939;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5940;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5938, out _out5939, out _out5940);
                _11733_recursiveGen = _out5938;
                _11734_recOwned = _out5939;
                _11735_recIdents = _out5940;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11733_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11731_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11732_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5941;
                DCOMPUTF16._IOwnership _out5942;
                DCOMPUTF16.COMP.FromOwnership(r, _11734_recOwned, expectedOwnership, out _out5941, out _out5942);
                r = _out5941;
                resultingOwnership = _out5942;
                readIdents = _11735_recIdents;
              }
            } else if (_source645.is_Datatype) {
              DAST._IDatatypeType _11736___mcc_h896 = _source645.dtor_datatypeType;
              {
                RAST._IType _11737_fromTpeGen;
                RAST._IType _out5943;
                _out5943 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11737_fromTpeGen = _out5943;
                RAST._IType _11738_toTpeGen;
                RAST._IType _out5944;
                _out5944 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11738_toTpeGen = _out5944;
                RAST._IExpr _11739_recursiveGen;
                DCOMPUTF16._IOwnership _11740_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11741_recIdents;
                RAST._IExpr _out5945;
                DCOMPUTF16._IOwnership _out5946;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5947;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5945, out _out5946, out _out5947);
                _11739_recursiveGen = _out5945;
                _11740_recOwned = _out5946;
                _11741_recIdents = _out5947;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11739_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11737_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11738_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5948;
                DCOMPUTF16._IOwnership _out5949;
                DCOMPUTF16.COMP.FromOwnership(r, _11740_recOwned, expectedOwnership, out _out5948, out _out5949);
                r = _out5948;
                resultingOwnership = _out5949;
                readIdents = _11741_recIdents;
              }
            } else if (_source645.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11742___mcc_h898 = _source645.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11743___mcc_h899 = _source645.dtor_attributes;
              {
                RAST._IType _11744_fromTpeGen;
                RAST._IType _out5950;
                _out5950 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11744_fromTpeGen = _out5950;
                RAST._IType _11745_toTpeGen;
                RAST._IType _out5951;
                _out5951 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11745_toTpeGen = _out5951;
                RAST._IExpr _11746_recursiveGen;
                DCOMPUTF16._IOwnership _11747_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11748_recIdents;
                RAST._IExpr _out5952;
                DCOMPUTF16._IOwnership _out5953;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5954;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5952, out _out5953, out _out5954);
                _11746_recursiveGen = _out5952;
                _11747_recOwned = _out5953;
                _11748_recIdents = _out5954;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11746_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11744_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11745_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5955;
                DCOMPUTF16._IOwnership _out5956;
                DCOMPUTF16.COMP.FromOwnership(r, _11747_recOwned, expectedOwnership, out _out5955, out _out5956);
                r = _out5955;
                resultingOwnership = _out5956;
                readIdents = _11748_recIdents;
              }
            } else {
              DAST._IType _11749___mcc_h902 = _source645.dtor_baseType;
              DAST._INewtypeRange _11750___mcc_h903 = _source645.dtor_range;
              bool _11751___mcc_h904 = _source645.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11752___mcc_h905 = _source645.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11753_attributes = _11752___mcc_h905;
              bool _11754_erase = _11751___mcc_h904;
              DAST._INewtypeRange _11755_range = _11750___mcc_h903;
              DAST._IType _11756_b = _11749___mcc_h902;
              {
                Std.Wrappers._IOption<RAST._IType> _11757_nativeToType;
                _11757_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11756_b, _11755_range);
                if (object.Equals(_9609_fromTpe, _11756_b)) {
                  RAST._IExpr _11758_recursiveGen;
                  DCOMPUTF16._IOwnership _11759_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11760_recIdents;
                  RAST._IExpr _out5957;
                  DCOMPUTF16._IOwnership _out5958;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5959;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5957, out _out5958, out _out5959);
                  _11758_recursiveGen = _out5957;
                  _11759_recOwned = _out5958;
                  _11760_recIdents = _out5959;
                  readIdents = _11760_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source646 = _11757_nativeToType;
                  if (_source646.is_None) {
                    if (_11754_erase) {
                      r = _11758_recursiveGen;
                    } else {
                      RAST._IType _11761_rhsType;
                      RAST._IType _out5960;
                      _out5960 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _11761_rhsType = _out5960;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11761_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11758_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5961;
                    DCOMPUTF16._IOwnership _out5962;
                    DCOMPUTF16.COMP.FromOwnership(r, _11759_recOwned, expectedOwnership, out _out5961, out _out5962);
                    r = _out5961;
                    resultingOwnership = _out5962;
                  } else {
                    RAST._IType _11762___mcc_h2047 = _source646.dtor_value;
                    RAST._IType _11763_v = _11762___mcc_h2047;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11758_recursiveGen, RAST.Expr.create_ExprFromType(_11763_v)));
                    RAST._IExpr _out5963;
                    DCOMPUTF16._IOwnership _out5964;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5963, out _out5964);
                    r = _out5963;
                    resultingOwnership = _out5964;
                  }
                } else {
                  if ((_11757_nativeToType).is_Some) {
                    DAST._IType _source647 = _9609_fromTpe;
                    if (_source647.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11764___mcc_h2048 = _source647.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11765___mcc_h2049 = _source647.dtor_typeArgs;
                      DAST._IResolvedType _11766___mcc_h2050 = _source647.dtor_resolved;
                      DAST._IResolvedType _source648 = _11766___mcc_h2050;
                      if (_source648.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11767___mcc_h2054 = _source648.dtor_datatypeType;
                      } else if (_source648.is_Datatype) {
                        DAST._IDatatypeType _11768___mcc_h2056 = _source648.dtor_datatypeType;
                      } else if (_source648.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11769___mcc_h2058 = _source648.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11770___mcc_h2059 = _source648.dtor_attributes;
                      } else {
                        DAST._IType _11771___mcc_h2062 = _source648.dtor_baseType;
                        DAST._INewtypeRange _11772___mcc_h2063 = _source648.dtor_range;
                        bool _11773___mcc_h2064 = _source648.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11774___mcc_h2065 = _source648.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11775_attributes0 = _11774___mcc_h2065;
                        bool _11776_erase0 = _11773___mcc_h2064;
                        DAST._INewtypeRange _11777_range0 = _11772___mcc_h2063;
                        DAST._IType _11778_b0 = _11771___mcc_h2062;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11779_nativeFromType;
                          _11779_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11778_b0, _11777_range0);
                          if ((_11779_nativeFromType).is_Some) {
                            RAST._IExpr _11780_recursiveGen;
                            DCOMPUTF16._IOwnership _11781_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11782_recIdents;
                            RAST._IExpr _out5965;
                            DCOMPUTF16._IOwnership _out5966;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5967;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5965, out _out5966, out _out5967);
                            _11780_recursiveGen = _out5965;
                            _11781_recOwned = _out5966;
                            _11782_recIdents = _out5967;
                            RAST._IExpr _out5968;
                            DCOMPUTF16._IOwnership _out5969;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11780_recursiveGen, (_11757_nativeToType).dtor_value), _11781_recOwned, expectedOwnership, out _out5968, out _out5969);
                            r = _out5968;
                            resultingOwnership = _out5969;
                            readIdents = _11782_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source647.is_Nullable) {
                      DAST._IType _11783___mcc_h2070 = _source647.dtor_Nullable_a0;
                    } else if (_source647.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11784___mcc_h2072 = _source647.dtor_Tuple_a0;
                    } else if (_source647.is_Array) {
                      DAST._IType _11785___mcc_h2074 = _source647.dtor_element;
                      BigInteger _11786___mcc_h2075 = _source647.dtor_dims;
                    } else if (_source647.is_Seq) {
                      DAST._IType _11787___mcc_h2078 = _source647.dtor_element;
                    } else if (_source647.is_Set) {
                      DAST._IType _11788___mcc_h2080 = _source647.dtor_element;
                    } else if (_source647.is_Multiset) {
                      DAST._IType _11789___mcc_h2082 = _source647.dtor_element;
                    } else if (_source647.is_Map) {
                      DAST._IType _11790___mcc_h2084 = _source647.dtor_key;
                      DAST._IType _11791___mcc_h2085 = _source647.dtor_value;
                    } else if (_source647.is_SetBuilder) {
                      DAST._IType _11792___mcc_h2088 = _source647.dtor_element;
                    } else if (_source647.is_MapBuilder) {
                      DAST._IType _11793___mcc_h2090 = _source647.dtor_key;
                      DAST._IType _11794___mcc_h2091 = _source647.dtor_value;
                    } else if (_source647.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11795___mcc_h2094 = _source647.dtor_args;
                      DAST._IType _11796___mcc_h2095 = _source647.dtor_result;
                    } else if (_source647.is_Primitive) {
                      DAST._IPrimitive _11797___mcc_h2098 = _source647.dtor_Primitive_a0;
                    } else if (_source647.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11798___mcc_h2100 = _source647.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11799___mcc_h2102 = _source647.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11800_recursiveGen;
                      DCOMPUTF16._IOwnership _11801_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11802_recIdents;
                      RAST._IExpr _out5970;
                      DCOMPUTF16._IOwnership _out5971;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5972;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5970, out _out5971, out _out5972);
                      _11800_recursiveGen = _out5970;
                      _11801_recOwned = _out5971;
                      _11802_recIdents = _out5972;
                      RAST._IExpr _out5973;
                      DCOMPUTF16._IOwnership _out5974;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11800_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11757_nativeToType).dtor_value), _11801_recOwned, expectedOwnership, out _out5973, out _out5974);
                      r = _out5973;
                      resultingOwnership = _out5974;
                      readIdents = _11802_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5975;
                  DCOMPUTF16._IOwnership _out5976;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5977;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _11756_b), _11756_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out5975, out _out5976, out _out5977);
                  r = _out5975;
                  resultingOwnership = _out5976;
                  readIdents = _out5977;
                }
              }
            }
          } else if (_source644.is_Nullable) {
            DAST._IType _11803___mcc_h910 = _source644.dtor_Nullable_a0;
            {
              RAST._IExpr _11804_recursiveGen;
              DCOMPUTF16._IOwnership _11805_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11806_recIdents;
              RAST._IExpr _out5978;
              DCOMPUTF16._IOwnership _out5979;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5980;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5978, out _out5979, out _out5980);
              _11804_recursiveGen = _out5978;
              _11805_recOwned = _out5979;
              _11806_recIdents = _out5980;
              r = _11804_recursiveGen;
              if (object.Equals(_11805_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5981;
              DCOMPUTF16._IOwnership _out5982;
              DCOMPUTF16.COMP.FromOwnership(r, _11805_recOwned, expectedOwnership, out _out5981, out _out5982);
              r = _out5981;
              resultingOwnership = _out5982;
              readIdents = _11806_recIdents;
            }
          } else if (_source644.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11807___mcc_h912 = _source644.dtor_Tuple_a0;
            {
              RAST._IType _11808_fromTpeGen;
              RAST._IType _out5983;
              _out5983 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11808_fromTpeGen = _out5983;
              RAST._IType _11809_toTpeGen;
              RAST._IType _out5984;
              _out5984 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11809_toTpeGen = _out5984;
              RAST._IExpr _11810_recursiveGen;
              DCOMPUTF16._IOwnership _11811_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11812_recIdents;
              RAST._IExpr _out5985;
              DCOMPUTF16._IOwnership _out5986;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5987;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5985, out _out5986, out _out5987);
              _11810_recursiveGen = _out5985;
              _11811_recOwned = _out5986;
              _11812_recIdents = _out5987;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11810_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11808_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11809_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5988;
              DCOMPUTF16._IOwnership _out5989;
              DCOMPUTF16.COMP.FromOwnership(r, _11811_recOwned, expectedOwnership, out _out5988, out _out5989);
              r = _out5988;
              resultingOwnership = _out5989;
              readIdents = _11812_recIdents;
            }
          } else if (_source644.is_Array) {
            DAST._IType _11813___mcc_h914 = _source644.dtor_element;
            BigInteger _11814___mcc_h915 = _source644.dtor_dims;
            {
              RAST._IType _11815_fromTpeGen;
              RAST._IType _out5990;
              _out5990 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11815_fromTpeGen = _out5990;
              RAST._IType _11816_toTpeGen;
              RAST._IType _out5991;
              _out5991 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11816_toTpeGen = _out5991;
              RAST._IExpr _11817_recursiveGen;
              DCOMPUTF16._IOwnership _11818_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11819_recIdents;
              RAST._IExpr _out5992;
              DCOMPUTF16._IOwnership _out5993;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5994;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5992, out _out5993, out _out5994);
              _11817_recursiveGen = _out5992;
              _11818_recOwned = _out5993;
              _11819_recIdents = _out5994;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11817_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11815_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11816_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5995;
              DCOMPUTF16._IOwnership _out5996;
              DCOMPUTF16.COMP.FromOwnership(r, _11818_recOwned, expectedOwnership, out _out5995, out _out5996);
              r = _out5995;
              resultingOwnership = _out5996;
              readIdents = _11819_recIdents;
            }
          } else if (_source644.is_Seq) {
            DAST._IType _11820___mcc_h918 = _source644.dtor_element;
            {
              RAST._IType _11821_fromTpeGen;
              RAST._IType _out5997;
              _out5997 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11821_fromTpeGen = _out5997;
              RAST._IType _11822_toTpeGen;
              RAST._IType _out5998;
              _out5998 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11822_toTpeGen = _out5998;
              RAST._IExpr _11823_recursiveGen;
              DCOMPUTF16._IOwnership _11824_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11825_recIdents;
              RAST._IExpr _out5999;
              DCOMPUTF16._IOwnership _out6000;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6001;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out5999, out _out6000, out _out6001);
              _11823_recursiveGen = _out5999;
              _11824_recOwned = _out6000;
              _11825_recIdents = _out6001;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11823_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11821_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11822_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6002;
              DCOMPUTF16._IOwnership _out6003;
              DCOMPUTF16.COMP.FromOwnership(r, _11824_recOwned, expectedOwnership, out _out6002, out _out6003);
              r = _out6002;
              resultingOwnership = _out6003;
              readIdents = _11825_recIdents;
            }
          } else if (_source644.is_Set) {
            DAST._IType _11826___mcc_h920 = _source644.dtor_element;
            {
              RAST._IType _11827_fromTpeGen;
              RAST._IType _out6004;
              _out6004 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11827_fromTpeGen = _out6004;
              RAST._IType _11828_toTpeGen;
              RAST._IType _out6005;
              _out6005 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11828_toTpeGen = _out6005;
              RAST._IExpr _11829_recursiveGen;
              DCOMPUTF16._IOwnership _11830_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11831_recIdents;
              RAST._IExpr _out6006;
              DCOMPUTF16._IOwnership _out6007;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6008;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6006, out _out6007, out _out6008);
              _11829_recursiveGen = _out6006;
              _11830_recOwned = _out6007;
              _11831_recIdents = _out6008;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11829_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11827_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11828_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6009;
              DCOMPUTF16._IOwnership _out6010;
              DCOMPUTF16.COMP.FromOwnership(r, _11830_recOwned, expectedOwnership, out _out6009, out _out6010);
              r = _out6009;
              resultingOwnership = _out6010;
              readIdents = _11831_recIdents;
            }
          } else if (_source644.is_Multiset) {
            DAST._IType _11832___mcc_h922 = _source644.dtor_element;
            {
              RAST._IType _11833_fromTpeGen;
              RAST._IType _out6011;
              _out6011 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11833_fromTpeGen = _out6011;
              RAST._IType _11834_toTpeGen;
              RAST._IType _out6012;
              _out6012 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11834_toTpeGen = _out6012;
              RAST._IExpr _11835_recursiveGen;
              DCOMPUTF16._IOwnership _11836_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11837_recIdents;
              RAST._IExpr _out6013;
              DCOMPUTF16._IOwnership _out6014;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6015;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6013, out _out6014, out _out6015);
              _11835_recursiveGen = _out6013;
              _11836_recOwned = _out6014;
              _11837_recIdents = _out6015;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11835_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11833_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11834_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6016;
              DCOMPUTF16._IOwnership _out6017;
              DCOMPUTF16.COMP.FromOwnership(r, _11836_recOwned, expectedOwnership, out _out6016, out _out6017);
              r = _out6016;
              resultingOwnership = _out6017;
              readIdents = _11837_recIdents;
            }
          } else if (_source644.is_Map) {
            DAST._IType _11838___mcc_h924 = _source644.dtor_key;
            DAST._IType _11839___mcc_h925 = _source644.dtor_value;
            {
              RAST._IType _11840_fromTpeGen;
              RAST._IType _out6018;
              _out6018 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11840_fromTpeGen = _out6018;
              RAST._IType _11841_toTpeGen;
              RAST._IType _out6019;
              _out6019 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11841_toTpeGen = _out6019;
              RAST._IExpr _11842_recursiveGen;
              DCOMPUTF16._IOwnership _11843_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11844_recIdents;
              RAST._IExpr _out6020;
              DCOMPUTF16._IOwnership _out6021;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6022;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6020, out _out6021, out _out6022);
              _11842_recursiveGen = _out6020;
              _11843_recOwned = _out6021;
              _11844_recIdents = _out6022;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11842_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11840_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11841_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6023;
              DCOMPUTF16._IOwnership _out6024;
              DCOMPUTF16.COMP.FromOwnership(r, _11843_recOwned, expectedOwnership, out _out6023, out _out6024);
              r = _out6023;
              resultingOwnership = _out6024;
              readIdents = _11844_recIdents;
            }
          } else if (_source644.is_SetBuilder) {
            DAST._IType _11845___mcc_h928 = _source644.dtor_element;
            {
              RAST._IType _11846_fromTpeGen;
              RAST._IType _out6025;
              _out6025 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11846_fromTpeGen = _out6025;
              RAST._IType _11847_toTpeGen;
              RAST._IType _out6026;
              _out6026 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11847_toTpeGen = _out6026;
              RAST._IExpr _11848_recursiveGen;
              DCOMPUTF16._IOwnership _11849_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11850_recIdents;
              RAST._IExpr _out6027;
              DCOMPUTF16._IOwnership _out6028;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6029;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6027, out _out6028, out _out6029);
              _11848_recursiveGen = _out6027;
              _11849_recOwned = _out6028;
              _11850_recIdents = _out6029;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11848_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11846_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11847_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6030;
              DCOMPUTF16._IOwnership _out6031;
              DCOMPUTF16.COMP.FromOwnership(r, _11849_recOwned, expectedOwnership, out _out6030, out _out6031);
              r = _out6030;
              resultingOwnership = _out6031;
              readIdents = _11850_recIdents;
            }
          } else if (_source644.is_MapBuilder) {
            DAST._IType _11851___mcc_h930 = _source644.dtor_key;
            DAST._IType _11852___mcc_h931 = _source644.dtor_value;
            {
              RAST._IType _11853_fromTpeGen;
              RAST._IType _out6032;
              _out6032 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11853_fromTpeGen = _out6032;
              RAST._IType _11854_toTpeGen;
              RAST._IType _out6033;
              _out6033 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11854_toTpeGen = _out6033;
              RAST._IExpr _11855_recursiveGen;
              DCOMPUTF16._IOwnership _11856_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11857_recIdents;
              RAST._IExpr _out6034;
              DCOMPUTF16._IOwnership _out6035;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6036;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6034, out _out6035, out _out6036);
              _11855_recursiveGen = _out6034;
              _11856_recOwned = _out6035;
              _11857_recIdents = _out6036;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11855_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11853_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11854_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6037;
              DCOMPUTF16._IOwnership _out6038;
              DCOMPUTF16.COMP.FromOwnership(r, _11856_recOwned, expectedOwnership, out _out6037, out _out6038);
              r = _out6037;
              resultingOwnership = _out6038;
              readIdents = _11857_recIdents;
            }
          } else if (_source644.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11858___mcc_h934 = _source644.dtor_args;
            DAST._IType _11859___mcc_h935 = _source644.dtor_result;
            {
              RAST._IType _11860_fromTpeGen;
              RAST._IType _out6039;
              _out6039 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11860_fromTpeGen = _out6039;
              RAST._IType _11861_toTpeGen;
              RAST._IType _out6040;
              _out6040 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11861_toTpeGen = _out6040;
              RAST._IExpr _11862_recursiveGen;
              DCOMPUTF16._IOwnership _11863_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11864_recIdents;
              RAST._IExpr _out6041;
              DCOMPUTF16._IOwnership _out6042;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6043;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6041, out _out6042, out _out6043);
              _11862_recursiveGen = _out6041;
              _11863_recOwned = _out6042;
              _11864_recIdents = _out6043;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11862_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11860_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11861_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6044;
              DCOMPUTF16._IOwnership _out6045;
              DCOMPUTF16.COMP.FromOwnership(r, _11863_recOwned, expectedOwnership, out _out6044, out _out6045);
              r = _out6044;
              resultingOwnership = _out6045;
              readIdents = _11864_recIdents;
            }
          } else if (_source644.is_Primitive) {
            DAST._IPrimitive _11865___mcc_h938 = _source644.dtor_Primitive_a0;
            {
              RAST._IType _11866_fromTpeGen;
              RAST._IType _out6046;
              _out6046 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11866_fromTpeGen = _out6046;
              RAST._IType _11867_toTpeGen;
              RAST._IType _out6047;
              _out6047 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11867_toTpeGen = _out6047;
              RAST._IExpr _11868_recursiveGen;
              DCOMPUTF16._IOwnership _11869_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11870_recIdents;
              RAST._IExpr _out6048;
              DCOMPUTF16._IOwnership _out6049;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6050;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6048, out _out6049, out _out6050);
              _11868_recursiveGen = _out6048;
              _11869_recOwned = _out6049;
              _11870_recIdents = _out6050;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11868_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11866_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11867_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6051;
              DCOMPUTF16._IOwnership _out6052;
              DCOMPUTF16.COMP.FromOwnership(r, _11869_recOwned, expectedOwnership, out _out6051, out _out6052);
              r = _out6051;
              resultingOwnership = _out6052;
              readIdents = _11870_recIdents;
            }
          } else if (_source644.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11871___mcc_h940 = _source644.dtor_Passthrough_a0;
            {
              RAST._IType _11872_fromTpeGen;
              RAST._IType _out6053;
              _out6053 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11872_fromTpeGen = _out6053;
              RAST._IType _11873_toTpeGen;
              RAST._IType _out6054;
              _out6054 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11873_toTpeGen = _out6054;
              RAST._IExpr _11874_recursiveGen;
              DCOMPUTF16._IOwnership _11875_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11876_recIdents;
              RAST._IExpr _out6055;
              DCOMPUTF16._IOwnership _out6056;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6057;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6055, out _out6056, out _out6057);
              _11874_recursiveGen = _out6055;
              _11875_recOwned = _out6056;
              _11876_recIdents = _out6057;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11874_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11872_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11873_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6058;
              DCOMPUTF16._IOwnership _out6059;
              DCOMPUTF16.COMP.FromOwnership(r, _11875_recOwned, expectedOwnership, out _out6058, out _out6059);
              r = _out6058;
              resultingOwnership = _out6059;
              readIdents = _11876_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11877___mcc_h942 = _source644.dtor_TypeArg_a0;
            {
              RAST._IType _11878_fromTpeGen;
              RAST._IType _out6060;
              _out6060 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _11878_fromTpeGen = _out6060;
              RAST._IType _11879_toTpeGen;
              RAST._IType _out6061;
              _out6061 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _11879_toTpeGen = _out6061;
              RAST._IExpr _11880_recursiveGen;
              DCOMPUTF16._IOwnership _11881_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11882_recIdents;
              RAST._IExpr _out6062;
              DCOMPUTF16._IOwnership _out6063;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6064;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6062, out _out6063, out _out6064);
              _11880_recursiveGen = _out6062;
              _11881_recOwned = _out6063;
              _11882_recIdents = _out6064;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11880_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11878_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11879_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6065;
              DCOMPUTF16._IOwnership _out6066;
              DCOMPUTF16.COMP.FromOwnership(r, _11881_recOwned, expectedOwnership, out _out6065, out _out6066);
              r = _out6065;
              resultingOwnership = _out6066;
              readIdents = _11882_recIdents;
            }
          }
        } else if (_source565.is_Primitive) {
          DAST._IPrimitive _11883___mcc_h944 = _source565.dtor_Primitive_a0;
          DAST._IPrimitive _source649 = _11883___mcc_h944;
          if (_source649.is_Int) {
            DAST._IType _source650 = _9615___mcc_h1;
            if (_source650.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11884___mcc_h948 = _source650.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _11885___mcc_h949 = _source650.dtor_typeArgs;
              DAST._IResolvedType _11886___mcc_h950 = _source650.dtor_resolved;
              DAST._IResolvedType _source651 = _11886___mcc_h950;
              if (_source651.is_AllocatedDatatype) {
                DAST._IDatatypeType _11887___mcc_h954 = _source651.dtor_datatypeType;
                {
                  RAST._IType _11888_fromTpeGen;
                  RAST._IType _out6067;
                  _out6067 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _11888_fromTpeGen = _out6067;
                  RAST._IType _11889_toTpeGen;
                  RAST._IType _out6068;
                  _out6068 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _11889_toTpeGen = _out6068;
                  RAST._IExpr _11890_recursiveGen;
                  DCOMPUTF16._IOwnership _11891_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11892_recIdents;
                  RAST._IExpr _out6069;
                  DCOMPUTF16._IOwnership _out6070;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6071;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6069, out _out6070, out _out6071);
                  _11890_recursiveGen = _out6069;
                  _11891_recOwned = _out6070;
                  _11892_recIdents = _out6071;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11890_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11888_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11889_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6072;
                  DCOMPUTF16._IOwnership _out6073;
                  DCOMPUTF16.COMP.FromOwnership(r, _11891_recOwned, expectedOwnership, out _out6072, out _out6073);
                  r = _out6072;
                  resultingOwnership = _out6073;
                  readIdents = _11892_recIdents;
                }
              } else if (_source651.is_Datatype) {
                DAST._IDatatypeType _11893___mcc_h956 = _source651.dtor_datatypeType;
                {
                  RAST._IType _11894_fromTpeGen;
                  RAST._IType _out6074;
                  _out6074 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _11894_fromTpeGen = _out6074;
                  RAST._IType _11895_toTpeGen;
                  RAST._IType _out6075;
                  _out6075 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _11895_toTpeGen = _out6075;
                  RAST._IExpr _11896_recursiveGen;
                  DCOMPUTF16._IOwnership _11897_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11898_recIdents;
                  RAST._IExpr _out6076;
                  DCOMPUTF16._IOwnership _out6077;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6078;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6076, out _out6077, out _out6078);
                  _11896_recursiveGen = _out6076;
                  _11897_recOwned = _out6077;
                  _11898_recIdents = _out6078;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11896_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11894_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11895_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6079;
                  DCOMPUTF16._IOwnership _out6080;
                  DCOMPUTF16.COMP.FromOwnership(r, _11897_recOwned, expectedOwnership, out _out6079, out _out6080);
                  r = _out6079;
                  resultingOwnership = _out6080;
                  readIdents = _11898_recIdents;
                }
              } else if (_source651.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11899___mcc_h958 = _source651.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _11900___mcc_h959 = _source651.dtor_attributes;
                {
                  RAST._IType _11901_fromTpeGen;
                  RAST._IType _out6081;
                  _out6081 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _11901_fromTpeGen = _out6081;
                  RAST._IType _11902_toTpeGen;
                  RAST._IType _out6082;
                  _out6082 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _11902_toTpeGen = _out6082;
                  RAST._IExpr _11903_recursiveGen;
                  DCOMPUTF16._IOwnership _11904_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11905_recIdents;
                  RAST._IExpr _out6083;
                  DCOMPUTF16._IOwnership _out6084;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6085;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6083, out _out6084, out _out6085);
                  _11903_recursiveGen = _out6083;
                  _11904_recOwned = _out6084;
                  _11905_recIdents = _out6085;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11903_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11901_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11902_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6086;
                  DCOMPUTF16._IOwnership _out6087;
                  DCOMPUTF16.COMP.FromOwnership(r, _11904_recOwned, expectedOwnership, out _out6086, out _out6087);
                  r = _out6086;
                  resultingOwnership = _out6087;
                  readIdents = _11905_recIdents;
                }
              } else {
                DAST._IType _11906___mcc_h962 = _source651.dtor_baseType;
                DAST._INewtypeRange _11907___mcc_h963 = _source651.dtor_range;
                bool _11908___mcc_h964 = _source651.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _11909___mcc_h965 = _source651.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _11910_attributes = _11909___mcc_h965;
                bool _11911_erase = _11908___mcc_h964;
                DAST._INewtypeRange _11912_range = _11907___mcc_h963;
                DAST._IType _11913_b = _11906___mcc_h962;
                {
                  Std.Wrappers._IOption<RAST._IType> _11914_nativeToType;
                  _11914_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11913_b, _11912_range);
                  if (object.Equals(_9609_fromTpe, _11913_b)) {
                    RAST._IExpr _11915_recursiveGen;
                    DCOMPUTF16._IOwnership _11916_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11917_recIdents;
                    RAST._IExpr _out6088;
                    DCOMPUTF16._IOwnership _out6089;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6090;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6088, out _out6089, out _out6090);
                    _11915_recursiveGen = _out6088;
                    _11916_recOwned = _out6089;
                    _11917_recIdents = _out6090;
                    readIdents = _11917_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source652 = _11914_nativeToType;
                    if (_source652.is_None) {
                      if (_11911_erase) {
                        r = _11915_recursiveGen;
                      } else {
                        RAST._IType _11918_rhsType;
                        RAST._IType _out6091;
                        _out6091 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _11918_rhsType = _out6091;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11918_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11915_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6092;
                      DCOMPUTF16._IOwnership _out6093;
                      DCOMPUTF16.COMP.FromOwnership(r, _11916_recOwned, expectedOwnership, out _out6092, out _out6093);
                      r = _out6092;
                      resultingOwnership = _out6093;
                    } else {
                      RAST._IType _11919___mcc_h2104 = _source652.dtor_value;
                      RAST._IType _11920_v = _11919___mcc_h2104;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11915_recursiveGen, RAST.Expr.create_ExprFromType(_11920_v)));
                      RAST._IExpr _out6094;
                      DCOMPUTF16._IOwnership _out6095;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6094, out _out6095);
                      r = _out6094;
                      resultingOwnership = _out6095;
                    }
                  } else {
                    if ((_11914_nativeToType).is_Some) {
                      DAST._IType _source653 = _9609_fromTpe;
                      if (_source653.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11921___mcc_h2105 = _source653.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11922___mcc_h2106 = _source653.dtor_typeArgs;
                        DAST._IResolvedType _11923___mcc_h2107 = _source653.dtor_resolved;
                        DAST._IResolvedType _source654 = _11923___mcc_h2107;
                        if (_source654.is_AllocatedDatatype) {
                          DAST._IDatatypeType _11924___mcc_h2111 = _source654.dtor_datatypeType;
                        } else if (_source654.is_Datatype) {
                          DAST._IDatatypeType _11925___mcc_h2113 = _source654.dtor_datatypeType;
                        } else if (_source654.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11926___mcc_h2115 = _source654.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11927___mcc_h2116 = _source654.dtor_attributes;
                        } else {
                          DAST._IType _11928___mcc_h2119 = _source654.dtor_baseType;
                          DAST._INewtypeRange _11929___mcc_h2120 = _source654.dtor_range;
                          bool _11930___mcc_h2121 = _source654.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11931___mcc_h2122 = _source654.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11932_attributes0 = _11931___mcc_h2122;
                          bool _11933_erase0 = _11930___mcc_h2121;
                          DAST._INewtypeRange _11934_range0 = _11929___mcc_h2120;
                          DAST._IType _11935_b0 = _11928___mcc_h2119;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11936_nativeFromType;
                            _11936_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11935_b0, _11934_range0);
                            if ((_11936_nativeFromType).is_Some) {
                              RAST._IExpr _11937_recursiveGen;
                              DCOMPUTF16._IOwnership _11938_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11939_recIdents;
                              RAST._IExpr _out6096;
                              DCOMPUTF16._IOwnership _out6097;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6098;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6096, out _out6097, out _out6098);
                              _11937_recursiveGen = _out6096;
                              _11938_recOwned = _out6097;
                              _11939_recIdents = _out6098;
                              RAST._IExpr _out6099;
                              DCOMPUTF16._IOwnership _out6100;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11937_recursiveGen, (_11914_nativeToType).dtor_value), _11938_recOwned, expectedOwnership, out _out6099, out _out6100);
                              r = _out6099;
                              resultingOwnership = _out6100;
                              readIdents = _11939_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source653.is_Nullable) {
                        DAST._IType _11940___mcc_h2127 = _source653.dtor_Nullable_a0;
                      } else if (_source653.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11941___mcc_h2129 = _source653.dtor_Tuple_a0;
                      } else if (_source653.is_Array) {
                        DAST._IType _11942___mcc_h2131 = _source653.dtor_element;
                        BigInteger _11943___mcc_h2132 = _source653.dtor_dims;
                      } else if (_source653.is_Seq) {
                        DAST._IType _11944___mcc_h2135 = _source653.dtor_element;
                      } else if (_source653.is_Set) {
                        DAST._IType _11945___mcc_h2137 = _source653.dtor_element;
                      } else if (_source653.is_Multiset) {
                        DAST._IType _11946___mcc_h2139 = _source653.dtor_element;
                      } else if (_source653.is_Map) {
                        DAST._IType _11947___mcc_h2141 = _source653.dtor_key;
                        DAST._IType _11948___mcc_h2142 = _source653.dtor_value;
                      } else if (_source653.is_SetBuilder) {
                        DAST._IType _11949___mcc_h2145 = _source653.dtor_element;
                      } else if (_source653.is_MapBuilder) {
                        DAST._IType _11950___mcc_h2147 = _source653.dtor_key;
                        DAST._IType _11951___mcc_h2148 = _source653.dtor_value;
                      } else if (_source653.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11952___mcc_h2151 = _source653.dtor_args;
                        DAST._IType _11953___mcc_h2152 = _source653.dtor_result;
                      } else if (_source653.is_Primitive) {
                        DAST._IPrimitive _11954___mcc_h2155 = _source653.dtor_Primitive_a0;
                      } else if (_source653.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11955___mcc_h2157 = _source653.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11956___mcc_h2159 = _source653.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11957_recursiveGen;
                        DCOMPUTF16._IOwnership _11958_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11959_recIdents;
                        RAST._IExpr _out6101;
                        DCOMPUTF16._IOwnership _out6102;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6103;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6101, out _out6102, out _out6103);
                        _11957_recursiveGen = _out6101;
                        _11958_recOwned = _out6102;
                        _11959_recIdents = _out6103;
                        RAST._IExpr _out6104;
                        DCOMPUTF16._IOwnership _out6105;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11957_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11914_nativeToType).dtor_value), _11958_recOwned, expectedOwnership, out _out6104, out _out6105);
                        r = _out6104;
                        resultingOwnership = _out6105;
                        readIdents = _11959_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6106;
                    DCOMPUTF16._IOwnership _out6107;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6108;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _11913_b), _11913_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out6106, out _out6107, out _out6108);
                    r = _out6106;
                    resultingOwnership = _out6107;
                    readIdents = _out6108;
                  }
                }
              }
            } else if (_source650.is_Nullable) {
              DAST._IType _11960___mcc_h970 = _source650.dtor_Nullable_a0;
              {
                RAST._IExpr _11961_recursiveGen;
                DCOMPUTF16._IOwnership _11962_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11963_recIdents;
                RAST._IExpr _out6109;
                DCOMPUTF16._IOwnership _out6110;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6111;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6109, out _out6110, out _out6111);
                _11961_recursiveGen = _out6109;
                _11962_recOwned = _out6110;
                _11963_recIdents = _out6111;
                r = _11961_recursiveGen;
                if (object.Equals(_11962_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6112;
                DCOMPUTF16._IOwnership _out6113;
                DCOMPUTF16.COMP.FromOwnership(r, _11962_recOwned, expectedOwnership, out _out6112, out _out6113);
                r = _out6112;
                resultingOwnership = _out6113;
                readIdents = _11963_recIdents;
              }
            } else if (_source650.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11964___mcc_h972 = _source650.dtor_Tuple_a0;
              {
                RAST._IType _11965_fromTpeGen;
                RAST._IType _out6114;
                _out6114 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11965_fromTpeGen = _out6114;
                RAST._IType _11966_toTpeGen;
                RAST._IType _out6115;
                _out6115 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11966_toTpeGen = _out6115;
                RAST._IExpr _11967_recursiveGen;
                DCOMPUTF16._IOwnership _11968_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11969_recIdents;
                RAST._IExpr _out6116;
                DCOMPUTF16._IOwnership _out6117;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6118;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6116, out _out6117, out _out6118);
                _11967_recursiveGen = _out6116;
                _11968_recOwned = _out6117;
                _11969_recIdents = _out6118;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11967_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11965_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11966_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6119;
                DCOMPUTF16._IOwnership _out6120;
                DCOMPUTF16.COMP.FromOwnership(r, _11968_recOwned, expectedOwnership, out _out6119, out _out6120);
                r = _out6119;
                resultingOwnership = _out6120;
                readIdents = _11969_recIdents;
              }
            } else if (_source650.is_Array) {
              DAST._IType _11970___mcc_h974 = _source650.dtor_element;
              BigInteger _11971___mcc_h975 = _source650.dtor_dims;
              {
                RAST._IType _11972_fromTpeGen;
                RAST._IType _out6121;
                _out6121 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11972_fromTpeGen = _out6121;
                RAST._IType _11973_toTpeGen;
                RAST._IType _out6122;
                _out6122 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11973_toTpeGen = _out6122;
                RAST._IExpr _11974_recursiveGen;
                DCOMPUTF16._IOwnership _11975_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11976_recIdents;
                RAST._IExpr _out6123;
                DCOMPUTF16._IOwnership _out6124;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6125;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6123, out _out6124, out _out6125);
                _11974_recursiveGen = _out6123;
                _11975_recOwned = _out6124;
                _11976_recIdents = _out6125;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11974_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11972_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11973_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6126;
                DCOMPUTF16._IOwnership _out6127;
                DCOMPUTF16.COMP.FromOwnership(r, _11975_recOwned, expectedOwnership, out _out6126, out _out6127);
                r = _out6126;
                resultingOwnership = _out6127;
                readIdents = _11976_recIdents;
              }
            } else if (_source650.is_Seq) {
              DAST._IType _11977___mcc_h978 = _source650.dtor_element;
              {
                RAST._IType _11978_fromTpeGen;
                RAST._IType _out6128;
                _out6128 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11978_fromTpeGen = _out6128;
                RAST._IType _11979_toTpeGen;
                RAST._IType _out6129;
                _out6129 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11979_toTpeGen = _out6129;
                RAST._IExpr _11980_recursiveGen;
                DCOMPUTF16._IOwnership _11981_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11982_recIdents;
                RAST._IExpr _out6130;
                DCOMPUTF16._IOwnership _out6131;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6132;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6130, out _out6131, out _out6132);
                _11980_recursiveGen = _out6130;
                _11981_recOwned = _out6131;
                _11982_recIdents = _out6132;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11980_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11978_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11979_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6133;
                DCOMPUTF16._IOwnership _out6134;
                DCOMPUTF16.COMP.FromOwnership(r, _11981_recOwned, expectedOwnership, out _out6133, out _out6134);
                r = _out6133;
                resultingOwnership = _out6134;
                readIdents = _11982_recIdents;
              }
            } else if (_source650.is_Set) {
              DAST._IType _11983___mcc_h980 = _source650.dtor_element;
              {
                RAST._IType _11984_fromTpeGen;
                RAST._IType _out6135;
                _out6135 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11984_fromTpeGen = _out6135;
                RAST._IType _11985_toTpeGen;
                RAST._IType _out6136;
                _out6136 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11985_toTpeGen = _out6136;
                RAST._IExpr _11986_recursiveGen;
                DCOMPUTF16._IOwnership _11987_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11988_recIdents;
                RAST._IExpr _out6137;
                DCOMPUTF16._IOwnership _out6138;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6139;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6137, out _out6138, out _out6139);
                _11986_recursiveGen = _out6137;
                _11987_recOwned = _out6138;
                _11988_recIdents = _out6139;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11986_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11984_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11985_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6140;
                DCOMPUTF16._IOwnership _out6141;
                DCOMPUTF16.COMP.FromOwnership(r, _11987_recOwned, expectedOwnership, out _out6140, out _out6141);
                r = _out6140;
                resultingOwnership = _out6141;
                readIdents = _11988_recIdents;
              }
            } else if (_source650.is_Multiset) {
              DAST._IType _11989___mcc_h982 = _source650.dtor_element;
              {
                RAST._IType _11990_fromTpeGen;
                RAST._IType _out6142;
                _out6142 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11990_fromTpeGen = _out6142;
                RAST._IType _11991_toTpeGen;
                RAST._IType _out6143;
                _out6143 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11991_toTpeGen = _out6143;
                RAST._IExpr _11992_recursiveGen;
                DCOMPUTF16._IOwnership _11993_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11994_recIdents;
                RAST._IExpr _out6144;
                DCOMPUTF16._IOwnership _out6145;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6146;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6144, out _out6145, out _out6146);
                _11992_recursiveGen = _out6144;
                _11993_recOwned = _out6145;
                _11994_recIdents = _out6146;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11992_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11990_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11991_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6147;
                DCOMPUTF16._IOwnership _out6148;
                DCOMPUTF16.COMP.FromOwnership(r, _11993_recOwned, expectedOwnership, out _out6147, out _out6148);
                r = _out6147;
                resultingOwnership = _out6148;
                readIdents = _11994_recIdents;
              }
            } else if (_source650.is_Map) {
              DAST._IType _11995___mcc_h984 = _source650.dtor_key;
              DAST._IType _11996___mcc_h985 = _source650.dtor_value;
              {
                RAST._IType _11997_fromTpeGen;
                RAST._IType _out6149;
                _out6149 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _11997_fromTpeGen = _out6149;
                RAST._IType _11998_toTpeGen;
                RAST._IType _out6150;
                _out6150 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _11998_toTpeGen = _out6150;
                RAST._IExpr _11999_recursiveGen;
                DCOMPUTF16._IOwnership _12000_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12001_recIdents;
                RAST._IExpr _out6151;
                DCOMPUTF16._IOwnership _out6152;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6153;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6151, out _out6152, out _out6153);
                _11999_recursiveGen = _out6151;
                _12000_recOwned = _out6152;
                _12001_recIdents = _out6153;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11999_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11997_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11998_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6154;
                DCOMPUTF16._IOwnership _out6155;
                DCOMPUTF16.COMP.FromOwnership(r, _12000_recOwned, expectedOwnership, out _out6154, out _out6155);
                r = _out6154;
                resultingOwnership = _out6155;
                readIdents = _12001_recIdents;
              }
            } else if (_source650.is_SetBuilder) {
              DAST._IType _12002___mcc_h988 = _source650.dtor_element;
              {
                RAST._IType _12003_fromTpeGen;
                RAST._IType _out6156;
                _out6156 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12003_fromTpeGen = _out6156;
                RAST._IType _12004_toTpeGen;
                RAST._IType _out6157;
                _out6157 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12004_toTpeGen = _out6157;
                RAST._IExpr _12005_recursiveGen;
                DCOMPUTF16._IOwnership _12006_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12007_recIdents;
                RAST._IExpr _out6158;
                DCOMPUTF16._IOwnership _out6159;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6160;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6158, out _out6159, out _out6160);
                _12005_recursiveGen = _out6158;
                _12006_recOwned = _out6159;
                _12007_recIdents = _out6160;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12005_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12003_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12004_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6161;
                DCOMPUTF16._IOwnership _out6162;
                DCOMPUTF16.COMP.FromOwnership(r, _12006_recOwned, expectedOwnership, out _out6161, out _out6162);
                r = _out6161;
                resultingOwnership = _out6162;
                readIdents = _12007_recIdents;
              }
            } else if (_source650.is_MapBuilder) {
              DAST._IType _12008___mcc_h990 = _source650.dtor_key;
              DAST._IType _12009___mcc_h991 = _source650.dtor_value;
              {
                RAST._IType _12010_fromTpeGen;
                RAST._IType _out6163;
                _out6163 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12010_fromTpeGen = _out6163;
                RAST._IType _12011_toTpeGen;
                RAST._IType _out6164;
                _out6164 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12011_toTpeGen = _out6164;
                RAST._IExpr _12012_recursiveGen;
                DCOMPUTF16._IOwnership _12013_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12014_recIdents;
                RAST._IExpr _out6165;
                DCOMPUTF16._IOwnership _out6166;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6167;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6165, out _out6166, out _out6167);
                _12012_recursiveGen = _out6165;
                _12013_recOwned = _out6166;
                _12014_recIdents = _out6167;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12012_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12010_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12011_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6168;
                DCOMPUTF16._IOwnership _out6169;
                DCOMPUTF16.COMP.FromOwnership(r, _12013_recOwned, expectedOwnership, out _out6168, out _out6169);
                r = _out6168;
                resultingOwnership = _out6169;
                readIdents = _12014_recIdents;
              }
            } else if (_source650.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12015___mcc_h994 = _source650.dtor_args;
              DAST._IType _12016___mcc_h995 = _source650.dtor_result;
              {
                RAST._IType _12017_fromTpeGen;
                RAST._IType _out6170;
                _out6170 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12017_fromTpeGen = _out6170;
                RAST._IType _12018_toTpeGen;
                RAST._IType _out6171;
                _out6171 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12018_toTpeGen = _out6171;
                RAST._IExpr _12019_recursiveGen;
                DCOMPUTF16._IOwnership _12020_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12021_recIdents;
                RAST._IExpr _out6172;
                DCOMPUTF16._IOwnership _out6173;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6174;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6172, out _out6173, out _out6174);
                _12019_recursiveGen = _out6172;
                _12020_recOwned = _out6173;
                _12021_recIdents = _out6174;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12019_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12017_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12018_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6175;
                DCOMPUTF16._IOwnership _out6176;
                DCOMPUTF16.COMP.FromOwnership(r, _12020_recOwned, expectedOwnership, out _out6175, out _out6176);
                r = _out6175;
                resultingOwnership = _out6176;
                readIdents = _12021_recIdents;
              }
            } else if (_source650.is_Primitive) {
              DAST._IPrimitive _12022___mcc_h998 = _source650.dtor_Primitive_a0;
              DAST._IPrimitive _source655 = _12022___mcc_h998;
              if (_source655.is_Int) {
                {
                  RAST._IType _12023_fromTpeGen;
                  RAST._IType _out6177;
                  _out6177 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12023_fromTpeGen = _out6177;
                  RAST._IType _12024_toTpeGen;
                  RAST._IType _out6178;
                  _out6178 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12024_toTpeGen = _out6178;
                  RAST._IExpr _12025_recursiveGen;
                  DCOMPUTF16._IOwnership _12026_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12027_recIdents;
                  RAST._IExpr _out6179;
                  DCOMPUTF16._IOwnership _out6180;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6181;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6179, out _out6180, out _out6181);
                  _12025_recursiveGen = _out6179;
                  _12026_recOwned = _out6180;
                  _12027_recIdents = _out6181;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12025_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12023_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12024_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6182;
                  DCOMPUTF16._IOwnership _out6183;
                  DCOMPUTF16.COMP.FromOwnership(r, _12026_recOwned, expectedOwnership, out _out6182, out _out6183);
                  r = _out6182;
                  resultingOwnership = _out6183;
                  readIdents = _12027_recIdents;
                }
              } else if (_source655.is_Real) {
                {
                  RAST._IExpr _12028_recursiveGen;
                  DCOMPUTF16._IOwnership _12029___v98;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12030_recIdents;
                  RAST._IExpr _out6184;
                  DCOMPUTF16._IOwnership _out6185;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6186;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6184, out _out6185, out _out6186);
                  _12028_recursiveGen = _out6184;
                  _12029___v98 = _out6185;
                  _12030_recIdents = _out6186;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_12028_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out6187;
                  DCOMPUTF16._IOwnership _out6188;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6187, out _out6188);
                  r = _out6187;
                  resultingOwnership = _out6188;
                  readIdents = _12030_recIdents;
                }
              } else if (_source655.is_String) {
                {
                  RAST._IType _12031_fromTpeGen;
                  RAST._IType _out6189;
                  _out6189 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12031_fromTpeGen = _out6189;
                  RAST._IType _12032_toTpeGen;
                  RAST._IType _out6190;
                  _out6190 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12032_toTpeGen = _out6190;
                  RAST._IExpr _12033_recursiveGen;
                  DCOMPUTF16._IOwnership _12034_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12035_recIdents;
                  RAST._IExpr _out6191;
                  DCOMPUTF16._IOwnership _out6192;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6193;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6191, out _out6192, out _out6193);
                  _12033_recursiveGen = _out6191;
                  _12034_recOwned = _out6192;
                  _12035_recIdents = _out6193;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12033_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12031_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12032_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6194;
                  DCOMPUTF16._IOwnership _out6195;
                  DCOMPUTF16.COMP.FromOwnership(r, _12034_recOwned, expectedOwnership, out _out6194, out _out6195);
                  r = _out6194;
                  resultingOwnership = _out6195;
                  readIdents = _12035_recIdents;
                }
              } else if (_source655.is_Bool) {
                {
                  RAST._IType _12036_fromTpeGen;
                  RAST._IType _out6196;
                  _out6196 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12036_fromTpeGen = _out6196;
                  RAST._IType _12037_toTpeGen;
                  RAST._IType _out6197;
                  _out6197 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12037_toTpeGen = _out6197;
                  RAST._IExpr _12038_recursiveGen;
                  DCOMPUTF16._IOwnership _12039_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12040_recIdents;
                  RAST._IExpr _out6198;
                  DCOMPUTF16._IOwnership _out6199;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6200;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6198, out _out6199, out _out6200);
                  _12038_recursiveGen = _out6198;
                  _12039_recOwned = _out6199;
                  _12040_recIdents = _out6200;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12038_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12036_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12037_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6201;
                  DCOMPUTF16._IOwnership _out6202;
                  DCOMPUTF16.COMP.FromOwnership(r, _12039_recOwned, expectedOwnership, out _out6201, out _out6202);
                  r = _out6201;
                  resultingOwnership = _out6202;
                  readIdents = _12040_recIdents;
                }
              } else {
                {
                  RAST._IType _12041_rhsType;
                  RAST._IType _out6203;
                  _out6203 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12041_rhsType = _out6203;
                  RAST._IExpr _12042_recursiveGen;
                  DCOMPUTF16._IOwnership _12043___v104;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12044_recIdents;
                  RAST._IExpr _out6204;
                  DCOMPUTF16._IOwnership _out6205;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6206;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6204, out _out6205, out _out6206);
                  _12042_recursiveGen = _out6204;
                  _12043___v104 = _out6205;
                  _12044_recIdents = _out6206;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_12042_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out6207;
                  DCOMPUTF16._IOwnership _out6208;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6207, out _out6208);
                  r = _out6207;
                  resultingOwnership = _out6208;
                  readIdents = _12044_recIdents;
                }
              }
            } else if (_source650.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12045___mcc_h1000 = _source650.dtor_Passthrough_a0;
              {
                RAST._IType _12046_rhsType;
                RAST._IType _out6209;
                _out6209 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12046_rhsType = _out6209;
                RAST._IExpr _12047_recursiveGen;
                DCOMPUTF16._IOwnership _12048___v101;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12049_recIdents;
                RAST._IExpr _out6210;
                DCOMPUTF16._IOwnership _out6211;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6212;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6210, out _out6211, out _out6212);
                _12047_recursiveGen = _out6210;
                _12048___v101 = _out6211;
                _12049_recIdents = _out6212;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_12046_rhsType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_12047_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out6213;
                DCOMPUTF16._IOwnership _out6214;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6213, out _out6214);
                r = _out6213;
                resultingOwnership = _out6214;
                readIdents = _12049_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12050___mcc_h1002 = _source650.dtor_TypeArg_a0;
              {
                RAST._IType _12051_fromTpeGen;
                RAST._IType _out6215;
                _out6215 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12051_fromTpeGen = _out6215;
                RAST._IType _12052_toTpeGen;
                RAST._IType _out6216;
                _out6216 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12052_toTpeGen = _out6216;
                RAST._IExpr _12053_recursiveGen;
                DCOMPUTF16._IOwnership _12054_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12055_recIdents;
                RAST._IExpr _out6217;
                DCOMPUTF16._IOwnership _out6218;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6219;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6217, out _out6218, out _out6219);
                _12053_recursiveGen = _out6217;
                _12054_recOwned = _out6218;
                _12055_recIdents = _out6219;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12053_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12051_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12052_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6220;
                DCOMPUTF16._IOwnership _out6221;
                DCOMPUTF16.COMP.FromOwnership(r, _12054_recOwned, expectedOwnership, out _out6220, out _out6221);
                r = _out6220;
                resultingOwnership = _out6221;
                readIdents = _12055_recIdents;
              }
            }
          } else if (_source649.is_Real) {
            DAST._IType _source656 = _9615___mcc_h1;
            if (_source656.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12056___mcc_h1004 = _source656.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12057___mcc_h1005 = _source656.dtor_typeArgs;
              DAST._IResolvedType _12058___mcc_h1006 = _source656.dtor_resolved;
              DAST._IResolvedType _source657 = _12058___mcc_h1006;
              if (_source657.is_AllocatedDatatype) {
                DAST._IDatatypeType _12059___mcc_h1010 = _source657.dtor_datatypeType;
                {
                  RAST._IType _12060_fromTpeGen;
                  RAST._IType _out6222;
                  _out6222 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12060_fromTpeGen = _out6222;
                  RAST._IType _12061_toTpeGen;
                  RAST._IType _out6223;
                  _out6223 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12061_toTpeGen = _out6223;
                  RAST._IExpr _12062_recursiveGen;
                  DCOMPUTF16._IOwnership _12063_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12064_recIdents;
                  RAST._IExpr _out6224;
                  DCOMPUTF16._IOwnership _out6225;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6226;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6224, out _out6225, out _out6226);
                  _12062_recursiveGen = _out6224;
                  _12063_recOwned = _out6225;
                  _12064_recIdents = _out6226;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12062_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12060_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12061_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6227;
                  DCOMPUTF16._IOwnership _out6228;
                  DCOMPUTF16.COMP.FromOwnership(r, _12063_recOwned, expectedOwnership, out _out6227, out _out6228);
                  r = _out6227;
                  resultingOwnership = _out6228;
                  readIdents = _12064_recIdents;
                }
              } else if (_source657.is_Datatype) {
                DAST._IDatatypeType _12065___mcc_h1012 = _source657.dtor_datatypeType;
                {
                  RAST._IType _12066_fromTpeGen;
                  RAST._IType _out6229;
                  _out6229 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12066_fromTpeGen = _out6229;
                  RAST._IType _12067_toTpeGen;
                  RAST._IType _out6230;
                  _out6230 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12067_toTpeGen = _out6230;
                  RAST._IExpr _12068_recursiveGen;
                  DCOMPUTF16._IOwnership _12069_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12070_recIdents;
                  RAST._IExpr _out6231;
                  DCOMPUTF16._IOwnership _out6232;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6233;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6231, out _out6232, out _out6233);
                  _12068_recursiveGen = _out6231;
                  _12069_recOwned = _out6232;
                  _12070_recIdents = _out6233;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12068_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12066_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12067_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6234;
                  DCOMPUTF16._IOwnership _out6235;
                  DCOMPUTF16.COMP.FromOwnership(r, _12069_recOwned, expectedOwnership, out _out6234, out _out6235);
                  r = _out6234;
                  resultingOwnership = _out6235;
                  readIdents = _12070_recIdents;
                }
              } else if (_source657.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12071___mcc_h1014 = _source657.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12072___mcc_h1015 = _source657.dtor_attributes;
                {
                  RAST._IType _12073_fromTpeGen;
                  RAST._IType _out6236;
                  _out6236 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12073_fromTpeGen = _out6236;
                  RAST._IType _12074_toTpeGen;
                  RAST._IType _out6237;
                  _out6237 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12074_toTpeGen = _out6237;
                  RAST._IExpr _12075_recursiveGen;
                  DCOMPUTF16._IOwnership _12076_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12077_recIdents;
                  RAST._IExpr _out6238;
                  DCOMPUTF16._IOwnership _out6239;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6240;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6238, out _out6239, out _out6240);
                  _12075_recursiveGen = _out6238;
                  _12076_recOwned = _out6239;
                  _12077_recIdents = _out6240;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12075_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12073_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12074_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6241;
                  DCOMPUTF16._IOwnership _out6242;
                  DCOMPUTF16.COMP.FromOwnership(r, _12076_recOwned, expectedOwnership, out _out6241, out _out6242);
                  r = _out6241;
                  resultingOwnership = _out6242;
                  readIdents = _12077_recIdents;
                }
              } else {
                DAST._IType _12078___mcc_h1018 = _source657.dtor_baseType;
                DAST._INewtypeRange _12079___mcc_h1019 = _source657.dtor_range;
                bool _12080___mcc_h1020 = _source657.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12081___mcc_h1021 = _source657.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12082_attributes = _12081___mcc_h1021;
                bool _12083_erase = _12080___mcc_h1020;
                DAST._INewtypeRange _12084_range = _12079___mcc_h1019;
                DAST._IType _12085_b = _12078___mcc_h1018;
                {
                  Std.Wrappers._IOption<RAST._IType> _12086_nativeToType;
                  _12086_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12085_b, _12084_range);
                  if (object.Equals(_9609_fromTpe, _12085_b)) {
                    RAST._IExpr _12087_recursiveGen;
                    DCOMPUTF16._IOwnership _12088_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12089_recIdents;
                    RAST._IExpr _out6243;
                    DCOMPUTF16._IOwnership _out6244;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6245;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6243, out _out6244, out _out6245);
                    _12087_recursiveGen = _out6243;
                    _12088_recOwned = _out6244;
                    _12089_recIdents = _out6245;
                    readIdents = _12089_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source658 = _12086_nativeToType;
                    if (_source658.is_None) {
                      if (_12083_erase) {
                        r = _12087_recursiveGen;
                      } else {
                        RAST._IType _12090_rhsType;
                        RAST._IType _out6246;
                        _out6246 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _12090_rhsType = _out6246;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12090_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12087_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6247;
                      DCOMPUTF16._IOwnership _out6248;
                      DCOMPUTF16.COMP.FromOwnership(r, _12088_recOwned, expectedOwnership, out _out6247, out _out6248);
                      r = _out6247;
                      resultingOwnership = _out6248;
                    } else {
                      RAST._IType _12091___mcc_h2161 = _source658.dtor_value;
                      RAST._IType _12092_v = _12091___mcc_h2161;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12087_recursiveGen, RAST.Expr.create_ExprFromType(_12092_v)));
                      RAST._IExpr _out6249;
                      DCOMPUTF16._IOwnership _out6250;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6249, out _out6250);
                      r = _out6249;
                      resultingOwnership = _out6250;
                    }
                  } else {
                    if ((_12086_nativeToType).is_Some) {
                      DAST._IType _source659 = _9609_fromTpe;
                      if (_source659.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12093___mcc_h2162 = _source659.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12094___mcc_h2163 = _source659.dtor_typeArgs;
                        DAST._IResolvedType _12095___mcc_h2164 = _source659.dtor_resolved;
                        DAST._IResolvedType _source660 = _12095___mcc_h2164;
                        if (_source660.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12096___mcc_h2168 = _source660.dtor_datatypeType;
                        } else if (_source660.is_Datatype) {
                          DAST._IDatatypeType _12097___mcc_h2170 = _source660.dtor_datatypeType;
                        } else if (_source660.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12098___mcc_h2172 = _source660.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12099___mcc_h2173 = _source660.dtor_attributes;
                        } else {
                          DAST._IType _12100___mcc_h2176 = _source660.dtor_baseType;
                          DAST._INewtypeRange _12101___mcc_h2177 = _source660.dtor_range;
                          bool _12102___mcc_h2178 = _source660.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12103___mcc_h2179 = _source660.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12104_attributes0 = _12103___mcc_h2179;
                          bool _12105_erase0 = _12102___mcc_h2178;
                          DAST._INewtypeRange _12106_range0 = _12101___mcc_h2177;
                          DAST._IType _12107_b0 = _12100___mcc_h2176;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12108_nativeFromType;
                            _12108_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12107_b0, _12106_range0);
                            if ((_12108_nativeFromType).is_Some) {
                              RAST._IExpr _12109_recursiveGen;
                              DCOMPUTF16._IOwnership _12110_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12111_recIdents;
                              RAST._IExpr _out6251;
                              DCOMPUTF16._IOwnership _out6252;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6253;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6251, out _out6252, out _out6253);
                              _12109_recursiveGen = _out6251;
                              _12110_recOwned = _out6252;
                              _12111_recIdents = _out6253;
                              RAST._IExpr _out6254;
                              DCOMPUTF16._IOwnership _out6255;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12109_recursiveGen, (_12086_nativeToType).dtor_value), _12110_recOwned, expectedOwnership, out _out6254, out _out6255);
                              r = _out6254;
                              resultingOwnership = _out6255;
                              readIdents = _12111_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source659.is_Nullable) {
                        DAST._IType _12112___mcc_h2184 = _source659.dtor_Nullable_a0;
                      } else if (_source659.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12113___mcc_h2186 = _source659.dtor_Tuple_a0;
                      } else if (_source659.is_Array) {
                        DAST._IType _12114___mcc_h2188 = _source659.dtor_element;
                        BigInteger _12115___mcc_h2189 = _source659.dtor_dims;
                      } else if (_source659.is_Seq) {
                        DAST._IType _12116___mcc_h2192 = _source659.dtor_element;
                      } else if (_source659.is_Set) {
                        DAST._IType _12117___mcc_h2194 = _source659.dtor_element;
                      } else if (_source659.is_Multiset) {
                        DAST._IType _12118___mcc_h2196 = _source659.dtor_element;
                      } else if (_source659.is_Map) {
                        DAST._IType _12119___mcc_h2198 = _source659.dtor_key;
                        DAST._IType _12120___mcc_h2199 = _source659.dtor_value;
                      } else if (_source659.is_SetBuilder) {
                        DAST._IType _12121___mcc_h2202 = _source659.dtor_element;
                      } else if (_source659.is_MapBuilder) {
                        DAST._IType _12122___mcc_h2204 = _source659.dtor_key;
                        DAST._IType _12123___mcc_h2205 = _source659.dtor_value;
                      } else if (_source659.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12124___mcc_h2208 = _source659.dtor_args;
                        DAST._IType _12125___mcc_h2209 = _source659.dtor_result;
                      } else if (_source659.is_Primitive) {
                        DAST._IPrimitive _12126___mcc_h2212 = _source659.dtor_Primitive_a0;
                      } else if (_source659.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12127___mcc_h2214 = _source659.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12128___mcc_h2216 = _source659.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12129_recursiveGen;
                        DCOMPUTF16._IOwnership _12130_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12131_recIdents;
                        RAST._IExpr _out6256;
                        DCOMPUTF16._IOwnership _out6257;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6258;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6256, out _out6257, out _out6258);
                        _12129_recursiveGen = _out6256;
                        _12130_recOwned = _out6257;
                        _12131_recIdents = _out6258;
                        RAST._IExpr _out6259;
                        DCOMPUTF16._IOwnership _out6260;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12129_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12086_nativeToType).dtor_value), _12130_recOwned, expectedOwnership, out _out6259, out _out6260);
                        r = _out6259;
                        resultingOwnership = _out6260;
                        readIdents = _12131_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6261;
                    DCOMPUTF16._IOwnership _out6262;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6263;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _12085_b), _12085_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out6261, out _out6262, out _out6263);
                    r = _out6261;
                    resultingOwnership = _out6262;
                    readIdents = _out6263;
                  }
                }
              }
            } else if (_source656.is_Nullable) {
              DAST._IType _12132___mcc_h1026 = _source656.dtor_Nullable_a0;
              {
                RAST._IExpr _12133_recursiveGen;
                DCOMPUTF16._IOwnership _12134_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12135_recIdents;
                RAST._IExpr _out6264;
                DCOMPUTF16._IOwnership _out6265;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6266;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6264, out _out6265, out _out6266);
                _12133_recursiveGen = _out6264;
                _12134_recOwned = _out6265;
                _12135_recIdents = _out6266;
                r = _12133_recursiveGen;
                if (object.Equals(_12134_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6267;
                DCOMPUTF16._IOwnership _out6268;
                DCOMPUTF16.COMP.FromOwnership(r, _12134_recOwned, expectedOwnership, out _out6267, out _out6268);
                r = _out6267;
                resultingOwnership = _out6268;
                readIdents = _12135_recIdents;
              }
            } else if (_source656.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12136___mcc_h1028 = _source656.dtor_Tuple_a0;
              {
                RAST._IType _12137_fromTpeGen;
                RAST._IType _out6269;
                _out6269 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12137_fromTpeGen = _out6269;
                RAST._IType _12138_toTpeGen;
                RAST._IType _out6270;
                _out6270 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12138_toTpeGen = _out6270;
                RAST._IExpr _12139_recursiveGen;
                DCOMPUTF16._IOwnership _12140_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12141_recIdents;
                RAST._IExpr _out6271;
                DCOMPUTF16._IOwnership _out6272;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6273;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6271, out _out6272, out _out6273);
                _12139_recursiveGen = _out6271;
                _12140_recOwned = _out6272;
                _12141_recIdents = _out6273;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12139_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12137_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12138_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6274;
                DCOMPUTF16._IOwnership _out6275;
                DCOMPUTF16.COMP.FromOwnership(r, _12140_recOwned, expectedOwnership, out _out6274, out _out6275);
                r = _out6274;
                resultingOwnership = _out6275;
                readIdents = _12141_recIdents;
              }
            } else if (_source656.is_Array) {
              DAST._IType _12142___mcc_h1030 = _source656.dtor_element;
              BigInteger _12143___mcc_h1031 = _source656.dtor_dims;
              {
                RAST._IType _12144_fromTpeGen;
                RAST._IType _out6276;
                _out6276 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12144_fromTpeGen = _out6276;
                RAST._IType _12145_toTpeGen;
                RAST._IType _out6277;
                _out6277 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12145_toTpeGen = _out6277;
                RAST._IExpr _12146_recursiveGen;
                DCOMPUTF16._IOwnership _12147_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12148_recIdents;
                RAST._IExpr _out6278;
                DCOMPUTF16._IOwnership _out6279;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6280;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6278, out _out6279, out _out6280);
                _12146_recursiveGen = _out6278;
                _12147_recOwned = _out6279;
                _12148_recIdents = _out6280;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12146_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12144_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12145_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6281;
                DCOMPUTF16._IOwnership _out6282;
                DCOMPUTF16.COMP.FromOwnership(r, _12147_recOwned, expectedOwnership, out _out6281, out _out6282);
                r = _out6281;
                resultingOwnership = _out6282;
                readIdents = _12148_recIdents;
              }
            } else if (_source656.is_Seq) {
              DAST._IType _12149___mcc_h1034 = _source656.dtor_element;
              {
                RAST._IType _12150_fromTpeGen;
                RAST._IType _out6283;
                _out6283 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12150_fromTpeGen = _out6283;
                RAST._IType _12151_toTpeGen;
                RAST._IType _out6284;
                _out6284 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12151_toTpeGen = _out6284;
                RAST._IExpr _12152_recursiveGen;
                DCOMPUTF16._IOwnership _12153_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12154_recIdents;
                RAST._IExpr _out6285;
                DCOMPUTF16._IOwnership _out6286;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6287;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6285, out _out6286, out _out6287);
                _12152_recursiveGen = _out6285;
                _12153_recOwned = _out6286;
                _12154_recIdents = _out6287;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12152_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12150_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12151_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6288;
                DCOMPUTF16._IOwnership _out6289;
                DCOMPUTF16.COMP.FromOwnership(r, _12153_recOwned, expectedOwnership, out _out6288, out _out6289);
                r = _out6288;
                resultingOwnership = _out6289;
                readIdents = _12154_recIdents;
              }
            } else if (_source656.is_Set) {
              DAST._IType _12155___mcc_h1036 = _source656.dtor_element;
              {
                RAST._IType _12156_fromTpeGen;
                RAST._IType _out6290;
                _out6290 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12156_fromTpeGen = _out6290;
                RAST._IType _12157_toTpeGen;
                RAST._IType _out6291;
                _out6291 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12157_toTpeGen = _out6291;
                RAST._IExpr _12158_recursiveGen;
                DCOMPUTF16._IOwnership _12159_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12160_recIdents;
                RAST._IExpr _out6292;
                DCOMPUTF16._IOwnership _out6293;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6294;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6292, out _out6293, out _out6294);
                _12158_recursiveGen = _out6292;
                _12159_recOwned = _out6293;
                _12160_recIdents = _out6294;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12158_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12156_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12157_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6295;
                DCOMPUTF16._IOwnership _out6296;
                DCOMPUTF16.COMP.FromOwnership(r, _12159_recOwned, expectedOwnership, out _out6295, out _out6296);
                r = _out6295;
                resultingOwnership = _out6296;
                readIdents = _12160_recIdents;
              }
            } else if (_source656.is_Multiset) {
              DAST._IType _12161___mcc_h1038 = _source656.dtor_element;
              {
                RAST._IType _12162_fromTpeGen;
                RAST._IType _out6297;
                _out6297 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12162_fromTpeGen = _out6297;
                RAST._IType _12163_toTpeGen;
                RAST._IType _out6298;
                _out6298 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12163_toTpeGen = _out6298;
                RAST._IExpr _12164_recursiveGen;
                DCOMPUTF16._IOwnership _12165_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12166_recIdents;
                RAST._IExpr _out6299;
                DCOMPUTF16._IOwnership _out6300;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6301;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6299, out _out6300, out _out6301);
                _12164_recursiveGen = _out6299;
                _12165_recOwned = _out6300;
                _12166_recIdents = _out6301;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12164_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12162_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12163_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6302;
                DCOMPUTF16._IOwnership _out6303;
                DCOMPUTF16.COMP.FromOwnership(r, _12165_recOwned, expectedOwnership, out _out6302, out _out6303);
                r = _out6302;
                resultingOwnership = _out6303;
                readIdents = _12166_recIdents;
              }
            } else if (_source656.is_Map) {
              DAST._IType _12167___mcc_h1040 = _source656.dtor_key;
              DAST._IType _12168___mcc_h1041 = _source656.dtor_value;
              {
                RAST._IType _12169_fromTpeGen;
                RAST._IType _out6304;
                _out6304 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12169_fromTpeGen = _out6304;
                RAST._IType _12170_toTpeGen;
                RAST._IType _out6305;
                _out6305 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12170_toTpeGen = _out6305;
                RAST._IExpr _12171_recursiveGen;
                DCOMPUTF16._IOwnership _12172_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12173_recIdents;
                RAST._IExpr _out6306;
                DCOMPUTF16._IOwnership _out6307;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6308;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6306, out _out6307, out _out6308);
                _12171_recursiveGen = _out6306;
                _12172_recOwned = _out6307;
                _12173_recIdents = _out6308;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12171_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12169_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12170_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6309;
                DCOMPUTF16._IOwnership _out6310;
                DCOMPUTF16.COMP.FromOwnership(r, _12172_recOwned, expectedOwnership, out _out6309, out _out6310);
                r = _out6309;
                resultingOwnership = _out6310;
                readIdents = _12173_recIdents;
              }
            } else if (_source656.is_SetBuilder) {
              DAST._IType _12174___mcc_h1044 = _source656.dtor_element;
              {
                RAST._IType _12175_fromTpeGen;
                RAST._IType _out6311;
                _out6311 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12175_fromTpeGen = _out6311;
                RAST._IType _12176_toTpeGen;
                RAST._IType _out6312;
                _out6312 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12176_toTpeGen = _out6312;
                RAST._IExpr _12177_recursiveGen;
                DCOMPUTF16._IOwnership _12178_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12179_recIdents;
                RAST._IExpr _out6313;
                DCOMPUTF16._IOwnership _out6314;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6315;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6313, out _out6314, out _out6315);
                _12177_recursiveGen = _out6313;
                _12178_recOwned = _out6314;
                _12179_recIdents = _out6315;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12177_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12175_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12176_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6316;
                DCOMPUTF16._IOwnership _out6317;
                DCOMPUTF16.COMP.FromOwnership(r, _12178_recOwned, expectedOwnership, out _out6316, out _out6317);
                r = _out6316;
                resultingOwnership = _out6317;
                readIdents = _12179_recIdents;
              }
            } else if (_source656.is_MapBuilder) {
              DAST._IType _12180___mcc_h1046 = _source656.dtor_key;
              DAST._IType _12181___mcc_h1047 = _source656.dtor_value;
              {
                RAST._IType _12182_fromTpeGen;
                RAST._IType _out6318;
                _out6318 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12182_fromTpeGen = _out6318;
                RAST._IType _12183_toTpeGen;
                RAST._IType _out6319;
                _out6319 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12183_toTpeGen = _out6319;
                RAST._IExpr _12184_recursiveGen;
                DCOMPUTF16._IOwnership _12185_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12186_recIdents;
                RAST._IExpr _out6320;
                DCOMPUTF16._IOwnership _out6321;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6322;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6320, out _out6321, out _out6322);
                _12184_recursiveGen = _out6320;
                _12185_recOwned = _out6321;
                _12186_recIdents = _out6322;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12184_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12182_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12183_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6323;
                DCOMPUTF16._IOwnership _out6324;
                DCOMPUTF16.COMP.FromOwnership(r, _12185_recOwned, expectedOwnership, out _out6323, out _out6324);
                r = _out6323;
                resultingOwnership = _out6324;
                readIdents = _12186_recIdents;
              }
            } else if (_source656.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12187___mcc_h1050 = _source656.dtor_args;
              DAST._IType _12188___mcc_h1051 = _source656.dtor_result;
              {
                RAST._IType _12189_fromTpeGen;
                RAST._IType _out6325;
                _out6325 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12189_fromTpeGen = _out6325;
                RAST._IType _12190_toTpeGen;
                RAST._IType _out6326;
                _out6326 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12190_toTpeGen = _out6326;
                RAST._IExpr _12191_recursiveGen;
                DCOMPUTF16._IOwnership _12192_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12193_recIdents;
                RAST._IExpr _out6327;
                DCOMPUTF16._IOwnership _out6328;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6329;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6327, out _out6328, out _out6329);
                _12191_recursiveGen = _out6327;
                _12192_recOwned = _out6328;
                _12193_recIdents = _out6329;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12191_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12189_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12190_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6330;
                DCOMPUTF16._IOwnership _out6331;
                DCOMPUTF16.COMP.FromOwnership(r, _12192_recOwned, expectedOwnership, out _out6330, out _out6331);
                r = _out6330;
                resultingOwnership = _out6331;
                readIdents = _12193_recIdents;
              }
            } else if (_source656.is_Primitive) {
              DAST._IPrimitive _12194___mcc_h1054 = _source656.dtor_Primitive_a0;
              DAST._IPrimitive _source661 = _12194___mcc_h1054;
              if (_source661.is_Int) {
                {
                  RAST._IExpr _12195_recursiveGen;
                  DCOMPUTF16._IOwnership _12196___v99;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12197_recIdents;
                  RAST._IExpr _out6332;
                  DCOMPUTF16._IOwnership _out6333;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6334;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6332, out _out6333, out _out6334);
                  _12195_recursiveGen = _out6332;
                  _12196___v99 = _out6333;
                  _12197_recIdents = _out6334;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_12195_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out6335;
                  DCOMPUTF16._IOwnership _out6336;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6335, out _out6336);
                  r = _out6335;
                  resultingOwnership = _out6336;
                  readIdents = _12197_recIdents;
                }
              } else if (_source661.is_Real) {
                {
                  RAST._IType _12198_fromTpeGen;
                  RAST._IType _out6337;
                  _out6337 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12198_fromTpeGen = _out6337;
                  RAST._IType _12199_toTpeGen;
                  RAST._IType _out6338;
                  _out6338 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12199_toTpeGen = _out6338;
                  RAST._IExpr _12200_recursiveGen;
                  DCOMPUTF16._IOwnership _12201_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12202_recIdents;
                  RAST._IExpr _out6339;
                  DCOMPUTF16._IOwnership _out6340;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6341;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6339, out _out6340, out _out6341);
                  _12200_recursiveGen = _out6339;
                  _12201_recOwned = _out6340;
                  _12202_recIdents = _out6341;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12200_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12198_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12199_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6342;
                  DCOMPUTF16._IOwnership _out6343;
                  DCOMPUTF16.COMP.FromOwnership(r, _12201_recOwned, expectedOwnership, out _out6342, out _out6343);
                  r = _out6342;
                  resultingOwnership = _out6343;
                  readIdents = _12202_recIdents;
                }
              } else if (_source661.is_String) {
                {
                  RAST._IType _12203_fromTpeGen;
                  RAST._IType _out6344;
                  _out6344 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12203_fromTpeGen = _out6344;
                  RAST._IType _12204_toTpeGen;
                  RAST._IType _out6345;
                  _out6345 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12204_toTpeGen = _out6345;
                  RAST._IExpr _12205_recursiveGen;
                  DCOMPUTF16._IOwnership _12206_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12207_recIdents;
                  RAST._IExpr _out6346;
                  DCOMPUTF16._IOwnership _out6347;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6348;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6346, out _out6347, out _out6348);
                  _12205_recursiveGen = _out6346;
                  _12206_recOwned = _out6347;
                  _12207_recIdents = _out6348;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12205_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12203_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12204_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6349;
                  DCOMPUTF16._IOwnership _out6350;
                  DCOMPUTF16.COMP.FromOwnership(r, _12206_recOwned, expectedOwnership, out _out6349, out _out6350);
                  r = _out6349;
                  resultingOwnership = _out6350;
                  readIdents = _12207_recIdents;
                }
              } else if (_source661.is_Bool) {
                {
                  RAST._IType _12208_fromTpeGen;
                  RAST._IType _out6351;
                  _out6351 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12208_fromTpeGen = _out6351;
                  RAST._IType _12209_toTpeGen;
                  RAST._IType _out6352;
                  _out6352 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12209_toTpeGen = _out6352;
                  RAST._IExpr _12210_recursiveGen;
                  DCOMPUTF16._IOwnership _12211_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12212_recIdents;
                  RAST._IExpr _out6353;
                  DCOMPUTF16._IOwnership _out6354;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6355;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6353, out _out6354, out _out6355);
                  _12210_recursiveGen = _out6353;
                  _12211_recOwned = _out6354;
                  _12212_recIdents = _out6355;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12210_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12208_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12209_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6356;
                  DCOMPUTF16._IOwnership _out6357;
                  DCOMPUTF16.COMP.FromOwnership(r, _12211_recOwned, expectedOwnership, out _out6356, out _out6357);
                  r = _out6356;
                  resultingOwnership = _out6357;
                  readIdents = _12212_recIdents;
                }
              } else {
                {
                  RAST._IType _12213_fromTpeGen;
                  RAST._IType _out6358;
                  _out6358 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12213_fromTpeGen = _out6358;
                  RAST._IType _12214_toTpeGen;
                  RAST._IType _out6359;
                  _out6359 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12214_toTpeGen = _out6359;
                  RAST._IExpr _12215_recursiveGen;
                  DCOMPUTF16._IOwnership _12216_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12217_recIdents;
                  RAST._IExpr _out6360;
                  DCOMPUTF16._IOwnership _out6361;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6362;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6360, out _out6361, out _out6362);
                  _12215_recursiveGen = _out6360;
                  _12216_recOwned = _out6361;
                  _12217_recIdents = _out6362;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12215_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12213_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12214_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6363;
                  DCOMPUTF16._IOwnership _out6364;
                  DCOMPUTF16.COMP.FromOwnership(r, _12216_recOwned, expectedOwnership, out _out6363, out _out6364);
                  r = _out6363;
                  resultingOwnership = _out6364;
                  readIdents = _12217_recIdents;
                }
              }
            } else if (_source656.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12218___mcc_h1056 = _source656.dtor_Passthrough_a0;
              {
                RAST._IType _12219_fromTpeGen;
                RAST._IType _out6365;
                _out6365 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12219_fromTpeGen = _out6365;
                RAST._IType _12220_toTpeGen;
                RAST._IType _out6366;
                _out6366 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12220_toTpeGen = _out6366;
                RAST._IExpr _12221_recursiveGen;
                DCOMPUTF16._IOwnership _12222_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12223_recIdents;
                RAST._IExpr _out6367;
                DCOMPUTF16._IOwnership _out6368;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6369;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6367, out _out6368, out _out6369);
                _12221_recursiveGen = _out6367;
                _12222_recOwned = _out6368;
                _12223_recIdents = _out6369;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12221_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12219_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12220_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6370;
                DCOMPUTF16._IOwnership _out6371;
                DCOMPUTF16.COMP.FromOwnership(r, _12222_recOwned, expectedOwnership, out _out6370, out _out6371);
                r = _out6370;
                resultingOwnership = _out6371;
                readIdents = _12223_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12224___mcc_h1058 = _source656.dtor_TypeArg_a0;
              {
                RAST._IType _12225_fromTpeGen;
                RAST._IType _out6372;
                _out6372 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12225_fromTpeGen = _out6372;
                RAST._IType _12226_toTpeGen;
                RAST._IType _out6373;
                _out6373 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12226_toTpeGen = _out6373;
                RAST._IExpr _12227_recursiveGen;
                DCOMPUTF16._IOwnership _12228_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12229_recIdents;
                RAST._IExpr _out6374;
                DCOMPUTF16._IOwnership _out6375;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6376;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6374, out _out6375, out _out6376);
                _12227_recursiveGen = _out6374;
                _12228_recOwned = _out6375;
                _12229_recIdents = _out6376;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12227_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12225_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12226_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6377;
                DCOMPUTF16._IOwnership _out6378;
                DCOMPUTF16.COMP.FromOwnership(r, _12228_recOwned, expectedOwnership, out _out6377, out _out6378);
                r = _out6377;
                resultingOwnership = _out6378;
                readIdents = _12229_recIdents;
              }
            }
          } else if (_source649.is_String) {
            DAST._IType _source662 = _9615___mcc_h1;
            if (_source662.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12230___mcc_h1060 = _source662.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12231___mcc_h1061 = _source662.dtor_typeArgs;
              DAST._IResolvedType _12232___mcc_h1062 = _source662.dtor_resolved;
              DAST._IResolvedType _source663 = _12232___mcc_h1062;
              if (_source663.is_AllocatedDatatype) {
                DAST._IDatatypeType _12233___mcc_h1066 = _source663.dtor_datatypeType;
                {
                  RAST._IType _12234_fromTpeGen;
                  RAST._IType _out6379;
                  _out6379 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12234_fromTpeGen = _out6379;
                  RAST._IType _12235_toTpeGen;
                  RAST._IType _out6380;
                  _out6380 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12235_toTpeGen = _out6380;
                  RAST._IExpr _12236_recursiveGen;
                  DCOMPUTF16._IOwnership _12237_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12238_recIdents;
                  RAST._IExpr _out6381;
                  DCOMPUTF16._IOwnership _out6382;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6383;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6381, out _out6382, out _out6383);
                  _12236_recursiveGen = _out6381;
                  _12237_recOwned = _out6382;
                  _12238_recIdents = _out6383;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12236_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12234_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12235_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6384;
                  DCOMPUTF16._IOwnership _out6385;
                  DCOMPUTF16.COMP.FromOwnership(r, _12237_recOwned, expectedOwnership, out _out6384, out _out6385);
                  r = _out6384;
                  resultingOwnership = _out6385;
                  readIdents = _12238_recIdents;
                }
              } else if (_source663.is_Datatype) {
                DAST._IDatatypeType _12239___mcc_h1068 = _source663.dtor_datatypeType;
                {
                  RAST._IType _12240_fromTpeGen;
                  RAST._IType _out6386;
                  _out6386 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12240_fromTpeGen = _out6386;
                  RAST._IType _12241_toTpeGen;
                  RAST._IType _out6387;
                  _out6387 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12241_toTpeGen = _out6387;
                  RAST._IExpr _12242_recursiveGen;
                  DCOMPUTF16._IOwnership _12243_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12244_recIdents;
                  RAST._IExpr _out6388;
                  DCOMPUTF16._IOwnership _out6389;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6390;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6388, out _out6389, out _out6390);
                  _12242_recursiveGen = _out6388;
                  _12243_recOwned = _out6389;
                  _12244_recIdents = _out6390;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12242_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12240_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12241_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6391;
                  DCOMPUTF16._IOwnership _out6392;
                  DCOMPUTF16.COMP.FromOwnership(r, _12243_recOwned, expectedOwnership, out _out6391, out _out6392);
                  r = _out6391;
                  resultingOwnership = _out6392;
                  readIdents = _12244_recIdents;
                }
              } else if (_source663.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12245___mcc_h1070 = _source663.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12246___mcc_h1071 = _source663.dtor_attributes;
                {
                  RAST._IType _12247_fromTpeGen;
                  RAST._IType _out6393;
                  _out6393 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12247_fromTpeGen = _out6393;
                  RAST._IType _12248_toTpeGen;
                  RAST._IType _out6394;
                  _out6394 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12248_toTpeGen = _out6394;
                  RAST._IExpr _12249_recursiveGen;
                  DCOMPUTF16._IOwnership _12250_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12251_recIdents;
                  RAST._IExpr _out6395;
                  DCOMPUTF16._IOwnership _out6396;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6397;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6395, out _out6396, out _out6397);
                  _12249_recursiveGen = _out6395;
                  _12250_recOwned = _out6396;
                  _12251_recIdents = _out6397;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12249_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12247_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12248_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6398;
                  DCOMPUTF16._IOwnership _out6399;
                  DCOMPUTF16.COMP.FromOwnership(r, _12250_recOwned, expectedOwnership, out _out6398, out _out6399);
                  r = _out6398;
                  resultingOwnership = _out6399;
                  readIdents = _12251_recIdents;
                }
              } else {
                DAST._IType _12252___mcc_h1074 = _source663.dtor_baseType;
                DAST._INewtypeRange _12253___mcc_h1075 = _source663.dtor_range;
                bool _12254___mcc_h1076 = _source663.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12255___mcc_h1077 = _source663.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12256_attributes = _12255___mcc_h1077;
                bool _12257_erase = _12254___mcc_h1076;
                DAST._INewtypeRange _12258_range = _12253___mcc_h1075;
                DAST._IType _12259_b = _12252___mcc_h1074;
                {
                  Std.Wrappers._IOption<RAST._IType> _12260_nativeToType;
                  _12260_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12259_b, _12258_range);
                  if (object.Equals(_9609_fromTpe, _12259_b)) {
                    RAST._IExpr _12261_recursiveGen;
                    DCOMPUTF16._IOwnership _12262_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12263_recIdents;
                    RAST._IExpr _out6400;
                    DCOMPUTF16._IOwnership _out6401;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6402;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6400, out _out6401, out _out6402);
                    _12261_recursiveGen = _out6400;
                    _12262_recOwned = _out6401;
                    _12263_recIdents = _out6402;
                    readIdents = _12263_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source664 = _12260_nativeToType;
                    if (_source664.is_None) {
                      if (_12257_erase) {
                        r = _12261_recursiveGen;
                      } else {
                        RAST._IType _12264_rhsType;
                        RAST._IType _out6403;
                        _out6403 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _12264_rhsType = _out6403;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12264_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12261_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6404;
                      DCOMPUTF16._IOwnership _out6405;
                      DCOMPUTF16.COMP.FromOwnership(r, _12262_recOwned, expectedOwnership, out _out6404, out _out6405);
                      r = _out6404;
                      resultingOwnership = _out6405;
                    } else {
                      RAST._IType _12265___mcc_h2218 = _source664.dtor_value;
                      RAST._IType _12266_v = _12265___mcc_h2218;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12261_recursiveGen, RAST.Expr.create_ExprFromType(_12266_v)));
                      RAST._IExpr _out6406;
                      DCOMPUTF16._IOwnership _out6407;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6406, out _out6407);
                      r = _out6406;
                      resultingOwnership = _out6407;
                    }
                  } else {
                    if ((_12260_nativeToType).is_Some) {
                      DAST._IType _source665 = _9609_fromTpe;
                      if (_source665.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12267___mcc_h2219 = _source665.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12268___mcc_h2220 = _source665.dtor_typeArgs;
                        DAST._IResolvedType _12269___mcc_h2221 = _source665.dtor_resolved;
                        DAST._IResolvedType _source666 = _12269___mcc_h2221;
                        if (_source666.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12270___mcc_h2225 = _source666.dtor_datatypeType;
                        } else if (_source666.is_Datatype) {
                          DAST._IDatatypeType _12271___mcc_h2227 = _source666.dtor_datatypeType;
                        } else if (_source666.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12272___mcc_h2229 = _source666.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12273___mcc_h2230 = _source666.dtor_attributes;
                        } else {
                          DAST._IType _12274___mcc_h2233 = _source666.dtor_baseType;
                          DAST._INewtypeRange _12275___mcc_h2234 = _source666.dtor_range;
                          bool _12276___mcc_h2235 = _source666.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12277___mcc_h2236 = _source666.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12278_attributes0 = _12277___mcc_h2236;
                          bool _12279_erase0 = _12276___mcc_h2235;
                          DAST._INewtypeRange _12280_range0 = _12275___mcc_h2234;
                          DAST._IType _12281_b0 = _12274___mcc_h2233;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12282_nativeFromType;
                            _12282_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12281_b0, _12280_range0);
                            if ((_12282_nativeFromType).is_Some) {
                              RAST._IExpr _12283_recursiveGen;
                              DCOMPUTF16._IOwnership _12284_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12285_recIdents;
                              RAST._IExpr _out6408;
                              DCOMPUTF16._IOwnership _out6409;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6410;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6408, out _out6409, out _out6410);
                              _12283_recursiveGen = _out6408;
                              _12284_recOwned = _out6409;
                              _12285_recIdents = _out6410;
                              RAST._IExpr _out6411;
                              DCOMPUTF16._IOwnership _out6412;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12283_recursiveGen, (_12260_nativeToType).dtor_value), _12284_recOwned, expectedOwnership, out _out6411, out _out6412);
                              r = _out6411;
                              resultingOwnership = _out6412;
                              readIdents = _12285_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source665.is_Nullable) {
                        DAST._IType _12286___mcc_h2241 = _source665.dtor_Nullable_a0;
                      } else if (_source665.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12287___mcc_h2243 = _source665.dtor_Tuple_a0;
                      } else if (_source665.is_Array) {
                        DAST._IType _12288___mcc_h2245 = _source665.dtor_element;
                        BigInteger _12289___mcc_h2246 = _source665.dtor_dims;
                      } else if (_source665.is_Seq) {
                        DAST._IType _12290___mcc_h2249 = _source665.dtor_element;
                      } else if (_source665.is_Set) {
                        DAST._IType _12291___mcc_h2251 = _source665.dtor_element;
                      } else if (_source665.is_Multiset) {
                        DAST._IType _12292___mcc_h2253 = _source665.dtor_element;
                      } else if (_source665.is_Map) {
                        DAST._IType _12293___mcc_h2255 = _source665.dtor_key;
                        DAST._IType _12294___mcc_h2256 = _source665.dtor_value;
                      } else if (_source665.is_SetBuilder) {
                        DAST._IType _12295___mcc_h2259 = _source665.dtor_element;
                      } else if (_source665.is_MapBuilder) {
                        DAST._IType _12296___mcc_h2261 = _source665.dtor_key;
                        DAST._IType _12297___mcc_h2262 = _source665.dtor_value;
                      } else if (_source665.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12298___mcc_h2265 = _source665.dtor_args;
                        DAST._IType _12299___mcc_h2266 = _source665.dtor_result;
                      } else if (_source665.is_Primitive) {
                        DAST._IPrimitive _12300___mcc_h2269 = _source665.dtor_Primitive_a0;
                      } else if (_source665.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12301___mcc_h2271 = _source665.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12302___mcc_h2273 = _source665.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12303_recursiveGen;
                        DCOMPUTF16._IOwnership _12304_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12305_recIdents;
                        RAST._IExpr _out6413;
                        DCOMPUTF16._IOwnership _out6414;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6415;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6413, out _out6414, out _out6415);
                        _12303_recursiveGen = _out6413;
                        _12304_recOwned = _out6414;
                        _12305_recIdents = _out6415;
                        RAST._IExpr _out6416;
                        DCOMPUTF16._IOwnership _out6417;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12303_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12260_nativeToType).dtor_value), _12304_recOwned, expectedOwnership, out _out6416, out _out6417);
                        r = _out6416;
                        resultingOwnership = _out6417;
                        readIdents = _12305_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6418;
                    DCOMPUTF16._IOwnership _out6419;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6420;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _12259_b), _12259_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out6418, out _out6419, out _out6420);
                    r = _out6418;
                    resultingOwnership = _out6419;
                    readIdents = _out6420;
                  }
                }
              }
            } else if (_source662.is_Nullable) {
              DAST._IType _12306___mcc_h1082 = _source662.dtor_Nullable_a0;
              {
                RAST._IExpr _12307_recursiveGen;
                DCOMPUTF16._IOwnership _12308_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12309_recIdents;
                RAST._IExpr _out6421;
                DCOMPUTF16._IOwnership _out6422;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6423;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6421, out _out6422, out _out6423);
                _12307_recursiveGen = _out6421;
                _12308_recOwned = _out6422;
                _12309_recIdents = _out6423;
                r = _12307_recursiveGen;
                if (object.Equals(_12308_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6424;
                DCOMPUTF16._IOwnership _out6425;
                DCOMPUTF16.COMP.FromOwnership(r, _12308_recOwned, expectedOwnership, out _out6424, out _out6425);
                r = _out6424;
                resultingOwnership = _out6425;
                readIdents = _12309_recIdents;
              }
            } else if (_source662.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12310___mcc_h1084 = _source662.dtor_Tuple_a0;
              {
                RAST._IType _12311_fromTpeGen;
                RAST._IType _out6426;
                _out6426 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12311_fromTpeGen = _out6426;
                RAST._IType _12312_toTpeGen;
                RAST._IType _out6427;
                _out6427 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12312_toTpeGen = _out6427;
                RAST._IExpr _12313_recursiveGen;
                DCOMPUTF16._IOwnership _12314_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12315_recIdents;
                RAST._IExpr _out6428;
                DCOMPUTF16._IOwnership _out6429;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6430;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6428, out _out6429, out _out6430);
                _12313_recursiveGen = _out6428;
                _12314_recOwned = _out6429;
                _12315_recIdents = _out6430;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12313_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12311_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12312_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6431;
                DCOMPUTF16._IOwnership _out6432;
                DCOMPUTF16.COMP.FromOwnership(r, _12314_recOwned, expectedOwnership, out _out6431, out _out6432);
                r = _out6431;
                resultingOwnership = _out6432;
                readIdents = _12315_recIdents;
              }
            } else if (_source662.is_Array) {
              DAST._IType _12316___mcc_h1086 = _source662.dtor_element;
              BigInteger _12317___mcc_h1087 = _source662.dtor_dims;
              {
                RAST._IType _12318_fromTpeGen;
                RAST._IType _out6433;
                _out6433 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12318_fromTpeGen = _out6433;
                RAST._IType _12319_toTpeGen;
                RAST._IType _out6434;
                _out6434 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12319_toTpeGen = _out6434;
                RAST._IExpr _12320_recursiveGen;
                DCOMPUTF16._IOwnership _12321_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12322_recIdents;
                RAST._IExpr _out6435;
                DCOMPUTF16._IOwnership _out6436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6437;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6435, out _out6436, out _out6437);
                _12320_recursiveGen = _out6435;
                _12321_recOwned = _out6436;
                _12322_recIdents = _out6437;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12320_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12318_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12319_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6438;
                DCOMPUTF16._IOwnership _out6439;
                DCOMPUTF16.COMP.FromOwnership(r, _12321_recOwned, expectedOwnership, out _out6438, out _out6439);
                r = _out6438;
                resultingOwnership = _out6439;
                readIdents = _12322_recIdents;
              }
            } else if (_source662.is_Seq) {
              DAST._IType _12323___mcc_h1090 = _source662.dtor_element;
              {
                RAST._IType _12324_fromTpeGen;
                RAST._IType _out6440;
                _out6440 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12324_fromTpeGen = _out6440;
                RAST._IType _12325_toTpeGen;
                RAST._IType _out6441;
                _out6441 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12325_toTpeGen = _out6441;
                RAST._IExpr _12326_recursiveGen;
                DCOMPUTF16._IOwnership _12327_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12328_recIdents;
                RAST._IExpr _out6442;
                DCOMPUTF16._IOwnership _out6443;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6444;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6442, out _out6443, out _out6444);
                _12326_recursiveGen = _out6442;
                _12327_recOwned = _out6443;
                _12328_recIdents = _out6444;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12326_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12324_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12325_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6445;
                DCOMPUTF16._IOwnership _out6446;
                DCOMPUTF16.COMP.FromOwnership(r, _12327_recOwned, expectedOwnership, out _out6445, out _out6446);
                r = _out6445;
                resultingOwnership = _out6446;
                readIdents = _12328_recIdents;
              }
            } else if (_source662.is_Set) {
              DAST._IType _12329___mcc_h1092 = _source662.dtor_element;
              {
                RAST._IType _12330_fromTpeGen;
                RAST._IType _out6447;
                _out6447 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12330_fromTpeGen = _out6447;
                RAST._IType _12331_toTpeGen;
                RAST._IType _out6448;
                _out6448 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12331_toTpeGen = _out6448;
                RAST._IExpr _12332_recursiveGen;
                DCOMPUTF16._IOwnership _12333_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12334_recIdents;
                RAST._IExpr _out6449;
                DCOMPUTF16._IOwnership _out6450;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6451;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6449, out _out6450, out _out6451);
                _12332_recursiveGen = _out6449;
                _12333_recOwned = _out6450;
                _12334_recIdents = _out6451;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12332_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12330_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12331_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6452;
                DCOMPUTF16._IOwnership _out6453;
                DCOMPUTF16.COMP.FromOwnership(r, _12333_recOwned, expectedOwnership, out _out6452, out _out6453);
                r = _out6452;
                resultingOwnership = _out6453;
                readIdents = _12334_recIdents;
              }
            } else if (_source662.is_Multiset) {
              DAST._IType _12335___mcc_h1094 = _source662.dtor_element;
              {
                RAST._IType _12336_fromTpeGen;
                RAST._IType _out6454;
                _out6454 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12336_fromTpeGen = _out6454;
                RAST._IType _12337_toTpeGen;
                RAST._IType _out6455;
                _out6455 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12337_toTpeGen = _out6455;
                RAST._IExpr _12338_recursiveGen;
                DCOMPUTF16._IOwnership _12339_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12340_recIdents;
                RAST._IExpr _out6456;
                DCOMPUTF16._IOwnership _out6457;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6458;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6456, out _out6457, out _out6458);
                _12338_recursiveGen = _out6456;
                _12339_recOwned = _out6457;
                _12340_recIdents = _out6458;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12338_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12336_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12337_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6459;
                DCOMPUTF16._IOwnership _out6460;
                DCOMPUTF16.COMP.FromOwnership(r, _12339_recOwned, expectedOwnership, out _out6459, out _out6460);
                r = _out6459;
                resultingOwnership = _out6460;
                readIdents = _12340_recIdents;
              }
            } else if (_source662.is_Map) {
              DAST._IType _12341___mcc_h1096 = _source662.dtor_key;
              DAST._IType _12342___mcc_h1097 = _source662.dtor_value;
              {
                RAST._IType _12343_fromTpeGen;
                RAST._IType _out6461;
                _out6461 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12343_fromTpeGen = _out6461;
                RAST._IType _12344_toTpeGen;
                RAST._IType _out6462;
                _out6462 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12344_toTpeGen = _out6462;
                RAST._IExpr _12345_recursiveGen;
                DCOMPUTF16._IOwnership _12346_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12347_recIdents;
                RAST._IExpr _out6463;
                DCOMPUTF16._IOwnership _out6464;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6465;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6463, out _out6464, out _out6465);
                _12345_recursiveGen = _out6463;
                _12346_recOwned = _out6464;
                _12347_recIdents = _out6465;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12345_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12343_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12344_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6466;
                DCOMPUTF16._IOwnership _out6467;
                DCOMPUTF16.COMP.FromOwnership(r, _12346_recOwned, expectedOwnership, out _out6466, out _out6467);
                r = _out6466;
                resultingOwnership = _out6467;
                readIdents = _12347_recIdents;
              }
            } else if (_source662.is_SetBuilder) {
              DAST._IType _12348___mcc_h1100 = _source662.dtor_element;
              {
                RAST._IType _12349_fromTpeGen;
                RAST._IType _out6468;
                _out6468 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12349_fromTpeGen = _out6468;
                RAST._IType _12350_toTpeGen;
                RAST._IType _out6469;
                _out6469 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12350_toTpeGen = _out6469;
                RAST._IExpr _12351_recursiveGen;
                DCOMPUTF16._IOwnership _12352_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12353_recIdents;
                RAST._IExpr _out6470;
                DCOMPUTF16._IOwnership _out6471;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6472;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6470, out _out6471, out _out6472);
                _12351_recursiveGen = _out6470;
                _12352_recOwned = _out6471;
                _12353_recIdents = _out6472;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12351_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12349_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12350_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6473;
                DCOMPUTF16._IOwnership _out6474;
                DCOMPUTF16.COMP.FromOwnership(r, _12352_recOwned, expectedOwnership, out _out6473, out _out6474);
                r = _out6473;
                resultingOwnership = _out6474;
                readIdents = _12353_recIdents;
              }
            } else if (_source662.is_MapBuilder) {
              DAST._IType _12354___mcc_h1102 = _source662.dtor_key;
              DAST._IType _12355___mcc_h1103 = _source662.dtor_value;
              {
                RAST._IType _12356_fromTpeGen;
                RAST._IType _out6475;
                _out6475 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12356_fromTpeGen = _out6475;
                RAST._IType _12357_toTpeGen;
                RAST._IType _out6476;
                _out6476 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12357_toTpeGen = _out6476;
                RAST._IExpr _12358_recursiveGen;
                DCOMPUTF16._IOwnership _12359_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12360_recIdents;
                RAST._IExpr _out6477;
                DCOMPUTF16._IOwnership _out6478;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6479;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6477, out _out6478, out _out6479);
                _12358_recursiveGen = _out6477;
                _12359_recOwned = _out6478;
                _12360_recIdents = _out6479;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12358_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12356_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12357_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6480;
                DCOMPUTF16._IOwnership _out6481;
                DCOMPUTF16.COMP.FromOwnership(r, _12359_recOwned, expectedOwnership, out _out6480, out _out6481);
                r = _out6480;
                resultingOwnership = _out6481;
                readIdents = _12360_recIdents;
              }
            } else if (_source662.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12361___mcc_h1106 = _source662.dtor_args;
              DAST._IType _12362___mcc_h1107 = _source662.dtor_result;
              {
                RAST._IType _12363_fromTpeGen;
                RAST._IType _out6482;
                _out6482 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12363_fromTpeGen = _out6482;
                RAST._IType _12364_toTpeGen;
                RAST._IType _out6483;
                _out6483 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12364_toTpeGen = _out6483;
                RAST._IExpr _12365_recursiveGen;
                DCOMPUTF16._IOwnership _12366_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12367_recIdents;
                RAST._IExpr _out6484;
                DCOMPUTF16._IOwnership _out6485;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6486;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6484, out _out6485, out _out6486);
                _12365_recursiveGen = _out6484;
                _12366_recOwned = _out6485;
                _12367_recIdents = _out6486;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12365_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12363_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12364_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6487;
                DCOMPUTF16._IOwnership _out6488;
                DCOMPUTF16.COMP.FromOwnership(r, _12366_recOwned, expectedOwnership, out _out6487, out _out6488);
                r = _out6487;
                resultingOwnership = _out6488;
                readIdents = _12367_recIdents;
              }
            } else if (_source662.is_Primitive) {
              DAST._IPrimitive _12368___mcc_h1110 = _source662.dtor_Primitive_a0;
              {
                RAST._IType _12369_fromTpeGen;
                RAST._IType _out6489;
                _out6489 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12369_fromTpeGen = _out6489;
                RAST._IType _12370_toTpeGen;
                RAST._IType _out6490;
                _out6490 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12370_toTpeGen = _out6490;
                RAST._IExpr _12371_recursiveGen;
                DCOMPUTF16._IOwnership _12372_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12373_recIdents;
                RAST._IExpr _out6491;
                DCOMPUTF16._IOwnership _out6492;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6493;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6491, out _out6492, out _out6493);
                _12371_recursiveGen = _out6491;
                _12372_recOwned = _out6492;
                _12373_recIdents = _out6493;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12371_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12369_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12370_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6494;
                DCOMPUTF16._IOwnership _out6495;
                DCOMPUTF16.COMP.FromOwnership(r, _12372_recOwned, expectedOwnership, out _out6494, out _out6495);
                r = _out6494;
                resultingOwnership = _out6495;
                readIdents = _12373_recIdents;
              }
            } else if (_source662.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12374___mcc_h1112 = _source662.dtor_Passthrough_a0;
              {
                RAST._IType _12375_fromTpeGen;
                RAST._IType _out6496;
                _out6496 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12375_fromTpeGen = _out6496;
                RAST._IType _12376_toTpeGen;
                RAST._IType _out6497;
                _out6497 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12376_toTpeGen = _out6497;
                RAST._IExpr _12377_recursiveGen;
                DCOMPUTF16._IOwnership _12378_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12379_recIdents;
                RAST._IExpr _out6498;
                DCOMPUTF16._IOwnership _out6499;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6500;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6498, out _out6499, out _out6500);
                _12377_recursiveGen = _out6498;
                _12378_recOwned = _out6499;
                _12379_recIdents = _out6500;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12377_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12375_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12376_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6501;
                DCOMPUTF16._IOwnership _out6502;
                DCOMPUTF16.COMP.FromOwnership(r, _12378_recOwned, expectedOwnership, out _out6501, out _out6502);
                r = _out6501;
                resultingOwnership = _out6502;
                readIdents = _12379_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12380___mcc_h1114 = _source662.dtor_TypeArg_a0;
              {
                RAST._IType _12381_fromTpeGen;
                RAST._IType _out6503;
                _out6503 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12381_fromTpeGen = _out6503;
                RAST._IType _12382_toTpeGen;
                RAST._IType _out6504;
                _out6504 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12382_toTpeGen = _out6504;
                RAST._IExpr _12383_recursiveGen;
                DCOMPUTF16._IOwnership _12384_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12385_recIdents;
                RAST._IExpr _out6505;
                DCOMPUTF16._IOwnership _out6506;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6507;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6505, out _out6506, out _out6507);
                _12383_recursiveGen = _out6505;
                _12384_recOwned = _out6506;
                _12385_recIdents = _out6507;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12383_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12381_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12382_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6508;
                DCOMPUTF16._IOwnership _out6509;
                DCOMPUTF16.COMP.FromOwnership(r, _12384_recOwned, expectedOwnership, out _out6508, out _out6509);
                r = _out6508;
                resultingOwnership = _out6509;
                readIdents = _12385_recIdents;
              }
            }
          } else if (_source649.is_Bool) {
            DAST._IType _source667 = _9615___mcc_h1;
            if (_source667.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12386___mcc_h1116 = _source667.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12387___mcc_h1117 = _source667.dtor_typeArgs;
              DAST._IResolvedType _12388___mcc_h1118 = _source667.dtor_resolved;
              DAST._IResolvedType _source668 = _12388___mcc_h1118;
              if (_source668.is_AllocatedDatatype) {
                DAST._IDatatypeType _12389___mcc_h1122 = _source668.dtor_datatypeType;
                {
                  RAST._IType _12390_fromTpeGen;
                  RAST._IType _out6510;
                  _out6510 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12390_fromTpeGen = _out6510;
                  RAST._IType _12391_toTpeGen;
                  RAST._IType _out6511;
                  _out6511 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12391_toTpeGen = _out6511;
                  RAST._IExpr _12392_recursiveGen;
                  DCOMPUTF16._IOwnership _12393_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12394_recIdents;
                  RAST._IExpr _out6512;
                  DCOMPUTF16._IOwnership _out6513;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6514;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6512, out _out6513, out _out6514);
                  _12392_recursiveGen = _out6512;
                  _12393_recOwned = _out6513;
                  _12394_recIdents = _out6514;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12392_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12390_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12391_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6515;
                  DCOMPUTF16._IOwnership _out6516;
                  DCOMPUTF16.COMP.FromOwnership(r, _12393_recOwned, expectedOwnership, out _out6515, out _out6516);
                  r = _out6515;
                  resultingOwnership = _out6516;
                  readIdents = _12394_recIdents;
                }
              } else if (_source668.is_Datatype) {
                DAST._IDatatypeType _12395___mcc_h1124 = _source668.dtor_datatypeType;
                {
                  RAST._IType _12396_fromTpeGen;
                  RAST._IType _out6517;
                  _out6517 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12396_fromTpeGen = _out6517;
                  RAST._IType _12397_toTpeGen;
                  RAST._IType _out6518;
                  _out6518 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12397_toTpeGen = _out6518;
                  RAST._IExpr _12398_recursiveGen;
                  DCOMPUTF16._IOwnership _12399_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12400_recIdents;
                  RAST._IExpr _out6519;
                  DCOMPUTF16._IOwnership _out6520;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6521;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6519, out _out6520, out _out6521);
                  _12398_recursiveGen = _out6519;
                  _12399_recOwned = _out6520;
                  _12400_recIdents = _out6521;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12398_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12396_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12397_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6522;
                  DCOMPUTF16._IOwnership _out6523;
                  DCOMPUTF16.COMP.FromOwnership(r, _12399_recOwned, expectedOwnership, out _out6522, out _out6523);
                  r = _out6522;
                  resultingOwnership = _out6523;
                  readIdents = _12400_recIdents;
                }
              } else if (_source668.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12401___mcc_h1126 = _source668.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12402___mcc_h1127 = _source668.dtor_attributes;
                {
                  RAST._IType _12403_fromTpeGen;
                  RAST._IType _out6524;
                  _out6524 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12403_fromTpeGen = _out6524;
                  RAST._IType _12404_toTpeGen;
                  RAST._IType _out6525;
                  _out6525 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12404_toTpeGen = _out6525;
                  RAST._IExpr _12405_recursiveGen;
                  DCOMPUTF16._IOwnership _12406_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12407_recIdents;
                  RAST._IExpr _out6526;
                  DCOMPUTF16._IOwnership _out6527;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6528;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6526, out _out6527, out _out6528);
                  _12405_recursiveGen = _out6526;
                  _12406_recOwned = _out6527;
                  _12407_recIdents = _out6528;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12405_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12403_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12404_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6529;
                  DCOMPUTF16._IOwnership _out6530;
                  DCOMPUTF16.COMP.FromOwnership(r, _12406_recOwned, expectedOwnership, out _out6529, out _out6530);
                  r = _out6529;
                  resultingOwnership = _out6530;
                  readIdents = _12407_recIdents;
                }
              } else {
                DAST._IType _12408___mcc_h1130 = _source668.dtor_baseType;
                DAST._INewtypeRange _12409___mcc_h1131 = _source668.dtor_range;
                bool _12410___mcc_h1132 = _source668.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12411___mcc_h1133 = _source668.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12412_attributes = _12411___mcc_h1133;
                bool _12413_erase = _12410___mcc_h1132;
                DAST._INewtypeRange _12414_range = _12409___mcc_h1131;
                DAST._IType _12415_b = _12408___mcc_h1130;
                {
                  Std.Wrappers._IOption<RAST._IType> _12416_nativeToType;
                  _12416_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12415_b, _12414_range);
                  if (object.Equals(_9609_fromTpe, _12415_b)) {
                    RAST._IExpr _12417_recursiveGen;
                    DCOMPUTF16._IOwnership _12418_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12419_recIdents;
                    RAST._IExpr _out6531;
                    DCOMPUTF16._IOwnership _out6532;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6533;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6531, out _out6532, out _out6533);
                    _12417_recursiveGen = _out6531;
                    _12418_recOwned = _out6532;
                    _12419_recIdents = _out6533;
                    readIdents = _12419_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source669 = _12416_nativeToType;
                    if (_source669.is_None) {
                      if (_12413_erase) {
                        r = _12417_recursiveGen;
                      } else {
                        RAST._IType _12420_rhsType;
                        RAST._IType _out6534;
                        _out6534 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _12420_rhsType = _out6534;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12420_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12417_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6535;
                      DCOMPUTF16._IOwnership _out6536;
                      DCOMPUTF16.COMP.FromOwnership(r, _12418_recOwned, expectedOwnership, out _out6535, out _out6536);
                      r = _out6535;
                      resultingOwnership = _out6536;
                    } else {
                      RAST._IType _12421___mcc_h2275 = _source669.dtor_value;
                      RAST._IType _12422_v = _12421___mcc_h2275;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12417_recursiveGen, RAST.Expr.create_ExprFromType(_12422_v)));
                      RAST._IExpr _out6537;
                      DCOMPUTF16._IOwnership _out6538;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6537, out _out6538);
                      r = _out6537;
                      resultingOwnership = _out6538;
                    }
                  } else {
                    if ((_12416_nativeToType).is_Some) {
                      DAST._IType _source670 = _9609_fromTpe;
                      if (_source670.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12423___mcc_h2276 = _source670.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12424___mcc_h2277 = _source670.dtor_typeArgs;
                        DAST._IResolvedType _12425___mcc_h2278 = _source670.dtor_resolved;
                        DAST._IResolvedType _source671 = _12425___mcc_h2278;
                        if (_source671.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12426___mcc_h2282 = _source671.dtor_datatypeType;
                        } else if (_source671.is_Datatype) {
                          DAST._IDatatypeType _12427___mcc_h2284 = _source671.dtor_datatypeType;
                        } else if (_source671.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12428___mcc_h2286 = _source671.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12429___mcc_h2287 = _source671.dtor_attributes;
                        } else {
                          DAST._IType _12430___mcc_h2290 = _source671.dtor_baseType;
                          DAST._INewtypeRange _12431___mcc_h2291 = _source671.dtor_range;
                          bool _12432___mcc_h2292 = _source671.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12433___mcc_h2293 = _source671.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12434_attributes0 = _12433___mcc_h2293;
                          bool _12435_erase0 = _12432___mcc_h2292;
                          DAST._INewtypeRange _12436_range0 = _12431___mcc_h2291;
                          DAST._IType _12437_b0 = _12430___mcc_h2290;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12438_nativeFromType;
                            _12438_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12437_b0, _12436_range0);
                            if ((_12438_nativeFromType).is_Some) {
                              RAST._IExpr _12439_recursiveGen;
                              DCOMPUTF16._IOwnership _12440_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12441_recIdents;
                              RAST._IExpr _out6539;
                              DCOMPUTF16._IOwnership _out6540;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6541;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6539, out _out6540, out _out6541);
                              _12439_recursiveGen = _out6539;
                              _12440_recOwned = _out6540;
                              _12441_recIdents = _out6541;
                              RAST._IExpr _out6542;
                              DCOMPUTF16._IOwnership _out6543;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12439_recursiveGen, (_12416_nativeToType).dtor_value), _12440_recOwned, expectedOwnership, out _out6542, out _out6543);
                              r = _out6542;
                              resultingOwnership = _out6543;
                              readIdents = _12441_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source670.is_Nullable) {
                        DAST._IType _12442___mcc_h2298 = _source670.dtor_Nullable_a0;
                      } else if (_source670.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12443___mcc_h2300 = _source670.dtor_Tuple_a0;
                      } else if (_source670.is_Array) {
                        DAST._IType _12444___mcc_h2302 = _source670.dtor_element;
                        BigInteger _12445___mcc_h2303 = _source670.dtor_dims;
                      } else if (_source670.is_Seq) {
                        DAST._IType _12446___mcc_h2306 = _source670.dtor_element;
                      } else if (_source670.is_Set) {
                        DAST._IType _12447___mcc_h2308 = _source670.dtor_element;
                      } else if (_source670.is_Multiset) {
                        DAST._IType _12448___mcc_h2310 = _source670.dtor_element;
                      } else if (_source670.is_Map) {
                        DAST._IType _12449___mcc_h2312 = _source670.dtor_key;
                        DAST._IType _12450___mcc_h2313 = _source670.dtor_value;
                      } else if (_source670.is_SetBuilder) {
                        DAST._IType _12451___mcc_h2316 = _source670.dtor_element;
                      } else if (_source670.is_MapBuilder) {
                        DAST._IType _12452___mcc_h2318 = _source670.dtor_key;
                        DAST._IType _12453___mcc_h2319 = _source670.dtor_value;
                      } else if (_source670.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12454___mcc_h2322 = _source670.dtor_args;
                        DAST._IType _12455___mcc_h2323 = _source670.dtor_result;
                      } else if (_source670.is_Primitive) {
                        DAST._IPrimitive _12456___mcc_h2326 = _source670.dtor_Primitive_a0;
                      } else if (_source670.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12457___mcc_h2328 = _source670.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12458___mcc_h2330 = _source670.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12459_recursiveGen;
                        DCOMPUTF16._IOwnership _12460_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12461_recIdents;
                        RAST._IExpr _out6544;
                        DCOMPUTF16._IOwnership _out6545;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6546;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6544, out _out6545, out _out6546);
                        _12459_recursiveGen = _out6544;
                        _12460_recOwned = _out6545;
                        _12461_recIdents = _out6546;
                        RAST._IExpr _out6547;
                        DCOMPUTF16._IOwnership _out6548;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12459_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12416_nativeToType).dtor_value), _12460_recOwned, expectedOwnership, out _out6547, out _out6548);
                        r = _out6547;
                        resultingOwnership = _out6548;
                        readIdents = _12461_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6549;
                    DCOMPUTF16._IOwnership _out6550;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6551;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _12415_b), _12415_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out6549, out _out6550, out _out6551);
                    r = _out6549;
                    resultingOwnership = _out6550;
                    readIdents = _out6551;
                  }
                }
              }
            } else if (_source667.is_Nullable) {
              DAST._IType _12462___mcc_h1138 = _source667.dtor_Nullable_a0;
              {
                RAST._IExpr _12463_recursiveGen;
                DCOMPUTF16._IOwnership _12464_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12465_recIdents;
                RAST._IExpr _out6552;
                DCOMPUTF16._IOwnership _out6553;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6554;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6552, out _out6553, out _out6554);
                _12463_recursiveGen = _out6552;
                _12464_recOwned = _out6553;
                _12465_recIdents = _out6554;
                r = _12463_recursiveGen;
                if (object.Equals(_12464_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6555;
                DCOMPUTF16._IOwnership _out6556;
                DCOMPUTF16.COMP.FromOwnership(r, _12464_recOwned, expectedOwnership, out _out6555, out _out6556);
                r = _out6555;
                resultingOwnership = _out6556;
                readIdents = _12465_recIdents;
              }
            } else if (_source667.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12466___mcc_h1140 = _source667.dtor_Tuple_a0;
              {
                RAST._IType _12467_fromTpeGen;
                RAST._IType _out6557;
                _out6557 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12467_fromTpeGen = _out6557;
                RAST._IType _12468_toTpeGen;
                RAST._IType _out6558;
                _out6558 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12468_toTpeGen = _out6558;
                RAST._IExpr _12469_recursiveGen;
                DCOMPUTF16._IOwnership _12470_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12471_recIdents;
                RAST._IExpr _out6559;
                DCOMPUTF16._IOwnership _out6560;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6561;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6559, out _out6560, out _out6561);
                _12469_recursiveGen = _out6559;
                _12470_recOwned = _out6560;
                _12471_recIdents = _out6561;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12469_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12467_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12468_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6562;
                DCOMPUTF16._IOwnership _out6563;
                DCOMPUTF16.COMP.FromOwnership(r, _12470_recOwned, expectedOwnership, out _out6562, out _out6563);
                r = _out6562;
                resultingOwnership = _out6563;
                readIdents = _12471_recIdents;
              }
            } else if (_source667.is_Array) {
              DAST._IType _12472___mcc_h1142 = _source667.dtor_element;
              BigInteger _12473___mcc_h1143 = _source667.dtor_dims;
              {
                RAST._IType _12474_fromTpeGen;
                RAST._IType _out6564;
                _out6564 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12474_fromTpeGen = _out6564;
                RAST._IType _12475_toTpeGen;
                RAST._IType _out6565;
                _out6565 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12475_toTpeGen = _out6565;
                RAST._IExpr _12476_recursiveGen;
                DCOMPUTF16._IOwnership _12477_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12478_recIdents;
                RAST._IExpr _out6566;
                DCOMPUTF16._IOwnership _out6567;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6568;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6566, out _out6567, out _out6568);
                _12476_recursiveGen = _out6566;
                _12477_recOwned = _out6567;
                _12478_recIdents = _out6568;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12476_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12474_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12475_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6569;
                DCOMPUTF16._IOwnership _out6570;
                DCOMPUTF16.COMP.FromOwnership(r, _12477_recOwned, expectedOwnership, out _out6569, out _out6570);
                r = _out6569;
                resultingOwnership = _out6570;
                readIdents = _12478_recIdents;
              }
            } else if (_source667.is_Seq) {
              DAST._IType _12479___mcc_h1146 = _source667.dtor_element;
              {
                RAST._IType _12480_fromTpeGen;
                RAST._IType _out6571;
                _out6571 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12480_fromTpeGen = _out6571;
                RAST._IType _12481_toTpeGen;
                RAST._IType _out6572;
                _out6572 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12481_toTpeGen = _out6572;
                RAST._IExpr _12482_recursiveGen;
                DCOMPUTF16._IOwnership _12483_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12484_recIdents;
                RAST._IExpr _out6573;
                DCOMPUTF16._IOwnership _out6574;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6575;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6573, out _out6574, out _out6575);
                _12482_recursiveGen = _out6573;
                _12483_recOwned = _out6574;
                _12484_recIdents = _out6575;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12482_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12480_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12481_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6576;
                DCOMPUTF16._IOwnership _out6577;
                DCOMPUTF16.COMP.FromOwnership(r, _12483_recOwned, expectedOwnership, out _out6576, out _out6577);
                r = _out6576;
                resultingOwnership = _out6577;
                readIdents = _12484_recIdents;
              }
            } else if (_source667.is_Set) {
              DAST._IType _12485___mcc_h1148 = _source667.dtor_element;
              {
                RAST._IType _12486_fromTpeGen;
                RAST._IType _out6578;
                _out6578 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12486_fromTpeGen = _out6578;
                RAST._IType _12487_toTpeGen;
                RAST._IType _out6579;
                _out6579 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12487_toTpeGen = _out6579;
                RAST._IExpr _12488_recursiveGen;
                DCOMPUTF16._IOwnership _12489_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12490_recIdents;
                RAST._IExpr _out6580;
                DCOMPUTF16._IOwnership _out6581;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6582;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6580, out _out6581, out _out6582);
                _12488_recursiveGen = _out6580;
                _12489_recOwned = _out6581;
                _12490_recIdents = _out6582;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12488_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12486_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12487_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6583;
                DCOMPUTF16._IOwnership _out6584;
                DCOMPUTF16.COMP.FromOwnership(r, _12489_recOwned, expectedOwnership, out _out6583, out _out6584);
                r = _out6583;
                resultingOwnership = _out6584;
                readIdents = _12490_recIdents;
              }
            } else if (_source667.is_Multiset) {
              DAST._IType _12491___mcc_h1150 = _source667.dtor_element;
              {
                RAST._IType _12492_fromTpeGen;
                RAST._IType _out6585;
                _out6585 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12492_fromTpeGen = _out6585;
                RAST._IType _12493_toTpeGen;
                RAST._IType _out6586;
                _out6586 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12493_toTpeGen = _out6586;
                RAST._IExpr _12494_recursiveGen;
                DCOMPUTF16._IOwnership _12495_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12496_recIdents;
                RAST._IExpr _out6587;
                DCOMPUTF16._IOwnership _out6588;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6589;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6587, out _out6588, out _out6589);
                _12494_recursiveGen = _out6587;
                _12495_recOwned = _out6588;
                _12496_recIdents = _out6589;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12494_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12492_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12493_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6590;
                DCOMPUTF16._IOwnership _out6591;
                DCOMPUTF16.COMP.FromOwnership(r, _12495_recOwned, expectedOwnership, out _out6590, out _out6591);
                r = _out6590;
                resultingOwnership = _out6591;
                readIdents = _12496_recIdents;
              }
            } else if (_source667.is_Map) {
              DAST._IType _12497___mcc_h1152 = _source667.dtor_key;
              DAST._IType _12498___mcc_h1153 = _source667.dtor_value;
              {
                RAST._IType _12499_fromTpeGen;
                RAST._IType _out6592;
                _out6592 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12499_fromTpeGen = _out6592;
                RAST._IType _12500_toTpeGen;
                RAST._IType _out6593;
                _out6593 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12500_toTpeGen = _out6593;
                RAST._IExpr _12501_recursiveGen;
                DCOMPUTF16._IOwnership _12502_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12503_recIdents;
                RAST._IExpr _out6594;
                DCOMPUTF16._IOwnership _out6595;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6596;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6594, out _out6595, out _out6596);
                _12501_recursiveGen = _out6594;
                _12502_recOwned = _out6595;
                _12503_recIdents = _out6596;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12501_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12499_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12500_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6597;
                DCOMPUTF16._IOwnership _out6598;
                DCOMPUTF16.COMP.FromOwnership(r, _12502_recOwned, expectedOwnership, out _out6597, out _out6598);
                r = _out6597;
                resultingOwnership = _out6598;
                readIdents = _12503_recIdents;
              }
            } else if (_source667.is_SetBuilder) {
              DAST._IType _12504___mcc_h1156 = _source667.dtor_element;
              {
                RAST._IType _12505_fromTpeGen;
                RAST._IType _out6599;
                _out6599 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12505_fromTpeGen = _out6599;
                RAST._IType _12506_toTpeGen;
                RAST._IType _out6600;
                _out6600 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12506_toTpeGen = _out6600;
                RAST._IExpr _12507_recursiveGen;
                DCOMPUTF16._IOwnership _12508_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12509_recIdents;
                RAST._IExpr _out6601;
                DCOMPUTF16._IOwnership _out6602;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6603;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6601, out _out6602, out _out6603);
                _12507_recursiveGen = _out6601;
                _12508_recOwned = _out6602;
                _12509_recIdents = _out6603;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12507_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12505_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12506_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6604;
                DCOMPUTF16._IOwnership _out6605;
                DCOMPUTF16.COMP.FromOwnership(r, _12508_recOwned, expectedOwnership, out _out6604, out _out6605);
                r = _out6604;
                resultingOwnership = _out6605;
                readIdents = _12509_recIdents;
              }
            } else if (_source667.is_MapBuilder) {
              DAST._IType _12510___mcc_h1158 = _source667.dtor_key;
              DAST._IType _12511___mcc_h1159 = _source667.dtor_value;
              {
                RAST._IType _12512_fromTpeGen;
                RAST._IType _out6606;
                _out6606 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12512_fromTpeGen = _out6606;
                RAST._IType _12513_toTpeGen;
                RAST._IType _out6607;
                _out6607 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12513_toTpeGen = _out6607;
                RAST._IExpr _12514_recursiveGen;
                DCOMPUTF16._IOwnership _12515_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12516_recIdents;
                RAST._IExpr _out6608;
                DCOMPUTF16._IOwnership _out6609;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6610;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6608, out _out6609, out _out6610);
                _12514_recursiveGen = _out6608;
                _12515_recOwned = _out6609;
                _12516_recIdents = _out6610;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12514_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12512_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12513_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6611;
                DCOMPUTF16._IOwnership _out6612;
                DCOMPUTF16.COMP.FromOwnership(r, _12515_recOwned, expectedOwnership, out _out6611, out _out6612);
                r = _out6611;
                resultingOwnership = _out6612;
                readIdents = _12516_recIdents;
              }
            } else if (_source667.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12517___mcc_h1162 = _source667.dtor_args;
              DAST._IType _12518___mcc_h1163 = _source667.dtor_result;
              {
                RAST._IType _12519_fromTpeGen;
                RAST._IType _out6613;
                _out6613 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12519_fromTpeGen = _out6613;
                RAST._IType _12520_toTpeGen;
                RAST._IType _out6614;
                _out6614 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12520_toTpeGen = _out6614;
                RAST._IExpr _12521_recursiveGen;
                DCOMPUTF16._IOwnership _12522_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12523_recIdents;
                RAST._IExpr _out6615;
                DCOMPUTF16._IOwnership _out6616;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6617;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6615, out _out6616, out _out6617);
                _12521_recursiveGen = _out6615;
                _12522_recOwned = _out6616;
                _12523_recIdents = _out6617;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12521_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12519_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12520_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6618;
                DCOMPUTF16._IOwnership _out6619;
                DCOMPUTF16.COMP.FromOwnership(r, _12522_recOwned, expectedOwnership, out _out6618, out _out6619);
                r = _out6618;
                resultingOwnership = _out6619;
                readIdents = _12523_recIdents;
              }
            } else if (_source667.is_Primitive) {
              DAST._IPrimitive _12524___mcc_h1166 = _source667.dtor_Primitive_a0;
              {
                RAST._IType _12525_fromTpeGen;
                RAST._IType _out6620;
                _out6620 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12525_fromTpeGen = _out6620;
                RAST._IType _12526_toTpeGen;
                RAST._IType _out6621;
                _out6621 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12526_toTpeGen = _out6621;
                RAST._IExpr _12527_recursiveGen;
                DCOMPUTF16._IOwnership _12528_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12529_recIdents;
                RAST._IExpr _out6622;
                DCOMPUTF16._IOwnership _out6623;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6624;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6622, out _out6623, out _out6624);
                _12527_recursiveGen = _out6622;
                _12528_recOwned = _out6623;
                _12529_recIdents = _out6624;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12527_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12525_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12526_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6625;
                DCOMPUTF16._IOwnership _out6626;
                DCOMPUTF16.COMP.FromOwnership(r, _12528_recOwned, expectedOwnership, out _out6625, out _out6626);
                r = _out6625;
                resultingOwnership = _out6626;
                readIdents = _12529_recIdents;
              }
            } else if (_source667.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12530___mcc_h1168 = _source667.dtor_Passthrough_a0;
              {
                RAST._IType _12531_fromTpeGen;
                RAST._IType _out6627;
                _out6627 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12531_fromTpeGen = _out6627;
                RAST._IType _12532_toTpeGen;
                RAST._IType _out6628;
                _out6628 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12532_toTpeGen = _out6628;
                RAST._IExpr _12533_recursiveGen;
                DCOMPUTF16._IOwnership _12534_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12535_recIdents;
                RAST._IExpr _out6629;
                DCOMPUTF16._IOwnership _out6630;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6631;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6629, out _out6630, out _out6631);
                _12533_recursiveGen = _out6629;
                _12534_recOwned = _out6630;
                _12535_recIdents = _out6631;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12533_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12531_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12532_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6632;
                DCOMPUTF16._IOwnership _out6633;
                DCOMPUTF16.COMP.FromOwnership(r, _12534_recOwned, expectedOwnership, out _out6632, out _out6633);
                r = _out6632;
                resultingOwnership = _out6633;
                readIdents = _12535_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12536___mcc_h1170 = _source667.dtor_TypeArg_a0;
              {
                RAST._IType _12537_fromTpeGen;
                RAST._IType _out6634;
                _out6634 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12537_fromTpeGen = _out6634;
                RAST._IType _12538_toTpeGen;
                RAST._IType _out6635;
                _out6635 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12538_toTpeGen = _out6635;
                RAST._IExpr _12539_recursiveGen;
                DCOMPUTF16._IOwnership _12540_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12541_recIdents;
                RAST._IExpr _out6636;
                DCOMPUTF16._IOwnership _out6637;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6638;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6636, out _out6637, out _out6638);
                _12539_recursiveGen = _out6636;
                _12540_recOwned = _out6637;
                _12541_recIdents = _out6638;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12539_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12537_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12538_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6639;
                DCOMPUTF16._IOwnership _out6640;
                DCOMPUTF16.COMP.FromOwnership(r, _12540_recOwned, expectedOwnership, out _out6639, out _out6640);
                r = _out6639;
                resultingOwnership = _out6640;
                readIdents = _12541_recIdents;
              }
            }
          } else {
            DAST._IType _source672 = _9615___mcc_h1;
            if (_source672.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12542___mcc_h1172 = _source672.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _12543___mcc_h1173 = _source672.dtor_typeArgs;
              DAST._IResolvedType _12544___mcc_h1174 = _source672.dtor_resolved;
              DAST._IResolvedType _source673 = _12544___mcc_h1174;
              if (_source673.is_AllocatedDatatype) {
                DAST._IDatatypeType _12545___mcc_h1178 = _source673.dtor_datatypeType;
                {
                  RAST._IType _12546_fromTpeGen;
                  RAST._IType _out6641;
                  _out6641 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12546_fromTpeGen = _out6641;
                  RAST._IType _12547_toTpeGen;
                  RAST._IType _out6642;
                  _out6642 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12547_toTpeGen = _out6642;
                  RAST._IExpr _12548_recursiveGen;
                  DCOMPUTF16._IOwnership _12549_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12550_recIdents;
                  RAST._IExpr _out6643;
                  DCOMPUTF16._IOwnership _out6644;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6645;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6643, out _out6644, out _out6645);
                  _12548_recursiveGen = _out6643;
                  _12549_recOwned = _out6644;
                  _12550_recIdents = _out6645;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12548_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12546_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12547_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6646;
                  DCOMPUTF16._IOwnership _out6647;
                  DCOMPUTF16.COMP.FromOwnership(r, _12549_recOwned, expectedOwnership, out _out6646, out _out6647);
                  r = _out6646;
                  resultingOwnership = _out6647;
                  readIdents = _12550_recIdents;
                }
              } else if (_source673.is_Datatype) {
                DAST._IDatatypeType _12551___mcc_h1180 = _source673.dtor_datatypeType;
                {
                  RAST._IType _12552_fromTpeGen;
                  RAST._IType _out6648;
                  _out6648 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12552_fromTpeGen = _out6648;
                  RAST._IType _12553_toTpeGen;
                  RAST._IType _out6649;
                  _out6649 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12553_toTpeGen = _out6649;
                  RAST._IExpr _12554_recursiveGen;
                  DCOMPUTF16._IOwnership _12555_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12556_recIdents;
                  RAST._IExpr _out6650;
                  DCOMPUTF16._IOwnership _out6651;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6652;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6650, out _out6651, out _out6652);
                  _12554_recursiveGen = _out6650;
                  _12555_recOwned = _out6651;
                  _12556_recIdents = _out6652;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12554_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12552_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12553_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6653;
                  DCOMPUTF16._IOwnership _out6654;
                  DCOMPUTF16.COMP.FromOwnership(r, _12555_recOwned, expectedOwnership, out _out6653, out _out6654);
                  r = _out6653;
                  resultingOwnership = _out6654;
                  readIdents = _12556_recIdents;
                }
              } else if (_source673.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12557___mcc_h1182 = _source673.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _12558___mcc_h1183 = _source673.dtor_attributes;
                {
                  RAST._IType _12559_fromTpeGen;
                  RAST._IType _out6655;
                  _out6655 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12559_fromTpeGen = _out6655;
                  RAST._IType _12560_toTpeGen;
                  RAST._IType _out6656;
                  _out6656 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12560_toTpeGen = _out6656;
                  RAST._IExpr _12561_recursiveGen;
                  DCOMPUTF16._IOwnership _12562_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12563_recIdents;
                  RAST._IExpr _out6657;
                  DCOMPUTF16._IOwnership _out6658;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6659;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6657, out _out6658, out _out6659);
                  _12561_recursiveGen = _out6657;
                  _12562_recOwned = _out6658;
                  _12563_recIdents = _out6659;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12561_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12559_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12560_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6660;
                  DCOMPUTF16._IOwnership _out6661;
                  DCOMPUTF16.COMP.FromOwnership(r, _12562_recOwned, expectedOwnership, out _out6660, out _out6661);
                  r = _out6660;
                  resultingOwnership = _out6661;
                  readIdents = _12563_recIdents;
                }
              } else {
                DAST._IType _12564___mcc_h1186 = _source673.dtor_baseType;
                DAST._INewtypeRange _12565___mcc_h1187 = _source673.dtor_range;
                bool _12566___mcc_h1188 = _source673.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _12567___mcc_h1189 = _source673.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _12568_attributes = _12567___mcc_h1189;
                bool _12569_erase = _12566___mcc_h1188;
                DAST._INewtypeRange _12570_range = _12565___mcc_h1187;
                DAST._IType _12571_b = _12564___mcc_h1186;
                {
                  Std.Wrappers._IOption<RAST._IType> _12572_nativeToType;
                  _12572_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12571_b, _12570_range);
                  if (object.Equals(_9609_fromTpe, _12571_b)) {
                    RAST._IExpr _12573_recursiveGen;
                    DCOMPUTF16._IOwnership _12574_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12575_recIdents;
                    RAST._IExpr _out6662;
                    DCOMPUTF16._IOwnership _out6663;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6664;
                    DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6662, out _out6663, out _out6664);
                    _12573_recursiveGen = _out6662;
                    _12574_recOwned = _out6663;
                    _12575_recIdents = _out6664;
                    readIdents = _12575_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source674 = _12572_nativeToType;
                    if (_source674.is_None) {
                      if (_12569_erase) {
                        r = _12573_recursiveGen;
                      } else {
                        RAST._IType _12576_rhsType;
                        RAST._IType _out6665;
                        _out6665 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                        _12576_rhsType = _out6665;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12576_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12573_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6666;
                      DCOMPUTF16._IOwnership _out6667;
                      DCOMPUTF16.COMP.FromOwnership(r, _12574_recOwned, expectedOwnership, out _out6666, out _out6667);
                      r = _out6666;
                      resultingOwnership = _out6667;
                    } else {
                      RAST._IType _12577___mcc_h2332 = _source674.dtor_value;
                      RAST._IType _12578_v = _12577___mcc_h2332;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12573_recursiveGen, RAST.Expr.create_ExprFromType(_12578_v)));
                      RAST._IExpr _out6668;
                      DCOMPUTF16._IOwnership _out6669;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6668, out _out6669);
                      r = _out6668;
                      resultingOwnership = _out6669;
                    }
                  } else {
                    if ((_12572_nativeToType).is_Some) {
                      DAST._IType _source675 = _9609_fromTpe;
                      if (_source675.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12579___mcc_h2333 = _source675.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _12580___mcc_h2334 = _source675.dtor_typeArgs;
                        DAST._IResolvedType _12581___mcc_h2335 = _source675.dtor_resolved;
                        DAST._IResolvedType _source676 = _12581___mcc_h2335;
                        if (_source676.is_AllocatedDatatype) {
                          DAST._IDatatypeType _12582___mcc_h2339 = _source676.dtor_datatypeType;
                        } else if (_source676.is_Datatype) {
                          DAST._IDatatypeType _12583___mcc_h2341 = _source676.dtor_datatypeType;
                        } else if (_source676.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12584___mcc_h2343 = _source676.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _12585___mcc_h2344 = _source676.dtor_attributes;
                        } else {
                          DAST._IType _12586___mcc_h2347 = _source676.dtor_baseType;
                          DAST._INewtypeRange _12587___mcc_h2348 = _source676.dtor_range;
                          bool _12588___mcc_h2349 = _source676.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _12589___mcc_h2350 = _source676.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _12590_attributes0 = _12589___mcc_h2350;
                          bool _12591_erase0 = _12588___mcc_h2349;
                          DAST._INewtypeRange _12592_range0 = _12587___mcc_h2348;
                          DAST._IType _12593_b0 = _12586___mcc_h2347;
                          {
                            Std.Wrappers._IOption<RAST._IType> _12594_nativeFromType;
                            _12594_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12593_b0, _12592_range0);
                            if ((_12594_nativeFromType).is_Some) {
                              RAST._IExpr _12595_recursiveGen;
                              DCOMPUTF16._IOwnership _12596_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12597_recIdents;
                              RAST._IExpr _out6670;
                              DCOMPUTF16._IOwnership _out6671;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6672;
                              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6670, out _out6671, out _out6672);
                              _12595_recursiveGen = _out6670;
                              _12596_recOwned = _out6671;
                              _12597_recIdents = _out6672;
                              RAST._IExpr _out6673;
                              DCOMPUTF16._IOwnership _out6674;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12595_recursiveGen, (_12572_nativeToType).dtor_value), _12596_recOwned, expectedOwnership, out _out6673, out _out6674);
                              r = _out6673;
                              resultingOwnership = _out6674;
                              readIdents = _12597_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source675.is_Nullable) {
                        DAST._IType _12598___mcc_h2355 = _source675.dtor_Nullable_a0;
                      } else if (_source675.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _12599___mcc_h2357 = _source675.dtor_Tuple_a0;
                      } else if (_source675.is_Array) {
                        DAST._IType _12600___mcc_h2359 = _source675.dtor_element;
                        BigInteger _12601___mcc_h2360 = _source675.dtor_dims;
                      } else if (_source675.is_Seq) {
                        DAST._IType _12602___mcc_h2363 = _source675.dtor_element;
                      } else if (_source675.is_Set) {
                        DAST._IType _12603___mcc_h2365 = _source675.dtor_element;
                      } else if (_source675.is_Multiset) {
                        DAST._IType _12604___mcc_h2367 = _source675.dtor_element;
                      } else if (_source675.is_Map) {
                        DAST._IType _12605___mcc_h2369 = _source675.dtor_key;
                        DAST._IType _12606___mcc_h2370 = _source675.dtor_value;
                      } else if (_source675.is_SetBuilder) {
                        DAST._IType _12607___mcc_h2373 = _source675.dtor_element;
                      } else if (_source675.is_MapBuilder) {
                        DAST._IType _12608___mcc_h2375 = _source675.dtor_key;
                        DAST._IType _12609___mcc_h2376 = _source675.dtor_value;
                      } else if (_source675.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _12610___mcc_h2379 = _source675.dtor_args;
                        DAST._IType _12611___mcc_h2380 = _source675.dtor_result;
                      } else if (_source675.is_Primitive) {
                        DAST._IPrimitive _12612___mcc_h2383 = _source675.dtor_Primitive_a0;
                      } else if (_source675.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _12613___mcc_h2385 = _source675.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _12614___mcc_h2387 = _source675.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _12615_recursiveGen;
                        DCOMPUTF16._IOwnership _12616_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12617_recIdents;
                        RAST._IExpr _out6675;
                        DCOMPUTF16._IOwnership _out6676;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6677;
                        DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6675, out _out6676, out _out6677);
                        _12615_recursiveGen = _out6675;
                        _12616_recOwned = _out6676;
                        _12617_recIdents = _out6677;
                        RAST._IExpr _out6678;
                        DCOMPUTF16._IOwnership _out6679;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12615_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12572_nativeToType).dtor_value), _12616_recOwned, expectedOwnership, out _out6678, out _out6679);
                        r = _out6678;
                        resultingOwnership = _out6679;
                        readIdents = _12617_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6680;
                    DCOMPUTF16._IOwnership _out6681;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6682;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _12571_b), _12571_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out6680, out _out6681, out _out6682);
                    r = _out6680;
                    resultingOwnership = _out6681;
                    readIdents = _out6682;
                  }
                }
              }
            } else if (_source672.is_Nullable) {
              DAST._IType _12618___mcc_h1194 = _source672.dtor_Nullable_a0;
              {
                RAST._IExpr _12619_recursiveGen;
                DCOMPUTF16._IOwnership _12620_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12621_recIdents;
                RAST._IExpr _out6683;
                DCOMPUTF16._IOwnership _out6684;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6685;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6683, out _out6684, out _out6685);
                _12619_recursiveGen = _out6683;
                _12620_recOwned = _out6684;
                _12621_recIdents = _out6685;
                r = _12619_recursiveGen;
                if (object.Equals(_12620_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6686;
                DCOMPUTF16._IOwnership _out6687;
                DCOMPUTF16.COMP.FromOwnership(r, _12620_recOwned, expectedOwnership, out _out6686, out _out6687);
                r = _out6686;
                resultingOwnership = _out6687;
                readIdents = _12621_recIdents;
              }
            } else if (_source672.is_Tuple) {
              Dafny.ISequence<DAST._IType> _12622___mcc_h1196 = _source672.dtor_Tuple_a0;
              {
                RAST._IType _12623_fromTpeGen;
                RAST._IType _out6688;
                _out6688 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12623_fromTpeGen = _out6688;
                RAST._IType _12624_toTpeGen;
                RAST._IType _out6689;
                _out6689 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12624_toTpeGen = _out6689;
                RAST._IExpr _12625_recursiveGen;
                DCOMPUTF16._IOwnership _12626_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12627_recIdents;
                RAST._IExpr _out6690;
                DCOMPUTF16._IOwnership _out6691;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6692;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6690, out _out6691, out _out6692);
                _12625_recursiveGen = _out6690;
                _12626_recOwned = _out6691;
                _12627_recIdents = _out6692;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12625_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12623_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12624_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6693;
                DCOMPUTF16._IOwnership _out6694;
                DCOMPUTF16.COMP.FromOwnership(r, _12626_recOwned, expectedOwnership, out _out6693, out _out6694);
                r = _out6693;
                resultingOwnership = _out6694;
                readIdents = _12627_recIdents;
              }
            } else if (_source672.is_Array) {
              DAST._IType _12628___mcc_h1198 = _source672.dtor_element;
              BigInteger _12629___mcc_h1199 = _source672.dtor_dims;
              {
                RAST._IType _12630_fromTpeGen;
                RAST._IType _out6695;
                _out6695 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12630_fromTpeGen = _out6695;
                RAST._IType _12631_toTpeGen;
                RAST._IType _out6696;
                _out6696 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12631_toTpeGen = _out6696;
                RAST._IExpr _12632_recursiveGen;
                DCOMPUTF16._IOwnership _12633_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12634_recIdents;
                RAST._IExpr _out6697;
                DCOMPUTF16._IOwnership _out6698;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6699;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6697, out _out6698, out _out6699);
                _12632_recursiveGen = _out6697;
                _12633_recOwned = _out6698;
                _12634_recIdents = _out6699;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12632_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12630_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12631_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6700;
                DCOMPUTF16._IOwnership _out6701;
                DCOMPUTF16.COMP.FromOwnership(r, _12633_recOwned, expectedOwnership, out _out6700, out _out6701);
                r = _out6700;
                resultingOwnership = _out6701;
                readIdents = _12634_recIdents;
              }
            } else if (_source672.is_Seq) {
              DAST._IType _12635___mcc_h1202 = _source672.dtor_element;
              {
                RAST._IType _12636_fromTpeGen;
                RAST._IType _out6702;
                _out6702 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12636_fromTpeGen = _out6702;
                RAST._IType _12637_toTpeGen;
                RAST._IType _out6703;
                _out6703 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12637_toTpeGen = _out6703;
                RAST._IExpr _12638_recursiveGen;
                DCOMPUTF16._IOwnership _12639_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12640_recIdents;
                RAST._IExpr _out6704;
                DCOMPUTF16._IOwnership _out6705;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6706;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6704, out _out6705, out _out6706);
                _12638_recursiveGen = _out6704;
                _12639_recOwned = _out6705;
                _12640_recIdents = _out6706;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12638_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12636_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12637_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6707;
                DCOMPUTF16._IOwnership _out6708;
                DCOMPUTF16.COMP.FromOwnership(r, _12639_recOwned, expectedOwnership, out _out6707, out _out6708);
                r = _out6707;
                resultingOwnership = _out6708;
                readIdents = _12640_recIdents;
              }
            } else if (_source672.is_Set) {
              DAST._IType _12641___mcc_h1204 = _source672.dtor_element;
              {
                RAST._IType _12642_fromTpeGen;
                RAST._IType _out6709;
                _out6709 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12642_fromTpeGen = _out6709;
                RAST._IType _12643_toTpeGen;
                RAST._IType _out6710;
                _out6710 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12643_toTpeGen = _out6710;
                RAST._IExpr _12644_recursiveGen;
                DCOMPUTF16._IOwnership _12645_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12646_recIdents;
                RAST._IExpr _out6711;
                DCOMPUTF16._IOwnership _out6712;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6713;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6711, out _out6712, out _out6713);
                _12644_recursiveGen = _out6711;
                _12645_recOwned = _out6712;
                _12646_recIdents = _out6713;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12644_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12642_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12643_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6714;
                DCOMPUTF16._IOwnership _out6715;
                DCOMPUTF16.COMP.FromOwnership(r, _12645_recOwned, expectedOwnership, out _out6714, out _out6715);
                r = _out6714;
                resultingOwnership = _out6715;
                readIdents = _12646_recIdents;
              }
            } else if (_source672.is_Multiset) {
              DAST._IType _12647___mcc_h1206 = _source672.dtor_element;
              {
                RAST._IType _12648_fromTpeGen;
                RAST._IType _out6716;
                _out6716 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12648_fromTpeGen = _out6716;
                RAST._IType _12649_toTpeGen;
                RAST._IType _out6717;
                _out6717 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12649_toTpeGen = _out6717;
                RAST._IExpr _12650_recursiveGen;
                DCOMPUTF16._IOwnership _12651_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12652_recIdents;
                RAST._IExpr _out6718;
                DCOMPUTF16._IOwnership _out6719;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6720;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6718, out _out6719, out _out6720);
                _12650_recursiveGen = _out6718;
                _12651_recOwned = _out6719;
                _12652_recIdents = _out6720;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12650_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12648_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12649_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6721;
                DCOMPUTF16._IOwnership _out6722;
                DCOMPUTF16.COMP.FromOwnership(r, _12651_recOwned, expectedOwnership, out _out6721, out _out6722);
                r = _out6721;
                resultingOwnership = _out6722;
                readIdents = _12652_recIdents;
              }
            } else if (_source672.is_Map) {
              DAST._IType _12653___mcc_h1208 = _source672.dtor_key;
              DAST._IType _12654___mcc_h1209 = _source672.dtor_value;
              {
                RAST._IType _12655_fromTpeGen;
                RAST._IType _out6723;
                _out6723 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12655_fromTpeGen = _out6723;
                RAST._IType _12656_toTpeGen;
                RAST._IType _out6724;
                _out6724 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12656_toTpeGen = _out6724;
                RAST._IExpr _12657_recursiveGen;
                DCOMPUTF16._IOwnership _12658_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12659_recIdents;
                RAST._IExpr _out6725;
                DCOMPUTF16._IOwnership _out6726;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6727;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6725, out _out6726, out _out6727);
                _12657_recursiveGen = _out6725;
                _12658_recOwned = _out6726;
                _12659_recIdents = _out6727;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12657_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12655_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12656_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6728;
                DCOMPUTF16._IOwnership _out6729;
                DCOMPUTF16.COMP.FromOwnership(r, _12658_recOwned, expectedOwnership, out _out6728, out _out6729);
                r = _out6728;
                resultingOwnership = _out6729;
                readIdents = _12659_recIdents;
              }
            } else if (_source672.is_SetBuilder) {
              DAST._IType _12660___mcc_h1212 = _source672.dtor_element;
              {
                RAST._IType _12661_fromTpeGen;
                RAST._IType _out6730;
                _out6730 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12661_fromTpeGen = _out6730;
                RAST._IType _12662_toTpeGen;
                RAST._IType _out6731;
                _out6731 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12662_toTpeGen = _out6731;
                RAST._IExpr _12663_recursiveGen;
                DCOMPUTF16._IOwnership _12664_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12665_recIdents;
                RAST._IExpr _out6732;
                DCOMPUTF16._IOwnership _out6733;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6734;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6732, out _out6733, out _out6734);
                _12663_recursiveGen = _out6732;
                _12664_recOwned = _out6733;
                _12665_recIdents = _out6734;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12663_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12661_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12662_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6735;
                DCOMPUTF16._IOwnership _out6736;
                DCOMPUTF16.COMP.FromOwnership(r, _12664_recOwned, expectedOwnership, out _out6735, out _out6736);
                r = _out6735;
                resultingOwnership = _out6736;
                readIdents = _12665_recIdents;
              }
            } else if (_source672.is_MapBuilder) {
              DAST._IType _12666___mcc_h1214 = _source672.dtor_key;
              DAST._IType _12667___mcc_h1215 = _source672.dtor_value;
              {
                RAST._IType _12668_fromTpeGen;
                RAST._IType _out6737;
                _out6737 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12668_fromTpeGen = _out6737;
                RAST._IType _12669_toTpeGen;
                RAST._IType _out6738;
                _out6738 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12669_toTpeGen = _out6738;
                RAST._IExpr _12670_recursiveGen;
                DCOMPUTF16._IOwnership _12671_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12672_recIdents;
                RAST._IExpr _out6739;
                DCOMPUTF16._IOwnership _out6740;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6741;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6739, out _out6740, out _out6741);
                _12670_recursiveGen = _out6739;
                _12671_recOwned = _out6740;
                _12672_recIdents = _out6741;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12670_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12668_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12669_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6742;
                DCOMPUTF16._IOwnership _out6743;
                DCOMPUTF16.COMP.FromOwnership(r, _12671_recOwned, expectedOwnership, out _out6742, out _out6743);
                r = _out6742;
                resultingOwnership = _out6743;
                readIdents = _12672_recIdents;
              }
            } else if (_source672.is_Arrow) {
              Dafny.ISequence<DAST._IType> _12673___mcc_h1218 = _source672.dtor_args;
              DAST._IType _12674___mcc_h1219 = _source672.dtor_result;
              {
                RAST._IType _12675_fromTpeGen;
                RAST._IType _out6744;
                _out6744 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12675_fromTpeGen = _out6744;
                RAST._IType _12676_toTpeGen;
                RAST._IType _out6745;
                _out6745 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12676_toTpeGen = _out6745;
                RAST._IExpr _12677_recursiveGen;
                DCOMPUTF16._IOwnership _12678_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12679_recIdents;
                RAST._IExpr _out6746;
                DCOMPUTF16._IOwnership _out6747;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6748;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6746, out _out6747, out _out6748);
                _12677_recursiveGen = _out6746;
                _12678_recOwned = _out6747;
                _12679_recIdents = _out6748;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12677_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12675_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12676_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6749;
                DCOMPUTF16._IOwnership _out6750;
                DCOMPUTF16.COMP.FromOwnership(r, _12678_recOwned, expectedOwnership, out _out6749, out _out6750);
                r = _out6749;
                resultingOwnership = _out6750;
                readIdents = _12679_recIdents;
              }
            } else if (_source672.is_Primitive) {
              DAST._IPrimitive _12680___mcc_h1222 = _source672.dtor_Primitive_a0;
              DAST._IPrimitive _source677 = _12680___mcc_h1222;
              if (_source677.is_Int) {
                {
                  RAST._IType _12681_rhsType;
                  RAST._IType _out6751;
                  _out6751 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12681_rhsType = _out6751;
                  RAST._IExpr _12682_recursiveGen;
                  DCOMPUTF16._IOwnership _12683___v105;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12684_recIdents;
                  RAST._IExpr _out6752;
                  DCOMPUTF16._IOwnership _out6753;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6754;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6752, out _out6753, out _out6754);
                  _12682_recursiveGen = _out6752;
                  _12683___v105 = _out6753;
                  _12684_recIdents = _out6754;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_12682_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out6755;
                  DCOMPUTF16._IOwnership _out6756;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6755, out _out6756);
                  r = _out6755;
                  resultingOwnership = _out6756;
                  readIdents = _12684_recIdents;
                }
              } else if (_source677.is_Real) {
                {
                  RAST._IType _12685_fromTpeGen;
                  RAST._IType _out6757;
                  _out6757 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12685_fromTpeGen = _out6757;
                  RAST._IType _12686_toTpeGen;
                  RAST._IType _out6758;
                  _out6758 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12686_toTpeGen = _out6758;
                  RAST._IExpr _12687_recursiveGen;
                  DCOMPUTF16._IOwnership _12688_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12689_recIdents;
                  RAST._IExpr _out6759;
                  DCOMPUTF16._IOwnership _out6760;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6761;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6759, out _out6760, out _out6761);
                  _12687_recursiveGen = _out6759;
                  _12688_recOwned = _out6760;
                  _12689_recIdents = _out6761;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12687_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12685_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12686_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6762;
                  DCOMPUTF16._IOwnership _out6763;
                  DCOMPUTF16.COMP.FromOwnership(r, _12688_recOwned, expectedOwnership, out _out6762, out _out6763);
                  r = _out6762;
                  resultingOwnership = _out6763;
                  readIdents = _12689_recIdents;
                }
              } else if (_source677.is_String) {
                {
                  RAST._IType _12690_fromTpeGen;
                  RAST._IType _out6764;
                  _out6764 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12690_fromTpeGen = _out6764;
                  RAST._IType _12691_toTpeGen;
                  RAST._IType _out6765;
                  _out6765 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12691_toTpeGen = _out6765;
                  RAST._IExpr _12692_recursiveGen;
                  DCOMPUTF16._IOwnership _12693_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12694_recIdents;
                  RAST._IExpr _out6766;
                  DCOMPUTF16._IOwnership _out6767;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6768;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6766, out _out6767, out _out6768);
                  _12692_recursiveGen = _out6766;
                  _12693_recOwned = _out6767;
                  _12694_recIdents = _out6768;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12692_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12690_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12691_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6769;
                  DCOMPUTF16._IOwnership _out6770;
                  DCOMPUTF16.COMP.FromOwnership(r, _12693_recOwned, expectedOwnership, out _out6769, out _out6770);
                  r = _out6769;
                  resultingOwnership = _out6770;
                  readIdents = _12694_recIdents;
                }
              } else if (_source677.is_Bool) {
                {
                  RAST._IType _12695_fromTpeGen;
                  RAST._IType _out6771;
                  _out6771 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12695_fromTpeGen = _out6771;
                  RAST._IType _12696_toTpeGen;
                  RAST._IType _out6772;
                  _out6772 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12696_toTpeGen = _out6772;
                  RAST._IExpr _12697_recursiveGen;
                  DCOMPUTF16._IOwnership _12698_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12699_recIdents;
                  RAST._IExpr _out6773;
                  DCOMPUTF16._IOwnership _out6774;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6775;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6773, out _out6774, out _out6775);
                  _12697_recursiveGen = _out6773;
                  _12698_recOwned = _out6774;
                  _12699_recIdents = _out6775;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12697_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12695_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12696_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6776;
                  DCOMPUTF16._IOwnership _out6777;
                  DCOMPUTF16.COMP.FromOwnership(r, _12698_recOwned, expectedOwnership, out _out6776, out _out6777);
                  r = _out6776;
                  resultingOwnership = _out6777;
                  readIdents = _12699_recIdents;
                }
              } else {
                {
                  RAST._IType _12700_fromTpeGen;
                  RAST._IType _out6778;
                  _out6778 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                  _12700_fromTpeGen = _out6778;
                  RAST._IType _12701_toTpeGen;
                  RAST._IType _out6779;
                  _out6779 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                  _12701_toTpeGen = _out6779;
                  RAST._IExpr _12702_recursiveGen;
                  DCOMPUTF16._IOwnership _12703_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12704_recIdents;
                  RAST._IExpr _out6780;
                  DCOMPUTF16._IOwnership _out6781;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6782;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6780, out _out6781, out _out6782);
                  _12702_recursiveGen = _out6780;
                  _12703_recOwned = _out6781;
                  _12704_recIdents = _out6782;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12702_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12700_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12701_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6783;
                  DCOMPUTF16._IOwnership _out6784;
                  DCOMPUTF16.COMP.FromOwnership(r, _12703_recOwned, expectedOwnership, out _out6783, out _out6784);
                  r = _out6783;
                  resultingOwnership = _out6784;
                  readIdents = _12704_recIdents;
                }
              }
            } else if (_source672.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _12705___mcc_h1224 = _source672.dtor_Passthrough_a0;
              {
                RAST._IType _12706_fromTpeGen;
                RAST._IType _out6785;
                _out6785 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12706_fromTpeGen = _out6785;
                RAST._IType _12707_toTpeGen;
                RAST._IType _out6786;
                _out6786 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12707_toTpeGen = _out6786;
                RAST._IExpr _12708_recursiveGen;
                DCOMPUTF16._IOwnership _12709_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12710_recIdents;
                RAST._IExpr _out6787;
                DCOMPUTF16._IOwnership _out6788;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6789;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6787, out _out6788, out _out6789);
                _12708_recursiveGen = _out6787;
                _12709_recOwned = _out6788;
                _12710_recIdents = _out6789;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12708_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12706_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12707_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6790;
                DCOMPUTF16._IOwnership _out6791;
                DCOMPUTF16.COMP.FromOwnership(r, _12709_recOwned, expectedOwnership, out _out6790, out _out6791);
                r = _out6790;
                resultingOwnership = _out6791;
                readIdents = _12710_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _12711___mcc_h1226 = _source672.dtor_TypeArg_a0;
              {
                RAST._IType _12712_fromTpeGen;
                RAST._IType _out6792;
                _out6792 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12712_fromTpeGen = _out6792;
                RAST._IType _12713_toTpeGen;
                RAST._IType _out6793;
                _out6793 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12713_toTpeGen = _out6793;
                RAST._IExpr _12714_recursiveGen;
                DCOMPUTF16._IOwnership _12715_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12716_recIdents;
                RAST._IExpr _out6794;
                DCOMPUTF16._IOwnership _out6795;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6796;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6794, out _out6795, out _out6796);
                _12714_recursiveGen = _out6794;
                _12715_recOwned = _out6795;
                _12716_recIdents = _out6796;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12714_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12712_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12713_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6797;
                DCOMPUTF16._IOwnership _out6798;
                DCOMPUTF16.COMP.FromOwnership(r, _12715_recOwned, expectedOwnership, out _out6797, out _out6798);
                r = _out6797;
                resultingOwnership = _out6798;
                readIdents = _12716_recIdents;
              }
            }
          }
        } else if (_source565.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _12717___mcc_h1228 = _source565.dtor_Passthrough_a0;
          DAST._IType _source678 = _9615___mcc_h1;
          if (_source678.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12718___mcc_h1232 = _source678.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _12719___mcc_h1233 = _source678.dtor_typeArgs;
            DAST._IResolvedType _12720___mcc_h1234 = _source678.dtor_resolved;
            DAST._IResolvedType _source679 = _12720___mcc_h1234;
            if (_source679.is_AllocatedDatatype) {
              DAST._IDatatypeType _12721___mcc_h1238 = _source679.dtor_datatypeType;
              {
                RAST._IType _12722_fromTpeGen;
                RAST._IType _out6799;
                _out6799 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12722_fromTpeGen = _out6799;
                RAST._IType _12723_toTpeGen;
                RAST._IType _out6800;
                _out6800 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12723_toTpeGen = _out6800;
                RAST._IExpr _12724_recursiveGen;
                DCOMPUTF16._IOwnership _12725_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12726_recIdents;
                RAST._IExpr _out6801;
                DCOMPUTF16._IOwnership _out6802;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6803;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6801, out _out6802, out _out6803);
                _12724_recursiveGen = _out6801;
                _12725_recOwned = _out6802;
                _12726_recIdents = _out6803;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12724_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12722_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12723_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6804;
                DCOMPUTF16._IOwnership _out6805;
                DCOMPUTF16.COMP.FromOwnership(r, _12725_recOwned, expectedOwnership, out _out6804, out _out6805);
                r = _out6804;
                resultingOwnership = _out6805;
                readIdents = _12726_recIdents;
              }
            } else if (_source679.is_Datatype) {
              DAST._IDatatypeType _12727___mcc_h1240 = _source679.dtor_datatypeType;
              {
                RAST._IType _12728_fromTpeGen;
                RAST._IType _out6806;
                _out6806 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12728_fromTpeGen = _out6806;
                RAST._IType _12729_toTpeGen;
                RAST._IType _out6807;
                _out6807 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12729_toTpeGen = _out6807;
                RAST._IExpr _12730_recursiveGen;
                DCOMPUTF16._IOwnership _12731_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12732_recIdents;
                RAST._IExpr _out6808;
                DCOMPUTF16._IOwnership _out6809;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6810;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6808, out _out6809, out _out6810);
                _12730_recursiveGen = _out6808;
                _12731_recOwned = _out6809;
                _12732_recIdents = _out6810;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12730_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12728_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12729_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6811;
                DCOMPUTF16._IOwnership _out6812;
                DCOMPUTF16.COMP.FromOwnership(r, _12731_recOwned, expectedOwnership, out _out6811, out _out6812);
                r = _out6811;
                resultingOwnership = _out6812;
                readIdents = _12732_recIdents;
              }
            } else if (_source679.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12733___mcc_h1242 = _source679.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _12734___mcc_h1243 = _source679.dtor_attributes;
              {
                RAST._IType _12735_fromTpeGen;
                RAST._IType _out6813;
                _out6813 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12735_fromTpeGen = _out6813;
                RAST._IType _12736_toTpeGen;
                RAST._IType _out6814;
                _out6814 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12736_toTpeGen = _out6814;
                RAST._IExpr _12737_recursiveGen;
                DCOMPUTF16._IOwnership _12738_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12739_recIdents;
                RAST._IExpr _out6815;
                DCOMPUTF16._IOwnership _out6816;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6817;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6815, out _out6816, out _out6817);
                _12737_recursiveGen = _out6815;
                _12738_recOwned = _out6816;
                _12739_recIdents = _out6817;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12737_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12735_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12736_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6818;
                DCOMPUTF16._IOwnership _out6819;
                DCOMPUTF16.COMP.FromOwnership(r, _12738_recOwned, expectedOwnership, out _out6818, out _out6819);
                r = _out6818;
                resultingOwnership = _out6819;
                readIdents = _12739_recIdents;
              }
            } else {
              DAST._IType _12740___mcc_h1246 = _source679.dtor_baseType;
              DAST._INewtypeRange _12741___mcc_h1247 = _source679.dtor_range;
              bool _12742___mcc_h1248 = _source679.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _12743___mcc_h1249 = _source679.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _12744_attributes = _12743___mcc_h1249;
              bool _12745_erase = _12742___mcc_h1248;
              DAST._INewtypeRange _12746_range = _12741___mcc_h1247;
              DAST._IType _12747_b = _12740___mcc_h1246;
              {
                Std.Wrappers._IOption<RAST._IType> _12748_nativeToType;
                _12748_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12747_b, _12746_range);
                if (object.Equals(_9609_fromTpe, _12747_b)) {
                  RAST._IExpr _12749_recursiveGen;
                  DCOMPUTF16._IOwnership _12750_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12751_recIdents;
                  RAST._IExpr _out6820;
                  DCOMPUTF16._IOwnership _out6821;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6822;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6820, out _out6821, out _out6822);
                  _12749_recursiveGen = _out6820;
                  _12750_recOwned = _out6821;
                  _12751_recIdents = _out6822;
                  readIdents = _12751_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source680 = _12748_nativeToType;
                  if (_source680.is_None) {
                    if (_12745_erase) {
                      r = _12749_recursiveGen;
                    } else {
                      RAST._IType _12752_rhsType;
                      RAST._IType _out6823;
                      _out6823 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _12752_rhsType = _out6823;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12752_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12749_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6824;
                    DCOMPUTF16._IOwnership _out6825;
                    DCOMPUTF16.COMP.FromOwnership(r, _12750_recOwned, expectedOwnership, out _out6824, out _out6825);
                    r = _out6824;
                    resultingOwnership = _out6825;
                  } else {
                    RAST._IType _12753___mcc_h2389 = _source680.dtor_value;
                    RAST._IType _12754_v = _12753___mcc_h2389;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12749_recursiveGen, RAST.Expr.create_ExprFromType(_12754_v)));
                    RAST._IExpr _out6826;
                    DCOMPUTF16._IOwnership _out6827;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6826, out _out6827);
                    r = _out6826;
                    resultingOwnership = _out6827;
                  }
                } else {
                  if ((_12748_nativeToType).is_Some) {
                    DAST._IType _source681 = _9609_fromTpe;
                    if (_source681.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12755___mcc_h2390 = _source681.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _12756___mcc_h2391 = _source681.dtor_typeArgs;
                      DAST._IResolvedType _12757___mcc_h2392 = _source681.dtor_resolved;
                      DAST._IResolvedType _source682 = _12757___mcc_h2392;
                      if (_source682.is_AllocatedDatatype) {
                        DAST._IDatatypeType _12758___mcc_h2396 = _source682.dtor_datatypeType;
                      } else if (_source682.is_Datatype) {
                        DAST._IDatatypeType _12759___mcc_h2398 = _source682.dtor_datatypeType;
                      } else if (_source682.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12760___mcc_h2400 = _source682.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _12761___mcc_h2401 = _source682.dtor_attributes;
                      } else {
                        DAST._IType _12762___mcc_h2404 = _source682.dtor_baseType;
                        DAST._INewtypeRange _12763___mcc_h2405 = _source682.dtor_range;
                        bool _12764___mcc_h2406 = _source682.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _12765___mcc_h2407 = _source682.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _12766_attributes0 = _12765___mcc_h2407;
                        bool _12767_erase0 = _12764___mcc_h2406;
                        DAST._INewtypeRange _12768_range0 = _12763___mcc_h2405;
                        DAST._IType _12769_b0 = _12762___mcc_h2404;
                        {
                          Std.Wrappers._IOption<RAST._IType> _12770_nativeFromType;
                          _12770_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12769_b0, _12768_range0);
                          if ((_12770_nativeFromType).is_Some) {
                            RAST._IExpr _12771_recursiveGen;
                            DCOMPUTF16._IOwnership _12772_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12773_recIdents;
                            RAST._IExpr _out6828;
                            DCOMPUTF16._IOwnership _out6829;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6830;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6828, out _out6829, out _out6830);
                            _12771_recursiveGen = _out6828;
                            _12772_recOwned = _out6829;
                            _12773_recIdents = _out6830;
                            RAST._IExpr _out6831;
                            DCOMPUTF16._IOwnership _out6832;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12771_recursiveGen, (_12748_nativeToType).dtor_value), _12772_recOwned, expectedOwnership, out _out6831, out _out6832);
                            r = _out6831;
                            resultingOwnership = _out6832;
                            readIdents = _12773_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source681.is_Nullable) {
                      DAST._IType _12774___mcc_h2412 = _source681.dtor_Nullable_a0;
                    } else if (_source681.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _12775___mcc_h2414 = _source681.dtor_Tuple_a0;
                    } else if (_source681.is_Array) {
                      DAST._IType _12776___mcc_h2416 = _source681.dtor_element;
                      BigInteger _12777___mcc_h2417 = _source681.dtor_dims;
                    } else if (_source681.is_Seq) {
                      DAST._IType _12778___mcc_h2420 = _source681.dtor_element;
                    } else if (_source681.is_Set) {
                      DAST._IType _12779___mcc_h2422 = _source681.dtor_element;
                    } else if (_source681.is_Multiset) {
                      DAST._IType _12780___mcc_h2424 = _source681.dtor_element;
                    } else if (_source681.is_Map) {
                      DAST._IType _12781___mcc_h2426 = _source681.dtor_key;
                      DAST._IType _12782___mcc_h2427 = _source681.dtor_value;
                    } else if (_source681.is_SetBuilder) {
                      DAST._IType _12783___mcc_h2430 = _source681.dtor_element;
                    } else if (_source681.is_MapBuilder) {
                      DAST._IType _12784___mcc_h2432 = _source681.dtor_key;
                      DAST._IType _12785___mcc_h2433 = _source681.dtor_value;
                    } else if (_source681.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _12786___mcc_h2436 = _source681.dtor_args;
                      DAST._IType _12787___mcc_h2437 = _source681.dtor_result;
                    } else if (_source681.is_Primitive) {
                      DAST._IPrimitive _12788___mcc_h2440 = _source681.dtor_Primitive_a0;
                    } else if (_source681.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _12789___mcc_h2442 = _source681.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _12790___mcc_h2444 = _source681.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _12791_recursiveGen;
                      DCOMPUTF16._IOwnership _12792_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12793_recIdents;
                      RAST._IExpr _out6833;
                      DCOMPUTF16._IOwnership _out6834;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6835;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6833, out _out6834, out _out6835);
                      _12791_recursiveGen = _out6833;
                      _12792_recOwned = _out6834;
                      _12793_recIdents = _out6835;
                      RAST._IExpr _out6836;
                      DCOMPUTF16._IOwnership _out6837;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12791_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12748_nativeToType).dtor_value), _12792_recOwned, expectedOwnership, out _out6836, out _out6837);
                      r = _out6836;
                      resultingOwnership = _out6837;
                      readIdents = _12793_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6838;
                  DCOMPUTF16._IOwnership _out6839;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6840;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _12747_b), _12747_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out6838, out _out6839, out _out6840);
                  r = _out6838;
                  resultingOwnership = _out6839;
                  readIdents = _out6840;
                }
              }
            }
          } else if (_source678.is_Nullable) {
            DAST._IType _12794___mcc_h1254 = _source678.dtor_Nullable_a0;
            {
              RAST._IExpr _12795_recursiveGen;
              DCOMPUTF16._IOwnership _12796_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12797_recIdents;
              RAST._IExpr _out6841;
              DCOMPUTF16._IOwnership _out6842;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6843;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6841, out _out6842, out _out6843);
              _12795_recursiveGen = _out6841;
              _12796_recOwned = _out6842;
              _12797_recIdents = _out6843;
              r = _12795_recursiveGen;
              if (object.Equals(_12796_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out6844;
              DCOMPUTF16._IOwnership _out6845;
              DCOMPUTF16.COMP.FromOwnership(r, _12796_recOwned, expectedOwnership, out _out6844, out _out6845);
              r = _out6844;
              resultingOwnership = _out6845;
              readIdents = _12797_recIdents;
            }
          } else if (_source678.is_Tuple) {
            Dafny.ISequence<DAST._IType> _12798___mcc_h1256 = _source678.dtor_Tuple_a0;
            {
              RAST._IType _12799_fromTpeGen;
              RAST._IType _out6846;
              _out6846 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12799_fromTpeGen = _out6846;
              RAST._IType _12800_toTpeGen;
              RAST._IType _out6847;
              _out6847 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12800_toTpeGen = _out6847;
              RAST._IExpr _12801_recursiveGen;
              DCOMPUTF16._IOwnership _12802_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12803_recIdents;
              RAST._IExpr _out6848;
              DCOMPUTF16._IOwnership _out6849;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6850;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6848, out _out6849, out _out6850);
              _12801_recursiveGen = _out6848;
              _12802_recOwned = _out6849;
              _12803_recIdents = _out6850;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12801_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12799_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12800_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6851;
              DCOMPUTF16._IOwnership _out6852;
              DCOMPUTF16.COMP.FromOwnership(r, _12802_recOwned, expectedOwnership, out _out6851, out _out6852);
              r = _out6851;
              resultingOwnership = _out6852;
              readIdents = _12803_recIdents;
            }
          } else if (_source678.is_Array) {
            DAST._IType _12804___mcc_h1258 = _source678.dtor_element;
            BigInteger _12805___mcc_h1259 = _source678.dtor_dims;
            {
              RAST._IType _12806_fromTpeGen;
              RAST._IType _out6853;
              _out6853 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12806_fromTpeGen = _out6853;
              RAST._IType _12807_toTpeGen;
              RAST._IType _out6854;
              _out6854 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12807_toTpeGen = _out6854;
              RAST._IExpr _12808_recursiveGen;
              DCOMPUTF16._IOwnership _12809_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12810_recIdents;
              RAST._IExpr _out6855;
              DCOMPUTF16._IOwnership _out6856;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6857;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6855, out _out6856, out _out6857);
              _12808_recursiveGen = _out6855;
              _12809_recOwned = _out6856;
              _12810_recIdents = _out6857;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12808_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12806_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12807_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6858;
              DCOMPUTF16._IOwnership _out6859;
              DCOMPUTF16.COMP.FromOwnership(r, _12809_recOwned, expectedOwnership, out _out6858, out _out6859);
              r = _out6858;
              resultingOwnership = _out6859;
              readIdents = _12810_recIdents;
            }
          } else if (_source678.is_Seq) {
            DAST._IType _12811___mcc_h1262 = _source678.dtor_element;
            {
              RAST._IType _12812_fromTpeGen;
              RAST._IType _out6860;
              _out6860 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12812_fromTpeGen = _out6860;
              RAST._IType _12813_toTpeGen;
              RAST._IType _out6861;
              _out6861 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12813_toTpeGen = _out6861;
              RAST._IExpr _12814_recursiveGen;
              DCOMPUTF16._IOwnership _12815_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12816_recIdents;
              RAST._IExpr _out6862;
              DCOMPUTF16._IOwnership _out6863;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6864;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6862, out _out6863, out _out6864);
              _12814_recursiveGen = _out6862;
              _12815_recOwned = _out6863;
              _12816_recIdents = _out6864;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12814_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12812_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12813_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6865;
              DCOMPUTF16._IOwnership _out6866;
              DCOMPUTF16.COMP.FromOwnership(r, _12815_recOwned, expectedOwnership, out _out6865, out _out6866);
              r = _out6865;
              resultingOwnership = _out6866;
              readIdents = _12816_recIdents;
            }
          } else if (_source678.is_Set) {
            DAST._IType _12817___mcc_h1264 = _source678.dtor_element;
            {
              RAST._IType _12818_fromTpeGen;
              RAST._IType _out6867;
              _out6867 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12818_fromTpeGen = _out6867;
              RAST._IType _12819_toTpeGen;
              RAST._IType _out6868;
              _out6868 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12819_toTpeGen = _out6868;
              RAST._IExpr _12820_recursiveGen;
              DCOMPUTF16._IOwnership _12821_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12822_recIdents;
              RAST._IExpr _out6869;
              DCOMPUTF16._IOwnership _out6870;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6871;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6869, out _out6870, out _out6871);
              _12820_recursiveGen = _out6869;
              _12821_recOwned = _out6870;
              _12822_recIdents = _out6871;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12820_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12818_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12819_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6872;
              DCOMPUTF16._IOwnership _out6873;
              DCOMPUTF16.COMP.FromOwnership(r, _12821_recOwned, expectedOwnership, out _out6872, out _out6873);
              r = _out6872;
              resultingOwnership = _out6873;
              readIdents = _12822_recIdents;
            }
          } else if (_source678.is_Multiset) {
            DAST._IType _12823___mcc_h1266 = _source678.dtor_element;
            {
              RAST._IType _12824_fromTpeGen;
              RAST._IType _out6874;
              _out6874 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12824_fromTpeGen = _out6874;
              RAST._IType _12825_toTpeGen;
              RAST._IType _out6875;
              _out6875 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12825_toTpeGen = _out6875;
              RAST._IExpr _12826_recursiveGen;
              DCOMPUTF16._IOwnership _12827_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12828_recIdents;
              RAST._IExpr _out6876;
              DCOMPUTF16._IOwnership _out6877;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6878;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6876, out _out6877, out _out6878);
              _12826_recursiveGen = _out6876;
              _12827_recOwned = _out6877;
              _12828_recIdents = _out6878;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12826_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12824_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12825_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6879;
              DCOMPUTF16._IOwnership _out6880;
              DCOMPUTF16.COMP.FromOwnership(r, _12827_recOwned, expectedOwnership, out _out6879, out _out6880);
              r = _out6879;
              resultingOwnership = _out6880;
              readIdents = _12828_recIdents;
            }
          } else if (_source678.is_Map) {
            DAST._IType _12829___mcc_h1268 = _source678.dtor_key;
            DAST._IType _12830___mcc_h1269 = _source678.dtor_value;
            {
              RAST._IType _12831_fromTpeGen;
              RAST._IType _out6881;
              _out6881 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12831_fromTpeGen = _out6881;
              RAST._IType _12832_toTpeGen;
              RAST._IType _out6882;
              _out6882 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12832_toTpeGen = _out6882;
              RAST._IExpr _12833_recursiveGen;
              DCOMPUTF16._IOwnership _12834_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12835_recIdents;
              RAST._IExpr _out6883;
              DCOMPUTF16._IOwnership _out6884;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6885;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6883, out _out6884, out _out6885);
              _12833_recursiveGen = _out6883;
              _12834_recOwned = _out6884;
              _12835_recIdents = _out6885;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12833_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12831_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12832_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6886;
              DCOMPUTF16._IOwnership _out6887;
              DCOMPUTF16.COMP.FromOwnership(r, _12834_recOwned, expectedOwnership, out _out6886, out _out6887);
              r = _out6886;
              resultingOwnership = _out6887;
              readIdents = _12835_recIdents;
            }
          } else if (_source678.is_SetBuilder) {
            DAST._IType _12836___mcc_h1272 = _source678.dtor_element;
            {
              RAST._IType _12837_fromTpeGen;
              RAST._IType _out6888;
              _out6888 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12837_fromTpeGen = _out6888;
              RAST._IType _12838_toTpeGen;
              RAST._IType _out6889;
              _out6889 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12838_toTpeGen = _out6889;
              RAST._IExpr _12839_recursiveGen;
              DCOMPUTF16._IOwnership _12840_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12841_recIdents;
              RAST._IExpr _out6890;
              DCOMPUTF16._IOwnership _out6891;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6892;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6890, out _out6891, out _out6892);
              _12839_recursiveGen = _out6890;
              _12840_recOwned = _out6891;
              _12841_recIdents = _out6892;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12839_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12837_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12838_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6893;
              DCOMPUTF16._IOwnership _out6894;
              DCOMPUTF16.COMP.FromOwnership(r, _12840_recOwned, expectedOwnership, out _out6893, out _out6894);
              r = _out6893;
              resultingOwnership = _out6894;
              readIdents = _12841_recIdents;
            }
          } else if (_source678.is_MapBuilder) {
            DAST._IType _12842___mcc_h1274 = _source678.dtor_key;
            DAST._IType _12843___mcc_h1275 = _source678.dtor_value;
            {
              RAST._IType _12844_fromTpeGen;
              RAST._IType _out6895;
              _out6895 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12844_fromTpeGen = _out6895;
              RAST._IType _12845_toTpeGen;
              RAST._IType _out6896;
              _out6896 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12845_toTpeGen = _out6896;
              RAST._IExpr _12846_recursiveGen;
              DCOMPUTF16._IOwnership _12847_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12848_recIdents;
              RAST._IExpr _out6897;
              DCOMPUTF16._IOwnership _out6898;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6899;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6897, out _out6898, out _out6899);
              _12846_recursiveGen = _out6897;
              _12847_recOwned = _out6898;
              _12848_recIdents = _out6899;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12846_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12844_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12845_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6900;
              DCOMPUTF16._IOwnership _out6901;
              DCOMPUTF16.COMP.FromOwnership(r, _12847_recOwned, expectedOwnership, out _out6900, out _out6901);
              r = _out6900;
              resultingOwnership = _out6901;
              readIdents = _12848_recIdents;
            }
          } else if (_source678.is_Arrow) {
            Dafny.ISequence<DAST._IType> _12849___mcc_h1278 = _source678.dtor_args;
            DAST._IType _12850___mcc_h1279 = _source678.dtor_result;
            {
              RAST._IType _12851_fromTpeGen;
              RAST._IType _out6902;
              _out6902 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12851_fromTpeGen = _out6902;
              RAST._IType _12852_toTpeGen;
              RAST._IType _out6903;
              _out6903 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12852_toTpeGen = _out6903;
              RAST._IExpr _12853_recursiveGen;
              DCOMPUTF16._IOwnership _12854_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12855_recIdents;
              RAST._IExpr _out6904;
              DCOMPUTF16._IOwnership _out6905;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6906;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6904, out _out6905, out _out6906);
              _12853_recursiveGen = _out6904;
              _12854_recOwned = _out6905;
              _12855_recIdents = _out6906;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12853_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12851_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12852_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6907;
              DCOMPUTF16._IOwnership _out6908;
              DCOMPUTF16.COMP.FromOwnership(r, _12854_recOwned, expectedOwnership, out _out6907, out _out6908);
              r = _out6907;
              resultingOwnership = _out6908;
              readIdents = _12855_recIdents;
            }
          } else if (_source678.is_Primitive) {
            DAST._IPrimitive _12856___mcc_h1282 = _source678.dtor_Primitive_a0;
            DAST._IPrimitive _source683 = _12856___mcc_h1282;
            if (_source683.is_Int) {
              {
                RAST._IType _12857_rhsType;
                RAST._IType _out6909;
                _out6909 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12857_rhsType = _out6909;
                RAST._IExpr _12858_recursiveGen;
                DCOMPUTF16._IOwnership _12859___v103;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12860_recIdents;
                RAST._IExpr _out6910;
                DCOMPUTF16._IOwnership _out6911;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6912;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6910, out _out6911, out _out6912);
                _12858_recursiveGen = _out6910;
                _12859___v103 = _out6911;
                _12860_recIdents = _out6912;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_12858_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out6913;
                DCOMPUTF16._IOwnership _out6914;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6913, out _out6914);
                r = _out6913;
                resultingOwnership = _out6914;
                readIdents = _12860_recIdents;
              }
            } else if (_source683.is_Real) {
              {
                RAST._IType _12861_fromTpeGen;
                RAST._IType _out6915;
                _out6915 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12861_fromTpeGen = _out6915;
                RAST._IType _12862_toTpeGen;
                RAST._IType _out6916;
                _out6916 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12862_toTpeGen = _out6916;
                RAST._IExpr _12863_recursiveGen;
                DCOMPUTF16._IOwnership _12864_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12865_recIdents;
                RAST._IExpr _out6917;
                DCOMPUTF16._IOwnership _out6918;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6919;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6917, out _out6918, out _out6919);
                _12863_recursiveGen = _out6917;
                _12864_recOwned = _out6918;
                _12865_recIdents = _out6919;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12863_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12861_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12862_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6920;
                DCOMPUTF16._IOwnership _out6921;
                DCOMPUTF16.COMP.FromOwnership(r, _12864_recOwned, expectedOwnership, out _out6920, out _out6921);
                r = _out6920;
                resultingOwnership = _out6921;
                readIdents = _12865_recIdents;
              }
            } else if (_source683.is_String) {
              {
                RAST._IType _12866_fromTpeGen;
                RAST._IType _out6922;
                _out6922 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12866_fromTpeGen = _out6922;
                RAST._IType _12867_toTpeGen;
                RAST._IType _out6923;
                _out6923 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12867_toTpeGen = _out6923;
                RAST._IExpr _12868_recursiveGen;
                DCOMPUTF16._IOwnership _12869_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12870_recIdents;
                RAST._IExpr _out6924;
                DCOMPUTF16._IOwnership _out6925;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6926;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6924, out _out6925, out _out6926);
                _12868_recursiveGen = _out6924;
                _12869_recOwned = _out6925;
                _12870_recIdents = _out6926;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12868_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12866_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12867_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6927;
                DCOMPUTF16._IOwnership _out6928;
                DCOMPUTF16.COMP.FromOwnership(r, _12869_recOwned, expectedOwnership, out _out6927, out _out6928);
                r = _out6927;
                resultingOwnership = _out6928;
                readIdents = _12870_recIdents;
              }
            } else if (_source683.is_Bool) {
              {
                RAST._IType _12871_fromTpeGen;
                RAST._IType _out6929;
                _out6929 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12871_fromTpeGen = _out6929;
                RAST._IType _12872_toTpeGen;
                RAST._IType _out6930;
                _out6930 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12872_toTpeGen = _out6930;
                RAST._IExpr _12873_recursiveGen;
                DCOMPUTF16._IOwnership _12874_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12875_recIdents;
                RAST._IExpr _out6931;
                DCOMPUTF16._IOwnership _out6932;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6933;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6931, out _out6932, out _out6933);
                _12873_recursiveGen = _out6931;
                _12874_recOwned = _out6932;
                _12875_recIdents = _out6933;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12873_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12871_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12872_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6934;
                DCOMPUTF16._IOwnership _out6935;
                DCOMPUTF16.COMP.FromOwnership(r, _12874_recOwned, expectedOwnership, out _out6934, out _out6935);
                r = _out6934;
                resultingOwnership = _out6935;
                readIdents = _12875_recIdents;
              }
            } else {
              {
                RAST._IType _12876_fromTpeGen;
                RAST._IType _out6936;
                _out6936 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12876_fromTpeGen = _out6936;
                RAST._IType _12877_toTpeGen;
                RAST._IType _out6937;
                _out6937 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12877_toTpeGen = _out6937;
                RAST._IExpr _12878_recursiveGen;
                DCOMPUTF16._IOwnership _12879_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12880_recIdents;
                RAST._IExpr _out6938;
                DCOMPUTF16._IOwnership _out6939;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6940;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6938, out _out6939, out _out6940);
                _12878_recursiveGen = _out6938;
                _12879_recOwned = _out6939;
                _12880_recIdents = _out6940;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12878_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12876_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12877_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6941;
                DCOMPUTF16._IOwnership _out6942;
                DCOMPUTF16.COMP.FromOwnership(r, _12879_recOwned, expectedOwnership, out _out6941, out _out6942);
                r = _out6941;
                resultingOwnership = _out6942;
                readIdents = _12880_recIdents;
              }
            }
          } else if (_source678.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _12881___mcc_h1284 = _source678.dtor_Passthrough_a0;
            {
              RAST._IExpr _12882_recursiveGen;
              DCOMPUTF16._IOwnership _12883___v108;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12884_recIdents;
              RAST._IExpr _out6943;
              DCOMPUTF16._IOwnership _out6944;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6945;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6943, out _out6944, out _out6945);
              _12882_recursiveGen = _out6943;
              _12883___v108 = _out6944;
              _12884_recIdents = _out6945;
              RAST._IType _12885_toTpeGen;
              RAST._IType _out6946;
              _out6946 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12885_toTpeGen = _out6946;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_12882_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_12885_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out6947;
              DCOMPUTF16._IOwnership _out6948;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6947, out _out6948);
              r = _out6947;
              resultingOwnership = _out6948;
              readIdents = _12884_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _12886___mcc_h1286 = _source678.dtor_TypeArg_a0;
            {
              RAST._IType _12887_fromTpeGen;
              RAST._IType _out6949;
              _out6949 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12887_fromTpeGen = _out6949;
              RAST._IType _12888_toTpeGen;
              RAST._IType _out6950;
              _out6950 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12888_toTpeGen = _out6950;
              RAST._IExpr _12889_recursiveGen;
              DCOMPUTF16._IOwnership _12890_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12891_recIdents;
              RAST._IExpr _out6951;
              DCOMPUTF16._IOwnership _out6952;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6953;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6951, out _out6952, out _out6953);
              _12889_recursiveGen = _out6951;
              _12890_recOwned = _out6952;
              _12891_recIdents = _out6953;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12889_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12887_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12888_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6954;
              DCOMPUTF16._IOwnership _out6955;
              DCOMPUTF16.COMP.FromOwnership(r, _12890_recOwned, expectedOwnership, out _out6954, out _out6955);
              r = _out6954;
              resultingOwnership = _out6955;
              readIdents = _12891_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _12892___mcc_h1288 = _source565.dtor_TypeArg_a0;
          DAST._IType _source684 = _9615___mcc_h1;
          if (_source684.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12893___mcc_h1292 = _source684.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _12894___mcc_h1293 = _source684.dtor_typeArgs;
            DAST._IResolvedType _12895___mcc_h1294 = _source684.dtor_resolved;
            DAST._IResolvedType _source685 = _12895___mcc_h1294;
            if (_source685.is_AllocatedDatatype) {
              DAST._IDatatypeType _12896___mcc_h1298 = _source685.dtor_datatypeType;
              {
                RAST._IType _12897_fromTpeGen;
                RAST._IType _out6956;
                _out6956 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12897_fromTpeGen = _out6956;
                RAST._IType _12898_toTpeGen;
                RAST._IType _out6957;
                _out6957 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12898_toTpeGen = _out6957;
                RAST._IExpr _12899_recursiveGen;
                DCOMPUTF16._IOwnership _12900_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12901_recIdents;
                RAST._IExpr _out6958;
                DCOMPUTF16._IOwnership _out6959;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6960;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6958, out _out6959, out _out6960);
                _12899_recursiveGen = _out6958;
                _12900_recOwned = _out6959;
                _12901_recIdents = _out6960;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12899_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12897_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12898_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6961;
                DCOMPUTF16._IOwnership _out6962;
                DCOMPUTF16.COMP.FromOwnership(r, _12900_recOwned, expectedOwnership, out _out6961, out _out6962);
                r = _out6961;
                resultingOwnership = _out6962;
                readIdents = _12901_recIdents;
              }
            } else if (_source685.is_Datatype) {
              DAST._IDatatypeType _12902___mcc_h1300 = _source685.dtor_datatypeType;
              {
                RAST._IType _12903_fromTpeGen;
                RAST._IType _out6963;
                _out6963 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12903_fromTpeGen = _out6963;
                RAST._IType _12904_toTpeGen;
                RAST._IType _out6964;
                _out6964 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12904_toTpeGen = _out6964;
                RAST._IExpr _12905_recursiveGen;
                DCOMPUTF16._IOwnership _12906_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12907_recIdents;
                RAST._IExpr _out6965;
                DCOMPUTF16._IOwnership _out6966;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6967;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6965, out _out6966, out _out6967);
                _12905_recursiveGen = _out6965;
                _12906_recOwned = _out6966;
                _12907_recIdents = _out6967;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12905_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12903_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12904_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6968;
                DCOMPUTF16._IOwnership _out6969;
                DCOMPUTF16.COMP.FromOwnership(r, _12906_recOwned, expectedOwnership, out _out6968, out _out6969);
                r = _out6968;
                resultingOwnership = _out6969;
                readIdents = _12907_recIdents;
              }
            } else if (_source685.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12908___mcc_h1302 = _source685.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _12909___mcc_h1303 = _source685.dtor_attributes;
              {
                RAST._IType _12910_fromTpeGen;
                RAST._IType _out6970;
                _out6970 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
                _12910_fromTpeGen = _out6970;
                RAST._IType _12911_toTpeGen;
                RAST._IType _out6971;
                _out6971 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                _12911_toTpeGen = _out6971;
                RAST._IExpr _12912_recursiveGen;
                DCOMPUTF16._IOwnership _12913_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12914_recIdents;
                RAST._IExpr _out6972;
                DCOMPUTF16._IOwnership _out6973;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6974;
                DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6972, out _out6973, out _out6974);
                _12912_recursiveGen = _out6972;
                _12913_recOwned = _out6973;
                _12914_recIdents = _out6974;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12912_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12910_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12911_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6975;
                DCOMPUTF16._IOwnership _out6976;
                DCOMPUTF16.COMP.FromOwnership(r, _12913_recOwned, expectedOwnership, out _out6975, out _out6976);
                r = _out6975;
                resultingOwnership = _out6976;
                readIdents = _12914_recIdents;
              }
            } else {
              DAST._IType _12915___mcc_h1306 = _source685.dtor_baseType;
              DAST._INewtypeRange _12916___mcc_h1307 = _source685.dtor_range;
              bool _12917___mcc_h1308 = _source685.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _12918___mcc_h1309 = _source685.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _12919_attributes = _12918___mcc_h1309;
              bool _12920_erase = _12917___mcc_h1308;
              DAST._INewtypeRange _12921_range = _12916___mcc_h1307;
              DAST._IType _12922_b = _12915___mcc_h1306;
              {
                Std.Wrappers._IOption<RAST._IType> _12923_nativeToType;
                _12923_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12922_b, _12921_range);
                if (object.Equals(_9609_fromTpe, _12922_b)) {
                  RAST._IExpr _12924_recursiveGen;
                  DCOMPUTF16._IOwnership _12925_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12926_recIdents;
                  RAST._IExpr _out6977;
                  DCOMPUTF16._IOwnership _out6978;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6979;
                  DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6977, out _out6978, out _out6979);
                  _12924_recursiveGen = _out6977;
                  _12925_recOwned = _out6978;
                  _12926_recIdents = _out6979;
                  readIdents = _12926_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source686 = _12923_nativeToType;
                  if (_source686.is_None) {
                    if (_12920_erase) {
                      r = _12924_recursiveGen;
                    } else {
                      RAST._IType _12927_rhsType;
                      RAST._IType _out6980;
                      _out6980 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
                      _12927_rhsType = _out6980;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12927_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12924_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6981;
                    DCOMPUTF16._IOwnership _out6982;
                    DCOMPUTF16.COMP.FromOwnership(r, _12925_recOwned, expectedOwnership, out _out6981, out _out6982);
                    r = _out6981;
                    resultingOwnership = _out6982;
                  } else {
                    RAST._IType _12928___mcc_h2446 = _source686.dtor_value;
                    RAST._IType _12929_v = _12928___mcc_h2446;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12924_recursiveGen, RAST.Expr.create_ExprFromType(_12929_v)));
                    RAST._IExpr _out6983;
                    DCOMPUTF16._IOwnership _out6984;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6983, out _out6984);
                    r = _out6983;
                    resultingOwnership = _out6984;
                  }
                } else {
                  if ((_12923_nativeToType).is_Some) {
                    DAST._IType _source687 = _9609_fromTpe;
                    if (_source687.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12930___mcc_h2447 = _source687.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _12931___mcc_h2448 = _source687.dtor_typeArgs;
                      DAST._IResolvedType _12932___mcc_h2449 = _source687.dtor_resolved;
                      DAST._IResolvedType _source688 = _12932___mcc_h2449;
                      if (_source688.is_AllocatedDatatype) {
                        DAST._IDatatypeType _12933___mcc_h2453 = _source688.dtor_datatypeType;
                      } else if (_source688.is_Datatype) {
                        DAST._IDatatypeType _12934___mcc_h2455 = _source688.dtor_datatypeType;
                      } else if (_source688.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12935___mcc_h2457 = _source688.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _12936___mcc_h2458 = _source688.dtor_attributes;
                      } else {
                        DAST._IType _12937___mcc_h2461 = _source688.dtor_baseType;
                        DAST._INewtypeRange _12938___mcc_h2462 = _source688.dtor_range;
                        bool _12939___mcc_h2463 = _source688.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _12940___mcc_h2464 = _source688.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _12941_attributes0 = _12940___mcc_h2464;
                        bool _12942_erase0 = _12939___mcc_h2463;
                        DAST._INewtypeRange _12943_range0 = _12938___mcc_h2462;
                        DAST._IType _12944_b0 = _12937___mcc_h2461;
                        {
                          Std.Wrappers._IOption<RAST._IType> _12945_nativeFromType;
                          _12945_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12944_b0, _12943_range0);
                          if ((_12945_nativeFromType).is_Some) {
                            RAST._IExpr _12946_recursiveGen;
                            DCOMPUTF16._IOwnership _12947_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12948_recIdents;
                            RAST._IExpr _out6985;
                            DCOMPUTF16._IOwnership _out6986;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6987;
                            DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6985, out _out6986, out _out6987);
                            _12946_recursiveGen = _out6985;
                            _12947_recOwned = _out6986;
                            _12948_recIdents = _out6987;
                            RAST._IExpr _out6988;
                            DCOMPUTF16._IOwnership _out6989;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12946_recursiveGen, (_12923_nativeToType).dtor_value), _12947_recOwned, expectedOwnership, out _out6988, out _out6989);
                            r = _out6988;
                            resultingOwnership = _out6989;
                            readIdents = _12948_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source687.is_Nullable) {
                      DAST._IType _12949___mcc_h2469 = _source687.dtor_Nullable_a0;
                    } else if (_source687.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _12950___mcc_h2471 = _source687.dtor_Tuple_a0;
                    } else if (_source687.is_Array) {
                      DAST._IType _12951___mcc_h2473 = _source687.dtor_element;
                      BigInteger _12952___mcc_h2474 = _source687.dtor_dims;
                    } else if (_source687.is_Seq) {
                      DAST._IType _12953___mcc_h2477 = _source687.dtor_element;
                    } else if (_source687.is_Set) {
                      DAST._IType _12954___mcc_h2479 = _source687.dtor_element;
                    } else if (_source687.is_Multiset) {
                      DAST._IType _12955___mcc_h2481 = _source687.dtor_element;
                    } else if (_source687.is_Map) {
                      DAST._IType _12956___mcc_h2483 = _source687.dtor_key;
                      DAST._IType _12957___mcc_h2484 = _source687.dtor_value;
                    } else if (_source687.is_SetBuilder) {
                      DAST._IType _12958___mcc_h2487 = _source687.dtor_element;
                    } else if (_source687.is_MapBuilder) {
                      DAST._IType _12959___mcc_h2489 = _source687.dtor_key;
                      DAST._IType _12960___mcc_h2490 = _source687.dtor_value;
                    } else if (_source687.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _12961___mcc_h2493 = _source687.dtor_args;
                      DAST._IType _12962___mcc_h2494 = _source687.dtor_result;
                    } else if (_source687.is_Primitive) {
                      DAST._IPrimitive _12963___mcc_h2497 = _source687.dtor_Primitive_a0;
                    } else if (_source687.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _12964___mcc_h2499 = _source687.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _12965___mcc_h2501 = _source687.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_9609_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _12966_recursiveGen;
                      DCOMPUTF16._IOwnership _12967_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12968_recIdents;
                      RAST._IExpr _out6990;
                      DCOMPUTF16._IOwnership _out6991;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6992;
                      DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6990, out _out6991, out _out6992);
                      _12966_recursiveGen = _out6990;
                      _12967_recOwned = _out6991;
                      _12968_recIdents = _out6992;
                      RAST._IExpr _out6993;
                      DCOMPUTF16._IOwnership _out6994;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12966_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12923_nativeToType).dtor_value), _12967_recOwned, expectedOwnership, out _out6993, out _out6994);
                      r = _out6993;
                      resultingOwnership = _out6994;
                      readIdents = _12968_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6995;
                  DCOMPUTF16._IOwnership _out6996;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6997;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_9608_expr, _9609_fromTpe, _12922_b), _12922_b, _9610_toTpe), selfIdent, env, expectedOwnership, out _out6995, out _out6996, out _out6997);
                  r = _out6995;
                  resultingOwnership = _out6996;
                  readIdents = _out6997;
                }
              }
            }
          } else if (_source684.is_Nullable) {
            DAST._IType _12969___mcc_h1314 = _source684.dtor_Nullable_a0;
            {
              RAST._IExpr _12970_recursiveGen;
              DCOMPUTF16._IOwnership _12971_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12972_recIdents;
              RAST._IExpr _out6998;
              DCOMPUTF16._IOwnership _out6999;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7000;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out6998, out _out6999, out _out7000);
              _12970_recursiveGen = _out6998;
              _12971_recOwned = _out6999;
              _12972_recIdents = _out7000;
              r = _12970_recursiveGen;
              if (object.Equals(_12971_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out7001;
              DCOMPUTF16._IOwnership _out7002;
              DCOMPUTF16.COMP.FromOwnership(r, _12971_recOwned, expectedOwnership, out _out7001, out _out7002);
              r = _out7001;
              resultingOwnership = _out7002;
              readIdents = _12972_recIdents;
            }
          } else if (_source684.is_Tuple) {
            Dafny.ISequence<DAST._IType> _12973___mcc_h1316 = _source684.dtor_Tuple_a0;
            {
              RAST._IType _12974_fromTpeGen;
              RAST._IType _out7003;
              _out7003 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12974_fromTpeGen = _out7003;
              RAST._IType _12975_toTpeGen;
              RAST._IType _out7004;
              _out7004 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12975_toTpeGen = _out7004;
              RAST._IExpr _12976_recursiveGen;
              DCOMPUTF16._IOwnership _12977_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12978_recIdents;
              RAST._IExpr _out7005;
              DCOMPUTF16._IOwnership _out7006;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7007;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7005, out _out7006, out _out7007);
              _12976_recursiveGen = _out7005;
              _12977_recOwned = _out7006;
              _12978_recIdents = _out7007;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12976_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12974_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12975_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7008;
              DCOMPUTF16._IOwnership _out7009;
              DCOMPUTF16.COMP.FromOwnership(r, _12977_recOwned, expectedOwnership, out _out7008, out _out7009);
              r = _out7008;
              resultingOwnership = _out7009;
              readIdents = _12978_recIdents;
            }
          } else if (_source684.is_Array) {
            DAST._IType _12979___mcc_h1318 = _source684.dtor_element;
            BigInteger _12980___mcc_h1319 = _source684.dtor_dims;
            {
              RAST._IType _12981_fromTpeGen;
              RAST._IType _out7010;
              _out7010 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12981_fromTpeGen = _out7010;
              RAST._IType _12982_toTpeGen;
              RAST._IType _out7011;
              _out7011 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12982_toTpeGen = _out7011;
              RAST._IExpr _12983_recursiveGen;
              DCOMPUTF16._IOwnership _12984_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12985_recIdents;
              RAST._IExpr _out7012;
              DCOMPUTF16._IOwnership _out7013;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7014;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7012, out _out7013, out _out7014);
              _12983_recursiveGen = _out7012;
              _12984_recOwned = _out7013;
              _12985_recIdents = _out7014;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12983_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12981_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12982_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7015;
              DCOMPUTF16._IOwnership _out7016;
              DCOMPUTF16.COMP.FromOwnership(r, _12984_recOwned, expectedOwnership, out _out7015, out _out7016);
              r = _out7015;
              resultingOwnership = _out7016;
              readIdents = _12985_recIdents;
            }
          } else if (_source684.is_Seq) {
            DAST._IType _12986___mcc_h1322 = _source684.dtor_element;
            {
              RAST._IType _12987_fromTpeGen;
              RAST._IType _out7017;
              _out7017 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12987_fromTpeGen = _out7017;
              RAST._IType _12988_toTpeGen;
              RAST._IType _out7018;
              _out7018 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12988_toTpeGen = _out7018;
              RAST._IExpr _12989_recursiveGen;
              DCOMPUTF16._IOwnership _12990_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12991_recIdents;
              RAST._IExpr _out7019;
              DCOMPUTF16._IOwnership _out7020;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7021;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7019, out _out7020, out _out7021);
              _12989_recursiveGen = _out7019;
              _12990_recOwned = _out7020;
              _12991_recIdents = _out7021;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12989_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12987_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12988_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7022;
              DCOMPUTF16._IOwnership _out7023;
              DCOMPUTF16.COMP.FromOwnership(r, _12990_recOwned, expectedOwnership, out _out7022, out _out7023);
              r = _out7022;
              resultingOwnership = _out7023;
              readIdents = _12991_recIdents;
            }
          } else if (_source684.is_Set) {
            DAST._IType _12992___mcc_h1324 = _source684.dtor_element;
            {
              RAST._IType _12993_fromTpeGen;
              RAST._IType _out7024;
              _out7024 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12993_fromTpeGen = _out7024;
              RAST._IType _12994_toTpeGen;
              RAST._IType _out7025;
              _out7025 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _12994_toTpeGen = _out7025;
              RAST._IExpr _12995_recursiveGen;
              DCOMPUTF16._IOwnership _12996_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12997_recIdents;
              RAST._IExpr _out7026;
              DCOMPUTF16._IOwnership _out7027;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7028;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7026, out _out7027, out _out7028);
              _12995_recursiveGen = _out7026;
              _12996_recOwned = _out7027;
              _12997_recIdents = _out7028;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12995_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12993_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12994_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7029;
              DCOMPUTF16._IOwnership _out7030;
              DCOMPUTF16.COMP.FromOwnership(r, _12996_recOwned, expectedOwnership, out _out7029, out _out7030);
              r = _out7029;
              resultingOwnership = _out7030;
              readIdents = _12997_recIdents;
            }
          } else if (_source684.is_Multiset) {
            DAST._IType _12998___mcc_h1326 = _source684.dtor_element;
            {
              RAST._IType _12999_fromTpeGen;
              RAST._IType _out7031;
              _out7031 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _12999_fromTpeGen = _out7031;
              RAST._IType _13000_toTpeGen;
              RAST._IType _out7032;
              _out7032 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13000_toTpeGen = _out7032;
              RAST._IExpr _13001_recursiveGen;
              DCOMPUTF16._IOwnership _13002_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13003_recIdents;
              RAST._IExpr _out7033;
              DCOMPUTF16._IOwnership _out7034;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7035;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7033, out _out7034, out _out7035);
              _13001_recursiveGen = _out7033;
              _13002_recOwned = _out7034;
              _13003_recIdents = _out7035;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13001_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12999_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13000_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7036;
              DCOMPUTF16._IOwnership _out7037;
              DCOMPUTF16.COMP.FromOwnership(r, _13002_recOwned, expectedOwnership, out _out7036, out _out7037);
              r = _out7036;
              resultingOwnership = _out7037;
              readIdents = _13003_recIdents;
            }
          } else if (_source684.is_Map) {
            DAST._IType _13004___mcc_h1328 = _source684.dtor_key;
            DAST._IType _13005___mcc_h1329 = _source684.dtor_value;
            {
              RAST._IType _13006_fromTpeGen;
              RAST._IType _out7038;
              _out7038 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _13006_fromTpeGen = _out7038;
              RAST._IType _13007_toTpeGen;
              RAST._IType _out7039;
              _out7039 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13007_toTpeGen = _out7039;
              RAST._IExpr _13008_recursiveGen;
              DCOMPUTF16._IOwnership _13009_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13010_recIdents;
              RAST._IExpr _out7040;
              DCOMPUTF16._IOwnership _out7041;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7042;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7040, out _out7041, out _out7042);
              _13008_recursiveGen = _out7040;
              _13009_recOwned = _out7041;
              _13010_recIdents = _out7042;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13008_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13006_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13007_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7043;
              DCOMPUTF16._IOwnership _out7044;
              DCOMPUTF16.COMP.FromOwnership(r, _13009_recOwned, expectedOwnership, out _out7043, out _out7044);
              r = _out7043;
              resultingOwnership = _out7044;
              readIdents = _13010_recIdents;
            }
          } else if (_source684.is_SetBuilder) {
            DAST._IType _13011___mcc_h1332 = _source684.dtor_element;
            {
              RAST._IType _13012_fromTpeGen;
              RAST._IType _out7045;
              _out7045 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _13012_fromTpeGen = _out7045;
              RAST._IType _13013_toTpeGen;
              RAST._IType _out7046;
              _out7046 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13013_toTpeGen = _out7046;
              RAST._IExpr _13014_recursiveGen;
              DCOMPUTF16._IOwnership _13015_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13016_recIdents;
              RAST._IExpr _out7047;
              DCOMPUTF16._IOwnership _out7048;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7049;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7047, out _out7048, out _out7049);
              _13014_recursiveGen = _out7047;
              _13015_recOwned = _out7048;
              _13016_recIdents = _out7049;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13014_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13012_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13013_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7050;
              DCOMPUTF16._IOwnership _out7051;
              DCOMPUTF16.COMP.FromOwnership(r, _13015_recOwned, expectedOwnership, out _out7050, out _out7051);
              r = _out7050;
              resultingOwnership = _out7051;
              readIdents = _13016_recIdents;
            }
          } else if (_source684.is_MapBuilder) {
            DAST._IType _13017___mcc_h1334 = _source684.dtor_key;
            DAST._IType _13018___mcc_h1335 = _source684.dtor_value;
            {
              RAST._IType _13019_fromTpeGen;
              RAST._IType _out7052;
              _out7052 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _13019_fromTpeGen = _out7052;
              RAST._IType _13020_toTpeGen;
              RAST._IType _out7053;
              _out7053 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13020_toTpeGen = _out7053;
              RAST._IExpr _13021_recursiveGen;
              DCOMPUTF16._IOwnership _13022_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13023_recIdents;
              RAST._IExpr _out7054;
              DCOMPUTF16._IOwnership _out7055;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7056;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7054, out _out7055, out _out7056);
              _13021_recursiveGen = _out7054;
              _13022_recOwned = _out7055;
              _13023_recIdents = _out7056;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13021_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13019_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13020_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7057;
              DCOMPUTF16._IOwnership _out7058;
              DCOMPUTF16.COMP.FromOwnership(r, _13022_recOwned, expectedOwnership, out _out7057, out _out7058);
              r = _out7057;
              resultingOwnership = _out7058;
              readIdents = _13023_recIdents;
            }
          } else if (_source684.is_Arrow) {
            Dafny.ISequence<DAST._IType> _13024___mcc_h1338 = _source684.dtor_args;
            DAST._IType _13025___mcc_h1339 = _source684.dtor_result;
            {
              RAST._IType _13026_fromTpeGen;
              RAST._IType _out7059;
              _out7059 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _13026_fromTpeGen = _out7059;
              RAST._IType _13027_toTpeGen;
              RAST._IType _out7060;
              _out7060 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13027_toTpeGen = _out7060;
              RAST._IExpr _13028_recursiveGen;
              DCOMPUTF16._IOwnership _13029_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13030_recIdents;
              RAST._IExpr _out7061;
              DCOMPUTF16._IOwnership _out7062;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7063;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7061, out _out7062, out _out7063);
              _13028_recursiveGen = _out7061;
              _13029_recOwned = _out7062;
              _13030_recIdents = _out7063;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13028_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13026_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13027_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7064;
              DCOMPUTF16._IOwnership _out7065;
              DCOMPUTF16.COMP.FromOwnership(r, _13029_recOwned, expectedOwnership, out _out7064, out _out7065);
              r = _out7064;
              resultingOwnership = _out7065;
              readIdents = _13030_recIdents;
            }
          } else if (_source684.is_Primitive) {
            DAST._IPrimitive _13031___mcc_h1342 = _source684.dtor_Primitive_a0;
            {
              RAST._IType _13032_fromTpeGen;
              RAST._IType _out7066;
              _out7066 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _13032_fromTpeGen = _out7066;
              RAST._IType _13033_toTpeGen;
              RAST._IType _out7067;
              _out7067 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13033_toTpeGen = _out7067;
              RAST._IExpr _13034_recursiveGen;
              DCOMPUTF16._IOwnership _13035_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13036_recIdents;
              RAST._IExpr _out7068;
              DCOMPUTF16._IOwnership _out7069;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7070;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7068, out _out7069, out _out7070);
              _13034_recursiveGen = _out7068;
              _13035_recOwned = _out7069;
              _13036_recIdents = _out7070;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13034_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13032_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13033_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7071;
              DCOMPUTF16._IOwnership _out7072;
              DCOMPUTF16.COMP.FromOwnership(r, _13035_recOwned, expectedOwnership, out _out7071, out _out7072);
              r = _out7071;
              resultingOwnership = _out7072;
              readIdents = _13036_recIdents;
            }
          } else if (_source684.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _13037___mcc_h1344 = _source684.dtor_Passthrough_a0;
            {
              RAST._IType _13038_fromTpeGen;
              RAST._IType _out7073;
              _out7073 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _13038_fromTpeGen = _out7073;
              RAST._IType _13039_toTpeGen;
              RAST._IType _out7074;
              _out7074 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13039_toTpeGen = _out7074;
              RAST._IExpr _13040_recursiveGen;
              DCOMPUTF16._IOwnership _13041_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13042_recIdents;
              RAST._IExpr _out7075;
              DCOMPUTF16._IOwnership _out7076;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7077;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7075, out _out7076, out _out7077);
              _13040_recursiveGen = _out7075;
              _13041_recOwned = _out7076;
              _13042_recIdents = _out7077;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13040_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13038_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13039_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7078;
              DCOMPUTF16._IOwnership _out7079;
              DCOMPUTF16.COMP.FromOwnership(r, _13041_recOwned, expectedOwnership, out _out7078, out _out7079);
              r = _out7078;
              resultingOwnership = _out7079;
              readIdents = _13042_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _13043___mcc_h1346 = _source684.dtor_TypeArg_a0;
            {
              RAST._IType _13044_fromTpeGen;
              RAST._IType _out7080;
              _out7080 = DCOMPUTF16.COMP.GenType(_9609_fromTpe, true, false);
              _13044_fromTpeGen = _out7080;
              RAST._IType _13045_toTpeGen;
              RAST._IType _out7081;
              _out7081 = DCOMPUTF16.COMP.GenType(_9610_toTpe, true, false);
              _13045_toTpeGen = _out7081;
              RAST._IExpr _13046_recursiveGen;
              DCOMPUTF16._IOwnership _13047_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13048_recIdents;
              RAST._IExpr _out7082;
              DCOMPUTF16._IOwnership _out7083;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7084;
              DCOMPUTF16.COMP.GenExpr(_9608_expr, selfIdent, env, expectedOwnership, out _out7082, out _out7083, out _out7084);
              _13046_recursiveGen = _out7082;
              _13047_recOwned = _out7083;
              _13048_recIdents = _out7084;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13046_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_13044_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_13045_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out7085;
              DCOMPUTF16._IOwnership _out7086;
              DCOMPUTF16.COMP.FromOwnership(r, _13047_recOwned, expectedOwnership, out _out7085, out _out7086);
              r = _out7085;
              resultingOwnership = _out7086;
              readIdents = _13048_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source689 = e;
      if (_source689.is_Literal) {
        DAST._ILiteral _13049___mcc_h0 = _source689.dtor_Literal_a0;
        RAST._IExpr _out7087;
        DCOMPUTF16._IOwnership _out7088;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7089;
        DCOMPUTF16.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out7087, out _out7088, out _out7089);
        r = _out7087;
        resultingOwnership = _out7088;
        readIdents = _out7089;
      } else if (_source689.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _13050___mcc_h1 = _source689.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _13051_name = _13050___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _13052_rName;
          _13052_rName = DCOMPUTF16.__default.escapeIdent(_13051_name);
          r = RAST.Expr.create_Identifier(_13052_rName);
          Std.Wrappers._IOption<RAST._IType> _13053_tpe;
          _13053_tpe = (env).GetType(_13052_rName);
          Std.Wrappers._IOption<RAST._IType> _13054_placeboOpt;
          _13054_placeboOpt = (((_13053_tpe).is_Some) ? (((_13053_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _13055_currentlyBorrowed;
          _13055_currentlyBorrowed = (env).IsBorrowed(_13051_name);
          bool _13056_noNeedOfClone;
          _13056_noNeedOfClone = (env).HasCopySemantics(_13051_name);
          if ((_13054_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _13055_currentlyBorrowed = false;
            _13056_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
            if (!(_13056_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (_13055_currentlyBorrowed) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_13051_name);
          return ;
        }
      } else if (_source689.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13057___mcc_h2 = _source689.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13058_path = _13057___mcc_h2;
        {
          RAST._IExpr _out7090;
          _out7090 = DCOMPUTF16.COMP.GenPathExpr(_13058_path);
          r = _out7090;
          RAST._IExpr _out7091;
          DCOMPUTF16._IOwnership _out7092;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7091, out _out7092);
          r = _out7091;
          resultingOwnership = _out7092;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source689.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _13059___mcc_h3 = _source689.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _13060_values = _13059___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _13061_s;
          _13061_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13062_i;
          _13062_i = BigInteger.Zero;
          while ((_13062_i) < (new BigInteger((_13060_values).Count))) {
            if ((_13062_i).Sign == 1) {
              _13061_s = Dafny.Sequence<Dafny.Rune>.Concat(_13061_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _13063_recursiveGen;
            DCOMPUTF16._IOwnership _13064___v111;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13065_recIdents;
            RAST._IExpr _out7093;
            DCOMPUTF16._IOwnership _out7094;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7095;
            DCOMPUTF16.COMP.GenExpr((_13060_values).Select(_13062_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7093, out _out7094, out _out7095);
            _13063_recursiveGen = _out7093;
            _13064___v111 = _out7094;
            _13065_recIdents = _out7095;
            _13061_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13061_s, (_13063_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13065_recIdents);
            _13062_i = (_13062_i) + (BigInteger.One);
          }
          _13061_s = Dafny.Sequence<Dafny.Rune>.Concat(_13061_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_13061_s);
          RAST._IExpr _out7096;
          DCOMPUTF16._IOwnership _out7097;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7096, out _out7097);
          r = _out7096;
          resultingOwnership = _out7097;
          return ;
        }
      } else if (_source689.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13066___mcc_h4 = _source689.dtor_path;
        Dafny.ISequence<DAST._IType> _13067___mcc_h5 = _source689.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _13068___mcc_h6 = _source689.dtor_args;
        Dafny.ISequence<DAST._IExpression> _13069_args = _13068___mcc_h6;
        Dafny.ISequence<DAST._IType> _13070_typeArgs = _13067___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13071_path = _13066___mcc_h4;
        {
          RAST._IExpr _out7098;
          _out7098 = DCOMPUTF16.COMP.GenPathExpr(_13071_path);
          r = _out7098;
          if ((new BigInteger((_13070_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _13072_typeExprs;
            _13072_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi36 = new BigInteger((_13070_typeArgs).Count);
            for (BigInteger _13073_i = BigInteger.Zero; _13073_i < _hi36; _13073_i++) {
              RAST._IType _13074_typeExpr;
              RAST._IType _out7099;
              _out7099 = DCOMPUTF16.COMP.GenType((_13070_typeArgs).Select(_13073_i), false, false);
              _13074_typeExpr = _out7099;
              _13072_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_13072_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_13074_typeExpr));
            }
            r = (r).ApplyType(_13072_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _13075_arguments;
          _13075_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi37 = new BigInteger((_13069_args).Count);
          for (BigInteger _13076_i = BigInteger.Zero; _13076_i < _hi37; _13076_i++) {
            RAST._IExpr _13077_recursiveGen;
            DCOMPUTF16._IOwnership _13078___v112;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13079_recIdents;
            RAST._IExpr _out7100;
            DCOMPUTF16._IOwnership _out7101;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7102;
            DCOMPUTF16.COMP.GenExpr((_13069_args).Select(_13076_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7100, out _out7101, out _out7102);
            _13077_recursiveGen = _out7100;
            _13078___v112 = _out7101;
            _13079_recIdents = _out7102;
            _13075_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13075_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_13077_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13079_recIdents);
          }
          r = (r).Apply(_13075_arguments);
          RAST._IExpr _out7103;
          DCOMPUTF16._IOwnership _out7104;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7103, out _out7104);
          r = _out7103;
          resultingOwnership = _out7104;
          return ;
        }
      } else if (_source689.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _13080___mcc_h7 = _source689.dtor_dims;
        DAST._IType _13081___mcc_h8 = _source689.dtor_typ;
        DAST._IType _13082_typ = _13081___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _13083_dims = _13080___mcc_h7;
        {
          BigInteger _13084_i;
          _13084_i = (new BigInteger((_13083_dims).Count)) - (BigInteger.One);
          RAST._IType _13085_genTyp;
          RAST._IType _out7105;
          _out7105 = DCOMPUTF16.COMP.GenType(_13082_typ, false, false);
          _13085_genTyp = _out7105;
          Dafny.ISequence<Dafny.Rune> _13086_s;
          _13086_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_13085_genTyp)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_13084_i).Sign != -1) {
            RAST._IExpr _13087_recursiveGen;
            DCOMPUTF16._IOwnership _13088___v113;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13089_recIdents;
            RAST._IExpr _out7106;
            DCOMPUTF16._IOwnership _out7107;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7108;
            DCOMPUTF16.COMP.GenExpr((_13083_dims).Select(_13084_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7106, out _out7107, out _out7108);
            _13087_recursiveGen = _out7106;
            _13088___v113 = _out7107;
            _13089_recIdents = _out7108;
            _13086_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _13086_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_13087_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13089_recIdents);
            _13084_i = (_13084_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_13086_s);
          RAST._IExpr _out7109;
          DCOMPUTF16._IOwnership _out7110;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7109, out _out7110);
          r = _out7109;
          resultingOwnership = _out7110;
          return ;
        }
      } else if (_source689.is_DatatypeValue) {
        DAST._IDatatypeType _13090___mcc_h9 = _source689.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _13091___mcc_h10 = _source689.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _13092___mcc_h11 = _source689.dtor_variant;
        bool _13093___mcc_h12 = _source689.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13094___mcc_h13 = _source689.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13095_values = _13094___mcc_h13;
        bool _13096_isCo = _13093___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _13097_variant = _13092___mcc_h11;
        Dafny.ISequence<DAST._IType> _13098_typeArgs = _13091___mcc_h10;
        DAST._IDatatypeType _13099_datatypeType = _13090___mcc_h9;
        {
          RAST._IExpr _out7111;
          _out7111 = DCOMPUTF16.COMP.GenPathExpr((_13099_datatypeType).dtor_path);
          r = _out7111;
          Dafny.ISequence<RAST._IType> _13100_genTypeArgs;
          _13100_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi38 = new BigInteger((_13098_typeArgs).Count);
          for (BigInteger _13101_i = BigInteger.Zero; _13101_i < _hi38; _13101_i++) {
            RAST._IType _13102_typeExpr;
            RAST._IType _out7112;
            _out7112 = DCOMPUTF16.COMP.GenType((_13098_typeArgs).Select(_13101_i), false, false);
            _13102_typeExpr = _out7112;
            _13100_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_13100_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_13102_typeExpr));
          }
          if ((new BigInteger((_13098_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_13100_genTypeArgs);
          }
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(_13097_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _13103_assignments;
          _13103_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi39 = new BigInteger((_13095_values).Count);
          for (BigInteger _13104_i = BigInteger.Zero; _13104_i < _hi39; _13104_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs55 = (_13095_values).Select(_13104_i);
            Dafny.ISequence<Dafny.Rune> _13105_name = _let_tmp_rhs55.dtor__0;
            DAST._IExpression _13106_value = _let_tmp_rhs55.dtor__1;
            if (_13096_isCo) {
              RAST._IExpr _13107_recursiveGen;
              DCOMPUTF16._IOwnership _13108___v114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13109_recIdents;
              RAST._IExpr _out7113;
              DCOMPUTF16._IOwnership _out7114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7115;
              DCOMPUTF16.COMP.GenExpr(_13106_value, selfIdent, DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7113, out _out7114, out _out7115);
              _13107_recursiveGen = _out7113;
              _13108___v114 = _out7114;
              _13109_recIdents = _out7115;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13109_recIdents);
              Dafny.ISequence<Dafny.Rune> _13110_allReadCloned;
              _13110_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_13109_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _13111_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_4 in (_13109_recIdents).Elements) {
                  _13111_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_4;
                  if ((_13109_recIdents).Contains(_13111_next)) {
                    goto after__ASSIGN_SUCH_THAT_4;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3099)");
              after__ASSIGN_SUCH_THAT_4: ;
                _13110_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13110_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_13111_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_13111_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _13109_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_13109_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_13111_next));
              }
              Dafny.ISequence<Dafny.Rune> _13112_assigned;
              _13112_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _13110_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_13107_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _13103_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_13103_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_13105_name), RAST.Expr.create_RawExpr(_13112_assigned))));
            } else {
              RAST._IExpr _13113_recursiveGen;
              DCOMPUTF16._IOwnership _13114___v115;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13115_recIdents;
              RAST._IExpr _out7116;
              DCOMPUTF16._IOwnership _out7117;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7118;
              DCOMPUTF16.COMP.GenExpr(_13106_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7116, out _out7117, out _out7118);
              _13113_recursiveGen = _out7116;
              _13114___v115 = _out7117;
              _13115_recIdents = _out7118;
              _13103_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_13103_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_13105_name), _13113_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13115_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _13103_assignments);
          if (DCOMPUTF16.COMP.IsRcWrapped((_13099_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out7119;
          DCOMPUTF16._IOwnership _out7120;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7119, out _out7120);
          r = _out7119;
          resultingOwnership = _out7120;
          return ;
        }
      } else if (_source689.is_Convert) {
        DAST._IExpression _13116___mcc_h14 = _source689.dtor_value;
        DAST._IType _13117___mcc_h15 = _source689.dtor_from;
        DAST._IType _13118___mcc_h16 = _source689.dtor_typ;
        {
          RAST._IExpr _out7121;
          DCOMPUTF16._IOwnership _out7122;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7123;
          DCOMPUTF16.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out7121, out _out7122, out _out7123);
          r = _out7121;
          resultingOwnership = _out7122;
          readIdents = _out7123;
        }
      } else if (_source689.is_SeqConstruct) {
        DAST._IExpression _13119___mcc_h17 = _source689.dtor_length;
        DAST._IExpression _13120___mcc_h18 = _source689.dtor_elem;
        DAST._IExpression _13121_expr = _13120___mcc_h18;
        DAST._IExpression _13122_length = _13119___mcc_h17;
        {
          RAST._IExpr _13123_recursiveGen;
          DCOMPUTF16._IOwnership _13124___v119;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13125_recIdents;
          RAST._IExpr _out7124;
          DCOMPUTF16._IOwnership _out7125;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7126;
          DCOMPUTF16.COMP.GenExpr(_13121_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7124, out _out7125, out _out7126);
          _13123_recursiveGen = _out7124;
          _13124___v119 = _out7125;
          _13125_recIdents = _out7126;
          RAST._IExpr _13126_lengthGen;
          DCOMPUTF16._IOwnership _13127___v120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13128_lengthIdents;
          RAST._IExpr _out7127;
          DCOMPUTF16._IOwnership _out7128;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7129;
          DCOMPUTF16.COMP.GenExpr(_13122_length, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7127, out _out7128, out _out7129);
          _13126_lengthGen = _out7127;
          _13127___v120 = _out7128;
          _13128_lengthIdents = _out7129;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_13123_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_13126_lengthGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13125_recIdents, _13128_lengthIdents);
          RAST._IExpr _out7130;
          DCOMPUTF16._IOwnership _out7131;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7130, out _out7131);
          r = _out7130;
          resultingOwnership = _out7131;
          return ;
        }
      } else if (_source689.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _13129___mcc_h19 = _source689.dtor_elements;
        DAST._IType _13130___mcc_h20 = _source689.dtor_typ;
        DAST._IType _13131_typ = _13130___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _13132_exprs = _13129___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _13133_genTpe;
          RAST._IType _out7132;
          _out7132 = DCOMPUTF16.COMP.GenType(_13131_typ, false, false);
          _13133_genTpe = _out7132;
          BigInteger _13134_i;
          _13134_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _13135_args;
          _13135_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_13134_i) < (new BigInteger((_13132_exprs).Count))) {
            RAST._IExpr _13136_recursiveGen;
            DCOMPUTF16._IOwnership _13137___v121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13138_recIdents;
            RAST._IExpr _out7133;
            DCOMPUTF16._IOwnership _out7134;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7135;
            DCOMPUTF16.COMP.GenExpr((_13132_exprs).Select(_13134_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7133, out _out7134, out _out7135);
            _13136_recursiveGen = _out7133;
            _13137___v121 = _out7134;
            _13138_recIdents = _out7135;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13138_recIdents);
            _13135_args = Dafny.Sequence<RAST._IExpr>.Concat(_13135_args, Dafny.Sequence<RAST._IExpr>.FromElements(_13136_recursiveGen));
            _13134_i = (_13134_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_13135_args);
          if ((new BigInteger((_13135_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_13133_genTpe));
          }
          RAST._IExpr _out7136;
          DCOMPUTF16._IOwnership _out7137;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7136, out _out7137);
          r = _out7136;
          resultingOwnership = _out7137;
          return ;
        }
      } else if (_source689.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _13139___mcc_h21 = _source689.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _13140_exprs = _13139___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _13141_generatedValues;
          _13141_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13142_i;
          _13142_i = BigInteger.Zero;
          while ((_13142_i) < (new BigInteger((_13140_exprs).Count))) {
            RAST._IExpr _13143_recursiveGen;
            DCOMPUTF16._IOwnership _13144___v122;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13145_recIdents;
            RAST._IExpr _out7138;
            DCOMPUTF16._IOwnership _out7139;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7140;
            DCOMPUTF16.COMP.GenExpr((_13140_exprs).Select(_13142_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7138, out _out7139, out _out7140);
            _13143_recursiveGen = _out7138;
            _13144___v122 = _out7139;
            _13145_recIdents = _out7140;
            _13141_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_13141_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_13143_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13145_recIdents);
            _13142_i = (_13142_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_13141_generatedValues);
          RAST._IExpr _out7141;
          DCOMPUTF16._IOwnership _out7142;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7141, out _out7142);
          r = _out7141;
          resultingOwnership = _out7142;
          return ;
        }
      } else if (_source689.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _13146___mcc_h22 = _source689.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _13147_exprs = _13146___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _13148_generatedValues;
          _13148_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13149_i;
          _13149_i = BigInteger.Zero;
          while ((_13149_i) < (new BigInteger((_13147_exprs).Count))) {
            RAST._IExpr _13150_recursiveGen;
            DCOMPUTF16._IOwnership _13151___v123;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13152_recIdents;
            RAST._IExpr _out7143;
            DCOMPUTF16._IOwnership _out7144;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7145;
            DCOMPUTF16.COMP.GenExpr((_13147_exprs).Select(_13149_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7143, out _out7144, out _out7145);
            _13150_recursiveGen = _out7143;
            _13151___v123 = _out7144;
            _13152_recIdents = _out7145;
            _13148_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_13148_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_13150_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13152_recIdents);
            _13149_i = (_13149_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_13148_generatedValues);
          RAST._IExpr _out7146;
          DCOMPUTF16._IOwnership _out7147;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7146, out _out7147);
          r = _out7146;
          resultingOwnership = _out7147;
          return ;
        }
      } else if (_source689.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13153___mcc_h23 = _source689.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13154_mapElems = _13153___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _13155_generatedValues;
          _13155_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _13156_i;
          _13156_i = BigInteger.Zero;
          while ((_13156_i) < (new BigInteger((_13154_mapElems).Count))) {
            RAST._IExpr _13157_recursiveGenKey;
            DCOMPUTF16._IOwnership _13158___v125;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13159_recIdentsKey;
            RAST._IExpr _out7148;
            DCOMPUTF16._IOwnership _out7149;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7150;
            DCOMPUTF16.COMP.GenExpr(((_13154_mapElems).Select(_13156_i)).dtor__0, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7148, out _out7149, out _out7150);
            _13157_recursiveGenKey = _out7148;
            _13158___v125 = _out7149;
            _13159_recIdentsKey = _out7150;
            RAST._IExpr _13160_recursiveGenValue;
            DCOMPUTF16._IOwnership _13161___v126;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13162_recIdentsValue;
            RAST._IExpr _out7151;
            DCOMPUTF16._IOwnership _out7152;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7153;
            DCOMPUTF16.COMP.GenExpr(((_13154_mapElems).Select(_13156_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7151, out _out7152, out _out7153);
            _13160_recursiveGenValue = _out7151;
            _13161___v126 = _out7152;
            _13162_recIdentsValue = _out7153;
            _13155_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_13155_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_13157_recursiveGenKey, _13160_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13159_recIdentsKey), _13162_recIdentsValue);
            _13156_i = (_13156_i) + (BigInteger.One);
          }
          _13156_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _13163_arguments;
          _13163_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_13156_i) < (new BigInteger((_13155_generatedValues).Count))) {
            RAST._IExpr _13164_genKey;
            _13164_genKey = ((_13155_generatedValues).Select(_13156_i)).dtor__0;
            RAST._IExpr _13165_genValue;
            _13165_genValue = ((_13155_generatedValues).Select(_13156_i)).dtor__1;
            _13163_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13163_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _13164_genKey, _13165_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _13156_i = (_13156_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_13163_arguments);
          RAST._IExpr _out7154;
          DCOMPUTF16._IOwnership _out7155;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7154, out _out7155);
          r = _out7154;
          resultingOwnership = _out7155;
          return ;
        }
      } else if (_source689.is_MapBuilder) {
        DAST._IType _13166___mcc_h24 = _source689.dtor_keyType;
        DAST._IType _13167___mcc_h25 = _source689.dtor_valueType;
        DAST._IType _13168_valueType = _13167___mcc_h25;
        DAST._IType _13169_keyType = _13166___mcc_h24;
        {
          RAST._IType _13170_kType;
          RAST._IType _out7156;
          _out7156 = DCOMPUTF16.COMP.GenType(_13169_keyType, false, false);
          _13170_kType = _out7156;
          RAST._IType _13171_vType;
          RAST._IType _out7157;
          _out7157 = DCOMPUTF16.COMP.GenType(_13168_valueType, false, false);
          _13171_vType = _out7157;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_13170_kType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_13171_vType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out7158;
          DCOMPUTF16._IOwnership _out7159;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7158, out _out7159);
          r = _out7158;
          resultingOwnership = _out7159;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source689.is_SeqUpdate) {
        DAST._IExpression _13172___mcc_h26 = _source689.dtor_expr;
        DAST._IExpression _13173___mcc_h27 = _source689.dtor_indexExpr;
        DAST._IExpression _13174___mcc_h28 = _source689.dtor_value;
        DAST._IExpression _13175_value = _13174___mcc_h28;
        DAST._IExpression _13176_index = _13173___mcc_h27;
        DAST._IExpression _13177_expr = _13172___mcc_h26;
        {
          RAST._IExpr _13178_exprR;
          DCOMPUTF16._IOwnership _13179___v127;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13180_exprIdents;
          RAST._IExpr _out7160;
          DCOMPUTF16._IOwnership _out7161;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7162;
          DCOMPUTF16.COMP.GenExpr(_13177_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7160, out _out7161, out _out7162);
          _13178_exprR = _out7160;
          _13179___v127 = _out7161;
          _13180_exprIdents = _out7162;
          RAST._IExpr _13181_indexR;
          DCOMPUTF16._IOwnership _13182_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13183_indexIdents;
          RAST._IExpr _out7163;
          DCOMPUTF16._IOwnership _out7164;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7165;
          DCOMPUTF16.COMP.GenExpr(_13176_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7163, out _out7164, out _out7165);
          _13181_indexR = _out7163;
          _13182_indexOwnership = _out7164;
          _13183_indexIdents = _out7165;
          RAST._IExpr _13184_valueR;
          DCOMPUTF16._IOwnership _13185_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13186_valueIdents;
          RAST._IExpr _out7166;
          DCOMPUTF16._IOwnership _out7167;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7168;
          DCOMPUTF16.COMP.GenExpr(_13175_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7166, out _out7167, out _out7168);
          _13184_valueR = _out7166;
          _13185_valueOwnership = _out7167;
          _13186_valueIdents = _out7168;
          r = ((_13178_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_13181_indexR, _13184_valueR));
          RAST._IExpr _out7169;
          DCOMPUTF16._IOwnership _out7170;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7169, out _out7170);
          r = _out7169;
          resultingOwnership = _out7170;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13180_exprIdents, _13183_indexIdents), _13186_valueIdents);
          return ;
        }
      } else if (_source689.is_MapUpdate) {
        DAST._IExpression _13187___mcc_h29 = _source689.dtor_expr;
        DAST._IExpression _13188___mcc_h30 = _source689.dtor_indexExpr;
        DAST._IExpression _13189___mcc_h31 = _source689.dtor_value;
        DAST._IExpression _13190_value = _13189___mcc_h31;
        DAST._IExpression _13191_index = _13188___mcc_h30;
        DAST._IExpression _13192_expr = _13187___mcc_h29;
        {
          RAST._IExpr _13193_exprR;
          DCOMPUTF16._IOwnership _13194___v128;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13195_exprIdents;
          RAST._IExpr _out7171;
          DCOMPUTF16._IOwnership _out7172;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7173;
          DCOMPUTF16.COMP.GenExpr(_13192_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7171, out _out7172, out _out7173);
          _13193_exprR = _out7171;
          _13194___v128 = _out7172;
          _13195_exprIdents = _out7173;
          RAST._IExpr _13196_indexR;
          DCOMPUTF16._IOwnership _13197_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13198_indexIdents;
          RAST._IExpr _out7174;
          DCOMPUTF16._IOwnership _out7175;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7176;
          DCOMPUTF16.COMP.GenExpr(_13191_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7174, out _out7175, out _out7176);
          _13196_indexR = _out7174;
          _13197_indexOwnership = _out7175;
          _13198_indexIdents = _out7176;
          RAST._IExpr _13199_valueR;
          DCOMPUTF16._IOwnership _13200_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13201_valueIdents;
          RAST._IExpr _out7177;
          DCOMPUTF16._IOwnership _out7178;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7179;
          DCOMPUTF16.COMP.GenExpr(_13190_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7177, out _out7178, out _out7179);
          _13199_valueR = _out7177;
          _13200_valueOwnership = _out7178;
          _13201_valueIdents = _out7179;
          r = ((_13193_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_13196_indexR, _13199_valueR));
          RAST._IExpr _out7180;
          DCOMPUTF16._IOwnership _out7181;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7180, out _out7181);
          r = _out7180;
          resultingOwnership = _out7181;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13195_exprIdents, _13198_indexIdents), _13201_valueIdents);
          return ;
        }
      } else if (_source689.is_SetBuilder) {
        DAST._IType _13202___mcc_h32 = _source689.dtor_elemType;
        DAST._IType _13203_elemType = _13202___mcc_h32;
        {
          RAST._IType _13204_eType;
          RAST._IType _out7182;
          _out7182 = DCOMPUTF16.COMP.GenType(_13203_elemType, false, false);
          _13204_eType = _out7182;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_13204_eType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out7183;
          DCOMPUTF16._IOwnership _out7184;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7183, out _out7184);
          r = _out7183;
          resultingOwnership = _out7184;
          return ;
        }
      } else if (_source689.is_ToMultiset) {
        DAST._IExpression _13205___mcc_h33 = _source689.dtor_ToMultiset_a0;
        DAST._IExpression _13206_expr = _13205___mcc_h33;
        {
          RAST._IExpr _13207_recursiveGen;
          DCOMPUTF16._IOwnership _13208___v124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13209_recIdents;
          RAST._IExpr _out7185;
          DCOMPUTF16._IOwnership _out7186;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7187;
          DCOMPUTF16.COMP.GenExpr(_13206_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7185, out _out7186, out _out7187);
          _13207_recursiveGen = _out7185;
          _13208___v124 = _out7186;
          _13209_recIdents = _out7187;
          r = ((_13207_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _13209_recIdents;
          RAST._IExpr _out7188;
          DCOMPUTF16._IOwnership _out7189;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7188, out _out7189);
          r = _out7188;
          resultingOwnership = _out7189;
          return ;
        }
      } else if (_source689.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source690 = selfIdent;
          if (_source690.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out7190;
              DCOMPUTF16._IOwnership _out7191;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7190, out _out7191);
              r = _out7190;
              resultingOwnership = _out7191;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _13210___mcc_h273 = _source690.dtor_value;
            Dafny.ISequence<Dafny.Rune> _13211_id = _13210___mcc_h273;
            {
              r = RAST.Expr.create_Identifier(_13211_id);
              if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_13211_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_13211_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_13211_id);
            }
          }
          return ;
        }
      } else if (_source689.is_Ite) {
        DAST._IExpression _13212___mcc_h34 = _source689.dtor_cond;
        DAST._IExpression _13213___mcc_h35 = _source689.dtor_thn;
        DAST._IExpression _13214___mcc_h36 = _source689.dtor_els;
        DAST._IExpression _13215_f = _13214___mcc_h36;
        DAST._IExpression _13216_t = _13213___mcc_h35;
        DAST._IExpression _13217_cond = _13212___mcc_h34;
        {
          RAST._IExpr _13218_cond;
          DCOMPUTF16._IOwnership _13219___v129;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13220_recIdentsCond;
          RAST._IExpr _out7192;
          DCOMPUTF16._IOwnership _out7193;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7194;
          DCOMPUTF16.COMP.GenExpr(_13217_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7192, out _out7193, out _out7194);
          _13218_cond = _out7192;
          _13219___v129 = _out7193;
          _13220_recIdentsCond = _out7194;
          Dafny.ISequence<Dafny.Rune> _13221_condString;
          _13221_condString = (_13218_cond)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _13222___v130;
          DCOMPUTF16._IOwnership _13223_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13224___v131;
          RAST._IExpr _out7195;
          DCOMPUTF16._IOwnership _out7196;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7197;
          DCOMPUTF16.COMP.GenExpr(_13216_t, selfIdent, env, expectedOwnership, out _out7195, out _out7196, out _out7197);
          _13222___v130 = _out7195;
          _13223_tHasToBeOwned = _out7196;
          _13224___v131 = _out7197;
          RAST._IExpr _13225_fExpr;
          DCOMPUTF16._IOwnership _13226_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13227_recIdentsF;
          RAST._IExpr _out7198;
          DCOMPUTF16._IOwnership _out7199;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7200;
          DCOMPUTF16.COMP.GenExpr(_13215_f, selfIdent, env, _13223_tHasToBeOwned, out _out7198, out _out7199, out _out7200);
          _13225_fExpr = _out7198;
          _13226_fOwned = _out7199;
          _13227_recIdentsF = _out7200;
          Dafny.ISequence<Dafny.Rune> _13228_fString;
          _13228_fString = (_13225_fExpr)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _13229_tExpr;
          DCOMPUTF16._IOwnership _13230___v132;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13231_recIdentsT;
          RAST._IExpr _out7201;
          DCOMPUTF16._IOwnership _out7202;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7203;
          DCOMPUTF16.COMP.GenExpr(_13216_t, selfIdent, env, _13226_fOwned, out _out7201, out _out7202, out _out7203);
          _13229_tExpr = _out7201;
          _13230___v132 = _out7202;
          _13231_recIdentsT = _out7203;
          Dafny.ISequence<Dafny.Rune> _13232_tString;
          _13232_tString = (_13229_tExpr)._ToString(DCOMPUTF16.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _13221_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _13232_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _13228_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out7204;
          DCOMPUTF16._IOwnership _out7205;
          DCOMPUTF16.COMP.FromOwnership(r, _13226_fOwned, expectedOwnership, out _out7204, out _out7205);
          r = _out7204;
          resultingOwnership = _out7205;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13220_recIdentsCond, _13231_recIdentsT), _13227_recIdentsF);
          return ;
        }
      } else if (_source689.is_UnOp) {
        DAST._IUnaryOp _13233___mcc_h37 = _source689.dtor_unOp;
        DAST._IExpression _13234___mcc_h38 = _source689.dtor_expr;
        DAST.Format._IUnOpFormat _13235___mcc_h39 = _source689.dtor_format1;
        DAST._IUnaryOp _source691 = _13233___mcc_h37;
        if (_source691.is_Not) {
          DAST.Format._IUnOpFormat _13236_format = _13235___mcc_h39;
          DAST._IExpression _13237_e = _13234___mcc_h38;
          {
            RAST._IExpr _13238_recursiveGen;
            DCOMPUTF16._IOwnership _13239___v133;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13240_recIdents;
            RAST._IExpr _out7206;
            DCOMPUTF16._IOwnership _out7207;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7208;
            DCOMPUTF16.COMP.GenExpr(_13237_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7206, out _out7207, out _out7208);
            _13238_recursiveGen = _out7206;
            _13239___v133 = _out7207;
            _13240_recIdents = _out7208;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _13238_recursiveGen, _13236_format);
            RAST._IExpr _out7209;
            DCOMPUTF16._IOwnership _out7210;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7209, out _out7210);
            r = _out7209;
            resultingOwnership = _out7210;
            readIdents = _13240_recIdents;
            return ;
          }
        } else if (_source691.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _13241_format = _13235___mcc_h39;
          DAST._IExpression _13242_e = _13234___mcc_h38;
          {
            RAST._IExpr _13243_recursiveGen;
            DCOMPUTF16._IOwnership _13244___v134;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13245_recIdents;
            RAST._IExpr _out7211;
            DCOMPUTF16._IOwnership _out7212;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7213;
            DCOMPUTF16.COMP.GenExpr(_13242_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7211, out _out7212, out _out7213);
            _13243_recursiveGen = _out7211;
            _13244___v134 = _out7212;
            _13245_recIdents = _out7213;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _13243_recursiveGen, _13241_format);
            RAST._IExpr _out7214;
            DCOMPUTF16._IOwnership _out7215;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7214, out _out7215);
            r = _out7214;
            resultingOwnership = _out7215;
            readIdents = _13245_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _13246_format = _13235___mcc_h39;
          DAST._IExpression _13247_e = _13234___mcc_h38;
          {
            RAST._IExpr _13248_recursiveGen;
            DCOMPUTF16._IOwnership _13249_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13250_recIdents;
            RAST._IExpr _out7216;
            DCOMPUTF16._IOwnership _out7217;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7218;
            DCOMPUTF16.COMP.GenExpr(_13247_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7216, out _out7217, out _out7218);
            _13248_recursiveGen = _out7216;
            _13249_recOwned = _out7217;
            _13250_recIdents = _out7218;
            r = ((_13248_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out7219;
            DCOMPUTF16._IOwnership _out7220;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7219, out _out7220);
            r = _out7219;
            resultingOwnership = _out7220;
            readIdents = _13250_recIdents;
            return ;
          }
        }
      } else if (_source689.is_BinOp) {
        DAST._IBinOp _13251___mcc_h40 = _source689.dtor_op;
        DAST._IExpression _13252___mcc_h41 = _source689.dtor_left;
        DAST._IExpression _13253___mcc_h42 = _source689.dtor_right;
        DAST.Format._IBinOpFormat _13254___mcc_h43 = _source689.dtor_format2;
        RAST._IExpr _out7221;
        DCOMPUTF16._IOwnership _out7222;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7223;
        DCOMPUTF16.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out7221, out _out7222, out _out7223);
        r = _out7221;
        resultingOwnership = _out7222;
        readIdents = _out7223;
      } else if (_source689.is_ArrayLen) {
        DAST._IExpression _13255___mcc_h44 = _source689.dtor_expr;
        BigInteger _13256___mcc_h45 = _source689.dtor_dim;
        BigInteger _13257_dim = _13256___mcc_h45;
        DAST._IExpression _13258_expr = _13255___mcc_h44;
        {
          RAST._IExpr _13259_recursiveGen;
          DCOMPUTF16._IOwnership _13260___v139;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13261_recIdents;
          RAST._IExpr _out7224;
          DCOMPUTF16._IOwnership _out7225;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7226;
          DCOMPUTF16.COMP.GenExpr(_13258_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7224, out _out7225, out _out7226);
          _13259_recursiveGen = _out7224;
          _13260___v139 = _out7225;
          _13261_recIdents = _out7226;
          if ((_13257_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_13259_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _13262_s;
            _13262_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMPUTF16.__default.IND);
            BigInteger _13263_i;
            _13263_i = BigInteger.One;
            while ((_13263_i) < (_13257_dim)) {
              _13262_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _13262_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _13263_i = (_13263_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13259_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _13262_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out7227;
          DCOMPUTF16._IOwnership _out7228;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7227, out _out7228);
          r = _out7227;
          resultingOwnership = _out7228;
          readIdents = _13261_recIdents;
          return ;
        }
      } else if (_source689.is_MapKeys) {
        DAST._IExpression _13264___mcc_h46 = _source689.dtor_expr;
        DAST._IExpression _13265_expr = _13264___mcc_h46;
        {
          RAST._IExpr _13266_recursiveGen;
          DCOMPUTF16._IOwnership _13267___v140;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13268_recIdents;
          RAST._IExpr _out7229;
          DCOMPUTF16._IOwnership _out7230;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7231;
          DCOMPUTF16.COMP.GenExpr(_13265_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7229, out _out7230, out _out7231);
          _13266_recursiveGen = _out7229;
          _13267___v140 = _out7230;
          _13268_recIdents = _out7231;
          readIdents = _13268_recIdents;
          r = ((_13266_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out7232;
          DCOMPUTF16._IOwnership _out7233;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7232, out _out7233);
          r = _out7232;
          resultingOwnership = _out7233;
          return ;
        }
      } else if (_source689.is_MapValues) {
        DAST._IExpression _13269___mcc_h47 = _source689.dtor_expr;
        DAST._IExpression _13270_expr = _13269___mcc_h47;
        {
          RAST._IExpr _13271_recursiveGen;
          DCOMPUTF16._IOwnership _13272___v141;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13273_recIdents;
          RAST._IExpr _out7234;
          DCOMPUTF16._IOwnership _out7235;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7236;
          DCOMPUTF16.COMP.GenExpr(_13270_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7234, out _out7235, out _out7236);
          _13271_recursiveGen = _out7234;
          _13272___v141 = _out7235;
          _13273_recIdents = _out7236;
          readIdents = _13273_recIdents;
          r = ((_13271_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out7237;
          DCOMPUTF16._IOwnership _out7238;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7237, out _out7238);
          r = _out7237;
          resultingOwnership = _out7238;
          return ;
        }
      } else if (_source689.is_Select) {
        DAST._IExpression _13274___mcc_h48 = _source689.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _13275___mcc_h49 = _source689.dtor_field;
        bool _13276___mcc_h50 = _source689.dtor_isConstant;
        bool _13277___mcc_h51 = _source689.dtor_onDatatype;
        DAST._IExpression _source692 = _13274___mcc_h48;
        if (_source692.is_Literal) {
          DAST._ILiteral _13278___mcc_h52 = _source692.dtor_Literal_a0;
          bool _13279_isDatatype = _13277___mcc_h51;
          bool _13280_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13281_field = _13275___mcc_h49;
          DAST._IExpression _13282_on = _13274___mcc_h48;
          {
            if ((_13279_isDatatype) || (_13280_isConstant)) {
              RAST._IExpr _13283_onExpr;
              DCOMPUTF16._IOwnership _13284_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13285_recIdents;
              RAST._IExpr _out7239;
              DCOMPUTF16._IOwnership _out7240;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7241;
              DCOMPUTF16.COMP.GenExpr(_13282_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7239, out _out7240, out _out7241);
              _13283_onExpr = _out7239;
              _13284_onOwned = _out7240;
              _13285_recIdents = _out7241;
              r = ((_13283_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13281_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7242;
              DCOMPUTF16._IOwnership _out7243;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7242, out _out7243);
              r = _out7242;
              resultingOwnership = _out7243;
              readIdents = _13285_recIdents;
            } else {
              RAST._IExpr _13286_onExpr;
              DCOMPUTF16._IOwnership _13287_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13288_recIdents;
              RAST._IExpr _out7244;
              DCOMPUTF16._IOwnership _out7245;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7246;
              DCOMPUTF16.COMP.GenExpr(_13282_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7244, out _out7245, out _out7246);
              _13286_onExpr = _out7244;
              _13287_onOwned = _out7245;
              _13288_recIdents = _out7246;
              r = _13286_onExpr;
              if (!object.Equals(_13286_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13281_field));
              RAST._IExpr _out7247;
              DCOMPUTF16._IOwnership _out7248;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7247, out _out7248);
              r = _out7247;
              resultingOwnership = _out7248;
              readIdents = _13288_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _13289___mcc_h54 = _source692.dtor_Ident_a0;
          bool _13290_isDatatype = _13277___mcc_h51;
          bool _13291_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13292_field = _13275___mcc_h49;
          DAST._IExpression _13293_on = _13274___mcc_h48;
          {
            if ((_13290_isDatatype) || (_13291_isConstant)) {
              RAST._IExpr _13294_onExpr;
              DCOMPUTF16._IOwnership _13295_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13296_recIdents;
              RAST._IExpr _out7249;
              DCOMPUTF16._IOwnership _out7250;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7251;
              DCOMPUTF16.COMP.GenExpr(_13293_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7249, out _out7250, out _out7251);
              _13294_onExpr = _out7249;
              _13295_onOwned = _out7250;
              _13296_recIdents = _out7251;
              r = ((_13294_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13292_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7252;
              DCOMPUTF16._IOwnership _out7253;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7252, out _out7253);
              r = _out7252;
              resultingOwnership = _out7253;
              readIdents = _13296_recIdents;
            } else {
              RAST._IExpr _13297_onExpr;
              DCOMPUTF16._IOwnership _13298_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13299_recIdents;
              RAST._IExpr _out7254;
              DCOMPUTF16._IOwnership _out7255;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7256;
              DCOMPUTF16.COMP.GenExpr(_13293_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7254, out _out7255, out _out7256);
              _13297_onExpr = _out7254;
              _13298_onOwned = _out7255;
              _13299_recIdents = _out7256;
              r = _13297_onExpr;
              if (!object.Equals(_13297_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13292_field));
              RAST._IExpr _out7257;
              DCOMPUTF16._IOwnership _out7258;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7257, out _out7258);
              r = _out7257;
              resultingOwnership = _out7258;
              readIdents = _13299_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13300___mcc_h56 = _source692.dtor_Companion_a0;
          bool _13301_isDatatype = _13277___mcc_h51;
          bool _13302_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13303_field = _13275___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13304_c = _13300___mcc_h56;
          {
            RAST._IExpr _13305_onExpr;
            DCOMPUTF16._IOwnership _13306_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13307_recIdents;
            RAST._IExpr _out7259;
            DCOMPUTF16._IOwnership _out7260;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7261;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Companion(_13304_c), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7259, out _out7260, out _out7261);
            _13305_onExpr = _out7259;
            _13306_onOwned = _out7260;
            _13307_recIdents = _out7261;
            r = ((_13305_onExpr).MSel(DCOMPUTF16.__default.escapeIdent(_13303_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out7262;
            DCOMPUTF16._IOwnership _out7263;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7262, out _out7263);
            r = _out7262;
            resultingOwnership = _out7263;
            readIdents = _13307_recIdents;
            return ;
          }
        } else if (_source692.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _13308___mcc_h58 = _source692.dtor_Tuple_a0;
          bool _13309_isDatatype = _13277___mcc_h51;
          bool _13310_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13311_field = _13275___mcc_h49;
          DAST._IExpression _13312_on = _13274___mcc_h48;
          {
            if ((_13309_isDatatype) || (_13310_isConstant)) {
              RAST._IExpr _13313_onExpr;
              DCOMPUTF16._IOwnership _13314_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13315_recIdents;
              RAST._IExpr _out7264;
              DCOMPUTF16._IOwnership _out7265;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7266;
              DCOMPUTF16.COMP.GenExpr(_13312_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7264, out _out7265, out _out7266);
              _13313_onExpr = _out7264;
              _13314_onOwned = _out7265;
              _13315_recIdents = _out7266;
              r = ((_13313_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13311_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7267;
              DCOMPUTF16._IOwnership _out7268;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7267, out _out7268);
              r = _out7267;
              resultingOwnership = _out7268;
              readIdents = _13315_recIdents;
            } else {
              RAST._IExpr _13316_onExpr;
              DCOMPUTF16._IOwnership _13317_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13318_recIdents;
              RAST._IExpr _out7269;
              DCOMPUTF16._IOwnership _out7270;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7271;
              DCOMPUTF16.COMP.GenExpr(_13312_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7269, out _out7270, out _out7271);
              _13316_onExpr = _out7269;
              _13317_onOwned = _out7270;
              _13318_recIdents = _out7271;
              r = _13316_onExpr;
              if (!object.Equals(_13316_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13311_field));
              RAST._IExpr _out7272;
              DCOMPUTF16._IOwnership _out7273;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7272, out _out7273);
              r = _out7272;
              resultingOwnership = _out7273;
              readIdents = _13318_recIdents;
            }
            return ;
          }
        } else if (_source692.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13319___mcc_h60 = _source692.dtor_path;
          Dafny.ISequence<DAST._IType> _13320___mcc_h61 = _source692.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _13321___mcc_h62 = _source692.dtor_args;
          bool _13322_isDatatype = _13277___mcc_h51;
          bool _13323_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13324_field = _13275___mcc_h49;
          DAST._IExpression _13325_on = _13274___mcc_h48;
          {
            if ((_13322_isDatatype) || (_13323_isConstant)) {
              RAST._IExpr _13326_onExpr;
              DCOMPUTF16._IOwnership _13327_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13328_recIdents;
              RAST._IExpr _out7274;
              DCOMPUTF16._IOwnership _out7275;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7276;
              DCOMPUTF16.COMP.GenExpr(_13325_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7274, out _out7275, out _out7276);
              _13326_onExpr = _out7274;
              _13327_onOwned = _out7275;
              _13328_recIdents = _out7276;
              r = ((_13326_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13324_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7277;
              DCOMPUTF16._IOwnership _out7278;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7277, out _out7278);
              r = _out7277;
              resultingOwnership = _out7278;
              readIdents = _13328_recIdents;
            } else {
              RAST._IExpr _13329_onExpr;
              DCOMPUTF16._IOwnership _13330_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13331_recIdents;
              RAST._IExpr _out7279;
              DCOMPUTF16._IOwnership _out7280;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7281;
              DCOMPUTF16.COMP.GenExpr(_13325_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7279, out _out7280, out _out7281);
              _13329_onExpr = _out7279;
              _13330_onOwned = _out7280;
              _13331_recIdents = _out7281;
              r = _13329_onExpr;
              if (!object.Equals(_13329_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13324_field));
              RAST._IExpr _out7282;
              DCOMPUTF16._IOwnership _out7283;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7282, out _out7283);
              r = _out7282;
              resultingOwnership = _out7283;
              readIdents = _13331_recIdents;
            }
            return ;
          }
        } else if (_source692.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _13332___mcc_h66 = _source692.dtor_dims;
          DAST._IType _13333___mcc_h67 = _source692.dtor_typ;
          bool _13334_isDatatype = _13277___mcc_h51;
          bool _13335_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13336_field = _13275___mcc_h49;
          DAST._IExpression _13337_on = _13274___mcc_h48;
          {
            if ((_13334_isDatatype) || (_13335_isConstant)) {
              RAST._IExpr _13338_onExpr;
              DCOMPUTF16._IOwnership _13339_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13340_recIdents;
              RAST._IExpr _out7284;
              DCOMPUTF16._IOwnership _out7285;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7286;
              DCOMPUTF16.COMP.GenExpr(_13337_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7284, out _out7285, out _out7286);
              _13338_onExpr = _out7284;
              _13339_onOwned = _out7285;
              _13340_recIdents = _out7286;
              r = ((_13338_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13336_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7287;
              DCOMPUTF16._IOwnership _out7288;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7287, out _out7288);
              r = _out7287;
              resultingOwnership = _out7288;
              readIdents = _13340_recIdents;
            } else {
              RAST._IExpr _13341_onExpr;
              DCOMPUTF16._IOwnership _13342_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13343_recIdents;
              RAST._IExpr _out7289;
              DCOMPUTF16._IOwnership _out7290;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7291;
              DCOMPUTF16.COMP.GenExpr(_13337_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7289, out _out7290, out _out7291);
              _13341_onExpr = _out7289;
              _13342_onOwned = _out7290;
              _13343_recIdents = _out7291;
              r = _13341_onExpr;
              if (!object.Equals(_13341_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13336_field));
              RAST._IExpr _out7292;
              DCOMPUTF16._IOwnership _out7293;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7292, out _out7293);
              r = _out7292;
              resultingOwnership = _out7293;
              readIdents = _13343_recIdents;
            }
            return ;
          }
        } else if (_source692.is_DatatypeValue) {
          DAST._IDatatypeType _13344___mcc_h70 = _source692.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _13345___mcc_h71 = _source692.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _13346___mcc_h72 = _source692.dtor_variant;
          bool _13347___mcc_h73 = _source692.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13348___mcc_h74 = _source692.dtor_contents;
          bool _13349_isDatatype = _13277___mcc_h51;
          bool _13350_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13351_field = _13275___mcc_h49;
          DAST._IExpression _13352_on = _13274___mcc_h48;
          {
            if ((_13349_isDatatype) || (_13350_isConstant)) {
              RAST._IExpr _13353_onExpr;
              DCOMPUTF16._IOwnership _13354_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13355_recIdents;
              RAST._IExpr _out7294;
              DCOMPUTF16._IOwnership _out7295;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7296;
              DCOMPUTF16.COMP.GenExpr(_13352_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7294, out _out7295, out _out7296);
              _13353_onExpr = _out7294;
              _13354_onOwned = _out7295;
              _13355_recIdents = _out7296;
              r = ((_13353_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13351_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7297;
              DCOMPUTF16._IOwnership _out7298;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7297, out _out7298);
              r = _out7297;
              resultingOwnership = _out7298;
              readIdents = _13355_recIdents;
            } else {
              RAST._IExpr _13356_onExpr;
              DCOMPUTF16._IOwnership _13357_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13358_recIdents;
              RAST._IExpr _out7299;
              DCOMPUTF16._IOwnership _out7300;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7301;
              DCOMPUTF16.COMP.GenExpr(_13352_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7299, out _out7300, out _out7301);
              _13356_onExpr = _out7299;
              _13357_onOwned = _out7300;
              _13358_recIdents = _out7301;
              r = _13356_onExpr;
              if (!object.Equals(_13356_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13351_field));
              RAST._IExpr _out7302;
              DCOMPUTF16._IOwnership _out7303;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7302, out _out7303);
              r = _out7302;
              resultingOwnership = _out7303;
              readIdents = _13358_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Convert) {
          DAST._IExpression _13359___mcc_h80 = _source692.dtor_value;
          DAST._IType _13360___mcc_h81 = _source692.dtor_from;
          DAST._IType _13361___mcc_h82 = _source692.dtor_typ;
          bool _13362_isDatatype = _13277___mcc_h51;
          bool _13363_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13364_field = _13275___mcc_h49;
          DAST._IExpression _13365_on = _13274___mcc_h48;
          {
            if ((_13362_isDatatype) || (_13363_isConstant)) {
              RAST._IExpr _13366_onExpr;
              DCOMPUTF16._IOwnership _13367_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13368_recIdents;
              RAST._IExpr _out7304;
              DCOMPUTF16._IOwnership _out7305;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7306;
              DCOMPUTF16.COMP.GenExpr(_13365_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7304, out _out7305, out _out7306);
              _13366_onExpr = _out7304;
              _13367_onOwned = _out7305;
              _13368_recIdents = _out7306;
              r = ((_13366_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13364_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7307;
              DCOMPUTF16._IOwnership _out7308;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7307, out _out7308);
              r = _out7307;
              resultingOwnership = _out7308;
              readIdents = _13368_recIdents;
            } else {
              RAST._IExpr _13369_onExpr;
              DCOMPUTF16._IOwnership _13370_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13371_recIdents;
              RAST._IExpr _out7309;
              DCOMPUTF16._IOwnership _out7310;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7311;
              DCOMPUTF16.COMP.GenExpr(_13365_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7309, out _out7310, out _out7311);
              _13369_onExpr = _out7309;
              _13370_onOwned = _out7310;
              _13371_recIdents = _out7311;
              r = _13369_onExpr;
              if (!object.Equals(_13369_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13364_field));
              RAST._IExpr _out7312;
              DCOMPUTF16._IOwnership _out7313;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7312, out _out7313);
              r = _out7312;
              resultingOwnership = _out7313;
              readIdents = _13371_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SeqConstruct) {
          DAST._IExpression _13372___mcc_h86 = _source692.dtor_length;
          DAST._IExpression _13373___mcc_h87 = _source692.dtor_elem;
          bool _13374_isDatatype = _13277___mcc_h51;
          bool _13375_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13376_field = _13275___mcc_h49;
          DAST._IExpression _13377_on = _13274___mcc_h48;
          {
            if ((_13374_isDatatype) || (_13375_isConstant)) {
              RAST._IExpr _13378_onExpr;
              DCOMPUTF16._IOwnership _13379_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13380_recIdents;
              RAST._IExpr _out7314;
              DCOMPUTF16._IOwnership _out7315;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7316;
              DCOMPUTF16.COMP.GenExpr(_13377_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7314, out _out7315, out _out7316);
              _13378_onExpr = _out7314;
              _13379_onOwned = _out7315;
              _13380_recIdents = _out7316;
              r = ((_13378_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13376_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7317;
              DCOMPUTF16._IOwnership _out7318;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7317, out _out7318);
              r = _out7317;
              resultingOwnership = _out7318;
              readIdents = _13380_recIdents;
            } else {
              RAST._IExpr _13381_onExpr;
              DCOMPUTF16._IOwnership _13382_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13383_recIdents;
              RAST._IExpr _out7319;
              DCOMPUTF16._IOwnership _out7320;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7321;
              DCOMPUTF16.COMP.GenExpr(_13377_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7319, out _out7320, out _out7321);
              _13381_onExpr = _out7319;
              _13382_onOwned = _out7320;
              _13383_recIdents = _out7321;
              r = _13381_onExpr;
              if (!object.Equals(_13381_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13376_field));
              RAST._IExpr _out7322;
              DCOMPUTF16._IOwnership _out7323;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7322, out _out7323);
              r = _out7322;
              resultingOwnership = _out7323;
              readIdents = _13383_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _13384___mcc_h90 = _source692.dtor_elements;
          DAST._IType _13385___mcc_h91 = _source692.dtor_typ;
          bool _13386_isDatatype = _13277___mcc_h51;
          bool _13387_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13388_field = _13275___mcc_h49;
          DAST._IExpression _13389_on = _13274___mcc_h48;
          {
            if ((_13386_isDatatype) || (_13387_isConstant)) {
              RAST._IExpr _13390_onExpr;
              DCOMPUTF16._IOwnership _13391_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13392_recIdents;
              RAST._IExpr _out7324;
              DCOMPUTF16._IOwnership _out7325;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7326;
              DCOMPUTF16.COMP.GenExpr(_13389_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7324, out _out7325, out _out7326);
              _13390_onExpr = _out7324;
              _13391_onOwned = _out7325;
              _13392_recIdents = _out7326;
              r = ((_13390_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13388_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7327;
              DCOMPUTF16._IOwnership _out7328;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7327, out _out7328);
              r = _out7327;
              resultingOwnership = _out7328;
              readIdents = _13392_recIdents;
            } else {
              RAST._IExpr _13393_onExpr;
              DCOMPUTF16._IOwnership _13394_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13395_recIdents;
              RAST._IExpr _out7329;
              DCOMPUTF16._IOwnership _out7330;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7331;
              DCOMPUTF16.COMP.GenExpr(_13389_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7329, out _out7330, out _out7331);
              _13393_onExpr = _out7329;
              _13394_onOwned = _out7330;
              _13395_recIdents = _out7331;
              r = _13393_onExpr;
              if (!object.Equals(_13393_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13388_field));
              RAST._IExpr _out7332;
              DCOMPUTF16._IOwnership _out7333;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7332, out _out7333);
              r = _out7332;
              resultingOwnership = _out7333;
              readIdents = _13395_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _13396___mcc_h94 = _source692.dtor_elements;
          bool _13397_isDatatype = _13277___mcc_h51;
          bool _13398_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13399_field = _13275___mcc_h49;
          DAST._IExpression _13400_on = _13274___mcc_h48;
          {
            if ((_13397_isDatatype) || (_13398_isConstant)) {
              RAST._IExpr _13401_onExpr;
              DCOMPUTF16._IOwnership _13402_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13403_recIdents;
              RAST._IExpr _out7334;
              DCOMPUTF16._IOwnership _out7335;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7336;
              DCOMPUTF16.COMP.GenExpr(_13400_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7334, out _out7335, out _out7336);
              _13401_onExpr = _out7334;
              _13402_onOwned = _out7335;
              _13403_recIdents = _out7336;
              r = ((_13401_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13399_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7337;
              DCOMPUTF16._IOwnership _out7338;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7337, out _out7338);
              r = _out7337;
              resultingOwnership = _out7338;
              readIdents = _13403_recIdents;
            } else {
              RAST._IExpr _13404_onExpr;
              DCOMPUTF16._IOwnership _13405_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13406_recIdents;
              RAST._IExpr _out7339;
              DCOMPUTF16._IOwnership _out7340;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7341;
              DCOMPUTF16.COMP.GenExpr(_13400_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7339, out _out7340, out _out7341);
              _13404_onExpr = _out7339;
              _13405_onOwned = _out7340;
              _13406_recIdents = _out7341;
              r = _13404_onExpr;
              if (!object.Equals(_13404_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13399_field));
              RAST._IExpr _out7342;
              DCOMPUTF16._IOwnership _out7343;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7342, out _out7343);
              r = _out7342;
              resultingOwnership = _out7343;
              readIdents = _13406_recIdents;
            }
            return ;
          }
        } else if (_source692.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _13407___mcc_h96 = _source692.dtor_elements;
          bool _13408_isDatatype = _13277___mcc_h51;
          bool _13409_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13410_field = _13275___mcc_h49;
          DAST._IExpression _13411_on = _13274___mcc_h48;
          {
            if ((_13408_isDatatype) || (_13409_isConstant)) {
              RAST._IExpr _13412_onExpr;
              DCOMPUTF16._IOwnership _13413_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13414_recIdents;
              RAST._IExpr _out7344;
              DCOMPUTF16._IOwnership _out7345;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7346;
              DCOMPUTF16.COMP.GenExpr(_13411_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7344, out _out7345, out _out7346);
              _13412_onExpr = _out7344;
              _13413_onOwned = _out7345;
              _13414_recIdents = _out7346;
              r = ((_13412_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13410_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7347;
              DCOMPUTF16._IOwnership _out7348;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7347, out _out7348);
              r = _out7347;
              resultingOwnership = _out7348;
              readIdents = _13414_recIdents;
            } else {
              RAST._IExpr _13415_onExpr;
              DCOMPUTF16._IOwnership _13416_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13417_recIdents;
              RAST._IExpr _out7349;
              DCOMPUTF16._IOwnership _out7350;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7351;
              DCOMPUTF16.COMP.GenExpr(_13411_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7349, out _out7350, out _out7351);
              _13415_onExpr = _out7349;
              _13416_onOwned = _out7350;
              _13417_recIdents = _out7351;
              r = _13415_onExpr;
              if (!object.Equals(_13415_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13410_field));
              RAST._IExpr _out7352;
              DCOMPUTF16._IOwnership _out7353;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7352, out _out7353);
              r = _out7352;
              resultingOwnership = _out7353;
              readIdents = _13417_recIdents;
            }
            return ;
          }
        } else if (_source692.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13418___mcc_h98 = _source692.dtor_mapElems;
          bool _13419_isDatatype = _13277___mcc_h51;
          bool _13420_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13421_field = _13275___mcc_h49;
          DAST._IExpression _13422_on = _13274___mcc_h48;
          {
            if ((_13419_isDatatype) || (_13420_isConstant)) {
              RAST._IExpr _13423_onExpr;
              DCOMPUTF16._IOwnership _13424_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13425_recIdents;
              RAST._IExpr _out7354;
              DCOMPUTF16._IOwnership _out7355;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7356;
              DCOMPUTF16.COMP.GenExpr(_13422_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7354, out _out7355, out _out7356);
              _13423_onExpr = _out7354;
              _13424_onOwned = _out7355;
              _13425_recIdents = _out7356;
              r = ((_13423_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13421_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7357;
              DCOMPUTF16._IOwnership _out7358;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7357, out _out7358);
              r = _out7357;
              resultingOwnership = _out7358;
              readIdents = _13425_recIdents;
            } else {
              RAST._IExpr _13426_onExpr;
              DCOMPUTF16._IOwnership _13427_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13428_recIdents;
              RAST._IExpr _out7359;
              DCOMPUTF16._IOwnership _out7360;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7361;
              DCOMPUTF16.COMP.GenExpr(_13422_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7359, out _out7360, out _out7361);
              _13426_onExpr = _out7359;
              _13427_onOwned = _out7360;
              _13428_recIdents = _out7361;
              r = _13426_onExpr;
              if (!object.Equals(_13426_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13421_field));
              RAST._IExpr _out7362;
              DCOMPUTF16._IOwnership _out7363;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7362, out _out7363);
              r = _out7362;
              resultingOwnership = _out7363;
              readIdents = _13428_recIdents;
            }
            return ;
          }
        } else if (_source692.is_MapBuilder) {
          DAST._IType _13429___mcc_h100 = _source692.dtor_keyType;
          DAST._IType _13430___mcc_h101 = _source692.dtor_valueType;
          bool _13431_isDatatype = _13277___mcc_h51;
          bool _13432_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13433_field = _13275___mcc_h49;
          DAST._IExpression _13434_on = _13274___mcc_h48;
          {
            if ((_13431_isDatatype) || (_13432_isConstant)) {
              RAST._IExpr _13435_onExpr;
              DCOMPUTF16._IOwnership _13436_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13437_recIdents;
              RAST._IExpr _out7364;
              DCOMPUTF16._IOwnership _out7365;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7366;
              DCOMPUTF16.COMP.GenExpr(_13434_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7364, out _out7365, out _out7366);
              _13435_onExpr = _out7364;
              _13436_onOwned = _out7365;
              _13437_recIdents = _out7366;
              r = ((_13435_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13433_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7367;
              DCOMPUTF16._IOwnership _out7368;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7367, out _out7368);
              r = _out7367;
              resultingOwnership = _out7368;
              readIdents = _13437_recIdents;
            } else {
              RAST._IExpr _13438_onExpr;
              DCOMPUTF16._IOwnership _13439_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13440_recIdents;
              RAST._IExpr _out7369;
              DCOMPUTF16._IOwnership _out7370;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7371;
              DCOMPUTF16.COMP.GenExpr(_13434_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7369, out _out7370, out _out7371);
              _13438_onExpr = _out7369;
              _13439_onOwned = _out7370;
              _13440_recIdents = _out7371;
              r = _13438_onExpr;
              if (!object.Equals(_13438_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13433_field));
              RAST._IExpr _out7372;
              DCOMPUTF16._IOwnership _out7373;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7372, out _out7373);
              r = _out7372;
              resultingOwnership = _out7373;
              readIdents = _13440_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SeqUpdate) {
          DAST._IExpression _13441___mcc_h104 = _source692.dtor_expr;
          DAST._IExpression _13442___mcc_h105 = _source692.dtor_indexExpr;
          DAST._IExpression _13443___mcc_h106 = _source692.dtor_value;
          bool _13444_isDatatype = _13277___mcc_h51;
          bool _13445_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13446_field = _13275___mcc_h49;
          DAST._IExpression _13447_on = _13274___mcc_h48;
          {
            if ((_13444_isDatatype) || (_13445_isConstant)) {
              RAST._IExpr _13448_onExpr;
              DCOMPUTF16._IOwnership _13449_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13450_recIdents;
              RAST._IExpr _out7374;
              DCOMPUTF16._IOwnership _out7375;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7376;
              DCOMPUTF16.COMP.GenExpr(_13447_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7374, out _out7375, out _out7376);
              _13448_onExpr = _out7374;
              _13449_onOwned = _out7375;
              _13450_recIdents = _out7376;
              r = ((_13448_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13446_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7377;
              DCOMPUTF16._IOwnership _out7378;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7377, out _out7378);
              r = _out7377;
              resultingOwnership = _out7378;
              readIdents = _13450_recIdents;
            } else {
              RAST._IExpr _13451_onExpr;
              DCOMPUTF16._IOwnership _13452_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13453_recIdents;
              RAST._IExpr _out7379;
              DCOMPUTF16._IOwnership _out7380;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7381;
              DCOMPUTF16.COMP.GenExpr(_13447_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7379, out _out7380, out _out7381);
              _13451_onExpr = _out7379;
              _13452_onOwned = _out7380;
              _13453_recIdents = _out7381;
              r = _13451_onExpr;
              if (!object.Equals(_13451_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13446_field));
              RAST._IExpr _out7382;
              DCOMPUTF16._IOwnership _out7383;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7382, out _out7383);
              r = _out7382;
              resultingOwnership = _out7383;
              readIdents = _13453_recIdents;
            }
            return ;
          }
        } else if (_source692.is_MapUpdate) {
          DAST._IExpression _13454___mcc_h110 = _source692.dtor_expr;
          DAST._IExpression _13455___mcc_h111 = _source692.dtor_indexExpr;
          DAST._IExpression _13456___mcc_h112 = _source692.dtor_value;
          bool _13457_isDatatype = _13277___mcc_h51;
          bool _13458_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13459_field = _13275___mcc_h49;
          DAST._IExpression _13460_on = _13274___mcc_h48;
          {
            if ((_13457_isDatatype) || (_13458_isConstant)) {
              RAST._IExpr _13461_onExpr;
              DCOMPUTF16._IOwnership _13462_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13463_recIdents;
              RAST._IExpr _out7384;
              DCOMPUTF16._IOwnership _out7385;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7386;
              DCOMPUTF16.COMP.GenExpr(_13460_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7384, out _out7385, out _out7386);
              _13461_onExpr = _out7384;
              _13462_onOwned = _out7385;
              _13463_recIdents = _out7386;
              r = ((_13461_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13459_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7387;
              DCOMPUTF16._IOwnership _out7388;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7387, out _out7388);
              r = _out7387;
              resultingOwnership = _out7388;
              readIdents = _13463_recIdents;
            } else {
              RAST._IExpr _13464_onExpr;
              DCOMPUTF16._IOwnership _13465_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13466_recIdents;
              RAST._IExpr _out7389;
              DCOMPUTF16._IOwnership _out7390;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7391;
              DCOMPUTF16.COMP.GenExpr(_13460_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7389, out _out7390, out _out7391);
              _13464_onExpr = _out7389;
              _13465_onOwned = _out7390;
              _13466_recIdents = _out7391;
              r = _13464_onExpr;
              if (!object.Equals(_13464_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13459_field));
              RAST._IExpr _out7392;
              DCOMPUTF16._IOwnership _out7393;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7392, out _out7393);
              r = _out7392;
              resultingOwnership = _out7393;
              readIdents = _13466_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SetBuilder) {
          DAST._IType _13467___mcc_h116 = _source692.dtor_elemType;
          bool _13468_isDatatype = _13277___mcc_h51;
          bool _13469_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13470_field = _13275___mcc_h49;
          DAST._IExpression _13471_on = _13274___mcc_h48;
          {
            if ((_13468_isDatatype) || (_13469_isConstant)) {
              RAST._IExpr _13472_onExpr;
              DCOMPUTF16._IOwnership _13473_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13474_recIdents;
              RAST._IExpr _out7394;
              DCOMPUTF16._IOwnership _out7395;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7396;
              DCOMPUTF16.COMP.GenExpr(_13471_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7394, out _out7395, out _out7396);
              _13472_onExpr = _out7394;
              _13473_onOwned = _out7395;
              _13474_recIdents = _out7396;
              r = ((_13472_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13470_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7397;
              DCOMPUTF16._IOwnership _out7398;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7397, out _out7398);
              r = _out7397;
              resultingOwnership = _out7398;
              readIdents = _13474_recIdents;
            } else {
              RAST._IExpr _13475_onExpr;
              DCOMPUTF16._IOwnership _13476_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13477_recIdents;
              RAST._IExpr _out7399;
              DCOMPUTF16._IOwnership _out7400;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7401;
              DCOMPUTF16.COMP.GenExpr(_13471_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7399, out _out7400, out _out7401);
              _13475_onExpr = _out7399;
              _13476_onOwned = _out7400;
              _13477_recIdents = _out7401;
              r = _13475_onExpr;
              if (!object.Equals(_13475_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13470_field));
              RAST._IExpr _out7402;
              DCOMPUTF16._IOwnership _out7403;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7402, out _out7403);
              r = _out7402;
              resultingOwnership = _out7403;
              readIdents = _13477_recIdents;
            }
            return ;
          }
        } else if (_source692.is_ToMultiset) {
          DAST._IExpression _13478___mcc_h118 = _source692.dtor_ToMultiset_a0;
          bool _13479_isDatatype = _13277___mcc_h51;
          bool _13480_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13481_field = _13275___mcc_h49;
          DAST._IExpression _13482_on = _13274___mcc_h48;
          {
            if ((_13479_isDatatype) || (_13480_isConstant)) {
              RAST._IExpr _13483_onExpr;
              DCOMPUTF16._IOwnership _13484_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13485_recIdents;
              RAST._IExpr _out7404;
              DCOMPUTF16._IOwnership _out7405;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7406;
              DCOMPUTF16.COMP.GenExpr(_13482_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7404, out _out7405, out _out7406);
              _13483_onExpr = _out7404;
              _13484_onOwned = _out7405;
              _13485_recIdents = _out7406;
              r = ((_13483_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13481_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7407;
              DCOMPUTF16._IOwnership _out7408;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7407, out _out7408);
              r = _out7407;
              resultingOwnership = _out7408;
              readIdents = _13485_recIdents;
            } else {
              RAST._IExpr _13486_onExpr;
              DCOMPUTF16._IOwnership _13487_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13488_recIdents;
              RAST._IExpr _out7409;
              DCOMPUTF16._IOwnership _out7410;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7411;
              DCOMPUTF16.COMP.GenExpr(_13482_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7409, out _out7410, out _out7411);
              _13486_onExpr = _out7409;
              _13487_onOwned = _out7410;
              _13488_recIdents = _out7411;
              r = _13486_onExpr;
              if (!object.Equals(_13486_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13481_field));
              RAST._IExpr _out7412;
              DCOMPUTF16._IOwnership _out7413;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7412, out _out7413);
              r = _out7412;
              resultingOwnership = _out7413;
              readIdents = _13488_recIdents;
            }
            return ;
          }
        } else if (_source692.is_This) {
          bool _13489_isDatatype = _13277___mcc_h51;
          bool _13490_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13491_field = _13275___mcc_h49;
          DAST._IExpression _13492_on = _13274___mcc_h48;
          {
            if ((_13489_isDatatype) || (_13490_isConstant)) {
              RAST._IExpr _13493_onExpr;
              DCOMPUTF16._IOwnership _13494_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13495_recIdents;
              RAST._IExpr _out7414;
              DCOMPUTF16._IOwnership _out7415;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7416;
              DCOMPUTF16.COMP.GenExpr(_13492_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7414, out _out7415, out _out7416);
              _13493_onExpr = _out7414;
              _13494_onOwned = _out7415;
              _13495_recIdents = _out7416;
              r = ((_13493_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13491_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7417;
              DCOMPUTF16._IOwnership _out7418;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7417, out _out7418);
              r = _out7417;
              resultingOwnership = _out7418;
              readIdents = _13495_recIdents;
            } else {
              RAST._IExpr _13496_onExpr;
              DCOMPUTF16._IOwnership _13497_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13498_recIdents;
              RAST._IExpr _out7419;
              DCOMPUTF16._IOwnership _out7420;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7421;
              DCOMPUTF16.COMP.GenExpr(_13492_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7419, out _out7420, out _out7421);
              _13496_onExpr = _out7419;
              _13497_onOwned = _out7420;
              _13498_recIdents = _out7421;
              r = _13496_onExpr;
              if (!object.Equals(_13496_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13491_field));
              RAST._IExpr _out7422;
              DCOMPUTF16._IOwnership _out7423;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7422, out _out7423);
              r = _out7422;
              resultingOwnership = _out7423;
              readIdents = _13498_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Ite) {
          DAST._IExpression _13499___mcc_h120 = _source692.dtor_cond;
          DAST._IExpression _13500___mcc_h121 = _source692.dtor_thn;
          DAST._IExpression _13501___mcc_h122 = _source692.dtor_els;
          bool _13502_isDatatype = _13277___mcc_h51;
          bool _13503_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13504_field = _13275___mcc_h49;
          DAST._IExpression _13505_on = _13274___mcc_h48;
          {
            if ((_13502_isDatatype) || (_13503_isConstant)) {
              RAST._IExpr _13506_onExpr;
              DCOMPUTF16._IOwnership _13507_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13508_recIdents;
              RAST._IExpr _out7424;
              DCOMPUTF16._IOwnership _out7425;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7426;
              DCOMPUTF16.COMP.GenExpr(_13505_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7424, out _out7425, out _out7426);
              _13506_onExpr = _out7424;
              _13507_onOwned = _out7425;
              _13508_recIdents = _out7426;
              r = ((_13506_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13504_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7427;
              DCOMPUTF16._IOwnership _out7428;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7427, out _out7428);
              r = _out7427;
              resultingOwnership = _out7428;
              readIdents = _13508_recIdents;
            } else {
              RAST._IExpr _13509_onExpr;
              DCOMPUTF16._IOwnership _13510_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13511_recIdents;
              RAST._IExpr _out7429;
              DCOMPUTF16._IOwnership _out7430;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7431;
              DCOMPUTF16.COMP.GenExpr(_13505_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7429, out _out7430, out _out7431);
              _13509_onExpr = _out7429;
              _13510_onOwned = _out7430;
              _13511_recIdents = _out7431;
              r = _13509_onExpr;
              if (!object.Equals(_13509_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13504_field));
              RAST._IExpr _out7432;
              DCOMPUTF16._IOwnership _out7433;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7432, out _out7433);
              r = _out7432;
              resultingOwnership = _out7433;
              readIdents = _13511_recIdents;
            }
            return ;
          }
        } else if (_source692.is_UnOp) {
          DAST._IUnaryOp _13512___mcc_h126 = _source692.dtor_unOp;
          DAST._IExpression _13513___mcc_h127 = _source692.dtor_expr;
          DAST.Format._IUnOpFormat _13514___mcc_h128 = _source692.dtor_format1;
          bool _13515_isDatatype = _13277___mcc_h51;
          bool _13516_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13517_field = _13275___mcc_h49;
          DAST._IExpression _13518_on = _13274___mcc_h48;
          {
            if ((_13515_isDatatype) || (_13516_isConstant)) {
              RAST._IExpr _13519_onExpr;
              DCOMPUTF16._IOwnership _13520_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13521_recIdents;
              RAST._IExpr _out7434;
              DCOMPUTF16._IOwnership _out7435;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7436;
              DCOMPUTF16.COMP.GenExpr(_13518_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7434, out _out7435, out _out7436);
              _13519_onExpr = _out7434;
              _13520_onOwned = _out7435;
              _13521_recIdents = _out7436;
              r = ((_13519_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13517_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7437;
              DCOMPUTF16._IOwnership _out7438;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7437, out _out7438);
              r = _out7437;
              resultingOwnership = _out7438;
              readIdents = _13521_recIdents;
            } else {
              RAST._IExpr _13522_onExpr;
              DCOMPUTF16._IOwnership _13523_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13524_recIdents;
              RAST._IExpr _out7439;
              DCOMPUTF16._IOwnership _out7440;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7441;
              DCOMPUTF16.COMP.GenExpr(_13518_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7439, out _out7440, out _out7441);
              _13522_onExpr = _out7439;
              _13523_onOwned = _out7440;
              _13524_recIdents = _out7441;
              r = _13522_onExpr;
              if (!object.Equals(_13522_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13517_field));
              RAST._IExpr _out7442;
              DCOMPUTF16._IOwnership _out7443;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7442, out _out7443);
              r = _out7442;
              resultingOwnership = _out7443;
              readIdents = _13524_recIdents;
            }
            return ;
          }
        } else if (_source692.is_BinOp) {
          DAST._IBinOp _13525___mcc_h132 = _source692.dtor_op;
          DAST._IExpression _13526___mcc_h133 = _source692.dtor_left;
          DAST._IExpression _13527___mcc_h134 = _source692.dtor_right;
          DAST.Format._IBinOpFormat _13528___mcc_h135 = _source692.dtor_format2;
          bool _13529_isDatatype = _13277___mcc_h51;
          bool _13530_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13531_field = _13275___mcc_h49;
          DAST._IExpression _13532_on = _13274___mcc_h48;
          {
            if ((_13529_isDatatype) || (_13530_isConstant)) {
              RAST._IExpr _13533_onExpr;
              DCOMPUTF16._IOwnership _13534_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13535_recIdents;
              RAST._IExpr _out7444;
              DCOMPUTF16._IOwnership _out7445;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7446;
              DCOMPUTF16.COMP.GenExpr(_13532_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7444, out _out7445, out _out7446);
              _13533_onExpr = _out7444;
              _13534_onOwned = _out7445;
              _13535_recIdents = _out7446;
              r = ((_13533_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13531_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7447;
              DCOMPUTF16._IOwnership _out7448;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7447, out _out7448);
              r = _out7447;
              resultingOwnership = _out7448;
              readIdents = _13535_recIdents;
            } else {
              RAST._IExpr _13536_onExpr;
              DCOMPUTF16._IOwnership _13537_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13538_recIdents;
              RAST._IExpr _out7449;
              DCOMPUTF16._IOwnership _out7450;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7451;
              DCOMPUTF16.COMP.GenExpr(_13532_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7449, out _out7450, out _out7451);
              _13536_onExpr = _out7449;
              _13537_onOwned = _out7450;
              _13538_recIdents = _out7451;
              r = _13536_onExpr;
              if (!object.Equals(_13536_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13531_field));
              RAST._IExpr _out7452;
              DCOMPUTF16._IOwnership _out7453;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7452, out _out7453);
              r = _out7452;
              resultingOwnership = _out7453;
              readIdents = _13538_recIdents;
            }
            return ;
          }
        } else if (_source692.is_ArrayLen) {
          DAST._IExpression _13539___mcc_h140 = _source692.dtor_expr;
          BigInteger _13540___mcc_h141 = _source692.dtor_dim;
          bool _13541_isDatatype = _13277___mcc_h51;
          bool _13542_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13543_field = _13275___mcc_h49;
          DAST._IExpression _13544_on = _13274___mcc_h48;
          {
            if ((_13541_isDatatype) || (_13542_isConstant)) {
              RAST._IExpr _13545_onExpr;
              DCOMPUTF16._IOwnership _13546_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13547_recIdents;
              RAST._IExpr _out7454;
              DCOMPUTF16._IOwnership _out7455;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7456;
              DCOMPUTF16.COMP.GenExpr(_13544_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7454, out _out7455, out _out7456);
              _13545_onExpr = _out7454;
              _13546_onOwned = _out7455;
              _13547_recIdents = _out7456;
              r = ((_13545_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13543_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7457;
              DCOMPUTF16._IOwnership _out7458;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7457, out _out7458);
              r = _out7457;
              resultingOwnership = _out7458;
              readIdents = _13547_recIdents;
            } else {
              RAST._IExpr _13548_onExpr;
              DCOMPUTF16._IOwnership _13549_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13550_recIdents;
              RAST._IExpr _out7459;
              DCOMPUTF16._IOwnership _out7460;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7461;
              DCOMPUTF16.COMP.GenExpr(_13544_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7459, out _out7460, out _out7461);
              _13548_onExpr = _out7459;
              _13549_onOwned = _out7460;
              _13550_recIdents = _out7461;
              r = _13548_onExpr;
              if (!object.Equals(_13548_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13543_field));
              RAST._IExpr _out7462;
              DCOMPUTF16._IOwnership _out7463;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7462, out _out7463);
              r = _out7462;
              resultingOwnership = _out7463;
              readIdents = _13550_recIdents;
            }
            return ;
          }
        } else if (_source692.is_MapKeys) {
          DAST._IExpression _13551___mcc_h144 = _source692.dtor_expr;
          bool _13552_isDatatype = _13277___mcc_h51;
          bool _13553_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13554_field = _13275___mcc_h49;
          DAST._IExpression _13555_on = _13274___mcc_h48;
          {
            if ((_13552_isDatatype) || (_13553_isConstant)) {
              RAST._IExpr _13556_onExpr;
              DCOMPUTF16._IOwnership _13557_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13558_recIdents;
              RAST._IExpr _out7464;
              DCOMPUTF16._IOwnership _out7465;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7466;
              DCOMPUTF16.COMP.GenExpr(_13555_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7464, out _out7465, out _out7466);
              _13556_onExpr = _out7464;
              _13557_onOwned = _out7465;
              _13558_recIdents = _out7466;
              r = ((_13556_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13554_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7467;
              DCOMPUTF16._IOwnership _out7468;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7467, out _out7468);
              r = _out7467;
              resultingOwnership = _out7468;
              readIdents = _13558_recIdents;
            } else {
              RAST._IExpr _13559_onExpr;
              DCOMPUTF16._IOwnership _13560_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13561_recIdents;
              RAST._IExpr _out7469;
              DCOMPUTF16._IOwnership _out7470;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7471;
              DCOMPUTF16.COMP.GenExpr(_13555_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7469, out _out7470, out _out7471);
              _13559_onExpr = _out7469;
              _13560_onOwned = _out7470;
              _13561_recIdents = _out7471;
              r = _13559_onExpr;
              if (!object.Equals(_13559_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13554_field));
              RAST._IExpr _out7472;
              DCOMPUTF16._IOwnership _out7473;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7472, out _out7473);
              r = _out7472;
              resultingOwnership = _out7473;
              readIdents = _13561_recIdents;
            }
            return ;
          }
        } else if (_source692.is_MapValues) {
          DAST._IExpression _13562___mcc_h146 = _source692.dtor_expr;
          bool _13563_isDatatype = _13277___mcc_h51;
          bool _13564_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13565_field = _13275___mcc_h49;
          DAST._IExpression _13566_on = _13274___mcc_h48;
          {
            if ((_13563_isDatatype) || (_13564_isConstant)) {
              RAST._IExpr _13567_onExpr;
              DCOMPUTF16._IOwnership _13568_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13569_recIdents;
              RAST._IExpr _out7474;
              DCOMPUTF16._IOwnership _out7475;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7476;
              DCOMPUTF16.COMP.GenExpr(_13566_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7474, out _out7475, out _out7476);
              _13567_onExpr = _out7474;
              _13568_onOwned = _out7475;
              _13569_recIdents = _out7476;
              r = ((_13567_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13565_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7477;
              DCOMPUTF16._IOwnership _out7478;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7477, out _out7478);
              r = _out7477;
              resultingOwnership = _out7478;
              readIdents = _13569_recIdents;
            } else {
              RAST._IExpr _13570_onExpr;
              DCOMPUTF16._IOwnership _13571_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13572_recIdents;
              RAST._IExpr _out7479;
              DCOMPUTF16._IOwnership _out7480;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7481;
              DCOMPUTF16.COMP.GenExpr(_13566_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7479, out _out7480, out _out7481);
              _13570_onExpr = _out7479;
              _13571_onOwned = _out7480;
              _13572_recIdents = _out7481;
              r = _13570_onExpr;
              if (!object.Equals(_13570_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13565_field));
              RAST._IExpr _out7482;
              DCOMPUTF16._IOwnership _out7483;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7482, out _out7483);
              r = _out7482;
              resultingOwnership = _out7483;
              readIdents = _13572_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Select) {
          DAST._IExpression _13573___mcc_h148 = _source692.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _13574___mcc_h149 = _source692.dtor_field;
          bool _13575___mcc_h150 = _source692.dtor_isConstant;
          bool _13576___mcc_h151 = _source692.dtor_onDatatype;
          bool _13577_isDatatype = _13277___mcc_h51;
          bool _13578_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13579_field = _13275___mcc_h49;
          DAST._IExpression _13580_on = _13274___mcc_h48;
          {
            if ((_13577_isDatatype) || (_13578_isConstant)) {
              RAST._IExpr _13581_onExpr;
              DCOMPUTF16._IOwnership _13582_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13583_recIdents;
              RAST._IExpr _out7484;
              DCOMPUTF16._IOwnership _out7485;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7486;
              DCOMPUTF16.COMP.GenExpr(_13580_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7484, out _out7485, out _out7486);
              _13581_onExpr = _out7484;
              _13582_onOwned = _out7485;
              _13583_recIdents = _out7486;
              r = ((_13581_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13579_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7487;
              DCOMPUTF16._IOwnership _out7488;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7487, out _out7488);
              r = _out7487;
              resultingOwnership = _out7488;
              readIdents = _13583_recIdents;
            } else {
              RAST._IExpr _13584_onExpr;
              DCOMPUTF16._IOwnership _13585_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13586_recIdents;
              RAST._IExpr _out7489;
              DCOMPUTF16._IOwnership _out7490;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7491;
              DCOMPUTF16.COMP.GenExpr(_13580_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7489, out _out7490, out _out7491);
              _13584_onExpr = _out7489;
              _13585_onOwned = _out7490;
              _13586_recIdents = _out7491;
              r = _13584_onExpr;
              if (!object.Equals(_13584_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13579_field));
              RAST._IExpr _out7492;
              DCOMPUTF16._IOwnership _out7493;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7492, out _out7493);
              r = _out7492;
              resultingOwnership = _out7493;
              readIdents = _13586_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SelectFn) {
          DAST._IExpression _13587___mcc_h156 = _source692.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _13588___mcc_h157 = _source692.dtor_field;
          bool _13589___mcc_h158 = _source692.dtor_onDatatype;
          bool _13590___mcc_h159 = _source692.dtor_isStatic;
          BigInteger _13591___mcc_h160 = _source692.dtor_arity;
          bool _13592_isDatatype = _13277___mcc_h51;
          bool _13593_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13594_field = _13275___mcc_h49;
          DAST._IExpression _13595_on = _13274___mcc_h48;
          {
            if ((_13592_isDatatype) || (_13593_isConstant)) {
              RAST._IExpr _13596_onExpr;
              DCOMPUTF16._IOwnership _13597_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13598_recIdents;
              RAST._IExpr _out7494;
              DCOMPUTF16._IOwnership _out7495;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7496;
              DCOMPUTF16.COMP.GenExpr(_13595_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7494, out _out7495, out _out7496);
              _13596_onExpr = _out7494;
              _13597_onOwned = _out7495;
              _13598_recIdents = _out7496;
              r = ((_13596_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13594_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7497;
              DCOMPUTF16._IOwnership _out7498;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7497, out _out7498);
              r = _out7497;
              resultingOwnership = _out7498;
              readIdents = _13598_recIdents;
            } else {
              RAST._IExpr _13599_onExpr;
              DCOMPUTF16._IOwnership _13600_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13601_recIdents;
              RAST._IExpr _out7499;
              DCOMPUTF16._IOwnership _out7500;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7501;
              DCOMPUTF16.COMP.GenExpr(_13595_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7499, out _out7500, out _out7501);
              _13599_onExpr = _out7499;
              _13600_onOwned = _out7500;
              _13601_recIdents = _out7501;
              r = _13599_onExpr;
              if (!object.Equals(_13599_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13594_field));
              RAST._IExpr _out7502;
              DCOMPUTF16._IOwnership _out7503;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7502, out _out7503);
              r = _out7502;
              resultingOwnership = _out7503;
              readIdents = _13601_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Index) {
          DAST._IExpression _13602___mcc_h166 = _source692.dtor_expr;
          DAST._ICollKind _13603___mcc_h167 = _source692.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _13604___mcc_h168 = _source692.dtor_indices;
          bool _13605_isDatatype = _13277___mcc_h51;
          bool _13606_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13607_field = _13275___mcc_h49;
          DAST._IExpression _13608_on = _13274___mcc_h48;
          {
            if ((_13605_isDatatype) || (_13606_isConstant)) {
              RAST._IExpr _13609_onExpr;
              DCOMPUTF16._IOwnership _13610_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13611_recIdents;
              RAST._IExpr _out7504;
              DCOMPUTF16._IOwnership _out7505;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7506;
              DCOMPUTF16.COMP.GenExpr(_13608_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7504, out _out7505, out _out7506);
              _13609_onExpr = _out7504;
              _13610_onOwned = _out7505;
              _13611_recIdents = _out7506;
              r = ((_13609_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13607_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7507;
              DCOMPUTF16._IOwnership _out7508;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7507, out _out7508);
              r = _out7507;
              resultingOwnership = _out7508;
              readIdents = _13611_recIdents;
            } else {
              RAST._IExpr _13612_onExpr;
              DCOMPUTF16._IOwnership _13613_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13614_recIdents;
              RAST._IExpr _out7509;
              DCOMPUTF16._IOwnership _out7510;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7511;
              DCOMPUTF16.COMP.GenExpr(_13608_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7509, out _out7510, out _out7511);
              _13612_onExpr = _out7509;
              _13613_onOwned = _out7510;
              _13614_recIdents = _out7511;
              r = _13612_onExpr;
              if (!object.Equals(_13612_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13607_field));
              RAST._IExpr _out7512;
              DCOMPUTF16._IOwnership _out7513;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7512, out _out7513);
              r = _out7512;
              resultingOwnership = _out7513;
              readIdents = _13614_recIdents;
            }
            return ;
          }
        } else if (_source692.is_IndexRange) {
          DAST._IExpression _13615___mcc_h172 = _source692.dtor_expr;
          bool _13616___mcc_h173 = _source692.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _13617___mcc_h174 = _source692.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _13618___mcc_h175 = _source692.dtor_high;
          bool _13619_isDatatype = _13277___mcc_h51;
          bool _13620_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13621_field = _13275___mcc_h49;
          DAST._IExpression _13622_on = _13274___mcc_h48;
          {
            if ((_13619_isDatatype) || (_13620_isConstant)) {
              RAST._IExpr _13623_onExpr;
              DCOMPUTF16._IOwnership _13624_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13625_recIdents;
              RAST._IExpr _out7514;
              DCOMPUTF16._IOwnership _out7515;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7516;
              DCOMPUTF16.COMP.GenExpr(_13622_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7514, out _out7515, out _out7516);
              _13623_onExpr = _out7514;
              _13624_onOwned = _out7515;
              _13625_recIdents = _out7516;
              r = ((_13623_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13621_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7517;
              DCOMPUTF16._IOwnership _out7518;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7517, out _out7518);
              r = _out7517;
              resultingOwnership = _out7518;
              readIdents = _13625_recIdents;
            } else {
              RAST._IExpr _13626_onExpr;
              DCOMPUTF16._IOwnership _13627_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13628_recIdents;
              RAST._IExpr _out7519;
              DCOMPUTF16._IOwnership _out7520;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7521;
              DCOMPUTF16.COMP.GenExpr(_13622_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7519, out _out7520, out _out7521);
              _13626_onExpr = _out7519;
              _13627_onOwned = _out7520;
              _13628_recIdents = _out7521;
              r = _13626_onExpr;
              if (!object.Equals(_13626_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13621_field));
              RAST._IExpr _out7522;
              DCOMPUTF16._IOwnership _out7523;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7522, out _out7523);
              r = _out7522;
              resultingOwnership = _out7523;
              readIdents = _13628_recIdents;
            }
            return ;
          }
        } else if (_source692.is_TupleSelect) {
          DAST._IExpression _13629___mcc_h180 = _source692.dtor_expr;
          BigInteger _13630___mcc_h181 = _source692.dtor_index;
          bool _13631_isDatatype = _13277___mcc_h51;
          bool _13632_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13633_field = _13275___mcc_h49;
          DAST._IExpression _13634_on = _13274___mcc_h48;
          {
            if ((_13631_isDatatype) || (_13632_isConstant)) {
              RAST._IExpr _13635_onExpr;
              DCOMPUTF16._IOwnership _13636_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13637_recIdents;
              RAST._IExpr _out7524;
              DCOMPUTF16._IOwnership _out7525;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7526;
              DCOMPUTF16.COMP.GenExpr(_13634_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7524, out _out7525, out _out7526);
              _13635_onExpr = _out7524;
              _13636_onOwned = _out7525;
              _13637_recIdents = _out7526;
              r = ((_13635_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13633_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7527;
              DCOMPUTF16._IOwnership _out7528;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7527, out _out7528);
              r = _out7527;
              resultingOwnership = _out7528;
              readIdents = _13637_recIdents;
            } else {
              RAST._IExpr _13638_onExpr;
              DCOMPUTF16._IOwnership _13639_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13640_recIdents;
              RAST._IExpr _out7529;
              DCOMPUTF16._IOwnership _out7530;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7531;
              DCOMPUTF16.COMP.GenExpr(_13634_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7529, out _out7530, out _out7531);
              _13638_onExpr = _out7529;
              _13639_onOwned = _out7530;
              _13640_recIdents = _out7531;
              r = _13638_onExpr;
              if (!object.Equals(_13638_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13633_field));
              RAST._IExpr _out7532;
              DCOMPUTF16._IOwnership _out7533;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7532, out _out7533);
              r = _out7532;
              resultingOwnership = _out7533;
              readIdents = _13640_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Call) {
          DAST._IExpression _13641___mcc_h184 = _source692.dtor_on;
          DAST._ICallName _13642___mcc_h185 = _source692.dtor_callName;
          Dafny.ISequence<DAST._IType> _13643___mcc_h186 = _source692.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _13644___mcc_h187 = _source692.dtor_args;
          bool _13645_isDatatype = _13277___mcc_h51;
          bool _13646_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13647_field = _13275___mcc_h49;
          DAST._IExpression _13648_on = _13274___mcc_h48;
          {
            if ((_13645_isDatatype) || (_13646_isConstant)) {
              RAST._IExpr _13649_onExpr;
              DCOMPUTF16._IOwnership _13650_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13651_recIdents;
              RAST._IExpr _out7534;
              DCOMPUTF16._IOwnership _out7535;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7536;
              DCOMPUTF16.COMP.GenExpr(_13648_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7534, out _out7535, out _out7536);
              _13649_onExpr = _out7534;
              _13650_onOwned = _out7535;
              _13651_recIdents = _out7536;
              r = ((_13649_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13647_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7537;
              DCOMPUTF16._IOwnership _out7538;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7537, out _out7538);
              r = _out7537;
              resultingOwnership = _out7538;
              readIdents = _13651_recIdents;
            } else {
              RAST._IExpr _13652_onExpr;
              DCOMPUTF16._IOwnership _13653_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13654_recIdents;
              RAST._IExpr _out7539;
              DCOMPUTF16._IOwnership _out7540;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7541;
              DCOMPUTF16.COMP.GenExpr(_13648_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7539, out _out7540, out _out7541);
              _13652_onExpr = _out7539;
              _13653_onOwned = _out7540;
              _13654_recIdents = _out7541;
              r = _13652_onExpr;
              if (!object.Equals(_13652_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13647_field));
              RAST._IExpr _out7542;
              DCOMPUTF16._IOwnership _out7543;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7542, out _out7543);
              r = _out7542;
              resultingOwnership = _out7543;
              readIdents = _13654_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _13655___mcc_h192 = _source692.dtor_params;
          DAST._IType _13656___mcc_h193 = _source692.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _13657___mcc_h194 = _source692.dtor_body;
          bool _13658_isDatatype = _13277___mcc_h51;
          bool _13659_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13660_field = _13275___mcc_h49;
          DAST._IExpression _13661_on = _13274___mcc_h48;
          {
            if ((_13658_isDatatype) || (_13659_isConstant)) {
              RAST._IExpr _13662_onExpr;
              DCOMPUTF16._IOwnership _13663_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13664_recIdents;
              RAST._IExpr _out7544;
              DCOMPUTF16._IOwnership _out7545;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7546;
              DCOMPUTF16.COMP.GenExpr(_13661_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7544, out _out7545, out _out7546);
              _13662_onExpr = _out7544;
              _13663_onOwned = _out7545;
              _13664_recIdents = _out7546;
              r = ((_13662_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13660_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7547;
              DCOMPUTF16._IOwnership _out7548;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7547, out _out7548);
              r = _out7547;
              resultingOwnership = _out7548;
              readIdents = _13664_recIdents;
            } else {
              RAST._IExpr _13665_onExpr;
              DCOMPUTF16._IOwnership _13666_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13667_recIdents;
              RAST._IExpr _out7549;
              DCOMPUTF16._IOwnership _out7550;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7551;
              DCOMPUTF16.COMP.GenExpr(_13661_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7549, out _out7550, out _out7551);
              _13665_onExpr = _out7549;
              _13666_onOwned = _out7550;
              _13667_recIdents = _out7551;
              r = _13665_onExpr;
              if (!object.Equals(_13665_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13660_field));
              RAST._IExpr _out7552;
              DCOMPUTF16._IOwnership _out7553;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7552, out _out7553);
              r = _out7552;
              resultingOwnership = _out7553;
              readIdents = _13667_recIdents;
            }
            return ;
          }
        } else if (_source692.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _13668___mcc_h198 = _source692.dtor_values;
          DAST._IType _13669___mcc_h199 = _source692.dtor_retType;
          DAST._IExpression _13670___mcc_h200 = _source692.dtor_expr;
          bool _13671_isDatatype = _13277___mcc_h51;
          bool _13672_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13673_field = _13275___mcc_h49;
          DAST._IExpression _13674_on = _13274___mcc_h48;
          {
            if ((_13671_isDatatype) || (_13672_isConstant)) {
              RAST._IExpr _13675_onExpr;
              DCOMPUTF16._IOwnership _13676_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13677_recIdents;
              RAST._IExpr _out7554;
              DCOMPUTF16._IOwnership _out7555;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7556;
              DCOMPUTF16.COMP.GenExpr(_13674_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7554, out _out7555, out _out7556);
              _13675_onExpr = _out7554;
              _13676_onOwned = _out7555;
              _13677_recIdents = _out7556;
              r = ((_13675_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13673_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7557;
              DCOMPUTF16._IOwnership _out7558;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7557, out _out7558);
              r = _out7557;
              resultingOwnership = _out7558;
              readIdents = _13677_recIdents;
            } else {
              RAST._IExpr _13678_onExpr;
              DCOMPUTF16._IOwnership _13679_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13680_recIdents;
              RAST._IExpr _out7559;
              DCOMPUTF16._IOwnership _out7560;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7561;
              DCOMPUTF16.COMP.GenExpr(_13674_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7559, out _out7560, out _out7561);
              _13678_onExpr = _out7559;
              _13679_onOwned = _out7560;
              _13680_recIdents = _out7561;
              r = _13678_onExpr;
              if (!object.Equals(_13678_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13673_field));
              RAST._IExpr _out7562;
              DCOMPUTF16._IOwnership _out7563;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7562, out _out7563);
              r = _out7562;
              resultingOwnership = _out7563;
              readIdents = _13680_recIdents;
            }
            return ;
          }
        } else if (_source692.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _13681___mcc_h204 = _source692.dtor_name;
          DAST._IType _13682___mcc_h205 = _source692.dtor_typ;
          DAST._IExpression _13683___mcc_h206 = _source692.dtor_value;
          DAST._IExpression _13684___mcc_h207 = _source692.dtor_iifeBody;
          bool _13685_isDatatype = _13277___mcc_h51;
          bool _13686_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13687_field = _13275___mcc_h49;
          DAST._IExpression _13688_on = _13274___mcc_h48;
          {
            if ((_13685_isDatatype) || (_13686_isConstant)) {
              RAST._IExpr _13689_onExpr;
              DCOMPUTF16._IOwnership _13690_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13691_recIdents;
              RAST._IExpr _out7564;
              DCOMPUTF16._IOwnership _out7565;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7566;
              DCOMPUTF16.COMP.GenExpr(_13688_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7564, out _out7565, out _out7566);
              _13689_onExpr = _out7564;
              _13690_onOwned = _out7565;
              _13691_recIdents = _out7566;
              r = ((_13689_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13687_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7567;
              DCOMPUTF16._IOwnership _out7568;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7567, out _out7568);
              r = _out7567;
              resultingOwnership = _out7568;
              readIdents = _13691_recIdents;
            } else {
              RAST._IExpr _13692_onExpr;
              DCOMPUTF16._IOwnership _13693_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13694_recIdents;
              RAST._IExpr _out7569;
              DCOMPUTF16._IOwnership _out7570;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7571;
              DCOMPUTF16.COMP.GenExpr(_13688_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7569, out _out7570, out _out7571);
              _13692_onExpr = _out7569;
              _13693_onOwned = _out7570;
              _13694_recIdents = _out7571;
              r = _13692_onExpr;
              if (!object.Equals(_13692_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13687_field));
              RAST._IExpr _out7572;
              DCOMPUTF16._IOwnership _out7573;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7572, out _out7573);
              r = _out7572;
              resultingOwnership = _out7573;
              readIdents = _13694_recIdents;
            }
            return ;
          }
        } else if (_source692.is_Apply) {
          DAST._IExpression _13695___mcc_h212 = _source692.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _13696___mcc_h213 = _source692.dtor_args;
          bool _13697_isDatatype = _13277___mcc_h51;
          bool _13698_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13699_field = _13275___mcc_h49;
          DAST._IExpression _13700_on = _13274___mcc_h48;
          {
            if ((_13697_isDatatype) || (_13698_isConstant)) {
              RAST._IExpr _13701_onExpr;
              DCOMPUTF16._IOwnership _13702_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13703_recIdents;
              RAST._IExpr _out7574;
              DCOMPUTF16._IOwnership _out7575;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7576;
              DCOMPUTF16.COMP.GenExpr(_13700_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7574, out _out7575, out _out7576);
              _13701_onExpr = _out7574;
              _13702_onOwned = _out7575;
              _13703_recIdents = _out7576;
              r = ((_13701_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13699_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7577;
              DCOMPUTF16._IOwnership _out7578;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7577, out _out7578);
              r = _out7577;
              resultingOwnership = _out7578;
              readIdents = _13703_recIdents;
            } else {
              RAST._IExpr _13704_onExpr;
              DCOMPUTF16._IOwnership _13705_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13706_recIdents;
              RAST._IExpr _out7579;
              DCOMPUTF16._IOwnership _out7580;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7581;
              DCOMPUTF16.COMP.GenExpr(_13700_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7579, out _out7580, out _out7581);
              _13704_onExpr = _out7579;
              _13705_onOwned = _out7580;
              _13706_recIdents = _out7581;
              r = _13704_onExpr;
              if (!object.Equals(_13704_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13699_field));
              RAST._IExpr _out7582;
              DCOMPUTF16._IOwnership _out7583;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7582, out _out7583);
              r = _out7582;
              resultingOwnership = _out7583;
              readIdents = _13706_recIdents;
            }
            return ;
          }
        } else if (_source692.is_TypeTest) {
          DAST._IExpression _13707___mcc_h216 = _source692.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13708___mcc_h217 = _source692.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _13709___mcc_h218 = _source692.dtor_variant;
          bool _13710_isDatatype = _13277___mcc_h51;
          bool _13711_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13712_field = _13275___mcc_h49;
          DAST._IExpression _13713_on = _13274___mcc_h48;
          {
            if ((_13710_isDatatype) || (_13711_isConstant)) {
              RAST._IExpr _13714_onExpr;
              DCOMPUTF16._IOwnership _13715_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13716_recIdents;
              RAST._IExpr _out7584;
              DCOMPUTF16._IOwnership _out7585;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7586;
              DCOMPUTF16.COMP.GenExpr(_13713_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7584, out _out7585, out _out7586);
              _13714_onExpr = _out7584;
              _13715_onOwned = _out7585;
              _13716_recIdents = _out7586;
              r = ((_13714_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13712_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7587;
              DCOMPUTF16._IOwnership _out7588;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7587, out _out7588);
              r = _out7587;
              resultingOwnership = _out7588;
              readIdents = _13716_recIdents;
            } else {
              RAST._IExpr _13717_onExpr;
              DCOMPUTF16._IOwnership _13718_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13719_recIdents;
              RAST._IExpr _out7589;
              DCOMPUTF16._IOwnership _out7590;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7591;
              DCOMPUTF16.COMP.GenExpr(_13713_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7589, out _out7590, out _out7591);
              _13717_onExpr = _out7589;
              _13718_onOwned = _out7590;
              _13719_recIdents = _out7591;
              r = _13717_onExpr;
              if (!object.Equals(_13717_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13712_field));
              RAST._IExpr _out7592;
              DCOMPUTF16._IOwnership _out7593;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7592, out _out7593);
              r = _out7592;
              resultingOwnership = _out7593;
              readIdents = _13719_recIdents;
            }
            return ;
          }
        } else if (_source692.is_InitializationValue) {
          DAST._IType _13720___mcc_h222 = _source692.dtor_typ;
          bool _13721_isDatatype = _13277___mcc_h51;
          bool _13722_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13723_field = _13275___mcc_h49;
          DAST._IExpression _13724_on = _13274___mcc_h48;
          {
            if ((_13721_isDatatype) || (_13722_isConstant)) {
              RAST._IExpr _13725_onExpr;
              DCOMPUTF16._IOwnership _13726_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13727_recIdents;
              RAST._IExpr _out7594;
              DCOMPUTF16._IOwnership _out7595;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7596;
              DCOMPUTF16.COMP.GenExpr(_13724_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7594, out _out7595, out _out7596);
              _13725_onExpr = _out7594;
              _13726_onOwned = _out7595;
              _13727_recIdents = _out7596;
              r = ((_13725_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13723_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7597;
              DCOMPUTF16._IOwnership _out7598;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7597, out _out7598);
              r = _out7597;
              resultingOwnership = _out7598;
              readIdents = _13727_recIdents;
            } else {
              RAST._IExpr _13728_onExpr;
              DCOMPUTF16._IOwnership _13729_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13730_recIdents;
              RAST._IExpr _out7599;
              DCOMPUTF16._IOwnership _out7600;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7601;
              DCOMPUTF16.COMP.GenExpr(_13724_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7599, out _out7600, out _out7601);
              _13728_onExpr = _out7599;
              _13729_onOwned = _out7600;
              _13730_recIdents = _out7601;
              r = _13728_onExpr;
              if (!object.Equals(_13728_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13723_field));
              RAST._IExpr _out7602;
              DCOMPUTF16._IOwnership _out7603;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7602, out _out7603);
              r = _out7602;
              resultingOwnership = _out7603;
              readIdents = _13730_recIdents;
            }
            return ;
          }
        } else if (_source692.is_BoolBoundedPool) {
          bool _13731_isDatatype = _13277___mcc_h51;
          bool _13732_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13733_field = _13275___mcc_h49;
          DAST._IExpression _13734_on = _13274___mcc_h48;
          {
            if ((_13731_isDatatype) || (_13732_isConstant)) {
              RAST._IExpr _13735_onExpr;
              DCOMPUTF16._IOwnership _13736_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13737_recIdents;
              RAST._IExpr _out7604;
              DCOMPUTF16._IOwnership _out7605;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7606;
              DCOMPUTF16.COMP.GenExpr(_13734_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7604, out _out7605, out _out7606);
              _13735_onExpr = _out7604;
              _13736_onOwned = _out7605;
              _13737_recIdents = _out7606;
              r = ((_13735_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13733_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7607;
              DCOMPUTF16._IOwnership _out7608;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7607, out _out7608);
              r = _out7607;
              resultingOwnership = _out7608;
              readIdents = _13737_recIdents;
            } else {
              RAST._IExpr _13738_onExpr;
              DCOMPUTF16._IOwnership _13739_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13740_recIdents;
              RAST._IExpr _out7609;
              DCOMPUTF16._IOwnership _out7610;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7611;
              DCOMPUTF16.COMP.GenExpr(_13734_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7609, out _out7610, out _out7611);
              _13738_onExpr = _out7609;
              _13739_onOwned = _out7610;
              _13740_recIdents = _out7611;
              r = _13738_onExpr;
              if (!object.Equals(_13738_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13733_field));
              RAST._IExpr _out7612;
              DCOMPUTF16._IOwnership _out7613;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7612, out _out7613);
              r = _out7612;
              resultingOwnership = _out7613;
              readIdents = _13740_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SetBoundedPool) {
          DAST._IExpression _13741___mcc_h224 = _source692.dtor_of;
          bool _13742_isDatatype = _13277___mcc_h51;
          bool _13743_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13744_field = _13275___mcc_h49;
          DAST._IExpression _13745_on = _13274___mcc_h48;
          {
            if ((_13742_isDatatype) || (_13743_isConstant)) {
              RAST._IExpr _13746_onExpr;
              DCOMPUTF16._IOwnership _13747_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13748_recIdents;
              RAST._IExpr _out7614;
              DCOMPUTF16._IOwnership _out7615;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7616;
              DCOMPUTF16.COMP.GenExpr(_13745_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7614, out _out7615, out _out7616);
              _13746_onExpr = _out7614;
              _13747_onOwned = _out7615;
              _13748_recIdents = _out7616;
              r = ((_13746_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13744_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7617;
              DCOMPUTF16._IOwnership _out7618;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7617, out _out7618);
              r = _out7617;
              resultingOwnership = _out7618;
              readIdents = _13748_recIdents;
            } else {
              RAST._IExpr _13749_onExpr;
              DCOMPUTF16._IOwnership _13750_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13751_recIdents;
              RAST._IExpr _out7619;
              DCOMPUTF16._IOwnership _out7620;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7621;
              DCOMPUTF16.COMP.GenExpr(_13745_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7619, out _out7620, out _out7621);
              _13749_onExpr = _out7619;
              _13750_onOwned = _out7620;
              _13751_recIdents = _out7621;
              r = _13749_onExpr;
              if (!object.Equals(_13749_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13744_field));
              RAST._IExpr _out7622;
              DCOMPUTF16._IOwnership _out7623;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7622, out _out7623);
              r = _out7622;
              resultingOwnership = _out7623;
              readIdents = _13751_recIdents;
            }
            return ;
          }
        } else if (_source692.is_SeqBoundedPool) {
          DAST._IExpression _13752___mcc_h226 = _source692.dtor_of;
          bool _13753___mcc_h227 = _source692.dtor_includeDuplicates;
          bool _13754_isDatatype = _13277___mcc_h51;
          bool _13755_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13756_field = _13275___mcc_h49;
          DAST._IExpression _13757_on = _13274___mcc_h48;
          {
            if ((_13754_isDatatype) || (_13755_isConstant)) {
              RAST._IExpr _13758_onExpr;
              DCOMPUTF16._IOwnership _13759_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13760_recIdents;
              RAST._IExpr _out7624;
              DCOMPUTF16._IOwnership _out7625;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7626;
              DCOMPUTF16.COMP.GenExpr(_13757_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7624, out _out7625, out _out7626);
              _13758_onExpr = _out7624;
              _13759_onOwned = _out7625;
              _13760_recIdents = _out7626;
              r = ((_13758_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13756_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7627;
              DCOMPUTF16._IOwnership _out7628;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7627, out _out7628);
              r = _out7627;
              resultingOwnership = _out7628;
              readIdents = _13760_recIdents;
            } else {
              RAST._IExpr _13761_onExpr;
              DCOMPUTF16._IOwnership _13762_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13763_recIdents;
              RAST._IExpr _out7629;
              DCOMPUTF16._IOwnership _out7630;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7631;
              DCOMPUTF16.COMP.GenExpr(_13757_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7629, out _out7630, out _out7631);
              _13761_onExpr = _out7629;
              _13762_onOwned = _out7630;
              _13763_recIdents = _out7631;
              r = _13761_onExpr;
              if (!object.Equals(_13761_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13756_field));
              RAST._IExpr _out7632;
              DCOMPUTF16._IOwnership _out7633;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7632, out _out7633);
              r = _out7632;
              resultingOwnership = _out7633;
              readIdents = _13763_recIdents;
            }
            return ;
          }
        } else {
          DAST._IExpression _13764___mcc_h230 = _source692.dtor_lo;
          DAST._IExpression _13765___mcc_h231 = _source692.dtor_hi;
          bool _13766_isDatatype = _13277___mcc_h51;
          bool _13767_isConstant = _13276___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _13768_field = _13275___mcc_h49;
          DAST._IExpression _13769_on = _13274___mcc_h48;
          {
            if ((_13766_isDatatype) || (_13767_isConstant)) {
              RAST._IExpr _13770_onExpr;
              DCOMPUTF16._IOwnership _13771_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13772_recIdents;
              RAST._IExpr _out7634;
              DCOMPUTF16._IOwnership _out7635;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7636;
              DCOMPUTF16.COMP.GenExpr(_13769_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7634, out _out7635, out _out7636);
              _13770_onExpr = _out7634;
              _13771_onOwned = _out7635;
              _13772_recIdents = _out7636;
              r = ((_13770_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_13768_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7637;
              DCOMPUTF16._IOwnership _out7638;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7637, out _out7638);
              r = _out7637;
              resultingOwnership = _out7638;
              readIdents = _13772_recIdents;
            } else {
              RAST._IExpr _13773_onExpr;
              DCOMPUTF16._IOwnership _13774_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13775_recIdents;
              RAST._IExpr _out7639;
              DCOMPUTF16._IOwnership _out7640;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7641;
              DCOMPUTF16.COMP.GenExpr(_13769_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7639, out _out7640, out _out7641);
              _13773_onExpr = _out7639;
              _13774_onOwned = _out7640;
              _13775_recIdents = _out7641;
              r = _13773_onExpr;
              if (!object.Equals(_13773_onExpr, RAST.__default.self)) {
                r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(r);
              }
              r = (r).Sel(DCOMPUTF16.__default.escapeIdent(_13768_field));
              RAST._IExpr _out7642;
              DCOMPUTF16._IOwnership _out7643;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7642, out _out7643);
              r = _out7642;
              resultingOwnership = _out7643;
              readIdents = _13775_recIdents;
            }
            return ;
          }
        }
      } else if (_source689.is_SelectFn) {
        DAST._IExpression _13776___mcc_h234 = _source689.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _13777___mcc_h235 = _source689.dtor_field;
        bool _13778___mcc_h236 = _source689.dtor_onDatatype;
        bool _13779___mcc_h237 = _source689.dtor_isStatic;
        BigInteger _13780___mcc_h238 = _source689.dtor_arity;
        BigInteger _13781_arity = _13780___mcc_h238;
        bool _13782_isStatic = _13779___mcc_h237;
        bool _13783_isDatatype = _13778___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _13784_field = _13777___mcc_h235;
        DAST._IExpression _13785_on = _13776___mcc_h234;
        {
          RAST._IExpr _13786_onExpr;
          DCOMPUTF16._IOwnership _13787_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13788_recIdents;
          RAST._IExpr _out7644;
          DCOMPUTF16._IOwnership _out7645;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7646;
          DCOMPUTF16.COMP.GenExpr(_13785_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7644, out _out7645, out _out7646);
          _13786_onExpr = _out7644;
          _13787_onOwned = _out7645;
          _13788_recIdents = _out7646;
          Dafny.ISequence<Dafny.Rune> _13789_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _13790_onString;
          _13790_onString = (_13786_onExpr)._ToString(DCOMPUTF16.__default.IND);
          if (_13782_isStatic) {
            _13789_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13790_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent(_13784_field));
          } else {
            _13789_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _13789_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13789_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _13790_onString), ((object.Equals(_13787_onOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _13791_args;
            _13791_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _13792_i;
            _13792_i = BigInteger.Zero;
            while ((_13792_i) < (_13781_arity)) {
              if ((_13792_i).Sign == 1) {
                _13791_args = Dafny.Sequence<Dafny.Rune>.Concat(_13791_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _13791_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13791_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_13792_i));
              _13792_i = (_13792_i) + (BigInteger.One);
            }
            _13789_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13789_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _13791_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _13789_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_13789_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _13784_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _13791_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _13789_s = Dafny.Sequence<Dafny.Rune>.Concat(_13789_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _13789_s = Dafny.Sequence<Dafny.Rune>.Concat(_13789_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _13793_typeShape;
          _13793_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _13794_i;
          _13794_i = BigInteger.Zero;
          while ((_13794_i) < (_13781_arity)) {
            if ((_13794_i).Sign == 1) {
              _13793_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_13793_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _13793_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_13793_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _13794_i = (_13794_i) + (BigInteger.One);
          }
          _13793_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_13793_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _13789_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _13789_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _13793_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_13789_s);
          RAST._IExpr _out7647;
          DCOMPUTF16._IOwnership _out7648;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7647, out _out7648);
          r = _out7647;
          resultingOwnership = _out7648;
          readIdents = _13788_recIdents;
          return ;
        }
      } else if (_source689.is_Index) {
        DAST._IExpression _13795___mcc_h239 = _source689.dtor_expr;
        DAST._ICollKind _13796___mcc_h240 = _source689.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _13797___mcc_h241 = _source689.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _13798_indices = _13797___mcc_h241;
        DAST._ICollKind _13799_collKind = _13796___mcc_h240;
        DAST._IExpression _13800_on = _13795___mcc_h239;
        {
          RAST._IExpr _13801_onExpr;
          DCOMPUTF16._IOwnership _13802_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13803_recIdents;
          RAST._IExpr _out7649;
          DCOMPUTF16._IOwnership _out7650;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7651;
          DCOMPUTF16.COMP.GenExpr(_13800_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7649, out _out7650, out _out7651);
          _13801_onExpr = _out7649;
          _13802_onOwned = _out7650;
          _13803_recIdents = _out7651;
          readIdents = _13803_recIdents;
          r = _13801_onExpr;
          BigInteger _13804_i;
          _13804_i = BigInteger.Zero;
          while ((_13804_i) < (new BigInteger((_13798_indices).Count))) {
            if (object.Equals(_13799_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _13805_idx;
            DCOMPUTF16._IOwnership _13806_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13807_recIdentsIdx;
            RAST._IExpr _out7652;
            DCOMPUTF16._IOwnership _out7653;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7654;
            DCOMPUTF16.COMP.GenExpr((_13798_indices).Select(_13804_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7652, out _out7653, out _out7654);
            _13805_idx = _out7652;
            _13806_idxOwned = _out7653;
            _13807_recIdentsIdx = _out7654;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_13805_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13807_recIdentsIdx);
            _13804_i = (_13804_i) + (BigInteger.One);
          }
          RAST._IExpr _out7655;
          DCOMPUTF16._IOwnership _out7656;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7655, out _out7656);
          r = _out7655;
          resultingOwnership = _out7656;
          return ;
        }
      } else if (_source689.is_IndexRange) {
        DAST._IExpression _13808___mcc_h242 = _source689.dtor_expr;
        bool _13809___mcc_h243 = _source689.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _13810___mcc_h244 = _source689.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _13811___mcc_h245 = _source689.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _13812_high = _13811___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _13813_low = _13810___mcc_h244;
        bool _13814_isArray = _13809___mcc_h243;
        DAST._IExpression _13815_on = _13808___mcc_h242;
        {
          RAST._IExpr _13816_onExpr;
          DCOMPUTF16._IOwnership _13817_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13818_recIdents;
          RAST._IExpr _out7657;
          DCOMPUTF16._IOwnership _out7658;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7659;
          DCOMPUTF16.COMP.GenExpr(_13815_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7657, out _out7658, out _out7659);
          _13816_onExpr = _out7657;
          _13817_onOwned = _out7658;
          _13818_recIdents = _out7659;
          readIdents = _13818_recIdents;
          Dafny.ISequence<Dafny.Rune> _13819_methodName;
          _13819_methodName = (((_13813_low).is_Some) ? ((((_13812_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_13812_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _13820_arguments;
          _13820_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source693 = _13813_low;
          if (_source693.is_None) {
          } else {
            DAST._IExpression _13821___mcc_h274 = _source693.dtor_value;
            DAST._IExpression _13822_l = _13821___mcc_h274;
            {
              RAST._IExpr _13823_lExpr;
              DCOMPUTF16._IOwnership _13824___v142;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13825_recIdentsL;
              RAST._IExpr _out7660;
              DCOMPUTF16._IOwnership _out7661;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7662;
              DCOMPUTF16.COMP.GenExpr(_13822_l, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7660, out _out7661, out _out7662);
              _13823_lExpr = _out7660;
              _13824___v142 = _out7661;
              _13825_recIdentsL = _out7662;
              _13820_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13820_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_13823_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13825_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source694 = _13812_high;
          if (_source694.is_None) {
          } else {
            DAST._IExpression _13826___mcc_h275 = _source694.dtor_value;
            DAST._IExpression _13827_h = _13826___mcc_h275;
            {
              RAST._IExpr _13828_hExpr;
              DCOMPUTF16._IOwnership _13829___v143;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13830_recIdentsH;
              RAST._IExpr _out7663;
              DCOMPUTF16._IOwnership _out7664;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7665;
              DCOMPUTF16.COMP.GenExpr(_13827_h, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7663, out _out7664, out _out7665);
              _13828_hExpr = _out7663;
              _13829___v143 = _out7664;
              _13830_recIdentsH = _out7665;
              _13820_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_13820_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_13828_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13830_recIdentsH);
            }
          }
          r = _13816_onExpr;
          if (_13814_isArray) {
            if (!(_13819_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _13819_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _13819_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _13819_methodName))).Apply(_13820_arguments);
          } else {
            if (!(_13819_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_13819_methodName)).Apply(_13820_arguments);
            }
          }
          RAST._IExpr _out7666;
          DCOMPUTF16._IOwnership _out7667;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7666, out _out7667);
          r = _out7666;
          resultingOwnership = _out7667;
          return ;
        }
      } else if (_source689.is_TupleSelect) {
        DAST._IExpression _13831___mcc_h246 = _source689.dtor_expr;
        BigInteger _13832___mcc_h247 = _source689.dtor_index;
        BigInteger _13833_idx = _13832___mcc_h247;
        DAST._IExpression _13834_on = _13831___mcc_h246;
        {
          RAST._IExpr _13835_onExpr;
          DCOMPUTF16._IOwnership _13836_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13837_recIdents;
          RAST._IExpr _out7668;
          DCOMPUTF16._IOwnership _out7669;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7670;
          DCOMPUTF16.COMP.GenExpr(_13834_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7668, out _out7669, out _out7670);
          _13835_onExpr = _out7668;
          _13836_onOwnership = _out7669;
          _13837_recIdents = _out7670;
          r = (_13835_onExpr).Sel(Std.Strings.__default.OfNat(_13833_idx));
          RAST._IExpr _out7671;
          DCOMPUTF16._IOwnership _out7672;
          DCOMPUTF16.COMP.FromOwnership(r, _13836_onOwnership, expectedOwnership, out _out7671, out _out7672);
          r = _out7671;
          resultingOwnership = _out7672;
          readIdents = _13837_recIdents;
          return ;
        }
      } else if (_source689.is_Call) {
        DAST._IExpression _13838___mcc_h248 = _source689.dtor_on;
        DAST._ICallName _13839___mcc_h249 = _source689.dtor_callName;
        Dafny.ISequence<DAST._IType> _13840___mcc_h250 = _source689.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _13841___mcc_h251 = _source689.dtor_args;
        Dafny.ISequence<DAST._IExpression> _13842_args = _13841___mcc_h251;
        Dafny.ISequence<DAST._IType> _13843_typeArgs = _13840___mcc_h250;
        DAST._ICallName _13844_name = _13839___mcc_h249;
        DAST._IExpression _13845_on = _13838___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _13846_onExpr;
          DCOMPUTF16._IOwnership _13847___v144;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13848_recIdents;
          RAST._IExpr _out7673;
          DCOMPUTF16._IOwnership _out7674;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7675;
          DCOMPUTF16.COMP.GenExpr(_13845_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7673, out _out7674, out _out7675);
          _13846_onExpr = _out7673;
          _13847___v144 = _out7674;
          _13848_recIdents = _out7675;
          Dafny.ISequence<RAST._IType> _13849_typeExprs;
          _13849_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_13843_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi40 = new BigInteger((_13843_typeArgs).Count);
            for (BigInteger _13850_typeI = BigInteger.Zero; _13850_typeI < _hi40; _13850_typeI++) {
              RAST._IType _13851_typeExpr;
              RAST._IType _out7676;
              _out7676 = DCOMPUTF16.COMP.GenType((_13843_typeArgs).Select(_13850_typeI), false, false);
              _13851_typeExpr = _out7676;
              _13849_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_13849_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_13851_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _13852_argExprs;
          _13852_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi41 = new BigInteger((_13842_args).Count);
          for (BigInteger _13853_i = BigInteger.Zero; _13853_i < _hi41; _13853_i++) {
            DCOMPUTF16._IOwnership _13854_argOwnership;
            _13854_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_13844_name).is_Name) && ((_13853_i) < (new BigInteger((((_13844_name).dtor_signature)).Count)))) {
              RAST._IType _13855_tpe;
              RAST._IType _out7677;
              _out7677 = DCOMPUTF16.COMP.GenType(((((_13844_name).dtor_signature)).Select(_13853_i)).dtor_typ, false, false);
              _13855_tpe = _out7677;
              if ((_13855_tpe).HasCopySemantics()) {
                _13854_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _13856_argExpr;
            DCOMPUTF16._IOwnership _13857___v145;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13858_argIdents;
            RAST._IExpr _out7678;
            DCOMPUTF16._IOwnership _out7679;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7680;
            DCOMPUTF16.COMP.GenExpr((_13842_args).Select(_13853_i), selfIdent, env, _13854_argOwnership, out _out7678, out _out7679, out _out7680);
            _13856_argExpr = _out7678;
            _13857___v145 = _out7679;
            _13858_argIdents = _out7680;
            _13852_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_13852_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_13856_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13858_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13848_recIdents);
          Dafny.ISequence<Dafny.Rune> _13859_renderedName;
          _13859_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source695) => {
            if (_source695.is_Name) {
              Dafny.ISequence<Dafny.Rune> _13860___mcc_h276 = _source695.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _13861___mcc_h277 = _source695.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _13862___mcc_h278 = _source695.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _13863_ident = _13860___mcc_h276;
              return DCOMPUTF16.__default.escapeIdent(_13863_ident);
            } else if (_source695.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source695.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source695.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_13844_name);
          DAST._IExpression _source696 = _13845_on;
          if (_source696.is_Literal) {
            DAST._ILiteral _13864___mcc_h279 = _source696.dtor_Literal_a0;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source697 = _13844_name;
                if (_source697.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13865___mcc_h461 = _source697.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13866___mcc_h462 = _source697.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13867___mcc_h463 = _source697.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source698 = _13866___mcc_h462;
                  if (_source698.is_None) {
                  } else {
                    DAST._IType _13868___mcc_h467 = _source698.dtor_value;
                    DAST._IType _13869_tpe = _13868___mcc_h467;
                    RAST._IType _13870_typ;
                    RAST._IType _out7681;
                    _out7681 = DCOMPUTF16.COMP.GenType(_13869_tpe, false, false);
                    _13870_typ = _out7681;
                    if (((_13870_typ).is_Pointer) || ((_13870_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source697.is_MapBuilderAdd) {
                } else if (_source697.is_MapBuilderBuild) {
                } else if (_source697.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _13871___mcc_h281 = _source696.dtor_Ident_a0;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source699 = _13844_name;
                if (_source699.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13872___mcc_h469 = _source699.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13873___mcc_h470 = _source699.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13874___mcc_h471 = _source699.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source700 = _13873___mcc_h470;
                  if (_source700.is_None) {
                  } else {
                    DAST._IType _13875___mcc_h475 = _source700.dtor_value;
                    DAST._IType _13876_tpe = _13875___mcc_h475;
                    RAST._IType _13877_typ;
                    RAST._IType _out7682;
                    _out7682 = DCOMPUTF16.COMP.GenType(_13876_tpe, false, false);
                    _13877_typ = _out7682;
                    if (((_13877_typ).is_Pointer) || ((_13877_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source699.is_MapBuilderAdd) {
                } else if (_source699.is_MapBuilderBuild) {
                } else if (_source699.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13878___mcc_h283 = _source696.dtor_Companion_a0;
            {
              _13846_onExpr = (_13846_onExpr).MSel(_13859_renderedName);
            }
          } else if (_source696.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _13879___mcc_h285 = _source696.dtor_Tuple_a0;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source701 = _13844_name;
                if (_source701.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13880___mcc_h477 = _source701.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13881___mcc_h478 = _source701.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13882___mcc_h479 = _source701.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source702 = _13881___mcc_h478;
                  if (_source702.is_None) {
                  } else {
                    DAST._IType _13883___mcc_h483 = _source702.dtor_value;
                    DAST._IType _13884_tpe = _13883___mcc_h483;
                    RAST._IType _13885_typ;
                    RAST._IType _out7683;
                    _out7683 = DCOMPUTF16.COMP.GenType(_13884_tpe, false, false);
                    _13885_typ = _out7683;
                    if (((_13885_typ).is_Pointer) || ((_13885_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source701.is_MapBuilderAdd) {
                } else if (_source701.is_MapBuilderBuild) {
                } else if (_source701.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13886___mcc_h287 = _source696.dtor_path;
            Dafny.ISequence<DAST._IType> _13887___mcc_h288 = _source696.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _13888___mcc_h289 = _source696.dtor_args;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source703 = _13844_name;
                if (_source703.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13889___mcc_h485 = _source703.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13890___mcc_h486 = _source703.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13891___mcc_h487 = _source703.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source704 = _13890___mcc_h486;
                  if (_source704.is_None) {
                  } else {
                    DAST._IType _13892___mcc_h491 = _source704.dtor_value;
                    DAST._IType _13893_tpe = _13892___mcc_h491;
                    RAST._IType _13894_typ;
                    RAST._IType _out7684;
                    _out7684 = DCOMPUTF16.COMP.GenType(_13893_tpe, false, false);
                    _13894_typ = _out7684;
                    if (((_13894_typ).is_Pointer) || ((_13894_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source703.is_MapBuilderAdd) {
                } else if (_source703.is_MapBuilderBuild) {
                } else if (_source703.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _13895___mcc_h293 = _source696.dtor_dims;
            DAST._IType _13896___mcc_h294 = _source696.dtor_typ;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source705 = _13844_name;
                if (_source705.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13897___mcc_h493 = _source705.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13898___mcc_h494 = _source705.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13899___mcc_h495 = _source705.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source706 = _13898___mcc_h494;
                  if (_source706.is_None) {
                  } else {
                    DAST._IType _13900___mcc_h499 = _source706.dtor_value;
                    DAST._IType _13901_tpe = _13900___mcc_h499;
                    RAST._IType _13902_typ;
                    RAST._IType _out7685;
                    _out7685 = DCOMPUTF16.COMP.GenType(_13901_tpe, false, false);
                    _13902_typ = _out7685;
                    if (((_13902_typ).is_Pointer) || ((_13902_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source705.is_MapBuilderAdd) {
                } else if (_source705.is_MapBuilderBuild) {
                } else if (_source705.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_DatatypeValue) {
            DAST._IDatatypeType _13903___mcc_h297 = _source696.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _13904___mcc_h298 = _source696.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _13905___mcc_h299 = _source696.dtor_variant;
            bool _13906___mcc_h300 = _source696.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _13907___mcc_h301 = _source696.dtor_contents;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source707 = _13844_name;
                if (_source707.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13908___mcc_h501 = _source707.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13909___mcc_h502 = _source707.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13910___mcc_h503 = _source707.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source708 = _13909___mcc_h502;
                  if (_source708.is_None) {
                  } else {
                    DAST._IType _13911___mcc_h507 = _source708.dtor_value;
                    DAST._IType _13912_tpe = _13911___mcc_h507;
                    RAST._IType _13913_typ;
                    RAST._IType _out7686;
                    _out7686 = DCOMPUTF16.COMP.GenType(_13912_tpe, false, false);
                    _13913_typ = _out7686;
                    if (((_13913_typ).is_Pointer) || ((_13913_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source707.is_MapBuilderAdd) {
                } else if (_source707.is_MapBuilderBuild) {
                } else if (_source707.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Convert) {
            DAST._IExpression _13914___mcc_h307 = _source696.dtor_value;
            DAST._IType _13915___mcc_h308 = _source696.dtor_from;
            DAST._IType _13916___mcc_h309 = _source696.dtor_typ;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source709 = _13844_name;
                if (_source709.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13917___mcc_h509 = _source709.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13918___mcc_h510 = _source709.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13919___mcc_h511 = _source709.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source710 = _13918___mcc_h510;
                  if (_source710.is_None) {
                  } else {
                    DAST._IType _13920___mcc_h515 = _source710.dtor_value;
                    DAST._IType _13921_tpe = _13920___mcc_h515;
                    RAST._IType _13922_typ;
                    RAST._IType _out7687;
                    _out7687 = DCOMPUTF16.COMP.GenType(_13921_tpe, false, false);
                    _13922_typ = _out7687;
                    if (((_13922_typ).is_Pointer) || ((_13922_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source709.is_MapBuilderAdd) {
                } else if (_source709.is_MapBuilderBuild) {
                } else if (_source709.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SeqConstruct) {
            DAST._IExpression _13923___mcc_h313 = _source696.dtor_length;
            DAST._IExpression _13924___mcc_h314 = _source696.dtor_elem;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source711 = _13844_name;
                if (_source711.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13925___mcc_h517 = _source711.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13926___mcc_h518 = _source711.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13927___mcc_h519 = _source711.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source712 = _13926___mcc_h518;
                  if (_source712.is_None) {
                  } else {
                    DAST._IType _13928___mcc_h523 = _source712.dtor_value;
                    DAST._IType _13929_tpe = _13928___mcc_h523;
                    RAST._IType _13930_typ;
                    RAST._IType _out7688;
                    _out7688 = DCOMPUTF16.COMP.GenType(_13929_tpe, false, false);
                    _13930_typ = _out7688;
                    if (((_13930_typ).is_Pointer) || ((_13930_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source711.is_MapBuilderAdd) {
                } else if (_source711.is_MapBuilderBuild) {
                } else if (_source711.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _13931___mcc_h317 = _source696.dtor_elements;
            DAST._IType _13932___mcc_h318 = _source696.dtor_typ;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source713 = _13844_name;
                if (_source713.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13933___mcc_h525 = _source713.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13934___mcc_h526 = _source713.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13935___mcc_h527 = _source713.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source714 = _13934___mcc_h526;
                  if (_source714.is_None) {
                  } else {
                    DAST._IType _13936___mcc_h531 = _source714.dtor_value;
                    DAST._IType _13937_tpe = _13936___mcc_h531;
                    RAST._IType _13938_typ;
                    RAST._IType _out7689;
                    _out7689 = DCOMPUTF16.COMP.GenType(_13937_tpe, false, false);
                    _13938_typ = _out7689;
                    if (((_13938_typ).is_Pointer) || ((_13938_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source713.is_MapBuilderAdd) {
                } else if (_source713.is_MapBuilderBuild) {
                } else if (_source713.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _13939___mcc_h321 = _source696.dtor_elements;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source715 = _13844_name;
                if (_source715.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13940___mcc_h533 = _source715.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13941___mcc_h534 = _source715.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13942___mcc_h535 = _source715.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source716 = _13941___mcc_h534;
                  if (_source716.is_None) {
                  } else {
                    DAST._IType _13943___mcc_h539 = _source716.dtor_value;
                    DAST._IType _13944_tpe = _13943___mcc_h539;
                    RAST._IType _13945_typ;
                    RAST._IType _out7690;
                    _out7690 = DCOMPUTF16.COMP.GenType(_13944_tpe, false, false);
                    _13945_typ = _out7690;
                    if (((_13945_typ).is_Pointer) || ((_13945_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source715.is_MapBuilderAdd) {
                } else if (_source715.is_MapBuilderBuild) {
                } else if (_source715.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _13946___mcc_h323 = _source696.dtor_elements;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source717 = _13844_name;
                if (_source717.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13947___mcc_h541 = _source717.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13948___mcc_h542 = _source717.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13949___mcc_h543 = _source717.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source718 = _13948___mcc_h542;
                  if (_source718.is_None) {
                  } else {
                    DAST._IType _13950___mcc_h547 = _source718.dtor_value;
                    DAST._IType _13951_tpe = _13950___mcc_h547;
                    RAST._IType _13952_typ;
                    RAST._IType _out7691;
                    _out7691 = DCOMPUTF16.COMP.GenType(_13951_tpe, false, false);
                    _13952_typ = _out7691;
                    if (((_13952_typ).is_Pointer) || ((_13952_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source717.is_MapBuilderAdd) {
                } else if (_source717.is_MapBuilderBuild) {
                } else if (_source717.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _13953___mcc_h325 = _source696.dtor_mapElems;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source719 = _13844_name;
                if (_source719.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13954___mcc_h549 = _source719.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13955___mcc_h550 = _source719.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13956___mcc_h551 = _source719.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source720 = _13955___mcc_h550;
                  if (_source720.is_None) {
                  } else {
                    DAST._IType _13957___mcc_h555 = _source720.dtor_value;
                    DAST._IType _13958_tpe = _13957___mcc_h555;
                    RAST._IType _13959_typ;
                    RAST._IType _out7692;
                    _out7692 = DCOMPUTF16.COMP.GenType(_13958_tpe, false, false);
                    _13959_typ = _out7692;
                    if (((_13959_typ).is_Pointer) || ((_13959_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source719.is_MapBuilderAdd) {
                } else if (_source719.is_MapBuilderBuild) {
                } else if (_source719.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_MapBuilder) {
            DAST._IType _13960___mcc_h327 = _source696.dtor_keyType;
            DAST._IType _13961___mcc_h328 = _source696.dtor_valueType;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source721 = _13844_name;
                if (_source721.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13962___mcc_h557 = _source721.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13963___mcc_h558 = _source721.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13964___mcc_h559 = _source721.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source722 = _13963___mcc_h558;
                  if (_source722.is_None) {
                  } else {
                    DAST._IType _13965___mcc_h563 = _source722.dtor_value;
                    DAST._IType _13966_tpe = _13965___mcc_h563;
                    RAST._IType _13967_typ;
                    RAST._IType _out7693;
                    _out7693 = DCOMPUTF16.COMP.GenType(_13966_tpe, false, false);
                    _13967_typ = _out7693;
                    if (((_13967_typ).is_Pointer) || ((_13967_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source721.is_MapBuilderAdd) {
                } else if (_source721.is_MapBuilderBuild) {
                } else if (_source721.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SeqUpdate) {
            DAST._IExpression _13968___mcc_h331 = _source696.dtor_expr;
            DAST._IExpression _13969___mcc_h332 = _source696.dtor_indexExpr;
            DAST._IExpression _13970___mcc_h333 = _source696.dtor_value;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source723 = _13844_name;
                if (_source723.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13971___mcc_h565 = _source723.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13972___mcc_h566 = _source723.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13973___mcc_h567 = _source723.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source724 = _13972___mcc_h566;
                  if (_source724.is_None) {
                  } else {
                    DAST._IType _13974___mcc_h571 = _source724.dtor_value;
                    DAST._IType _13975_tpe = _13974___mcc_h571;
                    RAST._IType _13976_typ;
                    RAST._IType _out7694;
                    _out7694 = DCOMPUTF16.COMP.GenType(_13975_tpe, false, false);
                    _13976_typ = _out7694;
                    if (((_13976_typ).is_Pointer) || ((_13976_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source723.is_MapBuilderAdd) {
                } else if (_source723.is_MapBuilderBuild) {
                } else if (_source723.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_MapUpdate) {
            DAST._IExpression _13977___mcc_h337 = _source696.dtor_expr;
            DAST._IExpression _13978___mcc_h338 = _source696.dtor_indexExpr;
            DAST._IExpression _13979___mcc_h339 = _source696.dtor_value;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source725 = _13844_name;
                if (_source725.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13980___mcc_h573 = _source725.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13981___mcc_h574 = _source725.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13982___mcc_h575 = _source725.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source726 = _13981___mcc_h574;
                  if (_source726.is_None) {
                  } else {
                    DAST._IType _13983___mcc_h579 = _source726.dtor_value;
                    DAST._IType _13984_tpe = _13983___mcc_h579;
                    RAST._IType _13985_typ;
                    RAST._IType _out7695;
                    _out7695 = DCOMPUTF16.COMP.GenType(_13984_tpe, false, false);
                    _13985_typ = _out7695;
                    if (((_13985_typ).is_Pointer) || ((_13985_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source725.is_MapBuilderAdd) {
                } else if (_source725.is_MapBuilderBuild) {
                } else if (_source725.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SetBuilder) {
            DAST._IType _13986___mcc_h343 = _source696.dtor_elemType;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source727 = _13844_name;
                if (_source727.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13987___mcc_h581 = _source727.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13988___mcc_h582 = _source727.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13989___mcc_h583 = _source727.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source728 = _13988___mcc_h582;
                  if (_source728.is_None) {
                  } else {
                    DAST._IType _13990___mcc_h587 = _source728.dtor_value;
                    DAST._IType _13991_tpe = _13990___mcc_h587;
                    RAST._IType _13992_typ;
                    RAST._IType _out7696;
                    _out7696 = DCOMPUTF16.COMP.GenType(_13991_tpe, false, false);
                    _13992_typ = _out7696;
                    if (((_13992_typ).is_Pointer) || ((_13992_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source727.is_MapBuilderAdd) {
                } else if (_source727.is_MapBuilderBuild) {
                } else if (_source727.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_ToMultiset) {
            DAST._IExpression _13993___mcc_h345 = _source696.dtor_ToMultiset_a0;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source729 = _13844_name;
                if (_source729.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _13994___mcc_h589 = _source729.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _13995___mcc_h590 = _source729.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _13996___mcc_h591 = _source729.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source730 = _13995___mcc_h590;
                  if (_source730.is_None) {
                  } else {
                    DAST._IType _13997___mcc_h595 = _source730.dtor_value;
                    DAST._IType _13998_tpe = _13997___mcc_h595;
                    RAST._IType _13999_typ;
                    RAST._IType _out7697;
                    _out7697 = DCOMPUTF16.COMP.GenType(_13998_tpe, false, false);
                    _13999_typ = _out7697;
                    if (((_13999_typ).is_Pointer) || ((_13999_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source729.is_MapBuilderAdd) {
                } else if (_source729.is_MapBuilderBuild) {
                } else if (_source729.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_This) {
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source731 = _13844_name;
                if (_source731.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14000___mcc_h597 = _source731.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14001___mcc_h598 = _source731.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14002___mcc_h599 = _source731.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source732 = _14001___mcc_h598;
                  if (_source732.is_None) {
                  } else {
                    DAST._IType _14003___mcc_h603 = _source732.dtor_value;
                    DAST._IType _14004_tpe = _14003___mcc_h603;
                    RAST._IType _14005_typ;
                    RAST._IType _out7698;
                    _out7698 = DCOMPUTF16.COMP.GenType(_14004_tpe, false, false);
                    _14005_typ = _out7698;
                    if (((_14005_typ).is_Pointer) || ((_14005_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source731.is_MapBuilderAdd) {
                } else if (_source731.is_MapBuilderBuild) {
                } else if (_source731.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Ite) {
            DAST._IExpression _14006___mcc_h347 = _source696.dtor_cond;
            DAST._IExpression _14007___mcc_h348 = _source696.dtor_thn;
            DAST._IExpression _14008___mcc_h349 = _source696.dtor_els;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source733 = _13844_name;
                if (_source733.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14009___mcc_h605 = _source733.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14010___mcc_h606 = _source733.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14011___mcc_h607 = _source733.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source734 = _14010___mcc_h606;
                  if (_source734.is_None) {
                  } else {
                    DAST._IType _14012___mcc_h611 = _source734.dtor_value;
                    DAST._IType _14013_tpe = _14012___mcc_h611;
                    RAST._IType _14014_typ;
                    RAST._IType _out7699;
                    _out7699 = DCOMPUTF16.COMP.GenType(_14013_tpe, false, false);
                    _14014_typ = _out7699;
                    if (((_14014_typ).is_Pointer) || ((_14014_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source733.is_MapBuilderAdd) {
                } else if (_source733.is_MapBuilderBuild) {
                } else if (_source733.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_UnOp) {
            DAST._IUnaryOp _14015___mcc_h353 = _source696.dtor_unOp;
            DAST._IExpression _14016___mcc_h354 = _source696.dtor_expr;
            DAST.Format._IUnOpFormat _14017___mcc_h355 = _source696.dtor_format1;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source735 = _13844_name;
                if (_source735.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14018___mcc_h613 = _source735.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14019___mcc_h614 = _source735.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14020___mcc_h615 = _source735.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source736 = _14019___mcc_h614;
                  if (_source736.is_None) {
                  } else {
                    DAST._IType _14021___mcc_h619 = _source736.dtor_value;
                    DAST._IType _14022_tpe = _14021___mcc_h619;
                    RAST._IType _14023_typ;
                    RAST._IType _out7700;
                    _out7700 = DCOMPUTF16.COMP.GenType(_14022_tpe, false, false);
                    _14023_typ = _out7700;
                    if (((_14023_typ).is_Pointer) || ((_14023_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source735.is_MapBuilderAdd) {
                } else if (_source735.is_MapBuilderBuild) {
                } else if (_source735.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_BinOp) {
            DAST._IBinOp _14024___mcc_h359 = _source696.dtor_op;
            DAST._IExpression _14025___mcc_h360 = _source696.dtor_left;
            DAST._IExpression _14026___mcc_h361 = _source696.dtor_right;
            DAST.Format._IBinOpFormat _14027___mcc_h362 = _source696.dtor_format2;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source737 = _13844_name;
                if (_source737.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14028___mcc_h621 = _source737.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14029___mcc_h622 = _source737.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14030___mcc_h623 = _source737.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source738 = _14029___mcc_h622;
                  if (_source738.is_None) {
                  } else {
                    DAST._IType _14031___mcc_h627 = _source738.dtor_value;
                    DAST._IType _14032_tpe = _14031___mcc_h627;
                    RAST._IType _14033_typ;
                    RAST._IType _out7701;
                    _out7701 = DCOMPUTF16.COMP.GenType(_14032_tpe, false, false);
                    _14033_typ = _out7701;
                    if (((_14033_typ).is_Pointer) || ((_14033_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source737.is_MapBuilderAdd) {
                } else if (_source737.is_MapBuilderBuild) {
                } else if (_source737.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_ArrayLen) {
            DAST._IExpression _14034___mcc_h367 = _source696.dtor_expr;
            BigInteger _14035___mcc_h368 = _source696.dtor_dim;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source739 = _13844_name;
                if (_source739.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14036___mcc_h629 = _source739.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14037___mcc_h630 = _source739.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14038___mcc_h631 = _source739.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source740 = _14037___mcc_h630;
                  if (_source740.is_None) {
                  } else {
                    DAST._IType _14039___mcc_h635 = _source740.dtor_value;
                    DAST._IType _14040_tpe = _14039___mcc_h635;
                    RAST._IType _14041_typ;
                    RAST._IType _out7702;
                    _out7702 = DCOMPUTF16.COMP.GenType(_14040_tpe, false, false);
                    _14041_typ = _out7702;
                    if (((_14041_typ).is_Pointer) || ((_14041_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source739.is_MapBuilderAdd) {
                } else if (_source739.is_MapBuilderBuild) {
                } else if (_source739.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_MapKeys) {
            DAST._IExpression _14042___mcc_h371 = _source696.dtor_expr;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source741 = _13844_name;
                if (_source741.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14043___mcc_h637 = _source741.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14044___mcc_h638 = _source741.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14045___mcc_h639 = _source741.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source742 = _14044___mcc_h638;
                  if (_source742.is_None) {
                  } else {
                    DAST._IType _14046___mcc_h643 = _source742.dtor_value;
                    DAST._IType _14047_tpe = _14046___mcc_h643;
                    RAST._IType _14048_typ;
                    RAST._IType _out7703;
                    _out7703 = DCOMPUTF16.COMP.GenType(_14047_tpe, false, false);
                    _14048_typ = _out7703;
                    if (((_14048_typ).is_Pointer) || ((_14048_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source741.is_MapBuilderAdd) {
                } else if (_source741.is_MapBuilderBuild) {
                } else if (_source741.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_MapValues) {
            DAST._IExpression _14049___mcc_h373 = _source696.dtor_expr;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source743 = _13844_name;
                if (_source743.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14050___mcc_h645 = _source743.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14051___mcc_h646 = _source743.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14052___mcc_h647 = _source743.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source744 = _14051___mcc_h646;
                  if (_source744.is_None) {
                  } else {
                    DAST._IType _14053___mcc_h651 = _source744.dtor_value;
                    DAST._IType _14054_tpe = _14053___mcc_h651;
                    RAST._IType _14055_typ;
                    RAST._IType _out7704;
                    _out7704 = DCOMPUTF16.COMP.GenType(_14054_tpe, false, false);
                    _14055_typ = _out7704;
                    if (((_14055_typ).is_Pointer) || ((_14055_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source743.is_MapBuilderAdd) {
                } else if (_source743.is_MapBuilderBuild) {
                } else if (_source743.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Select) {
            DAST._IExpression _14056___mcc_h375 = _source696.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _14057___mcc_h376 = _source696.dtor_field;
            bool _14058___mcc_h377 = _source696.dtor_isConstant;
            bool _14059___mcc_h378 = _source696.dtor_onDatatype;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source745 = _13844_name;
                if (_source745.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14060___mcc_h653 = _source745.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14061___mcc_h654 = _source745.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14062___mcc_h655 = _source745.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source746 = _14061___mcc_h654;
                  if (_source746.is_None) {
                  } else {
                    DAST._IType _14063___mcc_h659 = _source746.dtor_value;
                    DAST._IType _14064_tpe = _14063___mcc_h659;
                    RAST._IType _14065_typ;
                    RAST._IType _out7705;
                    _out7705 = DCOMPUTF16.COMP.GenType(_14064_tpe, false, false);
                    _14065_typ = _out7705;
                    if (((_14065_typ).is_Pointer) || ((_14065_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source745.is_MapBuilderAdd) {
                } else if (_source745.is_MapBuilderBuild) {
                } else if (_source745.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SelectFn) {
            DAST._IExpression _14066___mcc_h383 = _source696.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _14067___mcc_h384 = _source696.dtor_field;
            bool _14068___mcc_h385 = _source696.dtor_onDatatype;
            bool _14069___mcc_h386 = _source696.dtor_isStatic;
            BigInteger _14070___mcc_h387 = _source696.dtor_arity;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source747 = _13844_name;
                if (_source747.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14071___mcc_h661 = _source747.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14072___mcc_h662 = _source747.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14073___mcc_h663 = _source747.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source748 = _14072___mcc_h662;
                  if (_source748.is_None) {
                  } else {
                    DAST._IType _14074___mcc_h667 = _source748.dtor_value;
                    DAST._IType _14075_tpe = _14074___mcc_h667;
                    RAST._IType _14076_typ;
                    RAST._IType _out7706;
                    _out7706 = DCOMPUTF16.COMP.GenType(_14075_tpe, false, false);
                    _14076_typ = _out7706;
                    if (((_14076_typ).is_Pointer) || ((_14076_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source747.is_MapBuilderAdd) {
                } else if (_source747.is_MapBuilderBuild) {
                } else if (_source747.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Index) {
            DAST._IExpression _14077___mcc_h393 = _source696.dtor_expr;
            DAST._ICollKind _14078___mcc_h394 = _source696.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _14079___mcc_h395 = _source696.dtor_indices;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source749 = _13844_name;
                if (_source749.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14080___mcc_h669 = _source749.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14081___mcc_h670 = _source749.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14082___mcc_h671 = _source749.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source750 = _14081___mcc_h670;
                  if (_source750.is_None) {
                  } else {
                    DAST._IType _14083___mcc_h675 = _source750.dtor_value;
                    DAST._IType _14084_tpe = _14083___mcc_h675;
                    RAST._IType _14085_typ;
                    RAST._IType _out7707;
                    _out7707 = DCOMPUTF16.COMP.GenType(_14084_tpe, false, false);
                    _14085_typ = _out7707;
                    if (((_14085_typ).is_Pointer) || ((_14085_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source749.is_MapBuilderAdd) {
                } else if (_source749.is_MapBuilderBuild) {
                } else if (_source749.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_IndexRange) {
            DAST._IExpression _14086___mcc_h399 = _source696.dtor_expr;
            bool _14087___mcc_h400 = _source696.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _14088___mcc_h401 = _source696.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _14089___mcc_h402 = _source696.dtor_high;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source751 = _13844_name;
                if (_source751.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14090___mcc_h677 = _source751.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14091___mcc_h678 = _source751.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14092___mcc_h679 = _source751.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source752 = _14091___mcc_h678;
                  if (_source752.is_None) {
                  } else {
                    DAST._IType _14093___mcc_h683 = _source752.dtor_value;
                    DAST._IType _14094_tpe = _14093___mcc_h683;
                    RAST._IType _14095_typ;
                    RAST._IType _out7708;
                    _out7708 = DCOMPUTF16.COMP.GenType(_14094_tpe, false, false);
                    _14095_typ = _out7708;
                    if (((_14095_typ).is_Pointer) || ((_14095_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source751.is_MapBuilderAdd) {
                } else if (_source751.is_MapBuilderBuild) {
                } else if (_source751.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_TupleSelect) {
            DAST._IExpression _14096___mcc_h407 = _source696.dtor_expr;
            BigInteger _14097___mcc_h408 = _source696.dtor_index;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source753 = _13844_name;
                if (_source753.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14098___mcc_h685 = _source753.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14099___mcc_h686 = _source753.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14100___mcc_h687 = _source753.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source754 = _14099___mcc_h686;
                  if (_source754.is_None) {
                  } else {
                    DAST._IType _14101___mcc_h691 = _source754.dtor_value;
                    DAST._IType _14102_tpe = _14101___mcc_h691;
                    RAST._IType _14103_typ;
                    RAST._IType _out7709;
                    _out7709 = DCOMPUTF16.COMP.GenType(_14102_tpe, false, false);
                    _14103_typ = _out7709;
                    if (((_14103_typ).is_Pointer) || ((_14103_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source753.is_MapBuilderAdd) {
                } else if (_source753.is_MapBuilderBuild) {
                } else if (_source753.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Call) {
            DAST._IExpression _14104___mcc_h411 = _source696.dtor_on;
            DAST._ICallName _14105___mcc_h412 = _source696.dtor_callName;
            Dafny.ISequence<DAST._IType> _14106___mcc_h413 = _source696.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _14107___mcc_h414 = _source696.dtor_args;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source755 = _13844_name;
                if (_source755.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14108___mcc_h693 = _source755.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14109___mcc_h694 = _source755.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14110___mcc_h695 = _source755.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source756 = _14109___mcc_h694;
                  if (_source756.is_None) {
                  } else {
                    DAST._IType _14111___mcc_h699 = _source756.dtor_value;
                    DAST._IType _14112_tpe = _14111___mcc_h699;
                    RAST._IType _14113_typ;
                    RAST._IType _out7710;
                    _out7710 = DCOMPUTF16.COMP.GenType(_14112_tpe, false, false);
                    _14113_typ = _out7710;
                    if (((_14113_typ).is_Pointer) || ((_14113_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source755.is_MapBuilderAdd) {
                } else if (_source755.is_MapBuilderBuild) {
                } else if (_source755.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _14114___mcc_h419 = _source696.dtor_params;
            DAST._IType _14115___mcc_h420 = _source696.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _14116___mcc_h421 = _source696.dtor_body;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source757 = _13844_name;
                if (_source757.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14117___mcc_h701 = _source757.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14118___mcc_h702 = _source757.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14119___mcc_h703 = _source757.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source758 = _14118___mcc_h702;
                  if (_source758.is_None) {
                  } else {
                    DAST._IType _14120___mcc_h707 = _source758.dtor_value;
                    DAST._IType _14121_tpe = _14120___mcc_h707;
                    RAST._IType _14122_typ;
                    RAST._IType _out7711;
                    _out7711 = DCOMPUTF16.COMP.GenType(_14121_tpe, false, false);
                    _14122_typ = _out7711;
                    if (((_14122_typ).is_Pointer) || ((_14122_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source757.is_MapBuilderAdd) {
                } else if (_source757.is_MapBuilderBuild) {
                } else if (_source757.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _14123___mcc_h425 = _source696.dtor_values;
            DAST._IType _14124___mcc_h426 = _source696.dtor_retType;
            DAST._IExpression _14125___mcc_h427 = _source696.dtor_expr;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source759 = _13844_name;
                if (_source759.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14126___mcc_h709 = _source759.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14127___mcc_h710 = _source759.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14128___mcc_h711 = _source759.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source760 = _14127___mcc_h710;
                  if (_source760.is_None) {
                  } else {
                    DAST._IType _14129___mcc_h715 = _source760.dtor_value;
                    DAST._IType _14130_tpe = _14129___mcc_h715;
                    RAST._IType _14131_typ;
                    RAST._IType _out7712;
                    _out7712 = DCOMPUTF16.COMP.GenType(_14130_tpe, false, false);
                    _14131_typ = _out7712;
                    if (((_14131_typ).is_Pointer) || ((_14131_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source759.is_MapBuilderAdd) {
                } else if (_source759.is_MapBuilderBuild) {
                } else if (_source759.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _14132___mcc_h431 = _source696.dtor_name;
            DAST._IType _14133___mcc_h432 = _source696.dtor_typ;
            DAST._IExpression _14134___mcc_h433 = _source696.dtor_value;
            DAST._IExpression _14135___mcc_h434 = _source696.dtor_iifeBody;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source761 = _13844_name;
                if (_source761.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14136___mcc_h717 = _source761.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14137___mcc_h718 = _source761.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14138___mcc_h719 = _source761.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source762 = _14137___mcc_h718;
                  if (_source762.is_None) {
                  } else {
                    DAST._IType _14139___mcc_h723 = _source762.dtor_value;
                    DAST._IType _14140_tpe = _14139___mcc_h723;
                    RAST._IType _14141_typ;
                    RAST._IType _out7713;
                    _out7713 = DCOMPUTF16.COMP.GenType(_14140_tpe, false, false);
                    _14141_typ = _out7713;
                    if (((_14141_typ).is_Pointer) || ((_14141_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source761.is_MapBuilderAdd) {
                } else if (_source761.is_MapBuilderBuild) {
                } else if (_source761.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_Apply) {
            DAST._IExpression _14142___mcc_h439 = _source696.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _14143___mcc_h440 = _source696.dtor_args;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source763 = _13844_name;
                if (_source763.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14144___mcc_h725 = _source763.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14145___mcc_h726 = _source763.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14146___mcc_h727 = _source763.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source764 = _14145___mcc_h726;
                  if (_source764.is_None) {
                  } else {
                    DAST._IType _14147___mcc_h731 = _source764.dtor_value;
                    DAST._IType _14148_tpe = _14147___mcc_h731;
                    RAST._IType _14149_typ;
                    RAST._IType _out7714;
                    _out7714 = DCOMPUTF16.COMP.GenType(_14148_tpe, false, false);
                    _14149_typ = _out7714;
                    if (((_14149_typ).is_Pointer) || ((_14149_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source763.is_MapBuilderAdd) {
                } else if (_source763.is_MapBuilderBuild) {
                } else if (_source763.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_TypeTest) {
            DAST._IExpression _14150___mcc_h443 = _source696.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14151___mcc_h444 = _source696.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _14152___mcc_h445 = _source696.dtor_variant;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source765 = _13844_name;
                if (_source765.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14153___mcc_h733 = _source765.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14154___mcc_h734 = _source765.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14155___mcc_h735 = _source765.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source766 = _14154___mcc_h734;
                  if (_source766.is_None) {
                  } else {
                    DAST._IType _14156___mcc_h739 = _source766.dtor_value;
                    DAST._IType _14157_tpe = _14156___mcc_h739;
                    RAST._IType _14158_typ;
                    RAST._IType _out7715;
                    _out7715 = DCOMPUTF16.COMP.GenType(_14157_tpe, false, false);
                    _14158_typ = _out7715;
                    if (((_14158_typ).is_Pointer) || ((_14158_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source765.is_MapBuilderAdd) {
                } else if (_source765.is_MapBuilderBuild) {
                } else if (_source765.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_InitializationValue) {
            DAST._IType _14159___mcc_h449 = _source696.dtor_typ;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source767 = _13844_name;
                if (_source767.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14160___mcc_h741 = _source767.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14161___mcc_h742 = _source767.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14162___mcc_h743 = _source767.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source768 = _14161___mcc_h742;
                  if (_source768.is_None) {
                  } else {
                    DAST._IType _14163___mcc_h747 = _source768.dtor_value;
                    DAST._IType _14164_tpe = _14163___mcc_h747;
                    RAST._IType _14165_typ;
                    RAST._IType _out7716;
                    _out7716 = DCOMPUTF16.COMP.GenType(_14164_tpe, false, false);
                    _14165_typ = _out7716;
                    if (((_14165_typ).is_Pointer) || ((_14165_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source767.is_MapBuilderAdd) {
                } else if (_source767.is_MapBuilderBuild) {
                } else if (_source767.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_BoolBoundedPool) {
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source769 = _13844_name;
                if (_source769.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14166___mcc_h749 = _source769.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14167___mcc_h750 = _source769.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14168___mcc_h751 = _source769.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source770 = _14167___mcc_h750;
                  if (_source770.is_None) {
                  } else {
                    DAST._IType _14169___mcc_h755 = _source770.dtor_value;
                    DAST._IType _14170_tpe = _14169___mcc_h755;
                    RAST._IType _14171_typ;
                    RAST._IType _out7717;
                    _out7717 = DCOMPUTF16.COMP.GenType(_14170_tpe, false, false);
                    _14171_typ = _out7717;
                    if (((_14171_typ).is_Pointer) || ((_14171_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source769.is_MapBuilderAdd) {
                } else if (_source769.is_MapBuilderBuild) {
                } else if (_source769.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SetBoundedPool) {
            DAST._IExpression _14172___mcc_h451 = _source696.dtor_of;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source771 = _13844_name;
                if (_source771.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14173___mcc_h757 = _source771.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14174___mcc_h758 = _source771.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14175___mcc_h759 = _source771.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source772 = _14174___mcc_h758;
                  if (_source772.is_None) {
                  } else {
                    DAST._IType _14176___mcc_h763 = _source772.dtor_value;
                    DAST._IType _14177_tpe = _14176___mcc_h763;
                    RAST._IType _14178_typ;
                    RAST._IType _out7718;
                    _out7718 = DCOMPUTF16.COMP.GenType(_14177_tpe, false, false);
                    _14178_typ = _out7718;
                    if (((_14178_typ).is_Pointer) || ((_14178_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source771.is_MapBuilderAdd) {
                } else if (_source771.is_MapBuilderBuild) {
                } else if (_source771.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else if (_source696.is_SeqBoundedPool) {
            DAST._IExpression _14179___mcc_h453 = _source696.dtor_of;
            bool _14180___mcc_h454 = _source696.dtor_includeDuplicates;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source773 = _13844_name;
                if (_source773.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14181___mcc_h765 = _source773.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14182___mcc_h766 = _source773.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14183___mcc_h767 = _source773.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source774 = _14182___mcc_h766;
                  if (_source774.is_None) {
                  } else {
                    DAST._IType _14184___mcc_h771 = _source774.dtor_value;
                    DAST._IType _14185_tpe = _14184___mcc_h771;
                    RAST._IType _14186_typ;
                    RAST._IType _out7719;
                    _out7719 = DCOMPUTF16.COMP.GenType(_14185_tpe, false, false);
                    _14186_typ = _out7719;
                    if (((_14186_typ).is_Pointer) || ((_14186_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source773.is_MapBuilderAdd) {
                } else if (_source773.is_MapBuilderBuild) {
                } else if (_source773.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          } else {
            DAST._IExpression _14187___mcc_h457 = _source696.dtor_lo;
            DAST._IExpression _14188___mcc_h458 = _source696.dtor_hi;
            {
              if (!object.Equals(_13846_onExpr, RAST.__default.self)) {
                DAST._ICallName _source775 = _13844_name;
                if (_source775.is_Name) {
                  Dafny.ISequence<Dafny.Rune> _14189___mcc_h773 = _source775.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _14190___mcc_h774 = _source775.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _14191___mcc_h775 = _source775.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source776 = _14190___mcc_h774;
                  if (_source776.is_None) {
                  } else {
                    DAST._IType _14192___mcc_h779 = _source776.dtor_value;
                    DAST._IType _14193_tpe = _14192___mcc_h779;
                    RAST._IType _14194_typ;
                    RAST._IType _out7720;
                    _out7720 = DCOMPUTF16.COMP.GenType(_14193_tpe, false, false);
                    _14194_typ = _out7720;
                    if (((_14194_typ).is_Pointer) || ((_14194_typ).is_PointerMut)) {
                      _13846_onExpr = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_13846_onExpr);
                    }
                  }
                } else if (_source775.is_MapBuilderAdd) {
                } else if (_source775.is_MapBuilderBuild) {
                } else if (_source775.is_SetBuilderAdd) {
                } else {
                }
              }
              _13846_onExpr = (_13846_onExpr).Sel(_13859_renderedName);
            }
          }
          r = _13846_onExpr;
          if ((new BigInteger((_13849_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_13849_typeExprs);
          }
          r = (r).Apply(_13852_argExprs);
          RAST._IExpr _out7721;
          DCOMPUTF16._IOwnership _out7722;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7721, out _out7722);
          r = _out7721;
          resultingOwnership = _out7722;
          return ;
        }
      } else if (_source689.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _14195___mcc_h252 = _source689.dtor_params;
        DAST._IType _14196___mcc_h253 = _source689.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _14197___mcc_h254 = _source689.dtor_body;
        Dafny.ISequence<DAST._IStatement> _14198_body = _14197___mcc_h254;
        DAST._IType _14199_retType = _14196___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _14200_paramsDafny = _14195___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _14201_params;
          Dafny.ISequence<RAST._IFormal> _out7723;
          _out7723 = DCOMPUTF16.COMP.GenParams(_14200_paramsDafny);
          _14201_params = _out7723;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14202_paramNames;
          _14202_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _14203_paramTypesMap;
          _14203_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi42 = new BigInteger((_14201_params).Count);
          for (BigInteger _14204_i = BigInteger.Zero; _14204_i < _hi42; _14204_i++) {
            Dafny.ISequence<Dafny.Rune> _14205_name;
            _14205_name = ((_14201_params).Select(_14204_i)).dtor_name;
            _14202_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_14202_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_14205_name));
            _14203_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_14203_paramTypesMap, _14205_name, ((_14201_params).Select(_14204_i)).dtor_tpe);
          }
          DCOMPUTF16._IEnvironment _14206_env;
          _14206_env = DCOMPUTF16.Environment.create(_14202_paramNames, _14203_paramTypesMap);
          RAST._IExpr _14207_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14208_recIdents;
          DCOMPUTF16._IEnvironment _14209___v153;
          RAST._IExpr _out7724;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7725;
          DCOMPUTF16._IEnvironment _out7726;
          DCOMPUTF16.COMP.GenStmts(_14198_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _14206_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out7724, out _out7725, out _out7726);
          _14207_recursiveGen = _out7724;
          _14208_recIdents = _out7725;
          _14209___v153 = _out7726;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _14210_allReadCloned;
          _14210_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_14208_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _14211_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_5 in (_14208_recIdents).Elements) {
              _14211_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_5;
              if ((_14208_recIdents).Contains(_14211_next)) {
                goto after__ASSIGN_SUCH_THAT_5;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3557)");
          after__ASSIGN_SUCH_THAT_5: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_14211_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _14210_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_14210_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_14202_paramNames).Contains(_14211_next))) {
              _14210_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14210_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_14211_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_14211_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_14211_next));
            }
            _14208_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_14208_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_14211_next));
          }
          Dafny.ISequence<Dafny.Rune> _14212_paramsString;
          _14212_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _14213_paramTypes;
          _14213_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi43 = new BigInteger((_14201_params).Count);
          for (BigInteger _14214_i = BigInteger.Zero; _14214_i < _hi43; _14214_i++) {
            if ((_14214_i).Sign == 1) {
              _14212_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_14212_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _14213_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_14213_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _14212_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14212_paramsString, DCOMPUTF16.__default.escapeIdent(((_14201_params).Select(_14214_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_14201_params).Select(_14214_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
            _14213_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_14213_paramTypes, (RAST.Type.create_Borrowed(((_14201_params).Select(_14214_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
          }
          RAST._IType _14215_retTypeGen;
          RAST._IType _out7727;
          _out7727 = DCOMPUTF16.COMP.GenType(_14199_retType, false, true);
          _14215_retTypeGen = _out7727;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _14213_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_14215_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _14210_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _14212_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_14215_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_14207_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out7728;
          DCOMPUTF16._IOwnership _out7729;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7728, out _out7729);
          r = _out7728;
          resultingOwnership = _out7729;
          return ;
        }
      } else if (_source689.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _14216___mcc_h255 = _source689.dtor_values;
        DAST._IType _14217___mcc_h256 = _source689.dtor_retType;
        DAST._IExpression _14218___mcc_h257 = _source689.dtor_expr;
        DAST._IExpression _14219_expr = _14218___mcc_h257;
        DAST._IType _14220_retType = _14217___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _14221_values = _14216___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14222_paramNames;
          _14222_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _14223_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out7730;
          _out7730 = DCOMPUTF16.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_14224_value) => {
            return (_14224_value).dtor__0;
          })), _14221_values));
          _14223_paramFormals = _out7730;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _14225_paramTypes;
          _14225_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14226_paramNamesSet;
          _14226_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi44 = new BigInteger((_14221_values).Count);
          for (BigInteger _14227_i = BigInteger.Zero; _14227_i < _hi44; _14227_i++) {
            Dafny.ISequence<Dafny.Rune> _14228_name;
            _14228_name = (((_14221_values).Select(_14227_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _14229_rName;
            _14229_rName = DCOMPUTF16.__default.escapeIdent(_14228_name);
            _14222_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_14222_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_14229_rName));
            _14225_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_14225_paramTypes, _14229_rName, ((_14223_paramFormals).Select(_14227_i)).dtor_tpe);
            _14226_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_14226_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_14228_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _14230_s;
          _14230_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _14231_paramsString;
          _14231_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi45 = new BigInteger((_14221_values).Count);
          for (BigInteger _14232_i = BigInteger.Zero; _14232_i < _hi45; _14232_i++) {
            if ((_14232_i).Sign == 1) {
              _14231_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_14231_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _14233_typStr;
            RAST._IType _out7731;
            _out7731 = DCOMPUTF16.COMP.GenType((((_14221_values).Select(_14232_i)).dtor__0).dtor_typ, false, true);
            _14233_typStr = _out7731;
            RAST._IExpr _14234_valueGen;
            DCOMPUTF16._IOwnership _14235___v154;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14236_recIdents;
            RAST._IExpr _out7732;
            DCOMPUTF16._IOwnership _out7733;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7734;
            DCOMPUTF16.COMP.GenExpr(((_14221_values).Select(_14232_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7732, out _out7733, out _out7734);
            _14234_valueGen = _out7732;
            _14235___v154 = _out7733;
            _14236_recIdents = _out7734;
            _14230_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14230_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent((((_14221_values).Select(_14232_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_14233_typStr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _14236_recIdents);
            _14230_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14230_s, (_14234_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMPUTF16._IEnvironment _14237_newEnv;
          _14237_newEnv = DCOMPUTF16.Environment.create(_14222_paramNames, _14225_paramTypes);
          RAST._IExpr _14238_recGen;
          DCOMPUTF16._IOwnership _14239_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14240_recIdents;
          RAST._IExpr _out7735;
          DCOMPUTF16._IOwnership _out7736;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7737;
          DCOMPUTF16.COMP.GenExpr(_14219_expr, selfIdent, _14237_newEnv, expectedOwnership, out _out7735, out _out7736, out _out7737);
          _14238_recGen = _out7735;
          _14239_recOwned = _out7736;
          _14240_recIdents = _out7737;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_14240_recIdents, _14226_paramNamesSet);
          _14230_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_14230_s, (_14238_recGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_14230_s);
          RAST._IExpr _out7738;
          DCOMPUTF16._IOwnership _out7739;
          DCOMPUTF16.COMP.FromOwnership(r, _14239_recOwned, expectedOwnership, out _out7738, out _out7739);
          r = _out7738;
          resultingOwnership = _out7739;
          return ;
        }
      } else if (_source689.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _14241___mcc_h258 = _source689.dtor_name;
        DAST._IType _14242___mcc_h259 = _source689.dtor_typ;
        DAST._IExpression _14243___mcc_h260 = _source689.dtor_value;
        DAST._IExpression _14244___mcc_h261 = _source689.dtor_iifeBody;
        DAST._IExpression _14245_iifeBody = _14244___mcc_h261;
        DAST._IExpression _14246_value = _14243___mcc_h260;
        DAST._IType _14247_tpe = _14242___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _14248_name = _14241___mcc_h258;
        {
          RAST._IExpr _14249_valueGen;
          DCOMPUTF16._IOwnership _14250___v155;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14251_recIdents;
          RAST._IExpr _out7740;
          DCOMPUTF16._IOwnership _out7741;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7742;
          DCOMPUTF16.COMP.GenExpr(_14246_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7740, out _out7741, out _out7742);
          _14249_valueGen = _out7740;
          _14250___v155 = _out7741;
          _14251_recIdents = _out7742;
          readIdents = _14251_recIdents;
          RAST._IType _14252_valueTypeGen;
          RAST._IType _out7743;
          _out7743 = DCOMPUTF16.COMP.GenType(_14247_tpe, false, true);
          _14252_valueTypeGen = _out7743;
          RAST._IExpr _14253_bodyGen;
          DCOMPUTF16._IOwnership _14254___v156;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14255_bodyIdents;
          RAST._IExpr _out7744;
          DCOMPUTF16._IOwnership _out7745;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7746;
          DCOMPUTF16.COMP.GenExpr(_14245_iifeBody, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7744, out _out7745, out _out7746);
          _14253_bodyGen = _out7744;
          _14254___v156 = _out7745;
          _14255_bodyIdents = _out7746;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_14255_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_14248_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMPUTF16.__default.escapeIdent((_14248_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_14252_valueTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_14249_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_14253_bodyGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out7747;
          DCOMPUTF16._IOwnership _out7748;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7747, out _out7748);
          r = _out7747;
          resultingOwnership = _out7748;
          return ;
        }
      } else if (_source689.is_Apply) {
        DAST._IExpression _14256___mcc_h262 = _source689.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _14257___mcc_h263 = _source689.dtor_args;
        Dafny.ISequence<DAST._IExpression> _14258_args = _14257___mcc_h263;
        DAST._IExpression _14259_func = _14256___mcc_h262;
        {
          RAST._IExpr _14260_funcExpr;
          DCOMPUTF16._IOwnership _14261___v157;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14262_recIdents;
          RAST._IExpr _out7749;
          DCOMPUTF16._IOwnership _out7750;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7751;
          DCOMPUTF16.COMP.GenExpr(_14259_func, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7749, out _out7750, out _out7751);
          _14260_funcExpr = _out7749;
          _14261___v157 = _out7750;
          _14262_recIdents = _out7751;
          readIdents = _14262_recIdents;
          Dafny.ISequence<Dafny.Rune> _14263_argString;
          _14263_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _14264_i;
          _14264_i = BigInteger.Zero;
          while ((_14264_i) < (new BigInteger((_14258_args).Count))) {
            if ((_14264_i).Sign == 1) {
              _14263_argString = Dafny.Sequence<Dafny.Rune>.Concat(_14263_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _14265_argExpr;
            DCOMPUTF16._IOwnership _14266_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14267_argIdents;
            RAST._IExpr _out7752;
            DCOMPUTF16._IOwnership _out7753;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7754;
            DCOMPUTF16.COMP.GenExpr((_14258_args).Select(_14264_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7752, out _out7753, out _out7754);
            _14265_argExpr = _out7752;
            _14266_argOwned = _out7753;
            _14267_argIdents = _out7754;
            Dafny.ISequence<Dafny.Rune> _14268_argExprString;
            _14268_argExprString = (_14265_argExpr)._ToString(DCOMPUTF16.__default.IND);
            if (object.Equals(_14266_argOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
              _14268_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _14268_argExprString);
            }
            _14263_argString = Dafny.Sequence<Dafny.Rune>.Concat(_14263_argString, _14268_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _14267_argIdents);
            _14264_i = (_14264_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_14260_funcExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _14263_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out7755;
          DCOMPUTF16._IOwnership _out7756;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7755, out _out7756);
          r = _out7755;
          resultingOwnership = _out7756;
          return ;
        }
      } else if (_source689.is_TypeTest) {
        DAST._IExpression _14269___mcc_h264 = _source689.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14270___mcc_h265 = _source689.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _14271___mcc_h266 = _source689.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _14272_variant = _14271___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _14273_dType = _14270___mcc_h265;
        DAST._IExpression _14274_on = _14269___mcc_h264;
        {
          RAST._IExpr _14275_exprGen;
          DCOMPUTF16._IOwnership _14276___v158;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14277_recIdents;
          RAST._IExpr _out7757;
          DCOMPUTF16._IOwnership _out7758;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7759;
          DCOMPUTF16.COMP.GenExpr(_14274_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7757, out _out7758, out _out7759);
          _14275_exprGen = _out7757;
          _14276___v158 = _out7758;
          _14277_recIdents = _out7759;
          RAST._IType _14278_dTypePath;
          RAST._IType _out7760;
          _out7760 = DCOMPUTF16.COMP.GenPath(_14273_dType);
          _14278_dTypePath = _out7760;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_14275_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_14278_dTypePath).MSel(DCOMPUTF16.__default.escapeIdent(_14272_variant)))._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out7761;
          DCOMPUTF16._IOwnership _out7762;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7761, out _out7762);
          r = _out7761;
          resultingOwnership = _out7762;
          readIdents = _14277_recIdents;
          return ;
        }
      } else if (_source689.is_InitializationValue) {
        DAST._IType _14279___mcc_h267 = _source689.dtor_typ;
        DAST._IType _14280_typ = _14279___mcc_h267;
        {
          RAST._IType _14281_typExpr;
          RAST._IType _out7763;
          _out7763 = DCOMPUTF16.COMP.GenType(_14280_typ, false, false);
          _14281_typExpr = _out7763;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_14281_typExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out7764;
          DCOMPUTF16._IOwnership _out7765;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7764, out _out7765);
          r = _out7764;
          resultingOwnership = _out7765;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source689.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out7766;
          DCOMPUTF16._IOwnership _out7767;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7766, out _out7767);
          r = _out7766;
          resultingOwnership = _out7767;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source689.is_SetBoundedPool) {
        DAST._IExpression _14282___mcc_h268 = _source689.dtor_of;
        DAST._IExpression _14283_of = _14282___mcc_h268;
        {
          RAST._IExpr _14284_exprGen;
          DCOMPUTF16._IOwnership _14285___v159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14286_recIdents;
          RAST._IExpr _out7768;
          DCOMPUTF16._IOwnership _out7769;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7770;
          DCOMPUTF16.COMP.GenExpr(_14283_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7768, out _out7769, out _out7770);
          _14284_exprGen = _out7768;
          _14285___v159 = _out7769;
          _14286_recIdents = _out7770;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_14284_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out7771;
          DCOMPUTF16._IOwnership _out7772;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7771, out _out7772);
          r = _out7771;
          resultingOwnership = _out7772;
          readIdents = _14286_recIdents;
          return ;
        }
      } else if (_source689.is_SeqBoundedPool) {
        DAST._IExpression _14287___mcc_h269 = _source689.dtor_of;
        bool _14288___mcc_h270 = _source689.dtor_includeDuplicates;
        bool _14289_includeDuplicates = _14288___mcc_h270;
        DAST._IExpression _14290_of = _14287___mcc_h269;
        {
          RAST._IExpr _14291_exprGen;
          DCOMPUTF16._IOwnership _14292___v160;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14293_recIdents;
          RAST._IExpr _out7773;
          DCOMPUTF16._IOwnership _out7774;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7775;
          DCOMPUTF16.COMP.GenExpr(_14290_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7773, out _out7774, out _out7775);
          _14291_exprGen = _out7773;
          _14292___v160 = _out7774;
          _14293_recIdents = _out7775;
          Dafny.ISequence<Dafny.Rune> _14294_s;
          _14294_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_14291_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_14289_includeDuplicates)) {
            _14294_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _14294_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_14294_s);
          RAST._IExpr _out7776;
          DCOMPUTF16._IOwnership _out7777;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7776, out _out7777);
          r = _out7776;
          resultingOwnership = _out7777;
          readIdents = _14293_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _14295___mcc_h271 = _source689.dtor_lo;
        DAST._IExpression _14296___mcc_h272 = _source689.dtor_hi;
        DAST._IExpression _14297_hi = _14296___mcc_h272;
        DAST._IExpression _14298_lo = _14295___mcc_h271;
        {
          RAST._IExpr _14299_lo;
          DCOMPUTF16._IOwnership _14300___v161;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14301_recIdentsLo;
          RAST._IExpr _out7778;
          DCOMPUTF16._IOwnership _out7779;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7780;
          DCOMPUTF16.COMP.GenExpr(_14298_lo, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7778, out _out7779, out _out7780);
          _14299_lo = _out7778;
          _14300___v161 = _out7779;
          _14301_recIdentsLo = _out7780;
          RAST._IExpr _14302_hi;
          DCOMPUTF16._IOwnership _14303___v162;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _14304_recIdentsHi;
          RAST._IExpr _out7781;
          DCOMPUTF16._IOwnership _out7782;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7783;
          DCOMPUTF16.COMP.GenExpr(_14297_hi, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7781, out _out7782, out _out7783);
          _14302_hi = _out7781;
          _14303___v162 = _out7782;
          _14304_recIdentsHi = _out7783;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_14299_lo)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_14302_hi)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out7784;
          DCOMPUTF16._IOwnership _out7785;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7784, out _out7785);
          r = _out7784;
          resultingOwnership = _out7785;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_14301_recIdentsLo, _14304_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _14305_i;
      _14305_i = BigInteger.Zero;
      while ((_14305_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _14306_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _14307_m;
        RAST._IMod _out7786;
        _out7786 = DCOMPUTF16.COMP.GenModule((p).Select(_14305_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _14307_m = _out7786;
        _14306_generated = (_14307_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_14305_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _14306_generated);
        _14305_i = (_14305_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _14308_i;
      _14308_i = BigInteger.Zero;
      while ((_14308_i) < (new BigInteger((fullName).Count))) {
        if ((_14308_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMPUTF16.__default.escapeIdent((fullName).Select(_14308_i)));
        _14308_i = (_14308_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMPUTF16

