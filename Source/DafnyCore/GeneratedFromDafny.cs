// Dafny program the_program compiled into C#
// To recompile, you will need the libraries
//     System.Runtime.Numerics.dll System.Collections.Immutable.dll
// but the 'dotnet' tool in net6.0 should pick those up automatically.
// Optionally, you may want to include compiler switches like
//     /debug /nowarn:162,164,168,183,219,436,1717,1718

using System;
using System.Numerics;
using System.Collections;
namespace Formatting {

  public partial class __default {
    public static System.String ReindentProgramFromFirstToken(Microsoft.Dafny.IToken firstToken, Formatting.IIndentationFormatter reindent)
    {
      System.String s = default(System.String);
      Microsoft.Dafny.IToken token;
      token = firstToken;
      System.Text.StringBuilder sb;
      System.Text.StringBuilder _nw0 = new System.Text.StringBuilder();
      sb = _nw0;
      while ((token) != (object) ((Microsoft.Dafny.IToken)null)) {
        System.String newLeadingTrivia;
        newLeadingTrivia = (reindent).GetNewLeadingTrivia(token);
        System.String newTrailingTrivia;
        newTrailingTrivia = (reindent).GetNewTrailingTrivia(token);
        (sb).Append(newLeadingTrivia);
        (sb).Append(token.val);
        (sb).Append(newTrailingTrivia);
        token = token.Next;
      }
      System.String _out0;
      _out0 = (sb).ToString().ToString();
      s = _out0;
      return s;
    }
  }

  public interface IIndentationFormatter {
    System.String GetNewLeadingTrivia(Microsoft.Dafny.IToken token);
    System.String GetNewTrailingTrivia(Microsoft.Dafny.IToken token);
  }
  public class _Companion_IIndentationFormatter {
  }
} // end of namespace Formatting


namespace Std.Wrappers {

  public partial class __default {
    public static Std.Wrappers._IOutcomeResult<__E> Need<__E>(bool condition, __E error)
    {
      if (condition) {
        return Std.Wrappers.OutcomeResult<__E>.create_Pass_k();
      } else {
        return Std.Wrappers.OutcomeResult<__E>.create_Fail_k(error);
      }
    }
  }

  public interface _IOption<out T> {
    bool is_None { get; }
    bool is_Some { get; }
    T dtor_value { get; }
    _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    bool IsFailure();
    Std.Wrappers._IOption<__U> PropagateFailure<__U>();
    T Extract();
    Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error);
    Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error);
  }
  public abstract class Option<T> : _IOption<T> {
    public Option() {
    }
    public static Std.Wrappers._IOption<T> Default() {
      return create_None();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOption<T>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOption<T>>(Std.Wrappers.Option<T>.Default());
    }
    public static _IOption<T> create_None() {
      return new Option_None<T>();
    }
    public static _IOption<T> create_Some(T @value) {
      return new Option_Some<T>(@value);
    }
    public bool is_None { get { return this is Option_None<T>; } }
    public bool is_Some { get { return this is Option_Some<T>; } }
    public T dtor_value {
      get {
        var d = this;
        return ((Option_Some<T>)d)._value;
      }
    }
    public abstract _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0);
    public bool IsFailure() {
      return (this).is_None;
    }
    public Std.Wrappers._IOption<__U> PropagateFailure<__U>() {
      return Std.Wrappers.Option<__U>.create_None();
    }
    public T Extract() {
      return (this).dtor_value;
    }
    public static T GetOr(Std.Wrappers._IOption<T> _this, T @default) {
      Std.Wrappers._IOption<T> _source0 = _this;
      if (_source0.is_None) {
        return @default;
      } else {
        T __mcc_h0 = _source0.dtor_value;
        T v = __mcc_h0;
        return v;
      }
    }
    public Std.Wrappers._IResult<T, __E> ToResult<__E>(__E error) {
      Std.Wrappers._IOption<T> _source1 = this;
      if (_source1.is_None) {
        return Std.Wrappers.Result<T, __E>.create_Failure(error);
      } else {
        T __mcc_h0 = _source1.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Result<T, __E>.create_Success(v);
      }
    }
    public Std.Wrappers._IOutcome<__E> ToOutcome<__E>(__E error) {
      Std.Wrappers._IOption<T> _source2 = this;
      if (_source2.is_None) {
        return Std.Wrappers.Outcome<__E>.create_Fail(error);
      } else {
        T __mcc_h0 = _source2.dtor_value;
        T v = __mcc_h0;
        return Std.Wrappers.Outcome<__E>.create_Pass();
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOption<T> _this, Func<Std.Wrappers._IOption<T>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOption<T>, __FC>>(rewrap)(_this);
    }
  }
  public class Option_None<T> : Option<T> {
    public Option_None() : base() {
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_None<__T>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_None<T>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.None";
      return s;
    }
  }
  public class Option_Some<T> : Option<T> {
    public readonly T _value;
    public Option_Some(T @value) : base() {
      this._value = @value;
    }
    public override _IOption<__T> DowncastClone<__T>(Func<T, __T> converter0) {
      if (this is _IOption<__T> dt) { return dt; }
      return new Option_Some<__T>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Option_Some<T>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Option.Some";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }

  public interface _IResult<out R, out E> {
    bool is_Success { get; }
    bool is_Failure { get; }
    R dtor_value { get; }
    E dtor_error { get; }
    _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
    R Extract();
    Std.Wrappers._IOption<R> ToOption();
    Std.Wrappers._IOutcome<E> ToOutcome();
  }
  public abstract class Result<R, E> : _IResult<R, E> {
    public Result() {
    }
    public static Std.Wrappers._IResult<R, E> Default(R _default_R) {
      return create_Success(_default_R);
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>> _TypeDescriptor(Dafny.TypeDescriptor<R> _td_R) {
      return new Dafny.TypeDescriptor<Std.Wrappers._IResult<R, E>>(Std.Wrappers.Result<R, E>.Default(_td_R.Default()));
    }
    public static _IResult<R, E> create_Success(R @value) {
      return new Result_Success<R, E>(@value);
    }
    public static _IResult<R, E> create_Failure(E error) {
      return new Result_Failure<R, E>(error);
    }
    public bool is_Success { get { return this is Result_Success<R, E>; } }
    public bool is_Failure { get { return this is Result_Failure<R, E>; } }
    public R dtor_value {
      get {
        var d = this;
        return ((Result_Success<R, E>)d)._value;
      }
    }
    public E dtor_error {
      get {
        var d = this;
        return ((Result_Failure<R, E>)d)._error;
      }
    }
    public abstract _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1);
    public bool IsFailure() {
      return (this).is_Failure;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
    public R Extract() {
      return (this).dtor_value;
    }
    public static R GetOr(Std.Wrappers._IResult<R, E> _this, R @default) {
      Std.Wrappers._IResult<R, E> _source3 = _this;
      if (_source3.is_Success) {
        R _10___mcc_h0 = _source3.dtor_value;
        R _11_s = _10___mcc_h0;
        return _11_s;
      } else {
        E _12___mcc_h1 = _source3.dtor_error;
        E _13_e = _12___mcc_h1;
        return @default;
      }
    }
    public Std.Wrappers._IOption<R> ToOption() {
      Std.Wrappers._IResult<R, E> _source4 = this;
      if (_source4.is_Success) {
        R _14___mcc_h0 = _source4.dtor_value;
        R _15_s = _14___mcc_h0;
        return Std.Wrappers.Option<R>.create_Some(_15_s);
      } else {
        E _16___mcc_h1 = _source4.dtor_error;
        E _17_e = _16___mcc_h1;
        return Std.Wrappers.Option<R>.create_None();
      }
    }
    public Std.Wrappers._IOutcome<E> ToOutcome() {
      Std.Wrappers._IResult<R, E> _source5 = this;
      if (_source5.is_Success) {
        R _18___mcc_h0 = _source5.dtor_value;
        R _19_s = _18___mcc_h0;
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        E _20___mcc_h1 = _source5.dtor_error;
        E _21_e = _20___mcc_h1;
        return Std.Wrappers.Outcome<E>.create_Fail(_21_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IResult<R, E> _this, Func<Std.Wrappers._IResult<R, E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IResult<R, E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<R, __NewE> MapFailure<__NewE>(Std.Wrappers._IResult<R, E> _this, Func<E, __NewE> reWrap) {
      Std.Wrappers._IResult<R, E> _source6 = _this;
      if (_source6.is_Success) {
        R _22___mcc_h0 = _source6.dtor_value;
        R _23_s = _22___mcc_h0;
        return Std.Wrappers.Result<R, __NewE>.create_Success(_23_s);
      } else {
        E _24___mcc_h1 = _source6.dtor_error;
        E _25_e = _24___mcc_h1;
        return Std.Wrappers.Result<R, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(reWrap)(_25_e));
      }
    }
  }
  public class Result_Success<R, E> : Result<R, E> {
    public readonly R _value;
    public Result_Success(R @value) : base() {
      this._value = @value;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Success<__R, __E>(converter0(_value));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Success<R, E>;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Success";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Result_Failure<R, E> : Result<R, E> {
    public readonly E _error;
    public Result_Failure(E error) : base() {
      this._error = error;
    }
    public override _IResult<__R, __E> DowncastClone<__R, __E>(Func<R, __R> converter0, Func<E, __E> converter1) {
      if (this is _IResult<__R, __E> dt) { return dt; }
      return new Result_Failure<__R, __E>(converter1(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Result_Failure<R, E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Result.Failure";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcome<out E> {
    bool is_Pass { get; }
    bool is_Fail { get; }
    E dtor_error { get; }
    _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IOutcome<E> PropagateFailure();
    Std.Wrappers._IOption<__R> ToOption<__R>(__R r);
    Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r);
  }
  public abstract class Outcome<E> : _IOutcome<E> {
    public Outcome() {
    }
    public static Std.Wrappers._IOutcome<E> Default() {
      return create_Pass();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcome<E>>(Std.Wrappers.Outcome<E>.Default());
    }
    public static _IOutcome<E> create_Pass() {
      return new Outcome_Pass<E>();
    }
    public static _IOutcome<E> create_Fail(E error) {
      return new Outcome_Fail<E>(error);
    }
    public bool is_Pass { get { return this is Outcome_Pass<E>; } }
    public bool is_Fail { get { return this is Outcome_Fail<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((Outcome_Fail<E>)d)._error;
      }
    }
    public abstract _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail;
    }
    public Std.Wrappers._IOutcome<E> PropagateFailure() {
      return this;
    }
    public Std.Wrappers._IOption<__R> ToOption<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source7 = this;
      if (_source7.is_Pass) {
        return Std.Wrappers.Option<__R>.create_Some(r);
      } else {
        E _26___mcc_h0 = _source7.dtor_error;
        E _27_e = _26___mcc_h0;
        return Std.Wrappers.Option<__R>.create_None();
      }
    }
    public Std.Wrappers._IResult<__R, E> ToResult<__R>(__R r) {
      Std.Wrappers._IOutcome<E> _source8 = this;
      if (_source8.is_Pass) {
        return Std.Wrappers.Result<__R, E>.create_Success(r);
      } else {
        E _28___mcc_h0 = _source8.dtor_error;
        E _29_e = _28___mcc_h0;
        return Std.Wrappers.Result<__R, E>.create_Failure(_29_e);
      }
    }
    public static __FC Map<__FC>(Std.Wrappers._IOutcome<E> _this, Func<Std.Wrappers._IOutcome<E>, __FC> rewrap) {
      return Dafny.Helpers.Id<Func<Std.Wrappers._IOutcome<E>, __FC>>(rewrap)(_this);
    }
    public static Std.Wrappers._IResult<__T, __NewE> MapFailure<__T, __NewE>(Std.Wrappers._IOutcome<E> _this, Func<E, __NewE> rewrap, __T @default)
    {
      Std.Wrappers._IOutcome<E> _source9 = _this;
      if (_source9.is_Pass) {
        return Std.Wrappers.Result<__T, __NewE>.create_Success(@default);
      } else {
        E _30___mcc_h0 = _source9.dtor_error;
        E _31_e = _30___mcc_h0;
        return Std.Wrappers.Result<__T, __NewE>.create_Failure(Dafny.Helpers.Id<Func<E, __NewE>>(rewrap)(_31_e));
      }
    }
    public static Std.Wrappers._IOutcome<E> Need(bool condition, E error)
    {
      if (condition) {
        return Std.Wrappers.Outcome<E>.create_Pass();
      } else {
        return Std.Wrappers.Outcome<E>.create_Fail(error);
      }
    }
  }
  public class Outcome_Pass<E> : Outcome<E> {
    public Outcome_Pass() : base() {
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Pass<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Pass<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Pass";
      return s;
    }
  }
  public class Outcome_Fail<E> : Outcome<E> {
    public readonly E _error;
    public Outcome_Fail(E error) : base() {
      this._error = error;
    }
    public override _IOutcome<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcome<__E> dt) { return dt; }
      return new Outcome_Fail<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.Outcome_Fail<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.Outcome.Fail";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }

  public interface _IOutcomeResult<out E> {
    bool is_Pass_k { get; }
    bool is_Fail_k { get; }
    E dtor_error { get; }
    _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    bool IsFailure();
    Std.Wrappers._IResult<__U, E> PropagateFailure<__U>();
  }
  public abstract class OutcomeResult<E> : _IOutcomeResult<E> {
    public OutcomeResult() {
    }
    public static Std.Wrappers._IOutcomeResult<E> Default() {
      return create_Pass_k();
    }
    public static Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>> _TypeDescriptor() {
      return new Dafny.TypeDescriptor<Std.Wrappers._IOutcomeResult<E>>(Std.Wrappers.OutcomeResult<E>.Default());
    }
    public static _IOutcomeResult<E> create_Pass_k() {
      return new OutcomeResult_Pass_k<E>();
    }
    public static _IOutcomeResult<E> create_Fail_k(E error) {
      return new OutcomeResult_Fail_k<E>(error);
    }
    public bool is_Pass_k { get { return this is OutcomeResult_Pass_k<E>; } }
    public bool is_Fail_k { get { return this is OutcomeResult_Fail_k<E>; } }
    public E dtor_error {
      get {
        var d = this;
        return ((OutcomeResult_Fail_k<E>)d)._error;
      }
    }
    public abstract _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0);
    public bool IsFailure() {
      return (this).is_Fail_k;
    }
    public Std.Wrappers._IResult<__U, E> PropagateFailure<__U>() {
      return Std.Wrappers.Result<__U, E>.create_Failure((this).dtor_error);
    }
  }
  public class OutcomeResult_Pass_k<E> : OutcomeResult<E> {
    public OutcomeResult_Pass_k() : base() {
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Pass_k<__E>();
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Pass_k<E>;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Pass'";
      return s;
    }
  }
  public class OutcomeResult_Fail_k<E> : OutcomeResult<E> {
    public readonly E _error;
    public OutcomeResult_Fail_k(E error) : base() {
      this._error = error;
    }
    public override _IOutcomeResult<__E> DowncastClone<__E>(Func<E, __E> converter0) {
      if (this is _IOutcomeResult<__E> dt) { return dt; }
      return new OutcomeResult_Fail_k<__E>(converter0(_error));
    }
    public override bool Equals(object other) {
      var oth = other as Std.Wrappers.OutcomeResult_Fail_k<E>;
      return oth != null && object.Equals(this._error, oth._error);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._error));
      return (int) hash;
    }
    public override string ToString() {
      string s = "Wrappers.OutcomeResult.Fail'";
      s += "(";
      s += Dafny.Helpers.ToString(this._error);
      s += ")";
      return s;
    }
  }
} // end of namespace Std.Wrappers
namespace Std.Math {

  public partial class __default {
    public static BigInteger Min(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return a;
      } else {
        return b;
      }
    }
    public static BigInteger Min3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Min(a, Std.Math.__default.Min(b, c));
    }
    public static BigInteger Max(BigInteger a, BigInteger b)
    {
      if ((a) < (b)) {
        return b;
      } else {
        return a;
      }
    }
    public static BigInteger Max3(BigInteger a, BigInteger b, BigInteger c)
    {
      return Std.Math.__default.Max(a, Std.Math.__default.Max(b, c));
    }
    public static BigInteger Abs(BigInteger a) {
      if ((a).Sign == -1) {
        return (BigInteger.Zero) - (a);
      } else {
        return a;
      }
    }
  }
} // end of namespace Std.Math
namespace Std.Collections.Seq {

  public partial class __default {
    public static __T First<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select(BigInteger.Zero);
    }
    public static Dafny.ISequence<__T> DropFirst<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Drop(BigInteger.One);
    }
    public static __T Last<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Select((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static Dafny.ISequence<__T> DropLast<__T>(Dafny.ISequence<__T> xs) {
      return (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
    }
    public static __T[] ToArray<__T>(Dafny.ISequence<__T> xs)
    {
      __T[] a = new __T[0];
      Func<BigInteger, __T> _init2 = Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Func<BigInteger, __T>>>((_83_xs) => ((System.Func<BigInteger, __T>)((_84_i) => {
        return (_83_xs).Select(_84_i);
      })))(xs);
      __T[] _nw3 = new __T[Dafny.Helpers.ToIntChecked(new BigInteger((xs).Count), "array size exceeds memory limit")];
      for (var _i0_2 = 0; _i0_2 < new BigInteger(_nw3.Length); _i0_2++) {
        _nw3[(int)(_i0_2)] = _init2(_i0_2);
      }
      a = _nw3;
      return a;
    }
    public static Dafny.ISet<__T> ToSet<__T>(Dafny.ISequence<__T> xs) {
      return Dafny.Helpers.Id<Func<Dafny.ISequence<__T>, Dafny.ISet<__T>>>((_85_xs) => ((System.Func<Dafny.ISet<__T>>)(() => {
        var _coll0 = new System.Collections.Generic.List<__T>();
        foreach (__T _compr_0 in (_85_xs).CloneAsArray()) {
          __T _86_x = (__T)_compr_0;
          if ((_85_xs).Contains(_86_x)) {
            _coll0.Add(_86_x);
          }
        }
        return Dafny.Set<__T>.FromCollection(_coll0);
      }))())(xs);
    }
    public static BigInteger IndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      BigInteger _87___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select(BigInteger.Zero), v)) {
        return (BigInteger.Zero) + (_87___accumulator);
      } else {
        _87___accumulator = (_87___accumulator) + (BigInteger.One);
        Dafny.ISequence<__T> _in0 = (xs).Drop(BigInteger.One);
        __T _in1 = v;
        xs = _in0;
        v = _in1;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> IndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.IndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_88_v) => ((System.Func<__T, bool>)((_89_x) => {
        return object.Equals(_89_x, _88_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> IndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select(BigInteger.Zero))) {
        return Std.Wrappers.Option<BigInteger>.create_Some(BigInteger.Zero);
      } else {
        Std.Wrappers._IOption<BigInteger> _90_o_k = Std.Collections.Seq.__default.IndexByOption<__T>((xs).Drop(BigInteger.One), p);
        if ((_90_o_k).is_Some) {
          return Std.Wrappers.Option<BigInteger>.create_Some(((_90_o_k).dtor_value) + (BigInteger.One));
        } else {
          return Std.Wrappers.Option<BigInteger>.create_None();
        }
      }
    }
    public static BigInteger LastIndexOf<__T>(Dafny.ISequence<__T> xs, __T v)
    {
    TAIL_CALL_START: ;
      if (object.Equals((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)), v)) {
        return (new BigInteger((xs).Count)) - (BigInteger.One);
      } else {
        Dafny.ISequence<__T> _in2 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        __T _in3 = v;
        xs = _in2;
        v = _in3;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexOfOption<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      return Std.Collections.Seq.__default.LastIndexByOption<__T>(xs, Dafny.Helpers.Id<Func<__T, Func<__T, bool>>>((_91_v) => ((System.Func<__T, bool>)((_92_x) => {
        return object.Equals(_92_x, _91_v);
      })))(v));
    }
    public static Std.Wrappers._IOption<BigInteger> LastIndexByOption<__T>(Dafny.ISequence<__T> xs, Func<__T, bool> p)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Option<BigInteger>.create_None();
      } else if (Dafny.Helpers.Id<Func<__T, bool>>(p)((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One)))) {
        return Std.Wrappers.Option<BigInteger>.create_Some((new BigInteger((xs).Count)) - (BigInteger.One));
      } else {
        Dafny.ISequence<__T> _in4 = (xs).Take((new BigInteger((xs).Count)) - (BigInteger.One));
        Func<__T, bool> _in5 = p;
        xs = _in4;
        p = _in5;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Remove<__T>(Dafny.ISequence<__T> xs, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat((xs).Take(pos), (xs).Drop((pos) + (BigInteger.One)));
    }
    public static Dafny.ISequence<__T> RemoveValue<__T>(Dafny.ISequence<__T> xs, __T v)
    {
      if (!(xs).Contains(v)) {
        return xs;
      } else {
        BigInteger _93_i = Std.Collections.Seq.__default.IndexOf<__T>(xs, v);
        return Dafny.Sequence<__T>.Concat((xs).Take(_93_i), (xs).Drop((_93_i) + (BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Insert<__T>(Dafny.ISequence<__T> xs, __T a, BigInteger pos)
    {
      return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.Concat((xs).Take(pos), Dafny.Sequence<__T>.FromElements(a)), (xs).Drop(pos));
    }
    public static Dafny.ISequence<__T> Reverse<__T>(Dafny.ISequence<__T> xs) {
      Dafny.ISequence<__T> _94___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((xs).Equals(Dafny.Sequence<__T>.FromElements())) {
        return Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _94___accumulator = Dafny.Sequence<__T>.Concat(_94___accumulator, Dafny.Sequence<__T>.FromElements((xs).Select((new BigInteger((xs).Count)) - (BigInteger.One))));
        Dafny.ISequence<__T> _in6 = (xs).Subsequence(BigInteger.Zero, (new BigInteger((xs).Count)) - (BigInteger.One));
        xs = _in6;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Repeat<__T>(__T v, BigInteger length)
    {
      Dafny.ISequence<__T> _95___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((length).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _95___accumulator = Dafny.Sequence<__T>.Concat(_95___accumulator, Dafny.Sequence<__T>.FromElements(v));
        __T _in7 = v;
        BigInteger _in8 = (length) - (BigInteger.One);
        v = _in7;
        length = _in8;
        goto TAIL_CALL_START;
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> Unzip<__A, __B>(Dafny.ISequence<_System._ITuple2<__A, __B>> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.FromElements(), Dafny.Sequence<__B>.FromElements());
      } else {
        _System._ITuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>> _let_tmp_rhs0 = Std.Collections.Seq.__default.Unzip<__A, __B>(Std.Collections.Seq.__default.DropLast<_System._ITuple2<__A, __B>>(xs));
        Dafny.ISequence<__A> _96_a = _let_tmp_rhs0.dtor__0;
        Dafny.ISequence<__B> _97_b = _let_tmp_rhs0.dtor__1;
        return _System.Tuple2<Dafny.ISequence<__A>, Dafny.ISequence<__B>>.create(Dafny.Sequence<__A>.Concat(_96_a, Dafny.Sequence<__A>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__0)), Dafny.Sequence<__B>.Concat(_97_b, Dafny.Sequence<__B>.FromElements((Std.Collections.Seq.__default.Last<_System._ITuple2<__A, __B>>(xs)).dtor__1)));
      }
    }
    public static Dafny.ISequence<_System._ITuple2<__A, __B>> Zip<__A, __B>(Dafny.ISequence<__A> xs, Dafny.ISequence<__B> ys)
    {
      Dafny.ISequence<_System._ITuple2<__A, __B>> _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(), _98___accumulator);
      } else {
        _98___accumulator = Dafny.Sequence<_System._ITuple2<__A, __B>>.Concat(Dafny.Sequence<_System._ITuple2<__A, __B>>.FromElements(_System.Tuple2<__A, __B>.create(Std.Collections.Seq.__default.Last<__A>(xs), Std.Collections.Seq.__default.Last<__B>(ys))), _98___accumulator);
        Dafny.ISequence<__A> _in9 = Std.Collections.Seq.__default.DropLast<__A>(xs);
        Dafny.ISequence<__B> _in10 = Std.Collections.Seq.__default.DropLast<__B>(ys);
        xs = _in9;
        ys = _in10;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger Max(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Max((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Max((xs).Drop(BigInteger.One)));
      }
    }
    public static BigInteger Min(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)) == (BigInteger.One)) {
        return (xs).Select(BigInteger.Zero);
      } else {
        return Std.Math.__default.Min((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.Min((xs).Drop(BigInteger.One)));
      }
    }
    public static Dafny.ISequence<__T> Flatten<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _99___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_99___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _99___accumulator = Dafny.Sequence<__T>.Concat(_99___accumulator, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<Dafny.ISequence<__T>> _in11 = (xs).Drop(BigInteger.One);
        xs = _in11;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> FlattenReverse<__T>(Dafny.ISequence<Dafny.ISequence<__T>> xs) {
      Dafny.ISequence<__T> _100___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(Dafny.Sequence<__T>.FromElements(), _100___accumulator);
      } else {
        _100___accumulator = Dafny.Sequence<__T>.Concat(Std.Collections.Seq.__default.Last<Dafny.ISequence<__T>>(xs), _100___accumulator);
        Dafny.ISequence<Dafny.ISequence<__T>> _in12 = Std.Collections.Seq.__default.DropLast<Dafny.ISequence<__T>>(xs);
        xs = _in12;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<__T> Join<__T>(Dafny.ISequence<Dafny.ISequence<__T>> seqs, Dafny.ISequence<__T> separator)
    {
      Dafny.ISequence<__T> _101___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((seqs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.FromElements());
      } else if ((new BigInteger((seqs).Count)) == (BigInteger.One)) {
        return Dafny.Sequence<__T>.Concat(_101___accumulator, (seqs).Select(BigInteger.Zero));
      } else {
        _101___accumulator = Dafny.Sequence<__T>.Concat(_101___accumulator, Dafny.Sequence<__T>.Concat((seqs).Select(BigInteger.Zero), separator));
        Dafny.ISequence<Dafny.ISequence<__T>> _in13 = (seqs).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in14 = separator;
        seqs = _in13;
        separator = _in14;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.ISequence<__T>> Split<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Dafny.ISequence<Dafny.ISequence<__T>> _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.FromElements();
    TAIL_CALL_START: ;
      Std.Wrappers._IOption<BigInteger> _103_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_103_i).is_Some) {
        _102___accumulator = Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements((s).Take((_103_i).dtor_value)));
        Dafny.ISequence<__T> _in15 = (s).Drop(((_103_i).dtor_value) + (BigInteger.One));
        __T _in16 = delim;
        s = _in15;
        delim = _in16;
        goto TAIL_CALL_START;
      } else {
        return Dafny.Sequence<Dafny.ISequence<__T>>.Concat(_102___accumulator, Dafny.Sequence<Dafny.ISequence<__T>>.FromElements(s));
      }
    }
    public static _System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>> SplitOnce<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _104_i = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      return _System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take((_104_i).dtor_value), (s).Drop(((_104_i).dtor_value) + (BigInteger.One)));
    }
    public static Std.Wrappers._IOption<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>> SplitOnceOption<__T>(Dafny.ISequence<__T> s, __T delim)
    {
      Std.Wrappers._IOption<BigInteger> _105_valueOrError0 = Std.Collections.Seq.__default.IndexOfOption<__T>(s, delim);
      if ((_105_valueOrError0).IsFailure()) {
        return (_105_valueOrError0).PropagateFailure<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>();
      } else {
        BigInteger _106_i = (_105_valueOrError0).Extract();
        return Std.Wrappers.Option<_System._ITuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>>.create_Some(_System.Tuple2<Dafny.ISequence<__T>, Dafny.ISequence<__T>>.create((s).Take(_106_i), (s).Drop((_106_i) + (BigInteger.One))));
      }
    }
    public static Dafny.ISequence<__R> Map<__T, __R>(Func<__T, __R> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__R> _107___accumulator = Dafny.Sequence<__R>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements());
      } else {
        _107___accumulator = Dafny.Sequence<__R>.Concat(_107___accumulator, Dafny.Sequence<__R>.FromElements(Dafny.Helpers.Id<Func<__T, __R>>(f)((xs).Select(BigInteger.Zero))));
        Func<__T, __R> _in17 = f;
        Dafny.ISequence<__T> _in18 = (xs).Drop(BigInteger.One);
        f = _in17;
        xs = _in18;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> MapWithResult<__T, __R, __E>(Func<__T, Std.Wrappers._IResult<__R, __E>> f, Dafny.ISequence<__T> xs)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.FromElements());
      } else {
        Std.Wrappers._IResult<__R, __E> _108_valueOrError0 = Dafny.Helpers.Id<Func<__T, Std.Wrappers._IResult<__R, __E>>>(f)((xs).Select(BigInteger.Zero));
        if ((_108_valueOrError0).IsFailure()) {
          return (_108_valueOrError0).PropagateFailure<Dafny.ISequence<__R>>();
        } else {
          __R _109_head = (_108_valueOrError0).Extract();
          Std.Wrappers._IResult<Dafny.ISequence<__R>, __E> _110_valueOrError1 = Std.Collections.Seq.__default.MapWithResult<__T, __R, __E>(f, (xs).Drop(BigInteger.One));
          if ((_110_valueOrError1).IsFailure()) {
            return (_110_valueOrError1).PropagateFailure<Dafny.ISequence<__R>>();
          } else {
            Dafny.ISequence<__R> _111_tail = (_110_valueOrError1).Extract();
            return Std.Wrappers.Result<Dafny.ISequence<__R>, __E>.create_Success(Dafny.Sequence<__R>.Concat(Dafny.Sequence<__R>.FromElements(_109_head), _111_tail));
          }
        }
      }
    }
    public static Dafny.ISequence<__T> Filter<__T>(Func<__T, bool> f, Dafny.ISequence<__T> xs)
    {
      Dafny.ISequence<__T> _112___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_112___accumulator, Dafny.Sequence<__T>.FromElements());
      } else {
        _112___accumulator = Dafny.Sequence<__T>.Concat(_112___accumulator, ((Dafny.Helpers.Id<Func<__T, bool>>(f)((xs).Select(BigInteger.Zero))) ? (Dafny.Sequence<__T>.FromElements((xs).Select(BigInteger.Zero))) : (Dafny.Sequence<__T>.FromElements())));
        Func<__T, bool> _in19 = f;
        Dafny.ISequence<__T> _in20 = (xs).Drop(BigInteger.One);
        f = _in19;
        xs = _in20;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldLeft<__A, __T>(Func<__A, __T, __A> f, __A init, Dafny.ISequence<__T> xs)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        Func<__A, __T, __A> _in21 = f;
        __A _in22 = Dafny.Helpers.Id<Func<__A, __T, __A>>(f)(init, (xs).Select(BigInteger.Zero));
        Dafny.ISequence<__T> _in23 = (xs).Drop(BigInteger.One);
        f = _in21;
        init = _in22;
        xs = _in23;
        goto TAIL_CALL_START;
      }
    }
    public static __A FoldRight<__A, __T>(Func<__T, __A, __A> f, Dafny.ISequence<__T> xs, __A init)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return init;
      } else {
        return Dafny.Helpers.Id<Func<__T, __A, __A>>(f)((xs).Select(BigInteger.Zero), Std.Collections.Seq.__default.FoldRight<__A, __T>(f, (xs).Drop(BigInteger.One), init));
      }
    }
    public static Dafny.ISequence<__T> SetToSeq<__T>(Dafny.ISet<__T> s)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      xs = Dafny.Sequence<__T>.FromElements();
      Dafny.ISet<__T> _113_left;
      _113_left = s;
      while (!(_113_left).Equals(Dafny.Set<__T>.FromElements())) {
        __T _114_x;
        foreach (__T _assign_such_that_0 in (_113_left).Elements) {
          _114_x = (__T)_assign_such_that_0;
          if ((_113_left).Contains(_114_x)) {
            goto after__ASSIGN_SUCH_THAT_0;
          }
        }
        throw new System.Exception("assign-such-that search produced no value (line 7247)");
      after__ASSIGN_SUCH_THAT_0: ;
        _113_left = Dafny.Set<__T>.Difference(_113_left, Dafny.Set<__T>.FromElements(_114_x));
        xs = Dafny.Sequence<__T>.Concat(xs, Dafny.Sequence<__T>.FromElements(_114_x));
      }
      return xs;
    }
    public static Dafny.ISequence<__T> SetToSortedSeq<__T>(Dafny.ISet<__T> s, Func<__T, __T, bool> R)
    {
      Dafny.ISequence<__T> xs = Dafny.Sequence<__T>.Empty;
      Dafny.ISequence<__T> _out6;
      _out6 = Std.Collections.Seq.__default.SetToSeq<__T>(s);
      xs = _out6;
      xs = Std.Collections.Seq.__default.MergeSortBy<__T>(R, xs);
      return xs;
    }
    public static Dafny.ISequence<__T> MergeSortBy<__T>(Func<__T, __T, bool> lessThanOrEq, Dafny.ISequence<__T> a)
    {
      if ((new BigInteger((a).Count)) <= (BigInteger.One)) {
        return a;
      } else {
        BigInteger _115_splitIndex = Dafny.Helpers.EuclideanDivision(new BigInteger((a).Count), new BigInteger(2));
        Dafny.ISequence<__T> _116_left = (a).Take(_115_splitIndex);
        Dafny.ISequence<__T> _117_right = (a).Drop(_115_splitIndex);
        Dafny.ISequence<__T> _118_leftSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _116_left);
        Dafny.ISequence<__T> _119_rightSorted = Std.Collections.Seq.__default.MergeSortBy<__T>(lessThanOrEq, _117_right);
        return Std.Collections.Seq.__default.MergeSortedWith<__T>(_118_leftSorted, _119_rightSorted, lessThanOrEq);
      }
    }
    public static Dafny.ISequence<__T> MergeSortedWith<__T>(Dafny.ISequence<__T> left, Dafny.ISequence<__T> right, Func<__T, __T, bool> lessThanOrEq)
    {
      Dafny.ISequence<__T> _120___accumulator = Dafny.Sequence<__T>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((left).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, right);
      } else if ((new BigInteger((right).Count)).Sign == 0) {
        return Dafny.Sequence<__T>.Concat(_120___accumulator, left);
      } else if (Dafny.Helpers.Id<Func<__T, __T, bool>>(lessThanOrEq)((left).Select(BigInteger.Zero), (right).Select(BigInteger.Zero))) {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((left).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in24 = (left).Drop(BigInteger.One);
        Dafny.ISequence<__T> _in25 = right;
        Func<__T, __T, bool> _in26 = lessThanOrEq;
        left = _in24;
        right = _in25;
        lessThanOrEq = _in26;
        goto TAIL_CALL_START;
      } else {
        _120___accumulator = Dafny.Sequence<__T>.Concat(_120___accumulator, Dafny.Sequence<__T>.FromElements((right).Select(BigInteger.Zero)));
        Dafny.ISequence<__T> _in27 = left;
        Dafny.ISequence<__T> _in28 = (right).Drop(BigInteger.One);
        Func<__T, __T, bool> _in29 = lessThanOrEq;
        left = _in27;
        right = _in28;
        lessThanOrEq = _in29;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Collections.Seq
namespace Std.Arithmetic.GeneralInternals {

} // end of namespace Std.Arithmetic.GeneralInternals
namespace Std.Arithmetic.MulInternalsNonlinear {

} // end of namespace Std.Arithmetic.MulInternalsNonlinear
namespace Std.Arithmetic.MulInternals {

  public partial class __default {
    public static BigInteger MulPos(BigInteger x, BigInteger y)
    {
      BigInteger _149___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == 0) {
        return (BigInteger.Zero) + (_149___accumulator);
      } else {
        _149___accumulator = (_149___accumulator) + (y);
        BigInteger _in32 = (x) - (BigInteger.One);
        BigInteger _in33 = y;
        x = _in32;
        y = _in33;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger MulRecursive(BigInteger x, BigInteger y)
    {
      if ((x).Sign != -1) {
        return Std.Arithmetic.MulInternals.__default.MulPos(x, y);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.MulInternals.__default.MulPos((new BigInteger(-1)) * (x), y));
      }
    }
  }
} // end of namespace Std.Arithmetic.MulInternals
namespace Std.Arithmetic.Mul {

} // end of namespace Std.Arithmetic.Mul
namespace Std.Arithmetic.ModInternalsNonlinear {

} // end of namespace Std.Arithmetic.ModInternalsNonlinear
namespace Std.Arithmetic.DivInternalsNonlinear {

} // end of namespace Std.Arithmetic.DivInternalsNonlinear
namespace Std.Arithmetic.ModInternals {

  public partial class __default {
    public static BigInteger ModRecursive(BigInteger x, BigInteger d)
    {
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        BigInteger _in34 = (d) + (x);
        BigInteger _in35 = d;
        x = _in34;
        d = _in35;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return x;
      } else {
        BigInteger _in36 = (x) - (d);
        BigInteger _in37 = d;
        x = _in36;
        d = _in37;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.ModInternals
namespace Std.Arithmetic.DivInternals {

  public partial class __default {
    public static BigInteger DivPos(BigInteger x, BigInteger d)
    {
      BigInteger _150___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((x).Sign == -1) {
        _150___accumulator = (_150___accumulator) + (new BigInteger(-1));
        BigInteger _in38 = (x) + (d);
        BigInteger _in39 = d;
        x = _in38;
        d = _in39;
        goto TAIL_CALL_START;
      } else if ((x) < (d)) {
        return (BigInteger.Zero) + (_150___accumulator);
      } else {
        _150___accumulator = (_150___accumulator) + (BigInteger.One);
        BigInteger _in40 = (x) - (d);
        BigInteger _in41 = d;
        x = _in40;
        d = _in41;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger DivRecursive(BigInteger x, BigInteger d)
    {
      if ((d).Sign == 1) {
        return Std.Arithmetic.DivInternals.__default.DivPos(x, d);
      } else {
        return (new BigInteger(-1)) * (Std.Arithmetic.DivInternals.__default.DivPos(x, (new BigInteger(-1)) * (d)));
      }
    }
  }
} // end of namespace Std.Arithmetic.DivInternals
namespace Std.Arithmetic.DivMod {

  public partial class __default {
    public static bool MultiplesVanish(BigInteger a, BigInteger b, BigInteger m)
    {
      return (Dafny.Helpers.EuclideanModulus(((m) * (a)) + (b), m)) == (Dafny.Helpers.EuclideanModulus(b, m));
    }
  }
} // end of namespace Std.Arithmetic.DivMod
namespace Std.Arithmetic.Power {

  public partial class __default {
    public static BigInteger Pow(BigInteger b, BigInteger e)
    {
      BigInteger _151___accumulator = BigInteger.One;
    TAIL_CALL_START: ;
      if ((e).Sign == 0) {
        return (BigInteger.One) * (_151___accumulator);
      } else {
        _151___accumulator = (_151___accumulator) * (b);
        BigInteger _in42 = b;
        BigInteger _in43 = (e) - (BigInteger.One);
        b = _in42;
        e = _in43;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Power
namespace Std.Arithmetic.Logarithm {

  public partial class __default {
    public static BigInteger Log(BigInteger @base, BigInteger pow)
    {
      BigInteger _152___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((pow) < (@base)) {
        return (BigInteger.Zero) + (_152___accumulator);
      } else {
        _152___accumulator = (_152___accumulator) + (BigInteger.One);
        BigInteger _in44 = @base;
        BigInteger _in45 = Dafny.Helpers.EuclideanDivision(pow, @base);
        @base = _in44;
        pow = _in45;
        goto TAIL_CALL_START;
      }
    }
  }
} // end of namespace Std.Arithmetic.Logarithm
namespace Std.Arithmetic.Power2 {

  public partial class __default {
    public static BigInteger Pow2(BigInteger e) {
      return Std.Arithmetic.Power.__default.Pow(new BigInteger(2), e);
    }
  }
} // end of namespace Std.Arithmetic.Power2
namespace Std.Arithmetic {

} // end of namespace Std.Arithmetic
namespace Std.Strings.HexConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.HexConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.HexConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _153___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _153___accumulator);
      } else {
        _153___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _153___accumulator);
        Dafny.ISequence<BigInteger> _in46 = (digits).Drop(BigInteger.One);
        digits = _in46;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.HexConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.HexConversion.__default.OfDigits(Std.Strings.HexConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.HexConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_154_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_154_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_1) => {
        Dafny.Rune _155_c = (Dafny.Rune)_forall_var_1;
        return !(((_154_str).Drop(BigInteger.One)).Contains(_155_c)) || (Std.Strings.HexConversion.__default.IsDigitChar(_155_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.HexConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.HexConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _156_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.HexConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.HexConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.HexConversion.__default.charToDigit,_156_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.HexConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.HexConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.HexConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.HexConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _157___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_157___accumulator);
      } else {
        _157___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.HexConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_157___accumulator);
        Dafny.ISequence<BigInteger> _in47 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in47;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _158___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _158___accumulator = Dafny.Sequence<BigInteger>.Concat(_158___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.HexConversion.__default.BASE())));
        BigInteger _in48 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.HexConversion.__default.BASE());
        n = _in48;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in49 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in50 = n;
        xs = _in49;
        n = _in50;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _159_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.HexConversion.__default.SeqExtend(xs, _159_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.HexConversion.__default.SeqExtend(Std.Strings.HexConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _160_xs = Std.Strings.HexConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _160_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs1 = Std.Strings.HexConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _161_zs_k = _let_tmp_rhs1.dtor__0;
        BigInteger _162_cin = _let_tmp_rhs1.dtor__1;
        BigInteger _163_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_162_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs2 = (((_163_sum) < (Std.Strings.HexConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_163_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_163_sum) - (Std.Strings.HexConversion.__default.BASE()), BigInteger.One)));
        BigInteger _164_sum__out = _let_tmp_rhs2.dtor__0;
        BigInteger _165_cout = _let_tmp_rhs2.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_161_zs_k, Dafny.Sequence<BigInteger>.FromElements(_164_sum__out)), _165_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs3 = Std.Strings.HexConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _166_zs = _let_tmp_rhs3.dtor__0;
        BigInteger _167_cin = _let_tmp_rhs3.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs4 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_167_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.HexConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_167_cin), BigInteger.One)));
        BigInteger _168_diff__out = _let_tmp_rhs4.dtor__0;
        BigInteger _169_cout = _let_tmp_rhs4.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_166_zs, Dafny.Sequence<BigInteger>.FromElements(_168_diff__out)), _169_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> HEX__DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789ABCDEF");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.HexConversion.__default.HEX__DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.HexConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('a'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('b'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('c'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('d'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('e'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('f'), new BigInteger(15)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('A'), new BigInteger(10)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('B'), new BigInteger(11)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('C'), new BigInteger(12)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('D'), new BigInteger(13)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('E'), new BigInteger(14)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('F'), new BigInteger(15)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _170_chars = __source;
      return (new BigInteger((_170_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _171_i = __source;
      if (_System.nat._Is(_171_i)) {
        return ((_171_i).Sign != -1) && ((_171_i) < (Std.Strings.HexConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.HexConversion
namespace Std.Strings.DecimalConversion {

  public partial class __default {
    public static BigInteger BASE() {
      return Std.Strings.DecimalConversion.__default.@base;
    }
    public static bool IsDigitChar(Dafny.Rune c) {
      return (Std.Strings.DecimalConversion.__default.charToDigit).Contains(c);
    }
    public static Dafny.ISequence<Dafny.Rune> OfDigits(Dafny.ISequence<BigInteger> digits) {
      Dafny.ISequence<Dafny.Rune> _172___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((digits).Equals(Dafny.Sequence<BigInteger>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(), _172___accumulator);
      } else {
        _172___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select((digits).Select(BigInteger.Zero))), _172___accumulator);
        Dafny.ISequence<BigInteger> _in51 = (digits).Drop(BigInteger.One);
        digits = _in51;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      if ((n).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.FromElements((Std.Strings.DecimalConversion.__default.chars).Select(BigInteger.Zero));
      } else {
        return Std.Strings.DecimalConversion.__default.OfDigits(Std.Strings.DecimalConversion.__default.FromNat(n));
      }
    }
    public static bool IsNumberStr(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      return !(!(str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) || (((((str).Select(BigInteger.Zero)) == (minus)) || ((Std.Strings.DecimalConversion.__default.charToDigit).Contains((str).Select(BigInteger.Zero)))) && (Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, bool>>((_173_str) => Dafny.Helpers.Quantifier<Dafny.Rune>(((_173_str).Drop(BigInteger.One)).UniqueElements, true, (((_forall_var_2) => {
        Dafny.Rune _174_c = (Dafny.Rune)_forall_var_2;
        return !(((_173_str).Drop(BigInteger.One)).Contains(_174_c)) || (Std.Strings.DecimalConversion.__default.IsDigitChar(_174_c));
      }))))(str)));
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n, Dafny.Rune minus)
    {
      if ((n).Sign != -1) {
        return Std.Strings.DecimalConversion.__default.OfNat(n);
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements(minus), Std.Strings.DecimalConversion.__default.OfNat((BigInteger.Zero) - (n)));
      }
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return BigInteger.Zero;
      } else {
        Dafny.Rune _175_c = (str).Select((new BigInteger((str).Count)) - (BigInteger.One));
        return ((Std.Strings.DecimalConversion.__default.ToNat((str).Take((new BigInteger((str).Count)) - (BigInteger.One)))) * (Std.Strings.DecimalConversion.__default.@base)) + (Dafny.Map<Dafny.Rune, BigInteger>.Select(Std.Strings.DecimalConversion.__default.charToDigit,_175_c));
      }
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune minus)
    {
      if (Dafny.Sequence<Dafny.Rune>.IsPrefixOf(Dafny.Sequence<Dafny.Rune>.FromElements(minus), str)) {
        return (BigInteger.Zero) - (Std.Strings.DecimalConversion.__default.ToNat((str).Drop(BigInteger.One)));
      } else {
        return Std.Strings.DecimalConversion.__default.ToNat(str);
      }
    }
    public static BigInteger ToNatRight(Dafny.ISequence<BigInteger> xs) {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        return ((Std.Strings.DecimalConversion.__default.ToNatRight(Std.Collections.Seq.__default.DropFirst<BigInteger>(xs))) * (Std.Strings.DecimalConversion.__default.BASE())) + (Std.Collections.Seq.__default.First<BigInteger>(xs));
      }
    }
    public static BigInteger ToNatLeft(Dafny.ISequence<BigInteger> xs) {
      BigInteger _176___accumulator = BigInteger.Zero;
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return (BigInteger.Zero) + (_176___accumulator);
      } else {
        _176___accumulator = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) * (Std.Arithmetic.Power.__default.Pow(Std.Strings.DecimalConversion.__default.BASE(), (new BigInteger((xs).Count)) - (BigInteger.One)))) + (_176___accumulator);
        Dafny.ISequence<BigInteger> _in52 = Std.Collections.Seq.__default.DropLast<BigInteger>(xs);
        xs = _in52;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> FromNat(BigInteger n) {
      Dafny.ISequence<BigInteger> _177___accumulator = Dafny.Sequence<BigInteger>.FromElements();
    TAIL_CALL_START: ;
      if ((n).Sign == 0) {
        return Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements());
      } else {
        _177___accumulator = Dafny.Sequence<BigInteger>.Concat(_177___accumulator, Dafny.Sequence<BigInteger>.FromElements(Dafny.Helpers.EuclideanModulus(n, Std.Strings.DecimalConversion.__default.BASE())));
        BigInteger _in53 = Dafny.Helpers.EuclideanDivision(n, Std.Strings.DecimalConversion.__default.BASE());
        n = _in53;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtend(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
    TAIL_CALL_START: ;
      if ((new BigInteger((xs).Count)) >= (n)) {
        return xs;
      } else {
        Dafny.ISequence<BigInteger> _in54 = Dafny.Sequence<BigInteger>.Concat(xs, Dafny.Sequence<BigInteger>.FromElements(BigInteger.Zero));
        BigInteger _in55 = n;
        xs = _in54;
        n = _in55;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<BigInteger> SeqExtendMultiple(Dafny.ISequence<BigInteger> xs, BigInteger n)
    {
      BigInteger _178_newLen = ((new BigInteger((xs).Count)) + (n)) - (Dafny.Helpers.EuclideanModulus(new BigInteger((xs).Count), n));
      return Std.Strings.DecimalConversion.__default.SeqExtend(xs, _178_newLen);
    }
    public static Dafny.ISequence<BigInteger> FromNatWithLen(BigInteger n, BigInteger len)
    {
      return Std.Strings.DecimalConversion.__default.SeqExtend(Std.Strings.DecimalConversion.__default.FromNat(n), len);
    }
    public static Dafny.ISequence<BigInteger> SeqZero(BigInteger len) {
      Dafny.ISequence<BigInteger> _179_xs = Std.Strings.DecimalConversion.__default.FromNatWithLen(BigInteger.Zero, len);
      return _179_xs;
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqAdd(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs5 = Std.Strings.DecimalConversion.__default.SeqAdd(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _180_zs_k = _let_tmp_rhs5.dtor__0;
        BigInteger _181_cin = _let_tmp_rhs5.dtor__1;
        BigInteger _182_sum = ((Std.Collections.Seq.__default.Last<BigInteger>(xs)) + (Std.Collections.Seq.__default.Last<BigInteger>(ys))) + (_181_cin);
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs6 = (((_182_sum) < (Std.Strings.DecimalConversion.__default.BASE())) ? (_System.Tuple2<BigInteger, BigInteger>.create(_182_sum, BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((_182_sum) - (Std.Strings.DecimalConversion.__default.BASE()), BigInteger.One)));
        BigInteger _183_sum__out = _let_tmp_rhs6.dtor__0;
        BigInteger _184_cout = _let_tmp_rhs6.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_180_zs_k, Dafny.Sequence<BigInteger>.FromElements(_183_sum__out)), _184_cout);
      }
    }
    public static _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> SeqSub(Dafny.ISequence<BigInteger> xs, Dafny.ISequence<BigInteger> ys)
    {
      if ((new BigInteger((xs).Count)).Sign == 0) {
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.FromElements(), BigInteger.Zero);
      } else {
        _System._ITuple2<Dafny.ISequence<BigInteger>, BigInteger> _let_tmp_rhs7 = Std.Strings.DecimalConversion.__default.SeqSub(Std.Collections.Seq.__default.DropLast<BigInteger>(xs), Std.Collections.Seq.__default.DropLast<BigInteger>(ys));
        Dafny.ISequence<BigInteger> _185_zs = _let_tmp_rhs7.dtor__0;
        BigInteger _186_cin = _let_tmp_rhs7.dtor__1;
        _System._ITuple2<BigInteger, BigInteger> _let_tmp_rhs8 = (((Std.Collections.Seq.__default.Last<BigInteger>(xs)) >= ((Std.Collections.Seq.__default.Last<BigInteger>(ys)) + (_186_cin))) ? (_System.Tuple2<BigInteger, BigInteger>.create(((Std.Collections.Seq.__default.Last<BigInteger>(xs)) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.Zero)) : (_System.Tuple2<BigInteger, BigInteger>.create((((Std.Strings.DecimalConversion.__default.BASE()) + (Std.Collections.Seq.__default.Last<BigInteger>(xs))) - (Std.Collections.Seq.__default.Last<BigInteger>(ys))) - (_186_cin), BigInteger.One)));
        BigInteger _187_diff__out = _let_tmp_rhs8.dtor__0;
        BigInteger _188_cout = _let_tmp_rhs8.dtor__1;
        return _System.Tuple2<Dafny.ISequence<BigInteger>, BigInteger>.create(Dafny.Sequence<BigInteger>.Concat(_185_zs, Dafny.Sequence<BigInteger>.FromElements(_187_diff__out)), _188_cout);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> DIGITS { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789");
    } }
    public static Dafny.ISequence<Dafny.Rune> chars { get {
      return Std.Strings.DecimalConversion.__default.DIGITS;
    } }
    public static BigInteger @base { get {
      return new BigInteger((Std.Strings.DecimalConversion.__default.chars).Count);
    } }
    public static Dafny.IMap<Dafny.Rune,BigInteger> charToDigit { get {
      return Dafny.Map<Dafny.Rune, BigInteger>.FromElements(new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('0'), BigInteger.Zero), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('1'), BigInteger.One), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('2'), new BigInteger(2)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('3'), new BigInteger(3)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('4'), new BigInteger(4)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('5'), new BigInteger(5)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('6'), new BigInteger(6)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('7'), new BigInteger(7)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('8'), new BigInteger(8)), new Dafny.Pair<Dafny.Rune, BigInteger>(new Dafny.Rune('9'), new BigInteger(9)));
    } }
  }

  public partial class CharSeq {
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(Dafny.ISequence<Dafny.Rune> __source) {
      Dafny.ISequence<Dafny.Rune> _189_chars = __source;
      return (new BigInteger((_189_chars).Count)) > (BigInteger.One);
    }
  }

  public partial class digit {
    private static readonly Dafny.TypeDescriptor<BigInteger> _TYPE = new Dafny.TypeDescriptor<BigInteger>(BigInteger.Zero);
    public static Dafny.TypeDescriptor<BigInteger> _TypeDescriptor() {
      return _TYPE;
    }
    public static bool _Is(BigInteger __source) {
      BigInteger _190_i = __source;
      if (_System.nat._Is(_190_i)) {
        return ((_190_i).Sign != -1) && ((_190_i) < (Std.Strings.DecimalConversion.__default.BASE()));
      }
      return false;
    }
  }
} // end of namespace Std.Strings.DecimalConversion
namespace Std.Strings.CharStrEscaping {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> Escape(Dafny.ISequence<Dafny.Rune> str, Dafny.ISet<Dafny.Rune> mustEscape, Dafny.Rune escape)
    {
      Dafny.ISequence<Dafny.Rune> _191___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, str);
      } else if ((mustEscape).Contains((str).Select(BigInteger.Zero))) {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements(escape, (str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in56 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in57 = mustEscape;
        Dafny.Rune _in58 = escape;
        str = _in56;
        mustEscape = _in57;
        escape = _in58;
        goto TAIL_CALL_START;
      } else {
        _191___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_191___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in59 = (str).Drop(BigInteger.One);
        Dafny.ISet<Dafny.Rune> _in60 = mustEscape;
        Dafny.Rune _in61 = escape;
        str = _in59;
        mustEscape = _in60;
        escape = _in61;
        goto TAIL_CALL_START;
      }
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> Unescape(Dafny.ISequence<Dafny.Rune> str, Dafny.Rune escape)
    {
      if ((str).Equals(Dafny.Sequence<Dafny.Rune>.FromElements())) {
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(str);
      } else if (((str).Select(BigInteger.Zero)) == (escape)) {
        if ((new BigInteger((str).Count)) > (BigInteger.One)) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _192_valueOrError0 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(new BigInteger(2)), escape);
          if ((_192_valueOrError0).IsFailure()) {
            return (_192_valueOrError0).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
          } else {
            Dafny.ISequence<Dafny.Rune> _193_tl = (_192_valueOrError0).Extract();
            return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.One)), _193_tl));
          }
        } else {
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
        }
      } else {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _194_valueOrError1 = Std.Strings.CharStrEscaping.__default.Unescape((str).Drop(BigInteger.One), escape);
        if ((_194_valueOrError1).IsFailure()) {
          return (_194_valueOrError1).PropagateFailure<Dafny.ISequence<Dafny.Rune>>();
        } else {
          Dafny.ISequence<Dafny.Rune> _195_tl = (_194_valueOrError1).Extract();
          return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((str).Select(BigInteger.Zero)), _195_tl));
        }
      }
    }
  }
} // end of namespace Std.Strings.CharStrEscaping
namespace Std.Strings {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> OfNat(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfNat(n);
    }
    public static Dafny.ISequence<Dafny.Rune> OfInt(BigInteger n) {
      return Std.Strings.DecimalConversion.__default.OfInt(n, new Dafny.Rune('-'));
    }
    public static BigInteger ToNat(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToNat(str);
    }
    public static BigInteger ToInt(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.DecimalConversion.__default.ToInt(str, new Dafny.Rune('-'));
    }
    public static Dafny.ISequence<Dafny.Rune> EscapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Escape(str, Dafny.Set<Dafny.Rune>.FromElements(new Dafny.Rune('\"'), new Dafny.Rune('\'')), new Dafny.Rune('\\'));
    }
    public static Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> UnescapeQuotes(Dafny.ISequence<Dafny.Rune> str) {
      return Std.Strings.CharStrEscaping.__default.Unescape(str, new Dafny.Rune('\\'));
    }
    public static Dafny.ISequence<Dafny.Rune> OfBool(bool b) {
      if (b) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
      }
    }
    public static Dafny.ISequence<Dafny.Rune> OfChar(Dafny.Rune c) {
      return Dafny.Sequence<Dafny.Rune>.FromElements(c);
    }
  }
} // end of namespace Std.Strings

namespace DAST.Format {

  public partial class __default {
    public static BigInteger SeqToHeight<__T>(Dafny.ISequence<__T> s, Func<__T, BigInteger> f)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return BigInteger.Zero;
      } else {
        BigInteger _828_i = Dafny.Helpers.Id<Func<__T, BigInteger>>(f)((s).Select(BigInteger.Zero));
        BigInteger _829_j = DAST.Format.__default.SeqToHeight<__T>((s).Drop(BigInteger.One), f);
        if ((_828_i) < (_829_j)) {
          return _829_j;
        } else {
          return _828_i;
        }
      }
    }
  }

  public interface _IUnOpFormat {
    bool is_NoFormat { get; }
    bool is_CombineNotInner { get; }
    _IUnOpFormat DowncastClone();
  }
  public abstract class UnOpFormat : _IUnOpFormat {
    public UnOpFormat() {
    }
    private static readonly DAST.Format._IUnOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IUnOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IUnOpFormat>(DAST.Format.UnOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IUnOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnOpFormat create_NoFormat() {
      return new UnOpFormat_NoFormat();
    }
    public static _IUnOpFormat create_CombineNotInner() {
      return new UnOpFormat_CombineNotInner();
    }
    public bool is_NoFormat { get { return this is UnOpFormat_NoFormat; } }
    public bool is_CombineNotInner { get { return this is UnOpFormat_CombineNotInner; } }
    public static System.Collections.Generic.IEnumerable<_IUnOpFormat> AllSingletonConstructors {
      get {
        yield return UnOpFormat.create_NoFormat();
        yield return UnOpFormat.create_CombineNotInner();
      }
    }
    public abstract _IUnOpFormat DowncastClone();
  }
  public class UnOpFormat_NoFormat : UnOpFormat {
    public UnOpFormat_NoFormat() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.NoFormat";
      return s;
    }
  }
  public class UnOpFormat_CombineNotInner : UnOpFormat {
    public UnOpFormat_CombineNotInner() : base() {
    }
    public override _IUnOpFormat DowncastClone() {
      if (this is _IUnOpFormat dt) { return dt; }
      return new UnOpFormat_CombineNotInner();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.UnOpFormat_CombineNotInner;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.UnOpFormat.CombineNotInner";
      return s;
    }
  }

  public interface _IBinOpFormat {
    bool is_NoFormat { get; }
    bool is_ImpliesFormat { get; }
    bool is_Equivalence { get; }
    bool is_ReverseOperands { get; }
    _IBinOpFormat DowncastClone();
  }
  public abstract class BinOpFormat : _IBinOpFormat {
    public BinOpFormat() {
    }
    private static readonly DAST.Format._IBinOpFormat theDefault = create_NoFormat();
    public static DAST.Format._IBinOpFormat Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TYPE = new Dafny.TypeDescriptor<DAST.Format._IBinOpFormat>(DAST.Format.BinOpFormat.Default());
    public static Dafny.TypeDescriptor<DAST.Format._IBinOpFormat> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOpFormat create_NoFormat() {
      return new BinOpFormat_NoFormat();
    }
    public static _IBinOpFormat create_ImpliesFormat() {
      return new BinOpFormat_ImpliesFormat();
    }
    public static _IBinOpFormat create_Equivalence() {
      return new BinOpFormat_Equivalence();
    }
    public static _IBinOpFormat create_ReverseOperands() {
      return new BinOpFormat_ReverseOperands();
    }
    public bool is_NoFormat { get { return this is BinOpFormat_NoFormat; } }
    public bool is_ImpliesFormat { get { return this is BinOpFormat_ImpliesFormat; } }
    public bool is_Equivalence { get { return this is BinOpFormat_Equivalence; } }
    public bool is_ReverseOperands { get { return this is BinOpFormat_ReverseOperands; } }
    public static System.Collections.Generic.IEnumerable<_IBinOpFormat> AllSingletonConstructors {
      get {
        yield return BinOpFormat.create_NoFormat();
        yield return BinOpFormat.create_ImpliesFormat();
        yield return BinOpFormat.create_Equivalence();
        yield return BinOpFormat.create_ReverseOperands();
      }
    }
    public abstract _IBinOpFormat DowncastClone();
  }
  public class BinOpFormat_NoFormat : BinOpFormat {
    public BinOpFormat_NoFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_NoFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_NoFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.NoFormat";
      return s;
    }
  }
  public class BinOpFormat_ImpliesFormat : BinOpFormat {
    public BinOpFormat_ImpliesFormat() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ImpliesFormat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ImpliesFormat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ImpliesFormat";
      return s;
    }
  }
  public class BinOpFormat_Equivalence : BinOpFormat {
    public BinOpFormat_Equivalence() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_Equivalence();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_Equivalence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.Equivalence";
      return s;
    }
  }
  public class BinOpFormat_ReverseOperands : BinOpFormat {
    public BinOpFormat_ReverseOperands() : base() {
    }
    public override _IBinOpFormat DowncastClone() {
      if (this is _IBinOpFormat dt) { return dt; }
      return new BinOpFormat_ReverseOperands();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Format.BinOpFormat_ReverseOperands;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "Format.BinOpFormat.ReverseOperands";
      return s;
    }
  }
} // end of namespace DAST.Format
namespace DAST {


  public interface _IModule {
    bool is_Module { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    bool dtor_isExtern { get; }
    Dafny.ISequence<DAST._IModuleItem> dtor_body { get; }
    _IModule DowncastClone();
  }
  public class Module : _IModule {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly bool _isExtern;
    public readonly Dafny.ISequence<DAST._IModuleItem> _body;
    public Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      this._name = name;
      this._isExtern = isExtern;
      this._body = body;
    }
    public _IModule DowncastClone() {
      if (this is _IModule dt) { return dt; }
      return new Module(_name, _isExtern, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Module;
      return oth != null && object.Equals(this._name, oth._name) && this._isExtern == oth._isExtern && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isExtern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Module.Module";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isExtern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly DAST._IModule theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, false, Dafny.Sequence<DAST._IModuleItem>.Empty);
    public static DAST._IModule Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModule> _TYPE = new Dafny.TypeDescriptor<DAST._IModule>(DAST.Module.Default());
    public static Dafny.TypeDescriptor<DAST._IModule> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModule create(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return new Module(name, isExtern, body);
    }
    public static _IModule create_Module(Dafny.ISequence<Dafny.Rune> name, bool isExtern, Dafny.ISequence<DAST._IModuleItem> body) {
      return create(name, isExtern, body);
    }
    public bool is_Module { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public bool dtor_isExtern {
      get {
        return this._isExtern;
      }
    }
    public Dafny.ISequence<DAST._IModuleItem> dtor_body {
      get {
        return this._body;
      }
    }
  }

  public interface _IModuleItem {
    bool is_Module { get; }
    bool is_Class { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    bool is_Datatype { get; }
    DAST._IModule dtor_Module_a0 { get; }
    DAST._IClass dtor_Class_a0 { get; }
    DAST._ITrait dtor_Trait_a0 { get; }
    DAST._INewtype dtor_Newtype_a0 { get; }
    DAST._IDatatype dtor_Datatype_a0 { get; }
    _IModuleItem DowncastClone();
  }
  public abstract class ModuleItem : _IModuleItem {
    public ModuleItem() {
    }
    private static readonly DAST._IModuleItem theDefault = create_Module(DAST.Module.Default());
    public static DAST._IModuleItem Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IModuleItem> _TYPE = new Dafny.TypeDescriptor<DAST._IModuleItem>(DAST.ModuleItem.Default());
    public static Dafny.TypeDescriptor<DAST._IModuleItem> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModuleItem create_Module(DAST._IModule _a0) {
      return new ModuleItem_Module(_a0);
    }
    public static _IModuleItem create_Class(DAST._IClass _a0) {
      return new ModuleItem_Class(_a0);
    }
    public static _IModuleItem create_Trait(DAST._ITrait _a0) {
      return new ModuleItem_Trait(_a0);
    }
    public static _IModuleItem create_Newtype(DAST._INewtype _a0) {
      return new ModuleItem_Newtype(_a0);
    }
    public static _IModuleItem create_Datatype(DAST._IDatatype _a0) {
      return new ModuleItem_Datatype(_a0);
    }
    public bool is_Module { get { return this is ModuleItem_Module; } }
    public bool is_Class { get { return this is ModuleItem_Class; } }
    public bool is_Trait { get { return this is ModuleItem_Trait; } }
    public bool is_Newtype { get { return this is ModuleItem_Newtype; } }
    public bool is_Datatype { get { return this is ModuleItem_Datatype; } }
    public DAST._IModule dtor_Module_a0 {
      get {
        var d = this;
        return ((ModuleItem_Module)d)._a0;
      }
    }
    public DAST._IClass dtor_Class_a0 {
      get {
        var d = this;
        return ((ModuleItem_Class)d)._a0;
      }
    }
    public DAST._ITrait dtor_Trait_a0 {
      get {
        var d = this;
        return ((ModuleItem_Trait)d)._a0;
      }
    }
    public DAST._INewtype dtor_Newtype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Newtype)d)._a0;
      }
    }
    public DAST._IDatatype dtor_Datatype_a0 {
      get {
        var d = this;
        return ((ModuleItem_Datatype)d)._a0;
      }
    }
    public abstract _IModuleItem DowncastClone();
  }
  public class ModuleItem_Module : ModuleItem {
    public readonly DAST._IModule _a0;
    public ModuleItem_Module(DAST._IModule _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Module(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Module;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Module";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Class : ModuleItem {
    public readonly DAST._IClass _a0;
    public ModuleItem_Class(DAST._IClass _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Class(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Class;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Class";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Trait : ModuleItem {
    public readonly DAST._ITrait _a0;
    public ModuleItem_Trait(DAST._ITrait _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Trait(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Trait;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Newtype : ModuleItem {
    public readonly DAST._INewtype _a0;
    public ModuleItem_Newtype(DAST._INewtype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Newtype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Newtype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class ModuleItem_Datatype : ModuleItem {
    public readonly DAST._IDatatype _a0;
    public ModuleItem_Datatype(DAST._IDatatype _a0) : base() {
      this._a0 = _a0;
    }
    public override _IModuleItem DowncastClone() {
      if (this is _IModuleItem dt) { return dt; }
      return new ModuleItem_Datatype(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ModuleItem_Datatype;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ModuleItem.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IType {
    bool is_Path { get; }
    bool is_Nullable { get; }
    bool is_Tuple { get; }
    bool is_Array { get; }
    bool is_Seq { get; }
    bool is_Set { get; }
    bool is_Multiset { get; }
    bool is_Map { get; }
    bool is_SetBuilder { get; }
    bool is_MapBuilder { get; }
    bool is_Arrow { get; }
    bool is_Primitive { get; }
    bool is_Passthrough { get; }
    bool is_TypeArg { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    DAST._IResolvedType dtor_resolved { get; }
    DAST._IType dtor_Nullable_a0 { get; }
    Dafny.ISequence<DAST._IType> dtor_Tuple_a0 { get; }
    DAST._IType dtor_element { get; }
    BigInteger dtor_dims { get; }
    DAST._IType dtor_key { get; }
    DAST._IType dtor_value { get; }
    Dafny.ISequence<DAST._IType> dtor_args { get; }
    DAST._IType dtor_result { get; }
    DAST._IPrimitive dtor_Primitive_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 { get; }
    _IType DowncastClone();
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly DAST._IType theDefault = create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.ResolvedType.Default());
    public static DAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IType> _TYPE = new Dafny.TypeDescriptor<DAST._IType>(DAST.Type.Default());
    public static Dafny.TypeDescriptor<DAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) {
      return new Type_Path(_a0, typeArgs, resolved);
    }
    public static _IType create_Nullable(DAST._IType _a0) {
      return new Type_Nullable(_a0);
    }
    public static _IType create_Tuple(Dafny.ISequence<DAST._IType> _a0) {
      return new Type_Tuple(_a0);
    }
    public static _IType create_Array(DAST._IType element, BigInteger dims) {
      return new Type_Array(element, dims);
    }
    public static _IType create_Seq(DAST._IType element) {
      return new Type_Seq(element);
    }
    public static _IType create_Set(DAST._IType element) {
      return new Type_Set(element);
    }
    public static _IType create_Multiset(DAST._IType element) {
      return new Type_Multiset(element);
    }
    public static _IType create_Map(DAST._IType key, DAST._IType @value) {
      return new Type_Map(key, @value);
    }
    public static _IType create_SetBuilder(DAST._IType element) {
      return new Type_SetBuilder(element);
    }
    public static _IType create_MapBuilder(DAST._IType key, DAST._IType @value) {
      return new Type_MapBuilder(key, @value);
    }
    public static _IType create_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) {
      return new Type_Arrow(args, result);
    }
    public static _IType create_Primitive(DAST._IPrimitive _a0) {
      return new Type_Primitive(_a0);
    }
    public static _IType create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_Passthrough(_a0);
    }
    public static _IType create_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Type_TypeArg(_a0);
    }
    public bool is_Path { get { return this is Type_Path; } }
    public bool is_Nullable { get { return this is Type_Nullable; } }
    public bool is_Tuple { get { return this is Type_Tuple; } }
    public bool is_Array { get { return this is Type_Array; } }
    public bool is_Seq { get { return this is Type_Seq; } }
    public bool is_Set { get { return this is Type_Set; } }
    public bool is_Multiset { get { return this is Type_Multiset; } }
    public bool is_Map { get { return this is Type_Map; } }
    public bool is_SetBuilder { get { return this is Type_SetBuilder; } }
    public bool is_MapBuilder { get { return this is Type_MapBuilder; } }
    public bool is_Arrow { get { return this is Type_Arrow; } }
    public bool is_Primitive { get { return this is Type_Primitive; } }
    public bool is_Passthrough { get { return this is Type_Passthrough; } }
    public bool is_TypeArg { get { return this is Type_TypeArg; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Path_a0 {
      get {
        var d = this;
        return ((Type_Path)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Type_Path)d)._typeArgs;
      }
    }
    public DAST._IResolvedType dtor_resolved {
      get {
        var d = this;
        return ((Type_Path)d)._resolved;
      }
    }
    public DAST._IType dtor_Nullable_a0 {
      get {
        var d = this;
        return ((Type_Nullable)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Type_Tuple)d)._a0;
      }
    }
    public DAST._IType dtor_element {
      get {
        var d = this;
        if (d is Type_Array) { return ((Type_Array)d)._element; }
        if (d is Type_Seq) { return ((Type_Seq)d)._element; }
        if (d is Type_Set) { return ((Type_Set)d)._element; }
        if (d is Type_Multiset) { return ((Type_Multiset)d)._element; }
        return ((Type_SetBuilder)d)._element;
      }
    }
    public BigInteger dtor_dims {
      get {
        var d = this;
        return ((Type_Array)d)._dims;
      }
    }
    public DAST._IType dtor_key {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._key; }
        return ((Type_MapBuilder)d)._key;
      }
    }
    public DAST._IType dtor_value {
      get {
        var d = this;
        if (d is Type_Map) { return ((Type_Map)d)._value; }
        return ((Type_MapBuilder)d)._value;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_args {
      get {
        var d = this;
        return ((Type_Arrow)d)._args;
      }
    }
    public DAST._IType dtor_result {
      get {
        var d = this;
        return ((Type_Arrow)d)._result;
      }
    }
    public DAST._IPrimitive dtor_Primitive_a0 {
      get {
        var d = this;
        return ((Type_Primitive)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((Type_Passthrough)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_TypeArg_a0 {
      get {
        var d = this;
        return ((Type_TypeArg)d)._a0;
      }
    }
    public abstract _IType DowncastClone();
  }
  public class Type_Path : Type {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly DAST._IResolvedType _resolved;
    public Type_Path(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0, Dafny.ISequence<DAST._IType> typeArgs, DAST._IResolvedType resolved) : base() {
      this._a0 = _a0;
      this._typeArgs = typeArgs;
      this._resolved = resolved;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Path(_a0, _typeArgs, _resolved);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Path;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._resolved, oth._resolved);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._resolved));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Path";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._resolved);
      s += ")";
      return s;
    }
  }
  public class Type_Nullable : Type {
    public readonly DAST._IType _a0;
    public Type_Nullable(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Nullable(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Nullable;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Nullable";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Tuple : Type {
    public readonly Dafny.ISequence<DAST._IType> _a0;
    public Type_Tuple(Dafny.ISequence<DAST._IType> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Array : Type {
    public readonly DAST._IType _element;
    public readonly BigInteger _dims;
    public Type_Array(DAST._IType element, BigInteger dims) : base() {
      this._element = element;
      this._dims = dims;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Array(_element, _dims);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Array;
      return oth != null && object.Equals(this._element, oth._element) && this._dims == oth._dims;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Array";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dims);
      s += ")";
      return s;
    }
  }
  public class Type_Seq : Type {
    public readonly DAST._IType _element;
    public Type_Seq(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Seq(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Seq;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Seq";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Set : Type {
    public readonly DAST._IType _element;
    public Type_Set(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Set(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Set;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Set";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Multiset : Type {
    public readonly DAST._IType _element;
    public Type_Multiset(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Multiset(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Multiset;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Multiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_Map : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_Map(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Map(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Map;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Map";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_SetBuilder : Type {
    public readonly DAST._IType _element;
    public Type_SetBuilder(DAST._IType element) : base() {
      this._element = element;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SetBuilder(_element);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_SetBuilder;
      return oth != null && object.Equals(this._element, oth._element);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._element));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._element);
      s += ")";
      return s;
    }
  }
  public class Type_MapBuilder : Type {
    public readonly DAST._IType _key;
    public readonly DAST._IType _value;
    public Type_MapBuilder(DAST._IType key, DAST._IType @value) : base() {
      this._key = key;
      this._value = @value;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_MapBuilder(_key, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_MapBuilder;
      return oth != null && object.Equals(this._key, oth._key) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._key));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._key);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Type_Arrow : Type {
    public readonly Dafny.ISequence<DAST._IType> _args;
    public readonly DAST._IType _result;
    public Type_Arrow(Dafny.ISequence<DAST._IType> args, DAST._IType result) : base() {
      this._args = args;
      this._result = result;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Arrow(_args, _result);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Arrow;
      return oth != null && object.Equals(this._args, oth._args) && object.Equals(this._result, oth._result);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._result));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Arrow";
      s += "(";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._result);
      s += ")";
      return s;
    }
  }
  public class Type_Primitive : Type {
    public readonly DAST._IPrimitive _a0;
    public Type_Primitive(DAST._IPrimitive _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Primitive(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Primitive;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Primitive";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Type_Passthrough : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeArg : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Type_TypeArg(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeArg(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Type_TypeArg;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Type.TypeArg";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IPrimitive {
    bool is_Int { get; }
    bool is_Real { get; }
    bool is_String { get; }
    bool is_Bool { get; }
    bool is_Char { get; }
    _IPrimitive DowncastClone();
  }
  public abstract class Primitive : _IPrimitive {
    public Primitive() {
    }
    private static readonly DAST._IPrimitive theDefault = create_Int();
    public static DAST._IPrimitive Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IPrimitive> _TYPE = new Dafny.TypeDescriptor<DAST._IPrimitive>(DAST.Primitive.Default());
    public static Dafny.TypeDescriptor<DAST._IPrimitive> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrimitive create_Int() {
      return new Primitive_Int();
    }
    public static _IPrimitive create_Real() {
      return new Primitive_Real();
    }
    public static _IPrimitive create_String() {
      return new Primitive_String();
    }
    public static _IPrimitive create_Bool() {
      return new Primitive_Bool();
    }
    public static _IPrimitive create_Char() {
      return new Primitive_Char();
    }
    public bool is_Int { get { return this is Primitive_Int; } }
    public bool is_Real { get { return this is Primitive_Real; } }
    public bool is_String { get { return this is Primitive_String; } }
    public bool is_Bool { get { return this is Primitive_Bool; } }
    public bool is_Char { get { return this is Primitive_Char; } }
    public static System.Collections.Generic.IEnumerable<_IPrimitive> AllSingletonConstructors {
      get {
        yield return Primitive.create_Int();
        yield return Primitive.create_Real();
        yield return Primitive.create_String();
        yield return Primitive.create_Bool();
        yield return Primitive.create_Char();
      }
    }
    public abstract _IPrimitive DowncastClone();
  }
  public class Primitive_Int : Primitive {
    public Primitive_Int() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Int();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Int;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Int";
      return s;
    }
  }
  public class Primitive_Real : Primitive {
    public Primitive_Real() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Real();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Real;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Real";
      return s;
    }
  }
  public class Primitive_String : Primitive {
    public Primitive_String() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_String();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_String;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.String";
      return s;
    }
  }
  public class Primitive_Bool : Primitive {
    public Primitive_Bool() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Bool";
      return s;
    }
  }
  public class Primitive_Char : Primitive {
    public Primitive_Char() : base() {
    }
    public override _IPrimitive DowncastClone() {
      if (this is _IPrimitive dt) { return dt; }
      return new Primitive_Char();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Primitive_Char;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Primitive.Char";
      return s;
    }
  }

  public interface _INewtypeRange {
    bool is_U8 { get; }
    bool is_I8 { get; }
    bool is_U16 { get; }
    bool is_I16 { get; }
    bool is_U32 { get; }
    bool is_I32 { get; }
    bool is_U64 { get; }
    bool is_I64 { get; }
    bool is_U128 { get; }
    bool is_I128 { get; }
    bool is_BigInt { get; }
    bool is_NoRange { get; }
    _INewtypeRange DowncastClone();
  }
  public abstract class NewtypeRange : _INewtypeRange {
    public NewtypeRange() {
    }
    private static readonly DAST._INewtypeRange theDefault = create_U8();
    public static DAST._INewtypeRange Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtypeRange> _TYPE = new Dafny.TypeDescriptor<DAST._INewtypeRange>(DAST.NewtypeRange.Default());
    public static Dafny.TypeDescriptor<DAST._INewtypeRange> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtypeRange create_U8() {
      return new NewtypeRange_U8();
    }
    public static _INewtypeRange create_I8() {
      return new NewtypeRange_I8();
    }
    public static _INewtypeRange create_U16() {
      return new NewtypeRange_U16();
    }
    public static _INewtypeRange create_I16() {
      return new NewtypeRange_I16();
    }
    public static _INewtypeRange create_U32() {
      return new NewtypeRange_U32();
    }
    public static _INewtypeRange create_I32() {
      return new NewtypeRange_I32();
    }
    public static _INewtypeRange create_U64() {
      return new NewtypeRange_U64();
    }
    public static _INewtypeRange create_I64() {
      return new NewtypeRange_I64();
    }
    public static _INewtypeRange create_U128() {
      return new NewtypeRange_U128();
    }
    public static _INewtypeRange create_I128() {
      return new NewtypeRange_I128();
    }
    public static _INewtypeRange create_BigInt() {
      return new NewtypeRange_BigInt();
    }
    public static _INewtypeRange create_NoRange() {
      return new NewtypeRange_NoRange();
    }
    public bool is_U8 { get { return this is NewtypeRange_U8; } }
    public bool is_I8 { get { return this is NewtypeRange_I8; } }
    public bool is_U16 { get { return this is NewtypeRange_U16; } }
    public bool is_I16 { get { return this is NewtypeRange_I16; } }
    public bool is_U32 { get { return this is NewtypeRange_U32; } }
    public bool is_I32 { get { return this is NewtypeRange_I32; } }
    public bool is_U64 { get { return this is NewtypeRange_U64; } }
    public bool is_I64 { get { return this is NewtypeRange_I64; } }
    public bool is_U128 { get { return this is NewtypeRange_U128; } }
    public bool is_I128 { get { return this is NewtypeRange_I128; } }
    public bool is_BigInt { get { return this is NewtypeRange_BigInt; } }
    public bool is_NoRange { get { return this is NewtypeRange_NoRange; } }
    public static System.Collections.Generic.IEnumerable<_INewtypeRange> AllSingletonConstructors {
      get {
        yield return NewtypeRange.create_U8();
        yield return NewtypeRange.create_I8();
        yield return NewtypeRange.create_U16();
        yield return NewtypeRange.create_I16();
        yield return NewtypeRange.create_U32();
        yield return NewtypeRange.create_I32();
        yield return NewtypeRange.create_U64();
        yield return NewtypeRange.create_I64();
        yield return NewtypeRange.create_U128();
        yield return NewtypeRange.create_I128();
        yield return NewtypeRange.create_BigInt();
        yield return NewtypeRange.create_NoRange();
      }
    }
    public abstract _INewtypeRange DowncastClone();
  }
  public class NewtypeRange_U8 : NewtypeRange {
    public NewtypeRange_U8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U8";
      return s;
    }
  }
  public class NewtypeRange_I8 : NewtypeRange {
    public NewtypeRange_I8() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I8();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I8";
      return s;
    }
  }
  public class NewtypeRange_U16 : NewtypeRange {
    public NewtypeRange_U16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U16";
      return s;
    }
  }
  public class NewtypeRange_I16 : NewtypeRange {
    public NewtypeRange_I16() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I16();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I16";
      return s;
    }
  }
  public class NewtypeRange_U32 : NewtypeRange {
    public NewtypeRange_U32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U32";
      return s;
    }
  }
  public class NewtypeRange_I32 : NewtypeRange {
    public NewtypeRange_I32() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I32();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I32";
      return s;
    }
  }
  public class NewtypeRange_U64 : NewtypeRange {
    public NewtypeRange_U64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U64";
      return s;
    }
  }
  public class NewtypeRange_I64 : NewtypeRange {
    public NewtypeRange_I64() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I64();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I64";
      return s;
    }
  }
  public class NewtypeRange_U128 : NewtypeRange {
    public NewtypeRange_U128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_U128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.U128";
      return s;
    }
  }
  public class NewtypeRange_I128 : NewtypeRange {
    public NewtypeRange_I128() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_I128();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.I128";
      return s;
    }
  }
  public class NewtypeRange_BigInt : NewtypeRange {
    public NewtypeRange_BigInt() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_BigInt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_BigInt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.BigInt";
      return s;
    }
  }
  public class NewtypeRange_NoRange : NewtypeRange {
    public NewtypeRange_NoRange() : base() {
    }
    public override _INewtypeRange DowncastClone() {
      if (this is _INewtypeRange dt) { return dt; }
      return new NewtypeRange_NoRange();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.NewtypeRange_NoRange;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.NewtypeRange.NoRange";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_Attribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args { get; }
    _IAttribute DowncastClone();
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _args;
    public Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      this._name = name;
      this._args = args;
    }
    public _IAttribute DowncastClone() {
      if (this is _IAttribute dt) { return dt; }
      return new Attribute(_name, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Attribute;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Attribute.Attribute";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
    private static readonly DAST._IAttribute theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty);
    public static DAST._IAttribute Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAttribute> _TYPE = new Dafny.TypeDescriptor<DAST._IAttribute>(DAST.Attribute.Default());
    public static Dafny.TypeDescriptor<DAST._IAttribute> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return new Attribute(name, args);
    }
    public static _IAttribute create_Attribute(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> args) {
      return create(name, args);
    }
    public bool is_Attribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_args {
      get {
        return this._args;
      }
    }
  }

  public interface _IDatatypeType {
    bool is_DatatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatypeType DowncastClone();
  }
  public class DatatypeType : _IDatatypeType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._path = path;
      this._attributes = attributes;
    }
    public _IDatatypeType DowncastClone() {
      if (this is _IDatatypeType dt) { return dt; }
      return new DatatypeType(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeType;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeType.DatatypeType";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeType theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatypeType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeType> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeType>(DAST.DatatypeType.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeType create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new DatatypeType(path, attributes);
    }
    public static _IDatatypeType create_DatatypeType(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(path, attributes);
    }
    public bool is_DatatypeType { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        return this._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IResolvedType {
    bool is_AllocatedDatatype { get; }
    bool is_Datatype { get; }
    bool is_Trait { get; }
    bool is_Newtype { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    DAST._IType dtor_baseType { get; }
    DAST._INewtypeRange dtor_range { get; }
    bool dtor_erase { get; }
    _IResolvedType DowncastClone();
  }
  public abstract class ResolvedType : _IResolvedType {
    public ResolvedType() {
    }
    private static readonly DAST._IResolvedType theDefault = create_AllocatedDatatype(DAST.DatatypeType.Default());
    public static DAST._IResolvedType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IResolvedType> _TYPE = new Dafny.TypeDescriptor<DAST._IResolvedType>(DAST.ResolvedType.Default());
    public static Dafny.TypeDescriptor<DAST._IResolvedType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IResolvedType create_AllocatedDatatype(DAST._IDatatypeType datatypeType) {
      return new ResolvedType_AllocatedDatatype(datatypeType);
    }
    public static _IResolvedType create_Datatype(DAST._IDatatypeType datatypeType) {
      return new ResolvedType_Datatype(datatypeType);
    }
    public static _IResolvedType create_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Trait(path, attributes);
    }
    public static _IResolvedType create_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new ResolvedType_Newtype(baseType, range, erase, attributes);
    }
    public bool is_AllocatedDatatype { get { return this is ResolvedType_AllocatedDatatype; } }
    public bool is_Datatype { get { return this is ResolvedType_Datatype; } }
    public bool is_Trait { get { return this is ResolvedType_Trait; } }
    public bool is_Newtype { get { return this is ResolvedType_Newtype; } }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        if (d is ResolvedType_AllocatedDatatype) { return ((ResolvedType_AllocatedDatatype)d)._datatypeType; }
        return ((ResolvedType_Datatype)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((ResolvedType_Trait)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        var d = this;
        if (d is ResolvedType_Trait) { return ((ResolvedType_Trait)d)._attributes; }
        return ((ResolvedType_Newtype)d)._attributes;
      }
    }
    public DAST._IType dtor_baseType {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._baseType;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._range;
      }
    }
    public bool dtor_erase {
      get {
        var d = this;
        return ((ResolvedType_Newtype)d)._erase;
      }
    }
    public abstract _IResolvedType DowncastClone();
  }
  public class ResolvedType_AllocatedDatatype : ResolvedType {
    public readonly DAST._IDatatypeType _datatypeType;
    public ResolvedType_AllocatedDatatype(DAST._IDatatypeType datatypeType) : base() {
      this._datatypeType = datatypeType;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_AllocatedDatatype(_datatypeType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_AllocatedDatatype;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.AllocatedDatatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Datatype : ResolvedType {
    public readonly DAST._IDatatypeType _datatypeType;
    public ResolvedType_Datatype(DAST._IDatatypeType datatypeType) : base() {
      this._datatypeType = datatypeType;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Datatype(_datatypeType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Datatype;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Datatype";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Trait : ResolvedType {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Trait(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._path = path;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Trait(_path, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Trait;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }
  public class ResolvedType_Newtype : ResolvedType {
    public readonly DAST._IType _baseType;
    public readonly DAST._INewtypeRange _range;
    public readonly bool _erase;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public ResolvedType_Newtype(DAST._IType baseType, DAST._INewtypeRange range, bool erase, Dafny.ISequence<DAST._IAttribute> attributes) : base() {
      this._baseType = baseType;
      this._range = range;
      this._erase = erase;
      this._attributes = attributes;
    }
    public override _IResolvedType DowncastClone() {
      if (this is _IResolvedType dt) { return dt; }
      return new ResolvedType_Newtype(_baseType, _range, _erase, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ResolvedType_Newtype;
      return oth != null && object.Equals(this._baseType, oth._baseType) && object.Equals(this._range, oth._range) && this._erase == oth._erase && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._erase));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ResolvedType.Newtype";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._erase);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
  }

  public interface _IIdent {
    bool is_Ident { get; }
    Dafny.ISequence<Dafny.Rune> dtor_id { get; }
  }
  public class Ident : _IIdent {
    public readonly Dafny.ISequence<Dafny.Rune> _id;
    public Ident(Dafny.ISequence<Dafny.Rune> id) {
      this._id = id;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Ident;
      return oth != null && object.Equals(this._id, oth._id);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._id));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Ident.Ident";
      s += "(";
      s += this._id.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IIdent create(Dafny.ISequence<Dafny.Rune> id) {
      return new Ident(id);
    }
    public static _IIdent create_Ident(Dafny.ISequence<Dafny.Rune> id) {
      return create(id);
    }
    public bool is_Ident { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_id {
      get {
        return this._id;
      }
    }
  }

  public interface _IClass {
    bool is_Class { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IType> dtor_superClasses { get; }
    Dafny.ISequence<DAST._IField> dtor_fields { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IClass DowncastClone();
  }
  public class Class : _IClass {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IType> _superClasses;
    public readonly Dafny.ISequence<DAST._IField> _fields;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._superClasses = superClasses;
      this._fields = fields;
      this._body = body;
      this._attributes = attributes;
    }
    public _IClass DowncastClone() {
      if (this is _IClass dt) { return dt; }
      return new Class(_name, _enclosingModule, _typeParams, _superClasses, _fields, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Class;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._superClasses, oth._superClasses) && object.Equals(this._fields, oth._fields) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._superClasses));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Class.Class";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._superClasses);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IClass theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IField>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IClass Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IClass> _TYPE = new Dafny.TypeDescriptor<DAST._IClass>(DAST.Class.Default());
    public static Dafny.TypeDescriptor<DAST._IClass> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClass create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Class(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public static _IClass create_Class(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IType> superClasses, Dafny.ISequence<DAST._IField> fields, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, superClasses, fields, body, attributes);
    }
    public bool is_Class { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_superClasses {
      get {
        return this._superClasses;
      }
    }
    public Dafny.ISequence<DAST._IField> dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _ITrait DowncastClone();
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._body = body;
      this._attributes = attributes;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_name, _typeParams, _body, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Trait;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._body, oth._body) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Trait.Trait";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._ITrait theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ITrait> _TYPE = new Dafny.TypeDescriptor<DAST._ITrait>(DAST.Trait.Default());
    public static Dafny.TypeDescriptor<DAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Trait(name, typeParams, body, attributes);
    }
    public static _ITrait create_Trait(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IMethod> body, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, body, attributes);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatype {
    bool is_Datatype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<Dafny.Rune> dtor_enclosingModule { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors { get; }
    Dafny.ISequence<DAST._IMethod> dtor_body { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _IDatatype DowncastClone();
  }
  public class Datatype : _IDatatype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<Dafny.Rune> _enclosingModule;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IDatatypeCtor> _ctors;
    public readonly Dafny.ISequence<DAST._IMethod> _body;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._enclosingModule = enclosingModule;
      this._typeParams = typeParams;
      this._ctors = ctors;
      this._body = body;
      this._isCo = isCo;
      this._attributes = attributes;
    }
    public _IDatatype DowncastClone() {
      if (this is _IDatatype dt) { return dt; }
      return new Datatype(_name, _enclosingModule, _typeParams, _ctors, _body, _isCo, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Datatype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._enclosingModule, oth._enclosingModule) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._ctors, oth._ctors) && object.Equals(this._body, oth._body) && this._isCo == oth._isCo && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enclosingModule));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ctors));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Datatype.Datatype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._enclosingModule);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._ctors);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IDatatypeCtor>.Empty, Dafny.Sequence<DAST._IMethod>.Empty, false, Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._IDatatype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatype> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatype>(DAST.Datatype.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Datatype(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public static _IDatatype create_Datatype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<Dafny.Rune> enclosingModule, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IDatatypeCtor> ctors, Dafny.ISequence<DAST._IMethod> body, bool isCo, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, enclosingModule, typeParams, ctors, body, isCo, attributes);
    }
    public bool is_Datatype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_enclosingModule {
      get {
        return this._enclosingModule;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IDatatypeCtor> dtor_ctors {
      get {
        return this._ctors;
      }
    }
    public Dafny.ISequence<DAST._IMethod> dtor_body {
      get {
        return this._body;
      }
    }
    public bool dtor_isCo {
      get {
        return this._isCo;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IDatatypeCtor {
    bool is_DatatypeCtor { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IFormal> dtor_args { get; }
    bool dtor_hasAnyArgs { get; }
    _IDatatypeCtor DowncastClone();
  }
  public class DatatypeCtor : _IDatatypeCtor {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IFormal> _args;
    public readonly bool _hasAnyArgs;
    public DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      this._name = name;
      this._args = args;
      this._hasAnyArgs = hasAnyArgs;
    }
    public _IDatatypeCtor DowncastClone() {
      if (this is _IDatatypeCtor dt) { return dt; }
      return new DatatypeCtor(_name, _args, _hasAnyArgs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.DatatypeCtor;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._args, oth._args) && this._hasAnyArgs == oth._hasAnyArgs;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasAnyArgs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.DatatypeCtor.DatatypeCtor";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasAnyArgs);
      s += ")";
      return s;
    }
    private static readonly DAST._IDatatypeCtor theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, false);
    public static DAST._IDatatypeCtor Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TYPE = new Dafny.TypeDescriptor<DAST._IDatatypeCtor>(DAST.DatatypeCtor.Default());
    public static Dafny.TypeDescriptor<DAST._IDatatypeCtor> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDatatypeCtor create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return new DatatypeCtor(name, args, hasAnyArgs);
    }
    public static _IDatatypeCtor create_DatatypeCtor(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> args, bool hasAnyArgs) {
      return create(name, args, hasAnyArgs);
    }
    public bool is_DatatypeCtor { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_args {
      get {
        return this._args;
      }
    }
    public bool dtor_hasAnyArgs {
      get {
        return this._hasAnyArgs;
      }
    }
  }

  public interface _INewtype {
    bool is_Newtype { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    DAST._IType dtor_base { get; }
    DAST._INewtypeRange dtor_range { get; }
    Dafny.ISequence<DAST._IStatement> dtor_witnessStmts { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr { get; }
    Dafny.ISequence<DAST._IAttribute> dtor_attributes { get; }
    _INewtype DowncastClone();
  }
  public class Newtype : _INewtype {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly DAST._IType _base;
    public readonly DAST._INewtypeRange _range;
    public readonly Dafny.ISequence<DAST._IStatement> _witnessStmts;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _witnessExpr;
    public readonly Dafny.ISequence<DAST._IAttribute> _attributes;
    public Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      this._name = name;
      this._typeParams = typeParams;
      this._base = @base;
      this._range = range;
      this._witnessStmts = witnessStmts;
      this._witnessExpr = witnessExpr;
      this._attributes = attributes;
    }
    public _INewtype DowncastClone() {
      if (this is _INewtype dt) { return dt; }
      return new Newtype(_name, _typeParams, _base, _range, _witnessStmts, _witnessExpr, _attributes);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Newtype;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._base, oth._base) && object.Equals(this._range, oth._range) && object.Equals(this._witnessStmts, oth._witnessStmts) && object.Equals(this._witnessExpr, oth._witnessExpr) && object.Equals(this._attributes, oth._attributes);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessStmts));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._witnessExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Newtype.Newtype";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessStmts);
      s += ", ";
      s += Dafny.Helpers.ToString(this._witnessExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ")";
      return s;
    }
    private static readonly DAST._INewtype theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, DAST.Type.Default(), DAST.NewtypeRange.Default(), Dafny.Sequence<DAST._IStatement>.Empty, Std.Wrappers.Option<DAST._IExpression>.Default(), Dafny.Sequence<DAST._IAttribute>.Empty);
    public static DAST._INewtype Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._INewtype> _TYPE = new Dafny.TypeDescriptor<DAST._INewtype>(DAST.Newtype.Default());
    public static Dafny.TypeDescriptor<DAST._INewtype> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INewtype create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return new Newtype(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public static _INewtype create_Newtype(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, DAST._IType @base, DAST._INewtypeRange range, Dafny.ISequence<DAST._IStatement> witnessStmts, Std.Wrappers._IOption<DAST._IExpression> witnessExpr, Dafny.ISequence<DAST._IAttribute> attributes) {
      return create(name, typeParams, @base, range, witnessStmts, witnessExpr, attributes);
    }
    public bool is_Newtype { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public DAST._IType dtor_base {
      get {
        return this._base;
      }
    }
    public DAST._INewtypeRange dtor_range {
      get {
        return this._range;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_witnessStmts {
      get {
        return this._witnessStmts;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_witnessExpr {
      get {
        return this._witnessExpr;
      }
    }
    public Dafny.ISequence<DAST._IAttribute> dtor_attributes {
      get {
        return this._attributes;
      }
    }
  }

  public interface _IClassItem {
    bool is_Method { get; }
    DAST._IMethod dtor_Method_a0 { get; }
  }
  public class ClassItem : _IClassItem {
    public readonly DAST._IMethod _a0;
    public ClassItem(DAST._IMethod _a0) {
      this._a0 = _a0;
    }
    public static DAST._IMethod DowncastClone(DAST._IMethod _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.ClassItem;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.ClassItem.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = DAST.Method.Default();
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IClassItem create(DAST._IMethod _a0) {
      return new ClassItem(_a0);
    }
    public static _IClassItem create_Method(DAST._IMethod _a0) {
      return create(_a0);
    }
    public bool is_Method { get { return true; } }
    public DAST._IMethod dtor_Method_a0 {
      get {
        return this._a0;
      }
    }
  }

  public interface _IField {
    bool is_Field { get; }
    DAST._IFormal dtor_formal { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue { get; }
    _IField DowncastClone();
  }
  public class Field : _IField {
    public readonly DAST._IFormal _formal;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _defaultValue;
    public Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      this._formal = formal;
      this._defaultValue = defaultValue;
    }
    public _IField DowncastClone() {
      if (this is _IField dt) { return dt; }
      return new Field(_formal, _defaultValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Field;
      return oth != null && object.Equals(this._formal, oth._formal) && object.Equals(this._defaultValue, oth._defaultValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formal));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._defaultValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Field.Field";
      s += "(";
      s += Dafny.Helpers.ToString(this._formal);
      s += ", ";
      s += Dafny.Helpers.ToString(this._defaultValue);
      s += ")";
      return s;
    }
    private static readonly DAST._IField theDefault = create(DAST.Formal.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IField> _TYPE = new Dafny.TypeDescriptor<DAST._IField>(DAST.Field.Default());
    public static Dafny.TypeDescriptor<DAST._IField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IField create(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return new Field(formal, defaultValue);
    }
    public static _IField create_Field(DAST._IFormal formal, Std.Wrappers._IOption<DAST._IExpression> defaultValue) {
      return create(formal, defaultValue);
    }
    public bool is_Field { get { return true; } }
    public DAST._IFormal dtor_formal {
      get {
        return this._formal;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_defaultValue {
      get {
        return this._defaultValue;
      }
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    _IFormal DowncastClone();
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      this._name = name;
      this._typ = typ;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
    private static readonly DAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default());
    public static DAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IFormal> _TYPE = new Dafny.TypeDescriptor<DAST._IFormal>(DAST.Formal.Default());
    public static Dafny.TypeDescriptor<DAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return new Formal(name, typ);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ) {
      return create(name, typ);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        return this._typ;
      }
    }
  }

  public interface _IMethod {
    bool is_Method { get; }
    bool dtor_isStatic { get; }
    bool dtor_hasBody { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IType> dtor_typeParams { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<DAST._IType> dtor_outTypes { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars { get; }
    _IMethod DowncastClone();
  }
  public class Method : _IMethod {
    public readonly bool _isStatic;
    public readonly bool _hasBody;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _overridingPath;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IType> _typeParams;
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public readonly Dafny.ISequence<DAST._IType> _outTypes;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outVars;
    public Method(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      this._isStatic = isStatic;
      this._hasBody = hasBody;
      this._overridingPath = overridingPath;
      this._name = name;
      this._typeParams = typeParams;
      this._params = @params;
      this._body = body;
      this._outTypes = outTypes;
      this._outVars = outVars;
    }
    public _IMethod DowncastClone() {
      if (this is _IMethod dt) { return dt; }
      return new Method(_isStatic, _hasBody, _overridingPath, _name, _typeParams, _params, _body, _outTypes, _outVars);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Method;
      return oth != null && this._isStatic == oth._isStatic && this._hasBody == oth._hasBody && object.Equals(this._overridingPath, oth._overridingPath) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._params, oth._params) && object.Equals(this._body, oth._body) && object.Equals(this._outTypes, oth._outTypes) && object.Equals(this._outVars, oth._outVars);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hasBody));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._overridingPath));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outTypes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outVars));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Method.Method";
      s += "(";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hasBody);
      s += ", ";
      s += Dafny.Helpers.ToString(this._overridingPath);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outTypes);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outVars);
      s += ")";
      return s;
    }
    private static readonly DAST._IMethod theDefault = create(false, false, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IType>.Empty, Dafny.Sequence<DAST._IFormal>.Empty, Dafny.Sequence<DAST._IStatement>.Empty, Dafny.Sequence<DAST._IType>.Empty, Std.Wrappers.Option<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>>.Default());
    public static DAST._IMethod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IMethod> _TYPE = new Dafny.TypeDescriptor<DAST._IMethod>(DAST.Method.Default());
    public static Dafny.TypeDescriptor<DAST._IMethod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMethod create(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return new Method(isStatic, hasBody, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public static _IMethod create_Method(bool isStatic, bool hasBody, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> overridingPath, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IType> typeParams, Dafny.ISequence<DAST._IFormal> @params, Dafny.ISequence<DAST._IStatement> body, Dafny.ISequence<DAST._IType> outTypes, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outVars) {
      return create(isStatic, hasBody, overridingPath, name, typeParams, @params, body, outTypes, outVars);
    }
    public bool is_Method { get { return true; } }
    public bool dtor_isStatic {
      get {
        return this._isStatic;
      }
    }
    public bool dtor_hasBody {
      get {
        return this._hasBody;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_overridingPath {
      get {
        return this._overridingPath;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        return this._params;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_outTypes {
      get {
        return this._outTypes;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outVars {
      get {
        return this._outVars;
      }
    }
  }

  public interface _ICallSignature {
    bool is_CallSignature { get; }
    Dafny.ISequence<DAST._IFormal> dtor_parameters { get; }
  }
  public class CallSignature : _ICallSignature {
    public readonly Dafny.ISequence<DAST._IFormal> _parameters;
    public CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      this._parameters = parameters;
    }
    public static Dafny.ISequence<DAST._IFormal> DowncastClone(Dafny.ISequence<DAST._IFormal> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallSignature;
      return oth != null && object.Equals(this._parameters, oth._parameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._parameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallSignature.CallSignature";
      s += "(";
      s += Dafny.Helpers.ToString(this._parameters);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<DAST._IFormal> theDefault = Dafny.Sequence<DAST._IFormal>.Empty;
    public static Dafny.ISequence<DAST._IFormal> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>>(Dafny.Sequence<DAST._IFormal>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<DAST._IFormal>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallSignature create(Dafny.ISequence<DAST._IFormal> parameters) {
      return new CallSignature(parameters);
    }
    public static _ICallSignature create_CallSignature(Dafny.ISequence<DAST._IFormal> parameters) {
      return create(parameters);
    }
    public bool is_CallSignature { get { return true; } }
    public Dafny.ISequence<DAST._IFormal> dtor_parameters {
      get {
        return this._parameters;
      }
    }
  }

  public interface _ICallName {
    bool is_Name { get; }
    bool is_MapBuilderAdd { get; }
    bool is_MapBuilderBuild { get; }
    bool is_SetBuilderAdd { get; }
    bool is_SetBuilderBuild { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<DAST._IFormal> dtor_signature { get; }
    _ICallName DowncastClone();
  }
  public abstract class CallName : _ICallName {
    public CallName() {
    }
    private static readonly DAST._ICallName theDefault = create_Name(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<DAST._IFormal>.Empty);
    public static DAST._ICallName Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICallName> _TYPE = new Dafny.TypeDescriptor<DAST._ICallName>(DAST.CallName.Default());
    public static Dafny.TypeDescriptor<DAST._ICallName> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICallName create_Name(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> signature) {
      return new CallName_Name(name, signature);
    }
    public static _ICallName create_MapBuilderAdd() {
      return new CallName_MapBuilderAdd();
    }
    public static _ICallName create_MapBuilderBuild() {
      return new CallName_MapBuilderBuild();
    }
    public static _ICallName create_SetBuilderAdd() {
      return new CallName_SetBuilderAdd();
    }
    public static _ICallName create_SetBuilderBuild() {
      return new CallName_SetBuilderBuild();
    }
    public bool is_Name { get { return this is CallName_Name; } }
    public bool is_MapBuilderAdd { get { return this is CallName_MapBuilderAdd; } }
    public bool is_MapBuilderBuild { get { return this is CallName_MapBuilderBuild; } }
    public bool is_SetBuilderAdd { get { return this is CallName_SetBuilderAdd; } }
    public bool is_SetBuilderBuild { get { return this is CallName_SetBuilderBuild; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((CallName_Name)d)._name;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_signature {
      get {
        var d = this;
        return ((CallName_Name)d)._signature;
      }
    }
    public abstract _ICallName DowncastClone();
  }
  public class CallName_Name : CallName {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<DAST._IFormal> _signature;
    public CallName_Name(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<DAST._IFormal> signature) : base() {
      this._name = name;
      this._signature = signature;
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_Name(_name, _signature);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_Name;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._signature, oth._signature);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._signature));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.Name";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._signature);
      s += ")";
      return s;
    }
  }
  public class CallName_MapBuilderAdd : CallName {
    public CallName_MapBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderAdd";
      return s;
    }
  }
  public class CallName_MapBuilderBuild : CallName {
    public CallName_MapBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_MapBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_MapBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.MapBuilderBuild";
      return s;
    }
  }
  public class CallName_SetBuilderAdd : CallName {
    public CallName_SetBuilderAdd() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderAdd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderAdd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderAdd";
      return s;
    }
  }
  public class CallName_SetBuilderBuild : CallName {
    public CallName_SetBuilderBuild() : base() {
    }
    public override _ICallName DowncastClone() {
      if (this is _ICallName dt) { return dt; }
      return new CallName_SetBuilderBuild();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CallName_SetBuilderBuild;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CallName.SetBuilderBuild";
      return s;
    }
  }

  public interface _IStatement {
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_If { get; }
    bool is_Labeled { get; }
    bool is_While { get; }
    bool is_Foreach { get; }
    bool is_Call { get; }
    bool is_Return { get; }
    bool is_EarlyReturn { get; }
    bool is_Break { get; }
    bool is_TailRecursive { get; }
    bool is_JumpTailCallStart { get; }
    bool is_Halt { get; }
    bool is_Print { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IType dtor_typ { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue { get; }
    DAST._IAssignLhs dtor_lhs { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IExpression dtor_cond { get; }
    Dafny.ISequence<DAST._IStatement> dtor_thn { get; }
    Dafny.ISequence<DAST._IStatement> dtor_els { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_boundName { get; }
    DAST._IType dtor_boundType { get; }
    DAST._IExpression dtor_over { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs { get; }
    DAST._IExpression dtor_expr { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel { get; }
    DAST._IExpression dtor_Print_a0 { get; }
    _IStatement DowncastClone();
  }
  public abstract class Statement : _IStatement {
    public Statement() {
    }
    private static readonly DAST._IStatement theDefault = create_DeclareVar(Dafny.Sequence<Dafny.Rune>.Empty, DAST.Type.Default(), Std.Wrappers.Option<DAST._IExpression>.Default());
    public static DAST._IStatement Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IStatement> _TYPE = new Dafny.TypeDescriptor<DAST._IStatement>(DAST.Statement.Default());
    public static Dafny.TypeDescriptor<DAST._IStatement> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStatement create_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) {
      return new Statement_DeclareVar(name, typ, maybeValue);
    }
    public static _IStatement create_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) {
      return new Statement_Assign(lhs, @value);
    }
    public static _IStatement create_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) {
      return new Statement_If(cond, thn, els);
    }
    public static _IStatement create_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Labeled(lbl, body);
    }
    public static _IStatement create_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_While(cond, body);
    }
    public static _IStatement create_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_Foreach(boundName, boundType, over, body);
    }
    public static _IStatement create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) {
      return new Statement_Call(@on, callName, typeArgs, args, outs);
    }
    public static _IStatement create_Return(DAST._IExpression expr) {
      return new Statement_Return(expr);
    }
    public static _IStatement create_EarlyReturn() {
      return new Statement_EarlyReturn();
    }
    public static _IStatement create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) {
      return new Statement_Break(toLabel);
    }
    public static _IStatement create_TailRecursive(Dafny.ISequence<DAST._IStatement> body) {
      return new Statement_TailRecursive(body);
    }
    public static _IStatement create_JumpTailCallStart() {
      return new Statement_JumpTailCallStart();
    }
    public static _IStatement create_Halt() {
      return new Statement_Halt();
    }
    public static _IStatement create_Print(DAST._IExpression _a0) {
      return new Statement_Print(_a0);
    }
    public bool is_DeclareVar { get { return this is Statement_DeclareVar; } }
    public bool is_Assign { get { return this is Statement_Assign; } }
    public bool is_If { get { return this is Statement_If; } }
    public bool is_Labeled { get { return this is Statement_Labeled; } }
    public bool is_While { get { return this is Statement_While; } }
    public bool is_Foreach { get { return this is Statement_Foreach; } }
    public bool is_Call { get { return this is Statement_Call; } }
    public bool is_Return { get { return this is Statement_Return; } }
    public bool is_EarlyReturn { get { return this is Statement_EarlyReturn; } }
    public bool is_Break { get { return this is Statement_Break; } }
    public bool is_TailRecursive { get { return this is Statement_TailRecursive; } }
    public bool is_JumpTailCallStart { get { return this is Statement_JumpTailCallStart; } }
    public bool is_Halt { get { return this is Statement_Halt; } }
    public bool is_Print { get { return this is Statement_Print; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._name;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._typ;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_maybeValue {
      get {
        var d = this;
        return ((Statement_DeclareVar)d)._maybeValue;
      }
    }
    public DAST._IAssignLhs dtor_lhs {
      get {
        var d = this;
        return ((Statement_Assign)d)._lhs;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        return ((Statement_Assign)d)._value;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        if (d is Statement_If) { return ((Statement_If)d)._cond; }
        return ((Statement_While)d)._cond;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_thn {
      get {
        var d = this;
        return ((Statement_If)d)._thn;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_els {
      get {
        var d = this;
        return ((Statement_If)d)._els;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Statement_Labeled)d)._lbl;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        if (d is Statement_Labeled) { return ((Statement_Labeled)d)._body; }
        if (d is Statement_While) { return ((Statement_While)d)._body; }
        if (d is Statement_Foreach) { return ((Statement_Foreach)d)._body; }
        return ((Statement_TailRecursive)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_boundName {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundName;
      }
    }
    public DAST._IType dtor_boundType {
      get {
        var d = this;
        return ((Statement_Foreach)d)._boundType;
      }
    }
    public DAST._IExpression dtor_over {
      get {
        var d = this;
        return ((Statement_Foreach)d)._over;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        return ((Statement_Call)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Statement_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        return ((Statement_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        return ((Statement_Call)d)._args;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> dtor_outs {
      get {
        var d = this;
        return ((Statement_Call)d)._outs;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        return ((Statement_Return)d)._expr;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_toLabel {
      get {
        var d = this;
        return ((Statement_Break)d)._toLabel;
      }
    }
    public DAST._IExpression dtor_Print_a0 {
      get {
        var d = this;
        return ((Statement_Print)d)._a0;
      }
    }
    public abstract _IStatement DowncastClone();
  }
  public class Statement_DeclareVar : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _maybeValue;
    public Statement_DeclareVar(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, Std.Wrappers._IOption<DAST._IExpression> maybeValue) : base() {
      this._name = name;
      this._typ = typ;
      this._maybeValue = maybeValue;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_DeclareVar(_name, _typ, _maybeValue);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_DeclareVar;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._maybeValue, oth._maybeValue);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._maybeValue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.DeclareVar";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._maybeValue);
      s += ")";
      return s;
    }
  }
  public class Statement_Assign : Statement {
    public readonly DAST._IAssignLhs _lhs;
    public readonly DAST._IExpression _value;
    public Statement_Assign(DAST._IAssignLhs lhs, DAST._IExpression @value) : base() {
      this._lhs = lhs;
      this._value = @value;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Assign(_lhs, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Assign;
      return oth != null && object.Equals(this._lhs, oth._lhs) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lhs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._lhs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Statement_If : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _thn;
    public readonly Dafny.ISequence<DAST._IStatement> _els;
    public Statement_If(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> thn, Dafny.ISequence<DAST._IStatement> els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_If(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_If;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.If";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Statement_Labeled : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Labeled(Dafny.ISequence<Dafny.Rune> lbl, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._lbl = lbl;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Labeled(_lbl, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Labeled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Labeled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_While : Statement {
    public readonly DAST._IExpression _cond;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_While(DAST._IExpression cond, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._cond = cond;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_While(_cond, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_While;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.While";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Foreach : Statement {
    public readonly Dafny.ISequence<Dafny.Rune> _boundName;
    public readonly DAST._IType _boundType;
    public readonly DAST._IExpression _over;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_Foreach(Dafny.ISequence<Dafny.Rune> boundName, DAST._IType boundType, DAST._IExpression over, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._boundName = boundName;
      this._boundType = boundType;
      this._over = over;
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Foreach(_boundName, _boundType, _over, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Foreach;
      return oth != null && object.Equals(this._boundName, oth._boundName) && object.Equals(this._boundType, oth._boundType) && object.Equals(this._over, oth._over) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._boundType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._over));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Foreach";
      s += "(";
      s += this._boundName.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._boundType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._over);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_Call : Statement {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _outs;
    public Statement_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args, Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> outs) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
      this._outs = outs;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Call(_on, _callName, _typeArgs, _args, _outs);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args) && object.Equals(this._outs, oth._outs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._outs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ", ";
      s += Dafny.Helpers.ToString(this._outs);
      s += ")";
      return s;
    }
  }
  public class Statement_Return : Statement {
    public readonly DAST._IExpression _expr;
    public Statement_Return(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Return(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Return;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Statement_EarlyReturn : Statement {
    public Statement_EarlyReturn() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_EarlyReturn();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_EarlyReturn;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.EarlyReturn";
      return s;
    }
  }
  public class Statement_Break : Statement {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _toLabel;
    public Statement_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> toLabel) : base() {
      this._toLabel = toLabel;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Break(_toLabel);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Break;
      return oth != null && object.Equals(this._toLabel, oth._toLabel);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._toLabel));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._toLabel);
      s += ")";
      return s;
    }
  }
  public class Statement_TailRecursive : Statement {
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Statement_TailRecursive(Dafny.ISequence<DAST._IStatement> body) : base() {
      this._body = body;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_TailRecursive(_body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_TailRecursive;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.TailRecursive";
      s += "(";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Statement_JumpTailCallStart : Statement {
    public Statement_JumpTailCallStart() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_JumpTailCallStart();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_JumpTailCallStart;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.JumpTailCallStart";
      return s;
    }
  }
  public class Statement_Halt : Statement {
    public Statement_Halt() : base() {
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Halt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Halt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Halt";
      return s;
    }
  }
  public class Statement_Print : Statement {
    public readonly DAST._IExpression _a0;
    public Statement_Print(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IStatement DowncastClone() {
      if (this is _IStatement dt) { return dt; }
      return new Statement_Print(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Statement_Print;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Statement.Print";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }

  public interface _IAssignLhs {
    bool is_Ident { get; }
    bool is_Select { get; }
    bool is_Index { get; }
    Dafny.ISequence<Dafny.Rune> dtor_ident { get; }
    DAST._IExpression dtor_expr { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    _IAssignLhs DowncastClone();
  }
  public abstract class AssignLhs : _IAssignLhs {
    public AssignLhs() {
    }
    private static readonly DAST._IAssignLhs theDefault = create_Ident(Dafny.Sequence<Dafny.Rune>.Empty);
    public static DAST._IAssignLhs Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IAssignLhs> _TYPE = new Dafny.TypeDescriptor<DAST._IAssignLhs>(DAST.AssignLhs.Default());
    public static Dafny.TypeDescriptor<DAST._IAssignLhs> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignLhs create_Ident(Dafny.ISequence<Dafny.Rune> ident) {
      return new AssignLhs_Ident(ident);
    }
    public static _IAssignLhs create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) {
      return new AssignLhs_Select(expr, field);
    }
    public static _IAssignLhs create_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) {
      return new AssignLhs_Index(expr, indices);
    }
    public bool is_Ident { get { return this is AssignLhs_Ident; } }
    public bool is_Select { get { return this is AssignLhs_Select; } }
    public bool is_Index { get { return this is AssignLhs_Index; } }
    public Dafny.ISequence<Dafny.Rune> dtor_ident {
      get {
        var d = this;
        return ((AssignLhs_Ident)d)._ident;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is AssignLhs_Select) { return ((AssignLhs_Select)d)._expr; }
        return ((AssignLhs_Index)d)._expr;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        return ((AssignLhs_Select)d)._field;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((AssignLhs_Index)d)._indices;
      }
    }
    public abstract _IAssignLhs DowncastClone();
  }
  public class AssignLhs_Ident : AssignLhs {
    public readonly Dafny.ISequence<Dafny.Rune> _ident;
    public AssignLhs_Ident(Dafny.ISequence<Dafny.Rune> ident) : base() {
      this._ident = ident;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Ident(_ident);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Ident;
      return oth != null && object.Equals(this._ident, oth._ident);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._ident));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Ident";
      s += "(";
      s += Dafny.Helpers.ToString(this._ident);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Select : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public AssignLhs_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field) : base() {
      this._expr = expr;
      this._field = field;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Select(_expr, _field);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class AssignLhs_Index : AssignLhs {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public AssignLhs_Index(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._indices = indices;
    }
    public override _IAssignLhs DowncastClone() {
      if (this is _IAssignLhs dt) { return dt; }
      return new AssignLhs_Index(_expr, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.AssignLhs_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.AssignLhs.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }

  public interface _ICollKind {
    bool is_Seq { get; }
    bool is_Array { get; }
    bool is_Map { get; }
    _ICollKind DowncastClone();
  }
  public abstract class CollKind : _ICollKind {
    public CollKind() {
    }
    private static readonly DAST._ICollKind theDefault = create_Seq();
    public static DAST._ICollKind Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ICollKind> _TYPE = new Dafny.TypeDescriptor<DAST._ICollKind>(DAST.CollKind.Default());
    public static Dafny.TypeDescriptor<DAST._ICollKind> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ICollKind create_Seq() {
      return new CollKind_Seq();
    }
    public static _ICollKind create_Array() {
      return new CollKind_Array();
    }
    public static _ICollKind create_Map() {
      return new CollKind_Map();
    }
    public bool is_Seq { get { return this is CollKind_Seq; } }
    public bool is_Array { get { return this is CollKind_Array; } }
    public bool is_Map { get { return this is CollKind_Map; } }
    public static System.Collections.Generic.IEnumerable<_ICollKind> AllSingletonConstructors {
      get {
        yield return CollKind.create_Seq();
        yield return CollKind.create_Array();
        yield return CollKind.create_Map();
      }
    }
    public abstract _ICollKind DowncastClone();
  }
  public class CollKind_Seq : CollKind {
    public CollKind_Seq() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Seq();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Seq;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Seq";
      return s;
    }
  }
  public class CollKind_Array : CollKind {
    public CollKind_Array() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Array();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Array;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Array";
      return s;
    }
  }
  public class CollKind_Map : CollKind {
    public CollKind_Map() : base() {
    }
    public override _ICollKind DowncastClone() {
      if (this is _ICollKind dt) { return dt; }
      return new CollKind_Map();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.CollKind_Map;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.CollKind.Map";
      return s;
    }
  }

  public interface _IBinOp {
    bool is_Eq { get; }
    bool is_Div { get; }
    bool is_EuclidianDiv { get; }
    bool is_Mod { get; }
    bool is_EuclidianMod { get; }
    bool is_Lt { get; }
    bool is_LtChar { get; }
    bool is_Plus { get; }
    bool is_Minus { get; }
    bool is_Times { get; }
    bool is_BitwiseAnd { get; }
    bool is_BitwiseOr { get; }
    bool is_BitwiseXor { get; }
    bool is_BitwiseShiftRight { get; }
    bool is_BitwiseShiftLeft { get; }
    bool is_And { get; }
    bool is_Or { get; }
    bool is_In { get; }
    bool is_SeqProperPrefix { get; }
    bool is_SeqPrefix { get; }
    bool is_SetMerge { get; }
    bool is_SetSubtraction { get; }
    bool is_SetIntersection { get; }
    bool is_Subset { get; }
    bool is_ProperSubset { get; }
    bool is_SetDisjoint { get; }
    bool is_MapMerge { get; }
    bool is_MapSubtraction { get; }
    bool is_MultisetMerge { get; }
    bool is_MultisetSubtraction { get; }
    bool is_MultisetIntersection { get; }
    bool is_Submultiset { get; }
    bool is_ProperSubmultiset { get; }
    bool is_MultisetDisjoint { get; }
    bool is_Concat { get; }
    bool is_Passthrough { get; }
    bool dtor_referential { get; }
    bool dtor_nullable { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 { get; }
    _IBinOp DowncastClone();
  }
  public abstract class BinOp : _IBinOp {
    public BinOp() {
    }
    private static readonly DAST._IBinOp theDefault = create_Eq(false, false);
    public static DAST._IBinOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IBinOp> _TYPE = new Dafny.TypeDescriptor<DAST._IBinOp>(DAST.BinOp.Default());
    public static Dafny.TypeDescriptor<DAST._IBinOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IBinOp create_Eq(bool referential, bool nullable) {
      return new BinOp_Eq(referential, nullable);
    }
    public static _IBinOp create_Div() {
      return new BinOp_Div();
    }
    public static _IBinOp create_EuclidianDiv() {
      return new BinOp_EuclidianDiv();
    }
    public static _IBinOp create_Mod() {
      return new BinOp_Mod();
    }
    public static _IBinOp create_EuclidianMod() {
      return new BinOp_EuclidianMod();
    }
    public static _IBinOp create_Lt() {
      return new BinOp_Lt();
    }
    public static _IBinOp create_LtChar() {
      return new BinOp_LtChar();
    }
    public static _IBinOp create_Plus() {
      return new BinOp_Plus();
    }
    public static _IBinOp create_Minus() {
      return new BinOp_Minus();
    }
    public static _IBinOp create_Times() {
      return new BinOp_Times();
    }
    public static _IBinOp create_BitwiseAnd() {
      return new BinOp_BitwiseAnd();
    }
    public static _IBinOp create_BitwiseOr() {
      return new BinOp_BitwiseOr();
    }
    public static _IBinOp create_BitwiseXor() {
      return new BinOp_BitwiseXor();
    }
    public static _IBinOp create_BitwiseShiftRight() {
      return new BinOp_BitwiseShiftRight();
    }
    public static _IBinOp create_BitwiseShiftLeft() {
      return new BinOp_BitwiseShiftLeft();
    }
    public static _IBinOp create_And() {
      return new BinOp_And();
    }
    public static _IBinOp create_Or() {
      return new BinOp_Or();
    }
    public static _IBinOp create_In() {
      return new BinOp_In();
    }
    public static _IBinOp create_SeqProperPrefix() {
      return new BinOp_SeqProperPrefix();
    }
    public static _IBinOp create_SeqPrefix() {
      return new BinOp_SeqPrefix();
    }
    public static _IBinOp create_SetMerge() {
      return new BinOp_SetMerge();
    }
    public static _IBinOp create_SetSubtraction() {
      return new BinOp_SetSubtraction();
    }
    public static _IBinOp create_SetIntersection() {
      return new BinOp_SetIntersection();
    }
    public static _IBinOp create_Subset() {
      return new BinOp_Subset();
    }
    public static _IBinOp create_ProperSubset() {
      return new BinOp_ProperSubset();
    }
    public static _IBinOp create_SetDisjoint() {
      return new BinOp_SetDisjoint();
    }
    public static _IBinOp create_MapMerge() {
      return new BinOp_MapMerge();
    }
    public static _IBinOp create_MapSubtraction() {
      return new BinOp_MapSubtraction();
    }
    public static _IBinOp create_MultisetMerge() {
      return new BinOp_MultisetMerge();
    }
    public static _IBinOp create_MultisetSubtraction() {
      return new BinOp_MultisetSubtraction();
    }
    public static _IBinOp create_MultisetIntersection() {
      return new BinOp_MultisetIntersection();
    }
    public static _IBinOp create_Submultiset() {
      return new BinOp_Submultiset();
    }
    public static _IBinOp create_ProperSubmultiset() {
      return new BinOp_ProperSubmultiset();
    }
    public static _IBinOp create_MultisetDisjoint() {
      return new BinOp_MultisetDisjoint();
    }
    public static _IBinOp create_Concat() {
      return new BinOp_Concat();
    }
    public static _IBinOp create_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) {
      return new BinOp_Passthrough(_a0);
    }
    public bool is_Eq { get { return this is BinOp_Eq; } }
    public bool is_Div { get { return this is BinOp_Div; } }
    public bool is_EuclidianDiv { get { return this is BinOp_EuclidianDiv; } }
    public bool is_Mod { get { return this is BinOp_Mod; } }
    public bool is_EuclidianMod { get { return this is BinOp_EuclidianMod; } }
    public bool is_Lt { get { return this is BinOp_Lt; } }
    public bool is_LtChar { get { return this is BinOp_LtChar; } }
    public bool is_Plus { get { return this is BinOp_Plus; } }
    public bool is_Minus { get { return this is BinOp_Minus; } }
    public bool is_Times { get { return this is BinOp_Times; } }
    public bool is_BitwiseAnd { get { return this is BinOp_BitwiseAnd; } }
    public bool is_BitwiseOr { get { return this is BinOp_BitwiseOr; } }
    public bool is_BitwiseXor { get { return this is BinOp_BitwiseXor; } }
    public bool is_BitwiseShiftRight { get { return this is BinOp_BitwiseShiftRight; } }
    public bool is_BitwiseShiftLeft { get { return this is BinOp_BitwiseShiftLeft; } }
    public bool is_And { get { return this is BinOp_And; } }
    public bool is_Or { get { return this is BinOp_Or; } }
    public bool is_In { get { return this is BinOp_In; } }
    public bool is_SeqProperPrefix { get { return this is BinOp_SeqProperPrefix; } }
    public bool is_SeqPrefix { get { return this is BinOp_SeqPrefix; } }
    public bool is_SetMerge { get { return this is BinOp_SetMerge; } }
    public bool is_SetSubtraction { get { return this is BinOp_SetSubtraction; } }
    public bool is_SetIntersection { get { return this is BinOp_SetIntersection; } }
    public bool is_Subset { get { return this is BinOp_Subset; } }
    public bool is_ProperSubset { get { return this is BinOp_ProperSubset; } }
    public bool is_SetDisjoint { get { return this is BinOp_SetDisjoint; } }
    public bool is_MapMerge { get { return this is BinOp_MapMerge; } }
    public bool is_MapSubtraction { get { return this is BinOp_MapSubtraction; } }
    public bool is_MultisetMerge { get { return this is BinOp_MultisetMerge; } }
    public bool is_MultisetSubtraction { get { return this is BinOp_MultisetSubtraction; } }
    public bool is_MultisetIntersection { get { return this is BinOp_MultisetIntersection; } }
    public bool is_Submultiset { get { return this is BinOp_Submultiset; } }
    public bool is_ProperSubmultiset { get { return this is BinOp_ProperSubmultiset; } }
    public bool is_MultisetDisjoint { get { return this is BinOp_MultisetDisjoint; } }
    public bool is_Concat { get { return this is BinOp_Concat; } }
    public bool is_Passthrough { get { return this is BinOp_Passthrough; } }
    public bool dtor_referential {
      get {
        var d = this;
        return ((BinOp_Eq)d)._referential;
      }
    }
    public bool dtor_nullable {
      get {
        var d = this;
        return ((BinOp_Eq)d)._nullable;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Passthrough_a0 {
      get {
        var d = this;
        return ((BinOp_Passthrough)d)._a0;
      }
    }
    public abstract _IBinOp DowncastClone();
  }
  public class BinOp_Eq : BinOp {
    public readonly bool _referential;
    public readonly bool _nullable;
    public BinOp_Eq(bool referential, bool nullable) : base() {
      this._referential = referential;
      this._nullable = nullable;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Eq(_referential, _nullable);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Eq;
      return oth != null && this._referential == oth._referential && this._nullable == oth._nullable;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._referential));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._nullable));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Eq";
      s += "(";
      s += Dafny.Helpers.ToString(this._referential);
      s += ", ";
      s += Dafny.Helpers.ToString(this._nullable);
      s += ")";
      return s;
    }
  }
  public class BinOp_Div : BinOp {
    public BinOp_Div() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Div();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Div;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Div";
      return s;
    }
  }
  public class BinOp_EuclidianDiv : BinOp {
    public BinOp_EuclidianDiv() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianDiv();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianDiv;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianDiv";
      return s;
    }
  }
  public class BinOp_Mod : BinOp {
    public BinOp_Mod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Mod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Mod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Mod";
      return s;
    }
  }
  public class BinOp_EuclidianMod : BinOp {
    public BinOp_EuclidianMod() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_EuclidianMod();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_EuclidianMod;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.EuclidianMod";
      return s;
    }
  }
  public class BinOp_Lt : BinOp {
    public BinOp_Lt() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Lt();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Lt;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Lt";
      return s;
    }
  }
  public class BinOp_LtChar : BinOp {
    public BinOp_LtChar() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_LtChar();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_LtChar;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.LtChar";
      return s;
    }
  }
  public class BinOp_Plus : BinOp {
    public BinOp_Plus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Plus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Plus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Plus";
      return s;
    }
  }
  public class BinOp_Minus : BinOp {
    public BinOp_Minus() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Minus();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Minus;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Minus";
      return s;
    }
  }
  public class BinOp_Times : BinOp {
    public BinOp_Times() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Times();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Times;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Times";
      return s;
    }
  }
  public class BinOp_BitwiseAnd : BinOp {
    public BinOp_BitwiseAnd() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseAnd();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseAnd;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseAnd";
      return s;
    }
  }
  public class BinOp_BitwiseOr : BinOp {
    public BinOp_BitwiseOr() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseOr();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseOr;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseOr";
      return s;
    }
  }
  public class BinOp_BitwiseXor : BinOp {
    public BinOp_BitwiseXor() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseXor();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseXor;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseXor";
      return s;
    }
  }
  public class BinOp_BitwiseShiftRight : BinOp {
    public BinOp_BitwiseShiftRight() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftRight();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftRight";
      return s;
    }
  }
  public class BinOp_BitwiseShiftLeft : BinOp {
    public BinOp_BitwiseShiftLeft() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_BitwiseShiftLeft();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_BitwiseShiftLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.BitwiseShiftLeft";
      return s;
    }
  }
  public class BinOp_And : BinOp {
    public BinOp_And() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_And();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_And;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.And";
      return s;
    }
  }
  public class BinOp_Or : BinOp {
    public BinOp_Or() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Or();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Or;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Or";
      return s;
    }
  }
  public class BinOp_In : BinOp {
    public BinOp_In() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_In();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_In;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.In";
      return s;
    }
  }
  public class BinOp_SeqProperPrefix : BinOp {
    public BinOp_SeqProperPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqProperPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqProperPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqProperPrefix";
      return s;
    }
  }
  public class BinOp_SeqPrefix : BinOp {
    public BinOp_SeqPrefix() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SeqPrefix();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SeqPrefix;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SeqPrefix";
      return s;
    }
  }
  public class BinOp_SetMerge : BinOp {
    public BinOp_SetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetMerge";
      return s;
    }
  }
  public class BinOp_SetSubtraction : BinOp {
    public BinOp_SetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetSubtraction";
      return s;
    }
  }
  public class BinOp_SetIntersection : BinOp {
    public BinOp_SetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetIntersection";
      return s;
    }
  }
  public class BinOp_Subset : BinOp {
    public BinOp_Subset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Subset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Subset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Subset";
      return s;
    }
  }
  public class BinOp_ProperSubset : BinOp {
    public BinOp_ProperSubset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubset";
      return s;
    }
  }
  public class BinOp_SetDisjoint : BinOp {
    public BinOp_SetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_SetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_SetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.SetDisjoint";
      return s;
    }
  }
  public class BinOp_MapMerge : BinOp {
    public BinOp_MapMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapMerge";
      return s;
    }
  }
  public class BinOp_MapSubtraction : BinOp {
    public BinOp_MapSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MapSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MapSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MapSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetMerge : BinOp {
    public BinOp_MultisetMerge() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetMerge();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetMerge;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetMerge";
      return s;
    }
  }
  public class BinOp_MultisetSubtraction : BinOp {
    public BinOp_MultisetSubtraction() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetSubtraction();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetSubtraction;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetSubtraction";
      return s;
    }
  }
  public class BinOp_MultisetIntersection : BinOp {
    public BinOp_MultisetIntersection() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetIntersection();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetIntersection;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetIntersection";
      return s;
    }
  }
  public class BinOp_Submultiset : BinOp {
    public BinOp_Submultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Submultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Submultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Submultiset";
      return s;
    }
  }
  public class BinOp_ProperSubmultiset : BinOp {
    public BinOp_ProperSubmultiset() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_ProperSubmultiset();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_ProperSubmultiset;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.ProperSubmultiset";
      return s;
    }
  }
  public class BinOp_MultisetDisjoint : BinOp {
    public BinOp_MultisetDisjoint() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_MultisetDisjoint();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_MultisetDisjoint;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.MultisetDisjoint";
      return s;
    }
  }
  public class BinOp_Concat : BinOp {
    public BinOp_Concat() : base() {
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Concat();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Concat;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Concat";
      return s;
    }
  }
  public class BinOp_Passthrough : BinOp {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public BinOp_Passthrough(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IBinOp DowncastClone() {
      if (this is _IBinOp dt) { return dt; }
      return new BinOp_Passthrough(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.BinOp_Passthrough;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.BinOp.Passthrough";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IExpression {
    bool is_Literal { get; }
    bool is_Ident { get; }
    bool is_Companion { get; }
    bool is_Tuple { get; }
    bool is_New { get; }
    bool is_NewArray { get; }
    bool is_DatatypeValue { get; }
    bool is_Convert { get; }
    bool is_SeqConstruct { get; }
    bool is_SeqValue { get; }
    bool is_SetValue { get; }
    bool is_MultisetValue { get; }
    bool is_MapValue { get; }
    bool is_MapBuilder { get; }
    bool is_SeqUpdate { get; }
    bool is_MapUpdate { get; }
    bool is_SetBuilder { get; }
    bool is_ToMultiset { get; }
    bool is_This { get; }
    bool is_Ite { get; }
    bool is_UnOp { get; }
    bool is_BinOp { get; }
    bool is_ArrayLen { get; }
    bool is_MapKeys { get; }
    bool is_MapValues { get; }
    bool is_Select { get; }
    bool is_SelectFn { get; }
    bool is_Index { get; }
    bool is_IndexRange { get; }
    bool is_TupleSelect { get; }
    bool is_Call { get; }
    bool is_Lambda { get; }
    bool is_BetaRedex { get; }
    bool is_IIFE { get; }
    bool is_Apply { get; }
    bool is_TypeTest { get; }
    bool is_InitializationValue { get; }
    bool is_BoolBoundedPool { get; }
    bool is_SetBoundedPool { get; }
    bool is_SeqBoundedPool { get; }
    bool is_IntRange { get; }
    DAST._ILiteral dtor_Literal_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 { get; }
    Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path { get; }
    Dafny.ISequence<DAST._IType> dtor_typeArgs { get; }
    Dafny.ISequence<DAST._IExpression> dtor_args { get; }
    Dafny.ISequence<DAST._IExpression> dtor_dims { get; }
    DAST._IType dtor_typ { get; }
    DAST._IDatatypeType dtor_datatypeType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_variant { get; }
    bool dtor_isCo { get; }
    Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents { get; }
    DAST._IExpression dtor_value { get; }
    DAST._IType dtor_from { get; }
    DAST._IExpression dtor_length { get; }
    DAST._IExpression dtor_elem { get; }
    Dafny.ISequence<DAST._IExpression> dtor_elements { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems { get; }
    DAST._IType dtor_keyType { get; }
    DAST._IType dtor_valueType { get; }
    DAST._IExpression dtor_expr { get; }
    DAST._IExpression dtor_indexExpr { get; }
    DAST._IType dtor_elemType { get; }
    DAST._IExpression dtor_ToMultiset_a0 { get; }
    DAST._IExpression dtor_cond { get; }
    DAST._IExpression dtor_thn { get; }
    DAST._IExpression dtor_els { get; }
    DAST._IUnaryOp dtor_unOp { get; }
    DAST.Format._IUnOpFormat dtor_format1 { get; }
    DAST._IBinOp dtor_op { get; }
    DAST._IExpression dtor_left { get; }
    DAST._IExpression dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    BigInteger dtor_dim { get; }
    Dafny.ISequence<Dafny.Rune> dtor_field { get; }
    bool dtor_isConstant { get; }
    bool dtor_onDatatype { get; }
    bool dtor_isStatic { get; }
    BigInteger dtor_arity { get; }
    DAST._ICollKind dtor_collKind { get; }
    Dafny.ISequence<DAST._IExpression> dtor_indices { get; }
    bool dtor_isArray { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_low { get; }
    Std.Wrappers._IOption<DAST._IExpression> dtor_high { get; }
    BigInteger dtor_index { get; }
    DAST._IExpression dtor_on { get; }
    DAST._ICallName dtor_callName { get; }
    Dafny.ISequence<DAST._IFormal> dtor_params { get; }
    DAST._IType dtor_retType { get; }
    Dafny.ISequence<DAST._IStatement> dtor_body { get; }
    Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    DAST._IExpression dtor_iifeBody { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType { get; }
    DAST._IExpression dtor_of { get; }
    bool dtor_includeDuplicates { get; }
    DAST._IExpression dtor_lo { get; }
    DAST._IExpression dtor_hi { get; }
    _IExpression DowncastClone();
  }
  public abstract class Expression : _IExpression {
    public Expression() {
    }
    private static readonly DAST._IExpression theDefault = create_Literal(DAST.Literal.Default());
    public static DAST._IExpression Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IExpression> _TYPE = new Dafny.TypeDescriptor<DAST._IExpression>(DAST.Expression.Default());
    public static Dafny.TypeDescriptor<DAST._IExpression> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpression create_Literal(DAST._ILiteral _a0) {
      return new Expression_Literal(_a0);
    }
    public static _IExpression create_Ident(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Expression_Ident(_a0);
    }
    public static _IExpression create_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) {
      return new Expression_Companion(_a0);
    }
    public static _IExpression create_Tuple(Dafny.ISequence<DAST._IExpression> _a0) {
      return new Expression_Tuple(_a0);
    }
    public static _IExpression create_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_New(path, typeArgs, args);
    }
    public static _IExpression create_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) {
      return new Expression_NewArray(dims, typ);
    }
    public static _IExpression create_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) {
      return new Expression_DatatypeValue(datatypeType, typeArgs, variant, isCo, contents);
    }
    public static _IExpression create_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) {
      return new Expression_Convert(@value, @from, typ);
    }
    public static _IExpression create_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) {
      return new Expression_SeqConstruct(length, elem);
    }
    public static _IExpression create_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) {
      return new Expression_SeqValue(elements, typ);
    }
    public static _IExpression create_SetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_SetValue(elements);
    }
    public static _IExpression create_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) {
      return new Expression_MultisetValue(elements);
    }
    public static _IExpression create_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) {
      return new Expression_MapValue(mapElems);
    }
    public static _IExpression create_MapBuilder(DAST._IType keyType, DAST._IType valueType) {
      return new Expression_MapBuilder(keyType, valueType);
    }
    public static _IExpression create_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_SeqUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) {
      return new Expression_MapUpdate(expr, indexExpr, @value);
    }
    public static _IExpression create_SetBuilder(DAST._IType elemType) {
      return new Expression_SetBuilder(elemType);
    }
    public static _IExpression create_ToMultiset(DAST._IExpression _a0) {
      return new Expression_ToMultiset(_a0);
    }
    public static _IExpression create_This() {
      return new Expression_This();
    }
    public static _IExpression create_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) {
      return new Expression_Ite(cond, thn, els);
    }
    public static _IExpression create_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) {
      return new Expression_UnOp(unOp, expr, format1);
    }
    public static _IExpression create_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) {
      return new Expression_BinOp(op, left, right, format2);
    }
    public static _IExpression create_ArrayLen(DAST._IExpression expr, BigInteger dim) {
      return new Expression_ArrayLen(expr, dim);
    }
    public static _IExpression create_MapKeys(DAST._IExpression expr) {
      return new Expression_MapKeys(expr);
    }
    public static _IExpression create_MapValues(DAST._IExpression expr) {
      return new Expression_MapValues(expr);
    }
    public static _IExpression create_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) {
      return new Expression_Select(expr, field, isConstant, onDatatype);
    }
    public static _IExpression create_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) {
      return new Expression_SelectFn(expr, field, onDatatype, isStatic, arity);
    }
    public static _IExpression create_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) {
      return new Expression_Index(expr, collKind, indices);
    }
    public static _IExpression create_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) {
      return new Expression_IndexRange(expr, isArray, low, high);
    }
    public static _IExpression create_TupleSelect(DAST._IExpression expr, BigInteger index) {
      return new Expression_TupleSelect(expr, index);
    }
    public static _IExpression create_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Call(@on, callName, typeArgs, args);
    }
    public static _IExpression create_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) {
      return new Expression_Lambda(@params, retType, body);
    }
    public static _IExpression create_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) {
      return new Expression_BetaRedex(values, retType, expr);
    }
    public static _IExpression create_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) {
      return new Expression_IIFE(name, typ, @value, iifeBody);
    }
    public static _IExpression create_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) {
      return new Expression_Apply(expr, args);
    }
    public static _IExpression create_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) {
      return new Expression_TypeTest(@on, dType, variant);
    }
    public static _IExpression create_InitializationValue(DAST._IType typ) {
      return new Expression_InitializationValue(typ);
    }
    public static _IExpression create_BoolBoundedPool() {
      return new Expression_BoolBoundedPool();
    }
    public static _IExpression create_SetBoundedPool(DAST._IExpression of) {
      return new Expression_SetBoundedPool(of);
    }
    public static _IExpression create_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) {
      return new Expression_SeqBoundedPool(of, includeDuplicates);
    }
    public static _IExpression create_IntRange(DAST._IExpression lo, DAST._IExpression hi) {
      return new Expression_IntRange(lo, hi);
    }
    public bool is_Literal { get { return this is Expression_Literal; } }
    public bool is_Ident { get { return this is Expression_Ident; } }
    public bool is_Companion { get { return this is Expression_Companion; } }
    public bool is_Tuple { get { return this is Expression_Tuple; } }
    public bool is_New { get { return this is Expression_New; } }
    public bool is_NewArray { get { return this is Expression_NewArray; } }
    public bool is_DatatypeValue { get { return this is Expression_DatatypeValue; } }
    public bool is_Convert { get { return this is Expression_Convert; } }
    public bool is_SeqConstruct { get { return this is Expression_SeqConstruct; } }
    public bool is_SeqValue { get { return this is Expression_SeqValue; } }
    public bool is_SetValue { get { return this is Expression_SetValue; } }
    public bool is_MultisetValue { get { return this is Expression_MultisetValue; } }
    public bool is_MapValue { get { return this is Expression_MapValue; } }
    public bool is_MapBuilder { get { return this is Expression_MapBuilder; } }
    public bool is_SeqUpdate { get { return this is Expression_SeqUpdate; } }
    public bool is_MapUpdate { get { return this is Expression_MapUpdate; } }
    public bool is_SetBuilder { get { return this is Expression_SetBuilder; } }
    public bool is_ToMultiset { get { return this is Expression_ToMultiset; } }
    public bool is_This { get { return this is Expression_This; } }
    public bool is_Ite { get { return this is Expression_Ite; } }
    public bool is_UnOp { get { return this is Expression_UnOp; } }
    public bool is_BinOp { get { return this is Expression_BinOp; } }
    public bool is_ArrayLen { get { return this is Expression_ArrayLen; } }
    public bool is_MapKeys { get { return this is Expression_MapKeys; } }
    public bool is_MapValues { get { return this is Expression_MapValues; } }
    public bool is_Select { get { return this is Expression_Select; } }
    public bool is_SelectFn { get { return this is Expression_SelectFn; } }
    public bool is_Index { get { return this is Expression_Index; } }
    public bool is_IndexRange { get { return this is Expression_IndexRange; } }
    public bool is_TupleSelect { get { return this is Expression_TupleSelect; } }
    public bool is_Call { get { return this is Expression_Call; } }
    public bool is_Lambda { get { return this is Expression_Lambda; } }
    public bool is_BetaRedex { get { return this is Expression_BetaRedex; } }
    public bool is_IIFE { get { return this is Expression_IIFE; } }
    public bool is_Apply { get { return this is Expression_Apply; } }
    public bool is_TypeTest { get { return this is Expression_TypeTest; } }
    public bool is_InitializationValue { get { return this is Expression_InitializationValue; } }
    public bool is_BoolBoundedPool { get { return this is Expression_BoolBoundedPool; } }
    public bool is_SetBoundedPool { get { return this is Expression_SetBoundedPool; } }
    public bool is_SeqBoundedPool { get { return this is Expression_SeqBoundedPool; } }
    public bool is_IntRange { get { return this is Expression_IntRange; } }
    public DAST._ILiteral dtor_Literal_a0 {
      get {
        var d = this;
        return ((Expression_Literal)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_Ident_a0 {
      get {
        var d = this;
        return ((Expression_Ident)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_Companion_a0 {
      get {
        var d = this;
        return ((Expression_Companion)d)._a0;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_Tuple_a0 {
      get {
        var d = this;
        return ((Expression_Tuple)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_path {
      get {
        var d = this;
        return ((Expression_New)d)._path;
      }
    }
    public Dafny.ISequence<DAST._IType> dtor_typeArgs {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._typeArgs; }
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._typeArgs; }
        return ((Expression_Call)d)._typeArgs;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_args {
      get {
        var d = this;
        if (d is Expression_New) { return ((Expression_New)d)._args; }
        if (d is Expression_Call) { return ((Expression_Call)d)._args; }
        return ((Expression_Apply)d)._args;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_dims {
      get {
        var d = this;
        return ((Expression_NewArray)d)._dims;
      }
    }
    public DAST._IType dtor_typ {
      get {
        var d = this;
        if (d is Expression_NewArray) { return ((Expression_NewArray)d)._typ; }
        if (d is Expression_Convert) { return ((Expression_Convert)d)._typ; }
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._typ; }
        if (d is Expression_IIFE) { return ((Expression_IIFE)d)._typ; }
        return ((Expression_InitializationValue)d)._typ;
      }
    }
    public DAST._IDatatypeType dtor_datatypeType {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._datatypeType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_variant {
      get {
        var d = this;
        if (d is Expression_DatatypeValue) { return ((Expression_DatatypeValue)d)._variant; }
        return ((Expression_TypeTest)d)._variant;
      }
    }
    public bool dtor_isCo {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._isCo;
      }
    }
    public Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> dtor_contents {
      get {
        var d = this;
        return ((Expression_DatatypeValue)d)._contents;
      }
    }
    public DAST._IExpression dtor_value {
      get {
        var d = this;
        if (d is Expression_Convert) { return ((Expression_Convert)d)._value; }
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._value; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._value; }
        return ((Expression_IIFE)d)._value;
      }
    }
    public DAST._IType dtor_from {
      get {
        var d = this;
        return ((Expression_Convert)d)._from;
      }
    }
    public DAST._IExpression dtor_length {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._length;
      }
    }
    public DAST._IExpression dtor_elem {
      get {
        var d = this;
        return ((Expression_SeqConstruct)d)._elem;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_elements {
      get {
        var d = this;
        if (d is Expression_SeqValue) { return ((Expression_SeqValue)d)._elements; }
        if (d is Expression_SetValue) { return ((Expression_SetValue)d)._elements; }
        return ((Expression_MultisetValue)d)._elements;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> dtor_mapElems {
      get {
        var d = this;
        return ((Expression_MapValue)d)._mapElems;
      }
    }
    public DAST._IType dtor_keyType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._keyType;
      }
    }
    public DAST._IType dtor_valueType {
      get {
        var d = this;
        return ((Expression_MapBuilder)d)._valueType;
      }
    }
    public DAST._IExpression dtor_expr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._expr; }
        if (d is Expression_MapUpdate) { return ((Expression_MapUpdate)d)._expr; }
        if (d is Expression_UnOp) { return ((Expression_UnOp)d)._expr; }
        if (d is Expression_ArrayLen) { return ((Expression_ArrayLen)d)._expr; }
        if (d is Expression_MapKeys) { return ((Expression_MapKeys)d)._expr; }
        if (d is Expression_MapValues) { return ((Expression_MapValues)d)._expr; }
        if (d is Expression_Select) { return ((Expression_Select)d)._expr; }
        if (d is Expression_SelectFn) { return ((Expression_SelectFn)d)._expr; }
        if (d is Expression_Index) { return ((Expression_Index)d)._expr; }
        if (d is Expression_IndexRange) { return ((Expression_IndexRange)d)._expr; }
        if (d is Expression_TupleSelect) { return ((Expression_TupleSelect)d)._expr; }
        if (d is Expression_BetaRedex) { return ((Expression_BetaRedex)d)._expr; }
        return ((Expression_Apply)d)._expr;
      }
    }
    public DAST._IExpression dtor_indexExpr {
      get {
        var d = this;
        if (d is Expression_SeqUpdate) { return ((Expression_SeqUpdate)d)._indexExpr; }
        return ((Expression_MapUpdate)d)._indexExpr;
      }
    }
    public DAST._IType dtor_elemType {
      get {
        var d = this;
        return ((Expression_SetBuilder)d)._elemType;
      }
    }
    public DAST._IExpression dtor_ToMultiset_a0 {
      get {
        var d = this;
        return ((Expression_ToMultiset)d)._a0;
      }
    }
    public DAST._IExpression dtor_cond {
      get {
        var d = this;
        return ((Expression_Ite)d)._cond;
      }
    }
    public DAST._IExpression dtor_thn {
      get {
        var d = this;
        return ((Expression_Ite)d)._thn;
      }
    }
    public DAST._IExpression dtor_els {
      get {
        var d = this;
        return ((Expression_Ite)d)._els;
      }
    }
    public DAST._IUnaryOp dtor_unOp {
      get {
        var d = this;
        return ((Expression_UnOp)d)._unOp;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format1 {
      get {
        var d = this;
        return ((Expression_UnOp)d)._format1;
      }
    }
    public DAST._IBinOp dtor_op {
      get {
        var d = this;
        return ((Expression_BinOp)d)._op;
      }
    }
    public DAST._IExpression dtor_left {
      get {
        var d = this;
        return ((Expression_BinOp)d)._left;
      }
    }
    public DAST._IExpression dtor_right {
      get {
        var d = this;
        return ((Expression_BinOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expression_BinOp)d)._format2;
      }
    }
    public BigInteger dtor_dim {
      get {
        var d = this;
        return ((Expression_ArrayLen)d)._dim;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_field {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._field; }
        return ((Expression_SelectFn)d)._field;
      }
    }
    public bool dtor_isConstant {
      get {
        var d = this;
        return ((Expression_Select)d)._isConstant;
      }
    }
    public bool dtor_onDatatype {
      get {
        var d = this;
        if (d is Expression_Select) { return ((Expression_Select)d)._onDatatype; }
        return ((Expression_SelectFn)d)._onDatatype;
      }
    }
    public bool dtor_isStatic {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._isStatic;
      }
    }
    public BigInteger dtor_arity {
      get {
        var d = this;
        return ((Expression_SelectFn)d)._arity;
      }
    }
    public DAST._ICollKind dtor_collKind {
      get {
        var d = this;
        return ((Expression_Index)d)._collKind;
      }
    }
    public Dafny.ISequence<DAST._IExpression> dtor_indices {
      get {
        var d = this;
        return ((Expression_Index)d)._indices;
      }
    }
    public bool dtor_isArray {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._isArray;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_low {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._low;
      }
    }
    public Std.Wrappers._IOption<DAST._IExpression> dtor_high {
      get {
        var d = this;
        return ((Expression_IndexRange)d)._high;
      }
    }
    public BigInteger dtor_index {
      get {
        var d = this;
        return ((Expression_TupleSelect)d)._index;
      }
    }
    public DAST._IExpression dtor_on {
      get {
        var d = this;
        if (d is Expression_Call) { return ((Expression_Call)d)._on; }
        return ((Expression_TypeTest)d)._on;
      }
    }
    public DAST._ICallName dtor_callName {
      get {
        var d = this;
        return ((Expression_Call)d)._callName;
      }
    }
    public Dafny.ISequence<DAST._IFormal> dtor_params {
      get {
        var d = this;
        return ((Expression_Lambda)d)._params;
      }
    }
    public DAST._IType dtor_retType {
      get {
        var d = this;
        if (d is Expression_Lambda) { return ((Expression_Lambda)d)._retType; }
        return ((Expression_BetaRedex)d)._retType;
      }
    }
    public Dafny.ISequence<DAST._IStatement> dtor_body {
      get {
        var d = this;
        return ((Expression_Lambda)d)._body;
      }
    }
    public Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> dtor_values {
      get {
        var d = this;
        return ((Expression_BetaRedex)d)._values;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        return ((Expression_IIFE)d)._name;
      }
    }
    public DAST._IExpression dtor_iifeBody {
      get {
        var d = this;
        return ((Expression_IIFE)d)._iifeBody;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_dType {
      get {
        var d = this;
        return ((Expression_TypeTest)d)._dType;
      }
    }
    public DAST._IExpression dtor_of {
      get {
        var d = this;
        if (d is Expression_SetBoundedPool) { return ((Expression_SetBoundedPool)d)._of; }
        return ((Expression_SeqBoundedPool)d)._of;
      }
    }
    public bool dtor_includeDuplicates {
      get {
        var d = this;
        return ((Expression_SeqBoundedPool)d)._includeDuplicates;
      }
    }
    public DAST._IExpression dtor_lo {
      get {
        var d = this;
        return ((Expression_IntRange)d)._lo;
      }
    }
    public DAST._IExpression dtor_hi {
      get {
        var d = this;
        return ((Expression_IntRange)d)._hi;
      }
    }
    public abstract _IExpression DowncastClone();
  }
  public class Expression_Literal : Expression {
    public readonly DAST._ILiteral _a0;
    public Expression_Literal(DAST._ILiteral _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Literal(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Literal;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Literal";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Ident : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Expression_Ident(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ident(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ident;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ident";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_Companion : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0;
    public Expression_Companion(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Companion(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Companion;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Companion";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_Tuple : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _a0;
    public Expression_Tuple(Dafny.ISequence<DAST._IExpression> _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Tuple(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Tuple;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_New : Expression {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _path;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_New(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._path = path;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_New(_path, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_New;
      return oth != null && object.Equals(this._path, oth._path) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._path));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.New";
      s += "(";
      s += Dafny.Helpers.ToString(this._path);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_NewArray : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _dims;
    public readonly DAST._IType _typ;
    public Expression_NewArray(Dafny.ISequence<DAST._IExpression> dims, DAST._IType typ) : base() {
      this._dims = dims;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_NewArray(_dims, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_NewArray;
      return oth != null && object.Equals(this._dims, oth._dims) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dims));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.NewArray";
      s += "(";
      s += Dafny.Helpers.ToString(this._dims);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_DatatypeValue : Expression {
    public readonly DAST._IDatatypeType _datatypeType;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public readonly bool _isCo;
    public readonly Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _contents;
    public Expression_DatatypeValue(DAST._IDatatypeType datatypeType, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<Dafny.Rune> variant, bool isCo, Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> contents) : base() {
      this._datatypeType = datatypeType;
      this._typeArgs = typeArgs;
      this._variant = variant;
      this._isCo = isCo;
      this._contents = contents;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_DatatypeValue(_datatypeType, _typeArgs, _variant, _isCo, _contents);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_DatatypeValue;
      return oth != null && object.Equals(this._datatypeType, oth._datatypeType) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._variant, oth._variant) && this._isCo == oth._isCo && object.Equals(this._contents, oth._contents);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._datatypeType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isCo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._contents));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.DatatypeValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._datatypeType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isCo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._contents);
      s += ")";
      return s;
    }
  }
  public class Expression_Convert : Expression {
    public readonly DAST._IExpression _value;
    public readonly DAST._IType _from;
    public readonly DAST._IType _typ;
    public Expression_Convert(DAST._IExpression @value, DAST._IType @from, DAST._IType typ) : base() {
      this._value = @value;
      this._from = @from;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Convert(_value, _from, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Convert;
      return oth != null && object.Equals(this._value, oth._value) && object.Equals(this._from, oth._from) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._from));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Convert";
      s += "(";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._from);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqConstruct : Expression {
    public readonly DAST._IExpression _length;
    public readonly DAST._IExpression _elem;
    public Expression_SeqConstruct(DAST._IExpression length, DAST._IExpression elem) : base() {
      this._length = length;
      this._elem = elem;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqConstruct(_length, _elem);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqConstruct;
      return oth != null && object.Equals(this._length, oth._length) && object.Equals(this._elem, oth._elem);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._length));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elem));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqConstruct";
      s += "(";
      s += Dafny.Helpers.ToString(this._length);
      s += ", ";
      s += Dafny.Helpers.ToString(this._elem);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public readonly DAST._IType _typ;
    public Expression_SeqValue(Dafny.ISequence<DAST._IExpression> elements, DAST._IType typ) : base() {
      this._elements = elements;
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqValue(_elements, _typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqValue;
      return oth != null && object.Equals(this._elements, oth._elements) && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_SetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_SetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MultisetValue : Expression {
    public readonly Dafny.ISequence<DAST._IExpression> _elements;
    public Expression_MultisetValue(Dafny.ISequence<DAST._IExpression> elements) : base() {
      this._elements = elements;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MultisetValue(_elements);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MultisetValue;
      return oth != null && object.Equals(this._elements, oth._elements);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elements));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MultisetValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._elements);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValue : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _mapElems;
    public Expression_MapValue(Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> mapElems) : base() {
      this._mapElems = mapElems;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValue(_mapElems);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValue;
      return oth != null && object.Equals(this._mapElems, oth._mapElems);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mapElems));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._mapElems);
      s += ")";
      return s;
    }
  }
  public class Expression_MapBuilder : Expression {
    public readonly DAST._IType _keyType;
    public readonly DAST._IType _valueType;
    public Expression_MapBuilder(DAST._IType keyType, DAST._IType valueType) : base() {
      this._keyType = keyType;
      this._valueType = valueType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapBuilder(_keyType, _valueType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapBuilder;
      return oth != null && object.Equals(this._keyType, oth._keyType) && object.Equals(this._valueType, oth._valueType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._keyType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._valueType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._keyType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._valueType);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_SeqUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_MapUpdate : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._IExpression _indexExpr;
    public readonly DAST._IExpression _value;
    public Expression_MapUpdate(DAST._IExpression expr, DAST._IExpression indexExpr, DAST._IExpression @value) : base() {
      this._expr = expr;
      this._indexExpr = indexExpr;
      this._value = @value;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapUpdate(_expr, _indexExpr, _value);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapUpdate;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._indexExpr, oth._indexExpr) && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indexExpr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapUpdate";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indexExpr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ")";
      return s;
    }
  }
  public class Expression_SetBuilder : Expression {
    public readonly DAST._IType _elemType;
    public Expression_SetBuilder(DAST._IType elemType) : base() {
      this._elemType = elemType;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBuilder(_elemType);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBuilder;
      return oth != null && object.Equals(this._elemType, oth._elemType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._elemType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBuilder";
      s += "(";
      s += Dafny.Helpers.ToString(this._elemType);
      s += ")";
      return s;
    }
  }
  public class Expression_ToMultiset : Expression {
    public readonly DAST._IExpression _a0;
    public Expression_ToMultiset(DAST._IExpression _a0) : base() {
      this._a0 = _a0;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ToMultiset(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ToMultiset;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ToMultiset";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Expression_This : Expression {
    public Expression_This() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_This();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_This;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.This";
      return s;
    }
  }
  public class Expression_Ite : Expression {
    public readonly DAST._IExpression _cond;
    public readonly DAST._IExpression _thn;
    public readonly DAST._IExpression _els;
    public Expression_Ite(DAST._IExpression cond, DAST._IExpression thn, DAST._IExpression els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Ite(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Ite;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Ite";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expression_UnOp : Expression {
    public readonly DAST._IUnaryOp _unOp;
    public readonly DAST._IExpression _expr;
    public readonly DAST.Format._IUnOpFormat _format1;
    public Expression_UnOp(DAST._IUnaryOp unOp, DAST._IExpression expr, DAST.Format._IUnOpFormat format1) : base() {
      this._unOp = unOp;
      this._expr = expr;
      this._format1 = format1;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_UnOp(_unOp, _expr, _format1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_UnOp;
      return oth != null && object.Equals(this._unOp, oth._unOp) && object.Equals(this._expr, oth._expr) && object.Equals(this._format1, oth._format1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._unOp));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.UnOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._unOp);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format1);
      s += ")";
      return s;
    }
  }
  public class Expression_BinOp : Expression {
    public readonly DAST._IBinOp _op;
    public readonly DAST._IExpression _left;
    public readonly DAST._IExpression _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expression_BinOp(DAST._IBinOp op, DAST._IExpression left, DAST._IExpression right, DAST.Format._IBinOpFormat format2) : base() {
      this._op = op;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BinOp(_op, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BinOp;
      return oth != null && object.Equals(this._op, oth._op) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BinOp";
      s += "(";
      s += Dafny.Helpers.ToString(this._op);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expression_ArrayLen : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _dim;
    public Expression_ArrayLen(DAST._IExpression expr, BigInteger dim) : base() {
      this._expr = expr;
      this._dim = dim;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_ArrayLen(_expr, _dim);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_ArrayLen;
      return oth != null && object.Equals(this._expr, oth._expr) && this._dim == oth._dim;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dim));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.ArrayLen";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dim);
      s += ")";
      return s;
    }
  }
  public class Expression_MapKeys : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapKeys(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapKeys(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapKeys;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapKeys";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_MapValues : Expression {
    public readonly DAST._IExpression _expr;
    public Expression_MapValues(DAST._IExpression expr) : base() {
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_MapValues(_expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_MapValues;
      return oth != null && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.MapValues";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_Select : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _isConstant;
    public readonly bool _onDatatype;
    public Expression_Select(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool isConstant, bool onDatatype) : base() {
      this._expr = expr;
      this._field = field;
      this._isConstant = isConstant;
      this._onDatatype = onDatatype;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Select(_expr, _field, _isConstant, _onDatatype);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Select;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._isConstant == oth._isConstant && this._onDatatype == oth._onDatatype;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isConstant));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isConstant);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ")";
      return s;
    }
  }
  public class Expression_SelectFn : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<Dafny.Rune> _field;
    public readonly bool _onDatatype;
    public readonly bool _isStatic;
    public readonly BigInteger _arity;
    public Expression_SelectFn(DAST._IExpression expr, Dafny.ISequence<Dafny.Rune> field, bool onDatatype, bool isStatic, BigInteger arity) : base() {
      this._expr = expr;
      this._field = field;
      this._onDatatype = onDatatype;
      this._isStatic = isStatic;
      this._arity = arity;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SelectFn(_expr, _field, _onDatatype, _isStatic, _arity);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SelectFn;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._field, oth._field) && this._onDatatype == oth._onDatatype && this._isStatic == oth._isStatic && this._arity == oth._arity;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._field));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._onDatatype));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isStatic));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SelectFn";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += this._field.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._onDatatype);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isStatic);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arity);
      s += ")";
      return s;
    }
  }
  public class Expression_Index : Expression {
    public readonly DAST._IExpression _expr;
    public readonly DAST._ICollKind _collKind;
    public readonly Dafny.ISequence<DAST._IExpression> _indices;
    public Expression_Index(DAST._IExpression expr, DAST._ICollKind collKind, Dafny.ISequence<DAST._IExpression> indices) : base() {
      this._expr = expr;
      this._collKind = collKind;
      this._indices = indices;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Index(_expr, _collKind, _indices);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Index;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._collKind, oth._collKind) && object.Equals(this._indices, oth._indices);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 27;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._collKind));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._indices));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Index";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._collKind);
      s += ", ";
      s += Dafny.Helpers.ToString(this._indices);
      s += ")";
      return s;
    }
  }
  public class Expression_IndexRange : Expression {
    public readonly DAST._IExpression _expr;
    public readonly bool _isArray;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _low;
    public readonly Std.Wrappers._IOption<DAST._IExpression> _high;
    public Expression_IndexRange(DAST._IExpression expr, bool isArray, Std.Wrappers._IOption<DAST._IExpression> low, Std.Wrappers._IOption<DAST._IExpression> high) : base() {
      this._expr = expr;
      this._isArray = isArray;
      this._low = low;
      this._high = high;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IndexRange(_expr, _isArray, _low, _high);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IndexRange;
      return oth != null && object.Equals(this._expr, oth._expr) && this._isArray == oth._isArray && object.Equals(this._low, oth._low) && object.Equals(this._high, oth._high);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 28;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._isArray));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._low));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._high));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IndexRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._isArray);
      s += ", ";
      s += Dafny.Helpers.ToString(this._low);
      s += ", ";
      s += Dafny.Helpers.ToString(this._high);
      s += ")";
      return s;
    }
  }
  public class Expression_TupleSelect : Expression {
    public readonly DAST._IExpression _expr;
    public readonly BigInteger _index;
    public Expression_TupleSelect(DAST._IExpression expr, BigInteger index) : base() {
      this._expr = expr;
      this._index = index;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TupleSelect(_expr, _index);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TupleSelect;
      return oth != null && object.Equals(this._expr, oth._expr) && this._index == oth._index;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 29;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._index));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TupleSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._index);
      s += ")";
      return s;
    }
  }
  public class Expression_Call : Expression {
    public readonly DAST._IExpression _on;
    public readonly DAST._ICallName _callName;
    public readonly Dafny.ISequence<DAST._IType> _typeArgs;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Call(DAST._IExpression @on, DAST._ICallName callName, Dafny.ISequence<DAST._IType> typeArgs, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._on = @on;
      this._callName = callName;
      this._typeArgs = typeArgs;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Call(_on, _callName, _typeArgs, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Call;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._callName, oth._callName) && object.Equals(this._typeArgs, oth._typeArgs) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 30;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._callName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeArgs));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._callName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeArgs);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_Lambda : Expression {
    public readonly Dafny.ISequence<DAST._IFormal> _params;
    public readonly DAST._IType _retType;
    public readonly Dafny.ISequence<DAST._IStatement> _body;
    public Expression_Lambda(Dafny.ISequence<DAST._IFormal> @params, DAST._IType retType, Dafny.ISequence<DAST._IStatement> body) : base() {
      this._params = @params;
      this._retType = retType;
      this._body = body;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Lambda(_params, _retType, _body);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Lambda;
      return oth != null && object.Equals(this._params, oth._params) && object.Equals(this._retType, oth._retType) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 31;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._params));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Lambda";
      s += "(";
      s += Dafny.Helpers.ToString(this._params);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expression_BetaRedex : Expression {
    public readonly Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _values;
    public readonly DAST._IType _retType;
    public readonly DAST._IExpression _expr;
    public Expression_BetaRedex(Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> values, DAST._IType retType, DAST._IExpression expr) : base() {
      this._values = values;
      this._retType = retType;
      this._expr = expr;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BetaRedex(_values, _retType, _expr);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BetaRedex;
      return oth != null && object.Equals(this._values, oth._values) && object.Equals(this._retType, oth._retType) && object.Equals(this._expr, oth._expr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 32;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._values));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._retType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BetaRedex";
      s += "(";
      s += Dafny.Helpers.ToString(this._values);
      s += ", ";
      s += Dafny.Helpers.ToString(this._retType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._expr);
      s += ")";
      return s;
    }
  }
  public class Expression_IIFE : Expression {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly DAST._IType _typ;
    public readonly DAST._IExpression _value;
    public readonly DAST._IExpression _iifeBody;
    public Expression_IIFE(Dafny.ISequence<Dafny.Rune> name, DAST._IType typ, DAST._IExpression @value, DAST._IExpression iifeBody) : base() {
      this._name = name;
      this._typ = typ;
      this._value = @value;
      this._iifeBody = iifeBody;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IIFE(_name, _typ, _value, _iifeBody);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IIFE;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typ, oth._typ) && object.Equals(this._value, oth._value) && object.Equals(this._iifeBody, oth._iifeBody);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 33;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._iifeBody));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IIFE";
      s += "(";
      s += Dafny.Helpers.ToString(this._name);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typ);
      s += ", ";
      s += Dafny.Helpers.ToString(this._value);
      s += ", ";
      s += Dafny.Helpers.ToString(this._iifeBody);
      s += ")";
      return s;
    }
  }
  public class Expression_Apply : Expression {
    public readonly DAST._IExpression _expr;
    public readonly Dafny.ISequence<DAST._IExpression> _args;
    public Expression_Apply(DAST._IExpression expr, Dafny.ISequence<DAST._IExpression> args) : base() {
      this._expr = expr;
      this._args = args;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_Apply(_expr, _args);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_Apply;
      return oth != null && object.Equals(this._expr, oth._expr) && object.Equals(this._args, oth._args);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 34;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._expr));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._args));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.Apply";
      s += "(";
      s += Dafny.Helpers.ToString(this._expr);
      s += ", ";
      s += Dafny.Helpers.ToString(this._args);
      s += ")";
      return s;
    }
  }
  public class Expression_TypeTest : Expression {
    public readonly DAST._IExpression _on;
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _dType;
    public readonly Dafny.ISequence<Dafny.Rune> _variant;
    public Expression_TypeTest(DAST._IExpression @on, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dType, Dafny.ISequence<Dafny.Rune> variant) : base() {
      this._on = @on;
      this._dType = dType;
      this._variant = variant;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_TypeTest(_on, _dType, _variant);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_TypeTest;
      return oth != null && object.Equals(this._on, oth._on) && object.Equals(this._dType, oth._dType) && object.Equals(this._variant, oth._variant);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 35;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._on));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._dType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variant));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.TypeTest";
      s += "(";
      s += Dafny.Helpers.ToString(this._on);
      s += ", ";
      s += Dafny.Helpers.ToString(this._dType);
      s += ", ";
      s += this._variant.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expression_InitializationValue : Expression {
    public readonly DAST._IType _typ;
    public Expression_InitializationValue(DAST._IType typ) : base() {
      this._typ = typ;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_InitializationValue(_typ);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_InitializationValue;
      return oth != null && object.Equals(this._typ, oth._typ);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 36;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typ));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.InitializationValue";
      s += "(";
      s += Dafny.Helpers.ToString(this._typ);
      s += ")";
      return s;
    }
  }
  public class Expression_BoolBoundedPool : Expression {
    public Expression_BoolBoundedPool() : base() {
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_BoolBoundedPool();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_BoolBoundedPool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 37;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.BoolBoundedPool";
      return s;
    }
  }
  public class Expression_SetBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public Expression_SetBoundedPool(DAST._IExpression of) : base() {
      this._of = of;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SetBoundedPool(_of);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SetBoundedPool;
      return oth != null && object.Equals(this._of, oth._of);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 38;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SetBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ")";
      return s;
    }
  }
  public class Expression_SeqBoundedPool : Expression {
    public readonly DAST._IExpression _of;
    public readonly bool _includeDuplicates;
    public Expression_SeqBoundedPool(DAST._IExpression of, bool includeDuplicates) : base() {
      this._of = of;
      this._includeDuplicates = includeDuplicates;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_SeqBoundedPool(_of, _includeDuplicates);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_SeqBoundedPool;
      return oth != null && object.Equals(this._of, oth._of) && this._includeDuplicates == oth._includeDuplicates;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 39;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._of));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._includeDuplicates));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.SeqBoundedPool";
      s += "(";
      s += Dafny.Helpers.ToString(this._of);
      s += ", ";
      s += Dafny.Helpers.ToString(this._includeDuplicates);
      s += ")";
      return s;
    }
  }
  public class Expression_IntRange : Expression {
    public readonly DAST._IExpression _lo;
    public readonly DAST._IExpression _hi;
    public Expression_IntRange(DAST._IExpression lo, DAST._IExpression hi) : base() {
      this._lo = lo;
      this._hi = hi;
    }
    public override _IExpression DowncastClone() {
      if (this is _IExpression dt) { return dt; }
      return new Expression_IntRange(_lo, _hi);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Expression_IntRange;
      return oth != null && object.Equals(this._lo, oth._lo) && object.Equals(this._hi, oth._hi);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 40;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lo));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._hi));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Expression.IntRange";
      s += "(";
      s += Dafny.Helpers.ToString(this._lo);
      s += ", ";
      s += Dafny.Helpers.ToString(this._hi);
      s += ")";
      return s;
    }
  }

  public interface _IUnaryOp {
    bool is_Not { get; }
    bool is_BitwiseNot { get; }
    bool is_Cardinality { get; }
    _IUnaryOp DowncastClone();
  }
  public abstract class UnaryOp : _IUnaryOp {
    public UnaryOp() {
    }
    private static readonly DAST._IUnaryOp theDefault = create_Not();
    public static DAST._IUnaryOp Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._IUnaryOp> _TYPE = new Dafny.TypeDescriptor<DAST._IUnaryOp>(DAST.UnaryOp.Default());
    public static Dafny.TypeDescriptor<DAST._IUnaryOp> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnaryOp create_Not() {
      return new UnaryOp_Not();
    }
    public static _IUnaryOp create_BitwiseNot() {
      return new UnaryOp_BitwiseNot();
    }
    public static _IUnaryOp create_Cardinality() {
      return new UnaryOp_Cardinality();
    }
    public bool is_Not { get { return this is UnaryOp_Not; } }
    public bool is_BitwiseNot { get { return this is UnaryOp_BitwiseNot; } }
    public bool is_Cardinality { get { return this is UnaryOp_Cardinality; } }
    public static System.Collections.Generic.IEnumerable<_IUnaryOp> AllSingletonConstructors {
      get {
        yield return UnaryOp.create_Not();
        yield return UnaryOp.create_BitwiseNot();
        yield return UnaryOp.create_Cardinality();
      }
    }
    public abstract _IUnaryOp DowncastClone();
  }
  public class UnaryOp_Not : UnaryOp {
    public UnaryOp_Not() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Not();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Not;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Not";
      return s;
    }
  }
  public class UnaryOp_BitwiseNot : UnaryOp {
    public UnaryOp_BitwiseNot() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_BitwiseNot();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_BitwiseNot;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.BitwiseNot";
      return s;
    }
  }
  public class UnaryOp_Cardinality : UnaryOp {
    public UnaryOp_Cardinality() : base() {
    }
    public override _IUnaryOp DowncastClone() {
      if (this is _IUnaryOp dt) { return dt; }
      return new UnaryOp_Cardinality();
    }
    public override bool Equals(object other) {
      var oth = other as DAST.UnaryOp_Cardinality;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.UnaryOp.Cardinality";
      return s;
    }
  }

  public interface _ILiteral {
    bool is_BoolLiteral { get; }
    bool is_IntLiteral { get; }
    bool is_DecLiteral { get; }
    bool is_StringLiteral { get; }
    bool is_CharLiteral { get; }
    bool is_Null { get; }
    bool dtor_BoolLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 { get; }
    DAST._IType dtor_IntLiteral_a1 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 { get; }
    DAST._IType dtor_DecLiteral_a2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 { get; }
    Dafny.Rune dtor_CharLiteral_a0 { get; }
    DAST._IType dtor_Null_a0 { get; }
    _ILiteral DowncastClone();
  }
  public abstract class Literal : _ILiteral {
    public Literal() {
    }
    private static readonly DAST._ILiteral theDefault = create_BoolLiteral(false);
    public static DAST._ILiteral Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DAST._ILiteral> _TYPE = new Dafny.TypeDescriptor<DAST._ILiteral>(DAST.Literal.Default());
    public static Dafny.TypeDescriptor<DAST._ILiteral> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ILiteral create_BoolLiteral(bool _a0) {
      return new Literal_BoolLiteral(_a0);
    }
    public static _ILiteral create_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) {
      return new Literal_IntLiteral(_a0, _a1);
    }
    public static _ILiteral create_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) {
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public static _ILiteral create_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) {
      return new Literal_StringLiteral(_a0);
    }
    public static _ILiteral create_CharLiteral(Dafny.Rune _a0) {
      return new Literal_CharLiteral(_a0);
    }
    public static _ILiteral create_Null(DAST._IType _a0) {
      return new Literal_Null(_a0);
    }
    public bool is_BoolLiteral { get { return this is Literal_BoolLiteral; } }
    public bool is_IntLiteral { get { return this is Literal_IntLiteral; } }
    public bool is_DecLiteral { get { return this is Literal_DecLiteral; } }
    public bool is_StringLiteral { get { return this is Literal_StringLiteral; } }
    public bool is_CharLiteral { get { return this is Literal_CharLiteral; } }
    public bool is_Null { get { return this is Literal_Null; } }
    public bool dtor_BoolLiteral_a0 {
      get {
        var d = this;
        return ((Literal_BoolLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_IntLiteral_a0 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_IntLiteral_a1 {
      get {
        var d = this;
        return ((Literal_IntLiteral)d)._a1;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a0 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a0;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_DecLiteral_a1 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a1;
      }
    }
    public DAST._IType dtor_DecLiteral_a2 {
      get {
        var d = this;
        return ((Literal_DecLiteral)d)._a2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_StringLiteral_a0 {
      get {
        var d = this;
        return ((Literal_StringLiteral)d)._a0;
      }
    }
    public Dafny.Rune dtor_CharLiteral_a0 {
      get {
        var d = this;
        return ((Literal_CharLiteral)d)._a0;
      }
    }
    public DAST._IType dtor_Null_a0 {
      get {
        var d = this;
        return ((Literal_Null)d)._a0;
      }
    }
    public abstract _ILiteral DowncastClone();
  }
  public class Literal_BoolLiteral : Literal {
    public readonly bool _a0;
    public Literal_BoolLiteral(bool _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_BoolLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_BoolLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.BoolLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_IntLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly DAST._IType _a1;
    public Literal_IntLiteral(Dafny.ISequence<Dafny.Rune> _a0, DAST._IType _a1) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_IntLiteral(_a0, _a1);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_IntLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.IntLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a1);
      s += ")";
      return s;
    }
  }
  public class Literal_DecLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public readonly Dafny.ISequence<Dafny.Rune> _a1;
    public readonly DAST._IType _a2;
    public Literal_DecLiteral(Dafny.ISequence<Dafny.Rune> _a0, Dafny.ISequence<Dafny.Rune> _a1, DAST._IType _a2) : base() {
      this._a0 = _a0;
      this._a1 = _a1;
      this._a2 = _a2;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_DecLiteral(_a0, _a1, _a2);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_DecLiteral;
      return oth != null && object.Equals(this._a0, oth._a0) && object.Equals(this._a1, oth._a1) && object.Equals(this._a2, oth._a2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.DecLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ", ";
      s += this._a1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._a2);
      s += ")";
      return s;
    }
  }
  public class Literal_StringLiteral : Literal {
    public readonly Dafny.ISequence<Dafny.Rune> _a0;
    public Literal_StringLiteral(Dafny.ISequence<Dafny.Rune> _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_StringLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_StringLiteral;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.StringLiteral";
      s += "(";
      s += this._a0.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Literal_CharLiteral : Literal {
    public readonly Dafny.Rune _a0;
    public Literal_CharLiteral(Dafny.Rune _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_CharLiteral(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_CharLiteral;
      return oth != null && this._a0 == oth._a0;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.CharLiteral";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
  public class Literal_Null : Literal {
    public readonly DAST._IType _a0;
    public Literal_Null(DAST._IType _a0) : base() {
      this._a0 = _a0;
    }
    public override _ILiteral DowncastClone() {
      if (this is _ILiteral dt) { return dt; }
      return new Literal_Null(_a0);
    }
    public override bool Equals(object other) {
      var oth = other as DAST.Literal_Null;
      return oth != null && object.Equals(this._a0, oth._a0);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._a0));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DAST.Literal.Null";
      s += "(";
      s += Dafny.Helpers.ToString(this._a0);
      s += ")";
      return s;
    }
  }
} // end of namespace DAST

namespace D2DPrettyPrinter {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> PrettyPrint(Dafny.ISequence<DAST._IModule> d)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Microsoft.Dafny.Compilers.WrapException.Throw();
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Not Implemented Yet");
      return s;
    }
  }
} // end of namespace D2DPrettyPrinter
namespace ResolvedDesugaredExecutableDafnyPlugin {


  public partial class COMP {
    public COMP() {
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISequence<Dafny.Rune> _out14;
      _out14 = D2DPrettyPrinter.__default.PrettyPrint(p);
      s = _out14;
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      return s;
    }
  }
} // end of namespace ResolvedDesugaredExecutableDafnyPlugin
namespace RAST {

  public partial class __default {
    public static Dafny.ISequence<Dafny.Rune> SeqToString<__T>(Dafny.ISequence<__T> s, Func<__T, Dafny.ISequence<Dafny.Rune>> f, Dafny.ISequence<Dafny.Rune> separator)
    {
      if ((new BigInteger((s).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Helpers.Id<Func<__T, Dafny.ISequence<Dafny.Rune>>>(f)((s).Select(BigInteger.Zero)), (((new BigInteger((s).Count)) > (BigInteger.One)) ? (Dafny.Sequence<Dafny.Rune>.Concat(separator, RAST.__default.SeqToString<__T>((s).Drop(BigInteger.One), f, separator))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
      }
    }
    public static RAST._IType Rc(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType RefCell(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IType Vec(RAST._IType underlying) {
      return RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Vec")), Dafny.Sequence<RAST._IType>.FromElements(underlying));
    }
    public static RAST._IExpr NewVec(Dafny.ISequence<RAST._IExpr> elements) {
      return (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("vec!"))).Apply(elements);
    }
    public static RAST._IExpr Clone(RAST._IExpr underlying) {
      return (RAST.Expr.create_Select(underlying, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    }
    public static RAST._IExpr Borrow(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IExpr BorrowMut(RAST._IExpr underlying) {
      return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"), underlying, DAST.Format.UnOpFormat.create_NoFormat());
    }
    public static RAST._IType RawType(Dafny.ISequence<Dafny.Rune> content) {
      return RAST.Type.create_TIdentifier(content);
    }
    public static RAST._IType MaybePlaceboType(RAST._IType underlying) {
      return ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).Apply1(underlying);
    }
    public static Dafny.ISequence<Dafny.Rune> AddIndent(Dafny.ISequence<Dafny.Rune> raw, Dafny.ISequence<Dafny.Rune> ind)
    {
      Dafny.ISequence<Dafny.Rune> _830___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((raw).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, raw);
      } else if ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[({")).Contains((raw).Select(BigInteger.Zero))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in103 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in104 = Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND);
        raw = _in103;
        ind = _in104;
        goto TAIL_CALL_START;
      } else if (((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("})]")).Contains((raw).Select(BigInteger.Zero))) && ((new BigInteger((ind).Count)) > (new BigInteger(2)))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in105 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in106 = (ind).Take((new BigInteger((ind).Count)) - (new BigInteger(2)));
        raw = _in105;
        ind = _in106;
        goto TAIL_CALL_START;
      } else if (((raw).Select(BigInteger.Zero)) == (new Dafny.Rune('\n'))) {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)), ind));
        Dafny.ISequence<Dafny.Rune> _in107 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in108 = ind;
        raw = _in107;
        ind = _in108;
        goto TAIL_CALL_START;
      } else {
        _830___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_830___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((raw).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in109 = (raw).Drop(BigInteger.One);
        Dafny.ISequence<Dafny.Rune> _in110 = ind;
        raw = _in109;
        ind = _in110;
        goto TAIL_CALL_START;
      }
    }
    public static BigInteger max(BigInteger i, BigInteger j)
    {
      if ((i) < (j)) {
        return j;
      } else {
        return i;
      }
    }
    public static RAST._IExpr AssignVar(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr rhs)
    {
      return RAST.Expr.create_Assign(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name), rhs);
    }
    public static RAST._IExpr MaybePlacebo(RAST._IExpr underlying) {
      return (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from"))).Apply1(underlying);
    }
    public static RAST._IExpr RcNew(RAST._IExpr underlying) {
      return RAST.Expr.create_Call(RAST.__default.std__rc__Rc__new, Dafny.Sequence<RAST._IExpr>.FromElements(underlying));
    }
    public static RAST._IType SelfBorrowed { get {
      return RAST.Type.create_Borrowed(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfBorrowedMut { get {
      return RAST.Type.create_BorrowedMut(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfPointer { get {
      return RAST.Type.create_Pointer(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType SelfPointerMut { get {
      return RAST.Type.create_PointerMut(RAST.Type.create_SelfOwned());
    } }
    public static RAST._IType global__type { get {
      return RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IType std__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IType CloneTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Clone"));
    } }
    public static RAST._IType DafnyPrintTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint"));
    } }
    public static RAST._IType DefaultTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default"));
    } }
    public static RAST._IType StaticTrait { get {
      return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'static"));
    } }
    public static RAST._IType cell__type { get {
      return (RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cell"));
    } }
    public static RAST._IType refcell__type { get {
      return (RAST.__default.cell__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("RefCell"));
    } }
    public static RAST._IType dafny__runtime__type { get {
      return (RAST.__default.global__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("  ");
    } }
    public static RAST._IExpr self { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"));
    } }
    public static RAST._IExpr @global { get {
      return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    } }
    public static RAST._IExpr dafny__runtime { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dafny_runtime"));
    } }
    public static RAST._IExpr dafny__runtime__Set { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set"));
    } }
    public static RAST._IExpr dafny__runtime__Set__from__array { get {
      return (RAST.__default.dafny__runtime__Set).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Sequence { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"));
    } }
    public static RAST._IExpr Sequence__from__array__owned { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array_owned"));
    } }
    public static RAST._IExpr Sequence__from__array { get {
      return (RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset { get {
      return (RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset"));
    } }
    public static RAST._IExpr dafny__runtime__Multiset__from__array { get {
      return (RAST.__default.dafny__runtime__Multiset).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"));
    } }
    public static RAST._IExpr std { get {
      return (RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"));
    } }
    public static RAST._IExpr std__rc { get {
      return (RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rc"));
    } }
    public static RAST._IExpr std__rc__Rc { get {
      return (RAST.__default.std__rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Rc"));
    } }
    public static RAST._IExpr std__rc__Rc__new { get {
      return (RAST.__default.std__rc__Rc).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"));
    } }
    public static RAST._IExpr std__Default__default { get {
      return ((((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
    } }
  }

  public interface _IMod {
    bool is_Mod { get; }
    bool is_ExternMod { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._IModDecl> dtor_body { get; }
    _IMod DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Mod : _IMod {
    public Mod() {
    }
    private static readonly RAST._IMod theDefault = create_Mod(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IModDecl>.Empty);
    public static RAST._IMod Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMod> _TYPE = new Dafny.TypeDescriptor<RAST._IMod>(RAST.Mod.Default());
    public static Dafny.TypeDescriptor<RAST._IMod> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMod create_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) {
      return new Mod_Mod(name, body);
    }
    public static _IMod create_ExternMod(Dafny.ISequence<Dafny.Rune> name) {
      return new Mod_ExternMod(name);
    }
    public bool is_Mod { get { return this is Mod_Mod; } }
    public bool is_ExternMod { get { return this is Mod_ExternMod; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Mod_Mod) { return ((Mod_Mod)d)._name; }
        return ((Mod_ExternMod)d)._name;
      }
    }
    public Dafny.ISequence<RAST._IModDecl> dtor_body {
      get {
        var d = this;
        return ((Mod_Mod)d)._body;
      }
    }
    public abstract _IMod DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IMod _source25 = this;
      if (_source25.is_Mod) {
        Dafny.ISequence<Dafny.Rune> _831___mcc_h0 = _source25.dtor_name;
        Dafny.ISequence<RAST._IModDecl> _832___mcc_h1 = _source25.dtor_body;
        Dafny.ISequence<RAST._IModDecl> _833_body = _832___mcc_h1;
        Dafny.ISequence<Dafny.Rune> _834_name = _831___mcc_h0;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _834_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), RAST.__default.IND), RAST.__default.SeqToString<RAST._IModDecl>(_833_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>>>((_835_ind) => ((System.Func<RAST._IModDecl, Dafny.ISequence<Dafny.Rune>>)((_836_modDecl) => {
          return (_836_modDecl)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_835_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _837___mcc_h2 = _source25.dtor_name;
        Dafny.ISequence<Dafny.Rune> _838_name = _837___mcc_h2;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod "), _838_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      }
    }
  }
  public class Mod_Mod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._IModDecl> _body;
    public Mod_Mod(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._IModDecl> body) : base() {
      this._name = name;
      this._body = body;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_Mod(_name, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_Mod;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.Mod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Mod_ExternMod : Mod {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Mod_ExternMod(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IMod DowncastClone() {
      if (this is _IMod dt) { return dt; }
      return new Mod_ExternMod(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Mod_ExternMod;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Mod.ExternMod";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IModDecl {
    bool is_RawDecl { get; }
    bool is_ModDecl { get; }
    bool is_StructDecl { get; }
    bool is_EnumDecl { get; }
    bool is_ImplDecl { get; }
    bool is_TraitDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_body { get; }
    RAST._IMod dtor_mod { get; }
    RAST._IStruct dtor_struct { get; }
    RAST._IEnum dtor_enum { get; }
    RAST._IImpl dtor_impl { get; }
    RAST._ITrait dtor_tr { get; }
    _IModDecl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ModDecl : _IModDecl {
    public ModDecl() {
    }
    private static readonly RAST._IModDecl theDefault = create_RawDecl(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IModDecl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IModDecl> _TYPE = new Dafny.TypeDescriptor<RAST._IModDecl>(RAST.ModDecl.Default());
    public static Dafny.TypeDescriptor<RAST._IModDecl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IModDecl create_RawDecl(Dafny.ISequence<Dafny.Rune> body) {
      return new ModDecl_RawDecl(body);
    }
    public static _IModDecl create_ModDecl(RAST._IMod mod) {
      return new ModDecl_ModDecl(mod);
    }
    public static _IModDecl create_StructDecl(RAST._IStruct @struct) {
      return new ModDecl_StructDecl(@struct);
    }
    public static _IModDecl create_EnumDecl(RAST._IEnum @enum) {
      return new ModDecl_EnumDecl(@enum);
    }
    public static _IModDecl create_ImplDecl(RAST._IImpl impl) {
      return new ModDecl_ImplDecl(impl);
    }
    public static _IModDecl create_TraitDecl(RAST._ITrait tr) {
      return new ModDecl_TraitDecl(tr);
    }
    public bool is_RawDecl { get { return this is ModDecl_RawDecl; } }
    public bool is_ModDecl { get { return this is ModDecl_ModDecl; } }
    public bool is_StructDecl { get { return this is ModDecl_StructDecl; } }
    public bool is_EnumDecl { get { return this is ModDecl_EnumDecl; } }
    public bool is_ImplDecl { get { return this is ModDecl_ImplDecl; } }
    public bool is_TraitDecl { get { return this is ModDecl_TraitDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_body {
      get {
        var d = this;
        return ((ModDecl_RawDecl)d)._body;
      }
    }
    public RAST._IMod dtor_mod {
      get {
        var d = this;
        return ((ModDecl_ModDecl)d)._mod;
      }
    }
    public RAST._IStruct dtor_struct {
      get {
        var d = this;
        return ((ModDecl_StructDecl)d)._struct;
      }
    }
    public RAST._IEnum dtor_enum {
      get {
        var d = this;
        return ((ModDecl_EnumDecl)d)._enum;
      }
    }
    public RAST._IImpl dtor_impl {
      get {
        var d = this;
        return ((ModDecl_ImplDecl)d)._impl;
      }
    }
    public RAST._ITrait dtor_tr {
      get {
        var d = this;
        return ((ModDecl_TraitDecl)d)._tr;
      }
    }
    public abstract _IModDecl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_ModDecl) {
        return ((this).dtor_mod)._ToString(ind);
      } else if ((this).is_StructDecl) {
        return ((this).dtor_struct)._ToString(ind);
      } else if ((this).is_ImplDecl) {
        return ((this).dtor_impl)._ToString(ind);
      } else if ((this).is_EnumDecl) {
        return ((this).dtor_enum)._ToString(ind);
      } else if ((this).is_TraitDecl) {
        return ((this).dtor_tr)._ToString(ind);
      } else {
        return (this).dtor_body;
      }
    }
  }
  public class ModDecl_RawDecl : ModDecl {
    public readonly Dafny.ISequence<Dafny.Rune> _body;
    public ModDecl_RawDecl(Dafny.ISequence<Dafny.Rune> body) : base() {
      this._body = body;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_RawDecl(_body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_RawDecl;
      return oth != null && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.RawDecl";
      s += "(";
      s += this._body.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ModDecl : ModDecl {
    public readonly RAST._IMod _mod;
    public ModDecl_ModDecl(RAST._IMod mod) : base() {
      this._mod = mod;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ModDecl(_mod);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ModDecl;
      return oth != null && object.Equals(this._mod, oth._mod);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._mod));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ModDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._mod);
      s += ")";
      return s;
    }
  }
  public class ModDecl_StructDecl : ModDecl {
    public readonly RAST._IStruct _struct;
    public ModDecl_StructDecl(RAST._IStruct @struct) : base() {
      this._struct = @struct;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_StructDecl(_struct);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_StructDecl;
      return oth != null && object.Equals(this._struct, oth._struct);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._struct));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.StructDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._struct);
      s += ")";
      return s;
    }
  }
  public class ModDecl_EnumDecl : ModDecl {
    public readonly RAST._IEnum _enum;
    public ModDecl_EnumDecl(RAST._IEnum @enum) : base() {
      this._enum = @enum;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_EnumDecl(_enum);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_EnumDecl;
      return oth != null && object.Equals(this._enum, oth._enum);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._enum));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.EnumDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._enum);
      s += ")";
      return s;
    }
  }
  public class ModDecl_ImplDecl : ModDecl {
    public readonly RAST._IImpl _impl;
    public ModDecl_ImplDecl(RAST._IImpl impl) : base() {
      this._impl = impl;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_ImplDecl(_impl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_ImplDecl;
      return oth != null && object.Equals(this._impl, oth._impl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._impl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.ImplDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._impl);
      s += ")";
      return s;
    }
  }
  public class ModDecl_TraitDecl : ModDecl {
    public readonly RAST._ITrait _tr;
    public ModDecl_TraitDecl(RAST._ITrait tr) : base() {
      this._tr = tr;
    }
    public override _IModDecl DowncastClone() {
      if (this is _IModDecl dt) { return dt; }
      return new ModDecl_TraitDecl(_tr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ModDecl_TraitDecl;
      return oth != null && object.Equals(this._tr, oth._tr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ModDecl.TraitDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._tr);
      s += ")";
      return s;
    }
  }

  public interface _IAttribute {
    bool is_RawAttribute { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Attribute : _IAttribute {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Attribute(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Attribute;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Attribute.RawAttribute";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAttribute create(Dafny.ISequence<Dafny.Rune> content) {
      return new Attribute(content);
    }
    public static _IAttribute create_RawAttribute(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawAttribute { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> ind)
    {
      return RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(attributes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>>((_839_ind) => ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_840_attribute) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_840_attribute), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _839_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
    }
  }

  public interface _IStruct {
    bool is_Struct { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IFields dtor_fields { get; }
    _IStruct DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Struct : _IStruct {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IFields _fields;
    public Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._fields = fields;
    }
    public _IStruct DowncastClone() {
      if (this is _IStruct dt) { return dt; }
      return new Struct(_attributes, _name, _typeParams, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Struct;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Struct.Struct";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IStruct theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Fields.Default());
    public static RAST._IStruct Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IStruct> _TYPE = new Dafny.TypeDescriptor<RAST._IStruct>(RAST.Struct.Default());
    public static Dafny.TypeDescriptor<RAST._IStruct> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IStruct create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      return new Struct(attributes, name, typeParams, fields);
    }
    public static _IStruct create_Struct(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IFields fields) {
      return create(attributes, name, typeParams, fields);
    }
    public bool is_Struct { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IFields dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub struct ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_fields)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND), ((this).dtor_fields).is_NamedFields)), ((((this).dtor_fields).is_NamelessFields) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
    }
  }

  public interface _INamelessField {
    bool is_NamelessField { get; }
    RAST._IVisibility dtor_visibility { get; }
    RAST._IType dtor_tpe { get; }
    _INamelessField DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class NamelessField : _INamelessField {
    public readonly RAST._IVisibility _visibility;
    public readonly RAST._IType _tpe;
    public NamelessField(RAST._IVisibility visibility, RAST._IType tpe) {
      this._visibility = visibility;
      this._tpe = tpe;
    }
    public _INamelessField DowncastClone() {
      if (this is _INamelessField dt) { return dt; }
      return new NamelessField(_visibility, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.NamelessField;
      return oth != null && object.Equals(this._visibility, oth._visibility) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._visibility));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.NamelessField.NamelessField";
      s += "(";
      s += Dafny.Helpers.ToString(this._visibility);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._INamelessField theDefault = create(RAST.Visibility.Default(), RAST.Type.Default());
    public static RAST._INamelessField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._INamelessField> _TYPE = new Dafny.TypeDescriptor<RAST._INamelessField>(RAST.NamelessField.Default());
    public static Dafny.TypeDescriptor<RAST._INamelessField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _INamelessField create(RAST._IVisibility visibility, RAST._IType tpe) {
      return new NamelessField(visibility, tpe);
    }
    public static _INamelessField create_NamelessField(RAST._IVisibility visibility, RAST._IType tpe) {
      return create(visibility, tpe);
    }
    public bool is_NamelessField { get { return true; } }
    public RAST._IVisibility dtor_visibility {
      get {
        return this._visibility;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_visibility, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_tpe)._ToString(ind));
    }
  }

  public interface _IField {
    bool is_Field { get; }
    RAST._IVisibility dtor_visibility { get; }
    RAST._IFormal dtor_formal { get; }
    _IField DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Field : _IField {
    public readonly RAST._IVisibility _visibility;
    public readonly RAST._IFormal _formal;
    public Field(RAST._IVisibility visibility, RAST._IFormal formal) {
      this._visibility = visibility;
      this._formal = formal;
    }
    public _IField DowncastClone() {
      if (this is _IField dt) { return dt; }
      return new Field(_visibility, _formal);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Field;
      return oth != null && object.Equals(this._visibility, oth._visibility) && object.Equals(this._formal, oth._formal);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._visibility));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formal));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Field.Field";
      s += "(";
      s += Dafny.Helpers.ToString(this._visibility);
      s += ", ";
      s += Dafny.Helpers.ToString(this._formal);
      s += ")";
      return s;
    }
    private static readonly RAST._IField theDefault = create(RAST.Visibility.Default(), RAST.Formal.Default());
    public static RAST._IField Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IField> _TYPE = new Dafny.TypeDescriptor<RAST._IField>(RAST.Field.Default());
    public static Dafny.TypeDescriptor<RAST._IField> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IField create(RAST._IVisibility visibility, RAST._IFormal formal) {
      return new Field(visibility, formal);
    }
    public static _IField create_Field(RAST._IVisibility visibility, RAST._IFormal formal) {
      return create(visibility, formal);
    }
    public bool is_Field { get { return true; } }
    public RAST._IVisibility dtor_visibility {
      get {
        return this._visibility;
      }
    }
    public RAST._IFormal dtor_formal {
      get {
        return this._formal;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_visibility, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_formal)._ToString(ind));
    }
  }

  public interface _IFields {
    bool is_NamedFields { get; }
    bool is_NamelessFields { get; }
    Dafny.ISequence<RAST._IField> dtor_fields { get; }
    Dafny.ISequence<RAST._INamelessField> dtor_types { get; }
    _IFields DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public abstract class Fields : _IFields {
    public Fields() {
    }
    private static readonly RAST._IFields theDefault = create_NamedFields(Dafny.Sequence<RAST._IField>.Empty);
    public static RAST._IFields Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFields> _TYPE = new Dafny.TypeDescriptor<RAST._IFields>(RAST.Fields.Default());
    public static Dafny.TypeDescriptor<RAST._IFields> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFields create_NamedFields(Dafny.ISequence<RAST._IField> fields) {
      return new Fields_NamedFields(fields);
    }
    public static _IFields create_NamelessFields(Dafny.ISequence<RAST._INamelessField> types) {
      return new Fields_NamelessFields(types);
    }
    public bool is_NamedFields { get { return this is Fields_NamedFields; } }
    public bool is_NamelessFields { get { return this is Fields_NamelessFields; } }
    public Dafny.ISequence<RAST._IField> dtor_fields {
      get {
        var d = this;
        return ((Fields_NamedFields)d)._fields;
      }
    }
    public Dafny.ISequence<RAST._INamelessField> dtor_types {
      get {
        var d = this;
        return ((Fields_NamelessFields)d)._types;
      }
    }
    public abstract _IFields DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      if ((this).is_NamedFields) {
        Dafny.ISequence<Dafny.Rune> _841_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs40 = (((newLine) && ((new BigInteger(((this).dtor_fields).Count)).Sign == 1)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind))) : ((((new BigInteger(((this).dtor_fields).Count)).Sign == 1) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))))));
        Dafny.ISequence<Dafny.Rune> _842_beginSpace = _let_tmp_rhs40.dtor__0;
        Dafny.ISequence<Dafny.Rune> _843_endSpace = _let_tmp_rhs40.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {"), _842_beginSpace), RAST.__default.SeqToString<RAST._IField>((this).dtor_fields, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IField, Dafny.ISequence<Dafny.Rune>>>>((_844_ind) => ((System.Func<RAST._IField, Dafny.ISequence<Dafny.Rune>>)((_845_field) => {
          return (_845_field)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_844_ind, RAST.__default.IND));
        })))(ind), _841_separator)), _843_endSpace), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else {
        Dafny.ISequence<Dafny.Rune> _846_separator = ((newLine) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(",\n"), ind), RAST.__default.IND)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._INamelessField>((this).dtor_types, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._INamelessField, Dafny.ISequence<Dafny.Rune>>>>((_847_ind) => ((System.Func<RAST._INamelessField, Dafny.ISequence<Dafny.Rune>>)((_848_t) => {
          return (_848_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_847_ind, RAST.__default.IND));
        })))(ind), _846_separator)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      }
    }
  }
  public class Fields_NamedFields : Fields {
    public readonly Dafny.ISequence<RAST._IField> _fields;
    public Fields_NamedFields(Dafny.ISequence<RAST._IField> fields) : base() {
      this._fields = fields;
    }
    public override _IFields DowncastClone() {
      if (this is _IFields dt) { return dt; }
      return new Fields_NamedFields(_fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fields_NamedFields;
      return oth != null && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fields.NamedFields";
      s += "(";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
  }
  public class Fields_NamelessFields : Fields {
    public readonly Dafny.ISequence<RAST._INamelessField> _types;
    public Fields_NamelessFields(Dafny.ISequence<RAST._INamelessField> types) : base() {
      this._types = types;
    }
    public override _IFields DowncastClone() {
      if (this is _IFields dt) { return dt; }
      return new Fields_NamelessFields(_types);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fields_NamelessFields;
      return oth != null && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fields.NamelessFields";
      s += "(";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
  }

  public interface _IEnumCase {
    bool is_EnumCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IFields dtor_fields { get; }
    _IEnumCase DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine);
  }
  public class EnumCase : _IEnumCase {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IFields _fields;
    public EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      this._name = name;
      this._fields = fields;
    }
    public _IEnumCase DowncastClone() {
      if (this is _IEnumCase dt) { return dt; }
      return new EnumCase(_name, _fields);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.EnumCase;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._fields, oth._fields);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fields));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.EnumCase.EnumCase";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fields);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnumCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Fields.Default());
    public static RAST._IEnumCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnumCase> _TYPE = new Dafny.TypeDescriptor<RAST._IEnumCase>(RAST.EnumCase.Default());
    public static Dafny.TypeDescriptor<RAST._IEnumCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnumCase create(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      return new EnumCase(name, fields);
    }
    public static _IEnumCase create_EnumCase(Dafny.ISequence<Dafny.Rune> name, RAST._IFields fields) {
      return create(name, fields);
    }
    public bool is_EnumCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IFields dtor_fields {
      get {
        return this._fields;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind, bool newLine)
    {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, ((this).dtor_fields)._ToString(ind, newLine));
    }
  }

  public interface _IEnum {
    bool is_Enum { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IEnumCase> dtor_variants { get; }
    _IEnum DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Enum : _IEnum {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _attributes;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IEnumCase> _variants;
    public Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      this._attributes = attributes;
      this._name = name;
      this._typeParams = typeParams;
      this._variants = variants;
    }
    public _IEnum DowncastClone() {
      if (this is _IEnum dt) { return dt; }
      return new Enum(_attributes, _name, _typeParams, _variants);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Enum;
      return oth != null && object.Equals(this._attributes, oth._attributes) && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._variants, oth._variants);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._attributes));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._variants));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Enum.Enum";
      s += "(";
      s += Dafny.Helpers.ToString(this._attributes);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._variants);
      s += ")";
      return s;
    }
    private static readonly RAST._IEnum theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IEnumCase>.Empty);
    public static RAST._IEnum Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IEnum> _TYPE = new Dafny.TypeDescriptor<RAST._IEnum>(RAST.Enum.Default());
    public static Dafny.TypeDescriptor<RAST._IEnum> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnum create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return new Enum(attributes, name, typeParams, variants);
    }
    public static _IEnum create_Enum(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> attributes, Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IEnumCase> variants) {
      return create(attributes, name, typeParams, variants);
    }
    public bool is_Enum { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_attributes {
      get {
        return this._attributes;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IEnumCase> dtor_variants {
      get {
        return this._variants;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Attribute.ToStringMultiple((this).dtor_attributes, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub enum ")), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IEnumCase>((this).dtor_variants, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>>>((_849_ind) => ((System.Func<RAST._IEnumCase, Dafny.ISequence<Dafny.Rune>>)((_850_variant) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _849_ind), RAST.__default.IND), (_850_variant)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_849_ind, RAST.__default.IND), false));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _ITypeParam {
    bool is_RawTypeParam { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    Dafny.ISequence<RAST._IType> dtor_constraints { get; }
    _ITypeParam DowncastClone();
    RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints);
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class TypeParam : _ITypeParam {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public readonly Dafny.ISequence<RAST._IType> _constraints;
    public TypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      this._content = content;
      this._constraints = constraints;
    }
    public _ITypeParam DowncastClone() {
      if (this is _ITypeParam dt) { return dt; }
      return new TypeParam(_content, _constraints);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.TypeParam;
      return oth != null && object.Equals(this._content, oth._content) && object.Equals(this._constraints, oth._constraints);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._constraints));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.TypeParam.RawTypeParam";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._constraints);
      s += ")";
      return s;
    }
    private static readonly RAST._ITypeParam theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IType>.Empty);
    public static RAST._ITypeParam Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITypeParam> _TYPE = new Dafny.TypeDescriptor<RAST._ITypeParam>(RAST.TypeParam.Default());
    public static Dafny.TypeDescriptor<RAST._ITypeParam> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITypeParam create(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return new TypeParam(content, constraints);
    }
    public static _ITypeParam create_RawTypeParam(Dafny.ISequence<Dafny.Rune> content, Dafny.ISequence<RAST._IType> constraints) {
      return create(content, constraints);
    }
    public bool is_RawTypeParam { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_constraints {
      get {
        return this._constraints;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> ToStringMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<Dafny.Rune> ind)
    {
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._ITypeParam>(typeParams, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>>>((_851_ind) => ((System.Func<RAST._ITypeParam, Dafny.ISequence<Dafny.Rune>>)((_852_t) => {
          return (_852_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_851_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
      }
    }
    public static Dafny.ISequence<RAST._ITypeParam> AddConstraintsMultiple(Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IType> constraints)
    {
      Dafny.ISequence<RAST._ITypeParam> _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((typeParams).Count)).Sign == 0) {
        return Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements());
      } else {
        _853___accumulator = Dafny.Sequence<RAST._ITypeParam>.Concat(_853___accumulator, Dafny.Sequence<RAST._ITypeParam>.FromElements(((typeParams).Select(BigInteger.Zero)).AddConstraints(constraints)));
        Dafny.ISequence<RAST._ITypeParam> _in111 = (typeParams).Drop(BigInteger.One);
        Dafny.ISequence<RAST._IType> _in112 = constraints;
        typeParams = _in111;
        constraints = _in112;
        goto TAIL_CALL_START;
      }
    }
    public RAST._ITypeParam AddConstraints(Dafny.ISequence<RAST._IType> constraints) {
      RAST._ITypeParam _854_dt__update__tmp_h0 = this;
      Dafny.ISequence<RAST._IType> _855_dt__update_hconstraints_h0 = Dafny.Sequence<RAST._IType>.Concat((this).dtor_constraints, constraints);
      return RAST.TypeParam.create((_854_dt__update__tmp_h0).dtor_content, _855_dt__update_hconstraints_h0);
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_content, (((new BigInteger(((this).dtor_constraints).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), RAST.__default.SeqToString<RAST._IType>((this).dtor_constraints, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_856_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_857_t) => {
        return (_857_t)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_856_ind, RAST.__default.IND));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + "))))));
    }
  }

  public interface _IType {
    bool is_SelfOwned { get; }
    bool is_U8 { get; }
    bool is_U16 { get; }
    bool is_U32 { get; }
    bool is_U64 { get; }
    bool is_U128 { get; }
    bool is_I8 { get; }
    bool is_I16 { get; }
    bool is_I32 { get; }
    bool is_I64 { get; }
    bool is_I128 { get; }
    bool is_Bool { get; }
    bool is_TIdentifier { get; }
    bool is_TMemberSelect { get; }
    bool is_TypeApp { get; }
    bool is_Borrowed { get; }
    bool is_BorrowedMut { get; }
    bool is_Pointer { get; }
    bool is_PointerMut { get; }
    bool is_ImplType { get; }
    bool is_DynType { get; }
    bool is_TupleType { get; }
    bool is_FnType { get; }
    bool is_IntersectionType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_base { get; }
    RAST._IType dtor_baseName { get; }
    Dafny.ISequence<RAST._IType> dtor_arguments { get; }
    RAST._IType dtor_underlying { get; }
    RAST._IType dtor_returnType { get; }
    RAST._IType dtor_left { get; }
    RAST._IType dtor_right { get; }
    _IType DowncastClone();
    bool HasCopySemantics();
    Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IType Apply1(RAST._IType arg);
    RAST._IType Apply(Dafny.ISequence<RAST._IType> args);
  }
  public abstract class Type : _IType {
    public Type() {
    }
    private static readonly RAST._IType theDefault = create_SelfOwned();
    public static RAST._IType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IType> _TYPE = new Dafny.TypeDescriptor<RAST._IType>(RAST.Type.Default());
    public static Dafny.TypeDescriptor<RAST._IType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IType create_SelfOwned() {
      return new Type_SelfOwned();
    }
    public static _IType create_U8() {
      return new Type_U8();
    }
    public static _IType create_U16() {
      return new Type_U16();
    }
    public static _IType create_U32() {
      return new Type_U32();
    }
    public static _IType create_U64() {
      return new Type_U64();
    }
    public static _IType create_U128() {
      return new Type_U128();
    }
    public static _IType create_I8() {
      return new Type_I8();
    }
    public static _IType create_I16() {
      return new Type_I16();
    }
    public static _IType create_I32() {
      return new Type_I32();
    }
    public static _IType create_I64() {
      return new Type_I64();
    }
    public static _IType create_I128() {
      return new Type_I128();
    }
    public static _IType create_Bool() {
      return new Type_Bool();
    }
    public static _IType create_TIdentifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TIdentifier(name);
    }
    public static _IType create_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) {
      return new Type_TMemberSelect(@base, name);
    }
    public static _IType create_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TypeApp(baseName, arguments);
    }
    public static _IType create_Borrowed(RAST._IType underlying) {
      return new Type_Borrowed(underlying);
    }
    public static _IType create_BorrowedMut(RAST._IType underlying) {
      return new Type_BorrowedMut(underlying);
    }
    public static _IType create_Pointer(RAST._IType underlying) {
      return new Type_Pointer(underlying);
    }
    public static _IType create_PointerMut(RAST._IType underlying) {
      return new Type_PointerMut(underlying);
    }
    public static _IType create_ImplType(RAST._IType underlying) {
      return new Type_ImplType(underlying);
    }
    public static _IType create_DynType(RAST._IType underlying) {
      return new Type_DynType(underlying);
    }
    public static _IType create_TupleType(Dafny.ISequence<RAST._IType> arguments) {
      return new Type_TupleType(arguments);
    }
    public static _IType create_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) {
      return new Type_FnType(arguments, returnType);
    }
    public static _IType create_IntersectionType(RAST._IType left, RAST._IType right) {
      return new Type_IntersectionType(left, right);
    }
    public bool is_SelfOwned { get { return this is Type_SelfOwned; } }
    public bool is_U8 { get { return this is Type_U8; } }
    public bool is_U16 { get { return this is Type_U16; } }
    public bool is_U32 { get { return this is Type_U32; } }
    public bool is_U64 { get { return this is Type_U64; } }
    public bool is_U128 { get { return this is Type_U128; } }
    public bool is_I8 { get { return this is Type_I8; } }
    public bool is_I16 { get { return this is Type_I16; } }
    public bool is_I32 { get { return this is Type_I32; } }
    public bool is_I64 { get { return this is Type_I64; } }
    public bool is_I128 { get { return this is Type_I128; } }
    public bool is_Bool { get { return this is Type_Bool; } }
    public bool is_TIdentifier { get { return this is Type_TIdentifier; } }
    public bool is_TMemberSelect { get { return this is Type_TMemberSelect; } }
    public bool is_TypeApp { get { return this is Type_TypeApp; } }
    public bool is_Borrowed { get { return this is Type_Borrowed; } }
    public bool is_BorrowedMut { get { return this is Type_BorrowedMut; } }
    public bool is_Pointer { get { return this is Type_Pointer; } }
    public bool is_PointerMut { get { return this is Type_PointerMut; } }
    public bool is_ImplType { get { return this is Type_ImplType; } }
    public bool is_DynType { get { return this is Type_DynType; } }
    public bool is_TupleType { get { return this is Type_TupleType; } }
    public bool is_FnType { get { return this is Type_FnType; } }
    public bool is_IntersectionType { get { return this is Type_IntersectionType; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Type_TIdentifier) { return ((Type_TIdentifier)d)._name; }
        return ((Type_TMemberSelect)d)._name;
      }
    }
    public RAST._IType dtor_base {
      get {
        var d = this;
        return ((Type_TMemberSelect)d)._base;
      }
    }
    public RAST._IType dtor_baseName {
      get {
        var d = this;
        return ((Type_TypeApp)d)._baseName;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_arguments {
      get {
        var d = this;
        if (d is Type_TypeApp) { return ((Type_TypeApp)d)._arguments; }
        if (d is Type_TupleType) { return ((Type_TupleType)d)._arguments; }
        return ((Type_FnType)d)._arguments;
      }
    }
    public RAST._IType dtor_underlying {
      get {
        var d = this;
        if (d is Type_Borrowed) { return ((Type_Borrowed)d)._underlying; }
        if (d is Type_BorrowedMut) { return ((Type_BorrowedMut)d)._underlying; }
        if (d is Type_Pointer) { return ((Type_Pointer)d)._underlying; }
        if (d is Type_PointerMut) { return ((Type_PointerMut)d)._underlying; }
        if (d is Type_ImplType) { return ((Type_ImplType)d)._underlying; }
        return ((Type_DynType)d)._underlying;
      }
    }
    public RAST._IType dtor_returnType {
      get {
        var d = this;
        return ((Type_FnType)d)._returnType;
      }
    }
    public RAST._IType dtor_left {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._left;
      }
    }
    public RAST._IType dtor_right {
      get {
        var d = this;
        return ((Type_IntersectionType)d)._right;
      }
    }
    public abstract _IType DowncastClone();
    public bool HasCopySemantics() {
      return (((((((((((((this).is_U8) || ((this).is_U16)) || ((this).is_U32)) || ((this).is_U64)) || ((this).is_U128)) || ((this).is_I8)) || ((this).is_I16)) || ((this).is_I32)) || ((this).is_I64)) || ((this).is_I128)) || ((this).is_Bool)) || ((this).is_Pointer)) || ((this).is_PointerMut);
    }
    public Std.Wrappers._IOption<RAST._IType> ExtractMaybePlacebo() {
      RAST._IType _source26 = this;
      if (_source26.is_SelfOwned) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_Bool) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _858___mcc_h0 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TMemberSelect) {
        RAST._IType _859___mcc_h2 = _source26.dtor_base;
        Dafny.ISequence<Dafny.Rune> _860___mcc_h3 = _source26.dtor_name;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TypeApp) {
        RAST._IType _861___mcc_h6 = _source26.dtor_baseName;
        Dafny.ISequence<RAST._IType> _862___mcc_h7 = _source26.dtor_arguments;
        Dafny.ISequence<RAST._IType> _863_arguments = _862___mcc_h7;
        RAST._IType _864_wrapper = _861___mcc_h6;
        if (((object.Equals(_864_wrapper, RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo")))) || (object.Equals(_864_wrapper, (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))))) && ((new BigInteger((_863_arguments).Count)) == (BigInteger.One))) {
          return Std.Wrappers.Option<RAST._IType>.create_Some((_863_arguments).Select(BigInteger.Zero));
        } else {
          return Std.Wrappers.Option<RAST._IType>.create_None();
        }
      } else if (_source26.is_Borrowed) {
        RAST._IType _865___mcc_h10 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_BorrowedMut) {
        RAST._IType _866___mcc_h12 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_Pointer) {
        RAST._IType _867___mcc_h14 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_PointerMut) {
        RAST._IType _868___mcc_h16 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_ImplType) {
        RAST._IType _869___mcc_h18 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_DynType) {
        RAST._IType _870___mcc_h20 = _source26.dtor_underlying;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_TupleType) {
        Dafny.ISequence<RAST._IType> _871___mcc_h22 = _source26.dtor_arguments;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else if (_source26.is_FnType) {
        Dafny.ISequence<RAST._IType> _872___mcc_h24 = _source26.dtor_arguments;
        RAST._IType _873___mcc_h25 = _source26.dtor_returnType;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        RAST._IType _874___mcc_h28 = _source26.dtor_left;
        RAST._IType _875___mcc_h29 = _source26.dtor_right;
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      RAST._IType _source27 = this;
      if (_source27.is_SelfOwned) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self");
      } else if (_source27.is_U8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8");
      } else if (_source27.is_U16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16");
      } else if (_source27.is_U32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32");
      } else if (_source27.is_U64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64");
      } else if (_source27.is_U128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128");
      } else if (_source27.is_I8) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8");
      } else if (_source27.is_I16) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16");
      } else if (_source27.is_I32) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32");
      } else if (_source27.is_I64) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64");
      } else if (_source27.is_I128) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128");
      } else if (_source27.is_Bool) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("bool");
      } else if (_source27.is_TIdentifier) {
        Dafny.ISequence<Dafny.Rune> _876___mcc_h0 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _877_underlying = _876___mcc_h0;
        return _877_underlying;
      } else if (_source27.is_TMemberSelect) {
        RAST._IType _878___mcc_h1 = _source27.dtor_base;
        Dafny.ISequence<Dafny.Rune> _879___mcc_h2 = _source27.dtor_name;
        Dafny.ISequence<Dafny.Rune> _880_name = _879___mcc_h2;
        RAST._IType _881_underlying = _878___mcc_h1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_881_underlying)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _880_name);
      } else if (_source27.is_TypeApp) {
        RAST._IType _882___mcc_h3 = _source27.dtor_baseName;
        Dafny.ISequence<RAST._IType> _883___mcc_h4 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _884_args = _883___mcc_h4;
        RAST._IType _885_base = _882___mcc_h3;
        return Dafny.Sequence<Dafny.Rune>.Concat((_885_base)._ToString(ind), (((_884_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), RAST.__default.SeqToString<RAST._IType>(_884_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_886_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_887_arg) => {
          return (_887_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_886_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">")))));
      } else if (_source27.is_Borrowed) {
        RAST._IType _888___mcc_h5 = _source27.dtor_underlying;
        RAST._IType _889_underlying = _888___mcc_h5;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), (_889_underlying)._ToString(ind));
      } else if (_source27.is_BorrowedMut) {
        RAST._IType _890___mcc_h6 = _source27.dtor_underlying;
        RAST._IType _891_underlying = _890___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut "), (_891_underlying)._ToString(ind));
      } else if (_source27.is_Pointer) {
        RAST._IType _892___mcc_h7 = _source27.dtor_underlying;
        RAST._IType _893_underlying = _892___mcc_h7;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*const "), (_893_underlying)._ToString(ind));
      } else if (_source27.is_PointerMut) {
        RAST._IType _894___mcc_h8 = _source27.dtor_underlying;
        RAST._IType _895_underlying = _894___mcc_h8;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*mut "), (_895_underlying)._ToString(ind));
      } else if (_source27.is_ImplType) {
        RAST._IType _896___mcc_h9 = _source27.dtor_underlying;
        RAST._IType _897_underlying = _896___mcc_h9;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), (_897_underlying)._ToString(ind));
      } else if (_source27.is_DynType) {
        RAST._IType _898___mcc_h10 = _source27.dtor_underlying;
        RAST._IType _899_underlying = _898___mcc_h10;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn "), (_899_underlying)._ToString(ind));
      } else if (_source27.is_TupleType) {
        Dafny.ISequence<RAST._IType> _900___mcc_h11 = _source27.dtor_arguments;
        Dafny.ISequence<RAST._IType> _901_args = _900___mcc_h11;
        if ((_901_args).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()");
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IType>(_901_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_902_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_903_arg) => {
            return (_903_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_902_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
        }
      } else if (_source27.is_FnType) {
        Dafny.ISequence<RAST._IType> _904___mcc_h12 = _source27.dtor_arguments;
        RAST._IType _905___mcc_h13 = _source27.dtor_returnType;
        RAST._IType _906_returnType = _905___mcc_h13;
        Dafny.ISequence<RAST._IType> _907_arguments = _904___mcc_h12;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Fn("), RAST.__default.SeqToString<RAST._IType>(_907_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_908_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_909_arg) => {
          return (_909_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_908_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_906_returnType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      } else {
        RAST._IType _910___mcc_h14 = _source27.dtor_left;
        RAST._IType _911___mcc_h15 = _source27.dtor_right;
        RAST._IType _912_right = _911___mcc_h15;
        RAST._IType _913_left = _910___mcc_h14;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_913_left)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" + ")), (_912_right)._ToString(ind));
      }
    }
    public RAST._IType MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Type.create_TMemberSelect(this, name);
    }
    public RAST._IType Apply1(RAST._IType arg) {
      return RAST.Type.create_TypeApp(this, Dafny.Sequence<RAST._IType>.FromElements(arg));
    }
    public RAST._IType Apply(Dafny.ISequence<RAST._IType> args) {
      return RAST.Type.create_TypeApp(this, args);
    }
  }
  public class Type_SelfOwned : Type {
    public Type_SelfOwned() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_SelfOwned();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_SelfOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.SelfOwned";
      return s;
    }
  }
  public class Type_U8 : Type {
    public Type_U8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U8";
      return s;
    }
  }
  public class Type_U16 : Type {
    public Type_U16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U16";
      return s;
    }
  }
  public class Type_U32 : Type {
    public Type_U32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U32";
      return s;
    }
  }
  public class Type_U64 : Type {
    public Type_U64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U64";
      return s;
    }
  }
  public class Type_U128 : Type {
    public Type_U128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_U128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_U128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.U128";
      return s;
    }
  }
  public class Type_I8 : Type {
    public Type_I8() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I8();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I8;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I8";
      return s;
    }
  }
  public class Type_I16 : Type {
    public Type_I16() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I16();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I16;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I16";
      return s;
    }
  }
  public class Type_I32 : Type {
    public Type_I32() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I32();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I32;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I32";
      return s;
    }
  }
  public class Type_I64 : Type {
    public Type_I64() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I64();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I64;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I64";
      return s;
    }
  }
  public class Type_I128 : Type {
    public Type_I128() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_I128();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_I128;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.I128";
      return s;
    }
  }
  public class Type_Bool : Type {
    public Type_Bool() : base() {
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Bool();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Bool;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Bool";
      return s;
    }
  }
  public class Type_TIdentifier : Type {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TIdentifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TIdentifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TIdentifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TIdentifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TMemberSelect : Type {
    public readonly RAST._IType _base;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Type_TMemberSelect(RAST._IType @base, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._base = @base;
      this._name = name;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TMemberSelect(_base, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TMemberSelect;
      return oth != null && object.Equals(this._base, oth._base) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._base));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TMemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._base);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Type_TypeApp : Type {
    public readonly RAST._IType _baseName;
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TypeApp(RAST._IType baseName, Dafny.ISequence<RAST._IType> arguments) : base() {
      this._baseName = baseName;
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TypeApp(_baseName, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TypeApp;
      return oth != null && object.Equals(this._baseName, oth._baseName) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._baseName));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TypeApp";
      s += "(";
      s += Dafny.Helpers.ToString(this._baseName);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_Borrowed : Type {
    public readonly RAST._IType _underlying;
    public Type_Borrowed(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Borrowed(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Borrowed;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Borrowed";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_BorrowedMut : Type {
    public readonly RAST._IType _underlying;
    public Type_BorrowedMut(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_BorrowedMut(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_BorrowedMut;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.BorrowedMut";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_Pointer : Type {
    public readonly RAST._IType _underlying;
    public Type_Pointer(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_Pointer(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_Pointer;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.Pointer";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_PointerMut : Type {
    public readonly RAST._IType _underlying;
    public Type_PointerMut(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_PointerMut(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_PointerMut;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.PointerMut";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_ImplType : Type {
    public readonly RAST._IType _underlying;
    public Type_ImplType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_ImplType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_ImplType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.ImplType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_DynType : Type {
    public readonly RAST._IType _underlying;
    public Type_DynType(RAST._IType underlying) : base() {
      this._underlying = underlying;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_DynType(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_DynType;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.DynType";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Type_TupleType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public Type_TupleType(Dafny.ISequence<RAST._IType> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_TupleType(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_TupleType;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.TupleType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Type_FnType : Type {
    public readonly Dafny.ISequence<RAST._IType> _arguments;
    public readonly RAST._IType _returnType;
    public Type_FnType(Dafny.ISequence<RAST._IType> arguments, RAST._IType returnType) : base() {
      this._arguments = arguments;
      this._returnType = returnType;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_FnType(_arguments, _returnType);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_FnType;
      return oth != null && object.Equals(this._arguments, oth._arguments) && object.Equals(this._returnType, oth._returnType);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.FnType";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ")";
      return s;
    }
  }
  public class Type_IntersectionType : Type {
    public readonly RAST._IType _left;
    public readonly RAST._IType _right;
    public Type_IntersectionType(RAST._IType left, RAST._IType right) : base() {
      this._left = left;
      this._right = right;
    }
    public override _IType DowncastClone() {
      if (this is _IType dt) { return dt; }
      return new Type_IntersectionType(_left, _right);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Type_IntersectionType;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Type.IntersectionType";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ")";
      return s;
    }
  }

  public interface _ITrait {
    bool is_Trait { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _ITrait DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Trait : _ITrait {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public _ITrait DowncastClone() {
      if (this is _ITrait dt) { return dt; }
      return new Trait(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Trait;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Trait.Trait";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._ITrait theDefault = create(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._ITrait Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._ITrait> _TYPE = new Dafny.TypeDescriptor<RAST._ITrait>(RAST.Trait.Default());
    public static Dafny.TypeDescriptor<RAST._ITrait> _TypeDescriptor() {
      return _TYPE;
    }
    public static _ITrait create(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Trait(typeParams, tpe, @where, body);
    }
    public static _ITrait create_Trait(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return create(typeParams, tpe, @where, body);
    }
    public bool is_Trait { get { return true; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub trait "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_914_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_915_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _914_ind), RAST.__default.IND), (_915_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_914_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }

  public interface _IImpl {
    bool is_ImplFor { get; }
    bool is_Impl { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    RAST._IType dtor_tpe { get; }
    RAST._IType dtor_forType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Dafny.ISequence<RAST._IImplMember> dtor_body { get; }
    _IImpl DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class Impl : _IImpl {
    public Impl() {
    }
    private static readonly RAST._IImpl theDefault = create_ImplFor(Dafny.Sequence<RAST._ITypeParam>.Empty, RAST.Type.Default(), RAST.Type.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._IImplMember>.Empty);
    public static RAST._IImpl Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImpl> _TYPE = new Dafny.TypeDescriptor<RAST._IImpl>(RAST.Impl.Default());
    public static Dafny.TypeDescriptor<RAST._IImpl> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImpl create_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_ImplFor(typeParams, tpe, forType, @where, body);
    }
    public static _IImpl create_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) {
      return new Impl_Impl(typeParams, tpe, @where, body);
    }
    public bool is_ImplFor { get { return this is Impl_ImplFor; } }
    public bool is_Impl { get { return this is Impl_Impl; } }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._typeParams; }
        return ((Impl_Impl)d)._typeParams;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._tpe; }
        return ((Impl_Impl)d)._tpe;
      }
    }
    public RAST._IType dtor_forType {
      get {
        var d = this;
        return ((Impl_ImplFor)d)._forType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._where; }
        return ((Impl_Impl)d)._where;
      }
    }
    public Dafny.ISequence<RAST._IImplMember> dtor_body {
      get {
        var d = this;
        if (d is Impl_ImplFor) { return ((Impl_ImplFor)d)._body; }
        return ((Impl_Impl)d)._body;
      }
    }
    public abstract _IImpl DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl "), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), ((this).dtor_tpe)._ToString(ind)), (((this).is_ImplFor) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" for "), ((this).dtor_forType)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), ((!((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IImplMember>((this).dtor_body, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>>>((_916_ind) => ((System.Func<RAST._IImplMember, Dafny.ISequence<Dafny.Rune>>)((_917_member) => {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _916_ind), RAST.__default.IND), (_917_member)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_916_ind, RAST.__default.IND)));
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), (((new BigInteger(((this).dtor_body).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
    }
  }
  public class Impl_ImplFor : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly RAST._IType _forType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_ImplFor(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, RAST._IType forType, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._forType = forType;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_ImplFor(_typeParams, _tpe, _forType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_ImplFor;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._forType, oth._forType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._forType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.ImplFor";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += Dafny.Helpers.ToString(this._forType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Impl_Impl : Impl {
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly RAST._IType _tpe;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Dafny.ISequence<RAST._IImplMember> _body;
    public Impl_Impl(Dafny.ISequence<RAST._ITypeParam> typeParams, RAST._IType tpe, Dafny.ISequence<Dafny.Rune> @where, Dafny.ISequence<RAST._IImplMember> body) : base() {
      this._typeParams = typeParams;
      this._tpe = tpe;
      this._where = @where;
      this._body = body;
    }
    public override _IImpl DowncastClone() {
      if (this is _IImpl dt) { return dt; }
      return new Impl_Impl(_typeParams, _tpe, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Impl_Impl;
      return oth != null && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._tpe, oth._tpe) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Impl.Impl";
      s += "(";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }

  public interface _IImplMember {
    bool is_RawImplMember { get; }
    bool is_FnDecl { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IVisibility dtor_pub { get; }
    RAST._IFn dtor_fun { get; }
    _IImplMember DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public abstract class ImplMember : _IImplMember {
    public ImplMember() {
    }
    private static readonly RAST._IImplMember theDefault = create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IImplMember Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IImplMember> _TYPE = new Dafny.TypeDescriptor<RAST._IImplMember>(RAST.ImplMember.Default());
    public static Dafny.TypeDescriptor<RAST._IImplMember> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IImplMember create_RawImplMember(Dafny.ISequence<Dafny.Rune> content) {
      return new ImplMember_RawImplMember(content);
    }
    public static _IImplMember create_FnDecl(RAST._IVisibility pub, RAST._IFn fun) {
      return new ImplMember_FnDecl(pub, fun);
    }
    public bool is_RawImplMember { get { return this is ImplMember_RawImplMember; } }
    public bool is_FnDecl { get { return this is ImplMember_FnDecl; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((ImplMember_RawImplMember)d)._content;
      }
    }
    public RAST._IVisibility dtor_pub {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._pub;
      }
    }
    public RAST._IFn dtor_fun {
      get {
        var d = this;
        return ((ImplMember_FnDecl)d)._fun;
      }
    }
    public abstract _IImplMember DowncastClone();
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((this).is_FnDecl) {
        return Dafny.Sequence<Dafny.Rune>.Concat(((object.Equals((this).dtor_pub, RAST.Visibility.create_PUB())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), ((this).dtor_fun)._ToString(ind));
      } else {
        return (this).dtor_content;
      }
    }
  }
  public class ImplMember_RawImplMember : ImplMember {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public ImplMember_RawImplMember(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_RawImplMember(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_RawImplMember;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.RawImplMember";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class ImplMember_FnDecl : ImplMember {
    public readonly RAST._IVisibility _pub;
    public readonly RAST._IFn _fun;
    public ImplMember_FnDecl(RAST._IVisibility pub, RAST._IFn fun) : base() {
      this._pub = pub;
      this._fun = fun;
    }
    public override _IImplMember DowncastClone() {
      if (this is _IImplMember dt) { return dt; }
      return new ImplMember_FnDecl(_pub, _fun);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.ImplMember_FnDecl;
      return oth != null && object.Equals(this._pub, oth._pub) && object.Equals(this._fun, oth._fun);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pub));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._fun));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.ImplMember.FnDecl";
      s += "(";
      s += Dafny.Helpers.ToString(this._pub);
      s += ", ";
      s += Dafny.Helpers.ToString(this._fun);
      s += ")";
      return s;
    }
  }

  public interface _IVisibility {
    bool is_PUB { get; }
    bool is_PRIV { get; }
    _IVisibility DowncastClone();
  }
  public abstract class Visibility : _IVisibility {
    public Visibility() {
    }
    private static readonly RAST._IVisibility theDefault = create_PUB();
    public static RAST._IVisibility Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IVisibility> _TYPE = new Dafny.TypeDescriptor<RAST._IVisibility>(RAST.Visibility.Default());
    public static Dafny.TypeDescriptor<RAST._IVisibility> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IVisibility create_PUB() {
      return new Visibility_PUB();
    }
    public static _IVisibility create_PRIV() {
      return new Visibility_PRIV();
    }
    public bool is_PUB { get { return this is Visibility_PUB; } }
    public bool is_PRIV { get { return this is Visibility_PRIV; } }
    public static System.Collections.Generic.IEnumerable<_IVisibility> AllSingletonConstructors {
      get {
        yield return Visibility.create_PUB();
        yield return Visibility.create_PRIV();
      }
    }
    public abstract _IVisibility DowncastClone();
  }
  public class Visibility_PUB : Visibility {
    public Visibility_PUB() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PUB();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PUB;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PUB";
      return s;
    }
  }
  public class Visibility_PRIV : Visibility {
    public Visibility_PRIV() : base() {
    }
    public override _IVisibility DowncastClone() {
      if (this is _IVisibility dt) { return dt; }
      return new Visibility_PRIV();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Visibility_PRIV;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Visibility.PRIV";
      return s;
    }
  }

  public interface _IFormal {
    bool is_Formal { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IType dtor_tpe { get; }
    _IFormal DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Formal : _IFormal {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IType _tpe;
    public Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      this._name = name;
      this._tpe = tpe;
    }
    public _IFormal DowncastClone() {
      if (this is _IFormal dt) { return dt; }
      return new Formal(_name, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Formal;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Formal.Formal";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
    private static readonly RAST._IFormal theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Type.Default());
    public static RAST._IFormal Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFormal> _TYPE = new Dafny.TypeDescriptor<RAST._IFormal>(RAST.Formal.Default());
    public static Dafny.TypeDescriptor<RAST._IFormal> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFormal create(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return new Formal(name, tpe);
    }
    public static _IFormal create_Formal(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe) {
      return create(name, tpe);
    }
    public bool is_Formal { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        return this._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && (((this).dtor_tpe).is_SelfOwned)) {
        return (this).dtor_name;
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self"))) && (object.Equals((this).dtor_tpe, RAST.Type.create_Borrowed(RAST.Type.create_SelfOwned())))) {
        return (this).dtor_name;
      } else if ((((this).dtor_name).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut self"))) && (object.Equals((this).dtor_tpe, RAST.Type.create_Borrowed(RAST.__default.SelfBorrowedMut)))) {
        return (this).dtor_name;
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_name, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_tpe)._ToString(ind));
      }
    }
    public static RAST._IFormal selfBorrowed { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self"), RAST.__default.SelfBorrowed);
    } }
    public static RAST._IFormal selfOwned { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_SelfOwned());
    } }
    public static RAST._IFormal selfMut { get {
      return RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut self"), RAST.__default.SelfBorrowedMut);
    } }
  }

  public interface _IPattern {
    bool is_RawPattern { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
  }
  public class Pattern : _IPattern {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Pattern(Dafny.ISequence<Dafny.Rune> content) {
      this._content = content;
    }
    public static Dafny.ISequence<Dafny.Rune> DowncastClone(Dafny.ISequence<Dafny.Rune> _this) {
      return _this;
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Pattern;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Pattern.RawPattern";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
    private static readonly Dafny.ISequence<Dafny.Rune> theDefault = Dafny.Sequence<Dafny.Rune>.Empty;
    public static Dafny.ISequence<Dafny.Rune> Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TYPE = new Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>>(Dafny.Sequence<Dafny.Rune>.Empty);
    public static Dafny.TypeDescriptor<Dafny.ISequence<Dafny.Rune>> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPattern create(Dafny.ISequence<Dafny.Rune> content) {
      return new Pattern(content);
    }
    public static _IPattern create_RawPattern(Dafny.ISequence<Dafny.Rune> content) {
      return create(content);
    }
    public bool is_RawPattern { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        return this._content;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> _this, Dafny.ISequence<Dafny.Rune> ind) {
      return (_this);
    }
  }

  public interface _IMatchCase {
    bool is_MatchCase { get; }
    Dafny.ISequence<Dafny.Rune> dtor_pattern { get; }
    RAST._IExpr dtor_rhs { get; }
    _IMatchCase DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class MatchCase : _IMatchCase {
    public readonly Dafny.ISequence<Dafny.Rune> _pattern;
    public readonly RAST._IExpr _rhs;
    public MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      this._pattern = pattern;
      this._rhs = rhs;
    }
    public _IMatchCase DowncastClone() {
      if (this is _IMatchCase dt) { return dt; }
      return new MatchCase(_pattern, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.MatchCase;
      return oth != null && object.Equals(this._pattern, oth._pattern) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._pattern));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.MatchCase.MatchCase";
      s += "(";
      s += Dafny.Helpers.ToString(this._pattern);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IMatchCase theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IMatchCase Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IMatchCase> _TYPE = new Dafny.TypeDescriptor<RAST._IMatchCase>(RAST.MatchCase.Default());
    public static Dafny.TypeDescriptor<RAST._IMatchCase> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IMatchCase create(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return new MatchCase(pattern, rhs);
    }
    public static _IMatchCase create_MatchCase(Dafny.ISequence<Dafny.Rune> pattern, RAST._IExpr rhs) {
      return create(pattern, rhs);
    }
    public bool is_MatchCase { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_pattern {
      get {
        return this._pattern;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      Dafny.ISequence<Dafny.Rune> _918_newIndent = ((((this).dtor_rhs).is_Block) ? (ind) : (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
      Dafny.ISequence<Dafny.Rune> _919_rhsString = ((this).dtor_rhs)._ToString(_918_newIndent);
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(RAST.Pattern._ToString((this).dtor_pattern, ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" =>")), ((((_919_rhsString).Contains(new Dafny.Rune('\n'))) && (((_919_rhsString).Select(BigInteger.Zero)) != (new Dafny.Rune('{')))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), _919_rhsString)) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _919_rhsString))));
    }
  }

  public interface _IAssignIdentifier {
    bool is_AssignIdentifier { get; }
    Dafny.ISequence<Dafny.Rune> dtor_identifier { get; }
    RAST._IExpr dtor_rhs { get; }
    _IAssignIdentifier DowncastClone();
    BigInteger Height();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class AssignIdentifier : _IAssignIdentifier {
    public readonly Dafny.ISequence<Dafny.Rune> _identifier;
    public readonly RAST._IExpr _rhs;
    public AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      this._identifier = identifier;
      this._rhs = rhs;
    }
    public _IAssignIdentifier DowncastClone() {
      if (this is _IAssignIdentifier dt) { return dt; }
      return new AssignIdentifier(_identifier, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.AssignIdentifier;
      return oth != null && object.Equals(this._identifier, oth._identifier) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._identifier));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.AssignIdentifier.AssignIdentifier";
      s += "(";
      s += this._identifier.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
    private static readonly RAST._IAssignIdentifier theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, RAST.Expr.Default());
    public static RAST._IAssignIdentifier Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TYPE = new Dafny.TypeDescriptor<RAST._IAssignIdentifier>(RAST.AssignIdentifier.Default());
    public static Dafny.TypeDescriptor<RAST._IAssignIdentifier> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssignIdentifier create(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return new AssignIdentifier(identifier, rhs);
    }
    public static _IAssignIdentifier create_AssignIdentifier(Dafny.ISequence<Dafny.Rune> identifier, RAST._IExpr rhs) {
      return create(identifier, rhs);
    }
    public bool is_AssignIdentifier { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_identifier {
      get {
        return this._identifier;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        return this._rhs;
      }
    }
    public BigInteger Height() {
      return (BigInteger.One) + (((this).dtor_rhs).Height());
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((this).dtor_identifier, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), ((this).dtor_rhs)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)));
    }
  }

  public interface _IDeclareType {
    bool is_MUT { get; }
    bool is_CONST { get; }
    _IDeclareType DowncastClone();
  }
  public abstract class DeclareType : _IDeclareType {
    public DeclareType() {
    }
    private static readonly RAST._IDeclareType theDefault = create_MUT();
    public static RAST._IDeclareType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IDeclareType> _TYPE = new Dafny.TypeDescriptor<RAST._IDeclareType>(RAST.DeclareType.Default());
    public static Dafny.TypeDescriptor<RAST._IDeclareType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IDeclareType create_MUT() {
      return new DeclareType_MUT();
    }
    public static _IDeclareType create_CONST() {
      return new DeclareType_CONST();
    }
    public bool is_MUT { get { return this is DeclareType_MUT; } }
    public bool is_CONST { get { return this is DeclareType_CONST; } }
    public static System.Collections.Generic.IEnumerable<_IDeclareType> AllSingletonConstructors {
      get {
        yield return DeclareType.create_MUT();
        yield return DeclareType.create_CONST();
      }
    }
    public abstract _IDeclareType DowncastClone();
  }
  public class DeclareType_MUT : DeclareType {
    public DeclareType_MUT() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_MUT();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_MUT;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.MUT";
      return s;
    }
  }
  public class DeclareType_CONST : DeclareType {
    public DeclareType_CONST() : base() {
    }
    public override _IDeclareType DowncastClone() {
      if (this is _IDeclareType dt) { return dt; }
      return new DeclareType_CONST();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.DeclareType_CONST;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.DeclareType.CONST";
      return s;
    }
  }

  public interface _IAssociativity {
    bool is_LeftToRight { get; }
    bool is_RightToLeft { get; }
    bool is_RequiresParentheses { get; }
    _IAssociativity DowncastClone();
  }
  public abstract class Associativity : _IAssociativity {
    public Associativity() {
    }
    private static readonly RAST._IAssociativity theDefault = create_LeftToRight();
    public static RAST._IAssociativity Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IAssociativity> _TYPE = new Dafny.TypeDescriptor<RAST._IAssociativity>(RAST.Associativity.Default());
    public static Dafny.TypeDescriptor<RAST._IAssociativity> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IAssociativity create_LeftToRight() {
      return new Associativity_LeftToRight();
    }
    public static _IAssociativity create_RightToLeft() {
      return new Associativity_RightToLeft();
    }
    public static _IAssociativity create_RequiresParentheses() {
      return new Associativity_RequiresParentheses();
    }
    public bool is_LeftToRight { get { return this is Associativity_LeftToRight; } }
    public bool is_RightToLeft { get { return this is Associativity_RightToLeft; } }
    public bool is_RequiresParentheses { get { return this is Associativity_RequiresParentheses; } }
    public static System.Collections.Generic.IEnumerable<_IAssociativity> AllSingletonConstructors {
      get {
        yield return Associativity.create_LeftToRight();
        yield return Associativity.create_RightToLeft();
        yield return Associativity.create_RequiresParentheses();
      }
    }
    public abstract _IAssociativity DowncastClone();
  }
  public class Associativity_LeftToRight : Associativity {
    public Associativity_LeftToRight() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_LeftToRight();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_LeftToRight;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.LeftToRight";
      return s;
    }
  }
  public class Associativity_RightToLeft : Associativity {
    public Associativity_RightToLeft() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RightToLeft();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RightToLeft;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RightToLeft";
      return s;
    }
  }
  public class Associativity_RequiresParentheses : Associativity {
    public Associativity_RequiresParentheses() : base() {
    }
    public override _IAssociativity DowncastClone() {
      if (this is _IAssociativity dt) { return dt; }
      return new Associativity_RequiresParentheses();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Associativity_RequiresParentheses;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Associativity.RequiresParentheses";
      return s;
    }
  }

  public interface _IPrintingInfo {
    bool is_UnknownPrecedence { get; }
    bool is_Precedence { get; }
    bool is_SuffixPrecedence { get; }
    bool is_PrecedenceAssociativity { get; }
    BigInteger dtor_precedence { get; }
    RAST._IAssociativity dtor_associativity { get; }
    _IPrintingInfo DowncastClone();
    bool NeedParenthesesFor(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying);
    bool NeedParenthesesForRight(RAST._IPrintingInfo underlying);
  }
  public abstract class PrintingInfo : _IPrintingInfo {
    public PrintingInfo() {
    }
    private static readonly RAST._IPrintingInfo theDefault = create_UnknownPrecedence();
    public static RAST._IPrintingInfo Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IPrintingInfo> _TYPE = new Dafny.TypeDescriptor<RAST._IPrintingInfo>(RAST.PrintingInfo.Default());
    public static Dafny.TypeDescriptor<RAST._IPrintingInfo> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IPrintingInfo create_UnknownPrecedence() {
      return new PrintingInfo_UnknownPrecedence();
    }
    public static _IPrintingInfo create_Precedence(BigInteger precedence) {
      return new PrintingInfo_Precedence(precedence);
    }
    public static _IPrintingInfo create_SuffixPrecedence(BigInteger precedence) {
      return new PrintingInfo_SuffixPrecedence(precedence);
    }
    public static _IPrintingInfo create_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) {
      return new PrintingInfo_PrecedenceAssociativity(precedence, associativity);
    }
    public bool is_UnknownPrecedence { get { return this is PrintingInfo_UnknownPrecedence; } }
    public bool is_Precedence { get { return this is PrintingInfo_Precedence; } }
    public bool is_SuffixPrecedence { get { return this is PrintingInfo_SuffixPrecedence; } }
    public bool is_PrecedenceAssociativity { get { return this is PrintingInfo_PrecedenceAssociativity; } }
    public BigInteger dtor_precedence {
      get {
        var d = this;
        if (d is PrintingInfo_Precedence) { return ((PrintingInfo_Precedence)d)._precedence; }
        if (d is PrintingInfo_SuffixPrecedence) { return ((PrintingInfo_SuffixPrecedence)d)._precedence; }
        return ((PrintingInfo_PrecedenceAssociativity)d)._precedence;
      }
    }
    public RAST._IAssociativity dtor_associativity {
      get {
        var d = this;
        return ((PrintingInfo_PrecedenceAssociativity)d)._associativity;
      }
    }
    public abstract _IPrintingInfo DowncastClone();
    public bool NeedParenthesesFor(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return true;
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForLeft(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_LeftToRight));
      } else {
        return false;
      }
    }
    public bool NeedParenthesesForRight(RAST._IPrintingInfo underlying) {
      if ((this).is_UnknownPrecedence) {
        return true;
      } else if ((underlying).is_UnknownPrecedence) {
        return true;
      } else if (((this).dtor_precedence) <= ((underlying).dtor_precedence)) {
        return ((((this).dtor_precedence) < ((underlying).dtor_precedence)) || (!((this).is_PrecedenceAssociativity))) || (!(((this).dtor_associativity).is_RightToLeft));
      } else {
        return false;
      }
    }
  }
  public class PrintingInfo_UnknownPrecedence : PrintingInfo {
    public PrintingInfo_UnknownPrecedence() : base() {
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_UnknownPrecedence();
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_UnknownPrecedence;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.UnknownPrecedence";
      return s;
    }
  }
  public class PrintingInfo_Precedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_Precedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_Precedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_Precedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.Precedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_SuffixPrecedence : PrintingInfo {
    public readonly BigInteger _precedence;
    public PrintingInfo_SuffixPrecedence(BigInteger precedence) : base() {
      this._precedence = precedence;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_SuffixPrecedence(_precedence);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_SuffixPrecedence;
      return oth != null && this._precedence == oth._precedence;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.SuffixPrecedence";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ")";
      return s;
    }
  }
  public class PrintingInfo_PrecedenceAssociativity : PrintingInfo {
    public readonly BigInteger _precedence;
    public readonly RAST._IAssociativity _associativity;
    public PrintingInfo_PrecedenceAssociativity(BigInteger precedence, RAST._IAssociativity associativity) : base() {
      this._precedence = precedence;
      this._associativity = associativity;
    }
    public override _IPrintingInfo DowncastClone() {
      if (this is _IPrintingInfo dt) { return dt; }
      return new PrintingInfo_PrecedenceAssociativity(_precedence, _associativity);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.PrintingInfo_PrecedenceAssociativity;
      return oth != null && this._precedence == oth._precedence && object.Equals(this._associativity, oth._associativity);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._precedence));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._associativity));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.PrintingInfo.PrecedenceAssociativity";
      s += "(";
      s += Dafny.Helpers.ToString(this._precedence);
      s += ", ";
      s += Dafny.Helpers.ToString(this._associativity);
      s += ")";
      return s;
    }
  }

  public interface _IExpr {
    bool is_RawExpr { get; }
    bool is_ExprFromType { get; }
    bool is_Identifier { get; }
    bool is_Match { get; }
    bool is_StmtExpr { get; }
    bool is_Block { get; }
    bool is_StructBuild { get; }
    bool is_Tuple { get; }
    bool is_UnaryOp { get; }
    bool is_BinaryOp { get; }
    bool is_TypeAscription { get; }
    bool is_LiteralInt { get; }
    bool is_LiteralBool { get; }
    bool is_LiteralString { get; }
    bool is_DeclareVar { get; }
    bool is_Assign { get; }
    bool is_IfExpr { get; }
    bool is_Loop { get; }
    bool is_For { get; }
    bool is_Labelled { get; }
    bool is_Break { get; }
    bool is_Continue { get; }
    bool is_Return { get; }
    bool is_CallType { get; }
    bool is_Call { get; }
    bool is_Select { get; }
    bool is_MemberSelect { get; }
    Dafny.ISequence<Dafny.Rune> dtor_content { get; }
    RAST._IType dtor_tpe { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    RAST._IExpr dtor_matchee { get; }
    Dafny.ISequence<RAST._IMatchCase> dtor_cases { get; }
    RAST._IExpr dtor_stmt { get; }
    RAST._IExpr dtor_rhs { get; }
    RAST._IExpr dtor_underlying { get; }
    Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments { get; }
    Dafny.ISequence<RAST._IExpr> dtor_arguments { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op1 { get; }
    DAST.Format._IUnOpFormat dtor_format { get; }
    Dafny.ISequence<Dafny.Rune> dtor_op2 { get; }
    RAST._IExpr dtor_left { get; }
    RAST._IExpr dtor_right { get; }
    DAST.Format._IBinOpFormat dtor_format2 { get; }
    Dafny.ISequence<Dafny.Rune> dtor_value { get; }
    bool dtor_bvalue { get; }
    bool dtor_binary { get; }
    RAST._IDeclareType dtor_declareType { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_optType { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    RAST._IExpr dtor_cond { get; }
    RAST._IExpr dtor_thn { get; }
    RAST._IExpr dtor_els { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optCond { get; }
    RAST._IExpr dtor_range { get; }
    RAST._IExpr dtor_body { get; }
    Dafny.ISequence<Dafny.Rune> dtor_lbl { get; }
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr { get; }
    RAST._IExpr dtor_obj { get; }
    Dafny.ISequence<RAST._IType> dtor_typeParameters { get; }
    _IExpr DowncastClone();
    bool NoExtraSemicolonAfter();
    RAST._IPrintingInfo printingInfo { get; }
    BigInteger Height();
    RAST._IExpr Optimize();
    bool LeftRequiresParentheses(RAST._IExpr left);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left);
    bool RightRequiresParentheses(RAST._IExpr right);
    _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right);
    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
    RAST._IExpr Then(RAST._IExpr rhs2);
    RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name);
    RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters);
    RAST._IExpr ApplyType1(RAST._IType typeParameter);
    RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments);
    RAST._IExpr Apply1(RAST._IExpr argument);
  }
  public abstract class Expr : _IExpr {
    public Expr() {
    }
    private static readonly RAST._IExpr theDefault = create_RawExpr(Dafny.Sequence<Dafny.Rune>.Empty);
    public static RAST._IExpr Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IExpr> _TYPE = new Dafny.TypeDescriptor<RAST._IExpr>(RAST.Expr.Default());
    public static Dafny.TypeDescriptor<RAST._IExpr> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IExpr create_RawExpr(Dafny.ISequence<Dafny.Rune> content) {
      return new Expr_RawExpr(content);
    }
    public static _IExpr create_ExprFromType(RAST._IType tpe) {
      return new Expr_ExprFromType(tpe);
    }
    public static _IExpr create_Identifier(Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Identifier(name);
    }
    public static _IExpr create_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) {
      return new Expr_Match(matchee, cases);
    }
    public static _IExpr create_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) {
      return new Expr_StmtExpr(stmt, rhs);
    }
    public static _IExpr create_Block(RAST._IExpr underlying) {
      return new Expr_Block(underlying);
    }
    public static _IExpr create_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) {
      return new Expr_StructBuild(underlying, assignments);
    }
    public static _IExpr create_Tuple(Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Tuple(arguments);
    }
    public static _IExpr create_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) {
      return new Expr_UnaryOp(op1, underlying, format);
    }
    public static _IExpr create_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) {
      return new Expr_BinaryOp(op2, left, right, format2);
    }
    public static _IExpr create_TypeAscription(RAST._IExpr left, RAST._IType tpe) {
      return new Expr_TypeAscription(left, tpe);
    }
    public static _IExpr create_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) {
      return new Expr_LiteralInt(@value);
    }
    public static _IExpr create_LiteralBool(bool bvalue) {
      return new Expr_LiteralBool(bvalue);
    }
    public static _IExpr create_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) {
      return new Expr_LiteralString(@value, binary);
    }
    public static _IExpr create_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) {
      return new Expr_DeclareVar(declareType, name, optType, optRhs);
    }
    public static _IExpr create_Assign(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, RAST._IExpr rhs) {
      return new Expr_Assign(names, rhs);
    }
    public static _IExpr create_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) {
      return new Expr_IfExpr(cond, thn, els);
    }
    public static _IExpr create_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) {
      return new Expr_Loop(optCond, underlying);
    }
    public static _IExpr create_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) {
      return new Expr_For(name, range, body);
    }
    public static _IExpr create_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) {
      return new Expr_Labelled(lbl, underlying);
    }
    public static _IExpr create_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Break(optLbl);
    }
    public static _IExpr create_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) {
      return new Expr_Continue(optLbl);
    }
    public static _IExpr create_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) {
      return new Expr_Return(optExpr);
    }
    public static _IExpr create_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) {
      return new Expr_CallType(obj, typeParameters);
    }
    public static _IExpr create_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) {
      return new Expr_Call(obj, arguments);
    }
    public static _IExpr create_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_Select(obj, name);
    }
    public static _IExpr create_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) {
      return new Expr_MemberSelect(obj, name);
    }
    public bool is_RawExpr { get { return this is Expr_RawExpr; } }
    public bool is_ExprFromType { get { return this is Expr_ExprFromType; } }
    public bool is_Identifier { get { return this is Expr_Identifier; } }
    public bool is_Match { get { return this is Expr_Match; } }
    public bool is_StmtExpr { get { return this is Expr_StmtExpr; } }
    public bool is_Block { get { return this is Expr_Block; } }
    public bool is_StructBuild { get { return this is Expr_StructBuild; } }
    public bool is_Tuple { get { return this is Expr_Tuple; } }
    public bool is_UnaryOp { get { return this is Expr_UnaryOp; } }
    public bool is_BinaryOp { get { return this is Expr_BinaryOp; } }
    public bool is_TypeAscription { get { return this is Expr_TypeAscription; } }
    public bool is_LiteralInt { get { return this is Expr_LiteralInt; } }
    public bool is_LiteralBool { get { return this is Expr_LiteralBool; } }
    public bool is_LiteralString { get { return this is Expr_LiteralString; } }
    public bool is_DeclareVar { get { return this is Expr_DeclareVar; } }
    public bool is_Assign { get { return this is Expr_Assign; } }
    public bool is_IfExpr { get { return this is Expr_IfExpr; } }
    public bool is_Loop { get { return this is Expr_Loop; } }
    public bool is_For { get { return this is Expr_For; } }
    public bool is_Labelled { get { return this is Expr_Labelled; } }
    public bool is_Break { get { return this is Expr_Break; } }
    public bool is_Continue { get { return this is Expr_Continue; } }
    public bool is_Return { get { return this is Expr_Return; } }
    public bool is_CallType { get { return this is Expr_CallType; } }
    public bool is_Call { get { return this is Expr_Call; } }
    public bool is_Select { get { return this is Expr_Select; } }
    public bool is_MemberSelect { get { return this is Expr_MemberSelect; } }
    public Dafny.ISequence<Dafny.Rune> dtor_content {
      get {
        var d = this;
        return ((Expr_RawExpr)d)._content;
      }
    }
    public RAST._IType dtor_tpe {
      get {
        var d = this;
        if (d is Expr_ExprFromType) { return ((Expr_ExprFromType)d)._tpe; }
        return ((Expr_TypeAscription)d)._tpe;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        var d = this;
        if (d is Expr_Identifier) { return ((Expr_Identifier)d)._name; }
        if (d is Expr_DeclareVar) { return ((Expr_DeclareVar)d)._name; }
        if (d is Expr_For) { return ((Expr_For)d)._name; }
        if (d is Expr_Select) { return ((Expr_Select)d)._name; }
        return ((Expr_MemberSelect)d)._name;
      }
    }
    public RAST._IExpr dtor_matchee {
      get {
        var d = this;
        return ((Expr_Match)d)._matchee;
      }
    }
    public Dafny.ISequence<RAST._IMatchCase> dtor_cases {
      get {
        var d = this;
        return ((Expr_Match)d)._cases;
      }
    }
    public RAST._IExpr dtor_stmt {
      get {
        var d = this;
        return ((Expr_StmtExpr)d)._stmt;
      }
    }
    public RAST._IExpr dtor_rhs {
      get {
        var d = this;
        if (d is Expr_StmtExpr) { return ((Expr_StmtExpr)d)._rhs; }
        return ((Expr_Assign)d)._rhs;
      }
    }
    public RAST._IExpr dtor_underlying {
      get {
        var d = this;
        if (d is Expr_Block) { return ((Expr_Block)d)._underlying; }
        if (d is Expr_StructBuild) { return ((Expr_StructBuild)d)._underlying; }
        if (d is Expr_UnaryOp) { return ((Expr_UnaryOp)d)._underlying; }
        if (d is Expr_Loop) { return ((Expr_Loop)d)._underlying; }
        return ((Expr_Labelled)d)._underlying;
      }
    }
    public Dafny.ISequence<RAST._IAssignIdentifier> dtor_assignments {
      get {
        var d = this;
        return ((Expr_StructBuild)d)._assignments;
      }
    }
    public Dafny.ISequence<RAST._IExpr> dtor_arguments {
      get {
        var d = this;
        if (d is Expr_Tuple) { return ((Expr_Tuple)d)._arguments; }
        return ((Expr_Call)d)._arguments;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op1 {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._op1;
      }
    }
    public DAST.Format._IUnOpFormat dtor_format {
      get {
        var d = this;
        return ((Expr_UnaryOp)d)._format;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_op2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._op2;
      }
    }
    public RAST._IExpr dtor_left {
      get {
        var d = this;
        if (d is Expr_BinaryOp) { return ((Expr_BinaryOp)d)._left; }
        return ((Expr_TypeAscription)d)._left;
      }
    }
    public RAST._IExpr dtor_right {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._right;
      }
    }
    public DAST.Format._IBinOpFormat dtor_format2 {
      get {
        var d = this;
        return ((Expr_BinaryOp)d)._format2;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_value {
      get {
        var d = this;
        if (d is Expr_LiteralInt) { return ((Expr_LiteralInt)d)._value; }
        return ((Expr_LiteralString)d)._value;
      }
    }
    public bool dtor_bvalue {
      get {
        var d = this;
        return ((Expr_LiteralBool)d)._bvalue;
      }
    }
    public bool dtor_binary {
      get {
        var d = this;
        return ((Expr_LiteralString)d)._binary;
      }
    }
    public RAST._IDeclareType dtor_declareType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._declareType;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_optType {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optType;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optRhs {
      get {
        var d = this;
        return ((Expr_DeclareVar)d)._optRhs;
      }
    }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        var d = this;
        return ((Expr_Assign)d)._names;
      }
    }
    public RAST._IExpr dtor_cond {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._cond;
      }
    }
    public RAST._IExpr dtor_thn {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._thn;
      }
    }
    public RAST._IExpr dtor_els {
      get {
        var d = this;
        return ((Expr_IfExpr)d)._els;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optCond {
      get {
        var d = this;
        return ((Expr_Loop)d)._optCond;
      }
    }
    public RAST._IExpr dtor_range {
      get {
        var d = this;
        return ((Expr_For)d)._range;
      }
    }
    public RAST._IExpr dtor_body {
      get {
        var d = this;
        return ((Expr_For)d)._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_lbl {
      get {
        var d = this;
        return ((Expr_Labelled)d)._lbl;
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> dtor_optLbl {
      get {
        var d = this;
        if (d is Expr_Break) { return ((Expr_Break)d)._optLbl; }
        return ((Expr_Continue)d)._optLbl;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_optExpr {
      get {
        var d = this;
        return ((Expr_Return)d)._optExpr;
      }
    }
    public RAST._IExpr dtor_obj {
      get {
        var d = this;
        if (d is Expr_CallType) { return ((Expr_CallType)d)._obj; }
        if (d is Expr_Call) { return ((Expr_Call)d)._obj; }
        if (d is Expr_Select) { return ((Expr_Select)d)._obj; }
        return ((Expr_MemberSelect)d)._obj;
      }
    }
    public Dafny.ISequence<RAST._IType> dtor_typeParameters {
      get {
        var d = this;
        return ((Expr_CallType)d)._typeParameters;
      }
    }
    public abstract _IExpr DowncastClone();
    public bool NoExtraSemicolonAfter() {
      return ((((((this).is_DeclareVar) || ((this).is_Assign)) || ((this).is_Break)) || ((this).is_Continue)) || ((this).is_Return)) || ((((this).is_RawExpr) && ((new BigInteger(((this).dtor_content).Count)).Sign == 1)) && ((((this).dtor_content).Select((new BigInteger(((this).dtor_content).Count)) - (BigInteger.One))) == (new Dafny.Rune(';'))));
    }
    public BigInteger Height() {
      RAST._IExpr _source28 = this;
      if (_source28.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _920___mcc_h0 = _source28.dtor_content;
        return BigInteger.One;
      } else if (_source28.is_ExprFromType) {
        RAST._IType _921___mcc_h2 = _source28.dtor_tpe;
        return BigInteger.One;
      } else if (_source28.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _922___mcc_h4 = _source28.dtor_name;
        return BigInteger.One;
      } else if (_source28.is_Match) {
        RAST._IExpr _923___mcc_h6 = _source28.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _924___mcc_h7 = _source28.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _925_cases = _924___mcc_h7;
        RAST._IExpr _926_matchee = _923___mcc_h6;
        return (BigInteger.One) + (RAST.__default.max((_926_matchee).Height(), DAST.Format.__default.SeqToHeight<RAST._IMatchCase>(_925_cases, ((System.Func<RAST._IMatchCase, BigInteger>)((_927_oneCase) => {
          return (_927_oneCase).Height();
        })))));
      } else if (_source28.is_StmtExpr) {
        RAST._IExpr _928___mcc_h10 = _source28.dtor_stmt;
        RAST._IExpr _929___mcc_h11 = _source28.dtor_rhs;
        RAST._IExpr _930_rhs = _929___mcc_h11;
        RAST._IExpr _931_stmt = _928___mcc_h10;
        BigInteger _932_default = (BigInteger.One) + (RAST.__default.max((_931_stmt).Height(), (_930_rhs).Height()));
        RAST._IExpr _source29 = this;
        if (_source29.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _933___mcc_h102 = _source29.dtor_content;
          return _932_default;
        } else if (_source29.is_ExprFromType) {
          RAST._IType _934___mcc_h104 = _source29.dtor_tpe;
          return _932_default;
        } else if (_source29.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _935___mcc_h106 = _source29.dtor_name;
          return _932_default;
        } else if (_source29.is_Match) {
          RAST._IExpr _936___mcc_h108 = _source29.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _937___mcc_h109 = _source29.dtor_cases;
          return _932_default;
        } else if (_source29.is_StmtExpr) {
          RAST._IExpr _938___mcc_h112 = _source29.dtor_stmt;
          RAST._IExpr _939___mcc_h113 = _source29.dtor_rhs;
          RAST._IExpr _source30 = _938___mcc_h112;
          if (_source30.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _940___mcc_h116 = _source30.dtor_content;
            return _932_default;
          } else if (_source30.is_ExprFromType) {
            RAST._IType _941___mcc_h118 = _source30.dtor_tpe;
            return _932_default;
          } else if (_source30.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _942___mcc_h120 = _source30.dtor_name;
            return _932_default;
          } else if (_source30.is_Match) {
            RAST._IExpr _943___mcc_h122 = _source30.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _944___mcc_h123 = _source30.dtor_cases;
            return _932_default;
          } else if (_source30.is_StmtExpr) {
            RAST._IExpr _945___mcc_h126 = _source30.dtor_stmt;
            RAST._IExpr _946___mcc_h127 = _source30.dtor_rhs;
            return _932_default;
          } else if (_source30.is_Block) {
            RAST._IExpr _947___mcc_h130 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_StructBuild) {
            RAST._IExpr _948___mcc_h132 = _source30.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _949___mcc_h133 = _source30.dtor_assignments;
            return _932_default;
          } else if (_source30.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _950___mcc_h136 = _source30.dtor_arguments;
            return _932_default;
          } else if (_source30.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _951___mcc_h138 = _source30.dtor_op1;
            RAST._IExpr _952___mcc_h139 = _source30.dtor_underlying;
            DAST.Format._IUnOpFormat _953___mcc_h140 = _source30.dtor_format;
            return _932_default;
          } else if (_source30.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _954___mcc_h144 = _source30.dtor_op2;
            RAST._IExpr _955___mcc_h145 = _source30.dtor_left;
            RAST._IExpr _956___mcc_h146 = _source30.dtor_right;
            DAST.Format._IBinOpFormat _957___mcc_h147 = _source30.dtor_format2;
            return _932_default;
          } else if (_source30.is_TypeAscription) {
            RAST._IExpr _958___mcc_h152 = _source30.dtor_left;
            RAST._IType _959___mcc_h153 = _source30.dtor_tpe;
            return _932_default;
          } else if (_source30.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _960___mcc_h156 = _source30.dtor_value;
            return _932_default;
          } else if (_source30.is_LiteralBool) {
            bool _961___mcc_h158 = _source30.dtor_bvalue;
            return _932_default;
          } else if (_source30.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _962___mcc_h160 = _source30.dtor_value;
            bool _963___mcc_h161 = _source30.dtor_binary;
            return _932_default;
          } else if (_source30.is_DeclareVar) {
            RAST._IDeclareType _964___mcc_h164 = _source30.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _965___mcc_h165 = _source30.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _966___mcc_h166 = _source30.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _967___mcc_h167 = _source30.dtor_optRhs;
            Std.Wrappers._IOption<RAST._IType> _source31 = _966___mcc_h166;
            if (_source31.is_None) {
              return _932_default;
            } else {
              RAST._IType _968___mcc_h172 = _source31.dtor_value;
              Std.Wrappers._IOption<RAST._IExpr> _source32 = _967___mcc_h167;
              if (_source32.is_None) {
                RAST._IExpr _source33 = _939___mcc_h113;
                if (_source33.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _969___mcc_h174 = _source33.dtor_content;
                  return _932_default;
                } else if (_source33.is_ExprFromType) {
                  RAST._IType _970___mcc_h176 = _source33.dtor_tpe;
                  return _932_default;
                } else if (_source33.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _971___mcc_h178 = _source33.dtor_name;
                  return _932_default;
                } else if (_source33.is_Match) {
                  RAST._IExpr _972___mcc_h180 = _source33.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _973___mcc_h181 = _source33.dtor_cases;
                  return _932_default;
                } else if (_source33.is_StmtExpr) {
                  RAST._IExpr _974___mcc_h184 = _source33.dtor_stmt;
                  RAST._IExpr _975___mcc_h185 = _source33.dtor_rhs;
                  RAST._IExpr _source34 = _974___mcc_h184;
                  if (_source34.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _976___mcc_h188 = _source34.dtor_content;
                    return _932_default;
                  } else if (_source34.is_ExprFromType) {
                    RAST._IType _977___mcc_h190 = _source34.dtor_tpe;
                    return _932_default;
                  } else if (_source34.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _978___mcc_h192 = _source34.dtor_name;
                    return _932_default;
                  } else if (_source34.is_Match) {
                    RAST._IExpr _979___mcc_h194 = _source34.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _980___mcc_h195 = _source34.dtor_cases;
                    return _932_default;
                  } else if (_source34.is_StmtExpr) {
                    RAST._IExpr _981___mcc_h198 = _source34.dtor_stmt;
                    RAST._IExpr _982___mcc_h199 = _source34.dtor_rhs;
                    return _932_default;
                  } else if (_source34.is_Block) {
                    RAST._IExpr _983___mcc_h202 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_StructBuild) {
                    RAST._IExpr _984___mcc_h204 = _source34.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _985___mcc_h205 = _source34.dtor_assignments;
                    return _932_default;
                  } else if (_source34.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _986___mcc_h208 = _source34.dtor_arguments;
                    return _932_default;
                  } else if (_source34.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _987___mcc_h210 = _source34.dtor_op1;
                    RAST._IExpr _988___mcc_h211 = _source34.dtor_underlying;
                    DAST.Format._IUnOpFormat _989___mcc_h212 = _source34.dtor_format;
                    return _932_default;
                  } else if (_source34.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _990___mcc_h216 = _source34.dtor_op2;
                    RAST._IExpr _991___mcc_h217 = _source34.dtor_left;
                    RAST._IExpr _992___mcc_h218 = _source34.dtor_right;
                    DAST.Format._IBinOpFormat _993___mcc_h219 = _source34.dtor_format2;
                    return _932_default;
                  } else if (_source34.is_TypeAscription) {
                    RAST._IExpr _994___mcc_h224 = _source34.dtor_left;
                    RAST._IType _995___mcc_h225 = _source34.dtor_tpe;
                    return _932_default;
                  } else if (_source34.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _996___mcc_h228 = _source34.dtor_value;
                    return _932_default;
                  } else if (_source34.is_LiteralBool) {
                    bool _997___mcc_h230 = _source34.dtor_bvalue;
                    return _932_default;
                  } else if (_source34.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _998___mcc_h232 = _source34.dtor_value;
                    bool _999___mcc_h233 = _source34.dtor_binary;
                    return _932_default;
                  } else if (_source34.is_DeclareVar) {
                    RAST._IDeclareType _1000___mcc_h236 = _source34.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _1001___mcc_h237 = _source34.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _1002___mcc_h238 = _source34.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _1003___mcc_h239 = _source34.dtor_optRhs;
                    return _932_default;
                  } else if (_source34.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1004___mcc_h244 = _source34.dtor_names;
                    RAST._IExpr _1005___mcc_h245 = _source34.dtor_rhs;
                    RAST._IExpr _1006_last = _975___mcc_h185;
                    RAST._IExpr _1007_rhs = _1005___mcc_h245;
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1008_name2 = _1004___mcc_h244;
                    RAST._IType _1009_tpe = _968___mcc_h172;
                    Dafny.ISequence<Dafny.Rune> _1010_name = _965___mcc_h165;
                    RAST._IDeclareType _1011_mod = _964___mcc_h164;
                    if ((Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_1010_name)).Equals(_1008_name2)) {
                      return (BigInteger.One) + (_932_default);
                    } else {
                      return _932_default;
                    }
                  } else if (_source34.is_IfExpr) {
                    RAST._IExpr _1012___mcc_h248 = _source34.dtor_cond;
                    RAST._IExpr _1013___mcc_h249 = _source34.dtor_thn;
                    RAST._IExpr _1014___mcc_h250 = _source34.dtor_els;
                    return _932_default;
                  } else if (_source34.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1015___mcc_h254 = _source34.dtor_optCond;
                    RAST._IExpr _1016___mcc_h255 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1017___mcc_h258 = _source34.dtor_name;
                    RAST._IExpr _1018___mcc_h259 = _source34.dtor_range;
                    RAST._IExpr _1019___mcc_h260 = _source34.dtor_body;
                    return _932_default;
                  } else if (_source34.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1020___mcc_h264 = _source34.dtor_lbl;
                    RAST._IExpr _1021___mcc_h265 = _source34.dtor_underlying;
                    return _932_default;
                  } else if (_source34.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1022___mcc_h268 = _source34.dtor_optLbl;
                    return _932_default;
                  } else if (_source34.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1023___mcc_h270 = _source34.dtor_optLbl;
                    return _932_default;
                  } else if (_source34.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1024___mcc_h272 = _source34.dtor_optExpr;
                    return _932_default;
                  } else if (_source34.is_CallType) {
                    RAST._IExpr _1025___mcc_h274 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1026___mcc_h275 = _source34.dtor_typeParameters;
                    return _932_default;
                  } else if (_source34.is_Call) {
                    RAST._IExpr _1027___mcc_h278 = _source34.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1028___mcc_h279 = _source34.dtor_arguments;
                    return _932_default;
                  } else if (_source34.is_Select) {
                    RAST._IExpr _1029___mcc_h282 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1030___mcc_h283 = _source34.dtor_name;
                    return _932_default;
                  } else {
                    RAST._IExpr _1031___mcc_h286 = _source34.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1032___mcc_h287 = _source34.dtor_name;
                    return _932_default;
                  }
                } else if (_source33.is_Block) {
                  RAST._IExpr _1033___mcc_h290 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_StructBuild) {
                  RAST._IExpr _1034___mcc_h292 = _source33.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1035___mcc_h293 = _source33.dtor_assignments;
                  return _932_default;
                } else if (_source33.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1036___mcc_h296 = _source33.dtor_arguments;
                  return _932_default;
                } else if (_source33.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1037___mcc_h298 = _source33.dtor_op1;
                  RAST._IExpr _1038___mcc_h299 = _source33.dtor_underlying;
                  DAST.Format._IUnOpFormat _1039___mcc_h300 = _source33.dtor_format;
                  return _932_default;
                } else if (_source33.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1040___mcc_h304 = _source33.dtor_op2;
                  RAST._IExpr _1041___mcc_h305 = _source33.dtor_left;
                  RAST._IExpr _1042___mcc_h306 = _source33.dtor_right;
                  DAST.Format._IBinOpFormat _1043___mcc_h307 = _source33.dtor_format2;
                  return _932_default;
                } else if (_source33.is_TypeAscription) {
                  RAST._IExpr _1044___mcc_h312 = _source33.dtor_left;
                  RAST._IType _1045___mcc_h313 = _source33.dtor_tpe;
                  return _932_default;
                } else if (_source33.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1046___mcc_h316 = _source33.dtor_value;
                  return _932_default;
                } else if (_source33.is_LiteralBool) {
                  bool _1047___mcc_h318 = _source33.dtor_bvalue;
                  return _932_default;
                } else if (_source33.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1048___mcc_h320 = _source33.dtor_value;
                  bool _1049___mcc_h321 = _source33.dtor_binary;
                  return _932_default;
                } else if (_source33.is_DeclareVar) {
                  RAST._IDeclareType _1050___mcc_h324 = _source33.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1051___mcc_h325 = _source33.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1052___mcc_h326 = _source33.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1053___mcc_h327 = _source33.dtor_optRhs;
                  return _932_default;
                } else if (_source33.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1054___mcc_h332 = _source33.dtor_names;
                  RAST._IExpr _1055___mcc_h333 = _source33.dtor_rhs;
                  return _932_default;
                } else if (_source33.is_IfExpr) {
                  RAST._IExpr _1056___mcc_h336 = _source33.dtor_cond;
                  RAST._IExpr _1057___mcc_h337 = _source33.dtor_thn;
                  RAST._IExpr _1058___mcc_h338 = _source33.dtor_els;
                  return _932_default;
                } else if (_source33.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1059___mcc_h342 = _source33.dtor_optCond;
                  RAST._IExpr _1060___mcc_h343 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1061___mcc_h346 = _source33.dtor_name;
                  RAST._IExpr _1062___mcc_h347 = _source33.dtor_range;
                  RAST._IExpr _1063___mcc_h348 = _source33.dtor_body;
                  return _932_default;
                } else if (_source33.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1064___mcc_h352 = _source33.dtor_lbl;
                  RAST._IExpr _1065___mcc_h353 = _source33.dtor_underlying;
                  return _932_default;
                } else if (_source33.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1066___mcc_h356 = _source33.dtor_optLbl;
                  return _932_default;
                } else if (_source33.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1067___mcc_h358 = _source33.dtor_optLbl;
                  return _932_default;
                } else if (_source33.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1068___mcc_h360 = _source33.dtor_optExpr;
                  return _932_default;
                } else if (_source33.is_CallType) {
                  RAST._IExpr _1069___mcc_h362 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1070___mcc_h363 = _source33.dtor_typeParameters;
                  return _932_default;
                } else if (_source33.is_Call) {
                  RAST._IExpr _1071___mcc_h366 = _source33.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1072___mcc_h367 = _source33.dtor_arguments;
                  return _932_default;
                } else if (_source33.is_Select) {
                  RAST._IExpr _1073___mcc_h370 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1074___mcc_h371 = _source33.dtor_name;
                  return _932_default;
                } else {
                  RAST._IExpr _1075___mcc_h374 = _source33.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1076___mcc_h375 = _source33.dtor_name;
                  return _932_default;
                }
              } else {
                RAST._IExpr _1077___mcc_h378 = _source32.dtor_value;
                return _932_default;
              }
            }
          } else if (_source30.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1078___mcc_h380 = _source30.dtor_names;
            RAST._IExpr _1079___mcc_h381 = _source30.dtor_rhs;
            return _932_default;
          } else if (_source30.is_IfExpr) {
            RAST._IExpr _1080___mcc_h384 = _source30.dtor_cond;
            RAST._IExpr _1081___mcc_h385 = _source30.dtor_thn;
            RAST._IExpr _1082___mcc_h386 = _source30.dtor_els;
            RAST._IExpr _source35 = _1080___mcc_h384;
            if (_source35.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1083___mcc_h390 = _source35.dtor_content;
              return _932_default;
            } else if (_source35.is_ExprFromType) {
              RAST._IType _1084___mcc_h392 = _source35.dtor_tpe;
              return _932_default;
            } else if (_source35.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1085___mcc_h394 = _source35.dtor_name;
              return _932_default;
            } else if (_source35.is_Match) {
              RAST._IExpr _1086___mcc_h396 = _source35.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1087___mcc_h397 = _source35.dtor_cases;
              return _932_default;
            } else if (_source35.is_StmtExpr) {
              RAST._IExpr _1088___mcc_h400 = _source35.dtor_stmt;
              RAST._IExpr _1089___mcc_h401 = _source35.dtor_rhs;
              return _932_default;
            } else if (_source35.is_Block) {
              RAST._IExpr _1090___mcc_h404 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_StructBuild) {
              RAST._IExpr _1091___mcc_h406 = _source35.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1092___mcc_h407 = _source35.dtor_assignments;
              return _932_default;
            } else if (_source35.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1093___mcc_h410 = _source35.dtor_arguments;
              return _932_default;
            } else if (_source35.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1094___mcc_h412 = _source35.dtor_op1;
              RAST._IExpr _1095___mcc_h413 = _source35.dtor_underlying;
              DAST.Format._IUnOpFormat _1096___mcc_h414 = _source35.dtor_format;
              if (object.Equals(_1094___mcc_h412, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
                RAST._IExpr _source36 = _1095___mcc_h413;
                if (_source36.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1097___mcc_h418 = _source36.dtor_content;
                  return _932_default;
                } else if (_source36.is_ExprFromType) {
                  RAST._IType _1098___mcc_h420 = _source36.dtor_tpe;
                  return _932_default;
                } else if (_source36.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1099___mcc_h422 = _source36.dtor_name;
                  return _932_default;
                } else if (_source36.is_Match) {
                  RAST._IExpr _1100___mcc_h424 = _source36.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1101___mcc_h425 = _source36.dtor_cases;
                  return _932_default;
                } else if (_source36.is_StmtExpr) {
                  RAST._IExpr _1102___mcc_h428 = _source36.dtor_stmt;
                  RAST._IExpr _1103___mcc_h429 = _source36.dtor_rhs;
                  return _932_default;
                } else if (_source36.is_Block) {
                  RAST._IExpr _1104___mcc_h432 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_StructBuild) {
                  RAST._IExpr _1105___mcc_h434 = _source36.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1106___mcc_h435 = _source36.dtor_assignments;
                  return _932_default;
                } else if (_source36.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1107___mcc_h438 = _source36.dtor_arguments;
                  return _932_default;
                } else if (_source36.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1108___mcc_h440 = _source36.dtor_op1;
                  RAST._IExpr _1109___mcc_h441 = _source36.dtor_underlying;
                  DAST.Format._IUnOpFormat _1110___mcc_h442 = _source36.dtor_format;
                  return _932_default;
                } else if (_source36.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1111___mcc_h446 = _source36.dtor_op2;
                  RAST._IExpr _1112___mcc_h447 = _source36.dtor_left;
                  RAST._IExpr _1113___mcc_h448 = _source36.dtor_right;
                  DAST.Format._IBinOpFormat _1114___mcc_h449 = _source36.dtor_format2;
                  if (object.Equals(_1111___mcc_h446, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                    RAST._IExpr _source37 = _1081___mcc_h385;
                    if (_source37.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _1115___mcc_h454 = _source37.dtor_content;
                      if (object.Equals(_1115___mcc_h454, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                        RAST._IExpr _source38 = _1082___mcc_h386;
                        if (_source38.is_RawExpr) {
                          Dafny.ISequence<Dafny.Rune> _1116___mcc_h456 = _source38.dtor_content;
                          if (object.Equals(_1116___mcc_h456, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                            RAST._IExpr _1117_last = _939___mcc_h113;
                            DAST.Format._IUnOpFormat _1118_of = _1096___mcc_h414;
                            DAST.Format._IBinOpFormat _1119_f = _1114___mcc_h449;
                            RAST._IExpr _1120_b = _1113___mcc_h448;
                            RAST._IExpr _1121_a = _1112___mcc_h447;
                            return (BigInteger.One) + (_932_default);
                          } else {
                            return _932_default;
                          }
                        } else if (_source38.is_ExprFromType) {
                          RAST._IType _1122___mcc_h458 = _source38.dtor_tpe;
                          return _932_default;
                        } else if (_source38.is_Identifier) {
                          Dafny.ISequence<Dafny.Rune> _1123___mcc_h460 = _source38.dtor_name;
                          return _932_default;
                        } else if (_source38.is_Match) {
                          RAST._IExpr _1124___mcc_h462 = _source38.dtor_matchee;
                          Dafny.ISequence<RAST._IMatchCase> _1125___mcc_h463 = _source38.dtor_cases;
                          return _932_default;
                        } else if (_source38.is_StmtExpr) {
                          RAST._IExpr _1126___mcc_h466 = _source38.dtor_stmt;
                          RAST._IExpr _1127___mcc_h467 = _source38.dtor_rhs;
                          return _932_default;
                        } else if (_source38.is_Block) {
                          RAST._IExpr _1128___mcc_h470 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_StructBuild) {
                          RAST._IExpr _1129___mcc_h472 = _source38.dtor_underlying;
                          Dafny.ISequence<RAST._IAssignIdentifier> _1130___mcc_h473 = _source38.dtor_assignments;
                          return _932_default;
                        } else if (_source38.is_Tuple) {
                          Dafny.ISequence<RAST._IExpr> _1131___mcc_h476 = _source38.dtor_arguments;
                          return _932_default;
                        } else if (_source38.is_UnaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1132___mcc_h478 = _source38.dtor_op1;
                          RAST._IExpr _1133___mcc_h479 = _source38.dtor_underlying;
                          DAST.Format._IUnOpFormat _1134___mcc_h480 = _source38.dtor_format;
                          return _932_default;
                        } else if (_source38.is_BinaryOp) {
                          Dafny.ISequence<Dafny.Rune> _1135___mcc_h484 = _source38.dtor_op2;
                          RAST._IExpr _1136___mcc_h485 = _source38.dtor_left;
                          RAST._IExpr _1137___mcc_h486 = _source38.dtor_right;
                          DAST.Format._IBinOpFormat _1138___mcc_h487 = _source38.dtor_format2;
                          return _932_default;
                        } else if (_source38.is_TypeAscription) {
                          RAST._IExpr _1139___mcc_h492 = _source38.dtor_left;
                          RAST._IType _1140___mcc_h493 = _source38.dtor_tpe;
                          return _932_default;
                        } else if (_source38.is_LiteralInt) {
                          Dafny.ISequence<Dafny.Rune> _1141___mcc_h496 = _source38.dtor_value;
                          return _932_default;
                        } else if (_source38.is_LiteralBool) {
                          bool _1142___mcc_h498 = _source38.dtor_bvalue;
                          return _932_default;
                        } else if (_source38.is_LiteralString) {
                          Dafny.ISequence<Dafny.Rune> _1143___mcc_h500 = _source38.dtor_value;
                          bool _1144___mcc_h501 = _source38.dtor_binary;
                          return _932_default;
                        } else if (_source38.is_DeclareVar) {
                          RAST._IDeclareType _1145___mcc_h504 = _source38.dtor_declareType;
                          Dafny.ISequence<Dafny.Rune> _1146___mcc_h505 = _source38.dtor_name;
                          Std.Wrappers._IOption<RAST._IType> _1147___mcc_h506 = _source38.dtor_optType;
                          Std.Wrappers._IOption<RAST._IExpr> _1148___mcc_h507 = _source38.dtor_optRhs;
                          return _932_default;
                        } else if (_source38.is_Assign) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1149___mcc_h512 = _source38.dtor_names;
                          RAST._IExpr _1150___mcc_h513 = _source38.dtor_rhs;
                          return _932_default;
                        } else if (_source38.is_IfExpr) {
                          RAST._IExpr _1151___mcc_h516 = _source38.dtor_cond;
                          RAST._IExpr _1152___mcc_h517 = _source38.dtor_thn;
                          RAST._IExpr _1153___mcc_h518 = _source38.dtor_els;
                          return _932_default;
                        } else if (_source38.is_Loop) {
                          Std.Wrappers._IOption<RAST._IExpr> _1154___mcc_h522 = _source38.dtor_optCond;
                          RAST._IExpr _1155___mcc_h523 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_For) {
                          Dafny.ISequence<Dafny.Rune> _1156___mcc_h526 = _source38.dtor_name;
                          RAST._IExpr _1157___mcc_h527 = _source38.dtor_range;
                          RAST._IExpr _1158___mcc_h528 = _source38.dtor_body;
                          return _932_default;
                        } else if (_source38.is_Labelled) {
                          Dafny.ISequence<Dafny.Rune> _1159___mcc_h532 = _source38.dtor_lbl;
                          RAST._IExpr _1160___mcc_h533 = _source38.dtor_underlying;
                          return _932_default;
                        } else if (_source38.is_Break) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1161___mcc_h536 = _source38.dtor_optLbl;
                          return _932_default;
                        } else if (_source38.is_Continue) {
                          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1162___mcc_h538 = _source38.dtor_optLbl;
                          return _932_default;
                        } else if (_source38.is_Return) {
                          Std.Wrappers._IOption<RAST._IExpr> _1163___mcc_h540 = _source38.dtor_optExpr;
                          return _932_default;
                        } else if (_source38.is_CallType) {
                          RAST._IExpr _1164___mcc_h542 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IType> _1165___mcc_h543 = _source38.dtor_typeParameters;
                          return _932_default;
                        } else if (_source38.is_Call) {
                          RAST._IExpr _1166___mcc_h546 = _source38.dtor_obj;
                          Dafny.ISequence<RAST._IExpr> _1167___mcc_h547 = _source38.dtor_arguments;
                          return _932_default;
                        } else if (_source38.is_Select) {
                          RAST._IExpr _1168___mcc_h550 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1169___mcc_h551 = _source38.dtor_name;
                          return _932_default;
                        } else {
                          RAST._IExpr _1170___mcc_h554 = _source38.dtor_obj;
                          Dafny.ISequence<Dafny.Rune> _1171___mcc_h555 = _source38.dtor_name;
                          return _932_default;
                        }
                      } else {
                        return _932_default;
                      }
                    } else if (_source37.is_ExprFromType) {
                      RAST._IType _1172___mcc_h558 = _source37.dtor_tpe;
                      return _932_default;
                    } else if (_source37.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _1173___mcc_h560 = _source37.dtor_name;
                      return _932_default;
                    } else if (_source37.is_Match) {
                      RAST._IExpr _1174___mcc_h562 = _source37.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _1175___mcc_h563 = _source37.dtor_cases;
                      return _932_default;
                    } else if (_source37.is_StmtExpr) {
                      RAST._IExpr _1176___mcc_h566 = _source37.dtor_stmt;
                      RAST._IExpr _1177___mcc_h567 = _source37.dtor_rhs;
                      return _932_default;
                    } else if (_source37.is_Block) {
                      RAST._IExpr _1178___mcc_h570 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_StructBuild) {
                      RAST._IExpr _1179___mcc_h572 = _source37.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _1180___mcc_h573 = _source37.dtor_assignments;
                      return _932_default;
                    } else if (_source37.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _1181___mcc_h576 = _source37.dtor_arguments;
                      return _932_default;
                    } else if (_source37.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1182___mcc_h578 = _source37.dtor_op1;
                      RAST._IExpr _1183___mcc_h579 = _source37.dtor_underlying;
                      DAST.Format._IUnOpFormat _1184___mcc_h580 = _source37.dtor_format;
                      return _932_default;
                    } else if (_source37.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _1185___mcc_h584 = _source37.dtor_op2;
                      RAST._IExpr _1186___mcc_h585 = _source37.dtor_left;
                      RAST._IExpr _1187___mcc_h586 = _source37.dtor_right;
                      DAST.Format._IBinOpFormat _1188___mcc_h587 = _source37.dtor_format2;
                      return _932_default;
                    } else if (_source37.is_TypeAscription) {
                      RAST._IExpr _1189___mcc_h592 = _source37.dtor_left;
                      RAST._IType _1190___mcc_h593 = _source37.dtor_tpe;
                      return _932_default;
                    } else if (_source37.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _1191___mcc_h596 = _source37.dtor_value;
                      return _932_default;
                    } else if (_source37.is_LiteralBool) {
                      bool _1192___mcc_h598 = _source37.dtor_bvalue;
                      return _932_default;
                    } else if (_source37.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _1193___mcc_h600 = _source37.dtor_value;
                      bool _1194___mcc_h601 = _source37.dtor_binary;
                      return _932_default;
                    } else if (_source37.is_DeclareVar) {
                      RAST._IDeclareType _1195___mcc_h604 = _source37.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _1196___mcc_h605 = _source37.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _1197___mcc_h606 = _source37.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _1198___mcc_h607 = _source37.dtor_optRhs;
                      return _932_default;
                    } else if (_source37.is_Assign) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1199___mcc_h612 = _source37.dtor_names;
                      RAST._IExpr _1200___mcc_h613 = _source37.dtor_rhs;
                      return _932_default;
                    } else if (_source37.is_IfExpr) {
                      RAST._IExpr _1201___mcc_h616 = _source37.dtor_cond;
                      RAST._IExpr _1202___mcc_h617 = _source37.dtor_thn;
                      RAST._IExpr _1203___mcc_h618 = _source37.dtor_els;
                      return _932_default;
                    } else if (_source37.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _1204___mcc_h622 = _source37.dtor_optCond;
                      RAST._IExpr _1205___mcc_h623 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_For) {
                      Dafny.ISequence<Dafny.Rune> _1206___mcc_h626 = _source37.dtor_name;
                      RAST._IExpr _1207___mcc_h627 = _source37.dtor_range;
                      RAST._IExpr _1208___mcc_h628 = _source37.dtor_body;
                      return _932_default;
                    } else if (_source37.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _1209___mcc_h632 = _source37.dtor_lbl;
                      RAST._IExpr _1210___mcc_h633 = _source37.dtor_underlying;
                      return _932_default;
                    } else if (_source37.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1211___mcc_h636 = _source37.dtor_optLbl;
                      return _932_default;
                    } else if (_source37.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1212___mcc_h638 = _source37.dtor_optLbl;
                      return _932_default;
                    } else if (_source37.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _1213___mcc_h640 = _source37.dtor_optExpr;
                      return _932_default;
                    } else if (_source37.is_CallType) {
                      RAST._IExpr _1214___mcc_h642 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IType> _1215___mcc_h643 = _source37.dtor_typeParameters;
                      return _932_default;
                    } else if (_source37.is_Call) {
                      RAST._IExpr _1216___mcc_h646 = _source37.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _1217___mcc_h647 = _source37.dtor_arguments;
                      return _932_default;
                    } else if (_source37.is_Select) {
                      RAST._IExpr _1218___mcc_h650 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1219___mcc_h651 = _source37.dtor_name;
                      return _932_default;
                    } else {
                      RAST._IExpr _1220___mcc_h654 = _source37.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _1221___mcc_h655 = _source37.dtor_name;
                      return _932_default;
                    }
                  } else {
                    return _932_default;
                  }
                } else if (_source36.is_TypeAscription) {
                  RAST._IExpr _1222___mcc_h658 = _source36.dtor_left;
                  RAST._IType _1223___mcc_h659 = _source36.dtor_tpe;
                  return _932_default;
                } else if (_source36.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1224___mcc_h662 = _source36.dtor_value;
                  return _932_default;
                } else if (_source36.is_LiteralBool) {
                  bool _1225___mcc_h664 = _source36.dtor_bvalue;
                  return _932_default;
                } else if (_source36.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1226___mcc_h666 = _source36.dtor_value;
                  bool _1227___mcc_h667 = _source36.dtor_binary;
                  return _932_default;
                } else if (_source36.is_DeclareVar) {
                  RAST._IDeclareType _1228___mcc_h670 = _source36.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1229___mcc_h671 = _source36.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1230___mcc_h672 = _source36.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1231___mcc_h673 = _source36.dtor_optRhs;
                  return _932_default;
                } else if (_source36.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1232___mcc_h678 = _source36.dtor_names;
                  RAST._IExpr _1233___mcc_h679 = _source36.dtor_rhs;
                  return _932_default;
                } else if (_source36.is_IfExpr) {
                  RAST._IExpr _1234___mcc_h682 = _source36.dtor_cond;
                  RAST._IExpr _1235___mcc_h683 = _source36.dtor_thn;
                  RAST._IExpr _1236___mcc_h684 = _source36.dtor_els;
                  return _932_default;
                } else if (_source36.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1237___mcc_h688 = _source36.dtor_optCond;
                  RAST._IExpr _1238___mcc_h689 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1239___mcc_h692 = _source36.dtor_name;
                  RAST._IExpr _1240___mcc_h693 = _source36.dtor_range;
                  RAST._IExpr _1241___mcc_h694 = _source36.dtor_body;
                  return _932_default;
                } else if (_source36.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1242___mcc_h698 = _source36.dtor_lbl;
                  RAST._IExpr _1243___mcc_h699 = _source36.dtor_underlying;
                  return _932_default;
                } else if (_source36.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1244___mcc_h702 = _source36.dtor_optLbl;
                  return _932_default;
                } else if (_source36.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1245___mcc_h704 = _source36.dtor_optLbl;
                  return _932_default;
                } else if (_source36.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1246___mcc_h706 = _source36.dtor_optExpr;
                  return _932_default;
                } else if (_source36.is_CallType) {
                  RAST._IExpr _1247___mcc_h708 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1248___mcc_h709 = _source36.dtor_typeParameters;
                  return _932_default;
                } else if (_source36.is_Call) {
                  RAST._IExpr _1249___mcc_h712 = _source36.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1250___mcc_h713 = _source36.dtor_arguments;
                  return _932_default;
                } else if (_source36.is_Select) {
                  RAST._IExpr _1251___mcc_h716 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1252___mcc_h717 = _source36.dtor_name;
                  return _932_default;
                } else {
                  RAST._IExpr _1253___mcc_h720 = _source36.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1254___mcc_h721 = _source36.dtor_name;
                  return _932_default;
                }
              } else {
                return _932_default;
              }
            } else if (_source35.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1255___mcc_h724 = _source35.dtor_op2;
              RAST._IExpr _1256___mcc_h725 = _source35.dtor_left;
              RAST._IExpr _1257___mcc_h726 = _source35.dtor_right;
              DAST.Format._IBinOpFormat _1258___mcc_h727 = _source35.dtor_format2;
              return _932_default;
            } else if (_source35.is_TypeAscription) {
              RAST._IExpr _1259___mcc_h732 = _source35.dtor_left;
              RAST._IType _1260___mcc_h733 = _source35.dtor_tpe;
              return _932_default;
            } else if (_source35.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1261___mcc_h736 = _source35.dtor_value;
              return _932_default;
            } else if (_source35.is_LiteralBool) {
              bool _1262___mcc_h738 = _source35.dtor_bvalue;
              return _932_default;
            } else if (_source35.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1263___mcc_h740 = _source35.dtor_value;
              bool _1264___mcc_h741 = _source35.dtor_binary;
              return _932_default;
            } else if (_source35.is_DeclareVar) {
              RAST._IDeclareType _1265___mcc_h744 = _source35.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1266___mcc_h745 = _source35.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1267___mcc_h746 = _source35.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1268___mcc_h747 = _source35.dtor_optRhs;
              return _932_default;
            } else if (_source35.is_Assign) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1269___mcc_h752 = _source35.dtor_names;
              RAST._IExpr _1270___mcc_h753 = _source35.dtor_rhs;
              return _932_default;
            } else if (_source35.is_IfExpr) {
              RAST._IExpr _1271___mcc_h756 = _source35.dtor_cond;
              RAST._IExpr _1272___mcc_h757 = _source35.dtor_thn;
              RAST._IExpr _1273___mcc_h758 = _source35.dtor_els;
              return _932_default;
            } else if (_source35.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1274___mcc_h762 = _source35.dtor_optCond;
              RAST._IExpr _1275___mcc_h763 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_For) {
              Dafny.ISequence<Dafny.Rune> _1276___mcc_h766 = _source35.dtor_name;
              RAST._IExpr _1277___mcc_h767 = _source35.dtor_range;
              RAST._IExpr _1278___mcc_h768 = _source35.dtor_body;
              return _932_default;
            } else if (_source35.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1279___mcc_h772 = _source35.dtor_lbl;
              RAST._IExpr _1280___mcc_h773 = _source35.dtor_underlying;
              return _932_default;
            } else if (_source35.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1281___mcc_h776 = _source35.dtor_optLbl;
              return _932_default;
            } else if (_source35.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1282___mcc_h778 = _source35.dtor_optLbl;
              return _932_default;
            } else if (_source35.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1283___mcc_h780 = _source35.dtor_optExpr;
              return _932_default;
            } else if (_source35.is_CallType) {
              RAST._IExpr _1284___mcc_h782 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IType> _1285___mcc_h783 = _source35.dtor_typeParameters;
              return _932_default;
            } else if (_source35.is_Call) {
              RAST._IExpr _1286___mcc_h786 = _source35.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1287___mcc_h787 = _source35.dtor_arguments;
              return _932_default;
            } else if (_source35.is_Select) {
              RAST._IExpr _1288___mcc_h790 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1289___mcc_h791 = _source35.dtor_name;
              return _932_default;
            } else {
              RAST._IExpr _1290___mcc_h794 = _source35.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1291___mcc_h795 = _source35.dtor_name;
              return _932_default;
            }
          } else if (_source30.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1292___mcc_h798 = _source30.dtor_optCond;
            RAST._IExpr _1293___mcc_h799 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_For) {
            Dafny.ISequence<Dafny.Rune> _1294___mcc_h802 = _source30.dtor_name;
            RAST._IExpr _1295___mcc_h803 = _source30.dtor_range;
            RAST._IExpr _1296___mcc_h804 = _source30.dtor_body;
            return _932_default;
          } else if (_source30.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1297___mcc_h808 = _source30.dtor_lbl;
            RAST._IExpr _1298___mcc_h809 = _source30.dtor_underlying;
            return _932_default;
          } else if (_source30.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1299___mcc_h812 = _source30.dtor_optLbl;
            return _932_default;
          } else if (_source30.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1300___mcc_h814 = _source30.dtor_optLbl;
            return _932_default;
          } else if (_source30.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1301___mcc_h816 = _source30.dtor_optExpr;
            return _932_default;
          } else if (_source30.is_CallType) {
            RAST._IExpr _1302___mcc_h818 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IType> _1303___mcc_h819 = _source30.dtor_typeParameters;
            return _932_default;
          } else if (_source30.is_Call) {
            RAST._IExpr _1304___mcc_h822 = _source30.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1305___mcc_h823 = _source30.dtor_arguments;
            return _932_default;
          } else if (_source30.is_Select) {
            RAST._IExpr _1306___mcc_h826 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1307___mcc_h827 = _source30.dtor_name;
            return _932_default;
          } else {
            RAST._IExpr _1308___mcc_h830 = _source30.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1309___mcc_h831 = _source30.dtor_name;
            return _932_default;
          }
        } else if (_source29.is_Block) {
          RAST._IExpr _1310___mcc_h834 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_StructBuild) {
          RAST._IExpr _1311___mcc_h836 = _source29.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1312___mcc_h837 = _source29.dtor_assignments;
          return _932_default;
        } else if (_source29.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1313___mcc_h840 = _source29.dtor_arguments;
          return _932_default;
        } else if (_source29.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1314___mcc_h842 = _source29.dtor_op1;
          RAST._IExpr _1315___mcc_h843 = _source29.dtor_underlying;
          DAST.Format._IUnOpFormat _1316___mcc_h844 = _source29.dtor_format;
          return _932_default;
        } else if (_source29.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1317___mcc_h848 = _source29.dtor_op2;
          RAST._IExpr _1318___mcc_h849 = _source29.dtor_left;
          RAST._IExpr _1319___mcc_h850 = _source29.dtor_right;
          DAST.Format._IBinOpFormat _1320___mcc_h851 = _source29.dtor_format2;
          return _932_default;
        } else if (_source29.is_TypeAscription) {
          RAST._IExpr _1321___mcc_h856 = _source29.dtor_left;
          RAST._IType _1322___mcc_h857 = _source29.dtor_tpe;
          return _932_default;
        } else if (_source29.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1323___mcc_h860 = _source29.dtor_value;
          return _932_default;
        } else if (_source29.is_LiteralBool) {
          bool _1324___mcc_h862 = _source29.dtor_bvalue;
          return _932_default;
        } else if (_source29.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1325___mcc_h864 = _source29.dtor_value;
          bool _1326___mcc_h865 = _source29.dtor_binary;
          return _932_default;
        } else if (_source29.is_DeclareVar) {
          RAST._IDeclareType _1327___mcc_h868 = _source29.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1328___mcc_h869 = _source29.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1329___mcc_h870 = _source29.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1330___mcc_h871 = _source29.dtor_optRhs;
          return _932_default;
        } else if (_source29.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1331___mcc_h876 = _source29.dtor_names;
          RAST._IExpr _1332___mcc_h877 = _source29.dtor_rhs;
          return _932_default;
        } else if (_source29.is_IfExpr) {
          RAST._IExpr _1333___mcc_h880 = _source29.dtor_cond;
          RAST._IExpr _1334___mcc_h881 = _source29.dtor_thn;
          RAST._IExpr _1335___mcc_h882 = _source29.dtor_els;
          return _932_default;
        } else if (_source29.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1336___mcc_h886 = _source29.dtor_optCond;
          RAST._IExpr _1337___mcc_h887 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_For) {
          Dafny.ISequence<Dafny.Rune> _1338___mcc_h890 = _source29.dtor_name;
          RAST._IExpr _1339___mcc_h891 = _source29.dtor_range;
          RAST._IExpr _1340___mcc_h892 = _source29.dtor_body;
          return _932_default;
        } else if (_source29.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1341___mcc_h896 = _source29.dtor_lbl;
          RAST._IExpr _1342___mcc_h897 = _source29.dtor_underlying;
          return _932_default;
        } else if (_source29.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1343___mcc_h900 = _source29.dtor_optLbl;
          return _932_default;
        } else if (_source29.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1344___mcc_h902 = _source29.dtor_optLbl;
          return _932_default;
        } else if (_source29.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1345___mcc_h904 = _source29.dtor_optExpr;
          return _932_default;
        } else if (_source29.is_CallType) {
          RAST._IExpr _1346___mcc_h906 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IType> _1347___mcc_h907 = _source29.dtor_typeParameters;
          return _932_default;
        } else if (_source29.is_Call) {
          RAST._IExpr _1348___mcc_h910 = _source29.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1349___mcc_h911 = _source29.dtor_arguments;
          return _932_default;
        } else if (_source29.is_Select) {
          RAST._IExpr _1350___mcc_h914 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1351___mcc_h915 = _source29.dtor_name;
          return _932_default;
        } else {
          RAST._IExpr _1352___mcc_h918 = _source29.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1353___mcc_h919 = _source29.dtor_name;
          return _932_default;
        }
      } else if (_source28.is_Block) {
        RAST._IExpr _1354___mcc_h14 = _source28.dtor_underlying;
        RAST._IExpr _1355_underlying = _1354___mcc_h14;
        return (BigInteger.One) + ((_1355_underlying).Height());
      } else if (_source28.is_StructBuild) {
        RAST._IExpr _1356___mcc_h16 = _source28.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1357___mcc_h17 = _source28.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _1358_assignments = _1357___mcc_h17;
        RAST._IExpr _1359_name = _1356___mcc_h16;
        return (BigInteger.One) + (RAST.__default.max((_1359_name).Height(), DAST.Format.__default.SeqToHeight<RAST._IAssignIdentifier>(_1358_assignments, ((System.Func<RAST._IAssignIdentifier, BigInteger>)((_1360_assignment) => {
          return (_1360_assignment).Height();
        })))));
      } else if (_source28.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1361___mcc_h20 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1362_arguments = _1361___mcc_h20;
        return (BigInteger.One) + (DAST.Format.__default.SeqToHeight<RAST._IExpr>(_1362_arguments, ((System.Func<RAST._IExpr, BigInteger>)((_1363_argument) => {
          return (_1363_argument).Height();
        }))));
      } else if (_source28.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1364___mcc_h22 = _source28.dtor_op1;
        RAST._IExpr _1365___mcc_h23 = _source28.dtor_underlying;
        DAST.Format._IUnOpFormat _1366___mcc_h24 = _source28.dtor_format;
        RAST._IExpr _1367_underlying = _1365___mcc_h23;
        return (BigInteger.One) + ((_1367_underlying).Height());
      } else if (_source28.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1368___mcc_h28 = _source28.dtor_op2;
        RAST._IExpr _1369___mcc_h29 = _source28.dtor_left;
        RAST._IExpr _1370___mcc_h30 = _source28.dtor_right;
        DAST.Format._IBinOpFormat _1371___mcc_h31 = _source28.dtor_format2;
        DAST.Format._IBinOpFormat _1372_format = _1371___mcc_h31;
        RAST._IExpr _1373_right = _1370___mcc_h30;
        RAST._IExpr _1374_left = _1369___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _1375_op = _1368___mcc_h28;
        return (BigInteger.One) + (RAST.__default.max((_1374_left).Height(), (_1373_right).Height()));
      } else if (_source28.is_TypeAscription) {
        RAST._IExpr _1376___mcc_h36 = _source28.dtor_left;
        RAST._IType _1377___mcc_h37 = _source28.dtor_tpe;
        RAST._IType _1378_tpe = _1377___mcc_h37;
        RAST._IExpr _1379_left = _1376___mcc_h36;
        return (BigInteger.One) + ((_1379_left).Height());
      } else if (_source28.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _1380___mcc_h40 = _source28.dtor_value;
        return BigInteger.One;
      } else if (_source28.is_LiteralBool) {
        bool _1381___mcc_h42 = _source28.dtor_bvalue;
        return BigInteger.One;
      } else if (_source28.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _1382___mcc_h44 = _source28.dtor_value;
        bool _1383___mcc_h45 = _source28.dtor_binary;
        return BigInteger.One;
      } else if (_source28.is_DeclareVar) {
        RAST._IDeclareType _1384___mcc_h48 = _source28.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _1385___mcc_h49 = _source28.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _1386___mcc_h50 = _source28.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _1387___mcc_h51 = _source28.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _1388_expr = _1387___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _1389_tpe = _1386___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _1390_name = _1385___mcc_h49;
        RAST._IDeclareType _1391_declareType = _1384___mcc_h48;
        return (BigInteger.One) + (((System.Func<Std.Wrappers._IOption<RAST._IExpr>, BigInteger>)((_source39) => {
          if (_source39.is_None) {
            return BigInteger.Zero;
          } else {
            RAST._IExpr _1392___mcc_h922 = _source39.dtor_value;
            RAST._IExpr _1393_e = _1392___mcc_h922;
            return (_1393_e).Height();
          }
        }))(_1388_expr));
      } else if (_source28.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1394___mcc_h56 = _source28.dtor_names;
        RAST._IExpr _1395___mcc_h57 = _source28.dtor_rhs;
        RAST._IExpr _1396_expr = _1395___mcc_h57;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1397_names = _1394___mcc_h56;
        return (BigInteger.One) + ((_1396_expr).Height());
      } else if (_source28.is_IfExpr) {
        RAST._IExpr _1398___mcc_h60 = _source28.dtor_cond;
        RAST._IExpr _1399___mcc_h61 = _source28.dtor_thn;
        RAST._IExpr _1400___mcc_h62 = _source28.dtor_els;
        RAST._IExpr _1401_els = _1400___mcc_h62;
        RAST._IExpr _1402_thn = _1399___mcc_h61;
        RAST._IExpr _1403_cond = _1398___mcc_h60;
        return (BigInteger.One) + (RAST.__default.max((_1403_cond).Height(), RAST.__default.max((_1402_thn).Height(), (_1401_els).Height())));
      } else if (_source28.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _1404___mcc_h66 = _source28.dtor_optCond;
        RAST._IExpr _1405___mcc_h67 = _source28.dtor_underlying;
        RAST._IExpr _1406_underlying = _1405___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _1407_optCond = _1404___mcc_h66;
        return (BigInteger.One) + ((((_1407_optCond).is_Some) ? (RAST.__default.max(((_1407_optCond).dtor_value).Height(), (_1406_underlying).Height())) : ((_1406_underlying).Height())));
      } else if (_source28.is_For) {
        Dafny.ISequence<Dafny.Rune> _1408___mcc_h70 = _source28.dtor_name;
        RAST._IExpr _1409___mcc_h71 = _source28.dtor_range;
        RAST._IExpr _1410___mcc_h72 = _source28.dtor_body;
        RAST._IExpr _1411_body = _1410___mcc_h72;
        RAST._IExpr _1412_range = _1409___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _1413_name = _1408___mcc_h70;
        return (BigInteger.One) + (RAST.__default.max((_1412_range).Height(), (_1411_body).Height()));
      } else if (_source28.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _1414___mcc_h76 = _source28.dtor_lbl;
        RAST._IExpr _1415___mcc_h77 = _source28.dtor_underlying;
        RAST._IExpr _1416_underlying = _1415___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _1417_lbl = _1414___mcc_h76;
        return (BigInteger.One) + ((_1416_underlying).Height());
      } else if (_source28.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1418___mcc_h80 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1419___mcc_h82 = _source28.dtor_optLbl;
        return BigInteger.One;
      } else if (_source28.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _1420___mcc_h84 = _source28.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _1421_optExpr = _1420___mcc_h84;
        if ((_1421_optExpr).is_Some) {
          return (BigInteger.One) + (((_1421_optExpr).dtor_value).Height());
        } else {
          return BigInteger.One;
        }
      } else if (_source28.is_CallType) {
        RAST._IExpr _1422___mcc_h86 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IType> _1423___mcc_h87 = _source28.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _1424_tpes = _1423___mcc_h87;
        RAST._IExpr _1425_obj = _1422___mcc_h86;
        return (BigInteger.One) + (RAST.__default.max((_1425_obj).Height(), DAST.Format.__default.SeqToHeight<RAST._IType>(_1424_tpes, ((System.Func<RAST._IType, BigInteger>)((_1426_tpe) => {
          return BigInteger.One;
        })))));
      } else if (_source28.is_Call) {
        RAST._IExpr _1427___mcc_h90 = _source28.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _1428___mcc_h91 = _source28.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _1429_args = _1428___mcc_h91;
        RAST._IExpr _1430_obj = _1427___mcc_h90;
        return (BigInteger.One) + (RAST.__default.max((_1430_obj).Height(), DAST.Format.__default.SeqToHeight<RAST._IExpr>(_1429_args, ((System.Func<RAST._IExpr, BigInteger>)((_1431_arg) => {
          return (_1431_arg).Height();
        })))));
      } else if (_source28.is_Select) {
        RAST._IExpr _1432___mcc_h94 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1433___mcc_h95 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1434_name = _1433___mcc_h95;
        RAST._IExpr _1435_expression = _1432___mcc_h94;
        return (BigInteger.One) + ((_1435_expression).Height());
      } else {
        RAST._IExpr _1436___mcc_h98 = _source28.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _1437___mcc_h99 = _source28.dtor_name;
        Dafny.ISequence<Dafny.Rune> _1438_name = _1437___mcc_h99;
        RAST._IExpr _1439_expression = _1436___mcc_h98;
        return (BigInteger.One) + ((_1439_expression).Height());
      }
    }
    public RAST._IExpr Optimize() {
      RAST._IExpr _source40 = this;
      if (_source40.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _1440___mcc_h0 = _source40.dtor_content;
        return this;
      } else if (_source40.is_ExprFromType) {
        RAST._IType _1441___mcc_h2 = _source40.dtor_tpe;
        return this;
      } else if (_source40.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _1442___mcc_h4 = _source40.dtor_name;
        return this;
      } else if (_source40.is_Match) {
        RAST._IExpr _1443___mcc_h6 = _source40.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _1444___mcc_h7 = _source40.dtor_cases;
        return this;
      } else if (_source40.is_StmtExpr) {
        RAST._IExpr _1445___mcc_h10 = _source40.dtor_stmt;
        RAST._IExpr _1446___mcc_h11 = _source40.dtor_rhs;
        RAST._IExpr _source41 = _1445___mcc_h10;
        if (_source41.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _1447___mcc_h14 = _source41.dtor_content;
          return this;
        } else if (_source41.is_ExprFromType) {
          RAST._IType _1448___mcc_h16 = _source41.dtor_tpe;
          return this;
        } else if (_source41.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _1449___mcc_h18 = _source41.dtor_name;
          return this;
        } else if (_source41.is_Match) {
          RAST._IExpr _1450___mcc_h20 = _source41.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _1451___mcc_h21 = _source41.dtor_cases;
          return this;
        } else if (_source41.is_StmtExpr) {
          RAST._IExpr _1452___mcc_h24 = _source41.dtor_stmt;
          RAST._IExpr _1453___mcc_h25 = _source41.dtor_rhs;
          return this;
        } else if (_source41.is_Block) {
          RAST._IExpr _1454___mcc_h28 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_StructBuild) {
          RAST._IExpr _1455___mcc_h30 = _source41.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _1456___mcc_h31 = _source41.dtor_assignments;
          return this;
        } else if (_source41.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _1457___mcc_h34 = _source41.dtor_arguments;
          return this;
        } else if (_source41.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _1458___mcc_h36 = _source41.dtor_op1;
          RAST._IExpr _1459___mcc_h37 = _source41.dtor_underlying;
          DAST.Format._IUnOpFormat _1460___mcc_h38 = _source41.dtor_format;
          return this;
        } else if (_source41.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _1461___mcc_h42 = _source41.dtor_op2;
          RAST._IExpr _1462___mcc_h43 = _source41.dtor_left;
          RAST._IExpr _1463___mcc_h44 = _source41.dtor_right;
          DAST.Format._IBinOpFormat _1464___mcc_h45 = _source41.dtor_format2;
          return this;
        } else if (_source41.is_TypeAscription) {
          RAST._IExpr _1465___mcc_h50 = _source41.dtor_left;
          RAST._IType _1466___mcc_h51 = _source41.dtor_tpe;
          return this;
        } else if (_source41.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _1467___mcc_h54 = _source41.dtor_value;
          return this;
        } else if (_source41.is_LiteralBool) {
          bool _1468___mcc_h56 = _source41.dtor_bvalue;
          return this;
        } else if (_source41.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _1469___mcc_h58 = _source41.dtor_value;
          bool _1470___mcc_h59 = _source41.dtor_binary;
          return this;
        } else if (_source41.is_DeclareVar) {
          RAST._IDeclareType _1471___mcc_h62 = _source41.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _1472___mcc_h63 = _source41.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _1473___mcc_h64 = _source41.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _1474___mcc_h65 = _source41.dtor_optRhs;
          Std.Wrappers._IOption<RAST._IType> _source42 = _1473___mcc_h64;
          if (_source42.is_None) {
            return this;
          } else {
            RAST._IType _1475___mcc_h70 = _source42.dtor_value;
            Std.Wrappers._IOption<RAST._IExpr> _source43 = _1474___mcc_h65;
            if (_source43.is_None) {
              RAST._IExpr _source44 = _1446___mcc_h11;
              if (_source44.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1476___mcc_h72 = _source44.dtor_content;
                return this;
              } else if (_source44.is_ExprFromType) {
                RAST._IType _1477___mcc_h74 = _source44.dtor_tpe;
                return this;
              } else if (_source44.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1478___mcc_h76 = _source44.dtor_name;
                return this;
              } else if (_source44.is_Match) {
                RAST._IExpr _1479___mcc_h78 = _source44.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1480___mcc_h79 = _source44.dtor_cases;
                return this;
              } else if (_source44.is_StmtExpr) {
                RAST._IExpr _1481___mcc_h82 = _source44.dtor_stmt;
                RAST._IExpr _1482___mcc_h83 = _source44.dtor_rhs;
                RAST._IExpr _source45 = _1481___mcc_h82;
                if (_source45.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _1483___mcc_h86 = _source45.dtor_content;
                  return this;
                } else if (_source45.is_ExprFromType) {
                  RAST._IType _1484___mcc_h88 = _source45.dtor_tpe;
                  return this;
                } else if (_source45.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _1485___mcc_h90 = _source45.dtor_name;
                  return this;
                } else if (_source45.is_Match) {
                  RAST._IExpr _1486___mcc_h92 = _source45.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _1487___mcc_h93 = _source45.dtor_cases;
                  return this;
                } else if (_source45.is_StmtExpr) {
                  RAST._IExpr _1488___mcc_h96 = _source45.dtor_stmt;
                  RAST._IExpr _1489___mcc_h97 = _source45.dtor_rhs;
                  return this;
                } else if (_source45.is_Block) {
                  RAST._IExpr _1490___mcc_h100 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_StructBuild) {
                  RAST._IExpr _1491___mcc_h102 = _source45.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _1492___mcc_h103 = _source45.dtor_assignments;
                  return this;
                } else if (_source45.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _1493___mcc_h106 = _source45.dtor_arguments;
                  return this;
                } else if (_source45.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1494___mcc_h108 = _source45.dtor_op1;
                  RAST._IExpr _1495___mcc_h109 = _source45.dtor_underlying;
                  DAST.Format._IUnOpFormat _1496___mcc_h110 = _source45.dtor_format;
                  return this;
                } else if (_source45.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _1497___mcc_h114 = _source45.dtor_op2;
                  RAST._IExpr _1498___mcc_h115 = _source45.dtor_left;
                  RAST._IExpr _1499___mcc_h116 = _source45.dtor_right;
                  DAST.Format._IBinOpFormat _1500___mcc_h117 = _source45.dtor_format2;
                  return this;
                } else if (_source45.is_TypeAscription) {
                  RAST._IExpr _1501___mcc_h122 = _source45.dtor_left;
                  RAST._IType _1502___mcc_h123 = _source45.dtor_tpe;
                  return this;
                } else if (_source45.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _1503___mcc_h126 = _source45.dtor_value;
                  return this;
                } else if (_source45.is_LiteralBool) {
                  bool _1504___mcc_h128 = _source45.dtor_bvalue;
                  return this;
                } else if (_source45.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _1505___mcc_h130 = _source45.dtor_value;
                  bool _1506___mcc_h131 = _source45.dtor_binary;
                  return this;
                } else if (_source45.is_DeclareVar) {
                  RAST._IDeclareType _1507___mcc_h134 = _source45.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _1508___mcc_h135 = _source45.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _1509___mcc_h136 = _source45.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _1510___mcc_h137 = _source45.dtor_optRhs;
                  return this;
                } else if (_source45.is_Assign) {
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1511___mcc_h142 = _source45.dtor_names;
                  RAST._IExpr _1512___mcc_h143 = _source45.dtor_rhs;
                  RAST._IExpr _1513_last = _1482___mcc_h83;
                  RAST._IExpr _1514_rhs = _1512___mcc_h143;
                  Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1515_name2 = _1511___mcc_h142;
                  RAST._IType _1516_tpe = _1475___mcc_h70;
                  Dafny.ISequence<Dafny.Rune> _1517_name = _1472___mcc_h63;
                  RAST._IDeclareType _1518_mod = _1471___mcc_h62;
                  if ((Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_1517_name)).Equals(_1515_name2)) {
                    RAST._IExpr _1519_rewriting = RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(_1518_mod, _1517_name, Std.Wrappers.Option<RAST._IType>.create_Some(_1516_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_1514_rhs)), _1513_last);
                    return _1519_rewriting;
                  } else {
                    return this;
                  }
                } else if (_source45.is_IfExpr) {
                  RAST._IExpr _1520___mcc_h146 = _source45.dtor_cond;
                  RAST._IExpr _1521___mcc_h147 = _source45.dtor_thn;
                  RAST._IExpr _1522___mcc_h148 = _source45.dtor_els;
                  return this;
                } else if (_source45.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _1523___mcc_h152 = _source45.dtor_optCond;
                  RAST._IExpr _1524___mcc_h153 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_For) {
                  Dafny.ISequence<Dafny.Rune> _1525___mcc_h156 = _source45.dtor_name;
                  RAST._IExpr _1526___mcc_h157 = _source45.dtor_range;
                  RAST._IExpr _1527___mcc_h158 = _source45.dtor_body;
                  return this;
                } else if (_source45.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _1528___mcc_h162 = _source45.dtor_lbl;
                  RAST._IExpr _1529___mcc_h163 = _source45.dtor_underlying;
                  return this;
                } else if (_source45.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1530___mcc_h166 = _source45.dtor_optLbl;
                  return this;
                } else if (_source45.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1531___mcc_h168 = _source45.dtor_optLbl;
                  return this;
                } else if (_source45.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _1532___mcc_h170 = _source45.dtor_optExpr;
                  return this;
                } else if (_source45.is_CallType) {
                  RAST._IExpr _1533___mcc_h172 = _source45.dtor_obj;
                  Dafny.ISequence<RAST._IType> _1534___mcc_h173 = _source45.dtor_typeParameters;
                  return this;
                } else if (_source45.is_Call) {
                  RAST._IExpr _1535___mcc_h176 = _source45.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _1536___mcc_h177 = _source45.dtor_arguments;
                  return this;
                } else if (_source45.is_Select) {
                  RAST._IExpr _1537___mcc_h180 = _source45.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1538___mcc_h181 = _source45.dtor_name;
                  return this;
                } else {
                  RAST._IExpr _1539___mcc_h184 = _source45.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _1540___mcc_h185 = _source45.dtor_name;
                  return this;
                }
              } else if (_source44.is_Block) {
                RAST._IExpr _1541___mcc_h188 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_StructBuild) {
                RAST._IExpr _1542___mcc_h190 = _source44.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1543___mcc_h191 = _source44.dtor_assignments;
                return this;
              } else if (_source44.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1544___mcc_h194 = _source44.dtor_arguments;
                return this;
              } else if (_source44.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1545___mcc_h196 = _source44.dtor_op1;
                RAST._IExpr _1546___mcc_h197 = _source44.dtor_underlying;
                DAST.Format._IUnOpFormat _1547___mcc_h198 = _source44.dtor_format;
                return this;
              } else if (_source44.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1548___mcc_h202 = _source44.dtor_op2;
                RAST._IExpr _1549___mcc_h203 = _source44.dtor_left;
                RAST._IExpr _1550___mcc_h204 = _source44.dtor_right;
                DAST.Format._IBinOpFormat _1551___mcc_h205 = _source44.dtor_format2;
                return this;
              } else if (_source44.is_TypeAscription) {
                RAST._IExpr _1552___mcc_h210 = _source44.dtor_left;
                RAST._IType _1553___mcc_h211 = _source44.dtor_tpe;
                return this;
              } else if (_source44.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1554___mcc_h214 = _source44.dtor_value;
                return this;
              } else if (_source44.is_LiteralBool) {
                bool _1555___mcc_h216 = _source44.dtor_bvalue;
                return this;
              } else if (_source44.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1556___mcc_h218 = _source44.dtor_value;
                bool _1557___mcc_h219 = _source44.dtor_binary;
                return this;
              } else if (_source44.is_DeclareVar) {
                RAST._IDeclareType _1558___mcc_h222 = _source44.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1559___mcc_h223 = _source44.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1560___mcc_h224 = _source44.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1561___mcc_h225 = _source44.dtor_optRhs;
                return this;
              } else if (_source44.is_Assign) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1562___mcc_h230 = _source44.dtor_names;
                RAST._IExpr _1563___mcc_h231 = _source44.dtor_rhs;
                return this;
              } else if (_source44.is_IfExpr) {
                RAST._IExpr _1564___mcc_h234 = _source44.dtor_cond;
                RAST._IExpr _1565___mcc_h235 = _source44.dtor_thn;
                RAST._IExpr _1566___mcc_h236 = _source44.dtor_els;
                return this;
              } else if (_source44.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1567___mcc_h240 = _source44.dtor_optCond;
                RAST._IExpr _1568___mcc_h241 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_For) {
                Dafny.ISequence<Dafny.Rune> _1569___mcc_h244 = _source44.dtor_name;
                RAST._IExpr _1570___mcc_h245 = _source44.dtor_range;
                RAST._IExpr _1571___mcc_h246 = _source44.dtor_body;
                return this;
              } else if (_source44.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1572___mcc_h250 = _source44.dtor_lbl;
                RAST._IExpr _1573___mcc_h251 = _source44.dtor_underlying;
                return this;
              } else if (_source44.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1574___mcc_h254 = _source44.dtor_optLbl;
                return this;
              } else if (_source44.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1575___mcc_h256 = _source44.dtor_optLbl;
                return this;
              } else if (_source44.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1576___mcc_h258 = _source44.dtor_optExpr;
                return this;
              } else if (_source44.is_CallType) {
                RAST._IExpr _1577___mcc_h260 = _source44.dtor_obj;
                Dafny.ISequence<RAST._IType> _1578___mcc_h261 = _source44.dtor_typeParameters;
                return this;
              } else if (_source44.is_Call) {
                RAST._IExpr _1579___mcc_h264 = _source44.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1580___mcc_h265 = _source44.dtor_arguments;
                return this;
              } else if (_source44.is_Select) {
                RAST._IExpr _1581___mcc_h268 = _source44.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1582___mcc_h269 = _source44.dtor_name;
                return this;
              } else {
                RAST._IExpr _1583___mcc_h272 = _source44.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1584___mcc_h273 = _source44.dtor_name;
                return this;
              }
            } else {
              RAST._IExpr _1585___mcc_h276 = _source43.dtor_value;
              return this;
            }
          }
        } else if (_source41.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1586___mcc_h278 = _source41.dtor_names;
          RAST._IExpr _1587___mcc_h279 = _source41.dtor_rhs;
          return this;
        } else if (_source41.is_IfExpr) {
          RAST._IExpr _1588___mcc_h282 = _source41.dtor_cond;
          RAST._IExpr _1589___mcc_h283 = _source41.dtor_thn;
          RAST._IExpr _1590___mcc_h284 = _source41.dtor_els;
          RAST._IExpr _source46 = _1588___mcc_h282;
          if (_source46.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1591___mcc_h288 = _source46.dtor_content;
            return this;
          } else if (_source46.is_ExprFromType) {
            RAST._IType _1592___mcc_h290 = _source46.dtor_tpe;
            return this;
          } else if (_source46.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1593___mcc_h292 = _source46.dtor_name;
            return this;
          } else if (_source46.is_Match) {
            RAST._IExpr _1594___mcc_h294 = _source46.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1595___mcc_h295 = _source46.dtor_cases;
            return this;
          } else if (_source46.is_StmtExpr) {
            RAST._IExpr _1596___mcc_h298 = _source46.dtor_stmt;
            RAST._IExpr _1597___mcc_h299 = _source46.dtor_rhs;
            return this;
          } else if (_source46.is_Block) {
            RAST._IExpr _1598___mcc_h302 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_StructBuild) {
            RAST._IExpr _1599___mcc_h304 = _source46.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1600___mcc_h305 = _source46.dtor_assignments;
            return this;
          } else if (_source46.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1601___mcc_h308 = _source46.dtor_arguments;
            return this;
          } else if (_source46.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1602___mcc_h310 = _source46.dtor_op1;
            RAST._IExpr _1603___mcc_h311 = _source46.dtor_underlying;
            DAST.Format._IUnOpFormat _1604___mcc_h312 = _source46.dtor_format;
            if (object.Equals(_1602___mcc_h310, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
              RAST._IExpr _source47 = _1603___mcc_h311;
              if (_source47.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _1605___mcc_h316 = _source47.dtor_content;
                return this;
              } else if (_source47.is_ExprFromType) {
                RAST._IType _1606___mcc_h318 = _source47.dtor_tpe;
                return this;
              } else if (_source47.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _1607___mcc_h320 = _source47.dtor_name;
                return this;
              } else if (_source47.is_Match) {
                RAST._IExpr _1608___mcc_h322 = _source47.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _1609___mcc_h323 = _source47.dtor_cases;
                return this;
              } else if (_source47.is_StmtExpr) {
                RAST._IExpr _1610___mcc_h326 = _source47.dtor_stmt;
                RAST._IExpr _1611___mcc_h327 = _source47.dtor_rhs;
                return this;
              } else if (_source47.is_Block) {
                RAST._IExpr _1612___mcc_h330 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_StructBuild) {
                RAST._IExpr _1613___mcc_h332 = _source47.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _1614___mcc_h333 = _source47.dtor_assignments;
                return this;
              } else if (_source47.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _1615___mcc_h336 = _source47.dtor_arguments;
                return this;
              } else if (_source47.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _1616___mcc_h338 = _source47.dtor_op1;
                RAST._IExpr _1617___mcc_h339 = _source47.dtor_underlying;
                DAST.Format._IUnOpFormat _1618___mcc_h340 = _source47.dtor_format;
                return this;
              } else if (_source47.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _1619___mcc_h344 = _source47.dtor_op2;
                RAST._IExpr _1620___mcc_h345 = _source47.dtor_left;
                RAST._IExpr _1621___mcc_h346 = _source47.dtor_right;
                DAST.Format._IBinOpFormat _1622___mcc_h347 = _source47.dtor_format2;
                if (object.Equals(_1619___mcc_h344, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
                  RAST._IExpr _source48 = _1589___mcc_h283;
                  if (_source48.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _1623___mcc_h352 = _source48.dtor_content;
                    if (object.Equals(_1623___mcc_h352, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"Halt\");"))) {
                      RAST._IExpr _source49 = _1590___mcc_h284;
                      if (_source49.is_RawExpr) {
                        Dafny.ISequence<Dafny.Rune> _1624___mcc_h354 = _source49.dtor_content;
                        if (object.Equals(_1624___mcc_h354, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
                          RAST._IExpr _1625_last = _1446___mcc_h11;
                          DAST.Format._IUnOpFormat _1626_of = _1604___mcc_h312;
                          DAST.Format._IBinOpFormat _1627_f = _1622___mcc_h347;
                          RAST._IExpr _1628_b = _1621___mcc_h346;
                          RAST._IExpr _1629_a = _1620___mcc_h345;
                          RAST._IExpr _1630_rewriting = RAST.Expr.create_StmtExpr((RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("assert_eq!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_1629_a, _1628_b)), _1625_last);
                          return _1630_rewriting;
                        } else {
                          return this;
                        }
                      } else if (_source49.is_ExprFromType) {
                        RAST._IType _1631___mcc_h356 = _source49.dtor_tpe;
                        return this;
                      } else if (_source49.is_Identifier) {
                        Dafny.ISequence<Dafny.Rune> _1632___mcc_h358 = _source49.dtor_name;
                        return this;
                      } else if (_source49.is_Match) {
                        RAST._IExpr _1633___mcc_h360 = _source49.dtor_matchee;
                        Dafny.ISequence<RAST._IMatchCase> _1634___mcc_h361 = _source49.dtor_cases;
                        return this;
                      } else if (_source49.is_StmtExpr) {
                        RAST._IExpr _1635___mcc_h364 = _source49.dtor_stmt;
                        RAST._IExpr _1636___mcc_h365 = _source49.dtor_rhs;
                        return this;
                      } else if (_source49.is_Block) {
                        RAST._IExpr _1637___mcc_h368 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_StructBuild) {
                        RAST._IExpr _1638___mcc_h370 = _source49.dtor_underlying;
                        Dafny.ISequence<RAST._IAssignIdentifier> _1639___mcc_h371 = _source49.dtor_assignments;
                        return this;
                      } else if (_source49.is_Tuple) {
                        Dafny.ISequence<RAST._IExpr> _1640___mcc_h374 = _source49.dtor_arguments;
                        return this;
                      } else if (_source49.is_UnaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1641___mcc_h376 = _source49.dtor_op1;
                        RAST._IExpr _1642___mcc_h377 = _source49.dtor_underlying;
                        DAST.Format._IUnOpFormat _1643___mcc_h378 = _source49.dtor_format;
                        return this;
                      } else if (_source49.is_BinaryOp) {
                        Dafny.ISequence<Dafny.Rune> _1644___mcc_h382 = _source49.dtor_op2;
                        RAST._IExpr _1645___mcc_h383 = _source49.dtor_left;
                        RAST._IExpr _1646___mcc_h384 = _source49.dtor_right;
                        DAST.Format._IBinOpFormat _1647___mcc_h385 = _source49.dtor_format2;
                        return this;
                      } else if (_source49.is_TypeAscription) {
                        RAST._IExpr _1648___mcc_h390 = _source49.dtor_left;
                        RAST._IType _1649___mcc_h391 = _source49.dtor_tpe;
                        return this;
                      } else if (_source49.is_LiteralInt) {
                        Dafny.ISequence<Dafny.Rune> _1650___mcc_h394 = _source49.dtor_value;
                        return this;
                      } else if (_source49.is_LiteralBool) {
                        bool _1651___mcc_h396 = _source49.dtor_bvalue;
                        return this;
                      } else if (_source49.is_LiteralString) {
                        Dafny.ISequence<Dafny.Rune> _1652___mcc_h398 = _source49.dtor_value;
                        bool _1653___mcc_h399 = _source49.dtor_binary;
                        return this;
                      } else if (_source49.is_DeclareVar) {
                        RAST._IDeclareType _1654___mcc_h402 = _source49.dtor_declareType;
                        Dafny.ISequence<Dafny.Rune> _1655___mcc_h403 = _source49.dtor_name;
                        Std.Wrappers._IOption<RAST._IType> _1656___mcc_h404 = _source49.dtor_optType;
                        Std.Wrappers._IOption<RAST._IExpr> _1657___mcc_h405 = _source49.dtor_optRhs;
                        return this;
                      } else if (_source49.is_Assign) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1658___mcc_h410 = _source49.dtor_names;
                        RAST._IExpr _1659___mcc_h411 = _source49.dtor_rhs;
                        return this;
                      } else if (_source49.is_IfExpr) {
                        RAST._IExpr _1660___mcc_h414 = _source49.dtor_cond;
                        RAST._IExpr _1661___mcc_h415 = _source49.dtor_thn;
                        RAST._IExpr _1662___mcc_h416 = _source49.dtor_els;
                        return this;
                      } else if (_source49.is_Loop) {
                        Std.Wrappers._IOption<RAST._IExpr> _1663___mcc_h420 = _source49.dtor_optCond;
                        RAST._IExpr _1664___mcc_h421 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_For) {
                        Dafny.ISequence<Dafny.Rune> _1665___mcc_h424 = _source49.dtor_name;
                        RAST._IExpr _1666___mcc_h425 = _source49.dtor_range;
                        RAST._IExpr _1667___mcc_h426 = _source49.dtor_body;
                        return this;
                      } else if (_source49.is_Labelled) {
                        Dafny.ISequence<Dafny.Rune> _1668___mcc_h430 = _source49.dtor_lbl;
                        RAST._IExpr _1669___mcc_h431 = _source49.dtor_underlying;
                        return this;
                      } else if (_source49.is_Break) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1670___mcc_h434 = _source49.dtor_optLbl;
                        return this;
                      } else if (_source49.is_Continue) {
                        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1671___mcc_h436 = _source49.dtor_optLbl;
                        return this;
                      } else if (_source49.is_Return) {
                        Std.Wrappers._IOption<RAST._IExpr> _1672___mcc_h438 = _source49.dtor_optExpr;
                        return this;
                      } else if (_source49.is_CallType) {
                        RAST._IExpr _1673___mcc_h440 = _source49.dtor_obj;
                        Dafny.ISequence<RAST._IType> _1674___mcc_h441 = _source49.dtor_typeParameters;
                        return this;
                      } else if (_source49.is_Call) {
                        RAST._IExpr _1675___mcc_h444 = _source49.dtor_obj;
                        Dafny.ISequence<RAST._IExpr> _1676___mcc_h445 = _source49.dtor_arguments;
                        return this;
                      } else if (_source49.is_Select) {
                        RAST._IExpr _1677___mcc_h448 = _source49.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1678___mcc_h449 = _source49.dtor_name;
                        return this;
                      } else {
                        RAST._IExpr _1679___mcc_h452 = _source49.dtor_obj;
                        Dafny.ISequence<Dafny.Rune> _1680___mcc_h453 = _source49.dtor_name;
                        return this;
                      }
                    } else {
                      return this;
                    }
                  } else if (_source48.is_ExprFromType) {
                    RAST._IType _1681___mcc_h456 = _source48.dtor_tpe;
                    return this;
                  } else if (_source48.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _1682___mcc_h458 = _source48.dtor_name;
                    return this;
                  } else if (_source48.is_Match) {
                    RAST._IExpr _1683___mcc_h460 = _source48.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _1684___mcc_h461 = _source48.dtor_cases;
                    return this;
                  } else if (_source48.is_StmtExpr) {
                    RAST._IExpr _1685___mcc_h464 = _source48.dtor_stmt;
                    RAST._IExpr _1686___mcc_h465 = _source48.dtor_rhs;
                    return this;
                  } else if (_source48.is_Block) {
                    RAST._IExpr _1687___mcc_h468 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_StructBuild) {
                    RAST._IExpr _1688___mcc_h470 = _source48.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _1689___mcc_h471 = _source48.dtor_assignments;
                    return this;
                  } else if (_source48.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _1690___mcc_h474 = _source48.dtor_arguments;
                    return this;
                  } else if (_source48.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1691___mcc_h476 = _source48.dtor_op1;
                    RAST._IExpr _1692___mcc_h477 = _source48.dtor_underlying;
                    DAST.Format._IUnOpFormat _1693___mcc_h478 = _source48.dtor_format;
                    return this;
                  } else if (_source48.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _1694___mcc_h482 = _source48.dtor_op2;
                    RAST._IExpr _1695___mcc_h483 = _source48.dtor_left;
                    RAST._IExpr _1696___mcc_h484 = _source48.dtor_right;
                    DAST.Format._IBinOpFormat _1697___mcc_h485 = _source48.dtor_format2;
                    return this;
                  } else if (_source48.is_TypeAscription) {
                    RAST._IExpr _1698___mcc_h490 = _source48.dtor_left;
                    RAST._IType _1699___mcc_h491 = _source48.dtor_tpe;
                    return this;
                  } else if (_source48.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _1700___mcc_h494 = _source48.dtor_value;
                    return this;
                  } else if (_source48.is_LiteralBool) {
                    bool _1701___mcc_h496 = _source48.dtor_bvalue;
                    return this;
                  } else if (_source48.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _1702___mcc_h498 = _source48.dtor_value;
                    bool _1703___mcc_h499 = _source48.dtor_binary;
                    return this;
                  } else if (_source48.is_DeclareVar) {
                    RAST._IDeclareType _1704___mcc_h502 = _source48.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _1705___mcc_h503 = _source48.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _1706___mcc_h504 = _source48.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _1707___mcc_h505 = _source48.dtor_optRhs;
                    return this;
                  } else if (_source48.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1708___mcc_h510 = _source48.dtor_names;
                    RAST._IExpr _1709___mcc_h511 = _source48.dtor_rhs;
                    return this;
                  } else if (_source48.is_IfExpr) {
                    RAST._IExpr _1710___mcc_h514 = _source48.dtor_cond;
                    RAST._IExpr _1711___mcc_h515 = _source48.dtor_thn;
                    RAST._IExpr _1712___mcc_h516 = _source48.dtor_els;
                    return this;
                  } else if (_source48.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _1713___mcc_h520 = _source48.dtor_optCond;
                    RAST._IExpr _1714___mcc_h521 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_For) {
                    Dafny.ISequence<Dafny.Rune> _1715___mcc_h524 = _source48.dtor_name;
                    RAST._IExpr _1716___mcc_h525 = _source48.dtor_range;
                    RAST._IExpr _1717___mcc_h526 = _source48.dtor_body;
                    return this;
                  } else if (_source48.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _1718___mcc_h530 = _source48.dtor_lbl;
                    RAST._IExpr _1719___mcc_h531 = _source48.dtor_underlying;
                    return this;
                  } else if (_source48.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1720___mcc_h534 = _source48.dtor_optLbl;
                    return this;
                  } else if (_source48.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1721___mcc_h536 = _source48.dtor_optLbl;
                    return this;
                  } else if (_source48.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _1722___mcc_h538 = _source48.dtor_optExpr;
                    return this;
                  } else if (_source48.is_CallType) {
                    RAST._IExpr _1723___mcc_h540 = _source48.dtor_obj;
                    Dafny.ISequence<RAST._IType> _1724___mcc_h541 = _source48.dtor_typeParameters;
                    return this;
                  } else if (_source48.is_Call) {
                    RAST._IExpr _1725___mcc_h544 = _source48.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _1726___mcc_h545 = _source48.dtor_arguments;
                    return this;
                  } else if (_source48.is_Select) {
                    RAST._IExpr _1727___mcc_h548 = _source48.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1728___mcc_h549 = _source48.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _1729___mcc_h552 = _source48.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _1730___mcc_h553 = _source48.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              } else if (_source47.is_TypeAscription) {
                RAST._IExpr _1731___mcc_h556 = _source47.dtor_left;
                RAST._IType _1732___mcc_h557 = _source47.dtor_tpe;
                return this;
              } else if (_source47.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _1733___mcc_h560 = _source47.dtor_value;
                return this;
              } else if (_source47.is_LiteralBool) {
                bool _1734___mcc_h562 = _source47.dtor_bvalue;
                return this;
              } else if (_source47.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _1735___mcc_h564 = _source47.dtor_value;
                bool _1736___mcc_h565 = _source47.dtor_binary;
                return this;
              } else if (_source47.is_DeclareVar) {
                RAST._IDeclareType _1737___mcc_h568 = _source47.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _1738___mcc_h569 = _source47.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _1739___mcc_h570 = _source47.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _1740___mcc_h571 = _source47.dtor_optRhs;
                return this;
              } else if (_source47.is_Assign) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1741___mcc_h576 = _source47.dtor_names;
                RAST._IExpr _1742___mcc_h577 = _source47.dtor_rhs;
                return this;
              } else if (_source47.is_IfExpr) {
                RAST._IExpr _1743___mcc_h580 = _source47.dtor_cond;
                RAST._IExpr _1744___mcc_h581 = _source47.dtor_thn;
                RAST._IExpr _1745___mcc_h582 = _source47.dtor_els;
                return this;
              } else if (_source47.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _1746___mcc_h586 = _source47.dtor_optCond;
                RAST._IExpr _1747___mcc_h587 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_For) {
                Dafny.ISequence<Dafny.Rune> _1748___mcc_h590 = _source47.dtor_name;
                RAST._IExpr _1749___mcc_h591 = _source47.dtor_range;
                RAST._IExpr _1750___mcc_h592 = _source47.dtor_body;
                return this;
              } else if (_source47.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _1751___mcc_h596 = _source47.dtor_lbl;
                RAST._IExpr _1752___mcc_h597 = _source47.dtor_underlying;
                return this;
              } else if (_source47.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1753___mcc_h600 = _source47.dtor_optLbl;
                return this;
              } else if (_source47.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1754___mcc_h602 = _source47.dtor_optLbl;
                return this;
              } else if (_source47.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _1755___mcc_h604 = _source47.dtor_optExpr;
                return this;
              } else if (_source47.is_CallType) {
                RAST._IExpr _1756___mcc_h606 = _source47.dtor_obj;
                Dafny.ISequence<RAST._IType> _1757___mcc_h607 = _source47.dtor_typeParameters;
                return this;
              } else if (_source47.is_Call) {
                RAST._IExpr _1758___mcc_h610 = _source47.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _1759___mcc_h611 = _source47.dtor_arguments;
                return this;
              } else if (_source47.is_Select) {
                RAST._IExpr _1760___mcc_h614 = _source47.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1761___mcc_h615 = _source47.dtor_name;
                return this;
              } else {
                RAST._IExpr _1762___mcc_h618 = _source47.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _1763___mcc_h619 = _source47.dtor_name;
                return this;
              }
            } else {
              return this;
            }
          } else if (_source46.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1764___mcc_h622 = _source46.dtor_op2;
            RAST._IExpr _1765___mcc_h623 = _source46.dtor_left;
            RAST._IExpr _1766___mcc_h624 = _source46.dtor_right;
            DAST.Format._IBinOpFormat _1767___mcc_h625 = _source46.dtor_format2;
            return this;
          } else if (_source46.is_TypeAscription) {
            RAST._IExpr _1768___mcc_h630 = _source46.dtor_left;
            RAST._IType _1769___mcc_h631 = _source46.dtor_tpe;
            return this;
          } else if (_source46.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1770___mcc_h634 = _source46.dtor_value;
            return this;
          } else if (_source46.is_LiteralBool) {
            bool _1771___mcc_h636 = _source46.dtor_bvalue;
            return this;
          } else if (_source46.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1772___mcc_h638 = _source46.dtor_value;
            bool _1773___mcc_h639 = _source46.dtor_binary;
            return this;
          } else if (_source46.is_DeclareVar) {
            RAST._IDeclareType _1774___mcc_h642 = _source46.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1775___mcc_h643 = _source46.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1776___mcc_h644 = _source46.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1777___mcc_h645 = _source46.dtor_optRhs;
            return this;
          } else if (_source46.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1778___mcc_h650 = _source46.dtor_names;
            RAST._IExpr _1779___mcc_h651 = _source46.dtor_rhs;
            return this;
          } else if (_source46.is_IfExpr) {
            RAST._IExpr _1780___mcc_h654 = _source46.dtor_cond;
            RAST._IExpr _1781___mcc_h655 = _source46.dtor_thn;
            RAST._IExpr _1782___mcc_h656 = _source46.dtor_els;
            return this;
          } else if (_source46.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1783___mcc_h660 = _source46.dtor_optCond;
            RAST._IExpr _1784___mcc_h661 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_For) {
            Dafny.ISequence<Dafny.Rune> _1785___mcc_h664 = _source46.dtor_name;
            RAST._IExpr _1786___mcc_h665 = _source46.dtor_range;
            RAST._IExpr _1787___mcc_h666 = _source46.dtor_body;
            return this;
          } else if (_source46.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1788___mcc_h670 = _source46.dtor_lbl;
            RAST._IExpr _1789___mcc_h671 = _source46.dtor_underlying;
            return this;
          } else if (_source46.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1790___mcc_h674 = _source46.dtor_optLbl;
            return this;
          } else if (_source46.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1791___mcc_h676 = _source46.dtor_optLbl;
            return this;
          } else if (_source46.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1792___mcc_h678 = _source46.dtor_optExpr;
            return this;
          } else if (_source46.is_CallType) {
            RAST._IExpr _1793___mcc_h680 = _source46.dtor_obj;
            Dafny.ISequence<RAST._IType> _1794___mcc_h681 = _source46.dtor_typeParameters;
            return this;
          } else if (_source46.is_Call) {
            RAST._IExpr _1795___mcc_h684 = _source46.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1796___mcc_h685 = _source46.dtor_arguments;
            return this;
          } else if (_source46.is_Select) {
            RAST._IExpr _1797___mcc_h688 = _source46.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1798___mcc_h689 = _source46.dtor_name;
            return this;
          } else {
            RAST._IExpr _1799___mcc_h692 = _source46.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1800___mcc_h693 = _source46.dtor_name;
            return this;
          }
        } else if (_source41.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _1801___mcc_h696 = _source41.dtor_optCond;
          RAST._IExpr _1802___mcc_h697 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_For) {
          Dafny.ISequence<Dafny.Rune> _1803___mcc_h700 = _source41.dtor_name;
          RAST._IExpr _1804___mcc_h701 = _source41.dtor_range;
          RAST._IExpr _1805___mcc_h702 = _source41.dtor_body;
          return this;
        } else if (_source41.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _1806___mcc_h706 = _source41.dtor_lbl;
          RAST._IExpr _1807___mcc_h707 = _source41.dtor_underlying;
          return this;
        } else if (_source41.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1808___mcc_h710 = _source41.dtor_optLbl;
          return this;
        } else if (_source41.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1809___mcc_h712 = _source41.dtor_optLbl;
          return this;
        } else if (_source41.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _1810___mcc_h714 = _source41.dtor_optExpr;
          return this;
        } else if (_source41.is_CallType) {
          RAST._IExpr _1811___mcc_h716 = _source41.dtor_obj;
          Dafny.ISequence<RAST._IType> _1812___mcc_h717 = _source41.dtor_typeParameters;
          return this;
        } else if (_source41.is_Call) {
          RAST._IExpr _1813___mcc_h720 = _source41.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _1814___mcc_h721 = _source41.dtor_arguments;
          return this;
        } else if (_source41.is_Select) {
          RAST._IExpr _1815___mcc_h724 = _source41.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1816___mcc_h725 = _source41.dtor_name;
          return this;
        } else {
          RAST._IExpr _1817___mcc_h728 = _source41.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _1818___mcc_h729 = _source41.dtor_name;
          return this;
        }
      } else if (_source40.is_Block) {
        RAST._IExpr _1819___mcc_h732 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_StructBuild) {
        RAST._IExpr _1820___mcc_h734 = _source40.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _1821___mcc_h735 = _source40.dtor_assignments;
        return this;
      } else if (_source40.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _1822___mcc_h738 = _source40.dtor_arguments;
        return this;
      } else if (_source40.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _1823___mcc_h740 = _source40.dtor_op1;
        RAST._IExpr _1824___mcc_h741 = _source40.dtor_underlying;
        DAST.Format._IUnOpFormat _1825___mcc_h742 = _source40.dtor_format;
        if (object.Equals(_1823___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          RAST._IExpr _source50 = _1824___mcc_h741;
          if (_source50.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1826___mcc_h746 = _source50.dtor_content;
            return this;
          } else if (_source50.is_ExprFromType) {
            RAST._IType _1827___mcc_h748 = _source50.dtor_tpe;
            return this;
          } else if (_source50.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1828___mcc_h750 = _source50.dtor_name;
            return this;
          } else if (_source50.is_Match) {
            RAST._IExpr _1829___mcc_h752 = _source50.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1830___mcc_h753 = _source50.dtor_cases;
            return this;
          } else if (_source50.is_StmtExpr) {
            RAST._IExpr _1831___mcc_h756 = _source50.dtor_stmt;
            RAST._IExpr _1832___mcc_h757 = _source50.dtor_rhs;
            return this;
          } else if (_source50.is_Block) {
            RAST._IExpr _1833___mcc_h760 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_StructBuild) {
            RAST._IExpr _1834___mcc_h762 = _source50.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1835___mcc_h763 = _source50.dtor_assignments;
            return this;
          } else if (_source50.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1836___mcc_h766 = _source50.dtor_arguments;
            return this;
          } else if (_source50.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1837___mcc_h768 = _source50.dtor_op1;
            RAST._IExpr _1838___mcc_h769 = _source50.dtor_underlying;
            DAST.Format._IUnOpFormat _1839___mcc_h770 = _source50.dtor_format;
            return this;
          } else if (_source50.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1840___mcc_h774 = _source50.dtor_op2;
            RAST._IExpr _1841___mcc_h775 = _source50.dtor_left;
            RAST._IExpr _1842___mcc_h776 = _source50.dtor_right;
            DAST.Format._IBinOpFormat _1843___mcc_h777 = _source50.dtor_format2;
            return this;
          } else if (_source50.is_TypeAscription) {
            RAST._IExpr _1844___mcc_h782 = _source50.dtor_left;
            RAST._IType _1845___mcc_h783 = _source50.dtor_tpe;
            return this;
          } else if (_source50.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1846___mcc_h786 = _source50.dtor_value;
            return this;
          } else if (_source50.is_LiteralBool) {
            bool _1847___mcc_h788 = _source50.dtor_bvalue;
            return this;
          } else if (_source50.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1848___mcc_h790 = _source50.dtor_value;
            bool _1849___mcc_h791 = _source50.dtor_binary;
            return this;
          } else if (_source50.is_DeclareVar) {
            RAST._IDeclareType _1850___mcc_h794 = _source50.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1851___mcc_h795 = _source50.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1852___mcc_h796 = _source50.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1853___mcc_h797 = _source50.dtor_optRhs;
            return this;
          } else if (_source50.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1854___mcc_h802 = _source50.dtor_names;
            RAST._IExpr _1855___mcc_h803 = _source50.dtor_rhs;
            return this;
          } else if (_source50.is_IfExpr) {
            RAST._IExpr _1856___mcc_h806 = _source50.dtor_cond;
            RAST._IExpr _1857___mcc_h807 = _source50.dtor_thn;
            RAST._IExpr _1858___mcc_h808 = _source50.dtor_els;
            return this;
          } else if (_source50.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1859___mcc_h812 = _source50.dtor_optCond;
            RAST._IExpr _1860___mcc_h813 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_For) {
            Dafny.ISequence<Dafny.Rune> _1861___mcc_h816 = _source50.dtor_name;
            RAST._IExpr _1862___mcc_h817 = _source50.dtor_range;
            RAST._IExpr _1863___mcc_h818 = _source50.dtor_body;
            return this;
          } else if (_source50.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1864___mcc_h822 = _source50.dtor_lbl;
            RAST._IExpr _1865___mcc_h823 = _source50.dtor_underlying;
            return this;
          } else if (_source50.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1866___mcc_h826 = _source50.dtor_optLbl;
            return this;
          } else if (_source50.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1867___mcc_h828 = _source50.dtor_optLbl;
            return this;
          } else if (_source50.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1868___mcc_h830 = _source50.dtor_optExpr;
            return this;
          } else if (_source50.is_CallType) {
            RAST._IExpr _1869___mcc_h832 = _source50.dtor_obj;
            Dafny.ISequence<RAST._IType> _1870___mcc_h833 = _source50.dtor_typeParameters;
            return this;
          } else if (_source50.is_Call) {
            RAST._IExpr _1871___mcc_h836 = _source50.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1872___mcc_h837 = _source50.dtor_arguments;
            RAST._IExpr _source51 = _1871___mcc_h836;
            if (_source51.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _1873___mcc_h840 = _source51.dtor_content;
              return this;
            } else if (_source51.is_ExprFromType) {
              RAST._IType _1874___mcc_h842 = _source51.dtor_tpe;
              return this;
            } else if (_source51.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _1875___mcc_h844 = _source51.dtor_name;
              return this;
            } else if (_source51.is_Match) {
              RAST._IExpr _1876___mcc_h846 = _source51.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _1877___mcc_h847 = _source51.dtor_cases;
              return this;
            } else if (_source51.is_StmtExpr) {
              RAST._IExpr _1878___mcc_h850 = _source51.dtor_stmt;
              RAST._IExpr _1879___mcc_h851 = _source51.dtor_rhs;
              return this;
            } else if (_source51.is_Block) {
              RAST._IExpr _1880___mcc_h854 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_StructBuild) {
              RAST._IExpr _1881___mcc_h856 = _source51.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _1882___mcc_h857 = _source51.dtor_assignments;
              return this;
            } else if (_source51.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _1883___mcc_h860 = _source51.dtor_arguments;
              return this;
            } else if (_source51.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _1884___mcc_h862 = _source51.dtor_op1;
              RAST._IExpr _1885___mcc_h863 = _source51.dtor_underlying;
              DAST.Format._IUnOpFormat _1886___mcc_h864 = _source51.dtor_format;
              return this;
            } else if (_source51.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _1887___mcc_h868 = _source51.dtor_op2;
              RAST._IExpr _1888___mcc_h869 = _source51.dtor_left;
              RAST._IExpr _1889___mcc_h870 = _source51.dtor_right;
              DAST.Format._IBinOpFormat _1890___mcc_h871 = _source51.dtor_format2;
              return this;
            } else if (_source51.is_TypeAscription) {
              RAST._IExpr _1891___mcc_h876 = _source51.dtor_left;
              RAST._IType _1892___mcc_h877 = _source51.dtor_tpe;
              return this;
            } else if (_source51.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _1893___mcc_h880 = _source51.dtor_value;
              return this;
            } else if (_source51.is_LiteralBool) {
              bool _1894___mcc_h882 = _source51.dtor_bvalue;
              return this;
            } else if (_source51.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _1895___mcc_h884 = _source51.dtor_value;
              bool _1896___mcc_h885 = _source51.dtor_binary;
              return this;
            } else if (_source51.is_DeclareVar) {
              RAST._IDeclareType _1897___mcc_h888 = _source51.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _1898___mcc_h889 = _source51.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _1899___mcc_h890 = _source51.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _1900___mcc_h891 = _source51.dtor_optRhs;
              return this;
            } else if (_source51.is_Assign) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1901___mcc_h896 = _source51.dtor_names;
              RAST._IExpr _1902___mcc_h897 = _source51.dtor_rhs;
              return this;
            } else if (_source51.is_IfExpr) {
              RAST._IExpr _1903___mcc_h900 = _source51.dtor_cond;
              RAST._IExpr _1904___mcc_h901 = _source51.dtor_thn;
              RAST._IExpr _1905___mcc_h902 = _source51.dtor_els;
              return this;
            } else if (_source51.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _1906___mcc_h906 = _source51.dtor_optCond;
              RAST._IExpr _1907___mcc_h907 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_For) {
              Dafny.ISequence<Dafny.Rune> _1908___mcc_h910 = _source51.dtor_name;
              RAST._IExpr _1909___mcc_h911 = _source51.dtor_range;
              RAST._IExpr _1910___mcc_h912 = _source51.dtor_body;
              return this;
            } else if (_source51.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _1911___mcc_h916 = _source51.dtor_lbl;
              RAST._IExpr _1912___mcc_h917 = _source51.dtor_underlying;
              return this;
            } else if (_source51.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1913___mcc_h920 = _source51.dtor_optLbl;
              return this;
            } else if (_source51.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1914___mcc_h922 = _source51.dtor_optLbl;
              return this;
            } else if (_source51.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _1915___mcc_h924 = _source51.dtor_optExpr;
              return this;
            } else if (_source51.is_CallType) {
              RAST._IExpr _1916___mcc_h926 = _source51.dtor_obj;
              Dafny.ISequence<RAST._IType> _1917___mcc_h927 = _source51.dtor_typeParameters;
              return this;
            } else if (_source51.is_Call) {
              RAST._IExpr _1918___mcc_h930 = _source51.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _1919___mcc_h931 = _source51.dtor_arguments;
              return this;
            } else if (_source51.is_Select) {
              RAST._IExpr _1920___mcc_h934 = _source51.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1921___mcc_h935 = _source51.dtor_name;
              if (object.Equals(_1921___mcc_h935, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))) {
                DAST.Format._IUnOpFormat _1922_format = _1825___mcc_h742;
                Dafny.ISequence<RAST._IExpr> _1923_args = _1872___mcc_h837;
                RAST._IExpr _1924_underlying = _1920___mcc_h934;
                if ((_1923_args).Equals(Dafny.Sequence<RAST._IExpr>.FromElements())) {
                  return RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _1924_underlying, _1922_format);
                } else {
                  return this;
                }
              } else {
                return this;
              }
            } else {
              RAST._IExpr _1925___mcc_h938 = _source51.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _1926___mcc_h939 = _source51.dtor_name;
              return this;
            }
          } else if (_source50.is_Select) {
            RAST._IExpr _1927___mcc_h942 = _source50.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1928___mcc_h943 = _source50.dtor_name;
            return this;
          } else {
            RAST._IExpr _1929___mcc_h946 = _source50.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1930___mcc_h947 = _source50.dtor_name;
            return this;
          }
        } else if (object.Equals(_1823___mcc_h740, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          RAST._IExpr _source52 = _1824___mcc_h741;
          if (_source52.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _1931___mcc_h950 = _source52.dtor_content;
            return this;
          } else if (_source52.is_ExprFromType) {
            RAST._IType _1932___mcc_h952 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _1933___mcc_h954 = _source52.dtor_name;
            return this;
          } else if (_source52.is_Match) {
            RAST._IExpr _1934___mcc_h956 = _source52.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _1935___mcc_h957 = _source52.dtor_cases;
            return this;
          } else if (_source52.is_StmtExpr) {
            RAST._IExpr _1936___mcc_h960 = _source52.dtor_stmt;
            RAST._IExpr _1937___mcc_h961 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_Block) {
            RAST._IExpr _1938___mcc_h964 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_StructBuild) {
            RAST._IExpr _1939___mcc_h966 = _source52.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _1940___mcc_h967 = _source52.dtor_assignments;
            return this;
          } else if (_source52.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _1941___mcc_h970 = _source52.dtor_arguments;
            return this;
          } else if (_source52.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _1942___mcc_h972 = _source52.dtor_op1;
            RAST._IExpr _1943___mcc_h973 = _source52.dtor_underlying;
            DAST.Format._IUnOpFormat _1944___mcc_h974 = _source52.dtor_format;
            return this;
          } else if (_source52.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _1945___mcc_h978 = _source52.dtor_op2;
            RAST._IExpr _1946___mcc_h979 = _source52.dtor_left;
            RAST._IExpr _1947___mcc_h980 = _source52.dtor_right;
            DAST.Format._IBinOpFormat _1948___mcc_h981 = _source52.dtor_format2;
            if (object.Equals(_1945___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
              DAST.Format._IUnOpFormat _source53 = _1825___mcc_h742;
              if (_source53.is_NoFormat) {
                return this;
              } else {
                DAST.Format._IBinOpFormat _1949_format = _1948___mcc_h981;
                RAST._IExpr _1950_right = _1947___mcc_h980;
                RAST._IExpr _1951_left = _1946___mcc_h979;
                return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="), _1951_left, _1950_right, DAST.Format.BinOpFormat.create_NoFormat());
              }
            } else if (object.Equals(_1945___mcc_h978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
              DAST.Format._IBinOpFormat _source54 = _1948___mcc_h981;
              if (_source54.is_NoFormat) {
                DAST.Format._IUnOpFormat _source55 = _1825___mcc_h742;
                if (_source55.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1952_right = _1947___mcc_h980;
                  RAST._IExpr _1953_left = _1946___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="), _1953_left, _1952_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              } else if (_source54.is_ImpliesFormat) {
                return this;
              } else if (_source54.is_Equivalence) {
                return this;
              } else {
                DAST.Format._IUnOpFormat _source56 = _1825___mcc_h742;
                if (_source56.is_NoFormat) {
                  return this;
                } else {
                  RAST._IExpr _1954_right = _1947___mcc_h980;
                  RAST._IExpr _1955_left = _1946___mcc_h979;
                  return RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _1954_right, _1955_left, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else {
              return this;
            }
          } else if (_source52.is_TypeAscription) {
            RAST._IExpr _1956___mcc_h986 = _source52.dtor_left;
            RAST._IType _1957___mcc_h987 = _source52.dtor_tpe;
            return this;
          } else if (_source52.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _1958___mcc_h990 = _source52.dtor_value;
            return this;
          } else if (_source52.is_LiteralBool) {
            bool _1959___mcc_h992 = _source52.dtor_bvalue;
            return this;
          } else if (_source52.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _1960___mcc_h994 = _source52.dtor_value;
            bool _1961___mcc_h995 = _source52.dtor_binary;
            return this;
          } else if (_source52.is_DeclareVar) {
            RAST._IDeclareType _1962___mcc_h998 = _source52.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _1963___mcc_h999 = _source52.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _1964___mcc_h1000 = _source52.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _1965___mcc_h1001 = _source52.dtor_optRhs;
            return this;
          } else if (_source52.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _1966___mcc_h1006 = _source52.dtor_names;
            RAST._IExpr _1967___mcc_h1007 = _source52.dtor_rhs;
            return this;
          } else if (_source52.is_IfExpr) {
            RAST._IExpr _1968___mcc_h1010 = _source52.dtor_cond;
            RAST._IExpr _1969___mcc_h1011 = _source52.dtor_thn;
            RAST._IExpr _1970___mcc_h1012 = _source52.dtor_els;
            return this;
          } else if (_source52.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _1971___mcc_h1016 = _source52.dtor_optCond;
            RAST._IExpr _1972___mcc_h1017 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_For) {
            Dafny.ISequence<Dafny.Rune> _1973___mcc_h1020 = _source52.dtor_name;
            RAST._IExpr _1974___mcc_h1021 = _source52.dtor_range;
            RAST._IExpr _1975___mcc_h1022 = _source52.dtor_body;
            return this;
          } else if (_source52.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _1976___mcc_h1026 = _source52.dtor_lbl;
            RAST._IExpr _1977___mcc_h1027 = _source52.dtor_underlying;
            return this;
          } else if (_source52.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1978___mcc_h1030 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _1979___mcc_h1032 = _source52.dtor_optLbl;
            return this;
          } else if (_source52.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _1980___mcc_h1034 = _source52.dtor_optExpr;
            return this;
          } else if (_source52.is_CallType) {
            RAST._IExpr _1981___mcc_h1036 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IType> _1982___mcc_h1037 = _source52.dtor_typeParameters;
            return this;
          } else if (_source52.is_Call) {
            RAST._IExpr _1983___mcc_h1040 = _source52.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _1984___mcc_h1041 = _source52.dtor_arguments;
            return this;
          } else if (_source52.is_Select) {
            RAST._IExpr _1985___mcc_h1044 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1986___mcc_h1045 = _source52.dtor_name;
            return this;
          } else {
            RAST._IExpr _1987___mcc_h1048 = _source52.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _1988___mcc_h1049 = _source52.dtor_name;
            return this;
          }
        } else {
          return this;
        }
      } else if (_source40.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _1989___mcc_h1052 = _source40.dtor_op2;
        RAST._IExpr _1990___mcc_h1053 = _source40.dtor_left;
        RAST._IExpr _1991___mcc_h1054 = _source40.dtor_right;
        DAST.Format._IBinOpFormat _1992___mcc_h1055 = _source40.dtor_format2;
        return this;
      } else if (_source40.is_TypeAscription) {
        RAST._IExpr _1993___mcc_h1060 = _source40.dtor_left;
        RAST._IType _1994___mcc_h1061 = _source40.dtor_tpe;
        return this;
      } else if (_source40.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _1995___mcc_h1064 = _source40.dtor_value;
        return this;
      } else if (_source40.is_LiteralBool) {
        bool _1996___mcc_h1066 = _source40.dtor_bvalue;
        return this;
      } else if (_source40.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _1997___mcc_h1068 = _source40.dtor_value;
        bool _1998___mcc_h1069 = _source40.dtor_binary;
        return this;
      } else if (_source40.is_DeclareVar) {
        RAST._IDeclareType _1999___mcc_h1072 = _source40.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2000___mcc_h1073 = _source40.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2001___mcc_h1074 = _source40.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2002___mcc_h1075 = _source40.dtor_optRhs;
        return this;
      } else if (_source40.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2003___mcc_h1080 = _source40.dtor_names;
        RAST._IExpr _2004___mcc_h1081 = _source40.dtor_rhs;
        return this;
      } else if (_source40.is_IfExpr) {
        RAST._IExpr _2005___mcc_h1084 = _source40.dtor_cond;
        RAST._IExpr _2006___mcc_h1085 = _source40.dtor_thn;
        RAST._IExpr _2007___mcc_h1086 = _source40.dtor_els;
        return this;
      } else if (_source40.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2008___mcc_h1090 = _source40.dtor_optCond;
        RAST._IExpr _2009___mcc_h1091 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_For) {
        Dafny.ISequence<Dafny.Rune> _2010___mcc_h1094 = _source40.dtor_name;
        RAST._IExpr _2011___mcc_h1095 = _source40.dtor_range;
        RAST._IExpr _2012___mcc_h1096 = _source40.dtor_body;
        return this;
      } else if (_source40.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2013___mcc_h1100 = _source40.dtor_lbl;
        RAST._IExpr _2014___mcc_h1101 = _source40.dtor_underlying;
        return this;
      } else if (_source40.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2015___mcc_h1104 = _source40.dtor_optLbl;
        return this;
      } else if (_source40.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2016___mcc_h1106 = _source40.dtor_optLbl;
        return this;
      } else if (_source40.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2017___mcc_h1108 = _source40.dtor_optExpr;
        return this;
      } else if (_source40.is_CallType) {
        RAST._IExpr _2018___mcc_h1110 = _source40.dtor_obj;
        Dafny.ISequence<RAST._IType> _2019___mcc_h1111 = _source40.dtor_typeParameters;
        return this;
      } else if (_source40.is_Call) {
        RAST._IExpr _2020___mcc_h1114 = _source40.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2021___mcc_h1115 = _source40.dtor_arguments;
        RAST._IExpr _source57 = _2020___mcc_h1114;
        if (_source57.is_RawExpr) {
          Dafny.ISequence<Dafny.Rune> _2022___mcc_h1118 = _source57.dtor_content;
          return this;
        } else if (_source57.is_ExprFromType) {
          RAST._IType _2023___mcc_h1120 = _source57.dtor_tpe;
          return this;
        } else if (_source57.is_Identifier) {
          Dafny.ISequence<Dafny.Rune> _2024___mcc_h1122 = _source57.dtor_name;
          return this;
        } else if (_source57.is_Match) {
          RAST._IExpr _2025___mcc_h1124 = _source57.dtor_matchee;
          Dafny.ISequence<RAST._IMatchCase> _2026___mcc_h1125 = _source57.dtor_cases;
          return this;
        } else if (_source57.is_StmtExpr) {
          RAST._IExpr _2027___mcc_h1128 = _source57.dtor_stmt;
          RAST._IExpr _2028___mcc_h1129 = _source57.dtor_rhs;
          return this;
        } else if (_source57.is_Block) {
          RAST._IExpr _2029___mcc_h1132 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_StructBuild) {
          RAST._IExpr _2030___mcc_h1134 = _source57.dtor_underlying;
          Dafny.ISequence<RAST._IAssignIdentifier> _2031___mcc_h1135 = _source57.dtor_assignments;
          return this;
        } else if (_source57.is_Tuple) {
          Dafny.ISequence<RAST._IExpr> _2032___mcc_h1138 = _source57.dtor_arguments;
          return this;
        } else if (_source57.is_UnaryOp) {
          Dafny.ISequence<Dafny.Rune> _2033___mcc_h1140 = _source57.dtor_op1;
          RAST._IExpr _2034___mcc_h1141 = _source57.dtor_underlying;
          DAST.Format._IUnOpFormat _2035___mcc_h1142 = _source57.dtor_format;
          return this;
        } else if (_source57.is_BinaryOp) {
          Dafny.ISequence<Dafny.Rune> _2036___mcc_h1146 = _source57.dtor_op2;
          RAST._IExpr _2037___mcc_h1147 = _source57.dtor_left;
          RAST._IExpr _2038___mcc_h1148 = _source57.dtor_right;
          DAST.Format._IBinOpFormat _2039___mcc_h1149 = _source57.dtor_format2;
          return this;
        } else if (_source57.is_TypeAscription) {
          RAST._IExpr _2040___mcc_h1154 = _source57.dtor_left;
          RAST._IType _2041___mcc_h1155 = _source57.dtor_tpe;
          return this;
        } else if (_source57.is_LiteralInt) {
          Dafny.ISequence<Dafny.Rune> _2042___mcc_h1158 = _source57.dtor_value;
          return this;
        } else if (_source57.is_LiteralBool) {
          bool _2043___mcc_h1160 = _source57.dtor_bvalue;
          return this;
        } else if (_source57.is_LiteralString) {
          Dafny.ISequence<Dafny.Rune> _2044___mcc_h1162 = _source57.dtor_value;
          bool _2045___mcc_h1163 = _source57.dtor_binary;
          return this;
        } else if (_source57.is_DeclareVar) {
          RAST._IDeclareType _2046___mcc_h1166 = _source57.dtor_declareType;
          Dafny.ISequence<Dafny.Rune> _2047___mcc_h1167 = _source57.dtor_name;
          Std.Wrappers._IOption<RAST._IType> _2048___mcc_h1168 = _source57.dtor_optType;
          Std.Wrappers._IOption<RAST._IExpr> _2049___mcc_h1169 = _source57.dtor_optRhs;
          return this;
        } else if (_source57.is_Assign) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2050___mcc_h1174 = _source57.dtor_names;
          RAST._IExpr _2051___mcc_h1175 = _source57.dtor_rhs;
          return this;
        } else if (_source57.is_IfExpr) {
          RAST._IExpr _2052___mcc_h1178 = _source57.dtor_cond;
          RAST._IExpr _2053___mcc_h1179 = _source57.dtor_thn;
          RAST._IExpr _2054___mcc_h1180 = _source57.dtor_els;
          return this;
        } else if (_source57.is_Loop) {
          Std.Wrappers._IOption<RAST._IExpr> _2055___mcc_h1184 = _source57.dtor_optCond;
          RAST._IExpr _2056___mcc_h1185 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_For) {
          Dafny.ISequence<Dafny.Rune> _2057___mcc_h1188 = _source57.dtor_name;
          RAST._IExpr _2058___mcc_h1189 = _source57.dtor_range;
          RAST._IExpr _2059___mcc_h1190 = _source57.dtor_body;
          return this;
        } else if (_source57.is_Labelled) {
          Dafny.ISequence<Dafny.Rune> _2060___mcc_h1194 = _source57.dtor_lbl;
          RAST._IExpr _2061___mcc_h1195 = _source57.dtor_underlying;
          return this;
        } else if (_source57.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2062___mcc_h1198 = _source57.dtor_optLbl;
          return this;
        } else if (_source57.is_Continue) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2063___mcc_h1200 = _source57.dtor_optLbl;
          return this;
        } else if (_source57.is_Return) {
          Std.Wrappers._IOption<RAST._IExpr> _2064___mcc_h1202 = _source57.dtor_optExpr;
          return this;
        } else if (_source57.is_CallType) {
          RAST._IExpr _2065___mcc_h1204 = _source57.dtor_obj;
          Dafny.ISequence<RAST._IType> _2066___mcc_h1205 = _source57.dtor_typeParameters;
          return this;
        } else if (_source57.is_Call) {
          RAST._IExpr _2067___mcc_h1208 = _source57.dtor_obj;
          Dafny.ISequence<RAST._IExpr> _2068___mcc_h1209 = _source57.dtor_arguments;
          return this;
        } else if (_source57.is_Select) {
          RAST._IExpr _2069___mcc_h1212 = _source57.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2070___mcc_h1213 = _source57.dtor_name;
          return this;
        } else {
          RAST._IExpr _2071___mcc_h1216 = _source57.dtor_obj;
          Dafny.ISequence<Dafny.Rune> _2072___mcc_h1217 = _source57.dtor_name;
          if (object.Equals(_2072___mcc_h1217, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))) {
            Dafny.ISequence<RAST._IExpr> _2073_args = _2021___mcc_h1115;
            RAST._IExpr _2074_r = _2071___mcc_h1216;
            if (((!object.Equals(_2074_r, RAST.__default.dafny__runtime)) && (!object.Equals(_2074_r, RAST.__default.@global))) || ((new BigInteger((_2073_args).Count)) != (new BigInteger(2)))) {
              return this;
            } else {
              RAST._IExpr _2075_expr = (_2073_args).Select(BigInteger.Zero);
              RAST._IExpr _2076_tpeExpr = (_2073_args).Select(BigInteger.One);
              if (!((_2076_tpeExpr).is_ExprFromType)) {
                return this;
              } else {
                RAST._IType _2077_tpe = (_2076_tpeExpr).dtor_tpe;
                if (((((((((((_2077_tpe).is_U8) || ((_2077_tpe).is_U16)) || ((_2077_tpe).is_U32)) || ((_2077_tpe).is_U64)) || ((_2077_tpe).is_U128)) || ((_2077_tpe).is_I8)) || ((_2077_tpe).is_I16)) || ((_2077_tpe).is_I32)) || ((_2077_tpe).is_I64)) || ((_2077_tpe).is_I128)) {
                  RAST._IExpr _source58 = _2075_expr;
                  if (_source58.is_RawExpr) {
                    Dafny.ISequence<Dafny.Rune> _2078___mcc_h1228 = _source58.dtor_content;
                    return this;
                  } else if (_source58.is_ExprFromType) {
                    RAST._IType _2079___mcc_h1230 = _source58.dtor_tpe;
                    return this;
                  } else if (_source58.is_Identifier) {
                    Dafny.ISequence<Dafny.Rune> _2080___mcc_h1232 = _source58.dtor_name;
                    return this;
                  } else if (_source58.is_Match) {
                    RAST._IExpr _2081___mcc_h1234 = _source58.dtor_matchee;
                    Dafny.ISequence<RAST._IMatchCase> _2082___mcc_h1235 = _source58.dtor_cases;
                    return this;
                  } else if (_source58.is_StmtExpr) {
                    RAST._IExpr _2083___mcc_h1238 = _source58.dtor_stmt;
                    RAST._IExpr _2084___mcc_h1239 = _source58.dtor_rhs;
                    return this;
                  } else if (_source58.is_Block) {
                    RAST._IExpr _2085___mcc_h1242 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_StructBuild) {
                    RAST._IExpr _2086___mcc_h1244 = _source58.dtor_underlying;
                    Dafny.ISequence<RAST._IAssignIdentifier> _2087___mcc_h1245 = _source58.dtor_assignments;
                    return this;
                  } else if (_source58.is_Tuple) {
                    Dafny.ISequence<RAST._IExpr> _2088___mcc_h1248 = _source58.dtor_arguments;
                    return this;
                  } else if (_source58.is_UnaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2089___mcc_h1250 = _source58.dtor_op1;
                    RAST._IExpr _2090___mcc_h1251 = _source58.dtor_underlying;
                    DAST.Format._IUnOpFormat _2091___mcc_h1252 = _source58.dtor_format;
                    return this;
                  } else if (_source58.is_BinaryOp) {
                    Dafny.ISequence<Dafny.Rune> _2092___mcc_h1256 = _source58.dtor_op2;
                    RAST._IExpr _2093___mcc_h1257 = _source58.dtor_left;
                    RAST._IExpr _2094___mcc_h1258 = _source58.dtor_right;
                    DAST.Format._IBinOpFormat _2095___mcc_h1259 = _source58.dtor_format2;
                    return this;
                  } else if (_source58.is_TypeAscription) {
                    RAST._IExpr _2096___mcc_h1264 = _source58.dtor_left;
                    RAST._IType _2097___mcc_h1265 = _source58.dtor_tpe;
                    return this;
                  } else if (_source58.is_LiteralInt) {
                    Dafny.ISequence<Dafny.Rune> _2098___mcc_h1268 = _source58.dtor_value;
                    return this;
                  } else if (_source58.is_LiteralBool) {
                    bool _2099___mcc_h1270 = _source58.dtor_bvalue;
                    return this;
                  } else if (_source58.is_LiteralString) {
                    Dafny.ISequence<Dafny.Rune> _2100___mcc_h1272 = _source58.dtor_value;
                    bool _2101___mcc_h1273 = _source58.dtor_binary;
                    return this;
                  } else if (_source58.is_DeclareVar) {
                    RAST._IDeclareType _2102___mcc_h1276 = _source58.dtor_declareType;
                    Dafny.ISequence<Dafny.Rune> _2103___mcc_h1277 = _source58.dtor_name;
                    Std.Wrappers._IOption<RAST._IType> _2104___mcc_h1278 = _source58.dtor_optType;
                    Std.Wrappers._IOption<RAST._IExpr> _2105___mcc_h1279 = _source58.dtor_optRhs;
                    return this;
                  } else if (_source58.is_Assign) {
                    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2106___mcc_h1284 = _source58.dtor_names;
                    RAST._IExpr _2107___mcc_h1285 = _source58.dtor_rhs;
                    return this;
                  } else if (_source58.is_IfExpr) {
                    RAST._IExpr _2108___mcc_h1288 = _source58.dtor_cond;
                    RAST._IExpr _2109___mcc_h1289 = _source58.dtor_thn;
                    RAST._IExpr _2110___mcc_h1290 = _source58.dtor_els;
                    return this;
                  } else if (_source58.is_Loop) {
                    Std.Wrappers._IOption<RAST._IExpr> _2111___mcc_h1294 = _source58.dtor_optCond;
                    RAST._IExpr _2112___mcc_h1295 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_For) {
                    Dafny.ISequence<Dafny.Rune> _2113___mcc_h1298 = _source58.dtor_name;
                    RAST._IExpr _2114___mcc_h1299 = _source58.dtor_range;
                    RAST._IExpr _2115___mcc_h1300 = _source58.dtor_body;
                    return this;
                  } else if (_source58.is_Labelled) {
                    Dafny.ISequence<Dafny.Rune> _2116___mcc_h1304 = _source58.dtor_lbl;
                    RAST._IExpr _2117___mcc_h1305 = _source58.dtor_underlying;
                    return this;
                  } else if (_source58.is_Break) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2118___mcc_h1308 = _source58.dtor_optLbl;
                    return this;
                  } else if (_source58.is_Continue) {
                    Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2119___mcc_h1310 = _source58.dtor_optLbl;
                    return this;
                  } else if (_source58.is_Return) {
                    Std.Wrappers._IOption<RAST._IExpr> _2120___mcc_h1312 = _source58.dtor_optExpr;
                    return this;
                  } else if (_source58.is_CallType) {
                    RAST._IExpr _2121___mcc_h1314 = _source58.dtor_obj;
                    Dafny.ISequence<RAST._IType> _2122___mcc_h1315 = _source58.dtor_typeParameters;
                    return this;
                  } else if (_source58.is_Call) {
                    RAST._IExpr _2123___mcc_h1318 = _source58.dtor_obj;
                    Dafny.ISequence<RAST._IExpr> _2124___mcc_h1319 = _source58.dtor_arguments;
                    RAST._IExpr _source59 = _2123___mcc_h1318;
                    if (_source59.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _2125___mcc_h1322 = _source59.dtor_content;
                      return this;
                    } else if (_source59.is_ExprFromType) {
                      RAST._IType _2126___mcc_h1324 = _source59.dtor_tpe;
                      return this;
                    } else if (_source59.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _2127___mcc_h1326 = _source59.dtor_name;
                      return this;
                    } else if (_source59.is_Match) {
                      RAST._IExpr _2128___mcc_h1328 = _source59.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _2129___mcc_h1329 = _source59.dtor_cases;
                      return this;
                    } else if (_source59.is_StmtExpr) {
                      RAST._IExpr _2130___mcc_h1332 = _source59.dtor_stmt;
                      RAST._IExpr _2131___mcc_h1333 = _source59.dtor_rhs;
                      return this;
                    } else if (_source59.is_Block) {
                      RAST._IExpr _2132___mcc_h1336 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_StructBuild) {
                      RAST._IExpr _2133___mcc_h1338 = _source59.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _2134___mcc_h1339 = _source59.dtor_assignments;
                      return this;
                    } else if (_source59.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _2135___mcc_h1342 = _source59.dtor_arguments;
                      return this;
                    } else if (_source59.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2136___mcc_h1344 = _source59.dtor_op1;
                      RAST._IExpr _2137___mcc_h1345 = _source59.dtor_underlying;
                      DAST.Format._IUnOpFormat _2138___mcc_h1346 = _source59.dtor_format;
                      return this;
                    } else if (_source59.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _2139___mcc_h1350 = _source59.dtor_op2;
                      RAST._IExpr _2140___mcc_h1351 = _source59.dtor_left;
                      RAST._IExpr _2141___mcc_h1352 = _source59.dtor_right;
                      DAST.Format._IBinOpFormat _2142___mcc_h1353 = _source59.dtor_format2;
                      return this;
                    } else if (_source59.is_TypeAscription) {
                      RAST._IExpr _2143___mcc_h1358 = _source59.dtor_left;
                      RAST._IType _2144___mcc_h1359 = _source59.dtor_tpe;
                      return this;
                    } else if (_source59.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _2145___mcc_h1362 = _source59.dtor_value;
                      return this;
                    } else if (_source59.is_LiteralBool) {
                      bool _2146___mcc_h1364 = _source59.dtor_bvalue;
                      return this;
                    } else if (_source59.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _2147___mcc_h1366 = _source59.dtor_value;
                      bool _2148___mcc_h1367 = _source59.dtor_binary;
                      return this;
                    } else if (_source59.is_DeclareVar) {
                      RAST._IDeclareType _2149___mcc_h1370 = _source59.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _2150___mcc_h1371 = _source59.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _2151___mcc_h1372 = _source59.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _2152___mcc_h1373 = _source59.dtor_optRhs;
                      return this;
                    } else if (_source59.is_Assign) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2153___mcc_h1378 = _source59.dtor_names;
                      RAST._IExpr _2154___mcc_h1379 = _source59.dtor_rhs;
                      return this;
                    } else if (_source59.is_IfExpr) {
                      RAST._IExpr _2155___mcc_h1382 = _source59.dtor_cond;
                      RAST._IExpr _2156___mcc_h1383 = _source59.dtor_thn;
                      RAST._IExpr _2157___mcc_h1384 = _source59.dtor_els;
                      return this;
                    } else if (_source59.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _2158___mcc_h1388 = _source59.dtor_optCond;
                      RAST._IExpr _2159___mcc_h1389 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_For) {
                      Dafny.ISequence<Dafny.Rune> _2160___mcc_h1392 = _source59.dtor_name;
                      RAST._IExpr _2161___mcc_h1393 = _source59.dtor_range;
                      RAST._IExpr _2162___mcc_h1394 = _source59.dtor_body;
                      return this;
                    } else if (_source59.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _2163___mcc_h1398 = _source59.dtor_lbl;
                      RAST._IExpr _2164___mcc_h1399 = _source59.dtor_underlying;
                      return this;
                    } else if (_source59.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2165___mcc_h1402 = _source59.dtor_optLbl;
                      return this;
                    } else if (_source59.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2166___mcc_h1404 = _source59.dtor_optLbl;
                      return this;
                    } else if (_source59.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _2167___mcc_h1406 = _source59.dtor_optExpr;
                      return this;
                    } else if (_source59.is_CallType) {
                      RAST._IExpr _2168___mcc_h1408 = _source59.dtor_obj;
                      Dafny.ISequence<RAST._IType> _2169___mcc_h1409 = _source59.dtor_typeParameters;
                      return this;
                    } else if (_source59.is_Call) {
                      RAST._IExpr _2170___mcc_h1412 = _source59.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _2171___mcc_h1413 = _source59.dtor_arguments;
                      return this;
                    } else if (_source59.is_Select) {
                      RAST._IExpr _2172___mcc_h1416 = _source59.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2173___mcc_h1417 = _source59.dtor_name;
                      return this;
                    } else {
                      RAST._IExpr _2174___mcc_h1420 = _source59.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _2175___mcc_h1421 = _source59.dtor_name;
                      if (object.Equals(_2175___mcc_h1421, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))) {
                        Dafny.ISequence<RAST._IExpr> _2176_args = _2124___mcc_h1319;
                        RAST._IExpr _2177_base = _2174___mcc_h1420;
                        if (((new BigInteger((_2176_args).Count)) == (BigInteger.One)) && ((object.Equals(_2177_base, RAST.__default.dafny__runtime)) || (object.Equals(_2177_base, RAST.__default.@global)))) {
                          RAST._IExpr _source60 = (_2176_args).Select(BigInteger.Zero);
                          if (_source60.is_RawExpr) {
                            Dafny.ISequence<Dafny.Rune> _2178___mcc_h1432 = _source60.dtor_content;
                            return this;
                          } else if (_source60.is_ExprFromType) {
                            RAST._IType _2179___mcc_h1434 = _source60.dtor_tpe;
                            return this;
                          } else if (_source60.is_Identifier) {
                            Dafny.ISequence<Dafny.Rune> _2180___mcc_h1436 = _source60.dtor_name;
                            return this;
                          } else if (_source60.is_Match) {
                            RAST._IExpr _2181___mcc_h1438 = _source60.dtor_matchee;
                            Dafny.ISequence<RAST._IMatchCase> _2182___mcc_h1439 = _source60.dtor_cases;
                            return this;
                          } else if (_source60.is_StmtExpr) {
                            RAST._IExpr _2183___mcc_h1442 = _source60.dtor_stmt;
                            RAST._IExpr _2184___mcc_h1443 = _source60.dtor_rhs;
                            return this;
                          } else if (_source60.is_Block) {
                            RAST._IExpr _2185___mcc_h1446 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_StructBuild) {
                            RAST._IExpr _2186___mcc_h1448 = _source60.dtor_underlying;
                            Dafny.ISequence<RAST._IAssignIdentifier> _2187___mcc_h1449 = _source60.dtor_assignments;
                            return this;
                          } else if (_source60.is_Tuple) {
                            Dafny.ISequence<RAST._IExpr> _2188___mcc_h1452 = _source60.dtor_arguments;
                            return this;
                          } else if (_source60.is_UnaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2189___mcc_h1454 = _source60.dtor_op1;
                            RAST._IExpr _2190___mcc_h1455 = _source60.dtor_underlying;
                            DAST.Format._IUnOpFormat _2191___mcc_h1456 = _source60.dtor_format;
                            return this;
                          } else if (_source60.is_BinaryOp) {
                            Dafny.ISequence<Dafny.Rune> _2192___mcc_h1460 = _source60.dtor_op2;
                            RAST._IExpr _2193___mcc_h1461 = _source60.dtor_left;
                            RAST._IExpr _2194___mcc_h1462 = _source60.dtor_right;
                            DAST.Format._IBinOpFormat _2195___mcc_h1463 = _source60.dtor_format2;
                            return this;
                          } else if (_source60.is_TypeAscription) {
                            RAST._IExpr _2196___mcc_h1468 = _source60.dtor_left;
                            RAST._IType _2197___mcc_h1469 = _source60.dtor_tpe;
                            return this;
                          } else if (_source60.is_LiteralInt) {
                            Dafny.ISequence<Dafny.Rune> _2198___mcc_h1472 = _source60.dtor_value;
                            Dafny.ISequence<Dafny.Rune> _2199_number = _2198___mcc_h1472;
                            return RAST.Expr.create_LiteralInt(_2199_number);
                          } else if (_source60.is_LiteralBool) {
                            bool _2200___mcc_h1474 = _source60.dtor_bvalue;
                            return this;
                          } else if (_source60.is_LiteralString) {
                            Dafny.ISequence<Dafny.Rune> _2201___mcc_h1476 = _source60.dtor_value;
                            bool _2202___mcc_h1477 = _source60.dtor_binary;
                            Dafny.ISequence<Dafny.Rune> _2203_number = _2201___mcc_h1476;
                            return RAST.Expr.create_LiteralInt(_2203_number);
                          } else if (_source60.is_DeclareVar) {
                            RAST._IDeclareType _2204___mcc_h1480 = _source60.dtor_declareType;
                            Dafny.ISequence<Dafny.Rune> _2205___mcc_h1481 = _source60.dtor_name;
                            Std.Wrappers._IOption<RAST._IType> _2206___mcc_h1482 = _source60.dtor_optType;
                            Std.Wrappers._IOption<RAST._IExpr> _2207___mcc_h1483 = _source60.dtor_optRhs;
                            return this;
                          } else if (_source60.is_Assign) {
                            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2208___mcc_h1488 = _source60.dtor_names;
                            RAST._IExpr _2209___mcc_h1489 = _source60.dtor_rhs;
                            return this;
                          } else if (_source60.is_IfExpr) {
                            RAST._IExpr _2210___mcc_h1492 = _source60.dtor_cond;
                            RAST._IExpr _2211___mcc_h1493 = _source60.dtor_thn;
                            RAST._IExpr _2212___mcc_h1494 = _source60.dtor_els;
                            return this;
                          } else if (_source60.is_Loop) {
                            Std.Wrappers._IOption<RAST._IExpr> _2213___mcc_h1498 = _source60.dtor_optCond;
                            RAST._IExpr _2214___mcc_h1499 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_For) {
                            Dafny.ISequence<Dafny.Rune> _2215___mcc_h1502 = _source60.dtor_name;
                            RAST._IExpr _2216___mcc_h1503 = _source60.dtor_range;
                            RAST._IExpr _2217___mcc_h1504 = _source60.dtor_body;
                            return this;
                          } else if (_source60.is_Labelled) {
                            Dafny.ISequence<Dafny.Rune> _2218___mcc_h1508 = _source60.dtor_lbl;
                            RAST._IExpr _2219___mcc_h1509 = _source60.dtor_underlying;
                            return this;
                          } else if (_source60.is_Break) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2220___mcc_h1512 = _source60.dtor_optLbl;
                            return this;
                          } else if (_source60.is_Continue) {
                            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2221___mcc_h1514 = _source60.dtor_optLbl;
                            return this;
                          } else if (_source60.is_Return) {
                            Std.Wrappers._IOption<RAST._IExpr> _2222___mcc_h1516 = _source60.dtor_optExpr;
                            return this;
                          } else if (_source60.is_CallType) {
                            RAST._IExpr _2223___mcc_h1518 = _source60.dtor_obj;
                            Dafny.ISequence<RAST._IType> _2224___mcc_h1519 = _source60.dtor_typeParameters;
                            return this;
                          } else if (_source60.is_Call) {
                            RAST._IExpr _2225___mcc_h1522 = _source60.dtor_obj;
                            Dafny.ISequence<RAST._IExpr> _2226___mcc_h1523 = _source60.dtor_arguments;
                            return this;
                          } else if (_source60.is_Select) {
                            RAST._IExpr _2227___mcc_h1526 = _source60.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2228___mcc_h1527 = _source60.dtor_name;
                            return this;
                          } else {
                            RAST._IExpr _2229___mcc_h1530 = _source60.dtor_obj;
                            Dafny.ISequence<Dafny.Rune> _2230___mcc_h1531 = _source60.dtor_name;
                            return this;
                          }
                        } else {
                          return this;
                        }
                      } else {
                        return this;
                      }
                    }
                  } else if (_source58.is_Select) {
                    RAST._IExpr _2231___mcc_h1424 = _source58.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2232___mcc_h1425 = _source58.dtor_name;
                    return this;
                  } else {
                    RAST._IExpr _2233___mcc_h1428 = _source58.dtor_obj;
                    Dafny.ISequence<Dafny.Rune> _2234___mcc_h1429 = _source58.dtor_name;
                    return this;
                  }
                } else {
                  return this;
                }
              }
            }
          } else {
            return this;
          }
        }
      } else if (_source40.is_Select) {
        RAST._IExpr _2235___mcc_h1220 = _source40.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2236___mcc_h1221 = _source40.dtor_name;
        return this;
      } else {
        RAST._IExpr _2237___mcc_h1224 = _source40.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2238___mcc_h1225 = _source40.dtor_name;
        return this;
      }
    }
    public bool LeftRequiresParentheses(RAST._IExpr left) {
      return ((this).printingInfo).NeedParenthesesForLeft((left).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> LeftParentheses(RAST._IExpr left) {
      if ((this).LeftRequiresParentheses(left)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public bool RightRequiresParentheses(RAST._IExpr right) {
      return ((this).printingInfo).NeedParenthesesForRight((right).printingInfo);
    }
    public _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> RightParentheses(RAST._IExpr right) {
      if ((this).RightRequiresParentheses(right)) {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else {
        return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> RightMostIdentifier() {
      RAST._IExpr _source61 = this;
      if (_source61.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2239___mcc_h0 = _source61.dtor_content;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_ExprFromType) {
        RAST._IType _2240___mcc_h2 = _source61.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2241___mcc_h4 = _source61.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Match) {
        RAST._IExpr _2242___mcc_h6 = _source61.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2243___mcc_h7 = _source61.dtor_cases;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_StmtExpr) {
        RAST._IExpr _2244___mcc_h10 = _source61.dtor_stmt;
        RAST._IExpr _2245___mcc_h11 = _source61.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Block) {
        RAST._IExpr _2246___mcc_h14 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_StructBuild) {
        RAST._IExpr _2247___mcc_h16 = _source61.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2248___mcc_h17 = _source61.dtor_assignments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2249___mcc_h20 = _source61.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2250___mcc_h22 = _source61.dtor_op1;
        RAST._IExpr _2251___mcc_h23 = _source61.dtor_underlying;
        DAST.Format._IUnOpFormat _2252___mcc_h24 = _source61.dtor_format;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2253___mcc_h28 = _source61.dtor_op2;
        RAST._IExpr _2254___mcc_h29 = _source61.dtor_left;
        RAST._IExpr _2255___mcc_h30 = _source61.dtor_right;
        DAST.Format._IBinOpFormat _2256___mcc_h31 = _source61.dtor_format2;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_TypeAscription) {
        RAST._IExpr _2257___mcc_h36 = _source61.dtor_left;
        RAST._IType _2258___mcc_h37 = _source61.dtor_tpe;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2259___mcc_h40 = _source61.dtor_value;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralBool) {
        bool _2260___mcc_h42 = _source61.dtor_bvalue;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2261___mcc_h44 = _source61.dtor_value;
        bool _2262___mcc_h45 = _source61.dtor_binary;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_DeclareVar) {
        RAST._IDeclareType _2263___mcc_h48 = _source61.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2264___mcc_h49 = _source61.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2265___mcc_h50 = _source61.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2266___mcc_h51 = _source61.dtor_optRhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2267___mcc_h56 = _source61.dtor_names;
        RAST._IExpr _2268___mcc_h57 = _source61.dtor_rhs;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_IfExpr) {
        RAST._IExpr _2269___mcc_h60 = _source61.dtor_cond;
        RAST._IExpr _2270___mcc_h61 = _source61.dtor_thn;
        RAST._IExpr _2271___mcc_h62 = _source61.dtor_els;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2272___mcc_h66 = _source61.dtor_optCond;
        RAST._IExpr _2273___mcc_h67 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_For) {
        Dafny.ISequence<Dafny.Rune> _2274___mcc_h70 = _source61.dtor_name;
        RAST._IExpr _2275___mcc_h71 = _source61.dtor_range;
        RAST._IExpr _2276___mcc_h72 = _source61.dtor_body;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2277___mcc_h76 = _source61.dtor_lbl;
        RAST._IExpr _2278___mcc_h77 = _source61.dtor_underlying;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2279___mcc_h80 = _source61.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2280___mcc_h82 = _source61.dtor_optLbl;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2281___mcc_h84 = _source61.dtor_optExpr;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_CallType) {
        RAST._IExpr _2282___mcc_h86 = _source61.dtor_obj;
        Dafny.ISequence<RAST._IType> _2283___mcc_h87 = _source61.dtor_typeParameters;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Call) {
        RAST._IExpr _2284___mcc_h90 = _source61.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2285___mcc_h91 = _source61.dtor_arguments;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else if (_source61.is_Select) {
        RAST._IExpr _2286___mcc_h94 = _source61.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2287___mcc_h95 = _source61.dtor_name;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      } else {
        RAST._IExpr _2288___mcc_h98 = _source61.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2289___mcc_h99 = _source61.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2290_id = _2289___mcc_h99;
        return Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_2290_id);
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv4 = ind;
      RAST._IExpr _source62 = (this).Optimize();
      if (_source62.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2291___mcc_h0 = _source62.dtor_content;
        RAST._IExpr _2292_r = (this).Optimize();
        return RAST.__default.AddIndent((_2292_r).dtor_content, ind);
      } else if (_source62.is_ExprFromType) {
        RAST._IType _2293___mcc_h2 = _source62.dtor_tpe;
        RAST._IType _2294_t = _2293___mcc_h2;
        return (_2294_t)._ToString(ind);
      } else if (_source62.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2295___mcc_h4 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2296_name = _2295___mcc_h4;
        return _2296_name;
      } else if (_source62.is_Match) {
        RAST._IExpr _2297___mcc_h6 = _source62.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2298___mcc_h7 = _source62.dtor_cases;
        Dafny.ISequence<RAST._IMatchCase> _2299_cases = _2298___mcc_h7;
        RAST._IExpr _2300_matchee = _2297___mcc_h6;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match "), (_2300_matchee)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IMatchCase>(_2299_cases, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>>>((_2301_ind) => ((System.Func<RAST._IMatchCase, Dafny.ISequence<Dafny.Rune>>)((_2302_c) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2301_ind), RAST.__default.IND), (_2302_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2301_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_StmtExpr) {
        RAST._IExpr _2303___mcc_h10 = _source62.dtor_stmt;
        RAST._IExpr _2304___mcc_h11 = _source62.dtor_rhs;
        RAST._IExpr _2305_rhs = _2304___mcc_h11;
        RAST._IExpr _2306_stmt = _2303___mcc_h10;
        if (((_2306_stmt).is_RawExpr) && (((_2306_stmt).dtor_content).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
          return (_2305_rhs)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2306_stmt)._ToString(ind), (((_2306_stmt).NoExtraSemicolonAfter()) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), (_2305_rhs)._ToString(ind));
        }
      } else if (_source62.is_Block) {
        RAST._IExpr _2307___mcc_h14 = _source62.dtor_underlying;
        RAST._IExpr _2308_underlying = _2307___mcc_h14;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n"), ind), RAST.__default.IND), (_2308_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_StructBuild) {
        RAST._IExpr _2309___mcc_h16 = _source62.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2310___mcc_h17 = _source62.dtor_assignments;
        Dafny.ISequence<RAST._IAssignIdentifier> _2311_assignments = _2310___mcc_h17;
        RAST._IExpr _2312_name = _2309___mcc_h16;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_2312_name)._ToString(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {")), RAST.__default.SeqToString<RAST._IAssignIdentifier>(_2311_assignments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>>>((_2313_ind) => ((System.Func<RAST._IAssignIdentifier, Dafny.ISequence<Dafny.Rune>>)((_2314_assignment) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2313_ind), RAST.__default.IND), (_2314_assignment)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2313_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2311_assignments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2315___mcc_h20 = _source62.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2316_arguments = _2315___mcc_h20;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<RAST._IExpr>(_2316_arguments, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2317_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2318_arg) => {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), _2317_ind), RAST.__default.IND), (_2318_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2317_ind, RAST.__default.IND)));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), (((new BigInteger((_2316_arguments).Count)).Sign == 1) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind)) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
      } else if (_source62.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2319___mcc_h22 = _source62.dtor_op1;
        RAST._IExpr _2320___mcc_h23 = _source62.dtor_underlying;
        DAST.Format._IUnOpFormat _2321___mcc_h24 = _source62.dtor_format;
        DAST.Format._IUnOpFormat _2322_format = _2321___mcc_h24;
        RAST._IExpr _2323_underlying = _2320___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2324_op = _2319___mcc_h22;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs41 = ((((this).printingInfo).NeedParenthesesFor((_2323_underlying).printingInfo)) ? (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))) : (_System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))));
        Dafny.ISequence<Dafny.Rune> _2325_leftP = _let_tmp_rhs41.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2326_rightP = _let_tmp_rhs41.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2327_leftOp = ((((_2324_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) && (!(_2325_leftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")))) ? (Dafny.Sequence<Dafny.Rune>.Concat(_2324_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "))) : ((((_2324_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (_2324_op))));
        Dafny.ISequence<Dafny.Rune> _2328_rightOp = (((_2324_op).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) ? (_2324_op) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2327_leftOp, _2325_leftP), (_2323_underlying)._ToString(ind)), _2326_rightP), _2328_rightOp);
      } else if (_source62.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2329___mcc_h28 = _source62.dtor_op2;
        RAST._IExpr _2330___mcc_h29 = _source62.dtor_left;
        RAST._IExpr _2331___mcc_h30 = _source62.dtor_right;
        DAST.Format._IBinOpFormat _2332___mcc_h31 = _source62.dtor_format2;
        DAST.Format._IBinOpFormat _2333_format = _2332___mcc_h31;
        RAST._IExpr _2334_right = _2331___mcc_h30;
        RAST._IExpr _2335_left = _2330___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2336_op2 = _2329___mcc_h28;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs42 = (this).LeftParentheses(_2335_left);
        Dafny.ISequence<Dafny.Rune> _2337_leftLeftP = _let_tmp_rhs42.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2338_leftRighP = _let_tmp_rhs42.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs43 = (this).RightParentheses(_2334_right);
        Dafny.ISequence<Dafny.Rune> _2339_rightLeftP = _let_tmp_rhs43.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2340_rightRightP = _let_tmp_rhs43.dtor__1;
        Dafny.ISequence<Dafny.Rune> _2341_opRendered = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), _2336_op2), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
        Dafny.ISequence<Dafny.Rune> _2342_indLeft = (((_2337_leftLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        Dafny.ISequence<Dafny.Rune> _2343_indRight = (((_2339_rightLeftP).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("))) ? (Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)) : (ind));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2337_leftLeftP, (_2335_left)._ToString(_2342_indLeft)), _2338_leftRighP), _2341_opRendered), _2339_rightLeftP), (_2334_right)._ToString(_2343_indRight)), _2340_rightRightP);
      } else if (_source62.is_TypeAscription) {
        RAST._IExpr _2344___mcc_h36 = _source62.dtor_left;
        RAST._IType _2345___mcc_h37 = _source62.dtor_tpe;
        RAST._IType _2346_tpe = _2345___mcc_h37;
        RAST._IExpr _2347_left = _2344___mcc_h36;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs44 = (this).LeftParentheses(_2347_left);
        Dafny.ISequence<Dafny.Rune> _2348_leftLeftP = _let_tmp_rhs44.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2349_leftRightP = _let_tmp_rhs44.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2348_leftLeftP, (_2347_left)._ToString(RAST.__default.IND)), _2349_leftRightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ")), (_2346_tpe)._ToString(RAST.__default.IND));
      } else if (_source62.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2350___mcc_h40 = _source62.dtor_value;
        Dafny.ISequence<Dafny.Rune> _2351_number = _2350___mcc_h40;
        return _2351_number;
      } else if (_source62.is_LiteralBool) {
        bool _2352___mcc_h42 = _source62.dtor_bvalue;
        bool _2353_b = _2352___mcc_h42;
        if (_2353_b) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true");
        } else {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false");
        }
      } else if (_source62.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2354___mcc_h44 = _source62.dtor_value;
        bool _2355___mcc_h45 = _source62.dtor_binary;
        bool _2356_binary = _2355___mcc_h45;
        Dafny.ISequence<Dafny.Rune> _2357_characters = _2354___mcc_h44;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((_2356_binary) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("b")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\"")), _2357_characters), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\""));
      } else if (_source62.is_DeclareVar) {
        RAST._IDeclareType _2358___mcc_h48 = _source62.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2359___mcc_h49 = _source62.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2360___mcc_h50 = _source62.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2361___mcc_h51 = _source62.dtor_optRhs;
        Std.Wrappers._IOption<RAST._IExpr> _2362_optExpr = _2361___mcc_h51;
        Std.Wrappers._IOption<RAST._IType> _2363_optType = _2360___mcc_h50;
        Dafny.ISequence<Dafny.Rune> _2364_name = _2359___mcc_h49;
        RAST._IDeclareType _2365_declareType = _2358___mcc_h48;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let "), ((object.Equals(_2365_declareType, RAST.DeclareType.create_MUT())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut ")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), _2364_name), (((_2363_optType).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": "), ((_2363_optType).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), (((_2362_optExpr).is_Some) ? (Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(((_2362_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)), _pat_let6_0 => Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>(_pat_let6_0, _2366_optExprString => (((_2366_optExprString).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("= /*issue with empty RHS*/"), ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_source63) => {
          if (_source63.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _2367___mcc_h102 = _source63.dtor_content;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty Raw expr");
          } else if (_source63.is_ExprFromType) {
            RAST._IType _2368___mcc_h104 = _source63.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _2369___mcc_h106 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Match) {
            RAST._IExpr _2370___mcc_h108 = _source63.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _2371___mcc_h109 = _source63.dtor_cases;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_StmtExpr) {
            RAST._IExpr _2372___mcc_h112 = _source63.dtor_stmt;
            RAST._IExpr _2373___mcc_h113 = _source63.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Block) {
            RAST._IExpr _2374___mcc_h116 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_StructBuild) {
            RAST._IExpr _2375___mcc_h118 = _source63.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _2376___mcc_h119 = _source63.dtor_assignments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _2377___mcc_h122 = _source63.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _2378___mcc_h124 = _source63.dtor_op1;
            RAST._IExpr _2379___mcc_h125 = _source63.dtor_underlying;
            DAST.Format._IUnOpFormat _2380___mcc_h126 = _source63.dtor_format;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _2381___mcc_h130 = _source63.dtor_op2;
            RAST._IExpr _2382___mcc_h131 = _source63.dtor_left;
            RAST._IExpr _2383___mcc_h132 = _source63.dtor_right;
            DAST.Format._IBinOpFormat _2384___mcc_h133 = _source63.dtor_format2;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_TypeAscription) {
            RAST._IExpr _2385___mcc_h138 = _source63.dtor_left;
            RAST._IType _2386___mcc_h139 = _source63.dtor_tpe;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _2387___mcc_h142 = _source63.dtor_value;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty int literal");
          } else if (_source63.is_LiteralBool) {
            bool _2388___mcc_h144 = _source63.dtor_bvalue;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _2389___mcc_h146 = _source63.dtor_value;
            bool _2390___mcc_h147 = _source63.dtor_binary;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Empty string literal");
          } else if (_source63.is_DeclareVar) {
            RAST._IDeclareType _2391___mcc_h150 = _source63.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _2392___mcc_h151 = _source63.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _2393___mcc_h152 = _source63.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _2394___mcc_h153 = _source63.dtor_optRhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Assign) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2395___mcc_h158 = _source63.dtor_names;
            RAST._IExpr _2396___mcc_h159 = _source63.dtor_rhs;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_IfExpr) {
            RAST._IExpr _2397___mcc_h162 = _source63.dtor_cond;
            RAST._IExpr _2398___mcc_h163 = _source63.dtor_thn;
            RAST._IExpr _2399___mcc_h164 = _source63.dtor_els;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _2400___mcc_h168 = _source63.dtor_optCond;
            RAST._IExpr _2401___mcc_h169 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_For) {
            Dafny.ISequence<Dafny.Rune> _2402___mcc_h172 = _source63.dtor_name;
            RAST._IExpr _2403___mcc_h173 = _source63.dtor_range;
            RAST._IExpr _2404___mcc_h174 = _source63.dtor_body;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _2405___mcc_h178 = _source63.dtor_lbl;
            RAST._IExpr _2406___mcc_h179 = _source63.dtor_underlying;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2407___mcc_h182 = _source63.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2408___mcc_h184 = _source63.dtor_optLbl;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _2409___mcc_h186 = _source63.dtor_optExpr;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_CallType) {
            RAST._IExpr _2410___mcc_h188 = _source63.dtor_obj;
            Dafny.ISequence<RAST._IType> _2411___mcc_h189 = _source63.dtor_typeParameters;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Call) {
            RAST._IExpr _2412___mcc_h192 = _source63.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _2413___mcc_h193 = _source63.dtor_arguments;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else if (_source63.is_Select) {
            RAST._IExpr _2414___mcc_h196 = _source63.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2415___mcc_h197 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          } else {
            RAST._IExpr _2416___mcc_h200 = _source63.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2417___mcc_h201 = _source63.dtor_name;
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Another case");
          }
        }))((_2362_optExpr).dtor_value))) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "), _2366_optExprString)))))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2418___mcc_h56 = _source62.dtor_names;
        RAST._IExpr _2419___mcc_h57 = _source62.dtor_rhs;
        RAST._IExpr _2420_expr = _2419___mcc_h57;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2421_names = _2418___mcc_h56;
        Dafny.ISequence<Dafny.Rune> _2422_lhs = (((new BigInteger((_2421_names).Count)) == (BigInteger.One)) ? (Dafny.Sequence<Dafny.Rune>.Concat((_2421_names).Select(BigInteger.Zero), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "))) : ((((new BigInteger((_2421_names).Count)).Sign == 0) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ = ")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), RAST.__default.SeqToString<Dafny.ISequence<Dafny.Rune>>(_2421_names, ((System.Func<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>)((_2423_name) => {
          return _2423_name;
        })), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") = "))))));
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2422_lhs, (_2420_expr)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_IfExpr) {
        RAST._IExpr _2424___mcc_h60 = _source62.dtor_cond;
        RAST._IExpr _2425___mcc_h61 = _source62.dtor_thn;
        RAST._IExpr _2426___mcc_h62 = _source62.dtor_els;
        RAST._IExpr _2427_els = _2426___mcc_h62;
        RAST._IExpr _2428_thn = _2425___mcc_h61;
        RAST._IExpr _2429_cond = _2424___mcc_h60;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if "), (_2429_cond)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2428_thn)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")), ((object.Equals(_2427_els, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" else {\n"), ind), RAST.__default.IND), (_2427_els)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}")))));
      } else if (_source62.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2430___mcc_h66 = _source62.dtor_optCond;
        RAST._IExpr _2431___mcc_h67 = _source62.dtor_underlying;
        RAST._IExpr _2432_underlying = _2431___mcc_h67;
        Std.Wrappers._IOption<RAST._IExpr> _2433_optCond = _2430___mcc_h66;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source64) => {
          if (_source64.is_None) {
            return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop");
          } else {
            RAST._IExpr _2434___mcc_h204 = _source64.dtor_value;
            RAST._IExpr _2435_c = _2434___mcc_h204;
            return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while "), (_2435_c)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv4, RAST.__default.IND)));
          }
        }))(_2433_optCond), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2432_underlying)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_For) {
        Dafny.ISequence<Dafny.Rune> _2436___mcc_h70 = _source62.dtor_name;
        RAST._IExpr _2437___mcc_h71 = _source62.dtor_range;
        RAST._IExpr _2438___mcc_h72 = _source62.dtor_body;
        RAST._IExpr _2439_body = _2438___mcc_h72;
        RAST._IExpr _2440_range = _2437___mcc_h71;
        Dafny.ISequence<Dafny.Rune> _2441_name = _2436___mcc_h70;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for "), _2441_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" in ")), (_2440_range)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), ind), RAST.__default.IND), (_2439_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
      } else if (_source62.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2442___mcc_h76 = _source62.dtor_lbl;
        RAST._IExpr _2443___mcc_h77 = _source62.dtor_underlying;
        RAST._IExpr _2444_underlying = _2443___mcc_h77;
        Dafny.ISequence<Dafny.Rune> _2445_name = _2442___mcc_h76;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("'"), _2445_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_2444_underlying)._ToString(ind));
      } else if (_source62.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2446___mcc_h80 = _source62.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2447_optLbl = _2446___mcc_h80;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source65 = _2447_optLbl;
        if (_source65.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2448___mcc_h205 = _source65.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2449_lbl = _2448___mcc_h205;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break '"), _2449_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source62.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2450___mcc_h82 = _source62.dtor_optLbl;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2451_optLbl = _2450___mcc_h82;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source66 = _2451_optLbl;
        if (_source66.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue;");
        } else {
          Dafny.ISequence<Dafny.Rune> _2452___mcc_h206 = _source66.dtor_value;
          Dafny.ISequence<Dafny.Rune> _2453_lbl = _2452___mcc_h206;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue '"), _2453_lbl), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
        }
      } else if (_source62.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2454___mcc_h84 = _source62.dtor_optExpr;
        Std.Wrappers._IOption<RAST._IExpr> _2455_optExpr = _2454___mcc_h84;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), (((_2455_optExpr).is_Some) ? (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "), ((_2455_optExpr).dtor_value)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(ind, RAST.__default.IND)))) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
      } else if (_source62.is_CallType) {
        RAST._IExpr _2456___mcc_h86 = _source62.dtor_obj;
        Dafny.ISequence<RAST._IType> _2457___mcc_h87 = _source62.dtor_typeParameters;
        Dafny.ISequence<RAST._IType> _2458_tpes = _2457___mcc_h87;
        RAST._IExpr _2459_expr = _2456___mcc_h86;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs45 = (this).LeftParentheses(_2459_expr);
        Dafny.ISequence<Dafny.Rune> _2460_leftP = _let_tmp_rhs45.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2461_rightP = _let_tmp_rhs45.dtor__1;
        if ((_2458_tpes).Equals(Dafny.Sequence<RAST._IType>.FromElements())) {
          return (_2459_expr)._ToString(ind);
        } else {
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2460_leftP, (_2459_expr)._ToString(ind)), _2461_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::<")), RAST.__default.SeqToString<RAST._IType>(_2458_tpes, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>>>((_2462_ind) => ((System.Func<RAST._IType, Dafny.ISequence<Dafny.Rune>>)((_2463_tpe) => {
            return (_2463_tpe)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2462_ind, RAST.__default.IND));
          })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
        }
      } else if (_source62.is_Call) {
        RAST._IExpr _2464___mcc_h90 = _source62.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2465___mcc_h91 = _source62.dtor_arguments;
        Dafny.ISequence<RAST._IExpr> _2466_args = _2465___mcc_h91;
        RAST._IExpr _2467_expr = _2464___mcc_h90;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs46 = (this).LeftParentheses(_2467_expr);
        Dafny.ISequence<Dafny.Rune> _2468_leftP = _let_tmp_rhs46.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2469_rightP = _let_tmp_rhs46.dtor__1;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs47 = ((System.Func<Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>>, _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>>)((_source67) => {
          if (_source67.is_None) {
            return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          } else {
            Dafny.ISequence<Dafny.Rune> _2470___mcc_h207 = _source67.dtor_value;
            if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("["), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            } else if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else if (object.Equals(_2470___mcc_h207, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))) {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
            } else {
              return _System.Tuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>>.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
            }
          }
        }))((_2467_expr).RightMostIdentifier());
        Dafny.ISequence<Dafny.Rune> _2471_leftCallP = _let_tmp_rhs47.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2472_rightCallP = _let_tmp_rhs47.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2468_leftP, (_2467_expr)._ToString(ind)), _2469_rightP), _2471_leftCallP), RAST.__default.SeqToString<RAST._IExpr>(_2466_args, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>>>((_2473_ind) => ((System.Func<RAST._IExpr, Dafny.ISequence<Dafny.Rune>>)((_2474_arg) => {
          return (_2474_arg)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_2473_ind, RAST.__default.IND));
        })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), _2472_rightCallP);
      } else if (_source62.is_Select) {
        RAST._IExpr _2475___mcc_h94 = _source62.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2476___mcc_h95 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2477_name = _2476___mcc_h95;
        RAST._IExpr _2478_expression = _2475___mcc_h94;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs48 = (this).LeftParentheses(_2478_expression);
        Dafny.ISequence<Dafny.Rune> _2479_leftP = _let_tmp_rhs48.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2480_rightP = _let_tmp_rhs48.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2479_leftP, (_2478_expression)._ToString(ind)), _2480_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2477_name);
      } else {
        RAST._IExpr _2481___mcc_h98 = _source62.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2482___mcc_h99 = _source62.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2483_name = _2482___mcc_h99;
        RAST._IExpr _2484_expression = _2481___mcc_h98;
        _System._ITuple2<Dafny.ISequence<Dafny.Rune>, Dafny.ISequence<Dafny.Rune>> _let_tmp_rhs49 = (this).LeftParentheses(_2484_expression);
        Dafny.ISequence<Dafny.Rune> _2485_leftP = _let_tmp_rhs49.dtor__0;
        Dafny.ISequence<Dafny.Rune> _2486_rightP = _let_tmp_rhs49.dtor__1;
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2485_leftP, (_2484_expression)._ToString(ind)), _2486_rightP), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2483_name);
      }
    }
    public RAST._IExpr Then(RAST._IExpr rhs2) {
      if ((this).is_StmtExpr) {
        return RAST.Expr.create_StmtExpr((this).dtor_stmt, ((this).dtor_rhs).Then(rhs2));
      } else if (object.Equals(this, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))) {
        return rhs2;
      } else {
        return RAST.Expr.create_StmtExpr(this, rhs2);
      }
    }
    public RAST._IExpr Sel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_Select(this, name);
    }
    public RAST._IExpr MSel(Dafny.ISequence<Dafny.Rune> name) {
      return RAST.Expr.create_MemberSelect(this, name);
    }
    public RAST._IExpr ApplyType(Dafny.ISequence<RAST._IType> typeParameters) {
      return RAST.Expr.create_CallType(this, typeParameters);
    }
    public RAST._IExpr ApplyType1(RAST._IType typeParameter) {
      return RAST.Expr.create_CallType(this, Dafny.Sequence<RAST._IType>.FromElements(typeParameter));
    }
    public RAST._IExpr Apply(Dafny.ISequence<RAST._IExpr> arguments) {
      return RAST.Expr.create_Call(this, arguments);
    }
    public RAST._IExpr Apply1(RAST._IExpr argument) {
      return RAST.Expr.create_Call(this, Dafny.Sequence<RAST._IExpr>.FromElements(argument));
    }
    public RAST._IPrintingInfo printingInfo { get {
      RAST._IExpr _source68 = this;
      if (_source68.is_RawExpr) {
        Dafny.ISequence<Dafny.Rune> _2487___mcc_h0 = _source68.dtor_content;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_ExprFromType) {
        RAST._IType _2488___mcc_h2 = _source68.dtor_tpe;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_Identifier) {
        Dafny.ISequence<Dafny.Rune> _2489___mcc_h4 = _source68.dtor_name;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_Match) {
        RAST._IExpr _2490___mcc_h6 = _source68.dtor_matchee;
        Dafny.ISequence<RAST._IMatchCase> _2491___mcc_h7 = _source68.dtor_cases;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_StmtExpr) {
        RAST._IExpr _2492___mcc_h10 = _source68.dtor_stmt;
        RAST._IExpr _2493___mcc_h11 = _source68.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Block) {
        RAST._IExpr _2494___mcc_h14 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_StructBuild) {
        RAST._IExpr _2495___mcc_h16 = _source68.dtor_underlying;
        Dafny.ISequence<RAST._IAssignIdentifier> _2496___mcc_h17 = _source68.dtor_assignments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Tuple) {
        Dafny.ISequence<RAST._IExpr> _2497___mcc_h20 = _source68.dtor_arguments;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_UnaryOp) {
        Dafny.ISequence<Dafny.Rune> _2498___mcc_h22 = _source68.dtor_op1;
        RAST._IExpr _2499___mcc_h23 = _source68.dtor_underlying;
        DAST.Format._IUnOpFormat _2500___mcc_h24 = _source68.dtor_format;
        DAST.Format._IUnOpFormat _2501_format = _2500___mcc_h24;
        RAST._IExpr _2502_underlying = _2499___mcc_h23;
        Dafny.ISequence<Dafny.Rune> _2503_op = _2498___mcc_h22;
        if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("?"))) {
          return RAST.PrintingInfo.create_SuffixPrecedence(new BigInteger(5));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else if (object.Equals(_2503_op, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) {
          return RAST.PrintingInfo.create_Precedence(new BigInteger(6));
        } else {
          return RAST.PrintingInfo.create_UnknownPrecedence();
        }
      } else if (_source68.is_BinaryOp) {
        Dafny.ISequence<Dafny.Rune> _2504___mcc_h28 = _source68.dtor_op2;
        RAST._IExpr _2505___mcc_h29 = _source68.dtor_left;
        RAST._IExpr _2506___mcc_h30 = _source68.dtor_right;
        DAST.Format._IBinOpFormat _2507___mcc_h31 = _source68.dtor_format2;
        DAST.Format._IBinOpFormat _2508_format = _2507___mcc_h31;
        RAST._IExpr _2509_right = _2506___mcc_h30;
        RAST._IExpr _2510_left = _2505___mcc_h29;
        Dafny.ISequence<Dafny.Rune> _2511_op2 = _2504___mcc_h28;
        if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(20), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(30), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(40), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(50), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(60), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(70), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(80), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(90), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||"))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(100), RAST.Associativity.create_LeftToRight());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".."))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("..="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RequiresParentheses());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else if (object.Equals(_2511_op2, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>="))) {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(110), RAST.Associativity.create_RightToLeft());
        } else {
          return RAST.PrintingInfo.create_PrecedenceAssociativity(BigInteger.Zero, RAST.Associativity.create_RequiresParentheses());
        }
      } else if (_source68.is_TypeAscription) {
        RAST._IExpr _2512___mcc_h36 = _source68.dtor_left;
        RAST._IType _2513___mcc_h37 = _source68.dtor_tpe;
        RAST._IType _2514_tpe = _2513___mcc_h37;
        RAST._IExpr _2515_left = _2512___mcc_h36;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(10), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_LiteralInt) {
        Dafny.ISequence<Dafny.Rune> _2516___mcc_h40 = _source68.dtor_value;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_LiteralBool) {
        bool _2517___mcc_h42 = _source68.dtor_bvalue;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_LiteralString) {
        Dafny.ISequence<Dafny.Rune> _2518___mcc_h44 = _source68.dtor_value;
        bool _2519___mcc_h45 = _source68.dtor_binary;
        return RAST.PrintingInfo.create_Precedence(BigInteger.One);
      } else if (_source68.is_DeclareVar) {
        RAST._IDeclareType _2520___mcc_h48 = _source68.dtor_declareType;
        Dafny.ISequence<Dafny.Rune> _2521___mcc_h49 = _source68.dtor_name;
        Std.Wrappers._IOption<RAST._IType> _2522___mcc_h50 = _source68.dtor_optType;
        Std.Wrappers._IOption<RAST._IExpr> _2523___mcc_h51 = _source68.dtor_optRhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Assign) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2524___mcc_h56 = _source68.dtor_names;
        RAST._IExpr _2525___mcc_h57 = _source68.dtor_rhs;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_IfExpr) {
        RAST._IExpr _2526___mcc_h60 = _source68.dtor_cond;
        RAST._IExpr _2527___mcc_h61 = _source68.dtor_thn;
        RAST._IExpr _2528___mcc_h62 = _source68.dtor_els;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Loop) {
        Std.Wrappers._IOption<RAST._IExpr> _2529___mcc_h66 = _source68.dtor_optCond;
        RAST._IExpr _2530___mcc_h67 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_For) {
        Dafny.ISequence<Dafny.Rune> _2531___mcc_h70 = _source68.dtor_name;
        RAST._IExpr _2532___mcc_h71 = _source68.dtor_range;
        RAST._IExpr _2533___mcc_h72 = _source68.dtor_body;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Labelled) {
        Dafny.ISequence<Dafny.Rune> _2534___mcc_h76 = _source68.dtor_lbl;
        RAST._IExpr _2535___mcc_h77 = _source68.dtor_underlying;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2536___mcc_h80 = _source68.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Continue) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2537___mcc_h82 = _source68.dtor_optLbl;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_Return) {
        Std.Wrappers._IOption<RAST._IExpr> _2538___mcc_h84 = _source68.dtor_optExpr;
        return RAST.PrintingInfo.create_UnknownPrecedence();
      } else if (_source68.is_CallType) {
        RAST._IExpr _2539___mcc_h86 = _source68.dtor_obj;
        Dafny.ISequence<RAST._IType> _2540___mcc_h87 = _source68.dtor_typeParameters;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_Call) {
        RAST._IExpr _2541___mcc_h90 = _source68.dtor_obj;
        Dafny.ISequence<RAST._IExpr> _2542___mcc_h91 = _source68.dtor_arguments;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else if (_source68.is_Select) {
        RAST._IExpr _2543___mcc_h94 = _source68.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2544___mcc_h95 = _source68.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2545_name = _2544___mcc_h95;
        RAST._IExpr _2546_underlying = _2543___mcc_h94;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      } else {
        RAST._IExpr _2547___mcc_h98 = _source68.dtor_obj;
        Dafny.ISequence<Dafny.Rune> _2548___mcc_h99 = _source68.dtor_name;
        Dafny.ISequence<Dafny.Rune> _2549_name = _2548___mcc_h99;
        RAST._IExpr _2550_underlying = _2547___mcc_h98;
        return RAST.PrintingInfo.create_PrecedenceAssociativity(new BigInteger(2), RAST.Associativity.create_LeftToRight());
      }
    } }
  }
  public class Expr_RawExpr : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _content;
    public Expr_RawExpr(Dafny.ISequence<Dafny.Rune> content) : base() {
      this._content = content;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_RawExpr(_content);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_RawExpr;
      return oth != null && object.Equals(this._content, oth._content);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._content));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.RawExpr";
      s += "(";
      s += this._content.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_ExprFromType : Expr {
    public readonly RAST._IType _tpe;
    public Expr_ExprFromType(RAST._IType tpe) : base() {
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_ExprFromType(_tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_ExprFromType;
      return oth != null && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.ExprFromType";
      s += "(";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_Identifier : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Identifier(Dafny.ISequence<Dafny.Rune> name) : base() {
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Identifier(_name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Identifier;
      return oth != null && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Identifier";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_Match : Expr {
    public readonly RAST._IExpr _matchee;
    public readonly Dafny.ISequence<RAST._IMatchCase> _cases;
    public Expr_Match(RAST._IExpr matchee, Dafny.ISequence<RAST._IMatchCase> cases) : base() {
      this._matchee = matchee;
      this._cases = cases;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Match(_matchee, _cases);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Match;
      return oth != null && object.Equals(this._matchee, oth._matchee) && object.Equals(this._cases, oth._cases);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._matchee));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cases));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Match";
      s += "(";
      s += Dafny.Helpers.ToString(this._matchee);
      s += ", ";
      s += Dafny.Helpers.ToString(this._cases);
      s += ")";
      return s;
    }
  }
  public class Expr_StmtExpr : Expr {
    public readonly RAST._IExpr _stmt;
    public readonly RAST._IExpr _rhs;
    public Expr_StmtExpr(RAST._IExpr stmt, RAST._IExpr rhs) : base() {
      this._stmt = stmt;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StmtExpr(_stmt, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StmtExpr;
      return oth != null && object.Equals(this._stmt, oth._stmt) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._stmt));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StmtExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._stmt);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Block : Expr {
    public readonly RAST._IExpr _underlying;
    public Expr_Block(RAST._IExpr underlying) : base() {
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Block(_underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Block;
      return oth != null && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 5;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Block";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_StructBuild : Expr {
    public readonly RAST._IExpr _underlying;
    public readonly Dafny.ISequence<RAST._IAssignIdentifier> _assignments;
    public Expr_StructBuild(RAST._IExpr underlying, Dafny.ISequence<RAST._IAssignIdentifier> assignments) : base() {
      this._underlying = underlying;
      this._assignments = assignments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_StructBuild(_underlying, _assignments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_StructBuild;
      return oth != null && object.Equals(this._underlying, oth._underlying) && object.Equals(this._assignments, oth._assignments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 6;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._assignments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.StructBuild";
      s += "(";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._assignments);
      s += ")";
      return s;
    }
  }
  public class Expr_Tuple : Expr {
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Tuple(Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Tuple(_arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Tuple;
      return oth != null && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 7;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Tuple";
      s += "(";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_UnaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op1;
    public readonly RAST._IExpr _underlying;
    public readonly DAST.Format._IUnOpFormat _format;
    public Expr_UnaryOp(Dafny.ISequence<Dafny.Rune> op1, RAST._IExpr underlying, DAST.Format._IUnOpFormat format) : base() {
      this._op1 = op1;
      this._underlying = underlying;
      this._format = format;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_UnaryOp(_op1, _underlying, _format);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_UnaryOp;
      return oth != null && object.Equals(this._op1, oth._op1) && object.Equals(this._underlying, oth._underlying) && object.Equals(this._format, oth._format);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 8;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op1));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.UnaryOp";
      s += "(";
      s += this._op1.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format);
      s += ")";
      return s;
    }
  }
  public class Expr_BinaryOp : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _op2;
    public readonly RAST._IExpr _left;
    public readonly RAST._IExpr _right;
    public readonly DAST.Format._IBinOpFormat _format2;
    public Expr_BinaryOp(Dafny.ISequence<Dafny.Rune> op2, RAST._IExpr left, RAST._IExpr right, DAST.Format._IBinOpFormat format2) : base() {
      this._op2 = op2;
      this._left = left;
      this._right = right;
      this._format2 = format2;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_BinaryOp(_op2, _left, _right, _format2);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_BinaryOp;
      return oth != null && object.Equals(this._op2, oth._op2) && object.Equals(this._left, oth._left) && object.Equals(this._right, oth._right) && object.Equals(this._format2, oth._format2);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 9;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._op2));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._right));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._format2));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.BinaryOp";
      s += "(";
      s += this._op2.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._right);
      s += ", ";
      s += Dafny.Helpers.ToString(this._format2);
      s += ")";
      return s;
    }
  }
  public class Expr_TypeAscription : Expr {
    public readonly RAST._IExpr _left;
    public readonly RAST._IType _tpe;
    public Expr_TypeAscription(RAST._IExpr left, RAST._IType tpe) : base() {
      this._left = left;
      this._tpe = tpe;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_TypeAscription(_left, _tpe);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_TypeAscription;
      return oth != null && object.Equals(this._left, oth._left) && object.Equals(this._tpe, oth._tpe);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 10;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._left));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tpe));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.TypeAscription";
      s += "(";
      s += Dafny.Helpers.ToString(this._left);
      s += ", ";
      s += Dafny.Helpers.ToString(this._tpe);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralInt : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public Expr_LiteralInt(Dafny.ISequence<Dafny.Rune> @value) : base() {
      this._value = @value;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralInt(_value);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralInt;
      return oth != null && object.Equals(this._value, oth._value);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 11;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralInt";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralBool : Expr {
    public readonly bool _bvalue;
    public Expr_LiteralBool(bool bvalue) : base() {
      this._bvalue = bvalue;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralBool(_bvalue);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralBool;
      return oth != null && this._bvalue == oth._bvalue;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 12;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._bvalue));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralBool";
      s += "(";
      s += Dafny.Helpers.ToString(this._bvalue);
      s += ")";
      return s;
    }
  }
  public class Expr_LiteralString : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _value;
    public readonly bool _binary;
    public Expr_LiteralString(Dafny.ISequence<Dafny.Rune> @value, bool binary) : base() {
      this._value = @value;
      this._binary = binary;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_LiteralString(_value, _binary);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_LiteralString;
      return oth != null && object.Equals(this._value, oth._value) && this._binary == oth._binary;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 13;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._value));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._binary));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.LiteralString";
      s += "(";
      s += this._value.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._binary);
      s += ")";
      return s;
    }
  }
  public class Expr_DeclareVar : Expr {
    public readonly RAST._IDeclareType _declareType;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Std.Wrappers._IOption<RAST._IType> _optType;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optRhs;
    public Expr_DeclareVar(RAST._IDeclareType declareType, Dafny.ISequence<Dafny.Rune> name, Std.Wrappers._IOption<RAST._IType> optType, Std.Wrappers._IOption<RAST._IExpr> optRhs) : base() {
      this._declareType = declareType;
      this._name = name;
      this._optType = optType;
      this._optRhs = optRhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_DeclareVar(_declareType, _name, _optType, _optRhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_DeclareVar;
      return oth != null && object.Equals(this._declareType, oth._declareType) && object.Equals(this._name, oth._name) && object.Equals(this._optType, oth._optType) && object.Equals(this._optRhs, oth._optRhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 14;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._declareType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optRhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.DeclareVar";
      s += "(";
      s += Dafny.Helpers.ToString(this._declareType);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optType);
      s += ", ";
      s += Dafny.Helpers.ToString(this._optRhs);
      s += ")";
      return s;
    }
  }
  public class Expr_Assign : Expr {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly RAST._IExpr _rhs;
    public Expr_Assign(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, RAST._IExpr rhs) : base() {
      this._names = names;
      this._rhs = rhs;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Assign(_names, _rhs);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Assign;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._rhs, oth._rhs);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 15;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._rhs));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Assign";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._rhs);
      s += ")";
      return s;
    }
  }
  public class Expr_IfExpr : Expr {
    public readonly RAST._IExpr _cond;
    public readonly RAST._IExpr _thn;
    public readonly RAST._IExpr _els;
    public Expr_IfExpr(RAST._IExpr cond, RAST._IExpr thn, RAST._IExpr els) : base() {
      this._cond = cond;
      this._thn = thn;
      this._els = els;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_IfExpr(_cond, _thn, _els);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_IfExpr;
      return oth != null && object.Equals(this._cond, oth._cond) && object.Equals(this._thn, oth._thn) && object.Equals(this._els, oth._els);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 16;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._cond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._thn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._els));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.IfExpr";
      s += "(";
      s += Dafny.Helpers.ToString(this._cond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._thn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._els);
      s += ")";
      return s;
    }
  }
  public class Expr_Loop : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optCond;
    public readonly RAST._IExpr _underlying;
    public Expr_Loop(Std.Wrappers._IOption<RAST._IExpr> optCond, RAST._IExpr underlying) : base() {
      this._optCond = optCond;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Loop(_optCond, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Loop;
      return oth != null && object.Equals(this._optCond, oth._optCond) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 17;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optCond));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Loop";
      s += "(";
      s += Dafny.Helpers.ToString(this._optCond);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_For : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly RAST._IExpr _range;
    public readonly RAST._IExpr _body;
    public Expr_For(Dafny.ISequence<Dafny.Rune> name, RAST._IExpr range, RAST._IExpr body) : base() {
      this._name = name;
      this._range = range;
      this._body = body;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_For(_name, _range, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_For;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._range, oth._range) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 18;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._range));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.For";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._range);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
  }
  public class Expr_Labelled : Expr {
    public readonly Dafny.ISequence<Dafny.Rune> _lbl;
    public readonly RAST._IExpr _underlying;
    public Expr_Labelled(Dafny.ISequence<Dafny.Rune> lbl, RAST._IExpr underlying) : base() {
      this._lbl = lbl;
      this._underlying = underlying;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Labelled(_lbl, _underlying);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Labelled;
      return oth != null && object.Equals(this._lbl, oth._lbl) && object.Equals(this._underlying, oth._underlying);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 19;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._lbl));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._underlying));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Labelled";
      s += "(";
      s += this._lbl.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._underlying);
      s += ")";
      return s;
    }
  }
  public class Expr_Break : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Break(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Break(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Break;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 20;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Break";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Continue : Expr {
    public readonly Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _optLbl;
    public Expr_Continue(Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> optLbl) : base() {
      this._optLbl = optLbl;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Continue(_optLbl);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Continue;
      return oth != null && object.Equals(this._optLbl, oth._optLbl);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 21;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optLbl));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Continue";
      s += "(";
      s += Dafny.Helpers.ToString(this._optLbl);
      s += ")";
      return s;
    }
  }
  public class Expr_Return : Expr {
    public readonly Std.Wrappers._IOption<RAST._IExpr> _optExpr;
    public Expr_Return(Std.Wrappers._IOption<RAST._IExpr> optExpr) : base() {
      this._optExpr = optExpr;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Return(_optExpr);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Return;
      return oth != null && object.Equals(this._optExpr, oth._optExpr);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 22;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._optExpr));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Return";
      s += "(";
      s += Dafny.Helpers.ToString(this._optExpr);
      s += ")";
      return s;
    }
  }
  public class Expr_CallType : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IType> _typeParameters;
    public Expr_CallType(RAST._IExpr obj, Dafny.ISequence<RAST._IType> typeParameters) : base() {
      this._obj = obj;
      this._typeParameters = typeParameters;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_CallType(_obj, _typeParameters);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_CallType;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._typeParameters, oth._typeParameters);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 23;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParameters));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.CallType";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParameters);
      s += ")";
      return s;
    }
  }
  public class Expr_Call : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<RAST._IExpr> _arguments;
    public Expr_Call(RAST._IExpr obj, Dafny.ISequence<RAST._IExpr> arguments) : base() {
      this._obj = obj;
      this._arguments = arguments;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Call(_obj, _arguments);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Call;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._arguments, oth._arguments);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 24;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._arguments));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Call";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += Dafny.Helpers.ToString(this._arguments);
      s += ")";
      return s;
    }
  }
  public class Expr_Select : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_Select(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_Select(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_Select;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 25;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.Select";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }
  public class Expr_MemberSelect : Expr {
    public readonly RAST._IExpr _obj;
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public Expr_MemberSelect(RAST._IExpr obj, Dafny.ISequence<Dafny.Rune> name) : base() {
      this._obj = obj;
      this._name = name;
    }
    public override _IExpr DowncastClone() {
      if (this is _IExpr dt) { return dt; }
      return new Expr_MemberSelect(_obj, _name);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Expr_MemberSelect;
      return oth != null && object.Equals(this._obj, oth._obj) && object.Equals(this._name, oth._name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 26;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._obj));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Expr.MemberSelect";
      s += "(";
      s += Dafny.Helpers.ToString(this._obj);
      s += ", ";
      s += this._name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IFn {
    bool is_Fn { get; }
    Dafny.ISequence<Dafny.Rune> dtor_name { get; }
    Dafny.ISequence<RAST._ITypeParam> dtor_typeParams { get; }
    Dafny.ISequence<RAST._IFormal> dtor_formals { get; }
    Std.Wrappers._IOption<RAST._IType> dtor_returnType { get; }
    Dafny.ISequence<Dafny.Rune> dtor_where { get; }
    Std.Wrappers._IOption<RAST._IExpr> dtor_body { get; }
    _IFn DowncastClone();
    Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind);
  }
  public class Fn : _IFn {
    public readonly Dafny.ISequence<Dafny.Rune> _name;
    public readonly Dafny.ISequence<RAST._ITypeParam> _typeParams;
    public readonly Dafny.ISequence<RAST._IFormal> _formals;
    public readonly Std.Wrappers._IOption<RAST._IType> _returnType;
    public readonly Dafny.ISequence<Dafny.Rune> _where;
    public readonly Std.Wrappers._IOption<RAST._IExpr> _body;
    public Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      this._name = name;
      this._typeParams = typeParams;
      this._formals = formals;
      this._returnType = returnType;
      this._where = @where;
      this._body = body;
    }
    public _IFn DowncastClone() {
      if (this is _IFn dt) { return dt; }
      return new Fn(_name, _typeParams, _formals, _returnType, _where, _body);
    }
    public override bool Equals(object other) {
      var oth = other as RAST.Fn;
      return oth != null && object.Equals(this._name, oth._name) && object.Equals(this._typeParams, oth._typeParams) && object.Equals(this._formals, oth._formals) && object.Equals(this._returnType, oth._returnType) && object.Equals(this._where, oth._where) && object.Equals(this._body, oth._body);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._name));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._typeParams));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._formals));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._returnType));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._where));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._body));
      return (int) hash;
    }
    public override string ToString() {
      string s = "RAST.Fn.Fn";
      s += "(";
      s += this._name.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._typeParams);
      s += ", ";
      s += Dafny.Helpers.ToString(this._formals);
      s += ", ";
      s += Dafny.Helpers.ToString(this._returnType);
      s += ", ";
      s += this._where.ToVerbatimString(true);
      s += ", ";
      s += Dafny.Helpers.ToString(this._body);
      s += ")";
      return s;
    }
    private static readonly RAST._IFn theDefault = create(Dafny.Sequence<Dafny.Rune>.Empty, Dafny.Sequence<RAST._ITypeParam>.Empty, Dafny.Sequence<RAST._IFormal>.Empty, Std.Wrappers.Option<RAST._IType>.Default(), Dafny.Sequence<Dafny.Rune>.Empty, Std.Wrappers.Option<RAST._IExpr>.Default());
    public static RAST._IFn Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<RAST._IFn> _TYPE = new Dafny.TypeDescriptor<RAST._IFn>(RAST.Fn.Default());
    public static Dafny.TypeDescriptor<RAST._IFn> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IFn create(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return new Fn(name, typeParams, formals, returnType, @where, body);
    }
    public static _IFn create_Fn(Dafny.ISequence<Dafny.Rune> name, Dafny.ISequence<RAST._ITypeParam> typeParams, Dafny.ISequence<RAST._IFormal> formals, Std.Wrappers._IOption<RAST._IType> returnType, Dafny.ISequence<Dafny.Rune> @where, Std.Wrappers._IOption<RAST._IExpr> body) {
      return create(name, typeParams, formals, returnType, @where, body);
    }
    public bool is_Fn { get { return true; } }
    public Dafny.ISequence<Dafny.Rune> dtor_name {
      get {
        return this._name;
      }
    }
    public Dafny.ISequence<RAST._ITypeParam> dtor_typeParams {
      get {
        return this._typeParams;
      }
    }
    public Dafny.ISequence<RAST._IFormal> dtor_formals {
      get {
        return this._formals;
      }
    }
    public Std.Wrappers._IOption<RAST._IType> dtor_returnType {
      get {
        return this._returnType;
      }
    }
    public Dafny.ISequence<Dafny.Rune> dtor_where {
      get {
        return this._where;
      }
    }
    public Std.Wrappers._IOption<RAST._IExpr> dtor_body {
      get {
        return this._body;
      }
    }
    public Dafny.ISequence<Dafny.Rune> _ToString(Dafny.ISequence<Dafny.Rune> ind) {
      var _pat_let_tv5 = ind;
      var _pat_let_tv6 = ind;
      var _pat_let_tv7 = ind;
      var _pat_let_tv8 = ind;
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn "), (this).dtor_name), RAST.TypeParam.ToStringMultiple((this).dtor_typeParams, ind)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), RAST.__default.SeqToString<RAST._IFormal>((this).dtor_formals, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.Rune>, Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>>>((_2551_ind) => ((System.Func<RAST._IFormal, Dafny.ISequence<Dafny.Rune>>)((_2552_formal) => {
        return (_2552_formal)._ToString(_2551_ind);
      })))(ind), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), ((System.Func<Std.Wrappers._IOption<RAST._IType>, Dafny.ISequence<Dafny.Rune>>)((_source69) => {
        if (_source69.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
        } else {
          RAST._IType _2553___mcc_h0 = _source69.dtor_value;
          RAST._IType _2554_t = _2553___mcc_h0;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" -> "), (_2554_t)._ToString(_pat_let_tv5));
        }
      }))((this).dtor_returnType)), ((((this).dtor_where).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"), ind), RAST.__default.IND), (this).dtor_where)))), ((System.Func<Std.Wrappers._IOption<RAST._IExpr>, Dafny.ISequence<Dafny.Rune>>)((_source70) => {
        if (_source70.is_None) {
          return Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";");
        } else {
          RAST._IExpr _2555___mcc_h2 = _source70.dtor_value;
          RAST._IExpr _2556_body = _2555___mcc_h2;
          return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n"), _pat_let_tv6), RAST.__default.IND), (_2556_body)._ToString(Dafny.Sequence<Dafny.Rune>.Concat(_pat_let_tv7, RAST.__default.IND))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n")), _pat_let_tv8), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        }
      }))((this).dtor_body));
    }
  }
} // end of namespace RAST
namespace DCOMP {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in113 = (i).Drop(new BigInteger(2));
            i = _in113;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in114 = (i).Drop(BigInteger.One);
        i = _in114;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2557___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2557___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _2557___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2557___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in115 = (i).Drop(new BigInteger(2));
        i = _in115;
        goto TAIL_CALL_START;
      } else {
        _2557___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2557___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in116 = (i).Drop(BigInteger.One);
        i = _in116;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2558___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2558___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _2558___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2558___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in117 = (i).Drop(BigInteger.One);
        i = _in117;
        goto TAIL_CALL_START;
      } else {
        _2558___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2558___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in118 = (i).Drop(BigInteger.One);
        i = _in118;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMP.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMP.__default.has__special(i)))) && (!(DCOMP.__default.reserved__rust).Contains(i))) && (!(DCOMP.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMP.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMP.__default.is__tuple__builder(i)) {
        return DCOMP.__default.better__tuple__builder__name(i);
      } else if ((DCOMP.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMP.__default.is__idiomatic__rust__id(i)) {
        return DCOMP.__default.idiomatic__rust(i);
      } else if (DCOMP.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _2559_r = DCOMP.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _2559_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return true;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMP.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMP.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMP._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMP._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMP._IOwnership>(DCOMP.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMP._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMP._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMP._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMP._IUnassignedStatus>(DCOMP.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMP._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMP._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMP._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMP._IEnvironment>(DCOMP.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMP._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMP._IEnvironment Empty() {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _2560_body;
      Dafny.ISequence<RAST._IModDecl> _out15;
      _out15 = DCOMP.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _2560_body = _out15;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMP.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMP.__default.escapeIdent((mod).dtor_name), _2560_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((containingPath).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System")))) {
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements()))));
      }
      BigInteger _hi4 = new BigInteger((body).Count);
      for (BigInteger _2561_i = BigInteger.Zero; _2561_i < _hi4; _2561_i++) {
        Dafny.ISequence<RAST._IModDecl> _2562_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source71 = (body).Select(_2561_i);
        if (_source71.is_Module) {
          DAST._IModule _2563___mcc_h0 = _source71.dtor_Module_a0;
          DAST._IModule _2564_m = _2563___mcc_h0;
          RAST._IMod _2565_mm;
          RAST._IMod _out16;
          _out16 = DCOMP.COMP.GenModule(_2564_m, containingPath);
          _2565_mm = _out16;
          _2562_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_2565_mm));
        } else if (_source71.is_Class) {
          DAST._IClass _2566___mcc_h1 = _source71.dtor_Class_a0;
          DAST._IClass _2567_c = _2566___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out17;
          _out17 = DCOMP.COMP.GenClass(_2567_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_2567_c).dtor_name)));
          _2562_generated = _out17;
        } else if (_source71.is_Trait) {
          DAST._ITrait _2568___mcc_h2 = _source71.dtor_Trait_a0;
          DAST._ITrait _2569_t = _2568___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _2570_tt;
          Dafny.ISequence<Dafny.Rune> _out18;
          _out18 = DCOMP.COMP.GenTrait(_2569_t, containingPath);
          _2570_tt = _out18;
          _2562_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_2570_tt));
        } else if (_source71.is_Newtype) {
          DAST._INewtype _2571___mcc_h3 = _source71.dtor_Newtype_a0;
          DAST._INewtype _2572_n = _2571___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out19;
          _out19 = DCOMP.COMP.GenNewtype(_2572_n);
          _2562_generated = _out19;
        } else {
          DAST._IDatatype _2573___mcc_h4 = _source71.dtor_Datatype_a0;
          DAST._IDatatype _2574_d = _2573___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out20;
          _out20 = DCOMP.COMP.GenDatatype(_2574_d);
          _2562_generated = _out20;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _2562_generated);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _2575_tpI;
      _2575_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_2575_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _2576_tp;
          _2576_tp = (@params).Select(_2575_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2576_tp));
          RAST._IType _2577_genTp;
          RAST._IType _out21;
          _out21 = DCOMP.COMP.GenType(_2576_tp, false, false);
          _2577_genTp = _out21;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2577_genTp)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _2575_tpI = (_2575_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _2578_baseConstraints;
      _2578_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _2578_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2579_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2580_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2581_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2582_whereConstraints;
      Dafny.ISet<DAST._IType> _out22;
      Dafny.ISequence<RAST._ITypeParam> _out23;
      Dafny.ISequence<RAST._ITypeParam> _out24;
      Dafny.ISequence<Dafny.Rune> _out25;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out22, out _out23, out _out24, out _out25);
      _2579_typeParamsSet = _out22;
      _2580_sTypeParams = _out23;
      _2581_sConstrainedTypeParams = _out24;
      _2582_whereConstraints = _out25;
      Dafny.ISequence<Dafny.Rune> _2583_constrainedTypeParams;
      _2583_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2581_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _2584_fields;
      _2584_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _2585_fieldInits;
      _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _2586_fieldI;
      _2586_fieldI = BigInteger.Zero;
      while ((_2586_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _2587_field;
        _2587_field = ((c).dtor_fields).Select(_2586_fieldI);
        RAST._IType _2588_fieldType;
        RAST._IType _out26;
        _out26 = DCOMP.COMP.GenType(((_2587_field).dtor_formal).dtor_typ, false, false);
        _2588_fieldType = _out26;
        Dafny.ISequence<Dafny.Rune> _2589_fieldRustName;
        _2589_fieldRustName = DCOMP.__default.escapeIdent(((_2587_field).dtor_formal).dtor_name);
        _2584_fields = Dafny.Sequence<RAST._IField>.Concat(_2584_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_2589_fieldRustName, _2588_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source72 = (_2587_field).dtor_defaultValue;
        if (_source72.is_None) {
          {
            RAST._IExpr _2590_default;
            _2590_default = RAST.__default.std__Default__default;
            _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2585_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2589_fieldRustName, _2590_default)));
          }
        } else {
          DAST._IExpression _2591___mcc_h0 = _source72.dtor_value;
          DAST._IExpression _2592_e = _2591___mcc_h0;
          {
            RAST._IExpr _2593_expr;
            DCOMP._IOwnership _2594___v40;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2595___v41;
            RAST._IExpr _out27;
            DCOMP._IOwnership _out28;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out29;
            DCOMP.COMP.GenExpr(_2592_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out27, out _out28, out _out29);
            _2593_expr = _out27;
            _2594___v40 = _out28;
            _2595___v41 = _out29;
            _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2585_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2589_fieldRustName, _2593_expr)));
          }
        }
        _2586_fieldI = (_2586_fieldI) + (BigInteger.One);
      }
      BigInteger _hi5 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _2596_typeParamI = BigInteger.Zero; _2596_typeParamI < _hi5; _2596_typeParamI++) {
        RAST._IType _2597_tpeGen;
        RAST._IType _out30;
        _out30 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2596_typeParamI), false, false);
        _2597_tpeGen = _out30;
        _2584_fields = Dafny.Sequence<RAST._IField>.Concat(_2584_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2596_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2597_tpeGen))))));
        _2585_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2585_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2596_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _2598_datatypeName;
      _2598_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _2599_struct;
      _2599_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2598_datatypeName, _2580_sTypeParams, RAST.Fields.create_NamedFields(_2584_fields));
      Dafny.ISequence<RAST._IType> _2600_typeParamsAsTypes;
      _2600_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2601_typeParam) => {
        return RAST.__default.RawType((_2601_typeParam).dtor_content);
      })), _2580_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_2599_struct));
      DAST._IType _2602_underlyingDatatype;
      _2602_underlyingDatatype = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes)));
      Dafny.ISequence<RAST._IImplMember> _2603_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2604_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out31;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out32;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_AllocatedDatatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _2579_typeParamsSet, out _out31, out _out32);
      _2603_implBodyRaw = _out31;
      _2604_traitBodies = _out32;
      Dafny.ISequence<RAST._IImplMember> _2605_implBody;
      _2605_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_2598_datatypeName), _2585_fieldInits))))), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.SelfPointerMut), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate"))).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())))))), _2603_implBodyRaw);
      RAST._IImpl _2606_i;
      _2606_i = RAST.Impl.create_Impl(_2581_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), _2582_whereConstraints, _2605_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2606_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _2607_i;
        _2607_i = BigInteger.Zero;
        while ((_2607_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _2608_superClass;
          _2608_superClass = ((c).dtor_superClasses).Select(_2607_i);
          DAST._IType _source73 = _2608_superClass;
          if (_source73.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2609___mcc_h1 = _source73.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _2610___mcc_h2 = _source73.dtor_typeArgs;
            DAST._IResolvedType _2611___mcc_h3 = _source73.dtor_resolved;
            DAST._IResolvedType _source74 = _2611___mcc_h3;
            if (_source74.is_AllocatedDatatype) {
              DAST._IDatatypeType _2612___mcc_h7 = _source74.dtor_datatypeType;
            } else if (_source74.is_Datatype) {
              DAST._IDatatypeType _2613___mcc_h9 = _source74.dtor_datatypeType;
            } else if (_source74.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2614___mcc_h11 = _source74.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _2615___mcc_h12 = _source74.dtor_attributes;
              Dafny.ISequence<DAST._IType> _2616_typeArgs = _2610___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2617_traitPath = _2609___mcc_h1;
              {
                RAST._IType _2618_pathStr;
                RAST._IType _out33;
                _out33 = DCOMP.COMP.GenPath(_2617_traitPath);
                _2618_pathStr = _out33;
                Dafny.ISequence<RAST._IType> _2619_typeArgs;
                Dafny.ISequence<RAST._IType> _out34;
                _out34 = DCOMP.COMP.GenTypeArgs(_2616_typeArgs, false, false);
                _2619_typeArgs = _out34;
                Dafny.ISequence<RAST._IImplMember> _2620_body;
                _2620_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_2604_traitBodies).Contains(_2617_traitPath)) {
                  _2620_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_2604_traitBodies,_2617_traitPath);
                }
                RAST._IType _2621_genSelfPath;
                RAST._IType _out35;
                _out35 = DCOMP.COMP.GenPath(path);
                _2621_genSelfPath = _out35;
                RAST._IModDecl _2622_x;
                _2622_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2581_sConstrainedTypeParams, RAST.Type.create_TypeApp(_2618_pathStr, _2619_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_2621_genSelfPath, _2600_typeParamsAsTypes)), _2582_whereConstraints, _2620_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_2622_x));
              }
            } else {
              DAST._IType _2623___mcc_h15 = _source74.dtor_baseType;
              DAST._INewtypeRange _2624___mcc_h16 = _source74.dtor_range;
              bool _2625___mcc_h17 = _source74.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _2626___mcc_h18 = _source74.dtor_attributes;
            }
          } else if (_source73.is_Nullable) {
            DAST._IType _2627___mcc_h23 = _source73.dtor_Nullable_a0;
          } else if (_source73.is_Tuple) {
            Dafny.ISequence<DAST._IType> _2628___mcc_h25 = _source73.dtor_Tuple_a0;
          } else if (_source73.is_Array) {
            DAST._IType _2629___mcc_h27 = _source73.dtor_element;
            BigInteger _2630___mcc_h28 = _source73.dtor_dims;
          } else if (_source73.is_Seq) {
            DAST._IType _2631___mcc_h31 = _source73.dtor_element;
          } else if (_source73.is_Set) {
            DAST._IType _2632___mcc_h33 = _source73.dtor_element;
          } else if (_source73.is_Multiset) {
            DAST._IType _2633___mcc_h35 = _source73.dtor_element;
          } else if (_source73.is_Map) {
            DAST._IType _2634___mcc_h37 = _source73.dtor_key;
            DAST._IType _2635___mcc_h38 = _source73.dtor_value;
          } else if (_source73.is_SetBuilder) {
            DAST._IType _2636___mcc_h41 = _source73.dtor_element;
          } else if (_source73.is_MapBuilder) {
            DAST._IType _2637___mcc_h43 = _source73.dtor_key;
            DAST._IType _2638___mcc_h44 = _source73.dtor_value;
          } else if (_source73.is_Arrow) {
            Dafny.ISequence<DAST._IType> _2639___mcc_h47 = _source73.dtor_args;
            DAST._IType _2640___mcc_h48 = _source73.dtor_result;
          } else if (_source73.is_Primitive) {
            DAST._IPrimitive _2641___mcc_h51 = _source73.dtor_Primitive_a0;
          } else if (_source73.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _2642___mcc_h53 = _source73.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _2643___mcc_h55 = _source73.dtor_TypeArg_a0;
          }
          _2607_i = (_2607_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _2644_d;
      _2644_d = RAST.Impl.create_ImplFor(_2581_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), _2582_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_2598_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _2645_defaultImpl;
      _2645_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2644_d));
      RAST._IImpl _2646_p;
      _2646_p = RAST.Impl.create_ImplFor(_2581_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _2647_printImpl;
      _2647_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2646_p));
      RAST._IImpl _2648_pp;
      _2648_pp = RAST.Impl.create_ImplFor(_2580_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2598_datatypeName), _2600_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _2649_ptrPartialEqImpl;
      _2649_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2648_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _2645_defaultImpl), _2647_printImpl), _2649_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _2650_typeParamsSet;
      _2650_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _2651_typeParams;
      _2651_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2652_tpI;
      _2652_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_2652_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _2653_tp;
          _2653_tp = ((t).dtor_typeParams).Select(_2652_tpI);
          _2650_typeParamsSet = Dafny.Set<DAST._IType>.Union(_2650_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2653_tp));
          RAST._IType _2654_genTp;
          RAST._IType _out36;
          _out36 = DCOMP.COMP.GenType(_2653_tp, false, false);
          _2654_genTp = _out36;
          _2651_typeParams = Dafny.Sequence<RAST._IType>.Concat(_2651_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2654_genTp));
          _2652_tpI = (_2652_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2655_fullPath;
      _2655_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _2656_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2657___v45;
      Dafny.ISequence<RAST._IImplMember> _out37;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out38;
      DCOMP.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_2655_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_2655_fullPath, (t).dtor_attributes)), _2650_typeParamsSet, out _out37, out _out38);
      _2656_implBody = _out37;
      _2657___v45 = _out38;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMP.__default.escapeIdent((t).dtor_name)), _2651_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _2656_implBody)))._ToString(DCOMP.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2658_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2659_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2660_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2661_whereConstraints;
      Dafny.ISet<DAST._IType> _out39;
      Dafny.ISequence<RAST._ITypeParam> _out40;
      Dafny.ISequence<RAST._ITypeParam> _out41;
      Dafny.ISequence<Dafny.Rune> _out42;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out39, out _out40, out _out41, out _out42);
      _2658_typeParamsSet = _out39;
      _2659_sTypeParams = _out40;
      _2660_sConstrainedTypeParams = _out41;
      _2661_whereConstraints = _out42;
      Dafny.ISequence<RAST._IType> _2662_typeParamsAsTypes;
      _2662_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2663_t) => {
        return RAST.__default.RawType((_2663_t).dtor_content);
      })), _2659_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2664_constrainedTypeParams;
      _2664_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2660_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _2665_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source75 = DCOMP.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source75.is_None) {
        RAST._IType _out43;
        _out43 = DCOMP.COMP.GenType((c).dtor_base, false, false);
        _2665_underlyingType = _out43;
      } else {
        RAST._IType _2666___mcc_h0 = _source75.dtor_value;
        RAST._IType _2667_v = _2666___mcc_h0;
        _2665_underlyingType = _2667_v;
      }
      DAST._IType _2668_resultingType;
      _2668_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _2669_datatypeName;
      _2669_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _2669_datatypeName, _2659_sTypeParams, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _2665_underlyingType))))));
      RAST._IExpr _2670_fnBody;
      _2670_fnBody = RAST.Expr.create_Identifier(_2669_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source76 = (c).dtor_witnessExpr;
      if (_source76.is_None) {
        {
          _2670_fnBody = (_2670_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _2671___mcc_h1 = _source76.dtor_value;
        DAST._IExpression _2672_e = _2671___mcc_h1;
        {
          DAST._IExpression _2673_e;
          _2673_e = ((object.Equals((c).dtor_base, _2668_resultingType)) ? (_2672_e) : (DAST.Expression.create_Convert(_2672_e, (c).dtor_base, _2668_resultingType)));
          RAST._IExpr _2674_eStr;
          DCOMP._IOwnership _2675___v46;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2676___v47;
          RAST._IExpr _out44;
          DCOMP._IOwnership _out45;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out46;
          DCOMP.COMP.GenExpr(_2673_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out44, out _out45, out _out46);
          _2674_eStr = _out44;
          _2675___v46 = _out45;
          _2676___v47 = _out46;
          _2670_fnBody = (_2670_fnBody).Apply1(_2674_eStr);
        }
      }
      RAST._IImplMember _2677_body;
      _2677_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2670_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2660_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2669_datatypeName), _2662_typeParamsAsTypes), _2661_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_2677_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2660_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2669_datatypeName), _2662_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2660_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2669_datatypeName), _2662_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_2665_underlyingType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2678_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _2679_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _2680_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _2681_whereConstraints;
      Dafny.ISet<DAST._IType> _out47;
      Dafny.ISequence<RAST._ITypeParam> _out48;
      Dafny.ISequence<RAST._ITypeParam> _out49;
      Dafny.ISequence<Dafny.Rune> _out50;
      DCOMP.COMP.GenTypeParameters((c).dtor_typeParams, out _out47, out _out48, out _out49, out _out50);
      _2678_typeParamsSet = _out47;
      _2679_sTypeParams = _out48;
      _2680_sConstrainedTypeParams = _out49;
      _2681_whereConstraints = _out50;
      Dafny.ISequence<RAST._IType> _2682_typeParamsAsTypes;
      _2682_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_2683_t) => {
        return RAST.__default.RawType((_2683_t).dtor_content);
      })), _2679_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _2684_constrainedTypeParams;
      _2684_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_2680_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.IND, DCOMP.__default.IND));
      Dafny.ISequence<Dafny.Rune> _2685_datatypeName;
      _2685_datatypeName = DCOMP.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _2686_ctors;
      _2686_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _2687_i;
      _2687_i = BigInteger.Zero;
      while ((_2687_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2688_ctor;
        _2688_ctor = ((c).dtor_ctors).Select(_2687_i);
        Dafny.ISequence<RAST._IField> _2689_ctorArgs;
        _2689_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _2690_j;
        _2690_j = BigInteger.Zero;
        while ((_2690_j) < (new BigInteger(((_2688_ctor).dtor_args).Count))) {
          DAST._IFormal _2691_formal;
          _2691_formal = ((_2688_ctor).dtor_args).Select(_2690_j);
          RAST._IType _2692_formalType;
          RAST._IType _out51;
          _out51 = DCOMP.COMP.GenType((_2691_formal).dtor_typ, false, false);
          _2692_formalType = _out51;
          if ((c).dtor_isCo) {
            _2689_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2689_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeIdent((_2691_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_2692_formalType))))));
          } else {
            _2689_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2689_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeIdent((_2691_formal).dtor_name), _2692_formalType))));
          }
          _2690_j = (_2690_j) + (BigInteger.One);
        }
        _2686_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2686_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMP.__default.escapeIdent((_2688_ctor).dtor_name), RAST.Fields.create_NamedFields(_2689_ctorArgs))));
        _2687_i = (_2687_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2693_selfPath;
      _2693_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _2694_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2695_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out52;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out53;
      DCOMP.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_2693_selfPath, (c).dtor_attributes))), _2678_typeParamsSet, out _out52, out _out53);
      _2694_implBodyRaw = _out52;
      _2695_traitBodies = _out53;
      Dafny.ISequence<RAST._IImplMember> _2696_implBody;
      _2696_implBody = _2694_implBodyRaw;
      _2687_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2697_emittedFields;
      _2697_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_2687_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2698_ctor;
        _2698_ctor = ((c).dtor_ctors).Select(_2687_i);
        BigInteger _2699_j;
        _2699_j = BigInteger.Zero;
        while ((_2699_j) < (new BigInteger(((_2698_ctor).dtor_args).Count))) {
          DAST._IFormal _2700_formal;
          _2700_formal = ((_2698_ctor).dtor_args).Select(_2699_j);
          if (!((_2697_emittedFields).Contains((_2700_formal).dtor_name))) {
            _2697_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2697_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_2700_formal).dtor_name));
            RAST._IType _2701_formalType;
            RAST._IType _out54;
            _out54 = DCOMP.COMP.GenType((_2700_formal).dtor_typ, false, false);
            _2701_formalType = _out54;
            Dafny.ISequence<RAST._IMatchCase> _2702_cases;
            _2702_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _2703_k;
            _2703_k = BigInteger.Zero;
            while ((_2703_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _2704_ctor2;
              _2704_ctor2 = ((c).dtor_ctors).Select(_2703_k);
              Dafny.ISequence<Dafny.Rune> _2705_pattern;
              _2705_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent((_2704_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _2706_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _2707_l;
              _2707_l = BigInteger.Zero;
              bool _2708_hasMatchingField;
              _2708_hasMatchingField = false;
              while ((_2707_l) < (new BigInteger(((_2704_ctor2).dtor_args).Count))) {
                DAST._IFormal _2709_formal2;
                _2709_formal2 = ((_2704_ctor2).dtor_args).Select(_2707_l);
                if (((_2700_formal).dtor_name).Equals((_2709_formal2).dtor_name)) {
                  _2708_hasMatchingField = true;
                }
                _2705_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2705_pattern, DCOMP.__default.escapeIdent((_2709_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _2707_l = (_2707_l) + (BigInteger.One);
              }
              _2705_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_2705_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_2708_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _2706_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMP.__default.escapeIdent((_2700_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _2706_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2700_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _2706_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _2710_ctorMatch;
              _2710_ctorMatch = RAST.MatchCase.create(_2705_pattern, RAST.Expr.create_RawExpr(_2706_rhs));
              _2702_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2702_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_2710_ctorMatch));
              _2703_k = (_2703_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _2702_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2702_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _2711_methodBody;
            _2711_methodBody = RAST.Expr.create_Match(RAST.__default.self, _2702_cases);
            _2696_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_2696_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMP.__default.escapeIdent((_2700_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_2701_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2711_methodBody)))));
          }
          _2699_j = (_2699_j) + (BigInteger.One);
        }
        _2687_i = (_2687_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _2712_typeI;
        _2712_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _2713_types;
        _2713_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_2712_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _2714_genTp;
          RAST._IType _out55;
          _out55 = DCOMP.COMP.GenType(((c).dtor_typeParams).Select(_2712_typeI), false, false);
          _2714_genTp = _out55;
          _2713_types = Dafny.Sequence<RAST._IType>.Concat(_2713_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_2714_genTp))));
          _2712_typeI = (_2712_typeI) + (BigInteger.One);
        }
        _2686_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2686_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_2715_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _2715_tpe);
})), _2713_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _2716_enumBody;
      _2716_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _2685_datatypeName, _2679_sTypeParams, _2686_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_2680_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2682_typeParamsAsTypes), _2681_whereConstraints, _2696_implBody)));
      _2687_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _2717_printImplBodyCases;
      _2717_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_2687_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _2718_ctor;
        _2718_ctor = ((c).dtor_ctors).Select(_2687_i);
        Dafny.ISequence<Dafny.Rune> _2719_ctorMatch;
        _2719_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeIdent((_2718_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _2720_modulePrefix;
        _2720_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _2721_printRhs;
        _2721_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _2720_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeIdent((_2718_ctor).dtor_name)), (((_2718_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _2722_j;
        _2722_j = BigInteger.Zero;
        while ((_2722_j) < (new BigInteger(((_2718_ctor).dtor_args).Count))) {
          DAST._IFormal _2723_formal;
          _2723_formal = ((_2718_ctor).dtor_args).Select(_2722_j);
          _2719_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2719_ctorMatch, DCOMP.__default.escapeIdent((_2723_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_2722_j).Sign == 1) {
            _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMP.__default.escapeIdent((_2723_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _2722_j = (_2722_j) + (BigInteger.One);
        }
        _2719_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_2719_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_2718_ctor).dtor_hasAnyArgs) {
          _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _2721_printRhs = (_2721_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _2717_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2717_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2719_ctorMatch), RAST.Expr.create_Block(_2721_printRhs))));
        _2687_i = (_2687_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _2717_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2717_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2685_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _2724_printImplBody;
      _2724_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _2717_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _2725_printImpl;
      _2725_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2680_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2682_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2724_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _2726_defaultImpl;
      _2726_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _2727_asRefImpl;
      _2727_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _2687_i = BigInteger.Zero;
        RAST._IExpr _2728_structName;
        _2728_structName = (RAST.Expr.create_Identifier(_2685_datatypeName)).MSel(DCOMP.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _2729_structAssignments;
        _2729_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_2687_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _2730_formal;
          _2730_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_2687_i);
          _2729_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2729_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent((_2730_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _2687_i = (_2687_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _2731_defaultConstrainedTypeParams;
        _2731_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_2679_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _2732_fullType;
        _2732_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2685_datatypeName), _2682_typeParamsAsTypes);
        _2726_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2731_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _2732_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2732_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_2728_structName, _2729_structAssignments))))))));
        _2727_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2731_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_2732_fullType), RAST.Type.create_Borrowed(_2732_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_2716_enumBody, _2725_printImpl), _2726_defaultImpl), _2727_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi6 = new BigInteger((p).Count);
        for (BigInteger _2733_i = BigInteger.Zero; _2733_i < _hi6; _2733_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2733_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi7 = new BigInteger((p).Count);
        for (BigInteger _2734_i = BigInteger.Zero; _2734_i < _hi7; _2734_i++) {
          r = (r).MSel(DCOMP.__default.escapeIdent(((p).Select(_2734_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _2735_i;
        _2735_i = BigInteger.Zero;
        while ((_2735_i) < (new BigInteger((args).Count))) {
          RAST._IType _2736_genTp;
          RAST._IType _out56;
          _out56 = DCOMP.COMP.GenType((args).Select(_2735_i), inBinding, inFn);
          _2736_genTp = _out56;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_2736_genTp));
          _2735_i = (_2735_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source77 = c;
      if (_source77.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2737___mcc_h0 = _source77.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _2738___mcc_h1 = _source77.dtor_typeArgs;
        DAST._IResolvedType _2739___mcc_h2 = _source77.dtor_resolved;
        DAST._IResolvedType _2740_resolved = _2739___mcc_h2;
        Dafny.ISequence<DAST._IType> _2741_args = _2738___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2742_p = _2737___mcc_h0;
        {
          RAST._IType _2743_t;
          RAST._IType _out57;
          _out57 = DCOMP.COMP.GenPath(_2742_p);
          _2743_t = _out57;
          Dafny.ISequence<RAST._IType> _2744_typeArgs;
          Dafny.ISequence<RAST._IType> _out58;
          _out58 = DCOMP.COMP.GenTypeArgs(_2741_args, inBinding, inFn);
          _2744_typeArgs = _out58;
          s = RAST.Type.create_TypeApp(_2743_t, _2744_typeArgs);
          DAST._IResolvedType _source78 = _2740_resolved;
          if (_source78.is_AllocatedDatatype) {
            DAST._IDatatypeType _2745___mcc_h21 = _source78.dtor_datatypeType;
            DAST._IDatatypeType _source79 = _2745___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2746___mcc_h22 = _source79.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2747___mcc_h23 = _source79.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2748_attributes = _2747___mcc_h23;
            {
              s = RAST.Type.create_PointerMut(s);
            }
          } else if (_source78.is_Datatype) {
            DAST._IDatatypeType _2749___mcc_h24 = _source78.dtor_datatypeType;
            DAST._IDatatypeType _source80 = _2749___mcc_h24;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2750___mcc_h25 = _source80.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2751___mcc_h26 = _source80.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2752_attributes = _2751___mcc_h26;
            {
              if (DCOMP.COMP.IsRcWrapped(_2752_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source78.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2753___mcc_h27 = _source78.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2754___mcc_h28 = _source78.dtor_attributes;
            {
              if ((_2742_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _2755___mcc_h29 = _source78.dtor_baseType;
            DAST._INewtypeRange _2756___mcc_h30 = _source78.dtor_range;
            bool _2757___mcc_h31 = _source78.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _2758___mcc_h32 = _source78.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2759_attributes = _2758___mcc_h32;
            bool _2760_erased = _2757___mcc_h31;
            DAST._INewtypeRange _2761_range = _2756___mcc_h30;
            DAST._IType _2762_t = _2755___mcc_h29;
            {
              if (_2760_erased) {
                Std.Wrappers._IOption<RAST._IType> _source81 = DCOMP.COMP.NewtypeToRustType(_2762_t, _2761_range);
                if (_source81.is_None) {
                } else {
                  RAST._IType _2763___mcc_h33 = _source81.dtor_value;
                  RAST._IType _2764_v = _2763___mcc_h33;
                  s = _2764_v;
                }
              }
            }
          }
        }
      } else if (_source77.is_Nullable) {
        DAST._IType _2765___mcc_h3 = _source77.dtor_Nullable_a0;
        DAST._IType _2766_inner = _2765___mcc_h3;
        {
          RAST._IType _2767_innerExpr;
          RAST._IType _out59;
          _out59 = DCOMP.COMP.GenType(_2766_inner, inBinding, inFn);
          _2767_innerExpr = _out59;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_2767_innerExpr));
        }
      } else if (_source77.is_Tuple) {
        Dafny.ISequence<DAST._IType> _2768___mcc_h4 = _source77.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _2769_types = _2768___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _2770_args;
          _2770_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2771_i;
          _2771_i = BigInteger.Zero;
          while ((_2771_i) < (new BigInteger((_2769_types).Count))) {
            RAST._IType _2772_generated;
            RAST._IType _out60;
            _out60 = DCOMP.COMP.GenType((_2769_types).Select(_2771_i), inBinding, inFn);
            _2772_generated = _out60;
            _2770_args = Dafny.Sequence<RAST._IType>.Concat(_2770_args, Dafny.Sequence<RAST._IType>.FromElements(_2772_generated));
            _2771_i = (_2771_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_2770_args);
        }
      } else if (_source77.is_Array) {
        DAST._IType _2773___mcc_h5 = _source77.dtor_element;
        BigInteger _2774___mcc_h6 = _source77.dtor_dims;
        BigInteger _2775_dims = _2774___mcc_h6;
        DAST._IType _2776_element = _2773___mcc_h5;
        {
          RAST._IType _2777_elem;
          RAST._IType _out61;
          _out61 = DCOMP.COMP.GenType(_2776_element, inBinding, inFn);
          _2777_elem = _out61;
          s = _2777_elem;
          BigInteger _2778_i;
          _2778_i = BigInteger.Zero;
          while ((_2778_i) < (_2775_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _2778_i = (_2778_i) + (BigInteger.One);
          }
        }
      } else if (_source77.is_Seq) {
        DAST._IType _2779___mcc_h7 = _source77.dtor_element;
        DAST._IType _2780_element = _2779___mcc_h7;
        {
          RAST._IType _2781_elem;
          RAST._IType _out62;
          _out62 = DCOMP.COMP.GenType(_2780_element, inBinding, inFn);
          _2781_elem = _out62;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_2781_elem));
        }
      } else if (_source77.is_Set) {
        DAST._IType _2782___mcc_h8 = _source77.dtor_element;
        DAST._IType _2783_element = _2782___mcc_h8;
        {
          RAST._IType _2784_elem;
          RAST._IType _out63;
          _out63 = DCOMP.COMP.GenType(_2783_element, inBinding, inFn);
          _2784_elem = _out63;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_2784_elem));
        }
      } else if (_source77.is_Multiset) {
        DAST._IType _2785___mcc_h9 = _source77.dtor_element;
        DAST._IType _2786_element = _2785___mcc_h9;
        {
          RAST._IType _2787_elem;
          RAST._IType _out64;
          _out64 = DCOMP.COMP.GenType(_2786_element, inBinding, inFn);
          _2787_elem = _out64;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_2787_elem));
        }
      } else if (_source77.is_Map) {
        DAST._IType _2788___mcc_h10 = _source77.dtor_key;
        DAST._IType _2789___mcc_h11 = _source77.dtor_value;
        DAST._IType _2790_value = _2789___mcc_h11;
        DAST._IType _2791_key = _2788___mcc_h10;
        {
          RAST._IType _2792_keyType;
          RAST._IType _out65;
          _out65 = DCOMP.COMP.GenType(_2791_key, inBinding, inFn);
          _2792_keyType = _out65;
          RAST._IType _2793_valueType;
          RAST._IType _out66;
          _out66 = DCOMP.COMP.GenType(_2790_value, inBinding, inFn);
          _2793_valueType = _out66;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_2792_keyType, _2793_valueType));
        }
      } else if (_source77.is_SetBuilder) {
        DAST._IType _2794___mcc_h12 = _source77.dtor_element;
        DAST._IType _2795_elem = _2794___mcc_h12;
        {
          RAST._IType _2796_elemType;
          RAST._IType _out67;
          _out67 = DCOMP.COMP.GenType(_2795_elem, inBinding, inFn);
          _2796_elemType = _out67;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2796_elemType));
        }
      } else if (_source77.is_MapBuilder) {
        DAST._IType _2797___mcc_h13 = _source77.dtor_key;
        DAST._IType _2798___mcc_h14 = _source77.dtor_value;
        DAST._IType _2799_value = _2798___mcc_h14;
        DAST._IType _2800_key = _2797___mcc_h13;
        {
          RAST._IType _2801_keyType;
          RAST._IType _out68;
          _out68 = DCOMP.COMP.GenType(_2800_key, inBinding, inFn);
          _2801_keyType = _out68;
          RAST._IType _2802_valueType;
          RAST._IType _out69;
          _out69 = DCOMP.COMP.GenType(_2799_value, inBinding, inFn);
          _2802_valueType = _out69;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2801_keyType, _2802_valueType));
        }
      } else if (_source77.is_Arrow) {
        Dafny.ISequence<DAST._IType> _2803___mcc_h15 = _source77.dtor_args;
        DAST._IType _2804___mcc_h16 = _source77.dtor_result;
        DAST._IType _2805_result = _2804___mcc_h16;
        Dafny.ISequence<DAST._IType> _2806_args = _2803___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _2807_argTypes;
          _2807_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2808_i;
          _2808_i = BigInteger.Zero;
          while ((_2808_i) < (new BigInteger((_2806_args).Count))) {
            RAST._IType _2809_generated;
            RAST._IType _out70;
            _out70 = DCOMP.COMP.GenType((_2806_args).Select(_2808_i), inBinding, true);
            _2809_generated = _out70;
            _2807_argTypes = Dafny.Sequence<RAST._IType>.Concat(_2807_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_2809_generated)));
            _2808_i = (_2808_i) + (BigInteger.One);
          }
          RAST._IType _2810_resultType;
          RAST._IType _out71;
          _out71 = DCOMP.COMP.GenType(_2805_result, inBinding, (inFn) || (inBinding));
          _2810_resultType = _out71;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_2807_argTypes, RAST.Type.create_IntersectionType(_2810_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source77.is_Primitive) {
        DAST._IPrimitive _2811___mcc_h17 = _source77.dtor_Primitive_a0;
        DAST._IPrimitive _2812_p = _2811___mcc_h17;
        {
          DAST._IPrimitive _source82 = _2812_p;
          if (_source82.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source82.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source82.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar)));
          } else if (_source82.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMP.__default.DafnyChar);
          }
        }
      } else if (_source77.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _2813___mcc_h18 = _source77.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _2814_v = _2813___mcc_h18;
        s = RAST.__default.RawType(_2814_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _2815___mcc_h19 = _source77.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source83 = _2815___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _2816___mcc_h20 = _source83;
        Dafny.ISequence<Dafny.Rune> _2817_name = _2816___mcc_h20;
        s = RAST.__default.RawType(DCOMP.__default.escapeIdent(_2817_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _2818_i;
      _2818_i = BigInteger.Zero;
      while ((_2818_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source84 = (body).Select(_2818_i);
        DAST._IMethod _2819___mcc_h0 = _source84;
        DAST._IMethod _2820_m = _2819___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source85 = (_2820_m).dtor_overridingPath;
          if (_source85.is_None) {
            {
              RAST._IImplMember _2821_generated;
              RAST._IImplMember _out72;
              _out72 = DCOMP.COMP.GenMethod(_2820_m, forTrait, enclosingType, enclosingTypeParams);
              _2821_generated = _out72;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_2821_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2822___mcc_h1 = _source85.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2823_p = _2822___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _2824_existing;
              _2824_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_2823_p)) {
                _2824_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_2823_p);
              }
              RAST._IImplMember _2825_genMethod;
              RAST._IImplMember _out73;
              _out73 = DCOMP.COMP.GenMethod(_2820_m, true, enclosingType, enclosingTypeParams);
              _2825_genMethod = _out73;
              _2824_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_2824_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_2825_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_2823_p, _2824_existing)));
            }
          }
        }
        _2818_i = (_2818_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _2826_i;
      _2826_i = BigInteger.Zero;
      while ((_2826_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _2827_param;
        _2827_param = (@params).Select(_2826_i);
        RAST._IType _2828_paramType;
        RAST._IType _out74;
        _out74 = DCOMP.COMP.GenType((_2827_param).dtor_typ, false, false);
        _2828_paramType = _out74;
        if (!((_2828_paramType).HasCopySemantics())) {
          _2828_paramType = RAST.Type.create_Borrowed(_2828_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeIdent((_2827_param).dtor_name), _2828_paramType)));
        _2826_i = (_2826_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _2829_params;
      Dafny.ISequence<RAST._IFormal> _out75;
      _out75 = DCOMP.COMP.GenParams((m).dtor_params);
      _2829_params = _out75;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2830_paramNames;
      _2830_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2831_paramTypes;
      _2831_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi8 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _2832_paramI = BigInteger.Zero; _2832_paramI < _hi8; _2832_paramI++) {
        DAST._IFormal _2833_dafny__formal;
        _2833_dafny__formal = ((m).dtor_params).Select(_2832_paramI);
        RAST._IFormal _2834_formal;
        _2834_formal = (_2829_params).Select(_2832_paramI);
        Dafny.ISequence<Dafny.Rune> _2835_name;
        _2835_name = (_2834_formal).dtor_name;
        _2830_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2830_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2835_name));
        _2831_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2831_paramTypes, _2835_name, (_2834_formal).dtor_tpe);
      }
      if (!((m).dtor_isStatic)) {
        if (forTrait) {
          _2829_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), _2829_params);
        } else {
          RAST._IType _2836_tpe;
          RAST._IType _out76;
          _out76 = DCOMP.COMP.GenType(enclosingType, false, false);
          _2836_tpe = _out76;
          _2829_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_Borrowed(_2836_tpe))), _2829_params);
        }
      }
      Dafny.ISequence<RAST._IType> _2837_retTypeArgs;
      _2837_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2838_typeI;
      _2838_typeI = BigInteger.Zero;
      while ((_2838_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _2839_typeExpr;
        RAST._IType _out77;
        _out77 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2838_typeI), false, false);
        _2839_typeExpr = _out77;
        _2837_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_2837_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_2839_typeExpr));
        _2838_typeI = (_2838_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _2840_visibility;
      _2840_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<Dafny.Rune> _2841_fnName;
      _2841_fnName = DCOMP.__default.escapeIdent((m).dtor_name);
      Dafny.ISequence<DAST._IType> _2842_typeParamsFiltered;
      _2842_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _2843_typeParamI;
      _2843_typeParamI = BigInteger.Zero;
      while ((_2843_typeParamI) < (new BigInteger(((m).dtor_typeParams).Count))) {
        DAST._IType _2844_typeParam;
        _2844_typeParam = ((m).dtor_typeParams).Select(_2843_typeParamI);
        if (!((enclosingTypeParams).Contains(_2844_typeParam))) {
          _2842_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_2842_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_2844_typeParam));
        }
        _2843_typeParamI = (_2843_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _2845_whereClauses;
      _2845_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _2846_typeParams;
      _2846_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_2842_typeParamsFiltered).Count)).Sign == 1) {
        _2845_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_2845_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _2847_i;
        _2847_i = BigInteger.Zero;
        while ((_2847_i) < (new BigInteger((_2842_typeParamsFiltered).Count))) {
          RAST._IType _2848_typeExpr;
          RAST._IType _out78;
          _out78 = DCOMP.COMP.GenType((_2842_typeParamsFiltered).Select(_2847_i), false, false);
          _2848_typeExpr = _out78;
          _2846_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_2846_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_2848_typeExpr)._ToString(DCOMP.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _2847_i = (_2847_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _2849_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMP._IEnvironment _2850_env = DCOMP.Environment.Default();
      if ((m).dtor_hasBody) {
        RAST._IExpr _2851_earlyReturn;
        _2851_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source86 = (m).dtor_outVars;
        if (_source86.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2852___mcc_h0 = _source86.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2853_outVars = _2852___mcc_h0;
          {
            Dafny.ISequence<RAST._IExpr> _2854_tupleArgs;
            _2854_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi9 = new BigInteger((_2853_outVars).Count);
            for (BigInteger _2855_outI = BigInteger.Zero; _2855_outI < _hi9; _2855_outI++) {
              Dafny.ISequence<Dafny.Rune> _2856_outVar;
              _2856_outVar = (_2853_outVars).Select(_2855_outI);
              RAST._IType _2857_outType;
              RAST._IType _out79;
              _out79 = DCOMP.COMP.GenType(((m).dtor_outTypes).Select(_2855_outI), false, false);
              _2857_outType = _out79;
              Dafny.ISequence<Dafny.Rune> _2858_outName;
              _2858_outName = DCOMP.__default.escapeIdent((_2856_outVar));
              _2830_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2830_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2858_outName));
              RAST._IType _2859_outMaybeType;
              _2859_outMaybeType = (((_2857_outType).HasCopySemantics()) ? (_2857_outType) : (RAST.__default.MaybePlaceboType(_2857_outType)));
              _2831_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2831_paramTypes, _2858_outName, _2859_outMaybeType);
              RAST._IExpr _2860_outVarReturn;
              DCOMP._IOwnership _2861___v52;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2862___v53;
              RAST._IExpr _out80;
              DCOMP._IOwnership _out81;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out82;
              DCOMP.COMP.GenExpr(DAST.Expression.create_Ident((_2856_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2858_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_2858_outName, _2859_outMaybeType))), DCOMP.Ownership.create_OwnershipOwned(), out _out80, out _out81, out _out82);
              _2860_outVarReturn = _out80;
              _2861___v52 = _out81;
              _2862___v53 = _out82;
              _2854_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_2854_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_2860_outVarReturn));
            }
            if ((new BigInteger((_2854_tupleArgs).Count)) == (BigInteger.One)) {
              _2851_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_2854_tupleArgs).Select(BigInteger.Zero)));
            } else {
              _2851_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_2854_tupleArgs)));
            }
          }
        }
        _2850_env = DCOMP.Environment.create(_2830_paramNames, _2831_paramTypes);
        RAST._IExpr _2863_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2864___v54;
        DCOMP._IEnvironment _2865___v55;
        RAST._IExpr _out83;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out84;
        DCOMP._IEnvironment _out85;
        DCOMP.COMP.GenStmts((m).dtor_body, (((m).dtor_isStatic) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))), _2850_env, true, _2851_earlyReturn, out _out83, out _out84, out _out85);
        _2863_body = _out83;
        _2864___v54 = _out84;
        _2865___v55 = _out85;
        _2849_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some(_2863_body);
      } else {
        _2850_env = DCOMP.Environment.create(_2830_paramNames, _2831_paramTypes);
        _2849_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_2840_visibility, RAST.Fn.create(_2841_fnName, _2846_typeParams, _2829_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_2837_retTypeArgs).Count)) == (BigInteger.One)) ? ((_2837_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_2837_retTypeArgs)))), _2845_whereClauses, _2849_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2866_declarations;
      _2866_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _2867_i;
      _2867_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _2868_stmts;
      _2868_stmts = stmts;
      while ((_2867_i) < (new BigInteger((_2868_stmts).Count))) {
        DAST._IStatement _2869_stmt;
        _2869_stmt = (_2868_stmts).Select(_2867_i);
        DAST._IStatement _source87 = _2869_stmt;
        if (_source87.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2870___mcc_h0 = _source87.dtor_name;
          DAST._IType _2871___mcc_h1 = _source87.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2872___mcc_h2 = _source87.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source88 = _2872___mcc_h2;
          if (_source88.is_None) {
            DAST._IType _2873_optType = _2871___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _2874_name = _2870___mcc_h0;
            if (((_2867_i) + (BigInteger.One)) < (new BigInteger((_2868_stmts).Count))) {
              DAST._IStatement _source89 = (_2868_stmts).Select((_2867_i) + (BigInteger.One));
              if (_source89.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _2875___mcc_h52 = _source89.dtor_name;
                DAST._IType _2876___mcc_h53 = _source89.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _2877___mcc_h54 = _source89.dtor_maybeValue;
              } else if (_source89.is_Assign) {
                DAST._IAssignLhs _2878___mcc_h58 = _source89.dtor_lhs;
                DAST._IExpression _2879___mcc_h59 = _source89.dtor_value;
                DAST._IAssignLhs _source90 = _2878___mcc_h58;
                if (_source90.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _2880___mcc_h62 = _source90.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source91 = _2880___mcc_h62;
                  Dafny.ISequence<Dafny.Rune> _2881___mcc_h64 = _source91;
                  DAST._IExpression _2882_rhs = _2879___mcc_h59;
                  Dafny.ISequence<Dafny.Rune> _2883_name2 = _2881___mcc_h64;
                  if ((_2883_name2).Equals(_2874_name)) {
                    _2868_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_2868_stmts).Subsequence(BigInteger.Zero, _2867_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_2874_name, _2873_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_2882_rhs)))), (_2868_stmts).Drop((_2867_i) + (BigInteger.One)));
                    _2869_stmt = (_2868_stmts).Select(_2867_i);
                  }
                } else if (_source90.is_Select) {
                  DAST._IExpression _2884___mcc_h66 = _source90.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _2885___mcc_h67 = _source90.dtor_field;
                } else {
                  DAST._IExpression _2886___mcc_h70 = _source90.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _2887___mcc_h71 = _source90.dtor_indices;
                }
              } else if (_source89.is_If) {
                DAST._IExpression _2888___mcc_h74 = _source89.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2889___mcc_h75 = _source89.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _2890___mcc_h76 = _source89.dtor_els;
              } else if (_source89.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _2891___mcc_h80 = _source89.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _2892___mcc_h81 = _source89.dtor_body;
              } else if (_source89.is_While) {
                DAST._IExpression _2893___mcc_h84 = _source89.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2894___mcc_h85 = _source89.dtor_body;
              } else if (_source89.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _2895___mcc_h88 = _source89.dtor_boundName;
                DAST._IType _2896___mcc_h89 = _source89.dtor_boundType;
                DAST._IExpression _2897___mcc_h90 = _source89.dtor_over;
                Dafny.ISequence<DAST._IStatement> _2898___mcc_h91 = _source89.dtor_body;
              } else if (_source89.is_Call) {
                DAST._IExpression _2899___mcc_h96 = _source89.dtor_on;
                DAST._ICallName _2900___mcc_h97 = _source89.dtor_callName;
                Dafny.ISequence<DAST._IType> _2901___mcc_h98 = _source89.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _2902___mcc_h99 = _source89.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2903___mcc_h100 = _source89.dtor_outs;
              } else if (_source89.is_Return) {
                DAST._IExpression _2904___mcc_h106 = _source89.dtor_expr;
              } else if (_source89.is_EarlyReturn) {
              } else if (_source89.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2905___mcc_h108 = _source89.dtor_toLabel;
              } else if (_source89.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _2906___mcc_h110 = _source89.dtor_body;
              } else if (_source89.is_JumpTailCallStart) {
              } else if (_source89.is_Halt) {
              } else {
                DAST._IExpression _2907___mcc_h112 = _source89.dtor_Print_a0;
              }
            }
          } else {
            DAST._IExpression _2908___mcc_h6 = _source88.dtor_value;
          }
        } else if (_source87.is_Assign) {
          DAST._IAssignLhs _2909___mcc_h8 = _source87.dtor_lhs;
          DAST._IExpression _2910___mcc_h9 = _source87.dtor_value;
        } else if (_source87.is_If) {
          DAST._IExpression _2911___mcc_h12 = _source87.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2912___mcc_h13 = _source87.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2913___mcc_h14 = _source87.dtor_els;
        } else if (_source87.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2914___mcc_h18 = _source87.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2915___mcc_h19 = _source87.dtor_body;
        } else if (_source87.is_While) {
          DAST._IExpression _2916___mcc_h22 = _source87.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2917___mcc_h23 = _source87.dtor_body;
        } else if (_source87.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2918___mcc_h26 = _source87.dtor_boundName;
          DAST._IType _2919___mcc_h27 = _source87.dtor_boundType;
          DAST._IExpression _2920___mcc_h28 = _source87.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2921___mcc_h29 = _source87.dtor_body;
        } else if (_source87.is_Call) {
          DAST._IExpression _2922___mcc_h34 = _source87.dtor_on;
          DAST._ICallName _2923___mcc_h35 = _source87.dtor_callName;
          Dafny.ISequence<DAST._IType> _2924___mcc_h36 = _source87.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2925___mcc_h37 = _source87.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2926___mcc_h38 = _source87.dtor_outs;
        } else if (_source87.is_Return) {
          DAST._IExpression _2927___mcc_h44 = _source87.dtor_expr;
        } else if (_source87.is_EarlyReturn) {
        } else if (_source87.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2928___mcc_h46 = _source87.dtor_toLabel;
        } else if (_source87.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2929___mcc_h48 = _source87.dtor_body;
        } else if (_source87.is_JumpTailCallStart) {
        } else if (_source87.is_Halt) {
        } else {
          DAST._IExpression _2930___mcc_h50 = _source87.dtor_Print_a0;
        }
        RAST._IExpr _2931_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2932_recIdents;
        DCOMP._IEnvironment _2933_newEnv2;
        RAST._IExpr _out86;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out87;
        DCOMP._IEnvironment _out88;
        DCOMP.COMP.GenStmt(_2869_stmt, selfIdent, newEnv, (isLast) && ((_2867_i) == ((new BigInteger((_2868_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out86, out _out87, out _out88);
        _2931_stmtExpr = _out86;
        _2932_recIdents = _out87;
        _2933_newEnv2 = _out88;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_2932_recIdents, _2866_declarations));
        newEnv = _2933_newEnv2;
        DAST._IStatement _source92 = _2869_stmt;
        if (_source92.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2934___mcc_h114 = _source92.dtor_name;
          DAST._IType _2935___mcc_h115 = _source92.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2936___mcc_h116 = _source92.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _2937_name = _2934___mcc_h114;
          {
            _2866_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2866_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2937_name));
          }
        } else if (_source92.is_Assign) {
          DAST._IAssignLhs _2938___mcc_h120 = _source92.dtor_lhs;
          DAST._IExpression _2939___mcc_h121 = _source92.dtor_value;
        } else if (_source92.is_If) {
          DAST._IExpression _2940___mcc_h124 = _source92.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2941___mcc_h125 = _source92.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2942___mcc_h126 = _source92.dtor_els;
        } else if (_source92.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2943___mcc_h130 = _source92.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2944___mcc_h131 = _source92.dtor_body;
        } else if (_source92.is_While) {
          DAST._IExpression _2945___mcc_h134 = _source92.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2946___mcc_h135 = _source92.dtor_body;
        } else if (_source92.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2947___mcc_h138 = _source92.dtor_boundName;
          DAST._IType _2948___mcc_h139 = _source92.dtor_boundType;
          DAST._IExpression _2949___mcc_h140 = _source92.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2950___mcc_h141 = _source92.dtor_body;
        } else if (_source92.is_Call) {
          DAST._IExpression _2951___mcc_h146 = _source92.dtor_on;
          DAST._ICallName _2952___mcc_h147 = _source92.dtor_callName;
          Dafny.ISequence<DAST._IType> _2953___mcc_h148 = _source92.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2954___mcc_h149 = _source92.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2955___mcc_h150 = _source92.dtor_outs;
        } else if (_source92.is_Return) {
          DAST._IExpression _2956___mcc_h156 = _source92.dtor_expr;
        } else if (_source92.is_EarlyReturn) {
        } else if (_source92.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2957___mcc_h158 = _source92.dtor_toLabel;
        } else if (_source92.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2958___mcc_h160 = _source92.dtor_body;
        } else if (_source92.is_JumpTailCallStart) {
        } else if (_source92.is_Halt) {
        } else {
          DAST._IExpression _2959___mcc_h162 = _source92.dtor_Print_a0;
        }
        generated = (generated).Then(_2931_stmtExpr);
        _2867_i = (_2867_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, Dafny.ISequence<Dafny.Rune> rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, out Dafny.ISequence<Dafny.Rune> generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = Dafny.Sequence<Dafny.Rune>.Empty;
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source93 = lhs;
      if (_source93.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _2960___mcc_h0 = _source93.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source94 = _2960___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _2961___mcc_h1 = _source94;
        Dafny.ISequence<Dafny.Rune> _2962_id = _2961___mcc_h1;
        {
          if (((env).IsBorrowed(_2962_id)) || ((env).IsBorrowedMut(_2962_id))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), DCOMP.__default.escapeIdent(_2962_id));
          } else {
            generated = DCOMP.__default.escapeIdent(_2962_id);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2962_id);
          needsIIFE = false;
        }
      } else if (_source93.is_Select) {
        DAST._IExpression _2963___mcc_h2 = _source93.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _2964___mcc_h3 = _source93.dtor_field;
        Dafny.ISequence<Dafny.Rune> _2965_field = _2964___mcc_h3;
        DAST._IExpression _2966_on = _2963___mcc_h2;
        {
          RAST._IExpr _2967_onExpr;
          DCOMP._IOwnership _2968_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2969_recIdents;
          RAST._IExpr _out89;
          DCOMP._IOwnership _out90;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out91;
          DCOMP.COMP.GenExpr(_2966_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out89, out _out90, out _out91);
          _2967_onExpr = _out89;
          _2968_onOwned = _out90;
          _2969_recIdents = _out91;
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*("), (_2967_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _2965_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()) = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
          readIdents = _2969_recIdents;
          needsIIFE = true;
        }
      } else {
        DAST._IExpression _2970___mcc_h4 = _source93.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _2971___mcc_h5 = _source93.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _2972_indices = _2971___mcc_h5;
        DAST._IExpression _2973_on = _2970___mcc_h4;
        {
          RAST._IExpr _2974_onExpr;
          DCOMP._IOwnership _2975_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2976_recIdents;
          RAST._IExpr _out92;
          DCOMP._IOwnership _out93;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out94;
          DCOMP.COMP.GenExpr(_2973_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out92, out _out93, out _out94);
          _2974_onExpr = _out92;
          _2975_onOwned = _out93;
          _2976_recIdents = _out94;
          readIdents = _2976_recIdents;
          generated = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _2977_i;
          _2977_i = BigInteger.Zero;
          while ((_2977_i) < (new BigInteger((_2972_indices).Count))) {
            RAST._IExpr _2978_idx;
            DCOMP._IOwnership _2979___v61;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2980_recIdentsIdx;
            RAST._IExpr _out95;
            DCOMP._IOwnership _out96;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out97;
            DCOMP.COMP.GenExpr((_2972_indices).Select(_2977_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out95, out _out96, out _out97);
            _2978_idx = _out95;
            _2979___v61 = _out96;
            _2980_recIdentsIdx = _out97;
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_2977_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_2978_idx)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2980_recIdentsIdx);
            _2977_i = (_2977_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, (_2974_onExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _2977_i = BigInteger.Zero;
          while ((_2977_i) < (new BigInteger((_2972_indices).Count))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_2977_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _2977_i = (_2977_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      DAST._IStatement _source95 = stmt;
      if (_source95.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _2981___mcc_h0 = _source95.dtor_name;
        DAST._IType _2982___mcc_h1 = _source95.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _2983___mcc_h2 = _source95.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source96 = _2983___mcc_h2;
        if (_source96.is_None) {
          DAST._IType _2984_typ = _2982___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2985_name = _2981___mcc_h0;
          {
            DAST._IStatement _2986_newStmt;
            _2986_newStmt = DAST.Statement.create_DeclareVar(_2985_name, _2984_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_2984_typ)));
            RAST._IExpr _out98;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out99;
            DCOMP._IEnvironment _out100;
            DCOMP.COMP.GenStmt(_2986_newStmt, selfIdent, env, isLast, earlyReturn, out _out98, out _out99, out _out100);
            generated = _out98;
            readIdents = _out99;
            newEnv = _out100;
          }
        } else {
          DAST._IExpression _2987___mcc_h3 = _source96.dtor_value;
          DAST._IExpression _2988_expression = _2987___mcc_h3;
          DAST._IType _2989_typ = _2982___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2990_name = _2981___mcc_h0;
          {
            RAST._IType _2991_tpe;
            RAST._IType _out101;
            _out101 = DCOMP.COMP.GenType(_2989_typ, true, false);
            _2991_tpe = _out101;
            Dafny.ISequence<Dafny.Rune> _2992_varName;
            _2992_varName = DCOMP.__default.escapeIdent(_2990_name);
            bool _2993_hasCopySemantics;
            _2993_hasCopySemantics = (_2991_tpe).HasCopySemantics();
            if (((_2988_expression).is_InitializationValue) && (!(_2993_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _2992_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_2991_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_2992_varName, RAST.__default.MaybePlaceboType(_2991_tpe));
            } else {
              RAST._IExpr _2994_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2995_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_2988_expression).is_InitializationValue) && (((_2991_tpe).is_Pointer) || ((_2991_tpe).is_PointerMut))) {
                _2994_expr = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ptr"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("null_mut"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                _2995_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMP._IOwnership _2996_exprOwnership = DCOMP.Ownership.Default();
                RAST._IExpr _out102;
                DCOMP._IOwnership _out103;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out104;
                DCOMP.COMP.GenExpr(_2988_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out102, out _out103, out _out104);
                _2994_expr = _out102;
                _2996_exprOwnership = _out103;
                _2995_recIdents = _out104;
              }
              readIdents = _2995_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_2990_name), Std.Wrappers.Option<RAST._IType>.create_Some(_2991_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2994_expr));
              newEnv = (env).AddAssigned(DCOMP.__default.escapeIdent(_2990_name), _2991_tpe);
            }
          }
        }
      } else if (_source95.is_Assign) {
        DAST._IAssignLhs _2997___mcc_h4 = _source95.dtor_lhs;
        DAST._IExpression _2998___mcc_h5 = _source95.dtor_value;
        DAST._IExpression _2999_expression = _2998___mcc_h5;
        DAST._IAssignLhs _3000_lhs = _2997___mcc_h4;
        {
          Dafny.ISequence<Dafny.Rune> _3001_lhsGen;
          bool _3002_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3003_recIdents;
          Dafny.ISequence<Dafny.Rune> _out105;
          bool _out106;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out107;
          DCOMP.COMP.GenAssignLhs(_3000_lhs, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), selfIdent, env, out _out105, out _out106, out _out107);
          _3001_lhsGen = _out105;
          _3002_needsIIFE = _out106;
          _3003_recIdents = _out107;
          RAST._IExpr _3004_exprGen;
          DCOMP._IOwnership _3005___v62;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3006_exprIdents;
          RAST._IExpr _out108;
          DCOMP._IOwnership _out109;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out110;
          DCOMP.COMP.GenExpr(_2999_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out108, out _out109, out _out110);
          _3004_exprGen = _out108;
          _3005___v62 = _out109;
          _3006_exprIdents = _out110;
          if (_3002_needsIIFE) {
            newEnv = env;
            generated = RAST.Expr.create_Block(RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3004_exprGen)), RAST.Expr.create_RawExpr(_3001_lhsGen)));
          } else {
            if ((_3000_lhs).is_Ident) {
              Dafny.ISequence<Dafny.Rune> _3007_rustId;
              _3007_rustId = DCOMP.__default.escapeIdent(((_3000_lhs).dtor_ident));
              Std.Wrappers._IOption<RAST._IType> _3008_tpe;
              _3008_tpe = (env).GetType(_3007_rustId);
              if (((_3008_tpe).is_Some) && ((((_3008_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
                _3004_exprGen = RAST.__default.MaybePlacebo(_3004_exprGen);
              }
            }
            generated = RAST.__default.AssignVar(_3001_lhsGen, _3004_exprGen);
            newEnv = env;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3003_recIdents, _3006_exprIdents);
        }
      } else if (_source95.is_If) {
        DAST._IExpression _3009___mcc_h6 = _source95.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3010___mcc_h7 = _source95.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _3011___mcc_h8 = _source95.dtor_els;
        Dafny.ISequence<DAST._IStatement> _3012_elsDafny = _3011___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _3013_thnDafny = _3010___mcc_h7;
        DAST._IExpression _3014_cond = _3009___mcc_h6;
        {
          RAST._IExpr _3015_cond;
          DCOMP._IOwnership _3016___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3017_recIdents;
          RAST._IExpr _out111;
          DCOMP._IOwnership _out112;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out113;
          DCOMP.COMP.GenExpr(_3014_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out111, out _out112, out _out113);
          _3015_cond = _out111;
          _3016___v63 = _out112;
          _3017_recIdents = _out113;
          Dafny.ISequence<Dafny.Rune> _3018_condString;
          _3018_condString = (_3015_cond)._ToString(DCOMP.__default.IND);
          readIdents = _3017_recIdents;
          RAST._IExpr _3019_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3020_thnIdents;
          DCOMP._IEnvironment _3021_thnEnv;
          RAST._IExpr _out114;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out115;
          DCOMP._IEnvironment _out116;
          DCOMP.COMP.GenStmts(_3013_thnDafny, selfIdent, env, isLast, earlyReturn, out _out114, out _out115, out _out116);
          _3019_thn = _out114;
          _3020_thnIdents = _out115;
          _3021_thnEnv = _out116;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3020_thnIdents);
          RAST._IExpr _3022_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3023_elsIdents;
          DCOMP._IEnvironment _3024_elsEnv;
          RAST._IExpr _out117;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out118;
          DCOMP._IEnvironment _out119;
          DCOMP.COMP.GenStmts(_3012_elsDafny, selfIdent, env, isLast, earlyReturn, out _out117, out _out118, out _out119);
          _3022_els = _out117;
          _3023_elsIdents = _out118;
          _3024_elsEnv = _out119;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3023_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_3015_cond, _3019_thn, _3022_els);
        }
      } else if (_source95.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _3025___mcc_h9 = _source95.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _3026___mcc_h10 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3027_body = _3026___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _3028_lbl = _3025___mcc_h9;
        {
          RAST._IExpr _3029_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3030_bodyIdents;
          DCOMP._IEnvironment _3031_env2;
          RAST._IExpr _out120;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out121;
          DCOMP._IEnvironment _out122;
          DCOMP.COMP.GenStmts(_3027_body, selfIdent, env, isLast, earlyReturn, out _out120, out _out121, out _out122);
          _3029_body = _out120;
          _3030_bodyIdents = _out121;
          _3031_env2 = _out122;
          readIdents = _3030_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3028_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_3029_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source95.is_While) {
        DAST._IExpression _3032___mcc_h11 = _source95.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3033___mcc_h12 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3034_body = _3033___mcc_h12;
        DAST._IExpression _3035_cond = _3032___mcc_h11;
        {
          RAST._IExpr _3036_cond;
          DCOMP._IOwnership _3037___v64;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3038_recIdents;
          RAST._IExpr _out123;
          DCOMP._IOwnership _out124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out125;
          DCOMP.COMP.GenExpr(_3035_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out123, out _out124, out _out125);
          _3036_cond = _out123;
          _3037___v64 = _out124;
          _3038_recIdents = _out125;
          readIdents = _3038_recIdents;
          RAST._IExpr _3039_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3040_bodyIdents;
          DCOMP._IEnvironment _3041_bodyEnv;
          RAST._IExpr _out126;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out127;
          DCOMP._IEnvironment _out128;
          DCOMP.COMP.GenStmts(_3034_body, selfIdent, env, false, earlyReturn, out _out126, out _out127, out _out128);
          _3039_bodyExpr = _out126;
          _3040_bodyIdents = _out127;
          _3041_bodyEnv = _out128;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3040_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3036_cond), _3039_bodyExpr);
        }
      } else if (_source95.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _3042___mcc_h13 = _source95.dtor_boundName;
        DAST._IType _3043___mcc_h14 = _source95.dtor_boundType;
        DAST._IExpression _3044___mcc_h15 = _source95.dtor_over;
        Dafny.ISequence<DAST._IStatement> _3045___mcc_h16 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3046_body = _3045___mcc_h16;
        DAST._IExpression _3047_over = _3044___mcc_h15;
        DAST._IType _3048_boundType = _3043___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _3049_boundName = _3042___mcc_h13;
        {
          RAST._IExpr _3050_over;
          DCOMP._IOwnership _3051___v65;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3052_recIdents;
          RAST._IExpr _out129;
          DCOMP._IOwnership _out130;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out131;
          DCOMP.COMP.GenExpr(_3047_over, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out129, out _out130, out _out131);
          _3050_over = _out129;
          _3051___v65 = _out130;
          _3052_recIdents = _out131;
          RAST._IType _3053_boundTpe;
          RAST._IType _out132;
          _out132 = DCOMP.COMP.GenType(_3048_boundType, false, false);
          _3053_boundTpe = _out132;
          readIdents = _3052_recIdents;
          RAST._IExpr _3054_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3055_bodyIdents;
          DCOMP._IEnvironment _3056_bodyEnv;
          RAST._IExpr _out133;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out134;
          DCOMP._IEnvironment _out135;
          DCOMP.COMP.GenStmts(_3046_body, selfIdent, (env).AddAssigned(_3049_boundName, RAST.Type.create_Borrowed(_3053_boundTpe)), false, earlyReturn, out _out133, out _out134, out _out135);
          _3054_bodyExpr = _out133;
          _3055_bodyIdents = _out134;
          _3056_bodyEnv = _out135;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3055_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_3049_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMP.__default.escapeIdent(_3049_boundName), _3050_over, _3054_bodyExpr);
        }
      } else if (_source95.is_Call) {
        DAST._IExpression _3057___mcc_h17 = _source95.dtor_on;
        DAST._ICallName _3058___mcc_h18 = _source95.dtor_callName;
        Dafny.ISequence<DAST._IType> _3059___mcc_h19 = _source95.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _3060___mcc_h20 = _source95.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3061___mcc_h21 = _source95.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3062_maybeOutVars = _3061___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _3063_args = _3060___mcc_h20;
        Dafny.ISequence<DAST._IType> _3064_typeArgs = _3059___mcc_h19;
        DAST._ICallName _3065_name = _3058___mcc_h18;
        DAST._IExpression _3066_on = _3057___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _3067_onExpr;
          DCOMP._IOwnership _3068___v68;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3069_enclosingIdents;
          RAST._IExpr _out136;
          DCOMP._IOwnership _out137;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out138;
          DCOMP.COMP.GenExpr(_3066_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out136, out _out137, out _out138);
          _3067_onExpr = _out136;
          _3068___v68 = _out137;
          _3069_enclosingIdents = _out138;
          Dafny.ISequence<RAST._IType> _3070_typeExprs;
          _3070_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_3064_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _3071_typeI;
            _3071_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _3072_typeArgsR;
            _3072_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_3071_typeI) < (new BigInteger((_3064_typeArgs).Count))) {
              RAST._IType _3073_tpe;
              RAST._IType _out139;
              _out139 = DCOMP.COMP.GenType((_3064_typeArgs).Select(_3071_typeI), false, false);
              _3073_tpe = _out139;
              _3072_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_3072_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_3073_tpe));
              _3071_typeI = (_3071_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _3074_argExprs;
          _3074_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi10 = new BigInteger((_3063_args).Count);
          for (BigInteger _3075_i = BigInteger.Zero; _3075_i < _hi10; _3075_i++) {
            DCOMP._IOwnership _3076_argOwnership;
            _3076_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_3065_name).is_Name) && ((_3075_i) < (new BigInteger((((_3065_name).dtor_signature)).Count)))) {
              RAST._IType _3077_tpe;
              RAST._IType _out140;
              _out140 = DCOMP.COMP.GenType(((((_3065_name).dtor_signature)).Select(_3075_i)).dtor_typ, false, false);
              _3077_tpe = _out140;
              if ((_3077_tpe).HasCopySemantics()) {
                _3076_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _3078_argExpr;
            DCOMP._IOwnership _3079_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3080_argIdents;
            RAST._IExpr _out141;
            DCOMP._IOwnership _out142;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out143;
            DCOMP.COMP.GenExpr((_3063_args).Select(_3075_i), selfIdent, env, _3076_argOwnership, out _out141, out _out142, out _out143);
            _3078_argExpr = _out141;
            _3079_ownership = _out142;
            _3080_argIdents = _out143;
            _3074_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_3074_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_3078_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3080_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3069_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _3081_renderedName;
          _3081_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source97) => {
            if (_source97.is_Name) {
              Dafny.ISequence<Dafny.Rune> _3082___mcc_h26 = _source97.dtor_name;
              Dafny.ISequence<DAST._IFormal> _3083___mcc_h27 = _source97.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _3084_name = _3082___mcc_h26;
              return DCOMP.__default.escapeIdent(_3084_name);
            } else if (_source97.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source97.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source97.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_3065_name);
          DAST._IExpression _source98 = _3066_on;
          if (_source98.is_Literal) {
            DAST._ILiteral _3085___mcc_h28 = _source98.dtor_Literal_a0;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _3086___mcc_h30 = _source98.dtor_Ident_a0;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3087___mcc_h32 = _source98.dtor_Companion_a0;
            {
              _3067_onExpr = (_3067_onExpr).MSel(_3081_renderedName);
            }
          } else if (_source98.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _3088___mcc_h34 = _source98.dtor_Tuple_a0;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3089___mcc_h36 = _source98.dtor_path;
            Dafny.ISequence<DAST._IType> _3090___mcc_h37 = _source98.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3091___mcc_h38 = _source98.dtor_args;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _3092___mcc_h42 = _source98.dtor_dims;
            DAST._IType _3093___mcc_h43 = _source98.dtor_typ;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_DatatypeValue) {
            DAST._IDatatypeType _3094___mcc_h46 = _source98.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _3095___mcc_h47 = _source98.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _3096___mcc_h48 = _source98.dtor_variant;
            bool _3097___mcc_h49 = _source98.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _3098___mcc_h50 = _source98.dtor_contents;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Convert) {
            DAST._IExpression _3099___mcc_h56 = _source98.dtor_value;
            DAST._IType _3100___mcc_h57 = _source98.dtor_from;
            DAST._IType _3101___mcc_h58 = _source98.dtor_typ;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqConstruct) {
            DAST._IExpression _3102___mcc_h62 = _source98.dtor_length;
            DAST._IExpression _3103___mcc_h63 = _source98.dtor_elem;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _3104___mcc_h66 = _source98.dtor_elements;
            DAST._IType _3105___mcc_h67 = _source98.dtor_typ;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _3106___mcc_h70 = _source98.dtor_elements;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _3107___mcc_h72 = _source98.dtor_elements;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _3108___mcc_h74 = _source98.dtor_mapElems;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapBuilder) {
            DAST._IType _3109___mcc_h76 = _source98.dtor_keyType;
            DAST._IType _3110___mcc_h77 = _source98.dtor_valueType;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqUpdate) {
            DAST._IExpression _3111___mcc_h80 = _source98.dtor_expr;
            DAST._IExpression _3112___mcc_h81 = _source98.dtor_indexExpr;
            DAST._IExpression _3113___mcc_h82 = _source98.dtor_value;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapUpdate) {
            DAST._IExpression _3114___mcc_h86 = _source98.dtor_expr;
            DAST._IExpression _3115___mcc_h87 = _source98.dtor_indexExpr;
            DAST._IExpression _3116___mcc_h88 = _source98.dtor_value;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SetBuilder) {
            DAST._IType _3117___mcc_h92 = _source98.dtor_elemType;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_ToMultiset) {
            DAST._IExpression _3118___mcc_h94 = _source98.dtor_ToMultiset_a0;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_This) {
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Ite) {
            DAST._IExpression _3119___mcc_h96 = _source98.dtor_cond;
            DAST._IExpression _3120___mcc_h97 = _source98.dtor_thn;
            DAST._IExpression _3121___mcc_h98 = _source98.dtor_els;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_UnOp) {
            DAST._IUnaryOp _3122___mcc_h102 = _source98.dtor_unOp;
            DAST._IExpression _3123___mcc_h103 = _source98.dtor_expr;
            DAST.Format._IUnOpFormat _3124___mcc_h104 = _source98.dtor_format1;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_BinOp) {
            DAST._IBinOp _3125___mcc_h108 = _source98.dtor_op;
            DAST._IExpression _3126___mcc_h109 = _source98.dtor_left;
            DAST._IExpression _3127___mcc_h110 = _source98.dtor_right;
            DAST.Format._IBinOpFormat _3128___mcc_h111 = _source98.dtor_format2;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_ArrayLen) {
            DAST._IExpression _3129___mcc_h116 = _source98.dtor_expr;
            BigInteger _3130___mcc_h117 = _source98.dtor_dim;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapKeys) {
            DAST._IExpression _3131___mcc_h120 = _source98.dtor_expr;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_MapValues) {
            DAST._IExpression _3132___mcc_h122 = _source98.dtor_expr;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Select) {
            DAST._IExpression _3133___mcc_h124 = _source98.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3134___mcc_h125 = _source98.dtor_field;
            bool _3135___mcc_h126 = _source98.dtor_isConstant;
            bool _3136___mcc_h127 = _source98.dtor_onDatatype;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SelectFn) {
            DAST._IExpression _3137___mcc_h132 = _source98.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3138___mcc_h133 = _source98.dtor_field;
            bool _3139___mcc_h134 = _source98.dtor_onDatatype;
            bool _3140___mcc_h135 = _source98.dtor_isStatic;
            BigInteger _3141___mcc_h136 = _source98.dtor_arity;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Index) {
            DAST._IExpression _3142___mcc_h142 = _source98.dtor_expr;
            DAST._ICollKind _3143___mcc_h143 = _source98.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _3144___mcc_h144 = _source98.dtor_indices;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_IndexRange) {
            DAST._IExpression _3145___mcc_h148 = _source98.dtor_expr;
            bool _3146___mcc_h149 = _source98.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _3147___mcc_h150 = _source98.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _3148___mcc_h151 = _source98.dtor_high;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_TupleSelect) {
            DAST._IExpression _3149___mcc_h156 = _source98.dtor_expr;
            BigInteger _3150___mcc_h157 = _source98.dtor_index;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Call) {
            DAST._IExpression _3151___mcc_h160 = _source98.dtor_on;
            DAST._ICallName _3152___mcc_h161 = _source98.dtor_callName;
            Dafny.ISequence<DAST._IType> _3153___mcc_h162 = _source98.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3154___mcc_h163 = _source98.dtor_args;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _3155___mcc_h168 = _source98.dtor_params;
            DAST._IType _3156___mcc_h169 = _source98.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _3157___mcc_h170 = _source98.dtor_body;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _3158___mcc_h174 = _source98.dtor_values;
            DAST._IType _3159___mcc_h175 = _source98.dtor_retType;
            DAST._IExpression _3160___mcc_h176 = _source98.dtor_expr;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _3161___mcc_h180 = _source98.dtor_name;
            DAST._IType _3162___mcc_h181 = _source98.dtor_typ;
            DAST._IExpression _3163___mcc_h182 = _source98.dtor_value;
            DAST._IExpression _3164___mcc_h183 = _source98.dtor_iifeBody;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_Apply) {
            DAST._IExpression _3165___mcc_h188 = _source98.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _3166___mcc_h189 = _source98.dtor_args;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_TypeTest) {
            DAST._IExpression _3167___mcc_h192 = _source98.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3168___mcc_h193 = _source98.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _3169___mcc_h194 = _source98.dtor_variant;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_InitializationValue) {
            DAST._IType _3170___mcc_h198 = _source98.dtor_typ;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_BoolBoundedPool) {
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SetBoundedPool) {
            DAST._IExpression _3171___mcc_h200 = _source98.dtor_of;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else if (_source98.is_SeqBoundedPool) {
            DAST._IExpression _3172___mcc_h202 = _source98.dtor_of;
            bool _3173___mcc_h203 = _source98.dtor_includeDuplicates;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          } else {
            DAST._IExpression _3174___mcc_h206 = _source98.dtor_lo;
            DAST._IExpression _3175___mcc_h207 = _source98.dtor_hi;
            {
              _3067_onExpr = (_3067_onExpr).Sel(_3081_renderedName);
            }
          }
          generated = _3067_onExpr;
          if ((new BigInteger((_3070_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_3070_typeExprs);
          }
          generated = (generated).Apply(_3074_argExprs);
          if (((_3062_maybeOutVars).is_Some) && ((new BigInteger(((_3062_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _3176_outVar;
            _3176_outVar = (((_3062_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_3176_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_3176_outVar, generated);
          } else if (((_3062_maybeOutVars).is_None) || ((new BigInteger(((_3062_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _3177_tmpVar;
            _3177_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _3178_tmpId;
            _3178_tmpId = RAST.Expr.create_Identifier(_3177_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _3177_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3179_outVars;
            _3179_outVars = (_3062_maybeOutVars).dtor_value;
            BigInteger _hi11 = new BigInteger((_3179_outVars).Count);
            for (BigInteger _3180_outI = BigInteger.Zero; _3180_outI < _hi11; _3180_outI++) {
              Dafny.ISequence<Dafny.Rune> _3181_outVar;
              _3181_outVar = ((_3179_outVars).Select(_3180_outI));
              RAST._IExpr _3182_rhs;
              _3182_rhs = (_3178_tmpId).Sel(Std.Strings.__default.OfNat(_3180_outI));
              if (!((env).HasCopySemantics(_3181_outVar))) {
                _3182_rhs = RAST.__default.MaybePlacebo(_3182_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_3181_outVar, _3182_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source95.is_Return) {
        DAST._IExpression _3183___mcc_h22 = _source95.dtor_expr;
        DAST._IExpression _3184_exprDafny = _3183___mcc_h22;
        {
          RAST._IExpr _3185_expr;
          DCOMP._IOwnership _3186___v72;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3187_recIdents;
          RAST._IExpr _out144;
          DCOMP._IOwnership _out145;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out146;
          DCOMP.COMP.GenExpr(_3184_exprDafny, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out144, out _out145, out _out146);
          _3185_expr = _out144;
          _3186___v72 = _out145;
          _3187_recIdents = _out146;
          readIdents = _3187_recIdents;
          if (isLast) {
            generated = _3185_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3185_expr));
          }
          newEnv = env;
        }
      } else if (_source95.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source95.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3188___mcc_h23 = _source95.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3189_toLabel = _3188___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source99 = _3189_toLabel;
          if (_source99.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3190___mcc_h210 = _source99.dtor_value;
            Dafny.ISequence<Dafny.Rune> _3191_lbl = _3190___mcc_h210;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3191_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source95.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _3192___mcc_h24 = _source95.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3193_body = _3192___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi12 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _3194_paramI = BigInteger.Zero; _3194_paramI < _hi12; _3194_paramI++) {
            Dafny.ISequence<Dafny.Rune> _3195_param;
            _3195_param = ((env).dtor_names).Select(_3194_paramI);
            RAST._IExpr _3196_paramInit;
            DCOMP._IOwnership _3197___v66;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3198___v67;
            RAST._IExpr _out147;
            DCOMP._IOwnership _out148;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out149;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Ident(_3195_param), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out147, out _out148, out _out149);
            _3196_paramInit = _out147;
            _3197___v66 = _out148;
            _3198___v67 = _out149;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeIdent(_3195_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3196_paramInit)));
          }
          RAST._IExpr _3199_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3200_bodyIdents;
          DCOMP._IEnvironment _3201_bodyEnv;
          RAST._IExpr _out150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out151;
          DCOMP._IEnvironment _out152;
          DCOMP.COMP.GenStmts(_3193_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out150, out _out151, out _out152);
          _3199_bodyExpr = _out150;
          _3200_bodyIdents = _out151;
          _3201_bodyEnv = _out152;
          newEnv = env;
          readIdents = _3200_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _3199_bodyExpr)));
        }
      } else if (_source95.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source95.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _3202___mcc_h25 = _source95.dtor_Print_a0;
        DAST._IExpression _3203_e = _3202___mcc_h25;
        {
          RAST._IExpr _3204_printedExpr;
          DCOMP._IOwnership _3205_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3206_recIdents;
          RAST._IExpr _out153;
          DCOMP._IOwnership _out154;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out155;
          DCOMP.COMP.GenExpr(_3203_e, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out153, out _out154, out _out155);
          _3204_printedExpr = _out153;
          _3205_recOwnership = _out154;
          _3206_recIdents = _out155;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_3204_printedExpr)));
          readIdents = _3206_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source100 = range;
      if (_source100.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source100.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source100.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source100.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source100.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source100.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source100.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source100.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source100.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source100.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source100.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMP._IOwnership ownership, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out156;
        DCOMP._IOwnership _out157;
        DCOMP.COMP.FromOwned(r, expectedOwnership, out _out156, out _out157);
        @out = _out156;
        resultingOwnership = _out157;
        return ;
      } else if ((object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMP._IOwnership expectedOwnership, DCOMP._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source101 = e;
      DAST._ILiteral _3207___mcc_h0 = _source101.dtor_Literal_a0;
      DAST._ILiteral _source102 = _3207___mcc_h0;
      if (_source102.is_BoolLiteral) {
        bool _3208___mcc_h1 = _source102.dtor_BoolLiteral_a0;
        if ((_3208___mcc_h1) == (false)) {
          {
            RAST._IExpr _out158;
            DCOMP._IOwnership _out159;
            DCOMP.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")), expectedOwnership, out _out158, out _out159);
            r = _out158;
            resultingOwnership = _out159;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        } else {
          {
            RAST._IExpr _out160;
            DCOMP._IOwnership _out161;
            DCOMP.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")), expectedOwnership, out _out160, out _out161);
            r = _out160;
            resultingOwnership = _out161;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        }
      } else if (_source102.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _3209___mcc_h2 = _source102.dtor_IntLiteral_a0;
        DAST._IType _3210___mcc_h3 = _source102.dtor_IntLiteral_a1;
        DAST._IType _3211_t = _3210___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _3212_i = _3209___mcc_h2;
        {
          DAST._IType _source103 = _3211_t;
          if (_source103.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3213___mcc_h100 = _source103.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3214___mcc_h101 = _source103.dtor_typeArgs;
            DAST._IResolvedType _3215___mcc_h102 = _source103.dtor_resolved;
            DAST._IType _3216_o = _3211_t;
            {
              RAST._IType _3217_genType;
              RAST._IType _out162;
              _out162 = DCOMP.COMP.GenType(_3216_o, false, false);
              _3217_genType = _out162;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3217_genType);
            }
          } else if (_source103.is_Nullable) {
            DAST._IType _3218___mcc_h106 = _source103.dtor_Nullable_a0;
            DAST._IType _3219_o = _3211_t;
            {
              RAST._IType _3220_genType;
              RAST._IType _out163;
              _out163 = DCOMP.COMP.GenType(_3219_o, false, false);
              _3220_genType = _out163;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3220_genType);
            }
          } else if (_source103.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3221___mcc_h108 = _source103.dtor_Tuple_a0;
            DAST._IType _3222_o = _3211_t;
            {
              RAST._IType _3223_genType;
              RAST._IType _out164;
              _out164 = DCOMP.COMP.GenType(_3222_o, false, false);
              _3223_genType = _out164;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3223_genType);
            }
          } else if (_source103.is_Array) {
            DAST._IType _3224___mcc_h110 = _source103.dtor_element;
            BigInteger _3225___mcc_h111 = _source103.dtor_dims;
            DAST._IType _3226_o = _3211_t;
            {
              RAST._IType _3227_genType;
              RAST._IType _out165;
              _out165 = DCOMP.COMP.GenType(_3226_o, false, false);
              _3227_genType = _out165;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3227_genType);
            }
          } else if (_source103.is_Seq) {
            DAST._IType _3228___mcc_h114 = _source103.dtor_element;
            DAST._IType _3229_o = _3211_t;
            {
              RAST._IType _3230_genType;
              RAST._IType _out166;
              _out166 = DCOMP.COMP.GenType(_3229_o, false, false);
              _3230_genType = _out166;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3230_genType);
            }
          } else if (_source103.is_Set) {
            DAST._IType _3231___mcc_h116 = _source103.dtor_element;
            DAST._IType _3232_o = _3211_t;
            {
              RAST._IType _3233_genType;
              RAST._IType _out167;
              _out167 = DCOMP.COMP.GenType(_3232_o, false, false);
              _3233_genType = _out167;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3233_genType);
            }
          } else if (_source103.is_Multiset) {
            DAST._IType _3234___mcc_h118 = _source103.dtor_element;
            DAST._IType _3235_o = _3211_t;
            {
              RAST._IType _3236_genType;
              RAST._IType _out168;
              _out168 = DCOMP.COMP.GenType(_3235_o, false, false);
              _3236_genType = _out168;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3236_genType);
            }
          } else if (_source103.is_Map) {
            DAST._IType _3237___mcc_h120 = _source103.dtor_key;
            DAST._IType _3238___mcc_h121 = _source103.dtor_value;
            DAST._IType _3239_o = _3211_t;
            {
              RAST._IType _3240_genType;
              RAST._IType _out169;
              _out169 = DCOMP.COMP.GenType(_3239_o, false, false);
              _3240_genType = _out169;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3240_genType);
            }
          } else if (_source103.is_SetBuilder) {
            DAST._IType _3241___mcc_h124 = _source103.dtor_element;
            DAST._IType _3242_o = _3211_t;
            {
              RAST._IType _3243_genType;
              RAST._IType _out170;
              _out170 = DCOMP.COMP.GenType(_3242_o, false, false);
              _3243_genType = _out170;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3243_genType);
            }
          } else if (_source103.is_MapBuilder) {
            DAST._IType _3244___mcc_h126 = _source103.dtor_key;
            DAST._IType _3245___mcc_h127 = _source103.dtor_value;
            DAST._IType _3246_o = _3211_t;
            {
              RAST._IType _3247_genType;
              RAST._IType _out171;
              _out171 = DCOMP.COMP.GenType(_3246_o, false, false);
              _3247_genType = _out171;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3247_genType);
            }
          } else if (_source103.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3248___mcc_h130 = _source103.dtor_args;
            DAST._IType _3249___mcc_h131 = _source103.dtor_result;
            DAST._IType _3250_o = _3211_t;
            {
              RAST._IType _3251_genType;
              RAST._IType _out172;
              _out172 = DCOMP.COMP.GenType(_3250_o, false, false);
              _3251_genType = _out172;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3251_genType);
            }
          } else if (_source103.is_Primitive) {
            DAST._IPrimitive _3252___mcc_h134 = _source103.dtor_Primitive_a0;
            DAST._IPrimitive _source104 = _3252___mcc_h134;
            if (_source104.is_Int) {
              {
                if ((new BigInteger((_3212_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_3212_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_3212_i, true));
                }
              }
            } else if (_source104.is_Real) {
              DAST._IType _3253_o = _3211_t;
              {
                RAST._IType _3254_genType;
                RAST._IType _out173;
                _out173 = DCOMP.COMP.GenType(_3253_o, false, false);
                _3254_genType = _out173;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3254_genType);
              }
            } else if (_source104.is_String) {
              DAST._IType _3255_o = _3211_t;
              {
                RAST._IType _3256_genType;
                RAST._IType _out174;
                _out174 = DCOMP.COMP.GenType(_3255_o, false, false);
                _3256_genType = _out174;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3256_genType);
              }
            } else if (_source104.is_Bool) {
              DAST._IType _3257_o = _3211_t;
              {
                RAST._IType _3258_genType;
                RAST._IType _out175;
                _out175 = DCOMP.COMP.GenType(_3257_o, false, false);
                _3258_genType = _out175;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3258_genType);
              }
            } else {
              DAST._IType _3259_o = _3211_t;
              {
                RAST._IType _3260_genType;
                RAST._IType _out176;
                _out176 = DCOMP.COMP.GenType(_3259_o, false, false);
                _3260_genType = _out176;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3260_genType);
              }
            }
          } else if (_source103.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3261___mcc_h136 = _source103.dtor_Passthrough_a0;
            DAST._IType _3262_o = _3211_t;
            {
              RAST._IType _3263_genType;
              RAST._IType _out177;
              _out177 = DCOMP.COMP.GenType(_3262_o, false, false);
              _3263_genType = _out177;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3263_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3264___mcc_h138 = _source103.dtor_TypeArg_a0;
            DAST._IType _3265_o = _3211_t;
            {
              RAST._IType _3266_genType;
              RAST._IType _out178;
              _out178 = DCOMP.COMP.GenType(_3265_o, false, false);
              _3266_genType = _out178;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3212_i), _3266_genType);
            }
          }
          RAST._IExpr _out179;
          DCOMP._IOwnership _out180;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out179, out _out180);
          r = _out179;
          resultingOwnership = _out180;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source102.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _3267___mcc_h4 = _source102.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3268___mcc_h5 = _source102.dtor_DecLiteral_a1;
        DAST._IType _3269___mcc_h6 = _source102.dtor_DecLiteral_a2;
        DAST._IType _3270_t = _3269___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _3271_d = _3268___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _3272_n = _3267___mcc_h4;
        {
          DAST._IType _source105 = _3270_t;
          if (_source105.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3273___mcc_h140 = _source105.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _3274___mcc_h141 = _source105.dtor_typeArgs;
            DAST._IResolvedType _3275___mcc_h142 = _source105.dtor_resolved;
            DAST._IType _3276_o = _3270_t;
            {
              RAST._IType _3277_genType;
              RAST._IType _out181;
              _out181 = DCOMP.COMP.GenType(_3276_o, false, false);
              _3277_genType = _out181;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3277_genType);
            }
          } else if (_source105.is_Nullable) {
            DAST._IType _3278___mcc_h146 = _source105.dtor_Nullable_a0;
            DAST._IType _3279_o = _3270_t;
            {
              RAST._IType _3280_genType;
              RAST._IType _out182;
              _out182 = DCOMP.COMP.GenType(_3279_o, false, false);
              _3280_genType = _out182;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3280_genType);
            }
          } else if (_source105.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3281___mcc_h148 = _source105.dtor_Tuple_a0;
            DAST._IType _3282_o = _3270_t;
            {
              RAST._IType _3283_genType;
              RAST._IType _out183;
              _out183 = DCOMP.COMP.GenType(_3282_o, false, false);
              _3283_genType = _out183;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3283_genType);
            }
          } else if (_source105.is_Array) {
            DAST._IType _3284___mcc_h150 = _source105.dtor_element;
            BigInteger _3285___mcc_h151 = _source105.dtor_dims;
            DAST._IType _3286_o = _3270_t;
            {
              RAST._IType _3287_genType;
              RAST._IType _out184;
              _out184 = DCOMP.COMP.GenType(_3286_o, false, false);
              _3287_genType = _out184;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3287_genType);
            }
          } else if (_source105.is_Seq) {
            DAST._IType _3288___mcc_h154 = _source105.dtor_element;
            DAST._IType _3289_o = _3270_t;
            {
              RAST._IType _3290_genType;
              RAST._IType _out185;
              _out185 = DCOMP.COMP.GenType(_3289_o, false, false);
              _3290_genType = _out185;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3290_genType);
            }
          } else if (_source105.is_Set) {
            DAST._IType _3291___mcc_h156 = _source105.dtor_element;
            DAST._IType _3292_o = _3270_t;
            {
              RAST._IType _3293_genType;
              RAST._IType _out186;
              _out186 = DCOMP.COMP.GenType(_3292_o, false, false);
              _3293_genType = _out186;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3293_genType);
            }
          } else if (_source105.is_Multiset) {
            DAST._IType _3294___mcc_h158 = _source105.dtor_element;
            DAST._IType _3295_o = _3270_t;
            {
              RAST._IType _3296_genType;
              RAST._IType _out187;
              _out187 = DCOMP.COMP.GenType(_3295_o, false, false);
              _3296_genType = _out187;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3296_genType);
            }
          } else if (_source105.is_Map) {
            DAST._IType _3297___mcc_h160 = _source105.dtor_key;
            DAST._IType _3298___mcc_h161 = _source105.dtor_value;
            DAST._IType _3299_o = _3270_t;
            {
              RAST._IType _3300_genType;
              RAST._IType _out188;
              _out188 = DCOMP.COMP.GenType(_3299_o, false, false);
              _3300_genType = _out188;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3300_genType);
            }
          } else if (_source105.is_SetBuilder) {
            DAST._IType _3301___mcc_h164 = _source105.dtor_element;
            DAST._IType _3302_o = _3270_t;
            {
              RAST._IType _3303_genType;
              RAST._IType _out189;
              _out189 = DCOMP.COMP.GenType(_3302_o, false, false);
              _3303_genType = _out189;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3303_genType);
            }
          } else if (_source105.is_MapBuilder) {
            DAST._IType _3304___mcc_h166 = _source105.dtor_key;
            DAST._IType _3305___mcc_h167 = _source105.dtor_value;
            DAST._IType _3306_o = _3270_t;
            {
              RAST._IType _3307_genType;
              RAST._IType _out190;
              _out190 = DCOMP.COMP.GenType(_3306_o, false, false);
              _3307_genType = _out190;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3307_genType);
            }
          } else if (_source105.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3308___mcc_h170 = _source105.dtor_args;
            DAST._IType _3309___mcc_h171 = _source105.dtor_result;
            DAST._IType _3310_o = _3270_t;
            {
              RAST._IType _3311_genType;
              RAST._IType _out191;
              _out191 = DCOMP.COMP.GenType(_3310_o, false, false);
              _3311_genType = _out191;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3311_genType);
            }
          } else if (_source105.is_Primitive) {
            DAST._IPrimitive _3312___mcc_h174 = _source105.dtor_Primitive_a0;
            DAST._IPrimitive _source106 = _3312___mcc_h174;
            if (_source106.is_Int) {
              DAST._IType _3313_o = _3270_t;
              {
                RAST._IType _3314_genType;
                RAST._IType _out192;
                _out192 = DCOMP.COMP.GenType(_3313_o, false, false);
                _3314_genType = _out192;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3314_genType);
              }
            } else if (_source106.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source106.is_String) {
              DAST._IType _3315_o = _3270_t;
              {
                RAST._IType _3316_genType;
                RAST._IType _out193;
                _out193 = DCOMP.COMP.GenType(_3315_o, false, false);
                _3316_genType = _out193;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3316_genType);
              }
            } else if (_source106.is_Bool) {
              DAST._IType _3317_o = _3270_t;
              {
                RAST._IType _3318_genType;
                RAST._IType _out194;
                _out194 = DCOMP.COMP.GenType(_3317_o, false, false);
                _3318_genType = _out194;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3318_genType);
              }
            } else {
              DAST._IType _3319_o = _3270_t;
              {
                RAST._IType _3320_genType;
                RAST._IType _out195;
                _out195 = DCOMP.COMP.GenType(_3319_o, false, false);
                _3320_genType = _out195;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3320_genType);
              }
            }
          } else if (_source105.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3321___mcc_h176 = _source105.dtor_Passthrough_a0;
            DAST._IType _3322_o = _3270_t;
            {
              RAST._IType _3323_genType;
              RAST._IType _out196;
              _out196 = DCOMP.COMP.GenType(_3322_o, false, false);
              _3323_genType = _out196;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3323_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3324___mcc_h178 = _source105.dtor_TypeArg_a0;
            DAST._IType _3325_o = _3270_t;
            {
              RAST._IType _3326_genType;
              RAST._IType _out197;
              _out197 = DCOMP.COMP.GenType(_3325_o, false, false);
              _3326_genType = _out197;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3272_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3271_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3326_genType);
            }
          }
          RAST._IExpr _out198;
          DCOMP._IOwnership _out199;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out198, out _out199);
          r = _out198;
          resultingOwnership = _out199;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source102.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _3327___mcc_h7 = _source102.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _3328_l = _3327___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_3328_l, false));
          RAST._IExpr _out200;
          DCOMP._IOwnership _out201;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out200, out _out201);
          r = _out200;
          resultingOwnership = _out201;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source102.is_CharLiteral) {
        Dafny.Rune _3329___mcc_h8 = _source102.dtor_CharLiteral_a0;
        Dafny.Rune _3330_c = _3329___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_3330_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMP.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out202;
          DCOMP._IOwnership _out203;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out202, out _out203);
          r = _out202;
          resultingOwnership = _out203;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _3331___mcc_h9 = _source102.dtor_Null_a0;
        DAST._IType _3332_tpe = _3331___mcc_h9;
        {
          RAST._IType _3333_tpeGen;
          RAST._IType _out204;
          _out204 = DCOMP.COMP.GenType(_3332_tpe, false, false);
          _3333_tpeGen = _out204;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _3333_tpeGen);
          RAST._IExpr _out205;
          DCOMP._IOwnership _out206;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out205, out _out206);
          r = _out205;
          resultingOwnership = _out206;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs50 = e;
      DAST._IBinOp _3334_op = _let_tmp_rhs50.dtor_op;
      DAST._IExpression _3335_lExpr = _let_tmp_rhs50.dtor_left;
      DAST._IExpression _3336_rExpr = _let_tmp_rhs50.dtor_right;
      DAST.Format._IBinOpFormat _3337_format = _let_tmp_rhs50.dtor_format2;
      bool _3338_becomesLeftCallsRight;
      _3338_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source107) => {
        if (_source107.is_Eq) {
          bool _3339___mcc_h0 = _source107.dtor_referential;
          bool _3340___mcc_h1 = _source107.dtor_nullable;
          return false;
        } else if (_source107.is_Div) {
          return false;
        } else if (_source107.is_EuclidianDiv) {
          return false;
        } else if (_source107.is_Mod) {
          return false;
        } else if (_source107.is_EuclidianMod) {
          return false;
        } else if (_source107.is_Lt) {
          return false;
        } else if (_source107.is_LtChar) {
          return false;
        } else if (_source107.is_Plus) {
          return false;
        } else if (_source107.is_Minus) {
          return false;
        } else if (_source107.is_Times) {
          return false;
        } else if (_source107.is_BitwiseAnd) {
          return false;
        } else if (_source107.is_BitwiseOr) {
          return false;
        } else if (_source107.is_BitwiseXor) {
          return false;
        } else if (_source107.is_BitwiseShiftRight) {
          return false;
        } else if (_source107.is_BitwiseShiftLeft) {
          return false;
        } else if (_source107.is_And) {
          return false;
        } else if (_source107.is_Or) {
          return false;
        } else if (_source107.is_In) {
          return false;
        } else if (_source107.is_SeqProperPrefix) {
          return false;
        } else if (_source107.is_SeqPrefix) {
          return false;
        } else if (_source107.is_SetMerge) {
          return true;
        } else if (_source107.is_SetSubtraction) {
          return true;
        } else if (_source107.is_SetIntersection) {
          return true;
        } else if (_source107.is_Subset) {
          return false;
        } else if (_source107.is_ProperSubset) {
          return false;
        } else if (_source107.is_SetDisjoint) {
          return true;
        } else if (_source107.is_MapMerge) {
          return true;
        } else if (_source107.is_MapSubtraction) {
          return true;
        } else if (_source107.is_MultisetMerge) {
          return true;
        } else if (_source107.is_MultisetSubtraction) {
          return true;
        } else if (_source107.is_MultisetIntersection) {
          return true;
        } else if (_source107.is_Submultiset) {
          return false;
        } else if (_source107.is_ProperSubmultiset) {
          return false;
        } else if (_source107.is_MultisetDisjoint) {
          return true;
        } else if (_source107.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3341___mcc_h4 = _source107.dtor_Passthrough_a0;
          return false;
        }
      }))(_3334_op);
      bool _3342_becomesRightCallsLeft;
      _3342_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source108) => {
        if (_source108.is_Eq) {
          bool _3343___mcc_h6 = _source108.dtor_referential;
          bool _3344___mcc_h7 = _source108.dtor_nullable;
          return false;
        } else if (_source108.is_Div) {
          return false;
        } else if (_source108.is_EuclidianDiv) {
          return false;
        } else if (_source108.is_Mod) {
          return false;
        } else if (_source108.is_EuclidianMod) {
          return false;
        } else if (_source108.is_Lt) {
          return false;
        } else if (_source108.is_LtChar) {
          return false;
        } else if (_source108.is_Plus) {
          return false;
        } else if (_source108.is_Minus) {
          return false;
        } else if (_source108.is_Times) {
          return false;
        } else if (_source108.is_BitwiseAnd) {
          return false;
        } else if (_source108.is_BitwiseOr) {
          return false;
        } else if (_source108.is_BitwiseXor) {
          return false;
        } else if (_source108.is_BitwiseShiftRight) {
          return false;
        } else if (_source108.is_BitwiseShiftLeft) {
          return false;
        } else if (_source108.is_And) {
          return false;
        } else if (_source108.is_Or) {
          return false;
        } else if (_source108.is_In) {
          return true;
        } else if (_source108.is_SeqProperPrefix) {
          return false;
        } else if (_source108.is_SeqPrefix) {
          return false;
        } else if (_source108.is_SetMerge) {
          return false;
        } else if (_source108.is_SetSubtraction) {
          return false;
        } else if (_source108.is_SetIntersection) {
          return false;
        } else if (_source108.is_Subset) {
          return false;
        } else if (_source108.is_ProperSubset) {
          return false;
        } else if (_source108.is_SetDisjoint) {
          return false;
        } else if (_source108.is_MapMerge) {
          return false;
        } else if (_source108.is_MapSubtraction) {
          return false;
        } else if (_source108.is_MultisetMerge) {
          return false;
        } else if (_source108.is_MultisetSubtraction) {
          return false;
        } else if (_source108.is_MultisetIntersection) {
          return false;
        } else if (_source108.is_Submultiset) {
          return false;
        } else if (_source108.is_ProperSubmultiset) {
          return false;
        } else if (_source108.is_MultisetDisjoint) {
          return false;
        } else if (_source108.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3345___mcc_h10 = _source108.dtor_Passthrough_a0;
          return false;
        }
      }))(_3334_op);
      bool _3346_becomesCallLeftRight;
      _3346_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source109) => {
        if (_source109.is_Eq) {
          bool _3347___mcc_h12 = _source109.dtor_referential;
          bool _3348___mcc_h13 = _source109.dtor_nullable;
          if ((_3347___mcc_h12) == (true)) {
            if ((_3348___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source109.is_Div) {
          return false;
        } else if (_source109.is_EuclidianDiv) {
          return false;
        } else if (_source109.is_Mod) {
          return false;
        } else if (_source109.is_EuclidianMod) {
          return false;
        } else if (_source109.is_Lt) {
          return false;
        } else if (_source109.is_LtChar) {
          return false;
        } else if (_source109.is_Plus) {
          return false;
        } else if (_source109.is_Minus) {
          return false;
        } else if (_source109.is_Times) {
          return false;
        } else if (_source109.is_BitwiseAnd) {
          return false;
        } else if (_source109.is_BitwiseOr) {
          return false;
        } else if (_source109.is_BitwiseXor) {
          return false;
        } else if (_source109.is_BitwiseShiftRight) {
          return false;
        } else if (_source109.is_BitwiseShiftLeft) {
          return false;
        } else if (_source109.is_And) {
          return false;
        } else if (_source109.is_Or) {
          return false;
        } else if (_source109.is_In) {
          return false;
        } else if (_source109.is_SeqProperPrefix) {
          return false;
        } else if (_source109.is_SeqPrefix) {
          return false;
        } else if (_source109.is_SetMerge) {
          return false;
        } else if (_source109.is_SetSubtraction) {
          return false;
        } else if (_source109.is_SetIntersection) {
          return false;
        } else if (_source109.is_Subset) {
          return false;
        } else if (_source109.is_ProperSubset) {
          return false;
        } else if (_source109.is_SetDisjoint) {
          return false;
        } else if (_source109.is_MapMerge) {
          return false;
        } else if (_source109.is_MapSubtraction) {
          return false;
        } else if (_source109.is_MultisetMerge) {
          return false;
        } else if (_source109.is_MultisetSubtraction) {
          return false;
        } else if (_source109.is_MultisetIntersection) {
          return false;
        } else if (_source109.is_Submultiset) {
          return false;
        } else if (_source109.is_ProperSubmultiset) {
          return false;
        } else if (_source109.is_MultisetDisjoint) {
          return false;
        } else if (_source109.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3349___mcc_h16 = _source109.dtor_Passthrough_a0;
          return false;
        }
      }))(_3334_op);
      DCOMP._IOwnership _3350_expectedLeftOwnership;
      _3350_expectedLeftOwnership = ((_3338_becomesLeftCallsRight) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : ((((_3342_becomesRightCallsLeft) || (_3346_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      DCOMP._IOwnership _3351_expectedRightOwnership;
      _3351_expectedRightOwnership = (((_3338_becomesLeftCallsRight) || (_3346_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (((_3342_becomesRightCallsLeft) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _3352_left;
      DCOMP._IOwnership _3353___v77;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3354_recIdentsL;
      RAST._IExpr _out207;
      DCOMP._IOwnership _out208;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out209;
      DCOMP.COMP.GenExpr(_3335_lExpr, selfIdent, env, _3350_expectedLeftOwnership, out _out207, out _out208, out _out209);
      _3352_left = _out207;
      _3353___v77 = _out208;
      _3354_recIdentsL = _out209;
      RAST._IExpr _3355_right;
      DCOMP._IOwnership _3356___v78;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3357_recIdentsR;
      RAST._IExpr _out210;
      DCOMP._IOwnership _out211;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out212;
      DCOMP.COMP.GenExpr(_3336_rExpr, selfIdent, env, _3351_expectedRightOwnership, out _out210, out _out211, out _out212);
      _3355_right = _out210;
      _3356___v78 = _out211;
      _3357_recIdentsR = _out212;
      DAST._IBinOp _source110 = _3334_op;
      if (_source110.is_Eq) {
        bool _3358___mcc_h18 = _source110.dtor_referential;
        bool _3359___mcc_h19 = _source110.dtor_nullable;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source111 = _3334_op;
            if (_source111.is_Eq) {
              bool _3360___mcc_h24 = _source111.dtor_referential;
              bool _3361___mcc_h25 = _source111.dtor_nullable;
              bool _3362_nullable = _3361___mcc_h25;
              bool _3363_referential = _3360___mcc_h24;
              {
                if (_3363_referential) {
                  if (_3362_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source111.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source111.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3364___mcc_h26 = _source111.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3365_op = _3364___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_3365_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_Div) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source112 = _3334_op;
            if (_source112.is_Eq) {
              bool _3366___mcc_h27 = _source112.dtor_referential;
              bool _3367___mcc_h28 = _source112.dtor_nullable;
              bool _3368_nullable = _3367___mcc_h28;
              bool _3369_referential = _3366___mcc_h27;
              {
                if (_3369_referential) {
                  if (_3368_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source112.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source112.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3370___mcc_h29 = _source112.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3371_op = _3370___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_3371_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_EuclidianDiv) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source113 = _3334_op;
            if (_source113.is_Eq) {
              bool _3372___mcc_h30 = _source113.dtor_referential;
              bool _3373___mcc_h31 = _source113.dtor_nullable;
              bool _3374_nullable = _3373___mcc_h31;
              bool _3375_referential = _3372___mcc_h30;
              {
                if (_3375_referential) {
                  if (_3374_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source113.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source113.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3376___mcc_h32 = _source113.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3377_op = _3376___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_3377_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_Mod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source114 = _3334_op;
            if (_source114.is_Eq) {
              bool _3378___mcc_h33 = _source114.dtor_referential;
              bool _3379___mcc_h34 = _source114.dtor_nullable;
              bool _3380_nullable = _3379___mcc_h34;
              bool _3381_referential = _3378___mcc_h33;
              {
                if (_3381_referential) {
                  if (_3380_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source114.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source114.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3382___mcc_h35 = _source114.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3383_op = _3382___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_3383_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_EuclidianMod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source115 = _3334_op;
            if (_source115.is_Eq) {
              bool _3384___mcc_h36 = _source115.dtor_referential;
              bool _3385___mcc_h37 = _source115.dtor_nullable;
              bool _3386_nullable = _3385___mcc_h37;
              bool _3387_referential = _3384___mcc_h36;
              {
                if (_3387_referential) {
                  if (_3386_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source115.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source115.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3388___mcc_h38 = _source115.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3389_op = _3388___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_3389_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_Lt) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source116 = _3334_op;
            if (_source116.is_Eq) {
              bool _3390___mcc_h39 = _source116.dtor_referential;
              bool _3391___mcc_h40 = _source116.dtor_nullable;
              bool _3392_nullable = _3391___mcc_h40;
              bool _3393_referential = _3390___mcc_h39;
              {
                if (_3393_referential) {
                  if (_3392_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source116.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source116.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3394___mcc_h41 = _source116.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3395_op = _3394___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_3395_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_LtChar) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source117 = _3334_op;
            if (_source117.is_Eq) {
              bool _3396___mcc_h42 = _source117.dtor_referential;
              bool _3397___mcc_h43 = _source117.dtor_nullable;
              bool _3398_nullable = _3397___mcc_h43;
              bool _3399_referential = _3396___mcc_h42;
              {
                if (_3399_referential) {
                  if (_3398_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source117.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source117.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3400___mcc_h44 = _source117.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3401_op = _3400___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_3401_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_Plus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source118 = _3334_op;
            if (_source118.is_Eq) {
              bool _3402___mcc_h45 = _source118.dtor_referential;
              bool _3403___mcc_h46 = _source118.dtor_nullable;
              bool _3404_nullable = _3403___mcc_h46;
              bool _3405_referential = _3402___mcc_h45;
              {
                if (_3405_referential) {
                  if (_3404_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source118.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source118.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3406___mcc_h47 = _source118.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3407_op = _3406___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_3407_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_Minus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source119 = _3334_op;
            if (_source119.is_Eq) {
              bool _3408___mcc_h48 = _source119.dtor_referential;
              bool _3409___mcc_h49 = _source119.dtor_nullable;
              bool _3410_nullable = _3409___mcc_h49;
              bool _3411_referential = _3408___mcc_h48;
              {
                if (_3411_referential) {
                  if (_3410_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source119.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source119.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3412___mcc_h50 = _source119.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3413_op = _3412___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_3413_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_Times) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source120 = _3334_op;
            if (_source120.is_Eq) {
              bool _3414___mcc_h51 = _source120.dtor_referential;
              bool _3415___mcc_h52 = _source120.dtor_nullable;
              bool _3416_nullable = _3415___mcc_h52;
              bool _3417_referential = _3414___mcc_h51;
              {
                if (_3417_referential) {
                  if (_3416_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source120.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source120.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3418___mcc_h53 = _source120.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3419_op = _3418___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_3419_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_BitwiseAnd) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source121 = _3334_op;
            if (_source121.is_Eq) {
              bool _3420___mcc_h54 = _source121.dtor_referential;
              bool _3421___mcc_h55 = _source121.dtor_nullable;
              bool _3422_nullable = _3421___mcc_h55;
              bool _3423_referential = _3420___mcc_h54;
              {
                if (_3423_referential) {
                  if (_3422_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source121.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source121.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3424___mcc_h56 = _source121.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3425_op = _3424___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_3425_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_BitwiseOr) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source122 = _3334_op;
            if (_source122.is_Eq) {
              bool _3426___mcc_h57 = _source122.dtor_referential;
              bool _3427___mcc_h58 = _source122.dtor_nullable;
              bool _3428_nullable = _3427___mcc_h58;
              bool _3429_referential = _3426___mcc_h57;
              {
                if (_3429_referential) {
                  if (_3428_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source122.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source122.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3430___mcc_h59 = _source122.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3431_op = _3430___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_3431_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_BitwiseXor) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source123 = _3334_op;
            if (_source123.is_Eq) {
              bool _3432___mcc_h60 = _source123.dtor_referential;
              bool _3433___mcc_h61 = _source123.dtor_nullable;
              bool _3434_nullable = _3433___mcc_h61;
              bool _3435_referential = _3432___mcc_h60;
              {
                if (_3435_referential) {
                  if (_3434_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source123.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source123.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3436___mcc_h62 = _source123.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3437_op = _3436___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_3437_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_BitwiseShiftRight) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source124 = _3334_op;
            if (_source124.is_Eq) {
              bool _3438___mcc_h63 = _source124.dtor_referential;
              bool _3439___mcc_h64 = _source124.dtor_nullable;
              bool _3440_nullable = _3439___mcc_h64;
              bool _3441_referential = _3438___mcc_h63;
              {
                if (_3441_referential) {
                  if (_3440_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source124.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source124.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3442___mcc_h65 = _source124.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3443_op = _3442___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_3443_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_BitwiseShiftLeft) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source125 = _3334_op;
            if (_source125.is_Eq) {
              bool _3444___mcc_h66 = _source125.dtor_referential;
              bool _3445___mcc_h67 = _source125.dtor_nullable;
              bool _3446_nullable = _3445___mcc_h67;
              bool _3447_referential = _3444___mcc_h66;
              {
                if (_3447_referential) {
                  if (_3446_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source125.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source125.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3448___mcc_h68 = _source125.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3449_op = _3448___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_3449_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_And) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source126 = _3334_op;
            if (_source126.is_Eq) {
              bool _3450___mcc_h69 = _source126.dtor_referential;
              bool _3451___mcc_h70 = _source126.dtor_nullable;
              bool _3452_nullable = _3451___mcc_h70;
              bool _3453_referential = _3450___mcc_h69;
              {
                if (_3453_referential) {
                  if (_3452_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source126.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source126.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3454___mcc_h71 = _source126.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3455_op = _3454___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_3455_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_Or) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source127 = _3334_op;
            if (_source127.is_Eq) {
              bool _3456___mcc_h72 = _source127.dtor_referential;
              bool _3457___mcc_h73 = _source127.dtor_nullable;
              bool _3458_nullable = _3457___mcc_h73;
              bool _3459_referential = _3456___mcc_h72;
              {
                if (_3459_referential) {
                  if (_3458_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source127.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source127.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3460___mcc_h74 = _source127.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3461_op = _3460___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_3461_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      } else if (_source110.is_In) {
        {
          r = ((_3355_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_3352_left);
        }
      } else if (_source110.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3352_left, _3355_right, _3337_format);
      } else if (_source110.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3352_left, _3355_right, _3337_format);
      } else if (_source110.is_SetMerge) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3355_right);
        }
      } else if (_source110.is_SetSubtraction) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3355_right);
        }
      } else if (_source110.is_SetIntersection) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3355_right);
        }
      } else if (_source110.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3352_left, _3355_right, _3337_format);
        }
      } else if (_source110.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3352_left, _3355_right, _3337_format);
        }
      } else if (_source110.is_SetDisjoint) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3355_right);
        }
      } else if (_source110.is_MapMerge) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3355_right);
        }
      } else if (_source110.is_MapSubtraction) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3355_right);
        }
      } else if (_source110.is_MultisetMerge) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3355_right);
        }
      } else if (_source110.is_MultisetSubtraction) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3355_right);
        }
      } else if (_source110.is_MultisetIntersection) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3355_right);
        }
      } else if (_source110.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3352_left, _3355_right, _3337_format);
        }
      } else if (_source110.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3352_left, _3355_right, _3337_format);
        }
      } else if (_source110.is_MultisetDisjoint) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3355_right);
        }
      } else if (_source110.is_Concat) {
        {
          r = ((_3352_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_3355_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _3462___mcc_h22 = _source110.dtor_Passthrough_a0;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3334_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3334_op), _3352_left, _3355_right, _3337_format);
          } else {
            DAST._IBinOp _source128 = _3334_op;
            if (_source128.is_Eq) {
              bool _3463___mcc_h75 = _source128.dtor_referential;
              bool _3464___mcc_h76 = _source128.dtor_nullable;
              bool _3465_nullable = _3464___mcc_h76;
              bool _3466_referential = _3463___mcc_h75;
              {
                if (_3466_referential) {
                  if (_3465_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3352_left, _3355_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source128.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else if (_source128.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3352_left, _3355_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3467___mcc_h77 = _source128.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _3468_op = _3467___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_3468_op, _3352_left, _3355_right, _3337_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out213;
      DCOMP._IOwnership _out214;
      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out213, out _out214);
      r = _out213;
      resultingOwnership = _out214;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3354_recIdentsL, _3357_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs51 = e;
      DAST._IExpression _3469_expr = _let_tmp_rhs51.dtor_value;
      DAST._IType _3470_fromTpe = _let_tmp_rhs51.dtor_from;
      DAST._IType _3471_toTpe = _let_tmp_rhs51.dtor_typ;
      if (object.Equals(_3470_fromTpe, _3471_toTpe)) {
        RAST._IExpr _3472_recursiveGen;
        DCOMP._IOwnership _3473_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3474_recIdents;
        RAST._IExpr _out215;
        DCOMP._IOwnership _out216;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out217;
        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out215, out _out216, out _out217);
        _3472_recursiveGen = _out215;
        _3473_recOwned = _out216;
        _3474_recIdents = _out217;
        r = _3472_recursiveGen;
        RAST._IExpr _out218;
        DCOMP._IOwnership _out219;
        DCOMP.COMP.FromOwnership(r, _3473_recOwned, expectedOwnership, out _out218, out _out219);
        r = _out218;
        resultingOwnership = _out219;
        readIdents = _3474_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source129 = _System.Tuple2<DAST._IType, DAST._IType>.create(_3470_fromTpe, _3471_toTpe);
        DAST._IType _3475___mcc_h0 = _source129.dtor__0;
        DAST._IType _3476___mcc_h1 = _source129.dtor__1;
        DAST._IType _source130 = _3475___mcc_h0;
        if (_source130.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3477___mcc_h4 = _source130.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _3478___mcc_h5 = _source130.dtor_typeArgs;
          DAST._IResolvedType _3479___mcc_h6 = _source130.dtor_resolved;
          DAST._IResolvedType _source131 = _3479___mcc_h6;
          if (_source131.is_AllocatedDatatype) {
            DAST._IDatatypeType _3480___mcc_h16 = _source131.dtor_datatypeType;
            DAST._IType _source132 = _3476___mcc_h1;
            if (_source132.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3481___mcc_h20 = _source132.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3482___mcc_h21 = _source132.dtor_typeArgs;
              DAST._IResolvedType _3483___mcc_h22 = _source132.dtor_resolved;
              DAST._IResolvedType _source133 = _3483___mcc_h22;
              if (_source133.is_AllocatedDatatype) {
                DAST._IDatatypeType _3484___mcc_h26 = _source133.dtor_datatypeType;
                {
                  RAST._IType _3485_fromTpeGen;
                  RAST._IType _out220;
                  _out220 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3485_fromTpeGen = _out220;
                  RAST._IType _3486_toTpeGen;
                  RAST._IType _out221;
                  _out221 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3486_toTpeGen = _out221;
                  RAST._IExpr _3487_recursiveGen;
                  DCOMP._IOwnership _3488_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3489_recIdents;
                  RAST._IExpr _out222;
                  DCOMP._IOwnership _out223;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out224;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out222, out _out223, out _out224);
                  _3487_recursiveGen = _out222;
                  _3488_recOwned = _out223;
                  _3489_recIdents = _out224;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3487_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3485_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3486_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out225;
                  DCOMP._IOwnership _out226;
                  DCOMP.COMP.FromOwnership(r, _3488_recOwned, expectedOwnership, out _out225, out _out226);
                  r = _out225;
                  resultingOwnership = _out226;
                  readIdents = _3489_recIdents;
                }
              } else if (_source133.is_Datatype) {
                DAST._IDatatypeType _3490___mcc_h28 = _source133.dtor_datatypeType;
                {
                  RAST._IType _3491_fromTpeGen;
                  RAST._IType _out227;
                  _out227 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3491_fromTpeGen = _out227;
                  RAST._IType _3492_toTpeGen;
                  RAST._IType _out228;
                  _out228 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3492_toTpeGen = _out228;
                  RAST._IExpr _3493_recursiveGen;
                  DCOMP._IOwnership _3494_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3495_recIdents;
                  RAST._IExpr _out229;
                  DCOMP._IOwnership _out230;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out231;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out229, out _out230, out _out231);
                  _3493_recursiveGen = _out229;
                  _3494_recOwned = _out230;
                  _3495_recIdents = _out231;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3493_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3491_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3492_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out232;
                  DCOMP._IOwnership _out233;
                  DCOMP.COMP.FromOwnership(r, _3494_recOwned, expectedOwnership, out _out232, out _out233);
                  r = _out232;
                  resultingOwnership = _out233;
                  readIdents = _3495_recIdents;
                }
              } else if (_source133.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3496___mcc_h30 = _source133.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3497___mcc_h31 = _source133.dtor_attributes;
                {
                  RAST._IType _3498_fromTpeGen;
                  RAST._IType _out234;
                  _out234 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3498_fromTpeGen = _out234;
                  RAST._IType _3499_toTpeGen;
                  RAST._IType _out235;
                  _out235 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3499_toTpeGen = _out235;
                  RAST._IExpr _3500_recursiveGen;
                  DCOMP._IOwnership _3501_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3502_recIdents;
                  RAST._IExpr _out236;
                  DCOMP._IOwnership _out237;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out238;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out236, out _out237, out _out238);
                  _3500_recursiveGen = _out236;
                  _3501_recOwned = _out237;
                  _3502_recIdents = _out238;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3500_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3498_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3499_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out239;
                  DCOMP._IOwnership _out240;
                  DCOMP.COMP.FromOwnership(r, _3501_recOwned, expectedOwnership, out _out239, out _out240);
                  r = _out239;
                  resultingOwnership = _out240;
                  readIdents = _3502_recIdents;
                }
              } else {
                DAST._IType _3503___mcc_h34 = _source133.dtor_baseType;
                DAST._INewtypeRange _3504___mcc_h35 = _source133.dtor_range;
                bool _3505___mcc_h36 = _source133.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3506___mcc_h37 = _source133.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3507_attributes = _3506___mcc_h37;
                bool _3508_erase = _3505___mcc_h36;
                DAST._INewtypeRange _3509_range = _3504___mcc_h35;
                DAST._IType _3510_b = _3503___mcc_h34;
                {
                  Std.Wrappers._IOption<RAST._IType> _3511_nativeToType;
                  _3511_nativeToType = DCOMP.COMP.NewtypeToRustType(_3510_b, _3509_range);
                  if (object.Equals(_3470_fromTpe, _3510_b)) {
                    RAST._IExpr _3512_recursiveGen;
                    DCOMP._IOwnership _3513_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3514_recIdents;
                    RAST._IExpr _out241;
                    DCOMP._IOwnership _out242;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out243;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out241, out _out242, out _out243);
                    _3512_recursiveGen = _out241;
                    _3513_recOwned = _out242;
                    _3514_recIdents = _out243;
                    readIdents = _3514_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source134 = _3511_nativeToType;
                    if (_source134.is_None) {
                      if (_3508_erase) {
                        r = _3512_recursiveGen;
                      } else {
                        RAST._IType _3515_rhsType;
                        RAST._IType _out244;
                        _out244 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _3515_rhsType = _out244;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3515_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3512_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out245;
                      DCOMP._IOwnership _out246;
                      DCOMP.COMP.FromOwnership(r, _3513_recOwned, expectedOwnership, out _out245, out _out246);
                      r = _out245;
                      resultingOwnership = _out246;
                    } else {
                      RAST._IType _3516___mcc_h1348 = _source134.dtor_value;
                      RAST._IType _3517_v = _3516___mcc_h1348;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3512_recursiveGen, RAST.Expr.create_ExprFromType(_3517_v)));
                      RAST._IExpr _out247;
                      DCOMP._IOwnership _out248;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out247, out _out248);
                      r = _out247;
                      resultingOwnership = _out248;
                    }
                  } else {
                    if ((_3511_nativeToType).is_Some) {
                      DAST._IType _source135 = _3470_fromTpe;
                      if (_source135.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3518___mcc_h1349 = _source135.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3519___mcc_h1350 = _source135.dtor_typeArgs;
                        DAST._IResolvedType _3520___mcc_h1351 = _source135.dtor_resolved;
                        DAST._IResolvedType _source136 = _3520___mcc_h1351;
                        if (_source136.is_AllocatedDatatype) {
                          DAST._IDatatypeType _3521___mcc_h1355 = _source136.dtor_datatypeType;
                        } else if (_source136.is_Datatype) {
                          DAST._IDatatypeType _3522___mcc_h1357 = _source136.dtor_datatypeType;
                        } else if (_source136.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3523___mcc_h1359 = _source136.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3524___mcc_h1360 = _source136.dtor_attributes;
                        } else {
                          DAST._IType _3525___mcc_h1363 = _source136.dtor_baseType;
                          DAST._INewtypeRange _3526___mcc_h1364 = _source136.dtor_range;
                          bool _3527___mcc_h1365 = _source136.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3528___mcc_h1366 = _source136.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3529_attributes0 = _3528___mcc_h1366;
                          bool _3530_erase0 = _3527___mcc_h1365;
                          DAST._INewtypeRange _3531_range0 = _3526___mcc_h1364;
                          DAST._IType _3532_b0 = _3525___mcc_h1363;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3533_nativeFromType;
                            _3533_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3532_b0, _3531_range0);
                            if ((_3533_nativeFromType).is_Some) {
                              RAST._IExpr _3534_recursiveGen;
                              DCOMP._IOwnership _3535_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3536_recIdents;
                              RAST._IExpr _out249;
                              DCOMP._IOwnership _out250;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out251;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out249, out _out250, out _out251);
                              _3534_recursiveGen = _out249;
                              _3535_recOwned = _out250;
                              _3536_recIdents = _out251;
                              RAST._IExpr _out252;
                              DCOMP._IOwnership _out253;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3534_recursiveGen, (_3511_nativeToType).dtor_value), _3535_recOwned, expectedOwnership, out _out252, out _out253);
                              r = _out252;
                              resultingOwnership = _out253;
                              readIdents = _3536_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source135.is_Nullable) {
                        DAST._IType _3537___mcc_h1371 = _source135.dtor_Nullable_a0;
                      } else if (_source135.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3538___mcc_h1373 = _source135.dtor_Tuple_a0;
                      } else if (_source135.is_Array) {
                        DAST._IType _3539___mcc_h1375 = _source135.dtor_element;
                        BigInteger _3540___mcc_h1376 = _source135.dtor_dims;
                      } else if (_source135.is_Seq) {
                        DAST._IType _3541___mcc_h1379 = _source135.dtor_element;
                      } else if (_source135.is_Set) {
                        DAST._IType _3542___mcc_h1381 = _source135.dtor_element;
                      } else if (_source135.is_Multiset) {
                        DAST._IType _3543___mcc_h1383 = _source135.dtor_element;
                      } else if (_source135.is_Map) {
                        DAST._IType _3544___mcc_h1385 = _source135.dtor_key;
                        DAST._IType _3545___mcc_h1386 = _source135.dtor_value;
                      } else if (_source135.is_SetBuilder) {
                        DAST._IType _3546___mcc_h1389 = _source135.dtor_element;
                      } else if (_source135.is_MapBuilder) {
                        DAST._IType _3547___mcc_h1391 = _source135.dtor_key;
                        DAST._IType _3548___mcc_h1392 = _source135.dtor_value;
                      } else if (_source135.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3549___mcc_h1395 = _source135.dtor_args;
                        DAST._IType _3550___mcc_h1396 = _source135.dtor_result;
                      } else if (_source135.is_Primitive) {
                        DAST._IPrimitive _3551___mcc_h1399 = _source135.dtor_Primitive_a0;
                      } else if (_source135.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3552___mcc_h1401 = _source135.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3553___mcc_h1403 = _source135.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3554_recursiveGen;
                        DCOMP._IOwnership _3555_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3556_recIdents;
                        RAST._IExpr _out254;
                        DCOMP._IOwnership _out255;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out256;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out254, out _out255, out _out256);
                        _3554_recursiveGen = _out254;
                        _3555_recOwned = _out255;
                        _3556_recIdents = _out256;
                        RAST._IExpr _out257;
                        DCOMP._IOwnership _out258;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3554_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3511_nativeToType).dtor_value), _3555_recOwned, expectedOwnership, out _out257, out _out258);
                        r = _out257;
                        resultingOwnership = _out258;
                        readIdents = _3556_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out259;
                    DCOMP._IOwnership _out260;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out261;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _3510_b), _3510_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out259, out _out260, out _out261);
                    r = _out259;
                    resultingOwnership = _out260;
                    readIdents = _out261;
                  }
                }
              }
            } else if (_source132.is_Nullable) {
              DAST._IType _3557___mcc_h42 = _source132.dtor_Nullable_a0;
              {
                RAST._IExpr _3558_recursiveGen;
                DCOMP._IOwnership _3559_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3560_recIdents;
                RAST._IExpr _out262;
                DCOMP._IOwnership _out263;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out264;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out262, out _out263, out _out264);
                _3558_recursiveGen = _out262;
                _3559_recOwned = _out263;
                _3560_recIdents = _out264;
                r = _3558_recursiveGen;
                if (object.Equals(_3559_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out265;
                DCOMP._IOwnership _out266;
                DCOMP.COMP.FromOwnership(r, _3559_recOwned, expectedOwnership, out _out265, out _out266);
                r = _out265;
                resultingOwnership = _out266;
                readIdents = _3560_recIdents;
              }
            } else if (_source132.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3561___mcc_h44 = _source132.dtor_Tuple_a0;
              {
                RAST._IType _3562_fromTpeGen;
                RAST._IType _out267;
                _out267 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3562_fromTpeGen = _out267;
                RAST._IType _3563_toTpeGen;
                RAST._IType _out268;
                _out268 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3563_toTpeGen = _out268;
                RAST._IExpr _3564_recursiveGen;
                DCOMP._IOwnership _3565_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3566_recIdents;
                RAST._IExpr _out269;
                DCOMP._IOwnership _out270;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out271;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out269, out _out270, out _out271);
                _3564_recursiveGen = _out269;
                _3565_recOwned = _out270;
                _3566_recIdents = _out271;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3564_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3562_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3563_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out272;
                DCOMP._IOwnership _out273;
                DCOMP.COMP.FromOwnership(r, _3565_recOwned, expectedOwnership, out _out272, out _out273);
                r = _out272;
                resultingOwnership = _out273;
                readIdents = _3566_recIdents;
              }
            } else if (_source132.is_Array) {
              DAST._IType _3567___mcc_h46 = _source132.dtor_element;
              BigInteger _3568___mcc_h47 = _source132.dtor_dims;
              {
                RAST._IType _3569_fromTpeGen;
                RAST._IType _out274;
                _out274 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3569_fromTpeGen = _out274;
                RAST._IType _3570_toTpeGen;
                RAST._IType _out275;
                _out275 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3570_toTpeGen = _out275;
                RAST._IExpr _3571_recursiveGen;
                DCOMP._IOwnership _3572_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3573_recIdents;
                RAST._IExpr _out276;
                DCOMP._IOwnership _out277;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out278;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out276, out _out277, out _out278);
                _3571_recursiveGen = _out276;
                _3572_recOwned = _out277;
                _3573_recIdents = _out278;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3571_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3569_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3570_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out279;
                DCOMP._IOwnership _out280;
                DCOMP.COMP.FromOwnership(r, _3572_recOwned, expectedOwnership, out _out279, out _out280);
                r = _out279;
                resultingOwnership = _out280;
                readIdents = _3573_recIdents;
              }
            } else if (_source132.is_Seq) {
              DAST._IType _3574___mcc_h50 = _source132.dtor_element;
              {
                RAST._IType _3575_fromTpeGen;
                RAST._IType _out281;
                _out281 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3575_fromTpeGen = _out281;
                RAST._IType _3576_toTpeGen;
                RAST._IType _out282;
                _out282 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3576_toTpeGen = _out282;
                RAST._IExpr _3577_recursiveGen;
                DCOMP._IOwnership _3578_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3579_recIdents;
                RAST._IExpr _out283;
                DCOMP._IOwnership _out284;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out285;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out283, out _out284, out _out285);
                _3577_recursiveGen = _out283;
                _3578_recOwned = _out284;
                _3579_recIdents = _out285;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3577_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3575_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3576_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out286;
                DCOMP._IOwnership _out287;
                DCOMP.COMP.FromOwnership(r, _3578_recOwned, expectedOwnership, out _out286, out _out287);
                r = _out286;
                resultingOwnership = _out287;
                readIdents = _3579_recIdents;
              }
            } else if (_source132.is_Set) {
              DAST._IType _3580___mcc_h52 = _source132.dtor_element;
              {
                RAST._IType _3581_fromTpeGen;
                RAST._IType _out288;
                _out288 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3581_fromTpeGen = _out288;
                RAST._IType _3582_toTpeGen;
                RAST._IType _out289;
                _out289 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3582_toTpeGen = _out289;
                RAST._IExpr _3583_recursiveGen;
                DCOMP._IOwnership _3584_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3585_recIdents;
                RAST._IExpr _out290;
                DCOMP._IOwnership _out291;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out292;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out290, out _out291, out _out292);
                _3583_recursiveGen = _out290;
                _3584_recOwned = _out291;
                _3585_recIdents = _out292;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3583_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3581_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3582_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out293;
                DCOMP._IOwnership _out294;
                DCOMP.COMP.FromOwnership(r, _3584_recOwned, expectedOwnership, out _out293, out _out294);
                r = _out293;
                resultingOwnership = _out294;
                readIdents = _3585_recIdents;
              }
            } else if (_source132.is_Multiset) {
              DAST._IType _3586___mcc_h54 = _source132.dtor_element;
              {
                RAST._IType _3587_fromTpeGen;
                RAST._IType _out295;
                _out295 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3587_fromTpeGen = _out295;
                RAST._IType _3588_toTpeGen;
                RAST._IType _out296;
                _out296 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3588_toTpeGen = _out296;
                RAST._IExpr _3589_recursiveGen;
                DCOMP._IOwnership _3590_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3591_recIdents;
                RAST._IExpr _out297;
                DCOMP._IOwnership _out298;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out299;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out297, out _out298, out _out299);
                _3589_recursiveGen = _out297;
                _3590_recOwned = _out298;
                _3591_recIdents = _out299;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3589_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3587_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3588_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out300;
                DCOMP._IOwnership _out301;
                DCOMP.COMP.FromOwnership(r, _3590_recOwned, expectedOwnership, out _out300, out _out301);
                r = _out300;
                resultingOwnership = _out301;
                readIdents = _3591_recIdents;
              }
            } else if (_source132.is_Map) {
              DAST._IType _3592___mcc_h56 = _source132.dtor_key;
              DAST._IType _3593___mcc_h57 = _source132.dtor_value;
              {
                RAST._IType _3594_fromTpeGen;
                RAST._IType _out302;
                _out302 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3594_fromTpeGen = _out302;
                RAST._IType _3595_toTpeGen;
                RAST._IType _out303;
                _out303 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3595_toTpeGen = _out303;
                RAST._IExpr _3596_recursiveGen;
                DCOMP._IOwnership _3597_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3598_recIdents;
                RAST._IExpr _out304;
                DCOMP._IOwnership _out305;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out306;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out304, out _out305, out _out306);
                _3596_recursiveGen = _out304;
                _3597_recOwned = _out305;
                _3598_recIdents = _out306;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3596_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3594_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3595_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out307;
                DCOMP._IOwnership _out308;
                DCOMP.COMP.FromOwnership(r, _3597_recOwned, expectedOwnership, out _out307, out _out308);
                r = _out307;
                resultingOwnership = _out308;
                readIdents = _3598_recIdents;
              }
            } else if (_source132.is_SetBuilder) {
              DAST._IType _3599___mcc_h60 = _source132.dtor_element;
              {
                RAST._IType _3600_fromTpeGen;
                RAST._IType _out309;
                _out309 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3600_fromTpeGen = _out309;
                RAST._IType _3601_toTpeGen;
                RAST._IType _out310;
                _out310 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3601_toTpeGen = _out310;
                RAST._IExpr _3602_recursiveGen;
                DCOMP._IOwnership _3603_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3604_recIdents;
                RAST._IExpr _out311;
                DCOMP._IOwnership _out312;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out313;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out311, out _out312, out _out313);
                _3602_recursiveGen = _out311;
                _3603_recOwned = _out312;
                _3604_recIdents = _out313;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3602_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3600_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3601_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out314;
                DCOMP._IOwnership _out315;
                DCOMP.COMP.FromOwnership(r, _3603_recOwned, expectedOwnership, out _out314, out _out315);
                r = _out314;
                resultingOwnership = _out315;
                readIdents = _3604_recIdents;
              }
            } else if (_source132.is_MapBuilder) {
              DAST._IType _3605___mcc_h62 = _source132.dtor_key;
              DAST._IType _3606___mcc_h63 = _source132.dtor_value;
              {
                RAST._IType _3607_fromTpeGen;
                RAST._IType _out316;
                _out316 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3607_fromTpeGen = _out316;
                RAST._IType _3608_toTpeGen;
                RAST._IType _out317;
                _out317 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3608_toTpeGen = _out317;
                RAST._IExpr _3609_recursiveGen;
                DCOMP._IOwnership _3610_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3611_recIdents;
                RAST._IExpr _out318;
                DCOMP._IOwnership _out319;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out320;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out318, out _out319, out _out320);
                _3609_recursiveGen = _out318;
                _3610_recOwned = _out319;
                _3611_recIdents = _out320;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3609_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3607_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3608_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out321;
                DCOMP._IOwnership _out322;
                DCOMP.COMP.FromOwnership(r, _3610_recOwned, expectedOwnership, out _out321, out _out322);
                r = _out321;
                resultingOwnership = _out322;
                readIdents = _3611_recIdents;
              }
            } else if (_source132.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3612___mcc_h66 = _source132.dtor_args;
              DAST._IType _3613___mcc_h67 = _source132.dtor_result;
              {
                RAST._IType _3614_fromTpeGen;
                RAST._IType _out323;
                _out323 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3614_fromTpeGen = _out323;
                RAST._IType _3615_toTpeGen;
                RAST._IType _out324;
                _out324 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3615_toTpeGen = _out324;
                RAST._IExpr _3616_recursiveGen;
                DCOMP._IOwnership _3617_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3618_recIdents;
                RAST._IExpr _out325;
                DCOMP._IOwnership _out326;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out327;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out325, out _out326, out _out327);
                _3616_recursiveGen = _out325;
                _3617_recOwned = _out326;
                _3618_recIdents = _out327;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3616_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3614_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3615_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out328;
                DCOMP._IOwnership _out329;
                DCOMP.COMP.FromOwnership(r, _3617_recOwned, expectedOwnership, out _out328, out _out329);
                r = _out328;
                resultingOwnership = _out329;
                readIdents = _3618_recIdents;
              }
            } else if (_source132.is_Primitive) {
              DAST._IPrimitive _3619___mcc_h70 = _source132.dtor_Primitive_a0;
              {
                RAST._IType _3620_fromTpeGen;
                RAST._IType _out330;
                _out330 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3620_fromTpeGen = _out330;
                RAST._IType _3621_toTpeGen;
                RAST._IType _out331;
                _out331 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3621_toTpeGen = _out331;
                RAST._IExpr _3622_recursiveGen;
                DCOMP._IOwnership _3623_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3624_recIdents;
                RAST._IExpr _out332;
                DCOMP._IOwnership _out333;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out334;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out332, out _out333, out _out334);
                _3622_recursiveGen = _out332;
                _3623_recOwned = _out333;
                _3624_recIdents = _out334;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3622_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3620_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3621_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out335;
                DCOMP._IOwnership _out336;
                DCOMP.COMP.FromOwnership(r, _3623_recOwned, expectedOwnership, out _out335, out _out336);
                r = _out335;
                resultingOwnership = _out336;
                readIdents = _3624_recIdents;
              }
            } else if (_source132.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3625___mcc_h72 = _source132.dtor_Passthrough_a0;
              {
                RAST._IType _3626_fromTpeGen;
                RAST._IType _out337;
                _out337 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3626_fromTpeGen = _out337;
                RAST._IType _3627_toTpeGen;
                RAST._IType _out338;
                _out338 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3627_toTpeGen = _out338;
                RAST._IExpr _3628_recursiveGen;
                DCOMP._IOwnership _3629_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3630_recIdents;
                RAST._IExpr _out339;
                DCOMP._IOwnership _out340;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out341;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out339, out _out340, out _out341);
                _3628_recursiveGen = _out339;
                _3629_recOwned = _out340;
                _3630_recIdents = _out341;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3628_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3626_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3627_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out342;
                DCOMP._IOwnership _out343;
                DCOMP.COMP.FromOwnership(r, _3629_recOwned, expectedOwnership, out _out342, out _out343);
                r = _out342;
                resultingOwnership = _out343;
                readIdents = _3630_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3631___mcc_h74 = _source132.dtor_TypeArg_a0;
              {
                RAST._IType _3632_fromTpeGen;
                RAST._IType _out344;
                _out344 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3632_fromTpeGen = _out344;
                RAST._IType _3633_toTpeGen;
                RAST._IType _out345;
                _out345 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3633_toTpeGen = _out345;
                RAST._IExpr _3634_recursiveGen;
                DCOMP._IOwnership _3635_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3636_recIdents;
                RAST._IExpr _out346;
                DCOMP._IOwnership _out347;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out348;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out346, out _out347, out _out348);
                _3634_recursiveGen = _out346;
                _3635_recOwned = _out347;
                _3636_recIdents = _out348;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3634_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3632_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3633_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out349;
                DCOMP._IOwnership _out350;
                DCOMP.COMP.FromOwnership(r, _3635_recOwned, expectedOwnership, out _out349, out _out350);
                r = _out349;
                resultingOwnership = _out350;
                readIdents = _3636_recIdents;
              }
            }
          } else if (_source131.is_Datatype) {
            DAST._IDatatypeType _3637___mcc_h76 = _source131.dtor_datatypeType;
            DAST._IType _source137 = _3476___mcc_h1;
            if (_source137.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3638___mcc_h80 = _source137.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3639___mcc_h81 = _source137.dtor_typeArgs;
              DAST._IResolvedType _3640___mcc_h82 = _source137.dtor_resolved;
              DAST._IResolvedType _source138 = _3640___mcc_h82;
              if (_source138.is_AllocatedDatatype) {
                DAST._IDatatypeType _3641___mcc_h86 = _source138.dtor_datatypeType;
                {
                  RAST._IType _3642_fromTpeGen;
                  RAST._IType _out351;
                  _out351 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3642_fromTpeGen = _out351;
                  RAST._IType _3643_toTpeGen;
                  RAST._IType _out352;
                  _out352 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3643_toTpeGen = _out352;
                  RAST._IExpr _3644_recursiveGen;
                  DCOMP._IOwnership _3645_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3646_recIdents;
                  RAST._IExpr _out353;
                  DCOMP._IOwnership _out354;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out355;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out353, out _out354, out _out355);
                  _3644_recursiveGen = _out353;
                  _3645_recOwned = _out354;
                  _3646_recIdents = _out355;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3644_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3642_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3643_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out356;
                  DCOMP._IOwnership _out357;
                  DCOMP.COMP.FromOwnership(r, _3645_recOwned, expectedOwnership, out _out356, out _out357);
                  r = _out356;
                  resultingOwnership = _out357;
                  readIdents = _3646_recIdents;
                }
              } else if (_source138.is_Datatype) {
                DAST._IDatatypeType _3647___mcc_h88 = _source138.dtor_datatypeType;
                {
                  RAST._IType _3648_fromTpeGen;
                  RAST._IType _out358;
                  _out358 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3648_fromTpeGen = _out358;
                  RAST._IType _3649_toTpeGen;
                  RAST._IType _out359;
                  _out359 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3649_toTpeGen = _out359;
                  RAST._IExpr _3650_recursiveGen;
                  DCOMP._IOwnership _3651_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3652_recIdents;
                  RAST._IExpr _out360;
                  DCOMP._IOwnership _out361;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out362;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out360, out _out361, out _out362);
                  _3650_recursiveGen = _out360;
                  _3651_recOwned = _out361;
                  _3652_recIdents = _out362;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3650_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3648_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3649_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out363;
                  DCOMP._IOwnership _out364;
                  DCOMP.COMP.FromOwnership(r, _3651_recOwned, expectedOwnership, out _out363, out _out364);
                  r = _out363;
                  resultingOwnership = _out364;
                  readIdents = _3652_recIdents;
                }
              } else if (_source138.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3653___mcc_h90 = _source138.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3654___mcc_h91 = _source138.dtor_attributes;
                {
                  RAST._IType _3655_fromTpeGen;
                  RAST._IType _out365;
                  _out365 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3655_fromTpeGen = _out365;
                  RAST._IType _3656_toTpeGen;
                  RAST._IType _out366;
                  _out366 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3656_toTpeGen = _out366;
                  RAST._IExpr _3657_recursiveGen;
                  DCOMP._IOwnership _3658_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3659_recIdents;
                  RAST._IExpr _out367;
                  DCOMP._IOwnership _out368;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out369;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out367, out _out368, out _out369);
                  _3657_recursiveGen = _out367;
                  _3658_recOwned = _out368;
                  _3659_recIdents = _out369;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3657_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3655_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3656_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out370;
                  DCOMP._IOwnership _out371;
                  DCOMP.COMP.FromOwnership(r, _3658_recOwned, expectedOwnership, out _out370, out _out371);
                  r = _out370;
                  resultingOwnership = _out371;
                  readIdents = _3659_recIdents;
                }
              } else {
                DAST._IType _3660___mcc_h94 = _source138.dtor_baseType;
                DAST._INewtypeRange _3661___mcc_h95 = _source138.dtor_range;
                bool _3662___mcc_h96 = _source138.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3663___mcc_h97 = _source138.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3664_attributes = _3663___mcc_h97;
                bool _3665_erase = _3662___mcc_h96;
                DAST._INewtypeRange _3666_range = _3661___mcc_h95;
                DAST._IType _3667_b = _3660___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _3668_nativeToType;
                  _3668_nativeToType = DCOMP.COMP.NewtypeToRustType(_3667_b, _3666_range);
                  if (object.Equals(_3470_fromTpe, _3667_b)) {
                    RAST._IExpr _3669_recursiveGen;
                    DCOMP._IOwnership _3670_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3671_recIdents;
                    RAST._IExpr _out372;
                    DCOMP._IOwnership _out373;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out374;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out372, out _out373, out _out374);
                    _3669_recursiveGen = _out372;
                    _3670_recOwned = _out373;
                    _3671_recIdents = _out374;
                    readIdents = _3671_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source139 = _3668_nativeToType;
                    if (_source139.is_None) {
                      if (_3665_erase) {
                        r = _3669_recursiveGen;
                      } else {
                        RAST._IType _3672_rhsType;
                        RAST._IType _out375;
                        _out375 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _3672_rhsType = _out375;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3672_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3669_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out376;
                      DCOMP._IOwnership _out377;
                      DCOMP.COMP.FromOwnership(r, _3670_recOwned, expectedOwnership, out _out376, out _out377);
                      r = _out376;
                      resultingOwnership = _out377;
                    } else {
                      RAST._IType _3673___mcc_h1405 = _source139.dtor_value;
                      RAST._IType _3674_v = _3673___mcc_h1405;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3669_recursiveGen, RAST.Expr.create_ExprFromType(_3674_v)));
                      RAST._IExpr _out378;
                      DCOMP._IOwnership _out379;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out378, out _out379);
                      r = _out378;
                      resultingOwnership = _out379;
                    }
                  } else {
                    if ((_3668_nativeToType).is_Some) {
                      DAST._IType _source140 = _3470_fromTpe;
                      if (_source140.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3675___mcc_h1406 = _source140.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3676___mcc_h1407 = _source140.dtor_typeArgs;
                        DAST._IResolvedType _3677___mcc_h1408 = _source140.dtor_resolved;
                        DAST._IResolvedType _source141 = _3677___mcc_h1408;
                        if (_source141.is_AllocatedDatatype) {
                          DAST._IDatatypeType _3678___mcc_h1412 = _source141.dtor_datatypeType;
                        } else if (_source141.is_Datatype) {
                          DAST._IDatatypeType _3679___mcc_h1414 = _source141.dtor_datatypeType;
                        } else if (_source141.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3680___mcc_h1416 = _source141.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3681___mcc_h1417 = _source141.dtor_attributes;
                        } else {
                          DAST._IType _3682___mcc_h1420 = _source141.dtor_baseType;
                          DAST._INewtypeRange _3683___mcc_h1421 = _source141.dtor_range;
                          bool _3684___mcc_h1422 = _source141.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3685___mcc_h1423 = _source141.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3686_attributes0 = _3685___mcc_h1423;
                          bool _3687_erase0 = _3684___mcc_h1422;
                          DAST._INewtypeRange _3688_range0 = _3683___mcc_h1421;
                          DAST._IType _3689_b0 = _3682___mcc_h1420;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3690_nativeFromType;
                            _3690_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3689_b0, _3688_range0);
                            if ((_3690_nativeFromType).is_Some) {
                              RAST._IExpr _3691_recursiveGen;
                              DCOMP._IOwnership _3692_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3693_recIdents;
                              RAST._IExpr _out380;
                              DCOMP._IOwnership _out381;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out382;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out380, out _out381, out _out382);
                              _3691_recursiveGen = _out380;
                              _3692_recOwned = _out381;
                              _3693_recIdents = _out382;
                              RAST._IExpr _out383;
                              DCOMP._IOwnership _out384;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3691_recursiveGen, (_3668_nativeToType).dtor_value), _3692_recOwned, expectedOwnership, out _out383, out _out384);
                              r = _out383;
                              resultingOwnership = _out384;
                              readIdents = _3693_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source140.is_Nullable) {
                        DAST._IType _3694___mcc_h1428 = _source140.dtor_Nullable_a0;
                      } else if (_source140.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3695___mcc_h1430 = _source140.dtor_Tuple_a0;
                      } else if (_source140.is_Array) {
                        DAST._IType _3696___mcc_h1432 = _source140.dtor_element;
                        BigInteger _3697___mcc_h1433 = _source140.dtor_dims;
                      } else if (_source140.is_Seq) {
                        DAST._IType _3698___mcc_h1436 = _source140.dtor_element;
                      } else if (_source140.is_Set) {
                        DAST._IType _3699___mcc_h1438 = _source140.dtor_element;
                      } else if (_source140.is_Multiset) {
                        DAST._IType _3700___mcc_h1440 = _source140.dtor_element;
                      } else if (_source140.is_Map) {
                        DAST._IType _3701___mcc_h1442 = _source140.dtor_key;
                        DAST._IType _3702___mcc_h1443 = _source140.dtor_value;
                      } else if (_source140.is_SetBuilder) {
                        DAST._IType _3703___mcc_h1446 = _source140.dtor_element;
                      } else if (_source140.is_MapBuilder) {
                        DAST._IType _3704___mcc_h1448 = _source140.dtor_key;
                        DAST._IType _3705___mcc_h1449 = _source140.dtor_value;
                      } else if (_source140.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3706___mcc_h1452 = _source140.dtor_args;
                        DAST._IType _3707___mcc_h1453 = _source140.dtor_result;
                      } else if (_source140.is_Primitive) {
                        DAST._IPrimitive _3708___mcc_h1456 = _source140.dtor_Primitive_a0;
                      } else if (_source140.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3709___mcc_h1458 = _source140.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3710___mcc_h1460 = _source140.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3711_recursiveGen;
                        DCOMP._IOwnership _3712_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3713_recIdents;
                        RAST._IExpr _out385;
                        DCOMP._IOwnership _out386;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out387;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out385, out _out386, out _out387);
                        _3711_recursiveGen = _out385;
                        _3712_recOwned = _out386;
                        _3713_recIdents = _out387;
                        RAST._IExpr _out388;
                        DCOMP._IOwnership _out389;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3711_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3668_nativeToType).dtor_value), _3712_recOwned, expectedOwnership, out _out388, out _out389);
                        r = _out388;
                        resultingOwnership = _out389;
                        readIdents = _3713_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out390;
                    DCOMP._IOwnership _out391;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out392;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _3667_b), _3667_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out390, out _out391, out _out392);
                    r = _out390;
                    resultingOwnership = _out391;
                    readIdents = _out392;
                  }
                }
              }
            } else if (_source137.is_Nullable) {
              DAST._IType _3714___mcc_h102 = _source137.dtor_Nullable_a0;
              {
                RAST._IExpr _3715_recursiveGen;
                DCOMP._IOwnership _3716_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3717_recIdents;
                RAST._IExpr _out393;
                DCOMP._IOwnership _out394;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out395;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out393, out _out394, out _out395);
                _3715_recursiveGen = _out393;
                _3716_recOwned = _out394;
                _3717_recIdents = _out395;
                r = _3715_recursiveGen;
                if (object.Equals(_3716_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out396;
                DCOMP._IOwnership _out397;
                DCOMP.COMP.FromOwnership(r, _3716_recOwned, expectedOwnership, out _out396, out _out397);
                r = _out396;
                resultingOwnership = _out397;
                readIdents = _3717_recIdents;
              }
            } else if (_source137.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3718___mcc_h104 = _source137.dtor_Tuple_a0;
              {
                RAST._IType _3719_fromTpeGen;
                RAST._IType _out398;
                _out398 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3719_fromTpeGen = _out398;
                RAST._IType _3720_toTpeGen;
                RAST._IType _out399;
                _out399 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3720_toTpeGen = _out399;
                RAST._IExpr _3721_recursiveGen;
                DCOMP._IOwnership _3722_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3723_recIdents;
                RAST._IExpr _out400;
                DCOMP._IOwnership _out401;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out402;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out400, out _out401, out _out402);
                _3721_recursiveGen = _out400;
                _3722_recOwned = _out401;
                _3723_recIdents = _out402;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3721_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3719_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3720_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out403;
                DCOMP._IOwnership _out404;
                DCOMP.COMP.FromOwnership(r, _3722_recOwned, expectedOwnership, out _out403, out _out404);
                r = _out403;
                resultingOwnership = _out404;
                readIdents = _3723_recIdents;
              }
            } else if (_source137.is_Array) {
              DAST._IType _3724___mcc_h106 = _source137.dtor_element;
              BigInteger _3725___mcc_h107 = _source137.dtor_dims;
              {
                RAST._IType _3726_fromTpeGen;
                RAST._IType _out405;
                _out405 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3726_fromTpeGen = _out405;
                RAST._IType _3727_toTpeGen;
                RAST._IType _out406;
                _out406 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3727_toTpeGen = _out406;
                RAST._IExpr _3728_recursiveGen;
                DCOMP._IOwnership _3729_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3730_recIdents;
                RAST._IExpr _out407;
                DCOMP._IOwnership _out408;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out409;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out407, out _out408, out _out409);
                _3728_recursiveGen = _out407;
                _3729_recOwned = _out408;
                _3730_recIdents = _out409;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3728_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3726_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3727_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out410;
                DCOMP._IOwnership _out411;
                DCOMP.COMP.FromOwnership(r, _3729_recOwned, expectedOwnership, out _out410, out _out411);
                r = _out410;
                resultingOwnership = _out411;
                readIdents = _3730_recIdents;
              }
            } else if (_source137.is_Seq) {
              DAST._IType _3731___mcc_h110 = _source137.dtor_element;
              {
                RAST._IType _3732_fromTpeGen;
                RAST._IType _out412;
                _out412 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3732_fromTpeGen = _out412;
                RAST._IType _3733_toTpeGen;
                RAST._IType _out413;
                _out413 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3733_toTpeGen = _out413;
                RAST._IExpr _3734_recursiveGen;
                DCOMP._IOwnership _3735_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3736_recIdents;
                RAST._IExpr _out414;
                DCOMP._IOwnership _out415;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out416;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out414, out _out415, out _out416);
                _3734_recursiveGen = _out414;
                _3735_recOwned = _out415;
                _3736_recIdents = _out416;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3734_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3732_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3733_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out417;
                DCOMP._IOwnership _out418;
                DCOMP.COMP.FromOwnership(r, _3735_recOwned, expectedOwnership, out _out417, out _out418);
                r = _out417;
                resultingOwnership = _out418;
                readIdents = _3736_recIdents;
              }
            } else if (_source137.is_Set) {
              DAST._IType _3737___mcc_h112 = _source137.dtor_element;
              {
                RAST._IType _3738_fromTpeGen;
                RAST._IType _out419;
                _out419 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3738_fromTpeGen = _out419;
                RAST._IType _3739_toTpeGen;
                RAST._IType _out420;
                _out420 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3739_toTpeGen = _out420;
                RAST._IExpr _3740_recursiveGen;
                DCOMP._IOwnership _3741_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3742_recIdents;
                RAST._IExpr _out421;
                DCOMP._IOwnership _out422;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out423;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out421, out _out422, out _out423);
                _3740_recursiveGen = _out421;
                _3741_recOwned = _out422;
                _3742_recIdents = _out423;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3740_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3738_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3739_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out424;
                DCOMP._IOwnership _out425;
                DCOMP.COMP.FromOwnership(r, _3741_recOwned, expectedOwnership, out _out424, out _out425);
                r = _out424;
                resultingOwnership = _out425;
                readIdents = _3742_recIdents;
              }
            } else if (_source137.is_Multiset) {
              DAST._IType _3743___mcc_h114 = _source137.dtor_element;
              {
                RAST._IType _3744_fromTpeGen;
                RAST._IType _out426;
                _out426 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3744_fromTpeGen = _out426;
                RAST._IType _3745_toTpeGen;
                RAST._IType _out427;
                _out427 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3745_toTpeGen = _out427;
                RAST._IExpr _3746_recursiveGen;
                DCOMP._IOwnership _3747_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3748_recIdents;
                RAST._IExpr _out428;
                DCOMP._IOwnership _out429;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out430;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out428, out _out429, out _out430);
                _3746_recursiveGen = _out428;
                _3747_recOwned = _out429;
                _3748_recIdents = _out430;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3746_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3744_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3745_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out431;
                DCOMP._IOwnership _out432;
                DCOMP.COMP.FromOwnership(r, _3747_recOwned, expectedOwnership, out _out431, out _out432);
                r = _out431;
                resultingOwnership = _out432;
                readIdents = _3748_recIdents;
              }
            } else if (_source137.is_Map) {
              DAST._IType _3749___mcc_h116 = _source137.dtor_key;
              DAST._IType _3750___mcc_h117 = _source137.dtor_value;
              {
                RAST._IType _3751_fromTpeGen;
                RAST._IType _out433;
                _out433 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3751_fromTpeGen = _out433;
                RAST._IType _3752_toTpeGen;
                RAST._IType _out434;
                _out434 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3752_toTpeGen = _out434;
                RAST._IExpr _3753_recursiveGen;
                DCOMP._IOwnership _3754_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3755_recIdents;
                RAST._IExpr _out435;
                DCOMP._IOwnership _out436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out437;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out435, out _out436, out _out437);
                _3753_recursiveGen = _out435;
                _3754_recOwned = _out436;
                _3755_recIdents = _out437;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3753_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3751_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3752_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out438;
                DCOMP._IOwnership _out439;
                DCOMP.COMP.FromOwnership(r, _3754_recOwned, expectedOwnership, out _out438, out _out439);
                r = _out438;
                resultingOwnership = _out439;
                readIdents = _3755_recIdents;
              }
            } else if (_source137.is_SetBuilder) {
              DAST._IType _3756___mcc_h120 = _source137.dtor_element;
              {
                RAST._IType _3757_fromTpeGen;
                RAST._IType _out440;
                _out440 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3757_fromTpeGen = _out440;
                RAST._IType _3758_toTpeGen;
                RAST._IType _out441;
                _out441 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3758_toTpeGen = _out441;
                RAST._IExpr _3759_recursiveGen;
                DCOMP._IOwnership _3760_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3761_recIdents;
                RAST._IExpr _out442;
                DCOMP._IOwnership _out443;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out444;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out442, out _out443, out _out444);
                _3759_recursiveGen = _out442;
                _3760_recOwned = _out443;
                _3761_recIdents = _out444;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3759_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3757_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3758_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out445;
                DCOMP._IOwnership _out446;
                DCOMP.COMP.FromOwnership(r, _3760_recOwned, expectedOwnership, out _out445, out _out446);
                r = _out445;
                resultingOwnership = _out446;
                readIdents = _3761_recIdents;
              }
            } else if (_source137.is_MapBuilder) {
              DAST._IType _3762___mcc_h122 = _source137.dtor_key;
              DAST._IType _3763___mcc_h123 = _source137.dtor_value;
              {
                RAST._IType _3764_fromTpeGen;
                RAST._IType _out447;
                _out447 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3764_fromTpeGen = _out447;
                RAST._IType _3765_toTpeGen;
                RAST._IType _out448;
                _out448 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3765_toTpeGen = _out448;
                RAST._IExpr _3766_recursiveGen;
                DCOMP._IOwnership _3767_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3768_recIdents;
                RAST._IExpr _out449;
                DCOMP._IOwnership _out450;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out451;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out449, out _out450, out _out451);
                _3766_recursiveGen = _out449;
                _3767_recOwned = _out450;
                _3768_recIdents = _out451;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3766_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3764_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3765_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out452;
                DCOMP._IOwnership _out453;
                DCOMP.COMP.FromOwnership(r, _3767_recOwned, expectedOwnership, out _out452, out _out453);
                r = _out452;
                resultingOwnership = _out453;
                readIdents = _3768_recIdents;
              }
            } else if (_source137.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3769___mcc_h126 = _source137.dtor_args;
              DAST._IType _3770___mcc_h127 = _source137.dtor_result;
              {
                RAST._IType _3771_fromTpeGen;
                RAST._IType _out454;
                _out454 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3771_fromTpeGen = _out454;
                RAST._IType _3772_toTpeGen;
                RAST._IType _out455;
                _out455 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3772_toTpeGen = _out455;
                RAST._IExpr _3773_recursiveGen;
                DCOMP._IOwnership _3774_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3775_recIdents;
                RAST._IExpr _out456;
                DCOMP._IOwnership _out457;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out458;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out456, out _out457, out _out458);
                _3773_recursiveGen = _out456;
                _3774_recOwned = _out457;
                _3775_recIdents = _out458;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3773_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3771_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3772_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out459;
                DCOMP._IOwnership _out460;
                DCOMP.COMP.FromOwnership(r, _3774_recOwned, expectedOwnership, out _out459, out _out460);
                r = _out459;
                resultingOwnership = _out460;
                readIdents = _3775_recIdents;
              }
            } else if (_source137.is_Primitive) {
              DAST._IPrimitive _3776___mcc_h130 = _source137.dtor_Primitive_a0;
              {
                RAST._IType _3777_fromTpeGen;
                RAST._IType _out461;
                _out461 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3777_fromTpeGen = _out461;
                RAST._IType _3778_toTpeGen;
                RAST._IType _out462;
                _out462 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3778_toTpeGen = _out462;
                RAST._IExpr _3779_recursiveGen;
                DCOMP._IOwnership _3780_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3781_recIdents;
                RAST._IExpr _out463;
                DCOMP._IOwnership _out464;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out465;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out463, out _out464, out _out465);
                _3779_recursiveGen = _out463;
                _3780_recOwned = _out464;
                _3781_recIdents = _out465;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3779_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3777_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3778_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out466;
                DCOMP._IOwnership _out467;
                DCOMP.COMP.FromOwnership(r, _3780_recOwned, expectedOwnership, out _out466, out _out467);
                r = _out466;
                resultingOwnership = _out467;
                readIdents = _3781_recIdents;
              }
            } else if (_source137.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3782___mcc_h132 = _source137.dtor_Passthrough_a0;
              {
                RAST._IType _3783_fromTpeGen;
                RAST._IType _out468;
                _out468 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3783_fromTpeGen = _out468;
                RAST._IType _3784_toTpeGen;
                RAST._IType _out469;
                _out469 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3784_toTpeGen = _out469;
                RAST._IExpr _3785_recursiveGen;
                DCOMP._IOwnership _3786_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3787_recIdents;
                RAST._IExpr _out470;
                DCOMP._IOwnership _out471;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out472;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out470, out _out471, out _out472);
                _3785_recursiveGen = _out470;
                _3786_recOwned = _out471;
                _3787_recIdents = _out472;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3785_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3783_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3784_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out473;
                DCOMP._IOwnership _out474;
                DCOMP.COMP.FromOwnership(r, _3786_recOwned, expectedOwnership, out _out473, out _out474);
                r = _out473;
                resultingOwnership = _out474;
                readIdents = _3787_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3788___mcc_h134 = _source137.dtor_TypeArg_a0;
              {
                RAST._IType _3789_fromTpeGen;
                RAST._IType _out475;
                _out475 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3789_fromTpeGen = _out475;
                RAST._IType _3790_toTpeGen;
                RAST._IType _out476;
                _out476 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3790_toTpeGen = _out476;
                RAST._IExpr _3791_recursiveGen;
                DCOMP._IOwnership _3792_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3793_recIdents;
                RAST._IExpr _out477;
                DCOMP._IOwnership _out478;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out479;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out477, out _out478, out _out479);
                _3791_recursiveGen = _out477;
                _3792_recOwned = _out478;
                _3793_recIdents = _out479;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3791_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3789_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3790_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out480;
                DCOMP._IOwnership _out481;
                DCOMP.COMP.FromOwnership(r, _3792_recOwned, expectedOwnership, out _out480, out _out481);
                r = _out480;
                resultingOwnership = _out481;
                readIdents = _3793_recIdents;
              }
            }
          } else if (_source131.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3794___mcc_h136 = _source131.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _3795___mcc_h137 = _source131.dtor_attributes;
            DAST._IType _source142 = _3476___mcc_h1;
            if (_source142.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3796___mcc_h144 = _source142.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3797___mcc_h145 = _source142.dtor_typeArgs;
              DAST._IResolvedType _3798___mcc_h146 = _source142.dtor_resolved;
              DAST._IResolvedType _source143 = _3798___mcc_h146;
              if (_source143.is_AllocatedDatatype) {
                DAST._IDatatypeType _3799___mcc_h150 = _source143.dtor_datatypeType;
                {
                  RAST._IType _3800_fromTpeGen;
                  RAST._IType _out482;
                  _out482 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3800_fromTpeGen = _out482;
                  RAST._IType _3801_toTpeGen;
                  RAST._IType _out483;
                  _out483 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3801_toTpeGen = _out483;
                  RAST._IExpr _3802_recursiveGen;
                  DCOMP._IOwnership _3803_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3804_recIdents;
                  RAST._IExpr _out484;
                  DCOMP._IOwnership _out485;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out486;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out484, out _out485, out _out486);
                  _3802_recursiveGen = _out484;
                  _3803_recOwned = _out485;
                  _3804_recIdents = _out486;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3802_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3800_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3801_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out487;
                  DCOMP._IOwnership _out488;
                  DCOMP.COMP.FromOwnership(r, _3803_recOwned, expectedOwnership, out _out487, out _out488);
                  r = _out487;
                  resultingOwnership = _out488;
                  readIdents = _3804_recIdents;
                }
              } else if (_source143.is_Datatype) {
                DAST._IDatatypeType _3805___mcc_h152 = _source143.dtor_datatypeType;
                {
                  RAST._IType _3806_fromTpeGen;
                  RAST._IType _out489;
                  _out489 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3806_fromTpeGen = _out489;
                  RAST._IType _3807_toTpeGen;
                  RAST._IType _out490;
                  _out490 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3807_toTpeGen = _out490;
                  RAST._IExpr _3808_recursiveGen;
                  DCOMP._IOwnership _3809_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3810_recIdents;
                  RAST._IExpr _out491;
                  DCOMP._IOwnership _out492;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out493;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out491, out _out492, out _out493);
                  _3808_recursiveGen = _out491;
                  _3809_recOwned = _out492;
                  _3810_recIdents = _out493;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3808_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3806_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3807_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out494;
                  DCOMP._IOwnership _out495;
                  DCOMP.COMP.FromOwnership(r, _3809_recOwned, expectedOwnership, out _out494, out _out495);
                  r = _out494;
                  resultingOwnership = _out495;
                  readIdents = _3810_recIdents;
                }
              } else if (_source143.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3811___mcc_h154 = _source143.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3812___mcc_h155 = _source143.dtor_attributes;
                {
                  RAST._IType _3813_fromTpeGen;
                  RAST._IType _out496;
                  _out496 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _3813_fromTpeGen = _out496;
                  RAST._IType _3814_toTpeGen;
                  RAST._IType _out497;
                  _out497 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _3814_toTpeGen = _out497;
                  RAST._IExpr _3815_recursiveGen;
                  DCOMP._IOwnership _3816_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3817_recIdents;
                  RAST._IExpr _out498;
                  DCOMP._IOwnership _out499;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out500;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out498, out _out499, out _out500);
                  _3815_recursiveGen = _out498;
                  _3816_recOwned = _out499;
                  _3817_recIdents = _out500;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3815_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3813_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3814_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out501;
                  DCOMP._IOwnership _out502;
                  DCOMP.COMP.FromOwnership(r, _3816_recOwned, expectedOwnership, out _out501, out _out502);
                  r = _out501;
                  resultingOwnership = _out502;
                  readIdents = _3817_recIdents;
                }
              } else {
                DAST._IType _3818___mcc_h158 = _source143.dtor_baseType;
                DAST._INewtypeRange _3819___mcc_h159 = _source143.dtor_range;
                bool _3820___mcc_h160 = _source143.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3821___mcc_h161 = _source143.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3822_attributes = _3821___mcc_h161;
                bool _3823_erase = _3820___mcc_h160;
                DAST._INewtypeRange _3824_range = _3819___mcc_h159;
                DAST._IType _3825_b = _3818___mcc_h158;
                {
                  Std.Wrappers._IOption<RAST._IType> _3826_nativeToType;
                  _3826_nativeToType = DCOMP.COMP.NewtypeToRustType(_3825_b, _3824_range);
                  if (object.Equals(_3470_fromTpe, _3825_b)) {
                    RAST._IExpr _3827_recursiveGen;
                    DCOMP._IOwnership _3828_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3829_recIdents;
                    RAST._IExpr _out503;
                    DCOMP._IOwnership _out504;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out505;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out503, out _out504, out _out505);
                    _3827_recursiveGen = _out503;
                    _3828_recOwned = _out504;
                    _3829_recIdents = _out505;
                    readIdents = _3829_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source144 = _3826_nativeToType;
                    if (_source144.is_None) {
                      if (_3823_erase) {
                        r = _3827_recursiveGen;
                      } else {
                        RAST._IType _3830_rhsType;
                        RAST._IType _out506;
                        _out506 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _3830_rhsType = _out506;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3830_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3827_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out507;
                      DCOMP._IOwnership _out508;
                      DCOMP.COMP.FromOwnership(r, _3828_recOwned, expectedOwnership, out _out507, out _out508);
                      r = _out507;
                      resultingOwnership = _out508;
                    } else {
                      RAST._IType _3831___mcc_h1462 = _source144.dtor_value;
                      RAST._IType _3832_v = _3831___mcc_h1462;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3827_recursiveGen, RAST.Expr.create_ExprFromType(_3832_v)));
                      RAST._IExpr _out509;
                      DCOMP._IOwnership _out510;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out509, out _out510);
                      r = _out509;
                      resultingOwnership = _out510;
                    }
                  } else {
                    if ((_3826_nativeToType).is_Some) {
                      DAST._IType _source145 = _3470_fromTpe;
                      if (_source145.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3833___mcc_h1463 = _source145.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _3834___mcc_h1464 = _source145.dtor_typeArgs;
                        DAST._IResolvedType _3835___mcc_h1465 = _source145.dtor_resolved;
                        DAST._IResolvedType _source146 = _3835___mcc_h1465;
                        if (_source146.is_AllocatedDatatype) {
                          DAST._IDatatypeType _3836___mcc_h1469 = _source146.dtor_datatypeType;
                        } else if (_source146.is_Datatype) {
                          DAST._IDatatypeType _3837___mcc_h1471 = _source146.dtor_datatypeType;
                        } else if (_source146.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3838___mcc_h1473 = _source146.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _3839___mcc_h1474 = _source146.dtor_attributes;
                        } else {
                          DAST._IType _3840___mcc_h1477 = _source146.dtor_baseType;
                          DAST._INewtypeRange _3841___mcc_h1478 = _source146.dtor_range;
                          bool _3842___mcc_h1479 = _source146.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _3843___mcc_h1480 = _source146.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _3844_attributes0 = _3843___mcc_h1480;
                          bool _3845_erase0 = _3842___mcc_h1479;
                          DAST._INewtypeRange _3846_range0 = _3841___mcc_h1478;
                          DAST._IType _3847_b0 = _3840___mcc_h1477;
                          {
                            Std.Wrappers._IOption<RAST._IType> _3848_nativeFromType;
                            _3848_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3847_b0, _3846_range0);
                            if ((_3848_nativeFromType).is_Some) {
                              RAST._IExpr _3849_recursiveGen;
                              DCOMP._IOwnership _3850_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3851_recIdents;
                              RAST._IExpr _out511;
                              DCOMP._IOwnership _out512;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out513;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out511, out _out512, out _out513);
                              _3849_recursiveGen = _out511;
                              _3850_recOwned = _out512;
                              _3851_recIdents = _out513;
                              RAST._IExpr _out514;
                              DCOMP._IOwnership _out515;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3849_recursiveGen, (_3826_nativeToType).dtor_value), _3850_recOwned, expectedOwnership, out _out514, out _out515);
                              r = _out514;
                              resultingOwnership = _out515;
                              readIdents = _3851_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source145.is_Nullable) {
                        DAST._IType _3852___mcc_h1485 = _source145.dtor_Nullable_a0;
                      } else if (_source145.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _3853___mcc_h1487 = _source145.dtor_Tuple_a0;
                      } else if (_source145.is_Array) {
                        DAST._IType _3854___mcc_h1489 = _source145.dtor_element;
                        BigInteger _3855___mcc_h1490 = _source145.dtor_dims;
                      } else if (_source145.is_Seq) {
                        DAST._IType _3856___mcc_h1493 = _source145.dtor_element;
                      } else if (_source145.is_Set) {
                        DAST._IType _3857___mcc_h1495 = _source145.dtor_element;
                      } else if (_source145.is_Multiset) {
                        DAST._IType _3858___mcc_h1497 = _source145.dtor_element;
                      } else if (_source145.is_Map) {
                        DAST._IType _3859___mcc_h1499 = _source145.dtor_key;
                        DAST._IType _3860___mcc_h1500 = _source145.dtor_value;
                      } else if (_source145.is_SetBuilder) {
                        DAST._IType _3861___mcc_h1503 = _source145.dtor_element;
                      } else if (_source145.is_MapBuilder) {
                        DAST._IType _3862___mcc_h1505 = _source145.dtor_key;
                        DAST._IType _3863___mcc_h1506 = _source145.dtor_value;
                      } else if (_source145.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _3864___mcc_h1509 = _source145.dtor_args;
                        DAST._IType _3865___mcc_h1510 = _source145.dtor_result;
                      } else if (_source145.is_Primitive) {
                        DAST._IPrimitive _3866___mcc_h1513 = _source145.dtor_Primitive_a0;
                      } else if (_source145.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _3867___mcc_h1515 = _source145.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _3868___mcc_h1517 = _source145.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3869_recursiveGen;
                        DCOMP._IOwnership _3870_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3871_recIdents;
                        RAST._IExpr _out516;
                        DCOMP._IOwnership _out517;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out518;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out516, out _out517, out _out518);
                        _3869_recursiveGen = _out516;
                        _3870_recOwned = _out517;
                        _3871_recIdents = _out518;
                        RAST._IExpr _out519;
                        DCOMP._IOwnership _out520;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3869_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3826_nativeToType).dtor_value), _3870_recOwned, expectedOwnership, out _out519, out _out520);
                        r = _out519;
                        resultingOwnership = _out520;
                        readIdents = _3871_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out521;
                    DCOMP._IOwnership _out522;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out523;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _3825_b), _3825_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out521, out _out522, out _out523);
                    r = _out521;
                    resultingOwnership = _out522;
                    readIdents = _out523;
                  }
                }
              }
            } else if (_source142.is_Nullable) {
              DAST._IType _3872___mcc_h166 = _source142.dtor_Nullable_a0;
              {
                RAST._IExpr _3873_recursiveGen;
                DCOMP._IOwnership _3874_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3875_recIdents;
                RAST._IExpr _out524;
                DCOMP._IOwnership _out525;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out526;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out524, out _out525, out _out526);
                _3873_recursiveGen = _out524;
                _3874_recOwned = _out525;
                _3875_recIdents = _out526;
                r = _3873_recursiveGen;
                if (object.Equals(_3874_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out527;
                DCOMP._IOwnership _out528;
                DCOMP.COMP.FromOwnership(r, _3874_recOwned, expectedOwnership, out _out527, out _out528);
                r = _out527;
                resultingOwnership = _out528;
                readIdents = _3875_recIdents;
              }
            } else if (_source142.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3876___mcc_h168 = _source142.dtor_Tuple_a0;
              {
                RAST._IType _3877_fromTpeGen;
                RAST._IType _out529;
                _out529 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3877_fromTpeGen = _out529;
                RAST._IType _3878_toTpeGen;
                RAST._IType _out530;
                _out530 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3878_toTpeGen = _out530;
                RAST._IExpr _3879_recursiveGen;
                DCOMP._IOwnership _3880_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3881_recIdents;
                RAST._IExpr _out531;
                DCOMP._IOwnership _out532;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out533;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out531, out _out532, out _out533);
                _3879_recursiveGen = _out531;
                _3880_recOwned = _out532;
                _3881_recIdents = _out533;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3879_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3877_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3878_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out534;
                DCOMP._IOwnership _out535;
                DCOMP.COMP.FromOwnership(r, _3880_recOwned, expectedOwnership, out _out534, out _out535);
                r = _out534;
                resultingOwnership = _out535;
                readIdents = _3881_recIdents;
              }
            } else if (_source142.is_Array) {
              DAST._IType _3882___mcc_h170 = _source142.dtor_element;
              BigInteger _3883___mcc_h171 = _source142.dtor_dims;
              {
                RAST._IType _3884_fromTpeGen;
                RAST._IType _out536;
                _out536 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3884_fromTpeGen = _out536;
                RAST._IType _3885_toTpeGen;
                RAST._IType _out537;
                _out537 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3885_toTpeGen = _out537;
                RAST._IExpr _3886_recursiveGen;
                DCOMP._IOwnership _3887_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3888_recIdents;
                RAST._IExpr _out538;
                DCOMP._IOwnership _out539;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out540;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out538, out _out539, out _out540);
                _3886_recursiveGen = _out538;
                _3887_recOwned = _out539;
                _3888_recIdents = _out540;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3886_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3884_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3885_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out541;
                DCOMP._IOwnership _out542;
                DCOMP.COMP.FromOwnership(r, _3887_recOwned, expectedOwnership, out _out541, out _out542);
                r = _out541;
                resultingOwnership = _out542;
                readIdents = _3888_recIdents;
              }
            } else if (_source142.is_Seq) {
              DAST._IType _3889___mcc_h174 = _source142.dtor_element;
              {
                RAST._IType _3890_fromTpeGen;
                RAST._IType _out543;
                _out543 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3890_fromTpeGen = _out543;
                RAST._IType _3891_toTpeGen;
                RAST._IType _out544;
                _out544 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3891_toTpeGen = _out544;
                RAST._IExpr _3892_recursiveGen;
                DCOMP._IOwnership _3893_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3894_recIdents;
                RAST._IExpr _out545;
                DCOMP._IOwnership _out546;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out547;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out545, out _out546, out _out547);
                _3892_recursiveGen = _out545;
                _3893_recOwned = _out546;
                _3894_recIdents = _out547;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3892_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3890_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3891_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out548;
                DCOMP._IOwnership _out549;
                DCOMP.COMP.FromOwnership(r, _3893_recOwned, expectedOwnership, out _out548, out _out549);
                r = _out548;
                resultingOwnership = _out549;
                readIdents = _3894_recIdents;
              }
            } else if (_source142.is_Set) {
              DAST._IType _3895___mcc_h176 = _source142.dtor_element;
              {
                RAST._IType _3896_fromTpeGen;
                RAST._IType _out550;
                _out550 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3896_fromTpeGen = _out550;
                RAST._IType _3897_toTpeGen;
                RAST._IType _out551;
                _out551 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3897_toTpeGen = _out551;
                RAST._IExpr _3898_recursiveGen;
                DCOMP._IOwnership _3899_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3900_recIdents;
                RAST._IExpr _out552;
                DCOMP._IOwnership _out553;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out554;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out552, out _out553, out _out554);
                _3898_recursiveGen = _out552;
                _3899_recOwned = _out553;
                _3900_recIdents = _out554;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3898_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3896_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3897_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out555;
                DCOMP._IOwnership _out556;
                DCOMP.COMP.FromOwnership(r, _3899_recOwned, expectedOwnership, out _out555, out _out556);
                r = _out555;
                resultingOwnership = _out556;
                readIdents = _3900_recIdents;
              }
            } else if (_source142.is_Multiset) {
              DAST._IType _3901___mcc_h178 = _source142.dtor_element;
              {
                RAST._IType _3902_fromTpeGen;
                RAST._IType _out557;
                _out557 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3902_fromTpeGen = _out557;
                RAST._IType _3903_toTpeGen;
                RAST._IType _out558;
                _out558 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3903_toTpeGen = _out558;
                RAST._IExpr _3904_recursiveGen;
                DCOMP._IOwnership _3905_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3906_recIdents;
                RAST._IExpr _out559;
                DCOMP._IOwnership _out560;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out561;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out559, out _out560, out _out561);
                _3904_recursiveGen = _out559;
                _3905_recOwned = _out560;
                _3906_recIdents = _out561;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3904_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3902_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3903_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out562;
                DCOMP._IOwnership _out563;
                DCOMP.COMP.FromOwnership(r, _3905_recOwned, expectedOwnership, out _out562, out _out563);
                r = _out562;
                resultingOwnership = _out563;
                readIdents = _3906_recIdents;
              }
            } else if (_source142.is_Map) {
              DAST._IType _3907___mcc_h180 = _source142.dtor_key;
              DAST._IType _3908___mcc_h181 = _source142.dtor_value;
              {
                RAST._IType _3909_fromTpeGen;
                RAST._IType _out564;
                _out564 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3909_fromTpeGen = _out564;
                RAST._IType _3910_toTpeGen;
                RAST._IType _out565;
                _out565 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3910_toTpeGen = _out565;
                RAST._IExpr _3911_recursiveGen;
                DCOMP._IOwnership _3912_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3913_recIdents;
                RAST._IExpr _out566;
                DCOMP._IOwnership _out567;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out568;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out566, out _out567, out _out568);
                _3911_recursiveGen = _out566;
                _3912_recOwned = _out567;
                _3913_recIdents = _out568;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3911_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3909_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3910_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out569;
                DCOMP._IOwnership _out570;
                DCOMP.COMP.FromOwnership(r, _3912_recOwned, expectedOwnership, out _out569, out _out570);
                r = _out569;
                resultingOwnership = _out570;
                readIdents = _3913_recIdents;
              }
            } else if (_source142.is_SetBuilder) {
              DAST._IType _3914___mcc_h184 = _source142.dtor_element;
              {
                RAST._IType _3915_fromTpeGen;
                RAST._IType _out571;
                _out571 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3915_fromTpeGen = _out571;
                RAST._IType _3916_toTpeGen;
                RAST._IType _out572;
                _out572 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3916_toTpeGen = _out572;
                RAST._IExpr _3917_recursiveGen;
                DCOMP._IOwnership _3918_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3919_recIdents;
                RAST._IExpr _out573;
                DCOMP._IOwnership _out574;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out575;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out573, out _out574, out _out575);
                _3917_recursiveGen = _out573;
                _3918_recOwned = _out574;
                _3919_recIdents = _out575;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3917_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3915_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3916_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out576;
                DCOMP._IOwnership _out577;
                DCOMP.COMP.FromOwnership(r, _3918_recOwned, expectedOwnership, out _out576, out _out577);
                r = _out576;
                resultingOwnership = _out577;
                readIdents = _3919_recIdents;
              }
            } else if (_source142.is_MapBuilder) {
              DAST._IType _3920___mcc_h186 = _source142.dtor_key;
              DAST._IType _3921___mcc_h187 = _source142.dtor_value;
              {
                RAST._IType _3922_fromTpeGen;
                RAST._IType _out578;
                _out578 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3922_fromTpeGen = _out578;
                RAST._IType _3923_toTpeGen;
                RAST._IType _out579;
                _out579 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3923_toTpeGen = _out579;
                RAST._IExpr _3924_recursiveGen;
                DCOMP._IOwnership _3925_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3926_recIdents;
                RAST._IExpr _out580;
                DCOMP._IOwnership _out581;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out582;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out580, out _out581, out _out582);
                _3924_recursiveGen = _out580;
                _3925_recOwned = _out581;
                _3926_recIdents = _out582;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3924_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3922_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3923_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out583;
                DCOMP._IOwnership _out584;
                DCOMP.COMP.FromOwnership(r, _3925_recOwned, expectedOwnership, out _out583, out _out584);
                r = _out583;
                resultingOwnership = _out584;
                readIdents = _3926_recIdents;
              }
            } else if (_source142.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3927___mcc_h190 = _source142.dtor_args;
              DAST._IType _3928___mcc_h191 = _source142.dtor_result;
              {
                RAST._IType _3929_fromTpeGen;
                RAST._IType _out585;
                _out585 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3929_fromTpeGen = _out585;
                RAST._IType _3930_toTpeGen;
                RAST._IType _out586;
                _out586 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3930_toTpeGen = _out586;
                RAST._IExpr _3931_recursiveGen;
                DCOMP._IOwnership _3932_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3933_recIdents;
                RAST._IExpr _out587;
                DCOMP._IOwnership _out588;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out589;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out587, out _out588, out _out589);
                _3931_recursiveGen = _out587;
                _3932_recOwned = _out588;
                _3933_recIdents = _out589;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3931_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3929_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3930_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out590;
                DCOMP._IOwnership _out591;
                DCOMP.COMP.FromOwnership(r, _3932_recOwned, expectedOwnership, out _out590, out _out591);
                r = _out590;
                resultingOwnership = _out591;
                readIdents = _3933_recIdents;
              }
            } else if (_source142.is_Primitive) {
              DAST._IPrimitive _3934___mcc_h194 = _source142.dtor_Primitive_a0;
              {
                RAST._IType _3935_fromTpeGen;
                RAST._IType _out592;
                _out592 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3935_fromTpeGen = _out592;
                RAST._IType _3936_toTpeGen;
                RAST._IType _out593;
                _out593 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3936_toTpeGen = _out593;
                RAST._IExpr _3937_recursiveGen;
                DCOMP._IOwnership _3938_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3939_recIdents;
                RAST._IExpr _out594;
                DCOMP._IOwnership _out595;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out596;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out594, out _out595, out _out596);
                _3937_recursiveGen = _out594;
                _3938_recOwned = _out595;
                _3939_recIdents = _out596;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3937_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3935_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3936_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out597;
                DCOMP._IOwnership _out598;
                DCOMP.COMP.FromOwnership(r, _3938_recOwned, expectedOwnership, out _out597, out _out598);
                r = _out597;
                resultingOwnership = _out598;
                readIdents = _3939_recIdents;
              }
            } else if (_source142.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3940___mcc_h196 = _source142.dtor_Passthrough_a0;
              {
                RAST._IType _3941_fromTpeGen;
                RAST._IType _out599;
                _out599 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3941_fromTpeGen = _out599;
                RAST._IType _3942_toTpeGen;
                RAST._IType _out600;
                _out600 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3942_toTpeGen = _out600;
                RAST._IExpr _3943_recursiveGen;
                DCOMP._IOwnership _3944_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3945_recIdents;
                RAST._IExpr _out601;
                DCOMP._IOwnership _out602;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out603;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out601, out _out602, out _out603);
                _3943_recursiveGen = _out601;
                _3944_recOwned = _out602;
                _3945_recIdents = _out603;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3943_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3941_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3942_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out604;
                DCOMP._IOwnership _out605;
                DCOMP.COMP.FromOwnership(r, _3944_recOwned, expectedOwnership, out _out604, out _out605);
                r = _out604;
                resultingOwnership = _out605;
                readIdents = _3945_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3946___mcc_h198 = _source142.dtor_TypeArg_a0;
              {
                RAST._IType _3947_fromTpeGen;
                RAST._IType _out606;
                _out606 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _3947_fromTpeGen = _out606;
                RAST._IType _3948_toTpeGen;
                RAST._IType _out607;
                _out607 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _3948_toTpeGen = _out607;
                RAST._IExpr _3949_recursiveGen;
                DCOMP._IOwnership _3950_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3951_recIdents;
                RAST._IExpr _out608;
                DCOMP._IOwnership _out609;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out610;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out608, out _out609, out _out610);
                _3949_recursiveGen = _out608;
                _3950_recOwned = _out609;
                _3951_recIdents = _out610;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_3949_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_3947_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3948_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out611;
                DCOMP._IOwnership _out612;
                DCOMP.COMP.FromOwnership(r, _3950_recOwned, expectedOwnership, out _out611, out _out612);
                r = _out611;
                resultingOwnership = _out612;
                readIdents = _3951_recIdents;
              }
            }
          } else {
            DAST._IType _3952___mcc_h200 = _source131.dtor_baseType;
            DAST._INewtypeRange _3953___mcc_h201 = _source131.dtor_range;
            bool _3954___mcc_h202 = _source131.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _3955___mcc_h203 = _source131.dtor_attributes;
            DAST._IType _source147 = _3476___mcc_h1;
            if (_source147.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3956___mcc_h216 = _source147.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _3957___mcc_h217 = _source147.dtor_typeArgs;
              DAST._IResolvedType _3958___mcc_h218 = _source147.dtor_resolved;
              DAST._IResolvedType _source148 = _3958___mcc_h218;
              if (_source148.is_AllocatedDatatype) {
                DAST._IDatatypeType _3959___mcc_h225 = _source148.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _3960_attributes = _3955___mcc_h203;
                bool _3961_erase = _3954___mcc_h202;
                DAST._INewtypeRange _3962_range = _3953___mcc_h201;
                DAST._IType _3963_b = _3952___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _3964_nativeFromType;
                  _3964_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3963_b, _3962_range);
                  if (object.Equals(_3963_b, _3471_toTpe)) {
                    RAST._IExpr _3965_recursiveGen;
                    DCOMP._IOwnership _3966_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3967_recIdents;
                    RAST._IExpr _out613;
                    DCOMP._IOwnership _out614;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out615;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out613, out _out614, out _out615);
                    _3965_recursiveGen = _out613;
                    _3966_recOwned = _out614;
                    _3967_recIdents = _out615;
                    readIdents = _3967_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source149 = _3964_nativeFromType;
                    if (_source149.is_None) {
                      if (_3961_erase) {
                        r = _3965_recursiveGen;
                      } else {
                        r = (_3965_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out616;
                      DCOMP._IOwnership _out617;
                      DCOMP.COMP.FromOwnership(r, _3966_recOwned, expectedOwnership, out _out616, out _out617);
                      r = _out616;
                      resultingOwnership = _out617;
                    } else {
                      RAST._IType _3968___mcc_h1519 = _source149.dtor_value;
                      RAST._IType _3969_v = _3968___mcc_h1519;
                      RAST._IType _3970_toTpeRust;
                      RAST._IType _out618;
                      _out618 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                      _3970_toTpeRust = _out618;
                      r = (((_3965_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3970_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out619;
                      DCOMP._IOwnership _out620;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out619, out _out620);
                      r = _out619;
                      resultingOwnership = _out620;
                    }
                  } else {
                    if ((_3964_nativeFromType).is_Some) {
                      if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3971_recursiveGen;
                        DCOMP._IOwnership _3972_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3973_recIdents;
                        RAST._IExpr _out621;
                        DCOMP._IOwnership _out622;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out623;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out621, out _out622, out _out623);
                        _3971_recursiveGen = _out621;
                        _3972_recOwned = _out622;
                        _3973_recIdents = _out623;
                        RAST._IExpr _out624;
                        DCOMP._IOwnership _out625;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3971_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3972_recOwned, expectedOwnership, out _out624, out _out625);
                        r = _out624;
                        resultingOwnership = _out625;
                        readIdents = _3973_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out626;
                    DCOMP._IOwnership _out627;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out628;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _3963_b), _3963_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out626, out _out627, out _out628);
                    r = _out626;
                    resultingOwnership = _out627;
                    readIdents = _out628;
                  }
                }
              } else if (_source148.is_Datatype) {
                DAST._IDatatypeType _3974___mcc_h228 = _source148.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _3975_attributes = _3955___mcc_h203;
                bool _3976_erase = _3954___mcc_h202;
                DAST._INewtypeRange _3977_range = _3953___mcc_h201;
                DAST._IType _3978_b = _3952___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _3979_nativeFromType;
                  _3979_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3978_b, _3977_range);
                  if (object.Equals(_3978_b, _3471_toTpe)) {
                    RAST._IExpr _3980_recursiveGen;
                    DCOMP._IOwnership _3981_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3982_recIdents;
                    RAST._IExpr _out629;
                    DCOMP._IOwnership _out630;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out631;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out629, out _out630, out _out631);
                    _3980_recursiveGen = _out629;
                    _3981_recOwned = _out630;
                    _3982_recIdents = _out631;
                    readIdents = _3982_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source150 = _3979_nativeFromType;
                    if (_source150.is_None) {
                      if (_3976_erase) {
                        r = _3980_recursiveGen;
                      } else {
                        r = (_3980_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out632;
                      DCOMP._IOwnership _out633;
                      DCOMP.COMP.FromOwnership(r, _3981_recOwned, expectedOwnership, out _out632, out _out633);
                      r = _out632;
                      resultingOwnership = _out633;
                    } else {
                      RAST._IType _3983___mcc_h1520 = _source150.dtor_value;
                      RAST._IType _3984_v = _3983___mcc_h1520;
                      RAST._IType _3985_toTpeRust;
                      RAST._IType _out634;
                      _out634 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                      _3985_toTpeRust = _out634;
                      r = (((_3980_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3985_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out635;
                      DCOMP._IOwnership _out636;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out635, out _out636);
                      r = _out635;
                      resultingOwnership = _out636;
                    }
                  } else {
                    if ((_3979_nativeFromType).is_Some) {
                      if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _3986_recursiveGen;
                        DCOMP._IOwnership _3987_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3988_recIdents;
                        RAST._IExpr _out637;
                        DCOMP._IOwnership _out638;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out639;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out637, out _out638, out _out639);
                        _3986_recursiveGen = _out637;
                        _3987_recOwned = _out638;
                        _3988_recIdents = _out639;
                        RAST._IExpr _out640;
                        DCOMP._IOwnership _out641;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3986_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _3987_recOwned, expectedOwnership, out _out640, out _out641);
                        r = _out640;
                        resultingOwnership = _out641;
                        readIdents = _3988_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out642;
                    DCOMP._IOwnership _out643;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out644;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _3978_b), _3978_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out642, out _out643, out _out644);
                    r = _out642;
                    resultingOwnership = _out643;
                    readIdents = _out644;
                  }
                }
              } else if (_source148.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3989___mcc_h231 = _source148.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3990___mcc_h232 = _source148.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3991_attributes = _3955___mcc_h203;
                bool _3992_erase = _3954___mcc_h202;
                DAST._INewtypeRange _3993_range = _3953___mcc_h201;
                DAST._IType _3994_b = _3952___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _3995_nativeFromType;
                  _3995_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3994_b, _3993_range);
                  if (object.Equals(_3994_b, _3471_toTpe)) {
                    RAST._IExpr _3996_recursiveGen;
                    DCOMP._IOwnership _3997_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3998_recIdents;
                    RAST._IExpr _out645;
                    DCOMP._IOwnership _out646;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out647;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out645, out _out646, out _out647);
                    _3996_recursiveGen = _out645;
                    _3997_recOwned = _out646;
                    _3998_recIdents = _out647;
                    readIdents = _3998_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source151 = _3995_nativeFromType;
                    if (_source151.is_None) {
                      if (_3992_erase) {
                        r = _3996_recursiveGen;
                      } else {
                        r = (_3996_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out648;
                      DCOMP._IOwnership _out649;
                      DCOMP.COMP.FromOwnership(r, _3997_recOwned, expectedOwnership, out _out648, out _out649);
                      r = _out648;
                      resultingOwnership = _out649;
                    } else {
                      RAST._IType _3999___mcc_h1521 = _source151.dtor_value;
                      RAST._IType _4000_v = _3999___mcc_h1521;
                      RAST._IType _4001_toTpeRust;
                      RAST._IType _out650;
                      _out650 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                      _4001_toTpeRust = _out650;
                      r = (((_3996_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4001_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out651;
                      DCOMP._IOwnership _out652;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out651, out _out652);
                      r = _out651;
                      resultingOwnership = _out652;
                    }
                  } else {
                    if ((_3995_nativeFromType).is_Some) {
                      if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4002_recursiveGen;
                        DCOMP._IOwnership _4003_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4004_recIdents;
                        RAST._IExpr _out653;
                        DCOMP._IOwnership _out654;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out655;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out653, out _out654, out _out655);
                        _4002_recursiveGen = _out653;
                        _4003_recOwned = _out654;
                        _4004_recIdents = _out655;
                        RAST._IExpr _out656;
                        DCOMP._IOwnership _out657;
                        DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4002_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4003_recOwned, expectedOwnership, out _out656, out _out657);
                        r = _out656;
                        resultingOwnership = _out657;
                        readIdents = _4004_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out658;
                    DCOMP._IOwnership _out659;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out660;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _3994_b), _3994_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out658, out _out659, out _out660);
                    r = _out658;
                    resultingOwnership = _out659;
                    readIdents = _out660;
                  }
                }
              } else {
                DAST._IType _4005___mcc_h237 = _source148.dtor_baseType;
                DAST._INewtypeRange _4006___mcc_h238 = _source148.dtor_range;
                bool _4007___mcc_h239 = _source148.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4008___mcc_h240 = _source148.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4009_attributes = _4008___mcc_h240;
                bool _4010_erase = _4007___mcc_h239;
                DAST._INewtypeRange _4011_range = _4006___mcc_h238;
                DAST._IType _4012_b = _4005___mcc_h237;
                {
                  Std.Wrappers._IOption<RAST._IType> _4013_nativeToType;
                  _4013_nativeToType = DCOMP.COMP.NewtypeToRustType(_4012_b, _4011_range);
                  if (object.Equals(_3470_fromTpe, _4012_b)) {
                    RAST._IExpr _4014_recursiveGen;
                    DCOMP._IOwnership _4015_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4016_recIdents;
                    RAST._IExpr _out661;
                    DCOMP._IOwnership _out662;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out663;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out661, out _out662, out _out663);
                    _4014_recursiveGen = _out661;
                    _4015_recOwned = _out662;
                    _4016_recIdents = _out663;
                    readIdents = _4016_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source152 = _4013_nativeToType;
                    if (_source152.is_None) {
                      if (_4010_erase) {
                        r = _4014_recursiveGen;
                      } else {
                        RAST._IType _4017_rhsType;
                        RAST._IType _out664;
                        _out664 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _4017_rhsType = _out664;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4017_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4014_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out665;
                      DCOMP._IOwnership _out666;
                      DCOMP.COMP.FromOwnership(r, _4015_recOwned, expectedOwnership, out _out665, out _out666);
                      r = _out665;
                      resultingOwnership = _out666;
                    } else {
                      RAST._IType _4018___mcc_h1522 = _source152.dtor_value;
                      RAST._IType _4019_v = _4018___mcc_h1522;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4014_recursiveGen, RAST.Expr.create_ExprFromType(_4019_v)));
                      RAST._IExpr _out667;
                      DCOMP._IOwnership _out668;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out667, out _out668);
                      r = _out667;
                      resultingOwnership = _out668;
                    }
                  } else {
                    if ((_4013_nativeToType).is_Some) {
                      DAST._IType _source153 = _3470_fromTpe;
                      if (_source153.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4020___mcc_h1523 = _source153.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _4021___mcc_h1524 = _source153.dtor_typeArgs;
                        DAST._IResolvedType _4022___mcc_h1525 = _source153.dtor_resolved;
                        DAST._IResolvedType _source154 = _4022___mcc_h1525;
                        if (_source154.is_AllocatedDatatype) {
                          DAST._IDatatypeType _4023___mcc_h1529 = _source154.dtor_datatypeType;
                        } else if (_source154.is_Datatype) {
                          DAST._IDatatypeType _4024___mcc_h1531 = _source154.dtor_datatypeType;
                        } else if (_source154.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4025___mcc_h1533 = _source154.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _4026___mcc_h1534 = _source154.dtor_attributes;
                        } else {
                          DAST._IType _4027___mcc_h1537 = _source154.dtor_baseType;
                          DAST._INewtypeRange _4028___mcc_h1538 = _source154.dtor_range;
                          bool _4029___mcc_h1539 = _source154.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _4030___mcc_h1540 = _source154.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _4031_attributes0 = _4030___mcc_h1540;
                          bool _4032_erase0 = _4029___mcc_h1539;
                          DAST._INewtypeRange _4033_range0 = _4028___mcc_h1538;
                          DAST._IType _4034_b0 = _4027___mcc_h1537;
                          {
                            Std.Wrappers._IOption<RAST._IType> _4035_nativeFromType;
                            _4035_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4034_b0, _4033_range0);
                            if ((_4035_nativeFromType).is_Some) {
                              RAST._IExpr _4036_recursiveGen;
                              DCOMP._IOwnership _4037_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4038_recIdents;
                              RAST._IExpr _out669;
                              DCOMP._IOwnership _out670;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out671;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out669, out _out670, out _out671);
                              _4036_recursiveGen = _out669;
                              _4037_recOwned = _out670;
                              _4038_recIdents = _out671;
                              RAST._IExpr _out672;
                              DCOMP._IOwnership _out673;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4036_recursiveGen, (_4013_nativeToType).dtor_value), _4037_recOwned, expectedOwnership, out _out672, out _out673);
                              r = _out672;
                              resultingOwnership = _out673;
                              readIdents = _4038_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source153.is_Nullable) {
                        DAST._IType _4039___mcc_h1545 = _source153.dtor_Nullable_a0;
                      } else if (_source153.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _4040___mcc_h1547 = _source153.dtor_Tuple_a0;
                      } else if (_source153.is_Array) {
                        DAST._IType _4041___mcc_h1549 = _source153.dtor_element;
                        BigInteger _4042___mcc_h1550 = _source153.dtor_dims;
                      } else if (_source153.is_Seq) {
                        DAST._IType _4043___mcc_h1553 = _source153.dtor_element;
                      } else if (_source153.is_Set) {
                        DAST._IType _4044___mcc_h1555 = _source153.dtor_element;
                      } else if (_source153.is_Multiset) {
                        DAST._IType _4045___mcc_h1557 = _source153.dtor_element;
                      } else if (_source153.is_Map) {
                        DAST._IType _4046___mcc_h1559 = _source153.dtor_key;
                        DAST._IType _4047___mcc_h1560 = _source153.dtor_value;
                      } else if (_source153.is_SetBuilder) {
                        DAST._IType _4048___mcc_h1563 = _source153.dtor_element;
                      } else if (_source153.is_MapBuilder) {
                        DAST._IType _4049___mcc_h1565 = _source153.dtor_key;
                        DAST._IType _4050___mcc_h1566 = _source153.dtor_value;
                      } else if (_source153.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _4051___mcc_h1569 = _source153.dtor_args;
                        DAST._IType _4052___mcc_h1570 = _source153.dtor_result;
                      } else if (_source153.is_Primitive) {
                        DAST._IPrimitive _4053___mcc_h1573 = _source153.dtor_Primitive_a0;
                      } else if (_source153.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _4054___mcc_h1575 = _source153.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _4055___mcc_h1577 = _source153.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _4056_recursiveGen;
                        DCOMP._IOwnership _4057_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4058_recIdents;
                        RAST._IExpr _out674;
                        DCOMP._IOwnership _out675;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out676;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out674, out _out675, out _out676);
                        _4056_recursiveGen = _out674;
                        _4057_recOwned = _out675;
                        _4058_recIdents = _out676;
                        RAST._IExpr _out677;
                        DCOMP._IOwnership _out678;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4056_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4013_nativeToType).dtor_value), _4057_recOwned, expectedOwnership, out _out677, out _out678);
                        r = _out677;
                        resultingOwnership = _out678;
                        readIdents = _4058_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out679;
                    DCOMP._IOwnership _out680;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out681;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4012_b), _4012_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out679, out _out680, out _out681);
                    r = _out679;
                    resultingOwnership = _out680;
                    readIdents = _out681;
                  }
                }
              }
            } else if (_source147.is_Nullable) {
              DAST._IType _4059___mcc_h249 = _source147.dtor_Nullable_a0;
              {
                RAST._IExpr _4060_recursiveGen;
                DCOMP._IOwnership _4061_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4062_recIdents;
                RAST._IExpr _out682;
                DCOMP._IOwnership _out683;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out684;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out682, out _out683, out _out684);
                _4060_recursiveGen = _out682;
                _4061_recOwned = _out683;
                _4062_recIdents = _out684;
                r = _4060_recursiveGen;
                if (object.Equals(_4061_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out685;
                DCOMP._IOwnership _out686;
                DCOMP.COMP.FromOwnership(r, _4061_recOwned, expectedOwnership, out _out685, out _out686);
                r = _out685;
                resultingOwnership = _out686;
                readIdents = _4062_recIdents;
              }
            } else if (_source147.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4063___mcc_h252 = _source147.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _4064_attributes = _3955___mcc_h203;
              bool _4065_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4066_range = _3953___mcc_h201;
              DAST._IType _4067_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4068_nativeFromType;
                _4068_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4067_b, _4066_range);
                if (object.Equals(_4067_b, _3471_toTpe)) {
                  RAST._IExpr _4069_recursiveGen;
                  DCOMP._IOwnership _4070_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4071_recIdents;
                  RAST._IExpr _out687;
                  DCOMP._IOwnership _out688;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out689;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out687, out _out688, out _out689);
                  _4069_recursiveGen = _out687;
                  _4070_recOwned = _out688;
                  _4071_recIdents = _out689;
                  readIdents = _4071_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source155 = _4068_nativeFromType;
                  if (_source155.is_None) {
                    if (_4065_erase) {
                      r = _4069_recursiveGen;
                    } else {
                      r = (_4069_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out690;
                    DCOMP._IOwnership _out691;
                    DCOMP.COMP.FromOwnership(r, _4070_recOwned, expectedOwnership, out _out690, out _out691);
                    r = _out690;
                    resultingOwnership = _out691;
                  } else {
                    RAST._IType _4072___mcc_h1579 = _source155.dtor_value;
                    RAST._IType _4073_v = _4072___mcc_h1579;
                    RAST._IType _4074_toTpeRust;
                    RAST._IType _out692;
                    _out692 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4074_toTpeRust = _out692;
                    r = (((_4069_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4074_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out693;
                    DCOMP._IOwnership _out694;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out693, out _out694);
                    r = _out693;
                    resultingOwnership = _out694;
                  }
                } else {
                  if ((_4068_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4075_recursiveGen;
                      DCOMP._IOwnership _4076_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4077_recIdents;
                      RAST._IExpr _out695;
                      DCOMP._IOwnership _out696;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out697;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out695, out _out696, out _out697);
                      _4075_recursiveGen = _out695;
                      _4076_recOwned = _out696;
                      _4077_recIdents = _out697;
                      RAST._IExpr _out698;
                      DCOMP._IOwnership _out699;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4075_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4076_recOwned, expectedOwnership, out _out698, out _out699);
                      r = _out698;
                      resultingOwnership = _out699;
                      readIdents = _4077_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out700;
                  DCOMP._IOwnership _out701;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out702;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4067_b), _4067_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out700, out _out701, out _out702);
                  r = _out700;
                  resultingOwnership = _out701;
                  readIdents = _out702;
                }
              }
            } else if (_source147.is_Array) {
              DAST._IType _4078___mcc_h255 = _source147.dtor_element;
              BigInteger _4079___mcc_h256 = _source147.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _4080_attributes = _3955___mcc_h203;
              bool _4081_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4082_range = _3953___mcc_h201;
              DAST._IType _4083_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4084_nativeFromType;
                _4084_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4083_b, _4082_range);
                if (object.Equals(_4083_b, _3471_toTpe)) {
                  RAST._IExpr _4085_recursiveGen;
                  DCOMP._IOwnership _4086_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4087_recIdents;
                  RAST._IExpr _out703;
                  DCOMP._IOwnership _out704;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out705;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out703, out _out704, out _out705);
                  _4085_recursiveGen = _out703;
                  _4086_recOwned = _out704;
                  _4087_recIdents = _out705;
                  readIdents = _4087_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source156 = _4084_nativeFromType;
                  if (_source156.is_None) {
                    if (_4081_erase) {
                      r = _4085_recursiveGen;
                    } else {
                      r = (_4085_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out706;
                    DCOMP._IOwnership _out707;
                    DCOMP.COMP.FromOwnership(r, _4086_recOwned, expectedOwnership, out _out706, out _out707);
                    r = _out706;
                    resultingOwnership = _out707;
                  } else {
                    RAST._IType _4088___mcc_h1580 = _source156.dtor_value;
                    RAST._IType _4089_v = _4088___mcc_h1580;
                    RAST._IType _4090_toTpeRust;
                    RAST._IType _out708;
                    _out708 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4090_toTpeRust = _out708;
                    r = (((_4085_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4090_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out709;
                    DCOMP._IOwnership _out710;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out709, out _out710);
                    r = _out709;
                    resultingOwnership = _out710;
                  }
                } else {
                  if ((_4084_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4091_recursiveGen;
                      DCOMP._IOwnership _4092_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4093_recIdents;
                      RAST._IExpr _out711;
                      DCOMP._IOwnership _out712;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out713;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out711, out _out712, out _out713);
                      _4091_recursiveGen = _out711;
                      _4092_recOwned = _out712;
                      _4093_recIdents = _out713;
                      RAST._IExpr _out714;
                      DCOMP._IOwnership _out715;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4091_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4092_recOwned, expectedOwnership, out _out714, out _out715);
                      r = _out714;
                      resultingOwnership = _out715;
                      readIdents = _4093_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out716;
                  DCOMP._IOwnership _out717;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out718;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4083_b), _4083_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out716, out _out717, out _out718);
                  r = _out716;
                  resultingOwnership = _out717;
                  readIdents = _out718;
                }
              }
            } else if (_source147.is_Seq) {
              DAST._IType _4094___mcc_h261 = _source147.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4095_attributes = _3955___mcc_h203;
              bool _4096_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4097_range = _3953___mcc_h201;
              DAST._IType _4098_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4099_nativeFromType;
                _4099_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4098_b, _4097_range);
                if (object.Equals(_4098_b, _3471_toTpe)) {
                  RAST._IExpr _4100_recursiveGen;
                  DCOMP._IOwnership _4101_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4102_recIdents;
                  RAST._IExpr _out719;
                  DCOMP._IOwnership _out720;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out721;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out719, out _out720, out _out721);
                  _4100_recursiveGen = _out719;
                  _4101_recOwned = _out720;
                  _4102_recIdents = _out721;
                  readIdents = _4102_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source157 = _4099_nativeFromType;
                  if (_source157.is_None) {
                    if (_4096_erase) {
                      r = _4100_recursiveGen;
                    } else {
                      r = (_4100_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out722;
                    DCOMP._IOwnership _out723;
                    DCOMP.COMP.FromOwnership(r, _4101_recOwned, expectedOwnership, out _out722, out _out723);
                    r = _out722;
                    resultingOwnership = _out723;
                  } else {
                    RAST._IType _4103___mcc_h1581 = _source157.dtor_value;
                    RAST._IType _4104_v = _4103___mcc_h1581;
                    RAST._IType _4105_toTpeRust;
                    RAST._IType _out724;
                    _out724 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4105_toTpeRust = _out724;
                    r = (((_4100_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4105_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out725;
                    DCOMP._IOwnership _out726;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out725, out _out726);
                    r = _out725;
                    resultingOwnership = _out726;
                  }
                } else {
                  if ((_4099_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4106_recursiveGen;
                      DCOMP._IOwnership _4107_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4108_recIdents;
                      RAST._IExpr _out727;
                      DCOMP._IOwnership _out728;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out729;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out727, out _out728, out _out729);
                      _4106_recursiveGen = _out727;
                      _4107_recOwned = _out728;
                      _4108_recIdents = _out729;
                      RAST._IExpr _out730;
                      DCOMP._IOwnership _out731;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4106_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4107_recOwned, expectedOwnership, out _out730, out _out731);
                      r = _out730;
                      resultingOwnership = _out731;
                      readIdents = _4108_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out732;
                  DCOMP._IOwnership _out733;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out734;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4098_b), _4098_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out732, out _out733, out _out734);
                  r = _out732;
                  resultingOwnership = _out733;
                  readIdents = _out734;
                }
              }
            } else if (_source147.is_Set) {
              DAST._IType _4109___mcc_h264 = _source147.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4110_attributes = _3955___mcc_h203;
              bool _4111_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4112_range = _3953___mcc_h201;
              DAST._IType _4113_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4114_nativeFromType;
                _4114_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4113_b, _4112_range);
                if (object.Equals(_4113_b, _3471_toTpe)) {
                  RAST._IExpr _4115_recursiveGen;
                  DCOMP._IOwnership _4116_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4117_recIdents;
                  RAST._IExpr _out735;
                  DCOMP._IOwnership _out736;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out737;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out735, out _out736, out _out737);
                  _4115_recursiveGen = _out735;
                  _4116_recOwned = _out736;
                  _4117_recIdents = _out737;
                  readIdents = _4117_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source158 = _4114_nativeFromType;
                  if (_source158.is_None) {
                    if (_4111_erase) {
                      r = _4115_recursiveGen;
                    } else {
                      r = (_4115_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out738;
                    DCOMP._IOwnership _out739;
                    DCOMP.COMP.FromOwnership(r, _4116_recOwned, expectedOwnership, out _out738, out _out739);
                    r = _out738;
                    resultingOwnership = _out739;
                  } else {
                    RAST._IType _4118___mcc_h1582 = _source158.dtor_value;
                    RAST._IType _4119_v = _4118___mcc_h1582;
                    RAST._IType _4120_toTpeRust;
                    RAST._IType _out740;
                    _out740 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4120_toTpeRust = _out740;
                    r = (((_4115_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4120_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out741;
                    DCOMP._IOwnership _out742;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out741, out _out742);
                    r = _out741;
                    resultingOwnership = _out742;
                  }
                } else {
                  if ((_4114_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4121_recursiveGen;
                      DCOMP._IOwnership _4122_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4123_recIdents;
                      RAST._IExpr _out743;
                      DCOMP._IOwnership _out744;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out745;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out743, out _out744, out _out745);
                      _4121_recursiveGen = _out743;
                      _4122_recOwned = _out744;
                      _4123_recIdents = _out745;
                      RAST._IExpr _out746;
                      DCOMP._IOwnership _out747;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4121_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4122_recOwned, expectedOwnership, out _out746, out _out747);
                      r = _out746;
                      resultingOwnership = _out747;
                      readIdents = _4123_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out748;
                  DCOMP._IOwnership _out749;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out750;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4113_b), _4113_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out748, out _out749, out _out750);
                  r = _out748;
                  resultingOwnership = _out749;
                  readIdents = _out750;
                }
              }
            } else if (_source147.is_Multiset) {
              DAST._IType _4124___mcc_h267 = _source147.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4125_attributes = _3955___mcc_h203;
              bool _4126_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4127_range = _3953___mcc_h201;
              DAST._IType _4128_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4129_nativeFromType;
                _4129_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4128_b, _4127_range);
                if (object.Equals(_4128_b, _3471_toTpe)) {
                  RAST._IExpr _4130_recursiveGen;
                  DCOMP._IOwnership _4131_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4132_recIdents;
                  RAST._IExpr _out751;
                  DCOMP._IOwnership _out752;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out753;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out751, out _out752, out _out753);
                  _4130_recursiveGen = _out751;
                  _4131_recOwned = _out752;
                  _4132_recIdents = _out753;
                  readIdents = _4132_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source159 = _4129_nativeFromType;
                  if (_source159.is_None) {
                    if (_4126_erase) {
                      r = _4130_recursiveGen;
                    } else {
                      r = (_4130_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out754;
                    DCOMP._IOwnership _out755;
                    DCOMP.COMP.FromOwnership(r, _4131_recOwned, expectedOwnership, out _out754, out _out755);
                    r = _out754;
                    resultingOwnership = _out755;
                  } else {
                    RAST._IType _4133___mcc_h1583 = _source159.dtor_value;
                    RAST._IType _4134_v = _4133___mcc_h1583;
                    RAST._IType _4135_toTpeRust;
                    RAST._IType _out756;
                    _out756 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4135_toTpeRust = _out756;
                    r = (((_4130_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4135_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out757;
                    DCOMP._IOwnership _out758;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out757, out _out758);
                    r = _out757;
                    resultingOwnership = _out758;
                  }
                } else {
                  if ((_4129_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4136_recursiveGen;
                      DCOMP._IOwnership _4137_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4138_recIdents;
                      RAST._IExpr _out759;
                      DCOMP._IOwnership _out760;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out761;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out759, out _out760, out _out761);
                      _4136_recursiveGen = _out759;
                      _4137_recOwned = _out760;
                      _4138_recIdents = _out761;
                      RAST._IExpr _out762;
                      DCOMP._IOwnership _out763;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4136_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4137_recOwned, expectedOwnership, out _out762, out _out763);
                      r = _out762;
                      resultingOwnership = _out763;
                      readIdents = _4138_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out764;
                  DCOMP._IOwnership _out765;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out766;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4128_b), _4128_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out764, out _out765, out _out766);
                  r = _out764;
                  resultingOwnership = _out765;
                  readIdents = _out766;
                }
              }
            } else if (_source147.is_Map) {
              DAST._IType _4139___mcc_h270 = _source147.dtor_key;
              DAST._IType _4140___mcc_h271 = _source147.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4141_attributes = _3955___mcc_h203;
              bool _4142_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4143_range = _3953___mcc_h201;
              DAST._IType _4144_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4145_nativeFromType;
                _4145_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4144_b, _4143_range);
                if (object.Equals(_4144_b, _3471_toTpe)) {
                  RAST._IExpr _4146_recursiveGen;
                  DCOMP._IOwnership _4147_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4148_recIdents;
                  RAST._IExpr _out767;
                  DCOMP._IOwnership _out768;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out769;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out767, out _out768, out _out769);
                  _4146_recursiveGen = _out767;
                  _4147_recOwned = _out768;
                  _4148_recIdents = _out769;
                  readIdents = _4148_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source160 = _4145_nativeFromType;
                  if (_source160.is_None) {
                    if (_4142_erase) {
                      r = _4146_recursiveGen;
                    } else {
                      r = (_4146_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out770;
                    DCOMP._IOwnership _out771;
                    DCOMP.COMP.FromOwnership(r, _4147_recOwned, expectedOwnership, out _out770, out _out771);
                    r = _out770;
                    resultingOwnership = _out771;
                  } else {
                    RAST._IType _4149___mcc_h1584 = _source160.dtor_value;
                    RAST._IType _4150_v = _4149___mcc_h1584;
                    RAST._IType _4151_toTpeRust;
                    RAST._IType _out772;
                    _out772 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4151_toTpeRust = _out772;
                    r = (((_4146_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4151_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out773;
                    DCOMP._IOwnership _out774;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out773, out _out774);
                    r = _out773;
                    resultingOwnership = _out774;
                  }
                } else {
                  if ((_4145_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4152_recursiveGen;
                      DCOMP._IOwnership _4153_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4154_recIdents;
                      RAST._IExpr _out775;
                      DCOMP._IOwnership _out776;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out777;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out775, out _out776, out _out777);
                      _4152_recursiveGen = _out775;
                      _4153_recOwned = _out776;
                      _4154_recIdents = _out777;
                      RAST._IExpr _out778;
                      DCOMP._IOwnership _out779;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4152_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4153_recOwned, expectedOwnership, out _out778, out _out779);
                      r = _out778;
                      resultingOwnership = _out779;
                      readIdents = _4154_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out780;
                  DCOMP._IOwnership _out781;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out782;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4144_b), _4144_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out780, out _out781, out _out782);
                  r = _out780;
                  resultingOwnership = _out781;
                  readIdents = _out782;
                }
              }
            } else if (_source147.is_SetBuilder) {
              DAST._IType _4155___mcc_h276 = _source147.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4156_attributes = _3955___mcc_h203;
              bool _4157_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4158_range = _3953___mcc_h201;
              DAST._IType _4159_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4160_nativeFromType;
                _4160_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4159_b, _4158_range);
                if (object.Equals(_4159_b, _3471_toTpe)) {
                  RAST._IExpr _4161_recursiveGen;
                  DCOMP._IOwnership _4162_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4163_recIdents;
                  RAST._IExpr _out783;
                  DCOMP._IOwnership _out784;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out785;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out783, out _out784, out _out785);
                  _4161_recursiveGen = _out783;
                  _4162_recOwned = _out784;
                  _4163_recIdents = _out785;
                  readIdents = _4163_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source161 = _4160_nativeFromType;
                  if (_source161.is_None) {
                    if (_4157_erase) {
                      r = _4161_recursiveGen;
                    } else {
                      r = (_4161_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out786;
                    DCOMP._IOwnership _out787;
                    DCOMP.COMP.FromOwnership(r, _4162_recOwned, expectedOwnership, out _out786, out _out787);
                    r = _out786;
                    resultingOwnership = _out787;
                  } else {
                    RAST._IType _4164___mcc_h1585 = _source161.dtor_value;
                    RAST._IType _4165_v = _4164___mcc_h1585;
                    RAST._IType _4166_toTpeRust;
                    RAST._IType _out788;
                    _out788 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4166_toTpeRust = _out788;
                    r = (((_4161_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4166_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out789;
                    DCOMP._IOwnership _out790;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out789, out _out790);
                    r = _out789;
                    resultingOwnership = _out790;
                  }
                } else {
                  if ((_4160_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4167_recursiveGen;
                      DCOMP._IOwnership _4168_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4169_recIdents;
                      RAST._IExpr _out791;
                      DCOMP._IOwnership _out792;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out793;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out791, out _out792, out _out793);
                      _4167_recursiveGen = _out791;
                      _4168_recOwned = _out792;
                      _4169_recIdents = _out793;
                      RAST._IExpr _out794;
                      DCOMP._IOwnership _out795;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4167_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4168_recOwned, expectedOwnership, out _out794, out _out795);
                      r = _out794;
                      resultingOwnership = _out795;
                      readIdents = _4169_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out796;
                  DCOMP._IOwnership _out797;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out798;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4159_b), _4159_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out796, out _out797, out _out798);
                  r = _out796;
                  resultingOwnership = _out797;
                  readIdents = _out798;
                }
              }
            } else if (_source147.is_MapBuilder) {
              DAST._IType _4170___mcc_h279 = _source147.dtor_key;
              DAST._IType _4171___mcc_h280 = _source147.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4172_attributes = _3955___mcc_h203;
              bool _4173_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4174_range = _3953___mcc_h201;
              DAST._IType _4175_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4176_nativeFromType;
                _4176_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4175_b, _4174_range);
                if (object.Equals(_4175_b, _3471_toTpe)) {
                  RAST._IExpr _4177_recursiveGen;
                  DCOMP._IOwnership _4178_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4179_recIdents;
                  RAST._IExpr _out799;
                  DCOMP._IOwnership _out800;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out801;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out799, out _out800, out _out801);
                  _4177_recursiveGen = _out799;
                  _4178_recOwned = _out800;
                  _4179_recIdents = _out801;
                  readIdents = _4179_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source162 = _4176_nativeFromType;
                  if (_source162.is_None) {
                    if (_4173_erase) {
                      r = _4177_recursiveGen;
                    } else {
                      r = (_4177_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out802;
                    DCOMP._IOwnership _out803;
                    DCOMP.COMP.FromOwnership(r, _4178_recOwned, expectedOwnership, out _out802, out _out803);
                    r = _out802;
                    resultingOwnership = _out803;
                  } else {
                    RAST._IType _4180___mcc_h1586 = _source162.dtor_value;
                    RAST._IType _4181_v = _4180___mcc_h1586;
                    RAST._IType _4182_toTpeRust;
                    RAST._IType _out804;
                    _out804 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4182_toTpeRust = _out804;
                    r = (((_4177_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4182_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out805;
                    DCOMP._IOwnership _out806;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out805, out _out806);
                    r = _out805;
                    resultingOwnership = _out806;
                  }
                } else {
                  if ((_4176_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4183_recursiveGen;
                      DCOMP._IOwnership _4184_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4185_recIdents;
                      RAST._IExpr _out807;
                      DCOMP._IOwnership _out808;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out809;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out807, out _out808, out _out809);
                      _4183_recursiveGen = _out807;
                      _4184_recOwned = _out808;
                      _4185_recIdents = _out809;
                      RAST._IExpr _out810;
                      DCOMP._IOwnership _out811;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4183_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4184_recOwned, expectedOwnership, out _out810, out _out811);
                      r = _out810;
                      resultingOwnership = _out811;
                      readIdents = _4185_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out812;
                  DCOMP._IOwnership _out813;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out814;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4175_b), _4175_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out812, out _out813, out _out814);
                  r = _out812;
                  resultingOwnership = _out813;
                  readIdents = _out814;
                }
              }
            } else if (_source147.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4186___mcc_h285 = _source147.dtor_args;
              DAST._IType _4187___mcc_h286 = _source147.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _4188_attributes = _3955___mcc_h203;
              bool _4189_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4190_range = _3953___mcc_h201;
              DAST._IType _4191_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4192_nativeFromType;
                _4192_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4191_b, _4190_range);
                if (object.Equals(_4191_b, _3471_toTpe)) {
                  RAST._IExpr _4193_recursiveGen;
                  DCOMP._IOwnership _4194_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4195_recIdents;
                  RAST._IExpr _out815;
                  DCOMP._IOwnership _out816;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out817;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out815, out _out816, out _out817);
                  _4193_recursiveGen = _out815;
                  _4194_recOwned = _out816;
                  _4195_recIdents = _out817;
                  readIdents = _4195_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source163 = _4192_nativeFromType;
                  if (_source163.is_None) {
                    if (_4189_erase) {
                      r = _4193_recursiveGen;
                    } else {
                      r = (_4193_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out818;
                    DCOMP._IOwnership _out819;
                    DCOMP.COMP.FromOwnership(r, _4194_recOwned, expectedOwnership, out _out818, out _out819);
                    r = _out818;
                    resultingOwnership = _out819;
                  } else {
                    RAST._IType _4196___mcc_h1587 = _source163.dtor_value;
                    RAST._IType _4197_v = _4196___mcc_h1587;
                    RAST._IType _4198_toTpeRust;
                    RAST._IType _out820;
                    _out820 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4198_toTpeRust = _out820;
                    r = (((_4193_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4198_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out821;
                    DCOMP._IOwnership _out822;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out821, out _out822);
                    r = _out821;
                    resultingOwnership = _out822;
                  }
                } else {
                  if ((_4192_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4199_recursiveGen;
                      DCOMP._IOwnership _4200_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4201_recIdents;
                      RAST._IExpr _out823;
                      DCOMP._IOwnership _out824;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out825;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out823, out _out824, out _out825);
                      _4199_recursiveGen = _out823;
                      _4200_recOwned = _out824;
                      _4201_recIdents = _out825;
                      RAST._IExpr _out826;
                      DCOMP._IOwnership _out827;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4199_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4200_recOwned, expectedOwnership, out _out826, out _out827);
                      r = _out826;
                      resultingOwnership = _out827;
                      readIdents = _4201_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out828;
                  DCOMP._IOwnership _out829;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out830;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4191_b), _4191_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out828, out _out829, out _out830);
                  r = _out828;
                  resultingOwnership = _out829;
                  readIdents = _out830;
                }
              }
            } else if (_source147.is_Primitive) {
              DAST._IPrimitive _4202___mcc_h291 = _source147.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _4203_attributes = _3955___mcc_h203;
              bool _4204_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4205_range = _3953___mcc_h201;
              DAST._IType _4206_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4207_nativeFromType;
                _4207_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4206_b, _4205_range);
                if (object.Equals(_4206_b, _3471_toTpe)) {
                  RAST._IExpr _4208_recursiveGen;
                  DCOMP._IOwnership _4209_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4210_recIdents;
                  RAST._IExpr _out831;
                  DCOMP._IOwnership _out832;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out833;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out831, out _out832, out _out833);
                  _4208_recursiveGen = _out831;
                  _4209_recOwned = _out832;
                  _4210_recIdents = _out833;
                  readIdents = _4210_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source164 = _4207_nativeFromType;
                  if (_source164.is_None) {
                    if (_4204_erase) {
                      r = _4208_recursiveGen;
                    } else {
                      r = (_4208_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out834;
                    DCOMP._IOwnership _out835;
                    DCOMP.COMP.FromOwnership(r, _4209_recOwned, expectedOwnership, out _out834, out _out835);
                    r = _out834;
                    resultingOwnership = _out835;
                  } else {
                    RAST._IType _4211___mcc_h1588 = _source164.dtor_value;
                    RAST._IType _4212_v = _4211___mcc_h1588;
                    RAST._IType _4213_toTpeRust;
                    RAST._IType _out836;
                    _out836 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4213_toTpeRust = _out836;
                    r = (((_4208_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4213_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out837;
                    DCOMP._IOwnership _out838;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out837, out _out838);
                    r = _out837;
                    resultingOwnership = _out838;
                  }
                } else {
                  if ((_4207_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4214_recursiveGen;
                      DCOMP._IOwnership _4215_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4216_recIdents;
                      RAST._IExpr _out839;
                      DCOMP._IOwnership _out840;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out841;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out839, out _out840, out _out841);
                      _4214_recursiveGen = _out839;
                      _4215_recOwned = _out840;
                      _4216_recIdents = _out841;
                      RAST._IExpr _out842;
                      DCOMP._IOwnership _out843;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4214_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4215_recOwned, expectedOwnership, out _out842, out _out843);
                      r = _out842;
                      resultingOwnership = _out843;
                      readIdents = _4216_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out844;
                  DCOMP._IOwnership _out845;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out846;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4206_b), _4206_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out844, out _out845, out _out846);
                  r = _out844;
                  resultingOwnership = _out845;
                  readIdents = _out846;
                }
              }
            } else if (_source147.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4217___mcc_h294 = _source147.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _4218_attributes = _3955___mcc_h203;
              bool _4219_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4220_range = _3953___mcc_h201;
              DAST._IType _4221_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4222_nativeFromType;
                _4222_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4221_b, _4220_range);
                if (object.Equals(_4221_b, _3471_toTpe)) {
                  RAST._IExpr _4223_recursiveGen;
                  DCOMP._IOwnership _4224_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4225_recIdents;
                  RAST._IExpr _out847;
                  DCOMP._IOwnership _out848;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out849;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out847, out _out848, out _out849);
                  _4223_recursiveGen = _out847;
                  _4224_recOwned = _out848;
                  _4225_recIdents = _out849;
                  readIdents = _4225_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source165 = _4222_nativeFromType;
                  if (_source165.is_None) {
                    if (_4219_erase) {
                      r = _4223_recursiveGen;
                    } else {
                      r = (_4223_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out850;
                    DCOMP._IOwnership _out851;
                    DCOMP.COMP.FromOwnership(r, _4224_recOwned, expectedOwnership, out _out850, out _out851);
                    r = _out850;
                    resultingOwnership = _out851;
                  } else {
                    RAST._IType _4226___mcc_h1589 = _source165.dtor_value;
                    RAST._IType _4227_v = _4226___mcc_h1589;
                    RAST._IType _4228_toTpeRust;
                    RAST._IType _out852;
                    _out852 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4228_toTpeRust = _out852;
                    r = (((_4223_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4228_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out853;
                    DCOMP._IOwnership _out854;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out853, out _out854);
                    r = _out853;
                    resultingOwnership = _out854;
                  }
                } else {
                  if ((_4222_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4229_recursiveGen;
                      DCOMP._IOwnership _4230_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4231_recIdents;
                      RAST._IExpr _out855;
                      DCOMP._IOwnership _out856;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out857;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out855, out _out856, out _out857);
                      _4229_recursiveGen = _out855;
                      _4230_recOwned = _out856;
                      _4231_recIdents = _out857;
                      RAST._IExpr _out858;
                      DCOMP._IOwnership _out859;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4229_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4230_recOwned, expectedOwnership, out _out858, out _out859);
                      r = _out858;
                      resultingOwnership = _out859;
                      readIdents = _4231_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out860;
                  DCOMP._IOwnership _out861;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out862;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4221_b), _4221_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out860, out _out861, out _out862);
                  r = _out860;
                  resultingOwnership = _out861;
                  readIdents = _out862;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4232___mcc_h297 = _source147.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _4233_attributes = _3955___mcc_h203;
              bool _4234_erase = _3954___mcc_h202;
              DAST._INewtypeRange _4235_range = _3953___mcc_h201;
              DAST._IType _4236_b = _3952___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _4237_nativeFromType;
                _4237_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4236_b, _4235_range);
                if (object.Equals(_4236_b, _3471_toTpe)) {
                  RAST._IExpr _4238_recursiveGen;
                  DCOMP._IOwnership _4239_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4240_recIdents;
                  RAST._IExpr _out863;
                  DCOMP._IOwnership _out864;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out865;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out863, out _out864, out _out865);
                  _4238_recursiveGen = _out863;
                  _4239_recOwned = _out864;
                  _4240_recIdents = _out865;
                  readIdents = _4240_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source166 = _4237_nativeFromType;
                  if (_source166.is_None) {
                    if (_4234_erase) {
                      r = _4238_recursiveGen;
                    } else {
                      r = (_4238_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out866;
                    DCOMP._IOwnership _out867;
                    DCOMP.COMP.FromOwnership(r, _4239_recOwned, expectedOwnership, out _out866, out _out867);
                    r = _out866;
                    resultingOwnership = _out867;
                  } else {
                    RAST._IType _4241___mcc_h1590 = _source166.dtor_value;
                    RAST._IType _4242_v = _4241___mcc_h1590;
                    RAST._IType _4243_toTpeRust;
                    RAST._IType _out868;
                    _out868 = DCOMP.COMP.GenType(_3471_toTpe, false, false);
                    _4243_toTpeRust = _out868;
                    r = (((_4238_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4243_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out869;
                    DCOMP._IOwnership _out870;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out869, out _out870);
                    r = _out869;
                    resultingOwnership = _out870;
                  }
                } else {
                  if ((_4237_nativeFromType).is_Some) {
                    if (object.Equals(_3471_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4244_recursiveGen;
                      DCOMP._IOwnership _4245_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4246_recIdents;
                      RAST._IExpr _out871;
                      DCOMP._IOwnership _out872;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out873;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out871, out _out872, out _out873);
                      _4244_recursiveGen = _out871;
                      _4245_recOwned = _out872;
                      _4246_recIdents = _out873;
                      RAST._IExpr _out874;
                      DCOMP._IOwnership _out875;
                      DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMP.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_4244_recursiveGen, DCOMP.__default.DafnyCharUnderlying)), _4245_recOwned, expectedOwnership, out _out874, out _out875);
                      r = _out874;
                      resultingOwnership = _out875;
                      readIdents = _4246_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out876;
                  DCOMP._IOwnership _out877;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out878;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4236_b), _4236_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out876, out _out877, out _out878);
                  r = _out876;
                  resultingOwnership = _out877;
                  readIdents = _out878;
                }
              }
            }
          }
        } else if (_source130.is_Nullable) {
          DAST._IType _4247___mcc_h300 = _source130.dtor_Nullable_a0;
          DAST._IType _source167 = _3476___mcc_h1;
          if (_source167.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4248___mcc_h304 = _source167.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4249___mcc_h305 = _source167.dtor_typeArgs;
            DAST._IResolvedType _4250___mcc_h306 = _source167.dtor_resolved;
            DAST._IResolvedType _source168 = _4250___mcc_h306;
            if (_source168.is_AllocatedDatatype) {
              DAST._IDatatypeType _4251___mcc_h313 = _source168.dtor_datatypeType;
              {
                RAST._IExpr _4252_recursiveGen;
                DCOMP._IOwnership _4253_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4254_recIdents;
                RAST._IExpr _out879;
                DCOMP._IOwnership _out880;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out881;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out879, out _out880, out _out881);
                _4252_recursiveGen = _out879;
                _4253_recOwned = _out880;
                _4254_recIdents = _out881;
                r = _4252_recursiveGen;
                if (object.Equals(_4253_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out882;
                DCOMP._IOwnership _out883;
                DCOMP.COMP.FromOwnership(r, _4253_recOwned, expectedOwnership, out _out882, out _out883);
                r = _out882;
                resultingOwnership = _out883;
                readIdents = _4254_recIdents;
              }
            } else if (_source168.is_Datatype) {
              DAST._IDatatypeType _4255___mcc_h316 = _source168.dtor_datatypeType;
              {
                RAST._IExpr _4256_recursiveGen;
                DCOMP._IOwnership _4257_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4258_recIdents;
                RAST._IExpr _out884;
                DCOMP._IOwnership _out885;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out886;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out884, out _out885, out _out886);
                _4256_recursiveGen = _out884;
                _4257_recOwned = _out885;
                _4258_recIdents = _out886;
                r = _4256_recursiveGen;
                if (object.Equals(_4257_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out887;
                DCOMP._IOwnership _out888;
                DCOMP.COMP.FromOwnership(r, _4257_recOwned, expectedOwnership, out _out887, out _out888);
                r = _out887;
                resultingOwnership = _out888;
                readIdents = _4258_recIdents;
              }
            } else if (_source168.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4259___mcc_h319 = _source168.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4260___mcc_h320 = _source168.dtor_attributes;
              {
                RAST._IExpr _4261_recursiveGen;
                DCOMP._IOwnership _4262_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4263_recIdents;
                RAST._IExpr _out889;
                DCOMP._IOwnership _out890;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out891;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out889, out _out890, out _out891);
                _4261_recursiveGen = _out889;
                _4262_recOwned = _out890;
                _4263_recIdents = _out891;
                r = _4261_recursiveGen;
                if (object.Equals(_4262_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out892;
                DCOMP._IOwnership _out893;
                DCOMP.COMP.FromOwnership(r, _4262_recOwned, expectedOwnership, out _out892, out _out893);
                r = _out892;
                resultingOwnership = _out893;
                readIdents = _4263_recIdents;
              }
            } else {
              DAST._IType _4264___mcc_h325 = _source168.dtor_baseType;
              DAST._INewtypeRange _4265___mcc_h326 = _source168.dtor_range;
              bool _4266___mcc_h327 = _source168.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4267___mcc_h328 = _source168.dtor_attributes;
              {
                RAST._IExpr _4268_recursiveGen;
                DCOMP._IOwnership _4269_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4270_recIdents;
                RAST._IExpr _out894;
                DCOMP._IOwnership _out895;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out896;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out894, out _out895, out _out896);
                _4268_recursiveGen = _out894;
                _4269_recOwned = _out895;
                _4270_recIdents = _out896;
                r = _4268_recursiveGen;
                if (object.Equals(_4269_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out897;
                DCOMP._IOwnership _out898;
                DCOMP.COMP.FromOwnership(r, _4269_recOwned, expectedOwnership, out _out897, out _out898);
                r = _out897;
                resultingOwnership = _out898;
                readIdents = _4270_recIdents;
              }
            }
          } else if (_source167.is_Nullable) {
            DAST._IType _4271___mcc_h337 = _source167.dtor_Nullable_a0;
            {
              RAST._IExpr _4272_recursiveGen;
              DCOMP._IOwnership _4273_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4274_recIdents;
              RAST._IExpr _out899;
              DCOMP._IOwnership _out900;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out901;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out899, out _out900, out _out901);
              _4272_recursiveGen = _out899;
              _4273_recOwned = _out900;
              _4274_recIdents = _out901;
              r = _4272_recursiveGen;
              if (object.Equals(_4273_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out902;
              DCOMP._IOwnership _out903;
              DCOMP.COMP.FromOwnership(r, _4273_recOwned, expectedOwnership, out _out902, out _out903);
              r = _out902;
              resultingOwnership = _out903;
              readIdents = _4274_recIdents;
            }
          } else if (_source167.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4275___mcc_h340 = _source167.dtor_Tuple_a0;
            {
              RAST._IExpr _4276_recursiveGen;
              DCOMP._IOwnership _4277_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4278_recIdents;
              RAST._IExpr _out904;
              DCOMP._IOwnership _out905;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out906;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out904, out _out905, out _out906);
              _4276_recursiveGen = _out904;
              _4277_recOwned = _out905;
              _4278_recIdents = _out906;
              r = _4276_recursiveGen;
              if (object.Equals(_4277_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out907;
              DCOMP._IOwnership _out908;
              DCOMP.COMP.FromOwnership(r, _4277_recOwned, expectedOwnership, out _out907, out _out908);
              r = _out907;
              resultingOwnership = _out908;
              readIdents = _4278_recIdents;
            }
          } else if (_source167.is_Array) {
            DAST._IType _4279___mcc_h343 = _source167.dtor_element;
            BigInteger _4280___mcc_h344 = _source167.dtor_dims;
            {
              RAST._IExpr _4281_recursiveGen;
              DCOMP._IOwnership _4282_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4283_recIdents;
              RAST._IExpr _out909;
              DCOMP._IOwnership _out910;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out911;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out909, out _out910, out _out911);
              _4281_recursiveGen = _out909;
              _4282_recOwned = _out910;
              _4283_recIdents = _out911;
              r = _4281_recursiveGen;
              if (object.Equals(_4282_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out912;
              DCOMP._IOwnership _out913;
              DCOMP.COMP.FromOwnership(r, _4282_recOwned, expectedOwnership, out _out912, out _out913);
              r = _out912;
              resultingOwnership = _out913;
              readIdents = _4283_recIdents;
            }
          } else if (_source167.is_Seq) {
            DAST._IType _4284___mcc_h349 = _source167.dtor_element;
            {
              RAST._IExpr _4285_recursiveGen;
              DCOMP._IOwnership _4286_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4287_recIdents;
              RAST._IExpr _out914;
              DCOMP._IOwnership _out915;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out916;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out914, out _out915, out _out916);
              _4285_recursiveGen = _out914;
              _4286_recOwned = _out915;
              _4287_recIdents = _out916;
              r = _4285_recursiveGen;
              if (object.Equals(_4286_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out917;
              DCOMP._IOwnership _out918;
              DCOMP.COMP.FromOwnership(r, _4286_recOwned, expectedOwnership, out _out917, out _out918);
              r = _out917;
              resultingOwnership = _out918;
              readIdents = _4287_recIdents;
            }
          } else if (_source167.is_Set) {
            DAST._IType _4288___mcc_h352 = _source167.dtor_element;
            {
              RAST._IExpr _4289_recursiveGen;
              DCOMP._IOwnership _4290_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4291_recIdents;
              RAST._IExpr _out919;
              DCOMP._IOwnership _out920;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out921;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out919, out _out920, out _out921);
              _4289_recursiveGen = _out919;
              _4290_recOwned = _out920;
              _4291_recIdents = _out921;
              r = _4289_recursiveGen;
              if (object.Equals(_4290_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out922;
              DCOMP._IOwnership _out923;
              DCOMP.COMP.FromOwnership(r, _4290_recOwned, expectedOwnership, out _out922, out _out923);
              r = _out922;
              resultingOwnership = _out923;
              readIdents = _4291_recIdents;
            }
          } else if (_source167.is_Multiset) {
            DAST._IType _4292___mcc_h355 = _source167.dtor_element;
            {
              RAST._IExpr _4293_recursiveGen;
              DCOMP._IOwnership _4294_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4295_recIdents;
              RAST._IExpr _out924;
              DCOMP._IOwnership _out925;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out926;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out924, out _out925, out _out926);
              _4293_recursiveGen = _out924;
              _4294_recOwned = _out925;
              _4295_recIdents = _out926;
              r = _4293_recursiveGen;
              if (object.Equals(_4294_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out927;
              DCOMP._IOwnership _out928;
              DCOMP.COMP.FromOwnership(r, _4294_recOwned, expectedOwnership, out _out927, out _out928);
              r = _out927;
              resultingOwnership = _out928;
              readIdents = _4295_recIdents;
            }
          } else if (_source167.is_Map) {
            DAST._IType _4296___mcc_h358 = _source167.dtor_key;
            DAST._IType _4297___mcc_h359 = _source167.dtor_value;
            {
              RAST._IExpr _4298_recursiveGen;
              DCOMP._IOwnership _4299_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4300_recIdents;
              RAST._IExpr _out929;
              DCOMP._IOwnership _out930;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out931;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out929, out _out930, out _out931);
              _4298_recursiveGen = _out929;
              _4299_recOwned = _out930;
              _4300_recIdents = _out931;
              r = _4298_recursiveGen;
              if (object.Equals(_4299_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out932;
              DCOMP._IOwnership _out933;
              DCOMP.COMP.FromOwnership(r, _4299_recOwned, expectedOwnership, out _out932, out _out933);
              r = _out932;
              resultingOwnership = _out933;
              readIdents = _4300_recIdents;
            }
          } else if (_source167.is_SetBuilder) {
            DAST._IType _4301___mcc_h364 = _source167.dtor_element;
            {
              RAST._IExpr _4302_recursiveGen;
              DCOMP._IOwnership _4303_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4304_recIdents;
              RAST._IExpr _out934;
              DCOMP._IOwnership _out935;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out936;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out934, out _out935, out _out936);
              _4302_recursiveGen = _out934;
              _4303_recOwned = _out935;
              _4304_recIdents = _out936;
              r = _4302_recursiveGen;
              if (object.Equals(_4303_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out937;
              DCOMP._IOwnership _out938;
              DCOMP.COMP.FromOwnership(r, _4303_recOwned, expectedOwnership, out _out937, out _out938);
              r = _out937;
              resultingOwnership = _out938;
              readIdents = _4304_recIdents;
            }
          } else if (_source167.is_MapBuilder) {
            DAST._IType _4305___mcc_h367 = _source167.dtor_key;
            DAST._IType _4306___mcc_h368 = _source167.dtor_value;
            {
              RAST._IExpr _4307_recursiveGen;
              DCOMP._IOwnership _4308_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4309_recIdents;
              RAST._IExpr _out939;
              DCOMP._IOwnership _out940;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out941;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out939, out _out940, out _out941);
              _4307_recursiveGen = _out939;
              _4308_recOwned = _out940;
              _4309_recIdents = _out941;
              r = _4307_recursiveGen;
              if (object.Equals(_4308_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out942;
              DCOMP._IOwnership _out943;
              DCOMP.COMP.FromOwnership(r, _4308_recOwned, expectedOwnership, out _out942, out _out943);
              r = _out942;
              resultingOwnership = _out943;
              readIdents = _4309_recIdents;
            }
          } else if (_source167.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4310___mcc_h373 = _source167.dtor_args;
            DAST._IType _4311___mcc_h374 = _source167.dtor_result;
            {
              RAST._IExpr _4312_recursiveGen;
              DCOMP._IOwnership _4313_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4314_recIdents;
              RAST._IExpr _out944;
              DCOMP._IOwnership _out945;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out946;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out944, out _out945, out _out946);
              _4312_recursiveGen = _out944;
              _4313_recOwned = _out945;
              _4314_recIdents = _out946;
              r = _4312_recursiveGen;
              if (object.Equals(_4313_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out947;
              DCOMP._IOwnership _out948;
              DCOMP.COMP.FromOwnership(r, _4313_recOwned, expectedOwnership, out _out947, out _out948);
              r = _out947;
              resultingOwnership = _out948;
              readIdents = _4314_recIdents;
            }
          } else if (_source167.is_Primitive) {
            DAST._IPrimitive _4315___mcc_h379 = _source167.dtor_Primitive_a0;
            {
              RAST._IExpr _4316_recursiveGen;
              DCOMP._IOwnership _4317_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4318_recIdents;
              RAST._IExpr _out949;
              DCOMP._IOwnership _out950;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out951;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out949, out _out950, out _out951);
              _4316_recursiveGen = _out949;
              _4317_recOwned = _out950;
              _4318_recIdents = _out951;
              r = _4316_recursiveGen;
              if (object.Equals(_4317_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out952;
              DCOMP._IOwnership _out953;
              DCOMP.COMP.FromOwnership(r, _4317_recOwned, expectedOwnership, out _out952, out _out953);
              r = _out952;
              resultingOwnership = _out953;
              readIdents = _4318_recIdents;
            }
          } else if (_source167.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4319___mcc_h382 = _source167.dtor_Passthrough_a0;
            {
              RAST._IExpr _4320_recursiveGen;
              DCOMP._IOwnership _4321_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4322_recIdents;
              RAST._IExpr _out954;
              DCOMP._IOwnership _out955;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out956;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out954, out _out955, out _out956);
              _4320_recursiveGen = _out954;
              _4321_recOwned = _out955;
              _4322_recIdents = _out956;
              r = _4320_recursiveGen;
              if (object.Equals(_4321_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out957;
              DCOMP._IOwnership _out958;
              DCOMP.COMP.FromOwnership(r, _4321_recOwned, expectedOwnership, out _out957, out _out958);
              r = _out957;
              resultingOwnership = _out958;
              readIdents = _4322_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4323___mcc_h385 = _source167.dtor_TypeArg_a0;
            {
              RAST._IExpr _4324_recursiveGen;
              DCOMP._IOwnership _4325_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4326_recIdents;
              RAST._IExpr _out959;
              DCOMP._IOwnership _out960;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out961;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out959, out _out960, out _out961);
              _4324_recursiveGen = _out959;
              _4325_recOwned = _out960;
              _4326_recIdents = _out961;
              r = _4324_recursiveGen;
              if (object.Equals(_4325_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out962;
              DCOMP._IOwnership _out963;
              DCOMP.COMP.FromOwnership(r, _4325_recOwned, expectedOwnership, out _out962, out _out963);
              r = _out962;
              resultingOwnership = _out963;
              readIdents = _4326_recIdents;
            }
          }
        } else if (_source130.is_Tuple) {
          Dafny.ISequence<DAST._IType> _4327___mcc_h388 = _source130.dtor_Tuple_a0;
          DAST._IType _source169 = _3476___mcc_h1;
          if (_source169.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4328___mcc_h392 = _source169.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4329___mcc_h393 = _source169.dtor_typeArgs;
            DAST._IResolvedType _4330___mcc_h394 = _source169.dtor_resolved;
            DAST._IResolvedType _source170 = _4330___mcc_h394;
            if (_source170.is_AllocatedDatatype) {
              DAST._IDatatypeType _4331___mcc_h398 = _source170.dtor_datatypeType;
              {
                RAST._IType _4332_fromTpeGen;
                RAST._IType _out964;
                _out964 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4332_fromTpeGen = _out964;
                RAST._IType _4333_toTpeGen;
                RAST._IType _out965;
                _out965 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4333_toTpeGen = _out965;
                RAST._IExpr _4334_recursiveGen;
                DCOMP._IOwnership _4335_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4336_recIdents;
                RAST._IExpr _out966;
                DCOMP._IOwnership _out967;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out968;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out966, out _out967, out _out968);
                _4334_recursiveGen = _out966;
                _4335_recOwned = _out967;
                _4336_recIdents = _out968;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4334_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4332_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4333_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out969;
                DCOMP._IOwnership _out970;
                DCOMP.COMP.FromOwnership(r, _4335_recOwned, expectedOwnership, out _out969, out _out970);
                r = _out969;
                resultingOwnership = _out970;
                readIdents = _4336_recIdents;
              }
            } else if (_source170.is_Datatype) {
              DAST._IDatatypeType _4337___mcc_h400 = _source170.dtor_datatypeType;
              {
                RAST._IType _4338_fromTpeGen;
                RAST._IType _out971;
                _out971 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4338_fromTpeGen = _out971;
                RAST._IType _4339_toTpeGen;
                RAST._IType _out972;
                _out972 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4339_toTpeGen = _out972;
                RAST._IExpr _4340_recursiveGen;
                DCOMP._IOwnership _4341_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4342_recIdents;
                RAST._IExpr _out973;
                DCOMP._IOwnership _out974;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out975;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out973, out _out974, out _out975);
                _4340_recursiveGen = _out973;
                _4341_recOwned = _out974;
                _4342_recIdents = _out975;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4340_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4338_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4339_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out976;
                DCOMP._IOwnership _out977;
                DCOMP.COMP.FromOwnership(r, _4341_recOwned, expectedOwnership, out _out976, out _out977);
                r = _out976;
                resultingOwnership = _out977;
                readIdents = _4342_recIdents;
              }
            } else if (_source170.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4343___mcc_h402 = _source170.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4344___mcc_h403 = _source170.dtor_attributes;
              {
                RAST._IType _4345_fromTpeGen;
                RAST._IType _out978;
                _out978 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4345_fromTpeGen = _out978;
                RAST._IType _4346_toTpeGen;
                RAST._IType _out979;
                _out979 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4346_toTpeGen = _out979;
                RAST._IExpr _4347_recursiveGen;
                DCOMP._IOwnership _4348_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4349_recIdents;
                RAST._IExpr _out980;
                DCOMP._IOwnership _out981;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out982;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out980, out _out981, out _out982);
                _4347_recursiveGen = _out980;
                _4348_recOwned = _out981;
                _4349_recIdents = _out982;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4347_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4345_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4346_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out983;
                DCOMP._IOwnership _out984;
                DCOMP.COMP.FromOwnership(r, _4348_recOwned, expectedOwnership, out _out983, out _out984);
                r = _out983;
                resultingOwnership = _out984;
                readIdents = _4349_recIdents;
              }
            } else {
              DAST._IType _4350___mcc_h406 = _source170.dtor_baseType;
              DAST._INewtypeRange _4351___mcc_h407 = _source170.dtor_range;
              bool _4352___mcc_h408 = _source170.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4353___mcc_h409 = _source170.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4354_attributes = _4353___mcc_h409;
              bool _4355_erase = _4352___mcc_h408;
              DAST._INewtypeRange _4356_range = _4351___mcc_h407;
              DAST._IType _4357_b = _4350___mcc_h406;
              {
                Std.Wrappers._IOption<RAST._IType> _4358_nativeToType;
                _4358_nativeToType = DCOMP.COMP.NewtypeToRustType(_4357_b, _4356_range);
                if (object.Equals(_3470_fromTpe, _4357_b)) {
                  RAST._IExpr _4359_recursiveGen;
                  DCOMP._IOwnership _4360_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4361_recIdents;
                  RAST._IExpr _out985;
                  DCOMP._IOwnership _out986;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out987;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out985, out _out986, out _out987);
                  _4359_recursiveGen = _out985;
                  _4360_recOwned = _out986;
                  _4361_recIdents = _out987;
                  readIdents = _4361_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source171 = _4358_nativeToType;
                  if (_source171.is_None) {
                    if (_4355_erase) {
                      r = _4359_recursiveGen;
                    } else {
                      RAST._IType _4362_rhsType;
                      RAST._IType _out988;
                      _out988 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _4362_rhsType = _out988;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4362_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4359_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out989;
                    DCOMP._IOwnership _out990;
                    DCOMP.COMP.FromOwnership(r, _4360_recOwned, expectedOwnership, out _out989, out _out990);
                    r = _out989;
                    resultingOwnership = _out990;
                  } else {
                    RAST._IType _4363___mcc_h1591 = _source171.dtor_value;
                    RAST._IType _4364_v = _4363___mcc_h1591;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4359_recursiveGen, RAST.Expr.create_ExprFromType(_4364_v)));
                    RAST._IExpr _out991;
                    DCOMP._IOwnership _out992;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out991, out _out992);
                    r = _out991;
                    resultingOwnership = _out992;
                  }
                } else {
                  if ((_4358_nativeToType).is_Some) {
                    DAST._IType _source172 = _3470_fromTpe;
                    if (_source172.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4365___mcc_h1592 = _source172.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4366___mcc_h1593 = _source172.dtor_typeArgs;
                      DAST._IResolvedType _4367___mcc_h1594 = _source172.dtor_resolved;
                      DAST._IResolvedType _source173 = _4367___mcc_h1594;
                      if (_source173.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4368___mcc_h1598 = _source173.dtor_datatypeType;
                      } else if (_source173.is_Datatype) {
                        DAST._IDatatypeType _4369___mcc_h1600 = _source173.dtor_datatypeType;
                      } else if (_source173.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4370___mcc_h1602 = _source173.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4371___mcc_h1603 = _source173.dtor_attributes;
                      } else {
                        DAST._IType _4372___mcc_h1606 = _source173.dtor_baseType;
                        DAST._INewtypeRange _4373___mcc_h1607 = _source173.dtor_range;
                        bool _4374___mcc_h1608 = _source173.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4375___mcc_h1609 = _source173.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4376_attributes0 = _4375___mcc_h1609;
                        bool _4377_erase0 = _4374___mcc_h1608;
                        DAST._INewtypeRange _4378_range0 = _4373___mcc_h1607;
                        DAST._IType _4379_b0 = _4372___mcc_h1606;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4380_nativeFromType;
                          _4380_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4379_b0, _4378_range0);
                          if ((_4380_nativeFromType).is_Some) {
                            RAST._IExpr _4381_recursiveGen;
                            DCOMP._IOwnership _4382_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4383_recIdents;
                            RAST._IExpr _out993;
                            DCOMP._IOwnership _out994;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out995;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out993, out _out994, out _out995);
                            _4381_recursiveGen = _out993;
                            _4382_recOwned = _out994;
                            _4383_recIdents = _out995;
                            RAST._IExpr _out996;
                            DCOMP._IOwnership _out997;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4381_recursiveGen, (_4358_nativeToType).dtor_value), _4382_recOwned, expectedOwnership, out _out996, out _out997);
                            r = _out996;
                            resultingOwnership = _out997;
                            readIdents = _4383_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source172.is_Nullable) {
                      DAST._IType _4384___mcc_h1614 = _source172.dtor_Nullable_a0;
                    } else if (_source172.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4385___mcc_h1616 = _source172.dtor_Tuple_a0;
                    } else if (_source172.is_Array) {
                      DAST._IType _4386___mcc_h1618 = _source172.dtor_element;
                      BigInteger _4387___mcc_h1619 = _source172.dtor_dims;
                    } else if (_source172.is_Seq) {
                      DAST._IType _4388___mcc_h1622 = _source172.dtor_element;
                    } else if (_source172.is_Set) {
                      DAST._IType _4389___mcc_h1624 = _source172.dtor_element;
                    } else if (_source172.is_Multiset) {
                      DAST._IType _4390___mcc_h1626 = _source172.dtor_element;
                    } else if (_source172.is_Map) {
                      DAST._IType _4391___mcc_h1628 = _source172.dtor_key;
                      DAST._IType _4392___mcc_h1629 = _source172.dtor_value;
                    } else if (_source172.is_SetBuilder) {
                      DAST._IType _4393___mcc_h1632 = _source172.dtor_element;
                    } else if (_source172.is_MapBuilder) {
                      DAST._IType _4394___mcc_h1634 = _source172.dtor_key;
                      DAST._IType _4395___mcc_h1635 = _source172.dtor_value;
                    } else if (_source172.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4396___mcc_h1638 = _source172.dtor_args;
                      DAST._IType _4397___mcc_h1639 = _source172.dtor_result;
                    } else if (_source172.is_Primitive) {
                      DAST._IPrimitive _4398___mcc_h1642 = _source172.dtor_Primitive_a0;
                    } else if (_source172.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4399___mcc_h1644 = _source172.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4400___mcc_h1646 = _source172.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4401_recursiveGen;
                      DCOMP._IOwnership _4402_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4403_recIdents;
                      RAST._IExpr _out998;
                      DCOMP._IOwnership _out999;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1000;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out998, out _out999, out _out1000);
                      _4401_recursiveGen = _out998;
                      _4402_recOwned = _out999;
                      _4403_recIdents = _out1000;
                      RAST._IExpr _out1001;
                      DCOMP._IOwnership _out1002;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4401_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4358_nativeToType).dtor_value), _4402_recOwned, expectedOwnership, out _out1001, out _out1002);
                      r = _out1001;
                      resultingOwnership = _out1002;
                      readIdents = _4403_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1003;
                  DCOMP._IOwnership _out1004;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1005;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4357_b), _4357_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1003, out _out1004, out _out1005);
                  r = _out1003;
                  resultingOwnership = _out1004;
                  readIdents = _out1005;
                }
              }
            }
          } else if (_source169.is_Nullable) {
            DAST._IType _4404___mcc_h414 = _source169.dtor_Nullable_a0;
            {
              RAST._IExpr _4405_recursiveGen;
              DCOMP._IOwnership _4406_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4407_recIdents;
              RAST._IExpr _out1006;
              DCOMP._IOwnership _out1007;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1008;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1006, out _out1007, out _out1008);
              _4405_recursiveGen = _out1006;
              _4406_recOwned = _out1007;
              _4407_recIdents = _out1008;
              r = _4405_recursiveGen;
              if (object.Equals(_4406_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1009;
              DCOMP._IOwnership _out1010;
              DCOMP.COMP.FromOwnership(r, _4406_recOwned, expectedOwnership, out _out1009, out _out1010);
              r = _out1009;
              resultingOwnership = _out1010;
              readIdents = _4407_recIdents;
            }
          } else if (_source169.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4408___mcc_h416 = _source169.dtor_Tuple_a0;
            {
              RAST._IType _4409_fromTpeGen;
              RAST._IType _out1011;
              _out1011 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4409_fromTpeGen = _out1011;
              RAST._IType _4410_toTpeGen;
              RAST._IType _out1012;
              _out1012 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4410_toTpeGen = _out1012;
              RAST._IExpr _4411_recursiveGen;
              DCOMP._IOwnership _4412_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4413_recIdents;
              RAST._IExpr _out1013;
              DCOMP._IOwnership _out1014;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1015;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1013, out _out1014, out _out1015);
              _4411_recursiveGen = _out1013;
              _4412_recOwned = _out1014;
              _4413_recIdents = _out1015;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4411_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4409_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4410_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1016;
              DCOMP._IOwnership _out1017;
              DCOMP.COMP.FromOwnership(r, _4412_recOwned, expectedOwnership, out _out1016, out _out1017);
              r = _out1016;
              resultingOwnership = _out1017;
              readIdents = _4413_recIdents;
            }
          } else if (_source169.is_Array) {
            DAST._IType _4414___mcc_h418 = _source169.dtor_element;
            BigInteger _4415___mcc_h419 = _source169.dtor_dims;
            {
              RAST._IType _4416_fromTpeGen;
              RAST._IType _out1018;
              _out1018 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4416_fromTpeGen = _out1018;
              RAST._IType _4417_toTpeGen;
              RAST._IType _out1019;
              _out1019 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4417_toTpeGen = _out1019;
              RAST._IExpr _4418_recursiveGen;
              DCOMP._IOwnership _4419_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4420_recIdents;
              RAST._IExpr _out1020;
              DCOMP._IOwnership _out1021;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1022;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1020, out _out1021, out _out1022);
              _4418_recursiveGen = _out1020;
              _4419_recOwned = _out1021;
              _4420_recIdents = _out1022;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4418_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4416_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4417_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1023;
              DCOMP._IOwnership _out1024;
              DCOMP.COMP.FromOwnership(r, _4419_recOwned, expectedOwnership, out _out1023, out _out1024);
              r = _out1023;
              resultingOwnership = _out1024;
              readIdents = _4420_recIdents;
            }
          } else if (_source169.is_Seq) {
            DAST._IType _4421___mcc_h422 = _source169.dtor_element;
            {
              RAST._IType _4422_fromTpeGen;
              RAST._IType _out1025;
              _out1025 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4422_fromTpeGen = _out1025;
              RAST._IType _4423_toTpeGen;
              RAST._IType _out1026;
              _out1026 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4423_toTpeGen = _out1026;
              RAST._IExpr _4424_recursiveGen;
              DCOMP._IOwnership _4425_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4426_recIdents;
              RAST._IExpr _out1027;
              DCOMP._IOwnership _out1028;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1029;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1027, out _out1028, out _out1029);
              _4424_recursiveGen = _out1027;
              _4425_recOwned = _out1028;
              _4426_recIdents = _out1029;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4424_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4422_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4423_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1030;
              DCOMP._IOwnership _out1031;
              DCOMP.COMP.FromOwnership(r, _4425_recOwned, expectedOwnership, out _out1030, out _out1031);
              r = _out1030;
              resultingOwnership = _out1031;
              readIdents = _4426_recIdents;
            }
          } else if (_source169.is_Set) {
            DAST._IType _4427___mcc_h424 = _source169.dtor_element;
            {
              RAST._IType _4428_fromTpeGen;
              RAST._IType _out1032;
              _out1032 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4428_fromTpeGen = _out1032;
              RAST._IType _4429_toTpeGen;
              RAST._IType _out1033;
              _out1033 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4429_toTpeGen = _out1033;
              RAST._IExpr _4430_recursiveGen;
              DCOMP._IOwnership _4431_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4432_recIdents;
              RAST._IExpr _out1034;
              DCOMP._IOwnership _out1035;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1036;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1034, out _out1035, out _out1036);
              _4430_recursiveGen = _out1034;
              _4431_recOwned = _out1035;
              _4432_recIdents = _out1036;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4430_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4428_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4429_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1037;
              DCOMP._IOwnership _out1038;
              DCOMP.COMP.FromOwnership(r, _4431_recOwned, expectedOwnership, out _out1037, out _out1038);
              r = _out1037;
              resultingOwnership = _out1038;
              readIdents = _4432_recIdents;
            }
          } else if (_source169.is_Multiset) {
            DAST._IType _4433___mcc_h426 = _source169.dtor_element;
            {
              RAST._IType _4434_fromTpeGen;
              RAST._IType _out1039;
              _out1039 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4434_fromTpeGen = _out1039;
              RAST._IType _4435_toTpeGen;
              RAST._IType _out1040;
              _out1040 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4435_toTpeGen = _out1040;
              RAST._IExpr _4436_recursiveGen;
              DCOMP._IOwnership _4437_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4438_recIdents;
              RAST._IExpr _out1041;
              DCOMP._IOwnership _out1042;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1043;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1041, out _out1042, out _out1043);
              _4436_recursiveGen = _out1041;
              _4437_recOwned = _out1042;
              _4438_recIdents = _out1043;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4436_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4434_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4435_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1044;
              DCOMP._IOwnership _out1045;
              DCOMP.COMP.FromOwnership(r, _4437_recOwned, expectedOwnership, out _out1044, out _out1045);
              r = _out1044;
              resultingOwnership = _out1045;
              readIdents = _4438_recIdents;
            }
          } else if (_source169.is_Map) {
            DAST._IType _4439___mcc_h428 = _source169.dtor_key;
            DAST._IType _4440___mcc_h429 = _source169.dtor_value;
            {
              RAST._IType _4441_fromTpeGen;
              RAST._IType _out1046;
              _out1046 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4441_fromTpeGen = _out1046;
              RAST._IType _4442_toTpeGen;
              RAST._IType _out1047;
              _out1047 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4442_toTpeGen = _out1047;
              RAST._IExpr _4443_recursiveGen;
              DCOMP._IOwnership _4444_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4445_recIdents;
              RAST._IExpr _out1048;
              DCOMP._IOwnership _out1049;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1050;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1048, out _out1049, out _out1050);
              _4443_recursiveGen = _out1048;
              _4444_recOwned = _out1049;
              _4445_recIdents = _out1050;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4443_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4441_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4442_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1051;
              DCOMP._IOwnership _out1052;
              DCOMP.COMP.FromOwnership(r, _4444_recOwned, expectedOwnership, out _out1051, out _out1052);
              r = _out1051;
              resultingOwnership = _out1052;
              readIdents = _4445_recIdents;
            }
          } else if (_source169.is_SetBuilder) {
            DAST._IType _4446___mcc_h432 = _source169.dtor_element;
            {
              RAST._IType _4447_fromTpeGen;
              RAST._IType _out1053;
              _out1053 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4447_fromTpeGen = _out1053;
              RAST._IType _4448_toTpeGen;
              RAST._IType _out1054;
              _out1054 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4448_toTpeGen = _out1054;
              RAST._IExpr _4449_recursiveGen;
              DCOMP._IOwnership _4450_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4451_recIdents;
              RAST._IExpr _out1055;
              DCOMP._IOwnership _out1056;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1057;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1055, out _out1056, out _out1057);
              _4449_recursiveGen = _out1055;
              _4450_recOwned = _out1056;
              _4451_recIdents = _out1057;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4449_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4447_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4448_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1058;
              DCOMP._IOwnership _out1059;
              DCOMP.COMP.FromOwnership(r, _4450_recOwned, expectedOwnership, out _out1058, out _out1059);
              r = _out1058;
              resultingOwnership = _out1059;
              readIdents = _4451_recIdents;
            }
          } else if (_source169.is_MapBuilder) {
            DAST._IType _4452___mcc_h434 = _source169.dtor_key;
            DAST._IType _4453___mcc_h435 = _source169.dtor_value;
            {
              RAST._IType _4454_fromTpeGen;
              RAST._IType _out1060;
              _out1060 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4454_fromTpeGen = _out1060;
              RAST._IType _4455_toTpeGen;
              RAST._IType _out1061;
              _out1061 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4455_toTpeGen = _out1061;
              RAST._IExpr _4456_recursiveGen;
              DCOMP._IOwnership _4457_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4458_recIdents;
              RAST._IExpr _out1062;
              DCOMP._IOwnership _out1063;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1064;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1062, out _out1063, out _out1064);
              _4456_recursiveGen = _out1062;
              _4457_recOwned = _out1063;
              _4458_recIdents = _out1064;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4456_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4454_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4455_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1065;
              DCOMP._IOwnership _out1066;
              DCOMP.COMP.FromOwnership(r, _4457_recOwned, expectedOwnership, out _out1065, out _out1066);
              r = _out1065;
              resultingOwnership = _out1066;
              readIdents = _4458_recIdents;
            }
          } else if (_source169.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4459___mcc_h438 = _source169.dtor_args;
            DAST._IType _4460___mcc_h439 = _source169.dtor_result;
            {
              RAST._IType _4461_fromTpeGen;
              RAST._IType _out1067;
              _out1067 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4461_fromTpeGen = _out1067;
              RAST._IType _4462_toTpeGen;
              RAST._IType _out1068;
              _out1068 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4462_toTpeGen = _out1068;
              RAST._IExpr _4463_recursiveGen;
              DCOMP._IOwnership _4464_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4465_recIdents;
              RAST._IExpr _out1069;
              DCOMP._IOwnership _out1070;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1071;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1069, out _out1070, out _out1071);
              _4463_recursiveGen = _out1069;
              _4464_recOwned = _out1070;
              _4465_recIdents = _out1071;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4463_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4461_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4462_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1072;
              DCOMP._IOwnership _out1073;
              DCOMP.COMP.FromOwnership(r, _4464_recOwned, expectedOwnership, out _out1072, out _out1073);
              r = _out1072;
              resultingOwnership = _out1073;
              readIdents = _4465_recIdents;
            }
          } else if (_source169.is_Primitive) {
            DAST._IPrimitive _4466___mcc_h442 = _source169.dtor_Primitive_a0;
            {
              RAST._IType _4467_fromTpeGen;
              RAST._IType _out1074;
              _out1074 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4467_fromTpeGen = _out1074;
              RAST._IType _4468_toTpeGen;
              RAST._IType _out1075;
              _out1075 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4468_toTpeGen = _out1075;
              RAST._IExpr _4469_recursiveGen;
              DCOMP._IOwnership _4470_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4471_recIdents;
              RAST._IExpr _out1076;
              DCOMP._IOwnership _out1077;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1078;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1076, out _out1077, out _out1078);
              _4469_recursiveGen = _out1076;
              _4470_recOwned = _out1077;
              _4471_recIdents = _out1078;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4469_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4467_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4468_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1079;
              DCOMP._IOwnership _out1080;
              DCOMP.COMP.FromOwnership(r, _4470_recOwned, expectedOwnership, out _out1079, out _out1080);
              r = _out1079;
              resultingOwnership = _out1080;
              readIdents = _4471_recIdents;
            }
          } else if (_source169.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4472___mcc_h444 = _source169.dtor_Passthrough_a0;
            {
              RAST._IType _4473_fromTpeGen;
              RAST._IType _out1081;
              _out1081 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4473_fromTpeGen = _out1081;
              RAST._IType _4474_toTpeGen;
              RAST._IType _out1082;
              _out1082 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4474_toTpeGen = _out1082;
              RAST._IExpr _4475_recursiveGen;
              DCOMP._IOwnership _4476_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4477_recIdents;
              RAST._IExpr _out1083;
              DCOMP._IOwnership _out1084;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1085;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1083, out _out1084, out _out1085);
              _4475_recursiveGen = _out1083;
              _4476_recOwned = _out1084;
              _4477_recIdents = _out1085;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4475_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4473_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4474_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1086;
              DCOMP._IOwnership _out1087;
              DCOMP.COMP.FromOwnership(r, _4476_recOwned, expectedOwnership, out _out1086, out _out1087);
              r = _out1086;
              resultingOwnership = _out1087;
              readIdents = _4477_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4478___mcc_h446 = _source169.dtor_TypeArg_a0;
            {
              RAST._IType _4479_fromTpeGen;
              RAST._IType _out1088;
              _out1088 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4479_fromTpeGen = _out1088;
              RAST._IType _4480_toTpeGen;
              RAST._IType _out1089;
              _out1089 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4480_toTpeGen = _out1089;
              RAST._IExpr _4481_recursiveGen;
              DCOMP._IOwnership _4482_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4483_recIdents;
              RAST._IExpr _out1090;
              DCOMP._IOwnership _out1091;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1092;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1090, out _out1091, out _out1092);
              _4481_recursiveGen = _out1090;
              _4482_recOwned = _out1091;
              _4483_recIdents = _out1092;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4481_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4479_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4480_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1093;
              DCOMP._IOwnership _out1094;
              DCOMP.COMP.FromOwnership(r, _4482_recOwned, expectedOwnership, out _out1093, out _out1094);
              r = _out1093;
              resultingOwnership = _out1094;
              readIdents = _4483_recIdents;
            }
          }
        } else if (_source130.is_Array) {
          DAST._IType _4484___mcc_h448 = _source130.dtor_element;
          BigInteger _4485___mcc_h449 = _source130.dtor_dims;
          DAST._IType _source174 = _3476___mcc_h1;
          if (_source174.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4486___mcc_h456 = _source174.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4487___mcc_h457 = _source174.dtor_typeArgs;
            DAST._IResolvedType _4488___mcc_h458 = _source174.dtor_resolved;
            DAST._IResolvedType _source175 = _4488___mcc_h458;
            if (_source175.is_AllocatedDatatype) {
              DAST._IDatatypeType _4489___mcc_h462 = _source175.dtor_datatypeType;
              {
                RAST._IType _4490_fromTpeGen;
                RAST._IType _out1095;
                _out1095 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4490_fromTpeGen = _out1095;
                RAST._IType _4491_toTpeGen;
                RAST._IType _out1096;
                _out1096 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4491_toTpeGen = _out1096;
                RAST._IExpr _4492_recursiveGen;
                DCOMP._IOwnership _4493_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4494_recIdents;
                RAST._IExpr _out1097;
                DCOMP._IOwnership _out1098;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1099;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1097, out _out1098, out _out1099);
                _4492_recursiveGen = _out1097;
                _4493_recOwned = _out1098;
                _4494_recIdents = _out1099;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4492_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4490_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4491_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1100;
                DCOMP._IOwnership _out1101;
                DCOMP.COMP.FromOwnership(r, _4493_recOwned, expectedOwnership, out _out1100, out _out1101);
                r = _out1100;
                resultingOwnership = _out1101;
                readIdents = _4494_recIdents;
              }
            } else if (_source175.is_Datatype) {
              DAST._IDatatypeType _4495___mcc_h464 = _source175.dtor_datatypeType;
              {
                RAST._IType _4496_fromTpeGen;
                RAST._IType _out1102;
                _out1102 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4496_fromTpeGen = _out1102;
                RAST._IType _4497_toTpeGen;
                RAST._IType _out1103;
                _out1103 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4497_toTpeGen = _out1103;
                RAST._IExpr _4498_recursiveGen;
                DCOMP._IOwnership _4499_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4500_recIdents;
                RAST._IExpr _out1104;
                DCOMP._IOwnership _out1105;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1106;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1104, out _out1105, out _out1106);
                _4498_recursiveGen = _out1104;
                _4499_recOwned = _out1105;
                _4500_recIdents = _out1106;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4498_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4496_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4497_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1107;
                DCOMP._IOwnership _out1108;
                DCOMP.COMP.FromOwnership(r, _4499_recOwned, expectedOwnership, out _out1107, out _out1108);
                r = _out1107;
                resultingOwnership = _out1108;
                readIdents = _4500_recIdents;
              }
            } else if (_source175.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4501___mcc_h466 = _source175.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4502___mcc_h467 = _source175.dtor_attributes;
              {
                RAST._IType _4503_fromTpeGen;
                RAST._IType _out1109;
                _out1109 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4503_fromTpeGen = _out1109;
                RAST._IType _4504_toTpeGen;
                RAST._IType _out1110;
                _out1110 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4504_toTpeGen = _out1110;
                RAST._IExpr _4505_recursiveGen;
                DCOMP._IOwnership _4506_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4507_recIdents;
                RAST._IExpr _out1111;
                DCOMP._IOwnership _out1112;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1113;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1111, out _out1112, out _out1113);
                _4505_recursiveGen = _out1111;
                _4506_recOwned = _out1112;
                _4507_recIdents = _out1113;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4505_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4503_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4504_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1114;
                DCOMP._IOwnership _out1115;
                DCOMP.COMP.FromOwnership(r, _4506_recOwned, expectedOwnership, out _out1114, out _out1115);
                r = _out1114;
                resultingOwnership = _out1115;
                readIdents = _4507_recIdents;
              }
            } else {
              DAST._IType _4508___mcc_h470 = _source175.dtor_baseType;
              DAST._INewtypeRange _4509___mcc_h471 = _source175.dtor_range;
              bool _4510___mcc_h472 = _source175.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4511___mcc_h473 = _source175.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4512_attributes = _4511___mcc_h473;
              bool _4513_erase = _4510___mcc_h472;
              DAST._INewtypeRange _4514_range = _4509___mcc_h471;
              DAST._IType _4515_b = _4508___mcc_h470;
              {
                Std.Wrappers._IOption<RAST._IType> _4516_nativeToType;
                _4516_nativeToType = DCOMP.COMP.NewtypeToRustType(_4515_b, _4514_range);
                if (object.Equals(_3470_fromTpe, _4515_b)) {
                  RAST._IExpr _4517_recursiveGen;
                  DCOMP._IOwnership _4518_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4519_recIdents;
                  RAST._IExpr _out1116;
                  DCOMP._IOwnership _out1117;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1118;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1116, out _out1117, out _out1118);
                  _4517_recursiveGen = _out1116;
                  _4518_recOwned = _out1117;
                  _4519_recIdents = _out1118;
                  readIdents = _4519_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source176 = _4516_nativeToType;
                  if (_source176.is_None) {
                    if (_4513_erase) {
                      r = _4517_recursiveGen;
                    } else {
                      RAST._IType _4520_rhsType;
                      RAST._IType _out1119;
                      _out1119 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _4520_rhsType = _out1119;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4520_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4517_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1120;
                    DCOMP._IOwnership _out1121;
                    DCOMP.COMP.FromOwnership(r, _4518_recOwned, expectedOwnership, out _out1120, out _out1121);
                    r = _out1120;
                    resultingOwnership = _out1121;
                  } else {
                    RAST._IType _4521___mcc_h1648 = _source176.dtor_value;
                    RAST._IType _4522_v = _4521___mcc_h1648;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4517_recursiveGen, RAST.Expr.create_ExprFromType(_4522_v)));
                    RAST._IExpr _out1122;
                    DCOMP._IOwnership _out1123;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1122, out _out1123);
                    r = _out1122;
                    resultingOwnership = _out1123;
                  }
                } else {
                  if ((_4516_nativeToType).is_Some) {
                    DAST._IType _source177 = _3470_fromTpe;
                    if (_source177.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4523___mcc_h1649 = _source177.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4524___mcc_h1650 = _source177.dtor_typeArgs;
                      DAST._IResolvedType _4525___mcc_h1651 = _source177.dtor_resolved;
                      DAST._IResolvedType _source178 = _4525___mcc_h1651;
                      if (_source178.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4526___mcc_h1655 = _source178.dtor_datatypeType;
                      } else if (_source178.is_Datatype) {
                        DAST._IDatatypeType _4527___mcc_h1657 = _source178.dtor_datatypeType;
                      } else if (_source178.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4528___mcc_h1659 = _source178.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4529___mcc_h1660 = _source178.dtor_attributes;
                      } else {
                        DAST._IType _4530___mcc_h1663 = _source178.dtor_baseType;
                        DAST._INewtypeRange _4531___mcc_h1664 = _source178.dtor_range;
                        bool _4532___mcc_h1665 = _source178.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4533___mcc_h1666 = _source178.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4534_attributes0 = _4533___mcc_h1666;
                        bool _4535_erase0 = _4532___mcc_h1665;
                        DAST._INewtypeRange _4536_range0 = _4531___mcc_h1664;
                        DAST._IType _4537_b0 = _4530___mcc_h1663;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4538_nativeFromType;
                          _4538_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4537_b0, _4536_range0);
                          if ((_4538_nativeFromType).is_Some) {
                            RAST._IExpr _4539_recursiveGen;
                            DCOMP._IOwnership _4540_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4541_recIdents;
                            RAST._IExpr _out1124;
                            DCOMP._IOwnership _out1125;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1126;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1124, out _out1125, out _out1126);
                            _4539_recursiveGen = _out1124;
                            _4540_recOwned = _out1125;
                            _4541_recIdents = _out1126;
                            RAST._IExpr _out1127;
                            DCOMP._IOwnership _out1128;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4539_recursiveGen, (_4516_nativeToType).dtor_value), _4540_recOwned, expectedOwnership, out _out1127, out _out1128);
                            r = _out1127;
                            resultingOwnership = _out1128;
                            readIdents = _4541_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source177.is_Nullable) {
                      DAST._IType _4542___mcc_h1671 = _source177.dtor_Nullable_a0;
                    } else if (_source177.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4543___mcc_h1673 = _source177.dtor_Tuple_a0;
                    } else if (_source177.is_Array) {
                      DAST._IType _4544___mcc_h1675 = _source177.dtor_element;
                      BigInteger _4545___mcc_h1676 = _source177.dtor_dims;
                    } else if (_source177.is_Seq) {
                      DAST._IType _4546___mcc_h1679 = _source177.dtor_element;
                    } else if (_source177.is_Set) {
                      DAST._IType _4547___mcc_h1681 = _source177.dtor_element;
                    } else if (_source177.is_Multiset) {
                      DAST._IType _4548___mcc_h1683 = _source177.dtor_element;
                    } else if (_source177.is_Map) {
                      DAST._IType _4549___mcc_h1685 = _source177.dtor_key;
                      DAST._IType _4550___mcc_h1686 = _source177.dtor_value;
                    } else if (_source177.is_SetBuilder) {
                      DAST._IType _4551___mcc_h1689 = _source177.dtor_element;
                    } else if (_source177.is_MapBuilder) {
                      DAST._IType _4552___mcc_h1691 = _source177.dtor_key;
                      DAST._IType _4553___mcc_h1692 = _source177.dtor_value;
                    } else if (_source177.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4554___mcc_h1695 = _source177.dtor_args;
                      DAST._IType _4555___mcc_h1696 = _source177.dtor_result;
                    } else if (_source177.is_Primitive) {
                      DAST._IPrimitive _4556___mcc_h1699 = _source177.dtor_Primitive_a0;
                    } else if (_source177.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4557___mcc_h1701 = _source177.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4558___mcc_h1703 = _source177.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4559_recursiveGen;
                      DCOMP._IOwnership _4560_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4561_recIdents;
                      RAST._IExpr _out1129;
                      DCOMP._IOwnership _out1130;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1131;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1129, out _out1130, out _out1131);
                      _4559_recursiveGen = _out1129;
                      _4560_recOwned = _out1130;
                      _4561_recIdents = _out1131;
                      RAST._IExpr _out1132;
                      DCOMP._IOwnership _out1133;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4559_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4516_nativeToType).dtor_value), _4560_recOwned, expectedOwnership, out _out1132, out _out1133);
                      r = _out1132;
                      resultingOwnership = _out1133;
                      readIdents = _4561_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1134;
                  DCOMP._IOwnership _out1135;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1136;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4515_b), _4515_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1134, out _out1135, out _out1136);
                  r = _out1134;
                  resultingOwnership = _out1135;
                  readIdents = _out1136;
                }
              }
            }
          } else if (_source174.is_Nullable) {
            DAST._IType _4562___mcc_h478 = _source174.dtor_Nullable_a0;
            {
              RAST._IExpr _4563_recursiveGen;
              DCOMP._IOwnership _4564_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4565_recIdents;
              RAST._IExpr _out1137;
              DCOMP._IOwnership _out1138;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1139;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1137, out _out1138, out _out1139);
              _4563_recursiveGen = _out1137;
              _4564_recOwned = _out1138;
              _4565_recIdents = _out1139;
              r = _4563_recursiveGen;
              if (object.Equals(_4564_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1140;
              DCOMP._IOwnership _out1141;
              DCOMP.COMP.FromOwnership(r, _4564_recOwned, expectedOwnership, out _out1140, out _out1141);
              r = _out1140;
              resultingOwnership = _out1141;
              readIdents = _4565_recIdents;
            }
          } else if (_source174.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4566___mcc_h480 = _source174.dtor_Tuple_a0;
            {
              RAST._IType _4567_fromTpeGen;
              RAST._IType _out1142;
              _out1142 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4567_fromTpeGen = _out1142;
              RAST._IType _4568_toTpeGen;
              RAST._IType _out1143;
              _out1143 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4568_toTpeGen = _out1143;
              RAST._IExpr _4569_recursiveGen;
              DCOMP._IOwnership _4570_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4571_recIdents;
              RAST._IExpr _out1144;
              DCOMP._IOwnership _out1145;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1146;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1144, out _out1145, out _out1146);
              _4569_recursiveGen = _out1144;
              _4570_recOwned = _out1145;
              _4571_recIdents = _out1146;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4569_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4567_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4568_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1147;
              DCOMP._IOwnership _out1148;
              DCOMP.COMP.FromOwnership(r, _4570_recOwned, expectedOwnership, out _out1147, out _out1148);
              r = _out1147;
              resultingOwnership = _out1148;
              readIdents = _4571_recIdents;
            }
          } else if (_source174.is_Array) {
            DAST._IType _4572___mcc_h482 = _source174.dtor_element;
            BigInteger _4573___mcc_h483 = _source174.dtor_dims;
            {
              RAST._IType _4574_fromTpeGen;
              RAST._IType _out1149;
              _out1149 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4574_fromTpeGen = _out1149;
              RAST._IType _4575_toTpeGen;
              RAST._IType _out1150;
              _out1150 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4575_toTpeGen = _out1150;
              RAST._IExpr _4576_recursiveGen;
              DCOMP._IOwnership _4577_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4578_recIdents;
              RAST._IExpr _out1151;
              DCOMP._IOwnership _out1152;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1153;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1151, out _out1152, out _out1153);
              _4576_recursiveGen = _out1151;
              _4577_recOwned = _out1152;
              _4578_recIdents = _out1153;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4576_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4574_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4575_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1154;
              DCOMP._IOwnership _out1155;
              DCOMP.COMP.FromOwnership(r, _4577_recOwned, expectedOwnership, out _out1154, out _out1155);
              r = _out1154;
              resultingOwnership = _out1155;
              readIdents = _4578_recIdents;
            }
          } else if (_source174.is_Seq) {
            DAST._IType _4579___mcc_h486 = _source174.dtor_element;
            {
              RAST._IType _4580_fromTpeGen;
              RAST._IType _out1156;
              _out1156 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4580_fromTpeGen = _out1156;
              RAST._IType _4581_toTpeGen;
              RAST._IType _out1157;
              _out1157 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4581_toTpeGen = _out1157;
              RAST._IExpr _4582_recursiveGen;
              DCOMP._IOwnership _4583_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4584_recIdents;
              RAST._IExpr _out1158;
              DCOMP._IOwnership _out1159;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1160;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1158, out _out1159, out _out1160);
              _4582_recursiveGen = _out1158;
              _4583_recOwned = _out1159;
              _4584_recIdents = _out1160;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4582_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4580_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4581_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1161;
              DCOMP._IOwnership _out1162;
              DCOMP.COMP.FromOwnership(r, _4583_recOwned, expectedOwnership, out _out1161, out _out1162);
              r = _out1161;
              resultingOwnership = _out1162;
              readIdents = _4584_recIdents;
            }
          } else if (_source174.is_Set) {
            DAST._IType _4585___mcc_h488 = _source174.dtor_element;
            {
              RAST._IType _4586_fromTpeGen;
              RAST._IType _out1163;
              _out1163 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4586_fromTpeGen = _out1163;
              RAST._IType _4587_toTpeGen;
              RAST._IType _out1164;
              _out1164 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4587_toTpeGen = _out1164;
              RAST._IExpr _4588_recursiveGen;
              DCOMP._IOwnership _4589_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4590_recIdents;
              RAST._IExpr _out1165;
              DCOMP._IOwnership _out1166;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1167;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1165, out _out1166, out _out1167);
              _4588_recursiveGen = _out1165;
              _4589_recOwned = _out1166;
              _4590_recIdents = _out1167;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4588_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4586_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4587_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1168;
              DCOMP._IOwnership _out1169;
              DCOMP.COMP.FromOwnership(r, _4589_recOwned, expectedOwnership, out _out1168, out _out1169);
              r = _out1168;
              resultingOwnership = _out1169;
              readIdents = _4590_recIdents;
            }
          } else if (_source174.is_Multiset) {
            DAST._IType _4591___mcc_h490 = _source174.dtor_element;
            {
              RAST._IType _4592_fromTpeGen;
              RAST._IType _out1170;
              _out1170 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4592_fromTpeGen = _out1170;
              RAST._IType _4593_toTpeGen;
              RAST._IType _out1171;
              _out1171 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4593_toTpeGen = _out1171;
              RAST._IExpr _4594_recursiveGen;
              DCOMP._IOwnership _4595_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4596_recIdents;
              RAST._IExpr _out1172;
              DCOMP._IOwnership _out1173;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1174;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1172, out _out1173, out _out1174);
              _4594_recursiveGen = _out1172;
              _4595_recOwned = _out1173;
              _4596_recIdents = _out1174;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4594_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4592_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4593_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1175;
              DCOMP._IOwnership _out1176;
              DCOMP.COMP.FromOwnership(r, _4595_recOwned, expectedOwnership, out _out1175, out _out1176);
              r = _out1175;
              resultingOwnership = _out1176;
              readIdents = _4596_recIdents;
            }
          } else if (_source174.is_Map) {
            DAST._IType _4597___mcc_h492 = _source174.dtor_key;
            DAST._IType _4598___mcc_h493 = _source174.dtor_value;
            {
              RAST._IType _4599_fromTpeGen;
              RAST._IType _out1177;
              _out1177 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4599_fromTpeGen = _out1177;
              RAST._IType _4600_toTpeGen;
              RAST._IType _out1178;
              _out1178 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4600_toTpeGen = _out1178;
              RAST._IExpr _4601_recursiveGen;
              DCOMP._IOwnership _4602_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4603_recIdents;
              RAST._IExpr _out1179;
              DCOMP._IOwnership _out1180;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1181;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1179, out _out1180, out _out1181);
              _4601_recursiveGen = _out1179;
              _4602_recOwned = _out1180;
              _4603_recIdents = _out1181;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4601_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4599_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4600_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1182;
              DCOMP._IOwnership _out1183;
              DCOMP.COMP.FromOwnership(r, _4602_recOwned, expectedOwnership, out _out1182, out _out1183);
              r = _out1182;
              resultingOwnership = _out1183;
              readIdents = _4603_recIdents;
            }
          } else if (_source174.is_SetBuilder) {
            DAST._IType _4604___mcc_h496 = _source174.dtor_element;
            {
              RAST._IType _4605_fromTpeGen;
              RAST._IType _out1184;
              _out1184 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4605_fromTpeGen = _out1184;
              RAST._IType _4606_toTpeGen;
              RAST._IType _out1185;
              _out1185 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4606_toTpeGen = _out1185;
              RAST._IExpr _4607_recursiveGen;
              DCOMP._IOwnership _4608_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4609_recIdents;
              RAST._IExpr _out1186;
              DCOMP._IOwnership _out1187;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1188;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1186, out _out1187, out _out1188);
              _4607_recursiveGen = _out1186;
              _4608_recOwned = _out1187;
              _4609_recIdents = _out1188;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4607_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4605_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4606_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1189;
              DCOMP._IOwnership _out1190;
              DCOMP.COMP.FromOwnership(r, _4608_recOwned, expectedOwnership, out _out1189, out _out1190);
              r = _out1189;
              resultingOwnership = _out1190;
              readIdents = _4609_recIdents;
            }
          } else if (_source174.is_MapBuilder) {
            DAST._IType _4610___mcc_h498 = _source174.dtor_key;
            DAST._IType _4611___mcc_h499 = _source174.dtor_value;
            {
              RAST._IType _4612_fromTpeGen;
              RAST._IType _out1191;
              _out1191 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4612_fromTpeGen = _out1191;
              RAST._IType _4613_toTpeGen;
              RAST._IType _out1192;
              _out1192 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4613_toTpeGen = _out1192;
              RAST._IExpr _4614_recursiveGen;
              DCOMP._IOwnership _4615_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4616_recIdents;
              RAST._IExpr _out1193;
              DCOMP._IOwnership _out1194;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1195;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1193, out _out1194, out _out1195);
              _4614_recursiveGen = _out1193;
              _4615_recOwned = _out1194;
              _4616_recIdents = _out1195;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4614_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4612_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4613_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1196;
              DCOMP._IOwnership _out1197;
              DCOMP.COMP.FromOwnership(r, _4615_recOwned, expectedOwnership, out _out1196, out _out1197);
              r = _out1196;
              resultingOwnership = _out1197;
              readIdents = _4616_recIdents;
            }
          } else if (_source174.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4617___mcc_h502 = _source174.dtor_args;
            DAST._IType _4618___mcc_h503 = _source174.dtor_result;
            {
              RAST._IType _4619_fromTpeGen;
              RAST._IType _out1198;
              _out1198 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4619_fromTpeGen = _out1198;
              RAST._IType _4620_toTpeGen;
              RAST._IType _out1199;
              _out1199 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4620_toTpeGen = _out1199;
              RAST._IExpr _4621_recursiveGen;
              DCOMP._IOwnership _4622_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4623_recIdents;
              RAST._IExpr _out1200;
              DCOMP._IOwnership _out1201;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1202;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1200, out _out1201, out _out1202);
              _4621_recursiveGen = _out1200;
              _4622_recOwned = _out1201;
              _4623_recIdents = _out1202;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4621_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4619_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4620_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1203;
              DCOMP._IOwnership _out1204;
              DCOMP.COMP.FromOwnership(r, _4622_recOwned, expectedOwnership, out _out1203, out _out1204);
              r = _out1203;
              resultingOwnership = _out1204;
              readIdents = _4623_recIdents;
            }
          } else if (_source174.is_Primitive) {
            DAST._IPrimitive _4624___mcc_h506 = _source174.dtor_Primitive_a0;
            {
              RAST._IType _4625_fromTpeGen;
              RAST._IType _out1205;
              _out1205 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4625_fromTpeGen = _out1205;
              RAST._IType _4626_toTpeGen;
              RAST._IType _out1206;
              _out1206 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4626_toTpeGen = _out1206;
              RAST._IExpr _4627_recursiveGen;
              DCOMP._IOwnership _4628_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4629_recIdents;
              RAST._IExpr _out1207;
              DCOMP._IOwnership _out1208;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1209;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1207, out _out1208, out _out1209);
              _4627_recursiveGen = _out1207;
              _4628_recOwned = _out1208;
              _4629_recIdents = _out1209;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4627_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4625_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4626_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1210;
              DCOMP._IOwnership _out1211;
              DCOMP.COMP.FromOwnership(r, _4628_recOwned, expectedOwnership, out _out1210, out _out1211);
              r = _out1210;
              resultingOwnership = _out1211;
              readIdents = _4629_recIdents;
            }
          } else if (_source174.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4630___mcc_h508 = _source174.dtor_Passthrough_a0;
            {
              RAST._IType _4631_fromTpeGen;
              RAST._IType _out1212;
              _out1212 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4631_fromTpeGen = _out1212;
              RAST._IType _4632_toTpeGen;
              RAST._IType _out1213;
              _out1213 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4632_toTpeGen = _out1213;
              RAST._IExpr _4633_recursiveGen;
              DCOMP._IOwnership _4634_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4635_recIdents;
              RAST._IExpr _out1214;
              DCOMP._IOwnership _out1215;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1216;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1214, out _out1215, out _out1216);
              _4633_recursiveGen = _out1214;
              _4634_recOwned = _out1215;
              _4635_recIdents = _out1216;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4633_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4631_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4632_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1217;
              DCOMP._IOwnership _out1218;
              DCOMP.COMP.FromOwnership(r, _4634_recOwned, expectedOwnership, out _out1217, out _out1218);
              r = _out1217;
              resultingOwnership = _out1218;
              readIdents = _4635_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4636___mcc_h510 = _source174.dtor_TypeArg_a0;
            {
              RAST._IType _4637_fromTpeGen;
              RAST._IType _out1219;
              _out1219 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4637_fromTpeGen = _out1219;
              RAST._IType _4638_toTpeGen;
              RAST._IType _out1220;
              _out1220 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4638_toTpeGen = _out1220;
              RAST._IExpr _4639_recursiveGen;
              DCOMP._IOwnership _4640_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4641_recIdents;
              RAST._IExpr _out1221;
              DCOMP._IOwnership _out1222;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1223;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1221, out _out1222, out _out1223);
              _4639_recursiveGen = _out1221;
              _4640_recOwned = _out1222;
              _4641_recIdents = _out1223;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4639_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4637_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4638_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1224;
              DCOMP._IOwnership _out1225;
              DCOMP.COMP.FromOwnership(r, _4640_recOwned, expectedOwnership, out _out1224, out _out1225);
              r = _out1224;
              resultingOwnership = _out1225;
              readIdents = _4641_recIdents;
            }
          }
        } else if (_source130.is_Seq) {
          DAST._IType _4642___mcc_h512 = _source130.dtor_element;
          DAST._IType _source179 = _3476___mcc_h1;
          if (_source179.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4643___mcc_h516 = _source179.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4644___mcc_h517 = _source179.dtor_typeArgs;
            DAST._IResolvedType _4645___mcc_h518 = _source179.dtor_resolved;
            DAST._IResolvedType _source180 = _4645___mcc_h518;
            if (_source180.is_AllocatedDatatype) {
              DAST._IDatatypeType _4646___mcc_h522 = _source180.dtor_datatypeType;
              {
                RAST._IType _4647_fromTpeGen;
                RAST._IType _out1226;
                _out1226 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4647_fromTpeGen = _out1226;
                RAST._IType _4648_toTpeGen;
                RAST._IType _out1227;
                _out1227 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4648_toTpeGen = _out1227;
                RAST._IExpr _4649_recursiveGen;
                DCOMP._IOwnership _4650_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4651_recIdents;
                RAST._IExpr _out1228;
                DCOMP._IOwnership _out1229;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1230;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1228, out _out1229, out _out1230);
                _4649_recursiveGen = _out1228;
                _4650_recOwned = _out1229;
                _4651_recIdents = _out1230;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4649_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4647_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4648_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1231;
                DCOMP._IOwnership _out1232;
                DCOMP.COMP.FromOwnership(r, _4650_recOwned, expectedOwnership, out _out1231, out _out1232);
                r = _out1231;
                resultingOwnership = _out1232;
                readIdents = _4651_recIdents;
              }
            } else if (_source180.is_Datatype) {
              DAST._IDatatypeType _4652___mcc_h524 = _source180.dtor_datatypeType;
              {
                RAST._IType _4653_fromTpeGen;
                RAST._IType _out1233;
                _out1233 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4653_fromTpeGen = _out1233;
                RAST._IType _4654_toTpeGen;
                RAST._IType _out1234;
                _out1234 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4654_toTpeGen = _out1234;
                RAST._IExpr _4655_recursiveGen;
                DCOMP._IOwnership _4656_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4657_recIdents;
                RAST._IExpr _out1235;
                DCOMP._IOwnership _out1236;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1237;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1235, out _out1236, out _out1237);
                _4655_recursiveGen = _out1235;
                _4656_recOwned = _out1236;
                _4657_recIdents = _out1237;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4655_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4653_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4654_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1238;
                DCOMP._IOwnership _out1239;
                DCOMP.COMP.FromOwnership(r, _4656_recOwned, expectedOwnership, out _out1238, out _out1239);
                r = _out1238;
                resultingOwnership = _out1239;
                readIdents = _4657_recIdents;
              }
            } else if (_source180.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4658___mcc_h526 = _source180.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4659___mcc_h527 = _source180.dtor_attributes;
              {
                RAST._IType _4660_fromTpeGen;
                RAST._IType _out1240;
                _out1240 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4660_fromTpeGen = _out1240;
                RAST._IType _4661_toTpeGen;
                RAST._IType _out1241;
                _out1241 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4661_toTpeGen = _out1241;
                RAST._IExpr _4662_recursiveGen;
                DCOMP._IOwnership _4663_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4664_recIdents;
                RAST._IExpr _out1242;
                DCOMP._IOwnership _out1243;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1244;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1242, out _out1243, out _out1244);
                _4662_recursiveGen = _out1242;
                _4663_recOwned = _out1243;
                _4664_recIdents = _out1244;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4662_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4660_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4661_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1245;
                DCOMP._IOwnership _out1246;
                DCOMP.COMP.FromOwnership(r, _4663_recOwned, expectedOwnership, out _out1245, out _out1246);
                r = _out1245;
                resultingOwnership = _out1246;
                readIdents = _4664_recIdents;
              }
            } else {
              DAST._IType _4665___mcc_h530 = _source180.dtor_baseType;
              DAST._INewtypeRange _4666___mcc_h531 = _source180.dtor_range;
              bool _4667___mcc_h532 = _source180.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4668___mcc_h533 = _source180.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4669_attributes = _4668___mcc_h533;
              bool _4670_erase = _4667___mcc_h532;
              DAST._INewtypeRange _4671_range = _4666___mcc_h531;
              DAST._IType _4672_b = _4665___mcc_h530;
              {
                Std.Wrappers._IOption<RAST._IType> _4673_nativeToType;
                _4673_nativeToType = DCOMP.COMP.NewtypeToRustType(_4672_b, _4671_range);
                if (object.Equals(_3470_fromTpe, _4672_b)) {
                  RAST._IExpr _4674_recursiveGen;
                  DCOMP._IOwnership _4675_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4676_recIdents;
                  RAST._IExpr _out1247;
                  DCOMP._IOwnership _out1248;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1249;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1247, out _out1248, out _out1249);
                  _4674_recursiveGen = _out1247;
                  _4675_recOwned = _out1248;
                  _4676_recIdents = _out1249;
                  readIdents = _4676_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source181 = _4673_nativeToType;
                  if (_source181.is_None) {
                    if (_4670_erase) {
                      r = _4674_recursiveGen;
                    } else {
                      RAST._IType _4677_rhsType;
                      RAST._IType _out1250;
                      _out1250 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _4677_rhsType = _out1250;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4677_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4674_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1251;
                    DCOMP._IOwnership _out1252;
                    DCOMP.COMP.FromOwnership(r, _4675_recOwned, expectedOwnership, out _out1251, out _out1252);
                    r = _out1251;
                    resultingOwnership = _out1252;
                  } else {
                    RAST._IType _4678___mcc_h1705 = _source181.dtor_value;
                    RAST._IType _4679_v = _4678___mcc_h1705;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4674_recursiveGen, RAST.Expr.create_ExprFromType(_4679_v)));
                    RAST._IExpr _out1253;
                    DCOMP._IOwnership _out1254;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1253, out _out1254);
                    r = _out1253;
                    resultingOwnership = _out1254;
                  }
                } else {
                  if ((_4673_nativeToType).is_Some) {
                    DAST._IType _source182 = _3470_fromTpe;
                    if (_source182.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4680___mcc_h1706 = _source182.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4681___mcc_h1707 = _source182.dtor_typeArgs;
                      DAST._IResolvedType _4682___mcc_h1708 = _source182.dtor_resolved;
                      DAST._IResolvedType _source183 = _4682___mcc_h1708;
                      if (_source183.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4683___mcc_h1712 = _source183.dtor_datatypeType;
                      } else if (_source183.is_Datatype) {
                        DAST._IDatatypeType _4684___mcc_h1714 = _source183.dtor_datatypeType;
                      } else if (_source183.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4685___mcc_h1716 = _source183.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4686___mcc_h1717 = _source183.dtor_attributes;
                      } else {
                        DAST._IType _4687___mcc_h1720 = _source183.dtor_baseType;
                        DAST._INewtypeRange _4688___mcc_h1721 = _source183.dtor_range;
                        bool _4689___mcc_h1722 = _source183.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4690___mcc_h1723 = _source183.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4691_attributes0 = _4690___mcc_h1723;
                        bool _4692_erase0 = _4689___mcc_h1722;
                        DAST._INewtypeRange _4693_range0 = _4688___mcc_h1721;
                        DAST._IType _4694_b0 = _4687___mcc_h1720;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4695_nativeFromType;
                          _4695_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4694_b0, _4693_range0);
                          if ((_4695_nativeFromType).is_Some) {
                            RAST._IExpr _4696_recursiveGen;
                            DCOMP._IOwnership _4697_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4698_recIdents;
                            RAST._IExpr _out1255;
                            DCOMP._IOwnership _out1256;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1257;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1255, out _out1256, out _out1257);
                            _4696_recursiveGen = _out1255;
                            _4697_recOwned = _out1256;
                            _4698_recIdents = _out1257;
                            RAST._IExpr _out1258;
                            DCOMP._IOwnership _out1259;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4696_recursiveGen, (_4673_nativeToType).dtor_value), _4697_recOwned, expectedOwnership, out _out1258, out _out1259);
                            r = _out1258;
                            resultingOwnership = _out1259;
                            readIdents = _4698_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source182.is_Nullable) {
                      DAST._IType _4699___mcc_h1728 = _source182.dtor_Nullable_a0;
                    } else if (_source182.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4700___mcc_h1730 = _source182.dtor_Tuple_a0;
                    } else if (_source182.is_Array) {
                      DAST._IType _4701___mcc_h1732 = _source182.dtor_element;
                      BigInteger _4702___mcc_h1733 = _source182.dtor_dims;
                    } else if (_source182.is_Seq) {
                      DAST._IType _4703___mcc_h1736 = _source182.dtor_element;
                    } else if (_source182.is_Set) {
                      DAST._IType _4704___mcc_h1738 = _source182.dtor_element;
                    } else if (_source182.is_Multiset) {
                      DAST._IType _4705___mcc_h1740 = _source182.dtor_element;
                    } else if (_source182.is_Map) {
                      DAST._IType _4706___mcc_h1742 = _source182.dtor_key;
                      DAST._IType _4707___mcc_h1743 = _source182.dtor_value;
                    } else if (_source182.is_SetBuilder) {
                      DAST._IType _4708___mcc_h1746 = _source182.dtor_element;
                    } else if (_source182.is_MapBuilder) {
                      DAST._IType _4709___mcc_h1748 = _source182.dtor_key;
                      DAST._IType _4710___mcc_h1749 = _source182.dtor_value;
                    } else if (_source182.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4711___mcc_h1752 = _source182.dtor_args;
                      DAST._IType _4712___mcc_h1753 = _source182.dtor_result;
                    } else if (_source182.is_Primitive) {
                      DAST._IPrimitive _4713___mcc_h1756 = _source182.dtor_Primitive_a0;
                    } else if (_source182.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4714___mcc_h1758 = _source182.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4715___mcc_h1760 = _source182.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4716_recursiveGen;
                      DCOMP._IOwnership _4717_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4718_recIdents;
                      RAST._IExpr _out1260;
                      DCOMP._IOwnership _out1261;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1262;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1260, out _out1261, out _out1262);
                      _4716_recursiveGen = _out1260;
                      _4717_recOwned = _out1261;
                      _4718_recIdents = _out1262;
                      RAST._IExpr _out1263;
                      DCOMP._IOwnership _out1264;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4716_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4673_nativeToType).dtor_value), _4717_recOwned, expectedOwnership, out _out1263, out _out1264);
                      r = _out1263;
                      resultingOwnership = _out1264;
                      readIdents = _4718_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1265;
                  DCOMP._IOwnership _out1266;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1267;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4672_b), _4672_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1265, out _out1266, out _out1267);
                  r = _out1265;
                  resultingOwnership = _out1266;
                  readIdents = _out1267;
                }
              }
            }
          } else if (_source179.is_Nullable) {
            DAST._IType _4719___mcc_h538 = _source179.dtor_Nullable_a0;
            {
              RAST._IExpr _4720_recursiveGen;
              DCOMP._IOwnership _4721_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4722_recIdents;
              RAST._IExpr _out1268;
              DCOMP._IOwnership _out1269;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1270;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1268, out _out1269, out _out1270);
              _4720_recursiveGen = _out1268;
              _4721_recOwned = _out1269;
              _4722_recIdents = _out1270;
              r = _4720_recursiveGen;
              if (object.Equals(_4721_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1271;
              DCOMP._IOwnership _out1272;
              DCOMP.COMP.FromOwnership(r, _4721_recOwned, expectedOwnership, out _out1271, out _out1272);
              r = _out1271;
              resultingOwnership = _out1272;
              readIdents = _4722_recIdents;
            }
          } else if (_source179.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4723___mcc_h540 = _source179.dtor_Tuple_a0;
            {
              RAST._IType _4724_fromTpeGen;
              RAST._IType _out1273;
              _out1273 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4724_fromTpeGen = _out1273;
              RAST._IType _4725_toTpeGen;
              RAST._IType _out1274;
              _out1274 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4725_toTpeGen = _out1274;
              RAST._IExpr _4726_recursiveGen;
              DCOMP._IOwnership _4727_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4728_recIdents;
              RAST._IExpr _out1275;
              DCOMP._IOwnership _out1276;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1277;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1275, out _out1276, out _out1277);
              _4726_recursiveGen = _out1275;
              _4727_recOwned = _out1276;
              _4728_recIdents = _out1277;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4726_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4724_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4725_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1278;
              DCOMP._IOwnership _out1279;
              DCOMP.COMP.FromOwnership(r, _4727_recOwned, expectedOwnership, out _out1278, out _out1279);
              r = _out1278;
              resultingOwnership = _out1279;
              readIdents = _4728_recIdents;
            }
          } else if (_source179.is_Array) {
            DAST._IType _4729___mcc_h542 = _source179.dtor_element;
            BigInteger _4730___mcc_h543 = _source179.dtor_dims;
            {
              RAST._IType _4731_fromTpeGen;
              RAST._IType _out1280;
              _out1280 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4731_fromTpeGen = _out1280;
              RAST._IType _4732_toTpeGen;
              RAST._IType _out1281;
              _out1281 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4732_toTpeGen = _out1281;
              RAST._IExpr _4733_recursiveGen;
              DCOMP._IOwnership _4734_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4735_recIdents;
              RAST._IExpr _out1282;
              DCOMP._IOwnership _out1283;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1284;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1282, out _out1283, out _out1284);
              _4733_recursiveGen = _out1282;
              _4734_recOwned = _out1283;
              _4735_recIdents = _out1284;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4733_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4731_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4732_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1285;
              DCOMP._IOwnership _out1286;
              DCOMP.COMP.FromOwnership(r, _4734_recOwned, expectedOwnership, out _out1285, out _out1286);
              r = _out1285;
              resultingOwnership = _out1286;
              readIdents = _4735_recIdents;
            }
          } else if (_source179.is_Seq) {
            DAST._IType _4736___mcc_h546 = _source179.dtor_element;
            {
              RAST._IType _4737_fromTpeGen;
              RAST._IType _out1287;
              _out1287 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4737_fromTpeGen = _out1287;
              RAST._IType _4738_toTpeGen;
              RAST._IType _out1288;
              _out1288 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4738_toTpeGen = _out1288;
              RAST._IExpr _4739_recursiveGen;
              DCOMP._IOwnership _4740_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4741_recIdents;
              RAST._IExpr _out1289;
              DCOMP._IOwnership _out1290;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1291;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1289, out _out1290, out _out1291);
              _4739_recursiveGen = _out1289;
              _4740_recOwned = _out1290;
              _4741_recIdents = _out1291;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4739_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4737_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4738_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1292;
              DCOMP._IOwnership _out1293;
              DCOMP.COMP.FromOwnership(r, _4740_recOwned, expectedOwnership, out _out1292, out _out1293);
              r = _out1292;
              resultingOwnership = _out1293;
              readIdents = _4741_recIdents;
            }
          } else if (_source179.is_Set) {
            DAST._IType _4742___mcc_h548 = _source179.dtor_element;
            {
              RAST._IType _4743_fromTpeGen;
              RAST._IType _out1294;
              _out1294 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4743_fromTpeGen = _out1294;
              RAST._IType _4744_toTpeGen;
              RAST._IType _out1295;
              _out1295 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4744_toTpeGen = _out1295;
              RAST._IExpr _4745_recursiveGen;
              DCOMP._IOwnership _4746_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4747_recIdents;
              RAST._IExpr _out1296;
              DCOMP._IOwnership _out1297;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1298;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1296, out _out1297, out _out1298);
              _4745_recursiveGen = _out1296;
              _4746_recOwned = _out1297;
              _4747_recIdents = _out1298;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4745_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4743_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4744_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1299;
              DCOMP._IOwnership _out1300;
              DCOMP.COMP.FromOwnership(r, _4746_recOwned, expectedOwnership, out _out1299, out _out1300);
              r = _out1299;
              resultingOwnership = _out1300;
              readIdents = _4747_recIdents;
            }
          } else if (_source179.is_Multiset) {
            DAST._IType _4748___mcc_h550 = _source179.dtor_element;
            {
              RAST._IType _4749_fromTpeGen;
              RAST._IType _out1301;
              _out1301 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4749_fromTpeGen = _out1301;
              RAST._IType _4750_toTpeGen;
              RAST._IType _out1302;
              _out1302 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4750_toTpeGen = _out1302;
              RAST._IExpr _4751_recursiveGen;
              DCOMP._IOwnership _4752_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4753_recIdents;
              RAST._IExpr _out1303;
              DCOMP._IOwnership _out1304;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1305;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1303, out _out1304, out _out1305);
              _4751_recursiveGen = _out1303;
              _4752_recOwned = _out1304;
              _4753_recIdents = _out1305;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4751_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4749_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4750_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1306;
              DCOMP._IOwnership _out1307;
              DCOMP.COMP.FromOwnership(r, _4752_recOwned, expectedOwnership, out _out1306, out _out1307);
              r = _out1306;
              resultingOwnership = _out1307;
              readIdents = _4753_recIdents;
            }
          } else if (_source179.is_Map) {
            DAST._IType _4754___mcc_h552 = _source179.dtor_key;
            DAST._IType _4755___mcc_h553 = _source179.dtor_value;
            {
              RAST._IType _4756_fromTpeGen;
              RAST._IType _out1308;
              _out1308 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4756_fromTpeGen = _out1308;
              RAST._IType _4757_toTpeGen;
              RAST._IType _out1309;
              _out1309 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4757_toTpeGen = _out1309;
              RAST._IExpr _4758_recursiveGen;
              DCOMP._IOwnership _4759_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4760_recIdents;
              RAST._IExpr _out1310;
              DCOMP._IOwnership _out1311;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1312;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1310, out _out1311, out _out1312);
              _4758_recursiveGen = _out1310;
              _4759_recOwned = _out1311;
              _4760_recIdents = _out1312;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4758_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4756_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4757_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1313;
              DCOMP._IOwnership _out1314;
              DCOMP.COMP.FromOwnership(r, _4759_recOwned, expectedOwnership, out _out1313, out _out1314);
              r = _out1313;
              resultingOwnership = _out1314;
              readIdents = _4760_recIdents;
            }
          } else if (_source179.is_SetBuilder) {
            DAST._IType _4761___mcc_h556 = _source179.dtor_element;
            {
              RAST._IType _4762_fromTpeGen;
              RAST._IType _out1315;
              _out1315 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4762_fromTpeGen = _out1315;
              RAST._IType _4763_toTpeGen;
              RAST._IType _out1316;
              _out1316 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4763_toTpeGen = _out1316;
              RAST._IExpr _4764_recursiveGen;
              DCOMP._IOwnership _4765_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4766_recIdents;
              RAST._IExpr _out1317;
              DCOMP._IOwnership _out1318;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1319;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1317, out _out1318, out _out1319);
              _4764_recursiveGen = _out1317;
              _4765_recOwned = _out1318;
              _4766_recIdents = _out1319;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4764_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4762_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4763_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1320;
              DCOMP._IOwnership _out1321;
              DCOMP.COMP.FromOwnership(r, _4765_recOwned, expectedOwnership, out _out1320, out _out1321);
              r = _out1320;
              resultingOwnership = _out1321;
              readIdents = _4766_recIdents;
            }
          } else if (_source179.is_MapBuilder) {
            DAST._IType _4767___mcc_h558 = _source179.dtor_key;
            DAST._IType _4768___mcc_h559 = _source179.dtor_value;
            {
              RAST._IType _4769_fromTpeGen;
              RAST._IType _out1322;
              _out1322 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4769_fromTpeGen = _out1322;
              RAST._IType _4770_toTpeGen;
              RAST._IType _out1323;
              _out1323 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4770_toTpeGen = _out1323;
              RAST._IExpr _4771_recursiveGen;
              DCOMP._IOwnership _4772_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4773_recIdents;
              RAST._IExpr _out1324;
              DCOMP._IOwnership _out1325;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1326;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1324, out _out1325, out _out1326);
              _4771_recursiveGen = _out1324;
              _4772_recOwned = _out1325;
              _4773_recIdents = _out1326;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4771_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4769_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4770_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1327;
              DCOMP._IOwnership _out1328;
              DCOMP.COMP.FromOwnership(r, _4772_recOwned, expectedOwnership, out _out1327, out _out1328);
              r = _out1327;
              resultingOwnership = _out1328;
              readIdents = _4773_recIdents;
            }
          } else if (_source179.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4774___mcc_h562 = _source179.dtor_args;
            DAST._IType _4775___mcc_h563 = _source179.dtor_result;
            {
              RAST._IType _4776_fromTpeGen;
              RAST._IType _out1329;
              _out1329 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4776_fromTpeGen = _out1329;
              RAST._IType _4777_toTpeGen;
              RAST._IType _out1330;
              _out1330 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4777_toTpeGen = _out1330;
              RAST._IExpr _4778_recursiveGen;
              DCOMP._IOwnership _4779_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4780_recIdents;
              RAST._IExpr _out1331;
              DCOMP._IOwnership _out1332;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1333;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1331, out _out1332, out _out1333);
              _4778_recursiveGen = _out1331;
              _4779_recOwned = _out1332;
              _4780_recIdents = _out1333;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4778_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4776_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4777_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1334;
              DCOMP._IOwnership _out1335;
              DCOMP.COMP.FromOwnership(r, _4779_recOwned, expectedOwnership, out _out1334, out _out1335);
              r = _out1334;
              resultingOwnership = _out1335;
              readIdents = _4780_recIdents;
            }
          } else if (_source179.is_Primitive) {
            DAST._IPrimitive _4781___mcc_h566 = _source179.dtor_Primitive_a0;
            {
              RAST._IType _4782_fromTpeGen;
              RAST._IType _out1336;
              _out1336 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4782_fromTpeGen = _out1336;
              RAST._IType _4783_toTpeGen;
              RAST._IType _out1337;
              _out1337 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4783_toTpeGen = _out1337;
              RAST._IExpr _4784_recursiveGen;
              DCOMP._IOwnership _4785_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4786_recIdents;
              RAST._IExpr _out1338;
              DCOMP._IOwnership _out1339;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1340;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1338, out _out1339, out _out1340);
              _4784_recursiveGen = _out1338;
              _4785_recOwned = _out1339;
              _4786_recIdents = _out1340;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4784_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4782_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4783_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1341;
              DCOMP._IOwnership _out1342;
              DCOMP.COMP.FromOwnership(r, _4785_recOwned, expectedOwnership, out _out1341, out _out1342);
              r = _out1341;
              resultingOwnership = _out1342;
              readIdents = _4786_recIdents;
            }
          } else if (_source179.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4787___mcc_h568 = _source179.dtor_Passthrough_a0;
            {
              RAST._IType _4788_fromTpeGen;
              RAST._IType _out1343;
              _out1343 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4788_fromTpeGen = _out1343;
              RAST._IType _4789_toTpeGen;
              RAST._IType _out1344;
              _out1344 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4789_toTpeGen = _out1344;
              RAST._IExpr _4790_recursiveGen;
              DCOMP._IOwnership _4791_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4792_recIdents;
              RAST._IExpr _out1345;
              DCOMP._IOwnership _out1346;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1347;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1345, out _out1346, out _out1347);
              _4790_recursiveGen = _out1345;
              _4791_recOwned = _out1346;
              _4792_recIdents = _out1347;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4790_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4788_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4789_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1348;
              DCOMP._IOwnership _out1349;
              DCOMP.COMP.FromOwnership(r, _4791_recOwned, expectedOwnership, out _out1348, out _out1349);
              r = _out1348;
              resultingOwnership = _out1349;
              readIdents = _4792_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4793___mcc_h570 = _source179.dtor_TypeArg_a0;
            {
              RAST._IType _4794_fromTpeGen;
              RAST._IType _out1350;
              _out1350 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4794_fromTpeGen = _out1350;
              RAST._IType _4795_toTpeGen;
              RAST._IType _out1351;
              _out1351 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4795_toTpeGen = _out1351;
              RAST._IExpr _4796_recursiveGen;
              DCOMP._IOwnership _4797_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4798_recIdents;
              RAST._IExpr _out1352;
              DCOMP._IOwnership _out1353;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1354;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1352, out _out1353, out _out1354);
              _4796_recursiveGen = _out1352;
              _4797_recOwned = _out1353;
              _4798_recIdents = _out1354;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4796_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4794_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4795_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1355;
              DCOMP._IOwnership _out1356;
              DCOMP.COMP.FromOwnership(r, _4797_recOwned, expectedOwnership, out _out1355, out _out1356);
              r = _out1355;
              resultingOwnership = _out1356;
              readIdents = _4798_recIdents;
            }
          }
        } else if (_source130.is_Set) {
          DAST._IType _4799___mcc_h572 = _source130.dtor_element;
          DAST._IType _source184 = _3476___mcc_h1;
          if (_source184.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4800___mcc_h576 = _source184.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4801___mcc_h577 = _source184.dtor_typeArgs;
            DAST._IResolvedType _4802___mcc_h578 = _source184.dtor_resolved;
            DAST._IResolvedType _source185 = _4802___mcc_h578;
            if (_source185.is_AllocatedDatatype) {
              DAST._IDatatypeType _4803___mcc_h582 = _source185.dtor_datatypeType;
              {
                RAST._IType _4804_fromTpeGen;
                RAST._IType _out1357;
                _out1357 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4804_fromTpeGen = _out1357;
                RAST._IType _4805_toTpeGen;
                RAST._IType _out1358;
                _out1358 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4805_toTpeGen = _out1358;
                RAST._IExpr _4806_recursiveGen;
                DCOMP._IOwnership _4807_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4808_recIdents;
                RAST._IExpr _out1359;
                DCOMP._IOwnership _out1360;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1361;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1359, out _out1360, out _out1361);
                _4806_recursiveGen = _out1359;
                _4807_recOwned = _out1360;
                _4808_recIdents = _out1361;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4806_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4804_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4805_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1362;
                DCOMP._IOwnership _out1363;
                DCOMP.COMP.FromOwnership(r, _4807_recOwned, expectedOwnership, out _out1362, out _out1363);
                r = _out1362;
                resultingOwnership = _out1363;
                readIdents = _4808_recIdents;
              }
            } else if (_source185.is_Datatype) {
              DAST._IDatatypeType _4809___mcc_h584 = _source185.dtor_datatypeType;
              {
                RAST._IType _4810_fromTpeGen;
                RAST._IType _out1364;
                _out1364 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4810_fromTpeGen = _out1364;
                RAST._IType _4811_toTpeGen;
                RAST._IType _out1365;
                _out1365 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4811_toTpeGen = _out1365;
                RAST._IExpr _4812_recursiveGen;
                DCOMP._IOwnership _4813_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4814_recIdents;
                RAST._IExpr _out1366;
                DCOMP._IOwnership _out1367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1368;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1366, out _out1367, out _out1368);
                _4812_recursiveGen = _out1366;
                _4813_recOwned = _out1367;
                _4814_recIdents = _out1368;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4812_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4810_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4811_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1369;
                DCOMP._IOwnership _out1370;
                DCOMP.COMP.FromOwnership(r, _4813_recOwned, expectedOwnership, out _out1369, out _out1370);
                r = _out1369;
                resultingOwnership = _out1370;
                readIdents = _4814_recIdents;
              }
            } else if (_source185.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4815___mcc_h586 = _source185.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4816___mcc_h587 = _source185.dtor_attributes;
              {
                RAST._IType _4817_fromTpeGen;
                RAST._IType _out1371;
                _out1371 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4817_fromTpeGen = _out1371;
                RAST._IType _4818_toTpeGen;
                RAST._IType _out1372;
                _out1372 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4818_toTpeGen = _out1372;
                RAST._IExpr _4819_recursiveGen;
                DCOMP._IOwnership _4820_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4821_recIdents;
                RAST._IExpr _out1373;
                DCOMP._IOwnership _out1374;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1375;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1373, out _out1374, out _out1375);
                _4819_recursiveGen = _out1373;
                _4820_recOwned = _out1374;
                _4821_recIdents = _out1375;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4819_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4817_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4818_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1376;
                DCOMP._IOwnership _out1377;
                DCOMP.COMP.FromOwnership(r, _4820_recOwned, expectedOwnership, out _out1376, out _out1377);
                r = _out1376;
                resultingOwnership = _out1377;
                readIdents = _4821_recIdents;
              }
            } else {
              DAST._IType _4822___mcc_h590 = _source185.dtor_baseType;
              DAST._INewtypeRange _4823___mcc_h591 = _source185.dtor_range;
              bool _4824___mcc_h592 = _source185.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4825___mcc_h593 = _source185.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4826_attributes = _4825___mcc_h593;
              bool _4827_erase = _4824___mcc_h592;
              DAST._INewtypeRange _4828_range = _4823___mcc_h591;
              DAST._IType _4829_b = _4822___mcc_h590;
              {
                Std.Wrappers._IOption<RAST._IType> _4830_nativeToType;
                _4830_nativeToType = DCOMP.COMP.NewtypeToRustType(_4829_b, _4828_range);
                if (object.Equals(_3470_fromTpe, _4829_b)) {
                  RAST._IExpr _4831_recursiveGen;
                  DCOMP._IOwnership _4832_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4833_recIdents;
                  RAST._IExpr _out1378;
                  DCOMP._IOwnership _out1379;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1380;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1378, out _out1379, out _out1380);
                  _4831_recursiveGen = _out1378;
                  _4832_recOwned = _out1379;
                  _4833_recIdents = _out1380;
                  readIdents = _4833_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source186 = _4830_nativeToType;
                  if (_source186.is_None) {
                    if (_4827_erase) {
                      r = _4831_recursiveGen;
                    } else {
                      RAST._IType _4834_rhsType;
                      RAST._IType _out1381;
                      _out1381 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _4834_rhsType = _out1381;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4834_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4831_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1382;
                    DCOMP._IOwnership _out1383;
                    DCOMP.COMP.FromOwnership(r, _4832_recOwned, expectedOwnership, out _out1382, out _out1383);
                    r = _out1382;
                    resultingOwnership = _out1383;
                  } else {
                    RAST._IType _4835___mcc_h1762 = _source186.dtor_value;
                    RAST._IType _4836_v = _4835___mcc_h1762;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4831_recursiveGen, RAST.Expr.create_ExprFromType(_4836_v)));
                    RAST._IExpr _out1384;
                    DCOMP._IOwnership _out1385;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1384, out _out1385);
                    r = _out1384;
                    resultingOwnership = _out1385;
                  }
                } else {
                  if ((_4830_nativeToType).is_Some) {
                    DAST._IType _source187 = _3470_fromTpe;
                    if (_source187.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4837___mcc_h1763 = _source187.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4838___mcc_h1764 = _source187.dtor_typeArgs;
                      DAST._IResolvedType _4839___mcc_h1765 = _source187.dtor_resolved;
                      DAST._IResolvedType _source188 = _4839___mcc_h1765;
                      if (_source188.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4840___mcc_h1769 = _source188.dtor_datatypeType;
                      } else if (_source188.is_Datatype) {
                        DAST._IDatatypeType _4841___mcc_h1771 = _source188.dtor_datatypeType;
                      } else if (_source188.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4842___mcc_h1773 = _source188.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _4843___mcc_h1774 = _source188.dtor_attributes;
                      } else {
                        DAST._IType _4844___mcc_h1777 = _source188.dtor_baseType;
                        DAST._INewtypeRange _4845___mcc_h1778 = _source188.dtor_range;
                        bool _4846___mcc_h1779 = _source188.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _4847___mcc_h1780 = _source188.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _4848_attributes0 = _4847___mcc_h1780;
                        bool _4849_erase0 = _4846___mcc_h1779;
                        DAST._INewtypeRange _4850_range0 = _4845___mcc_h1778;
                        DAST._IType _4851_b0 = _4844___mcc_h1777;
                        {
                          Std.Wrappers._IOption<RAST._IType> _4852_nativeFromType;
                          _4852_nativeFromType = DCOMP.COMP.NewtypeToRustType(_4851_b0, _4850_range0);
                          if ((_4852_nativeFromType).is_Some) {
                            RAST._IExpr _4853_recursiveGen;
                            DCOMP._IOwnership _4854_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4855_recIdents;
                            RAST._IExpr _out1386;
                            DCOMP._IOwnership _out1387;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1388;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1386, out _out1387, out _out1388);
                            _4853_recursiveGen = _out1386;
                            _4854_recOwned = _out1387;
                            _4855_recIdents = _out1388;
                            RAST._IExpr _out1389;
                            DCOMP._IOwnership _out1390;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_4853_recursiveGen, (_4830_nativeToType).dtor_value), _4854_recOwned, expectedOwnership, out _out1389, out _out1390);
                            r = _out1389;
                            resultingOwnership = _out1390;
                            readIdents = _4855_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source187.is_Nullable) {
                      DAST._IType _4856___mcc_h1785 = _source187.dtor_Nullable_a0;
                    } else if (_source187.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _4857___mcc_h1787 = _source187.dtor_Tuple_a0;
                    } else if (_source187.is_Array) {
                      DAST._IType _4858___mcc_h1789 = _source187.dtor_element;
                      BigInteger _4859___mcc_h1790 = _source187.dtor_dims;
                    } else if (_source187.is_Seq) {
                      DAST._IType _4860___mcc_h1793 = _source187.dtor_element;
                    } else if (_source187.is_Set) {
                      DAST._IType _4861___mcc_h1795 = _source187.dtor_element;
                    } else if (_source187.is_Multiset) {
                      DAST._IType _4862___mcc_h1797 = _source187.dtor_element;
                    } else if (_source187.is_Map) {
                      DAST._IType _4863___mcc_h1799 = _source187.dtor_key;
                      DAST._IType _4864___mcc_h1800 = _source187.dtor_value;
                    } else if (_source187.is_SetBuilder) {
                      DAST._IType _4865___mcc_h1803 = _source187.dtor_element;
                    } else if (_source187.is_MapBuilder) {
                      DAST._IType _4866___mcc_h1805 = _source187.dtor_key;
                      DAST._IType _4867___mcc_h1806 = _source187.dtor_value;
                    } else if (_source187.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _4868___mcc_h1809 = _source187.dtor_args;
                      DAST._IType _4869___mcc_h1810 = _source187.dtor_result;
                    } else if (_source187.is_Primitive) {
                      DAST._IPrimitive _4870___mcc_h1813 = _source187.dtor_Primitive_a0;
                    } else if (_source187.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _4871___mcc_h1815 = _source187.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _4872___mcc_h1817 = _source187.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _4873_recursiveGen;
                      DCOMP._IOwnership _4874_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4875_recIdents;
                      RAST._IExpr _out1391;
                      DCOMP._IOwnership _out1392;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1393;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1391, out _out1392, out _out1393);
                      _4873_recursiveGen = _out1391;
                      _4874_recOwned = _out1392;
                      _4875_recIdents = _out1393;
                      RAST._IExpr _out1394;
                      DCOMP._IOwnership _out1395;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_4873_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4830_nativeToType).dtor_value), _4874_recOwned, expectedOwnership, out _out1394, out _out1395);
                      r = _out1394;
                      resultingOwnership = _out1395;
                      readIdents = _4875_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1396;
                  DCOMP._IOwnership _out1397;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1398;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4829_b), _4829_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1396, out _out1397, out _out1398);
                  r = _out1396;
                  resultingOwnership = _out1397;
                  readIdents = _out1398;
                }
              }
            }
          } else if (_source184.is_Nullable) {
            DAST._IType _4876___mcc_h598 = _source184.dtor_Nullable_a0;
            {
              RAST._IExpr _4877_recursiveGen;
              DCOMP._IOwnership _4878_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4879_recIdents;
              RAST._IExpr _out1399;
              DCOMP._IOwnership _out1400;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1401;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1399, out _out1400, out _out1401);
              _4877_recursiveGen = _out1399;
              _4878_recOwned = _out1400;
              _4879_recIdents = _out1401;
              r = _4877_recursiveGen;
              if (object.Equals(_4878_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1402;
              DCOMP._IOwnership _out1403;
              DCOMP.COMP.FromOwnership(r, _4878_recOwned, expectedOwnership, out _out1402, out _out1403);
              r = _out1402;
              resultingOwnership = _out1403;
              readIdents = _4879_recIdents;
            }
          } else if (_source184.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4880___mcc_h600 = _source184.dtor_Tuple_a0;
            {
              RAST._IType _4881_fromTpeGen;
              RAST._IType _out1404;
              _out1404 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4881_fromTpeGen = _out1404;
              RAST._IType _4882_toTpeGen;
              RAST._IType _out1405;
              _out1405 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4882_toTpeGen = _out1405;
              RAST._IExpr _4883_recursiveGen;
              DCOMP._IOwnership _4884_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4885_recIdents;
              RAST._IExpr _out1406;
              DCOMP._IOwnership _out1407;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1408;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1406, out _out1407, out _out1408);
              _4883_recursiveGen = _out1406;
              _4884_recOwned = _out1407;
              _4885_recIdents = _out1408;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4883_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4881_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4882_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1409;
              DCOMP._IOwnership _out1410;
              DCOMP.COMP.FromOwnership(r, _4884_recOwned, expectedOwnership, out _out1409, out _out1410);
              r = _out1409;
              resultingOwnership = _out1410;
              readIdents = _4885_recIdents;
            }
          } else if (_source184.is_Array) {
            DAST._IType _4886___mcc_h602 = _source184.dtor_element;
            BigInteger _4887___mcc_h603 = _source184.dtor_dims;
            {
              RAST._IType _4888_fromTpeGen;
              RAST._IType _out1411;
              _out1411 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4888_fromTpeGen = _out1411;
              RAST._IType _4889_toTpeGen;
              RAST._IType _out1412;
              _out1412 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4889_toTpeGen = _out1412;
              RAST._IExpr _4890_recursiveGen;
              DCOMP._IOwnership _4891_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4892_recIdents;
              RAST._IExpr _out1413;
              DCOMP._IOwnership _out1414;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1415;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1413, out _out1414, out _out1415);
              _4890_recursiveGen = _out1413;
              _4891_recOwned = _out1414;
              _4892_recIdents = _out1415;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4890_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4888_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4889_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1416;
              DCOMP._IOwnership _out1417;
              DCOMP.COMP.FromOwnership(r, _4891_recOwned, expectedOwnership, out _out1416, out _out1417);
              r = _out1416;
              resultingOwnership = _out1417;
              readIdents = _4892_recIdents;
            }
          } else if (_source184.is_Seq) {
            DAST._IType _4893___mcc_h606 = _source184.dtor_element;
            {
              RAST._IType _4894_fromTpeGen;
              RAST._IType _out1418;
              _out1418 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4894_fromTpeGen = _out1418;
              RAST._IType _4895_toTpeGen;
              RAST._IType _out1419;
              _out1419 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4895_toTpeGen = _out1419;
              RAST._IExpr _4896_recursiveGen;
              DCOMP._IOwnership _4897_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4898_recIdents;
              RAST._IExpr _out1420;
              DCOMP._IOwnership _out1421;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1422;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1420, out _out1421, out _out1422);
              _4896_recursiveGen = _out1420;
              _4897_recOwned = _out1421;
              _4898_recIdents = _out1422;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4896_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4894_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4895_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1423;
              DCOMP._IOwnership _out1424;
              DCOMP.COMP.FromOwnership(r, _4897_recOwned, expectedOwnership, out _out1423, out _out1424);
              r = _out1423;
              resultingOwnership = _out1424;
              readIdents = _4898_recIdents;
            }
          } else if (_source184.is_Set) {
            DAST._IType _4899___mcc_h608 = _source184.dtor_element;
            {
              RAST._IType _4900_fromTpeGen;
              RAST._IType _out1425;
              _out1425 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4900_fromTpeGen = _out1425;
              RAST._IType _4901_toTpeGen;
              RAST._IType _out1426;
              _out1426 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4901_toTpeGen = _out1426;
              RAST._IExpr _4902_recursiveGen;
              DCOMP._IOwnership _4903_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4904_recIdents;
              RAST._IExpr _out1427;
              DCOMP._IOwnership _out1428;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1429;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1427, out _out1428, out _out1429);
              _4902_recursiveGen = _out1427;
              _4903_recOwned = _out1428;
              _4904_recIdents = _out1429;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4902_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4900_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4901_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1430;
              DCOMP._IOwnership _out1431;
              DCOMP.COMP.FromOwnership(r, _4903_recOwned, expectedOwnership, out _out1430, out _out1431);
              r = _out1430;
              resultingOwnership = _out1431;
              readIdents = _4904_recIdents;
            }
          } else if (_source184.is_Multiset) {
            DAST._IType _4905___mcc_h610 = _source184.dtor_element;
            {
              RAST._IType _4906_fromTpeGen;
              RAST._IType _out1432;
              _out1432 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4906_fromTpeGen = _out1432;
              RAST._IType _4907_toTpeGen;
              RAST._IType _out1433;
              _out1433 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4907_toTpeGen = _out1433;
              RAST._IExpr _4908_recursiveGen;
              DCOMP._IOwnership _4909_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4910_recIdents;
              RAST._IExpr _out1434;
              DCOMP._IOwnership _out1435;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1436;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1434, out _out1435, out _out1436);
              _4908_recursiveGen = _out1434;
              _4909_recOwned = _out1435;
              _4910_recIdents = _out1436;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4908_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4906_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4907_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1437;
              DCOMP._IOwnership _out1438;
              DCOMP.COMP.FromOwnership(r, _4909_recOwned, expectedOwnership, out _out1437, out _out1438);
              r = _out1437;
              resultingOwnership = _out1438;
              readIdents = _4910_recIdents;
            }
          } else if (_source184.is_Map) {
            DAST._IType _4911___mcc_h612 = _source184.dtor_key;
            DAST._IType _4912___mcc_h613 = _source184.dtor_value;
            {
              RAST._IType _4913_fromTpeGen;
              RAST._IType _out1439;
              _out1439 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4913_fromTpeGen = _out1439;
              RAST._IType _4914_toTpeGen;
              RAST._IType _out1440;
              _out1440 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4914_toTpeGen = _out1440;
              RAST._IExpr _4915_recursiveGen;
              DCOMP._IOwnership _4916_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4917_recIdents;
              RAST._IExpr _out1441;
              DCOMP._IOwnership _out1442;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1443;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1441, out _out1442, out _out1443);
              _4915_recursiveGen = _out1441;
              _4916_recOwned = _out1442;
              _4917_recIdents = _out1443;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4915_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4913_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4914_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1444;
              DCOMP._IOwnership _out1445;
              DCOMP.COMP.FromOwnership(r, _4916_recOwned, expectedOwnership, out _out1444, out _out1445);
              r = _out1444;
              resultingOwnership = _out1445;
              readIdents = _4917_recIdents;
            }
          } else if (_source184.is_SetBuilder) {
            DAST._IType _4918___mcc_h616 = _source184.dtor_element;
            {
              RAST._IType _4919_fromTpeGen;
              RAST._IType _out1446;
              _out1446 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4919_fromTpeGen = _out1446;
              RAST._IType _4920_toTpeGen;
              RAST._IType _out1447;
              _out1447 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4920_toTpeGen = _out1447;
              RAST._IExpr _4921_recursiveGen;
              DCOMP._IOwnership _4922_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4923_recIdents;
              RAST._IExpr _out1448;
              DCOMP._IOwnership _out1449;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1450;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1448, out _out1449, out _out1450);
              _4921_recursiveGen = _out1448;
              _4922_recOwned = _out1449;
              _4923_recIdents = _out1450;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4921_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4919_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4920_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1451;
              DCOMP._IOwnership _out1452;
              DCOMP.COMP.FromOwnership(r, _4922_recOwned, expectedOwnership, out _out1451, out _out1452);
              r = _out1451;
              resultingOwnership = _out1452;
              readIdents = _4923_recIdents;
            }
          } else if (_source184.is_MapBuilder) {
            DAST._IType _4924___mcc_h618 = _source184.dtor_key;
            DAST._IType _4925___mcc_h619 = _source184.dtor_value;
            {
              RAST._IType _4926_fromTpeGen;
              RAST._IType _out1453;
              _out1453 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4926_fromTpeGen = _out1453;
              RAST._IType _4927_toTpeGen;
              RAST._IType _out1454;
              _out1454 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4927_toTpeGen = _out1454;
              RAST._IExpr _4928_recursiveGen;
              DCOMP._IOwnership _4929_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4930_recIdents;
              RAST._IExpr _out1455;
              DCOMP._IOwnership _out1456;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1457;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1455, out _out1456, out _out1457);
              _4928_recursiveGen = _out1455;
              _4929_recOwned = _out1456;
              _4930_recIdents = _out1457;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4928_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4926_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4927_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1458;
              DCOMP._IOwnership _out1459;
              DCOMP.COMP.FromOwnership(r, _4929_recOwned, expectedOwnership, out _out1458, out _out1459);
              r = _out1458;
              resultingOwnership = _out1459;
              readIdents = _4930_recIdents;
            }
          } else if (_source184.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4931___mcc_h622 = _source184.dtor_args;
            DAST._IType _4932___mcc_h623 = _source184.dtor_result;
            {
              RAST._IType _4933_fromTpeGen;
              RAST._IType _out1460;
              _out1460 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4933_fromTpeGen = _out1460;
              RAST._IType _4934_toTpeGen;
              RAST._IType _out1461;
              _out1461 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4934_toTpeGen = _out1461;
              RAST._IExpr _4935_recursiveGen;
              DCOMP._IOwnership _4936_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4937_recIdents;
              RAST._IExpr _out1462;
              DCOMP._IOwnership _out1463;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1464;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1462, out _out1463, out _out1464);
              _4935_recursiveGen = _out1462;
              _4936_recOwned = _out1463;
              _4937_recIdents = _out1464;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4935_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4933_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4934_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1465;
              DCOMP._IOwnership _out1466;
              DCOMP.COMP.FromOwnership(r, _4936_recOwned, expectedOwnership, out _out1465, out _out1466);
              r = _out1465;
              resultingOwnership = _out1466;
              readIdents = _4937_recIdents;
            }
          } else if (_source184.is_Primitive) {
            DAST._IPrimitive _4938___mcc_h626 = _source184.dtor_Primitive_a0;
            {
              RAST._IType _4939_fromTpeGen;
              RAST._IType _out1467;
              _out1467 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4939_fromTpeGen = _out1467;
              RAST._IType _4940_toTpeGen;
              RAST._IType _out1468;
              _out1468 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4940_toTpeGen = _out1468;
              RAST._IExpr _4941_recursiveGen;
              DCOMP._IOwnership _4942_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4943_recIdents;
              RAST._IExpr _out1469;
              DCOMP._IOwnership _out1470;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1471;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1469, out _out1470, out _out1471);
              _4941_recursiveGen = _out1469;
              _4942_recOwned = _out1470;
              _4943_recIdents = _out1471;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4941_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4939_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4940_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1472;
              DCOMP._IOwnership _out1473;
              DCOMP.COMP.FromOwnership(r, _4942_recOwned, expectedOwnership, out _out1472, out _out1473);
              r = _out1472;
              resultingOwnership = _out1473;
              readIdents = _4943_recIdents;
            }
          } else if (_source184.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4944___mcc_h628 = _source184.dtor_Passthrough_a0;
            {
              RAST._IType _4945_fromTpeGen;
              RAST._IType _out1474;
              _out1474 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4945_fromTpeGen = _out1474;
              RAST._IType _4946_toTpeGen;
              RAST._IType _out1475;
              _out1475 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4946_toTpeGen = _out1475;
              RAST._IExpr _4947_recursiveGen;
              DCOMP._IOwnership _4948_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4949_recIdents;
              RAST._IExpr _out1476;
              DCOMP._IOwnership _out1477;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1478;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1476, out _out1477, out _out1478);
              _4947_recursiveGen = _out1476;
              _4948_recOwned = _out1477;
              _4949_recIdents = _out1478;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4947_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4945_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4946_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1479;
              DCOMP._IOwnership _out1480;
              DCOMP.COMP.FromOwnership(r, _4948_recOwned, expectedOwnership, out _out1479, out _out1480);
              r = _out1479;
              resultingOwnership = _out1480;
              readIdents = _4949_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4950___mcc_h630 = _source184.dtor_TypeArg_a0;
            {
              RAST._IType _4951_fromTpeGen;
              RAST._IType _out1481;
              _out1481 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _4951_fromTpeGen = _out1481;
              RAST._IType _4952_toTpeGen;
              RAST._IType _out1482;
              _out1482 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _4952_toTpeGen = _out1482;
              RAST._IExpr _4953_recursiveGen;
              DCOMP._IOwnership _4954_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4955_recIdents;
              RAST._IExpr _out1483;
              DCOMP._IOwnership _out1484;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1485;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1483, out _out1484, out _out1485);
              _4953_recursiveGen = _out1483;
              _4954_recOwned = _out1484;
              _4955_recIdents = _out1485;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4953_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4951_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4952_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1486;
              DCOMP._IOwnership _out1487;
              DCOMP.COMP.FromOwnership(r, _4954_recOwned, expectedOwnership, out _out1486, out _out1487);
              r = _out1486;
              resultingOwnership = _out1487;
              readIdents = _4955_recIdents;
            }
          }
        } else if (_source130.is_Multiset) {
          DAST._IType _4956___mcc_h632 = _source130.dtor_element;
          DAST._IType _source189 = _3476___mcc_h1;
          if (_source189.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4957___mcc_h636 = _source189.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _4958___mcc_h637 = _source189.dtor_typeArgs;
            DAST._IResolvedType _4959___mcc_h638 = _source189.dtor_resolved;
            DAST._IResolvedType _source190 = _4959___mcc_h638;
            if (_source190.is_AllocatedDatatype) {
              DAST._IDatatypeType _4960___mcc_h642 = _source190.dtor_datatypeType;
              {
                RAST._IType _4961_fromTpeGen;
                RAST._IType _out1488;
                _out1488 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4961_fromTpeGen = _out1488;
                RAST._IType _4962_toTpeGen;
                RAST._IType _out1489;
                _out1489 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4962_toTpeGen = _out1489;
                RAST._IExpr _4963_recursiveGen;
                DCOMP._IOwnership _4964_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4965_recIdents;
                RAST._IExpr _out1490;
                DCOMP._IOwnership _out1491;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1492;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1490, out _out1491, out _out1492);
                _4963_recursiveGen = _out1490;
                _4964_recOwned = _out1491;
                _4965_recIdents = _out1492;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4963_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4961_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4962_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1493;
                DCOMP._IOwnership _out1494;
                DCOMP.COMP.FromOwnership(r, _4964_recOwned, expectedOwnership, out _out1493, out _out1494);
                r = _out1493;
                resultingOwnership = _out1494;
                readIdents = _4965_recIdents;
              }
            } else if (_source190.is_Datatype) {
              DAST._IDatatypeType _4966___mcc_h644 = _source190.dtor_datatypeType;
              {
                RAST._IType _4967_fromTpeGen;
                RAST._IType _out1495;
                _out1495 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4967_fromTpeGen = _out1495;
                RAST._IType _4968_toTpeGen;
                RAST._IType _out1496;
                _out1496 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4968_toTpeGen = _out1496;
                RAST._IExpr _4969_recursiveGen;
                DCOMP._IOwnership _4970_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4971_recIdents;
                RAST._IExpr _out1497;
                DCOMP._IOwnership _out1498;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1499;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1497, out _out1498, out _out1499);
                _4969_recursiveGen = _out1497;
                _4970_recOwned = _out1498;
                _4971_recIdents = _out1499;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4969_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4967_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4968_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1500;
                DCOMP._IOwnership _out1501;
                DCOMP.COMP.FromOwnership(r, _4970_recOwned, expectedOwnership, out _out1500, out _out1501);
                r = _out1500;
                resultingOwnership = _out1501;
                readIdents = _4971_recIdents;
              }
            } else if (_source190.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4972___mcc_h646 = _source190.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4973___mcc_h647 = _source190.dtor_attributes;
              {
                RAST._IType _4974_fromTpeGen;
                RAST._IType _out1502;
                _out1502 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _4974_fromTpeGen = _out1502;
                RAST._IType _4975_toTpeGen;
                RAST._IType _out1503;
                _out1503 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _4975_toTpeGen = _out1503;
                RAST._IExpr _4976_recursiveGen;
                DCOMP._IOwnership _4977_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4978_recIdents;
                RAST._IExpr _out1504;
                DCOMP._IOwnership _out1505;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1506;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1504, out _out1505, out _out1506);
                _4976_recursiveGen = _out1504;
                _4977_recOwned = _out1505;
                _4978_recIdents = _out1506;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_4976_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_4974_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4975_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1507;
                DCOMP._IOwnership _out1508;
                DCOMP.COMP.FromOwnership(r, _4977_recOwned, expectedOwnership, out _out1507, out _out1508);
                r = _out1507;
                resultingOwnership = _out1508;
                readIdents = _4978_recIdents;
              }
            } else {
              DAST._IType _4979___mcc_h650 = _source190.dtor_baseType;
              DAST._INewtypeRange _4980___mcc_h651 = _source190.dtor_range;
              bool _4981___mcc_h652 = _source190.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4982___mcc_h653 = _source190.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4983_attributes = _4982___mcc_h653;
              bool _4984_erase = _4981___mcc_h652;
              DAST._INewtypeRange _4985_range = _4980___mcc_h651;
              DAST._IType _4986_b = _4979___mcc_h650;
              {
                Std.Wrappers._IOption<RAST._IType> _4987_nativeToType;
                _4987_nativeToType = DCOMP.COMP.NewtypeToRustType(_4986_b, _4985_range);
                if (object.Equals(_3470_fromTpe, _4986_b)) {
                  RAST._IExpr _4988_recursiveGen;
                  DCOMP._IOwnership _4989_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4990_recIdents;
                  RAST._IExpr _out1509;
                  DCOMP._IOwnership _out1510;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1511;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1509, out _out1510, out _out1511);
                  _4988_recursiveGen = _out1509;
                  _4989_recOwned = _out1510;
                  _4990_recIdents = _out1511;
                  readIdents = _4990_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source191 = _4987_nativeToType;
                  if (_source191.is_None) {
                    if (_4984_erase) {
                      r = _4988_recursiveGen;
                    } else {
                      RAST._IType _4991_rhsType;
                      RAST._IType _out1512;
                      _out1512 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _4991_rhsType = _out1512;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_4991_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_4988_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1513;
                    DCOMP._IOwnership _out1514;
                    DCOMP.COMP.FromOwnership(r, _4989_recOwned, expectedOwnership, out _out1513, out _out1514);
                    r = _out1513;
                    resultingOwnership = _out1514;
                  } else {
                    RAST._IType _4992___mcc_h1819 = _source191.dtor_value;
                    RAST._IType _4993_v = _4992___mcc_h1819;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4988_recursiveGen, RAST.Expr.create_ExprFromType(_4993_v)));
                    RAST._IExpr _out1515;
                    DCOMP._IOwnership _out1516;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1515, out _out1516);
                    r = _out1515;
                    resultingOwnership = _out1516;
                  }
                } else {
                  if ((_4987_nativeToType).is_Some) {
                    DAST._IType _source192 = _3470_fromTpe;
                    if (_source192.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4994___mcc_h1820 = _source192.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _4995___mcc_h1821 = _source192.dtor_typeArgs;
                      DAST._IResolvedType _4996___mcc_h1822 = _source192.dtor_resolved;
                      DAST._IResolvedType _source193 = _4996___mcc_h1822;
                      if (_source193.is_AllocatedDatatype) {
                        DAST._IDatatypeType _4997___mcc_h1826 = _source193.dtor_datatypeType;
                      } else if (_source193.is_Datatype) {
                        DAST._IDatatypeType _4998___mcc_h1828 = _source193.dtor_datatypeType;
                      } else if (_source193.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4999___mcc_h1830 = _source193.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5000___mcc_h1831 = _source193.dtor_attributes;
                      } else {
                        DAST._IType _5001___mcc_h1834 = _source193.dtor_baseType;
                        DAST._INewtypeRange _5002___mcc_h1835 = _source193.dtor_range;
                        bool _5003___mcc_h1836 = _source193.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5004___mcc_h1837 = _source193.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5005_attributes0 = _5004___mcc_h1837;
                        bool _5006_erase0 = _5003___mcc_h1836;
                        DAST._INewtypeRange _5007_range0 = _5002___mcc_h1835;
                        DAST._IType _5008_b0 = _5001___mcc_h1834;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5009_nativeFromType;
                          _5009_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5008_b0, _5007_range0);
                          if ((_5009_nativeFromType).is_Some) {
                            RAST._IExpr _5010_recursiveGen;
                            DCOMP._IOwnership _5011_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5012_recIdents;
                            RAST._IExpr _out1517;
                            DCOMP._IOwnership _out1518;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1519;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1517, out _out1518, out _out1519);
                            _5010_recursiveGen = _out1517;
                            _5011_recOwned = _out1518;
                            _5012_recIdents = _out1519;
                            RAST._IExpr _out1520;
                            DCOMP._IOwnership _out1521;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5010_recursiveGen, (_4987_nativeToType).dtor_value), _5011_recOwned, expectedOwnership, out _out1520, out _out1521);
                            r = _out1520;
                            resultingOwnership = _out1521;
                            readIdents = _5012_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source192.is_Nullable) {
                      DAST._IType _5013___mcc_h1842 = _source192.dtor_Nullable_a0;
                    } else if (_source192.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5014___mcc_h1844 = _source192.dtor_Tuple_a0;
                    } else if (_source192.is_Array) {
                      DAST._IType _5015___mcc_h1846 = _source192.dtor_element;
                      BigInteger _5016___mcc_h1847 = _source192.dtor_dims;
                    } else if (_source192.is_Seq) {
                      DAST._IType _5017___mcc_h1850 = _source192.dtor_element;
                    } else if (_source192.is_Set) {
                      DAST._IType _5018___mcc_h1852 = _source192.dtor_element;
                    } else if (_source192.is_Multiset) {
                      DAST._IType _5019___mcc_h1854 = _source192.dtor_element;
                    } else if (_source192.is_Map) {
                      DAST._IType _5020___mcc_h1856 = _source192.dtor_key;
                      DAST._IType _5021___mcc_h1857 = _source192.dtor_value;
                    } else if (_source192.is_SetBuilder) {
                      DAST._IType _5022___mcc_h1860 = _source192.dtor_element;
                    } else if (_source192.is_MapBuilder) {
                      DAST._IType _5023___mcc_h1862 = _source192.dtor_key;
                      DAST._IType _5024___mcc_h1863 = _source192.dtor_value;
                    } else if (_source192.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5025___mcc_h1866 = _source192.dtor_args;
                      DAST._IType _5026___mcc_h1867 = _source192.dtor_result;
                    } else if (_source192.is_Primitive) {
                      DAST._IPrimitive _5027___mcc_h1870 = _source192.dtor_Primitive_a0;
                    } else if (_source192.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5028___mcc_h1872 = _source192.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5029___mcc_h1874 = _source192.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5030_recursiveGen;
                      DCOMP._IOwnership _5031_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5032_recIdents;
                      RAST._IExpr _out1522;
                      DCOMP._IOwnership _out1523;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1524;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1522, out _out1523, out _out1524);
                      _5030_recursiveGen = _out1522;
                      _5031_recOwned = _out1523;
                      _5032_recIdents = _out1524;
                      RAST._IExpr _out1525;
                      DCOMP._IOwnership _out1526;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5030_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_4987_nativeToType).dtor_value), _5031_recOwned, expectedOwnership, out _out1525, out _out1526);
                      r = _out1525;
                      resultingOwnership = _out1526;
                      readIdents = _5032_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1527;
                  DCOMP._IOwnership _out1528;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1529;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _4986_b), _4986_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1527, out _out1528, out _out1529);
                  r = _out1527;
                  resultingOwnership = _out1528;
                  readIdents = _out1529;
                }
              }
            }
          } else if (_source189.is_Nullable) {
            DAST._IType _5033___mcc_h658 = _source189.dtor_Nullable_a0;
            {
              RAST._IExpr _5034_recursiveGen;
              DCOMP._IOwnership _5035_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5036_recIdents;
              RAST._IExpr _out1530;
              DCOMP._IOwnership _out1531;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1532;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1530, out _out1531, out _out1532);
              _5034_recursiveGen = _out1530;
              _5035_recOwned = _out1531;
              _5036_recIdents = _out1532;
              r = _5034_recursiveGen;
              if (object.Equals(_5035_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1533;
              DCOMP._IOwnership _out1534;
              DCOMP.COMP.FromOwnership(r, _5035_recOwned, expectedOwnership, out _out1533, out _out1534);
              r = _out1533;
              resultingOwnership = _out1534;
              readIdents = _5036_recIdents;
            }
          } else if (_source189.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5037___mcc_h660 = _source189.dtor_Tuple_a0;
            {
              RAST._IType _5038_fromTpeGen;
              RAST._IType _out1535;
              _out1535 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5038_fromTpeGen = _out1535;
              RAST._IType _5039_toTpeGen;
              RAST._IType _out1536;
              _out1536 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5039_toTpeGen = _out1536;
              RAST._IExpr _5040_recursiveGen;
              DCOMP._IOwnership _5041_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5042_recIdents;
              RAST._IExpr _out1537;
              DCOMP._IOwnership _out1538;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1539;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1537, out _out1538, out _out1539);
              _5040_recursiveGen = _out1537;
              _5041_recOwned = _out1538;
              _5042_recIdents = _out1539;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5040_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5038_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5039_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1540;
              DCOMP._IOwnership _out1541;
              DCOMP.COMP.FromOwnership(r, _5041_recOwned, expectedOwnership, out _out1540, out _out1541);
              r = _out1540;
              resultingOwnership = _out1541;
              readIdents = _5042_recIdents;
            }
          } else if (_source189.is_Array) {
            DAST._IType _5043___mcc_h662 = _source189.dtor_element;
            BigInteger _5044___mcc_h663 = _source189.dtor_dims;
            {
              RAST._IType _5045_fromTpeGen;
              RAST._IType _out1542;
              _out1542 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5045_fromTpeGen = _out1542;
              RAST._IType _5046_toTpeGen;
              RAST._IType _out1543;
              _out1543 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5046_toTpeGen = _out1543;
              RAST._IExpr _5047_recursiveGen;
              DCOMP._IOwnership _5048_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5049_recIdents;
              RAST._IExpr _out1544;
              DCOMP._IOwnership _out1545;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1546;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1544, out _out1545, out _out1546);
              _5047_recursiveGen = _out1544;
              _5048_recOwned = _out1545;
              _5049_recIdents = _out1546;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5047_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5045_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5046_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1547;
              DCOMP._IOwnership _out1548;
              DCOMP.COMP.FromOwnership(r, _5048_recOwned, expectedOwnership, out _out1547, out _out1548);
              r = _out1547;
              resultingOwnership = _out1548;
              readIdents = _5049_recIdents;
            }
          } else if (_source189.is_Seq) {
            DAST._IType _5050___mcc_h666 = _source189.dtor_element;
            {
              RAST._IType _5051_fromTpeGen;
              RAST._IType _out1549;
              _out1549 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5051_fromTpeGen = _out1549;
              RAST._IType _5052_toTpeGen;
              RAST._IType _out1550;
              _out1550 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5052_toTpeGen = _out1550;
              RAST._IExpr _5053_recursiveGen;
              DCOMP._IOwnership _5054_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5055_recIdents;
              RAST._IExpr _out1551;
              DCOMP._IOwnership _out1552;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1553;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1551, out _out1552, out _out1553);
              _5053_recursiveGen = _out1551;
              _5054_recOwned = _out1552;
              _5055_recIdents = _out1553;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5053_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5051_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5052_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1554;
              DCOMP._IOwnership _out1555;
              DCOMP.COMP.FromOwnership(r, _5054_recOwned, expectedOwnership, out _out1554, out _out1555);
              r = _out1554;
              resultingOwnership = _out1555;
              readIdents = _5055_recIdents;
            }
          } else if (_source189.is_Set) {
            DAST._IType _5056___mcc_h668 = _source189.dtor_element;
            {
              RAST._IType _5057_fromTpeGen;
              RAST._IType _out1556;
              _out1556 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5057_fromTpeGen = _out1556;
              RAST._IType _5058_toTpeGen;
              RAST._IType _out1557;
              _out1557 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5058_toTpeGen = _out1557;
              RAST._IExpr _5059_recursiveGen;
              DCOMP._IOwnership _5060_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5061_recIdents;
              RAST._IExpr _out1558;
              DCOMP._IOwnership _out1559;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1560;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1558, out _out1559, out _out1560);
              _5059_recursiveGen = _out1558;
              _5060_recOwned = _out1559;
              _5061_recIdents = _out1560;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5059_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5057_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5058_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1561;
              DCOMP._IOwnership _out1562;
              DCOMP.COMP.FromOwnership(r, _5060_recOwned, expectedOwnership, out _out1561, out _out1562);
              r = _out1561;
              resultingOwnership = _out1562;
              readIdents = _5061_recIdents;
            }
          } else if (_source189.is_Multiset) {
            DAST._IType _5062___mcc_h670 = _source189.dtor_element;
            {
              RAST._IType _5063_fromTpeGen;
              RAST._IType _out1563;
              _out1563 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5063_fromTpeGen = _out1563;
              RAST._IType _5064_toTpeGen;
              RAST._IType _out1564;
              _out1564 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5064_toTpeGen = _out1564;
              RAST._IExpr _5065_recursiveGen;
              DCOMP._IOwnership _5066_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5067_recIdents;
              RAST._IExpr _out1565;
              DCOMP._IOwnership _out1566;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1567;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1565, out _out1566, out _out1567);
              _5065_recursiveGen = _out1565;
              _5066_recOwned = _out1566;
              _5067_recIdents = _out1567;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5065_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5063_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5064_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1568;
              DCOMP._IOwnership _out1569;
              DCOMP.COMP.FromOwnership(r, _5066_recOwned, expectedOwnership, out _out1568, out _out1569);
              r = _out1568;
              resultingOwnership = _out1569;
              readIdents = _5067_recIdents;
            }
          } else if (_source189.is_Map) {
            DAST._IType _5068___mcc_h672 = _source189.dtor_key;
            DAST._IType _5069___mcc_h673 = _source189.dtor_value;
            {
              RAST._IType _5070_fromTpeGen;
              RAST._IType _out1570;
              _out1570 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5070_fromTpeGen = _out1570;
              RAST._IType _5071_toTpeGen;
              RAST._IType _out1571;
              _out1571 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5071_toTpeGen = _out1571;
              RAST._IExpr _5072_recursiveGen;
              DCOMP._IOwnership _5073_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5074_recIdents;
              RAST._IExpr _out1572;
              DCOMP._IOwnership _out1573;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1574;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1572, out _out1573, out _out1574);
              _5072_recursiveGen = _out1572;
              _5073_recOwned = _out1573;
              _5074_recIdents = _out1574;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5072_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5070_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5071_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1575;
              DCOMP._IOwnership _out1576;
              DCOMP.COMP.FromOwnership(r, _5073_recOwned, expectedOwnership, out _out1575, out _out1576);
              r = _out1575;
              resultingOwnership = _out1576;
              readIdents = _5074_recIdents;
            }
          } else if (_source189.is_SetBuilder) {
            DAST._IType _5075___mcc_h676 = _source189.dtor_element;
            {
              RAST._IType _5076_fromTpeGen;
              RAST._IType _out1577;
              _out1577 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5076_fromTpeGen = _out1577;
              RAST._IType _5077_toTpeGen;
              RAST._IType _out1578;
              _out1578 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5077_toTpeGen = _out1578;
              RAST._IExpr _5078_recursiveGen;
              DCOMP._IOwnership _5079_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5080_recIdents;
              RAST._IExpr _out1579;
              DCOMP._IOwnership _out1580;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1581;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1579, out _out1580, out _out1581);
              _5078_recursiveGen = _out1579;
              _5079_recOwned = _out1580;
              _5080_recIdents = _out1581;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5078_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5076_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5077_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1582;
              DCOMP._IOwnership _out1583;
              DCOMP.COMP.FromOwnership(r, _5079_recOwned, expectedOwnership, out _out1582, out _out1583);
              r = _out1582;
              resultingOwnership = _out1583;
              readIdents = _5080_recIdents;
            }
          } else if (_source189.is_MapBuilder) {
            DAST._IType _5081___mcc_h678 = _source189.dtor_key;
            DAST._IType _5082___mcc_h679 = _source189.dtor_value;
            {
              RAST._IType _5083_fromTpeGen;
              RAST._IType _out1584;
              _out1584 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5083_fromTpeGen = _out1584;
              RAST._IType _5084_toTpeGen;
              RAST._IType _out1585;
              _out1585 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5084_toTpeGen = _out1585;
              RAST._IExpr _5085_recursiveGen;
              DCOMP._IOwnership _5086_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5087_recIdents;
              RAST._IExpr _out1586;
              DCOMP._IOwnership _out1587;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1588;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1586, out _out1587, out _out1588);
              _5085_recursiveGen = _out1586;
              _5086_recOwned = _out1587;
              _5087_recIdents = _out1588;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5085_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5083_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5084_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1589;
              DCOMP._IOwnership _out1590;
              DCOMP.COMP.FromOwnership(r, _5086_recOwned, expectedOwnership, out _out1589, out _out1590);
              r = _out1589;
              resultingOwnership = _out1590;
              readIdents = _5087_recIdents;
            }
          } else if (_source189.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5088___mcc_h682 = _source189.dtor_args;
            DAST._IType _5089___mcc_h683 = _source189.dtor_result;
            {
              RAST._IType _5090_fromTpeGen;
              RAST._IType _out1591;
              _out1591 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5090_fromTpeGen = _out1591;
              RAST._IType _5091_toTpeGen;
              RAST._IType _out1592;
              _out1592 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5091_toTpeGen = _out1592;
              RAST._IExpr _5092_recursiveGen;
              DCOMP._IOwnership _5093_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5094_recIdents;
              RAST._IExpr _out1593;
              DCOMP._IOwnership _out1594;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1595;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1593, out _out1594, out _out1595);
              _5092_recursiveGen = _out1593;
              _5093_recOwned = _out1594;
              _5094_recIdents = _out1595;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5092_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5090_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5091_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1596;
              DCOMP._IOwnership _out1597;
              DCOMP.COMP.FromOwnership(r, _5093_recOwned, expectedOwnership, out _out1596, out _out1597);
              r = _out1596;
              resultingOwnership = _out1597;
              readIdents = _5094_recIdents;
            }
          } else if (_source189.is_Primitive) {
            DAST._IPrimitive _5095___mcc_h686 = _source189.dtor_Primitive_a0;
            {
              RAST._IType _5096_fromTpeGen;
              RAST._IType _out1598;
              _out1598 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5096_fromTpeGen = _out1598;
              RAST._IType _5097_toTpeGen;
              RAST._IType _out1599;
              _out1599 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5097_toTpeGen = _out1599;
              RAST._IExpr _5098_recursiveGen;
              DCOMP._IOwnership _5099_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5100_recIdents;
              RAST._IExpr _out1600;
              DCOMP._IOwnership _out1601;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1602;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1600, out _out1601, out _out1602);
              _5098_recursiveGen = _out1600;
              _5099_recOwned = _out1601;
              _5100_recIdents = _out1602;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5098_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5096_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5097_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1603;
              DCOMP._IOwnership _out1604;
              DCOMP.COMP.FromOwnership(r, _5099_recOwned, expectedOwnership, out _out1603, out _out1604);
              r = _out1603;
              resultingOwnership = _out1604;
              readIdents = _5100_recIdents;
            }
          } else if (_source189.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5101___mcc_h688 = _source189.dtor_Passthrough_a0;
            {
              RAST._IType _5102_fromTpeGen;
              RAST._IType _out1605;
              _out1605 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5102_fromTpeGen = _out1605;
              RAST._IType _5103_toTpeGen;
              RAST._IType _out1606;
              _out1606 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5103_toTpeGen = _out1606;
              RAST._IExpr _5104_recursiveGen;
              DCOMP._IOwnership _5105_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5106_recIdents;
              RAST._IExpr _out1607;
              DCOMP._IOwnership _out1608;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1609;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1607, out _out1608, out _out1609);
              _5104_recursiveGen = _out1607;
              _5105_recOwned = _out1608;
              _5106_recIdents = _out1609;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5104_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5102_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5103_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1610;
              DCOMP._IOwnership _out1611;
              DCOMP.COMP.FromOwnership(r, _5105_recOwned, expectedOwnership, out _out1610, out _out1611);
              r = _out1610;
              resultingOwnership = _out1611;
              readIdents = _5106_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5107___mcc_h690 = _source189.dtor_TypeArg_a0;
            {
              RAST._IType _5108_fromTpeGen;
              RAST._IType _out1612;
              _out1612 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5108_fromTpeGen = _out1612;
              RAST._IType _5109_toTpeGen;
              RAST._IType _out1613;
              _out1613 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5109_toTpeGen = _out1613;
              RAST._IExpr _5110_recursiveGen;
              DCOMP._IOwnership _5111_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5112_recIdents;
              RAST._IExpr _out1614;
              DCOMP._IOwnership _out1615;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1616;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1614, out _out1615, out _out1616);
              _5110_recursiveGen = _out1614;
              _5111_recOwned = _out1615;
              _5112_recIdents = _out1616;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5110_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5108_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5109_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1617;
              DCOMP._IOwnership _out1618;
              DCOMP.COMP.FromOwnership(r, _5111_recOwned, expectedOwnership, out _out1617, out _out1618);
              r = _out1617;
              resultingOwnership = _out1618;
              readIdents = _5112_recIdents;
            }
          }
        } else if (_source130.is_Map) {
          DAST._IType _5113___mcc_h692 = _source130.dtor_key;
          DAST._IType _5114___mcc_h693 = _source130.dtor_value;
          DAST._IType _source194 = _3476___mcc_h1;
          if (_source194.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5115___mcc_h700 = _source194.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5116___mcc_h701 = _source194.dtor_typeArgs;
            DAST._IResolvedType _5117___mcc_h702 = _source194.dtor_resolved;
            DAST._IResolvedType _source195 = _5117___mcc_h702;
            if (_source195.is_AllocatedDatatype) {
              DAST._IDatatypeType _5118___mcc_h706 = _source195.dtor_datatypeType;
              {
                RAST._IType _5119_fromTpeGen;
                RAST._IType _out1619;
                _out1619 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5119_fromTpeGen = _out1619;
                RAST._IType _5120_toTpeGen;
                RAST._IType _out1620;
                _out1620 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5120_toTpeGen = _out1620;
                RAST._IExpr _5121_recursiveGen;
                DCOMP._IOwnership _5122_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5123_recIdents;
                RAST._IExpr _out1621;
                DCOMP._IOwnership _out1622;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1623;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1621, out _out1622, out _out1623);
                _5121_recursiveGen = _out1621;
                _5122_recOwned = _out1622;
                _5123_recIdents = _out1623;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5121_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5119_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5120_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1624;
                DCOMP._IOwnership _out1625;
                DCOMP.COMP.FromOwnership(r, _5122_recOwned, expectedOwnership, out _out1624, out _out1625);
                r = _out1624;
                resultingOwnership = _out1625;
                readIdents = _5123_recIdents;
              }
            } else if (_source195.is_Datatype) {
              DAST._IDatatypeType _5124___mcc_h708 = _source195.dtor_datatypeType;
              {
                RAST._IType _5125_fromTpeGen;
                RAST._IType _out1626;
                _out1626 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5125_fromTpeGen = _out1626;
                RAST._IType _5126_toTpeGen;
                RAST._IType _out1627;
                _out1627 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5126_toTpeGen = _out1627;
                RAST._IExpr _5127_recursiveGen;
                DCOMP._IOwnership _5128_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5129_recIdents;
                RAST._IExpr _out1628;
                DCOMP._IOwnership _out1629;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1630;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1628, out _out1629, out _out1630);
                _5127_recursiveGen = _out1628;
                _5128_recOwned = _out1629;
                _5129_recIdents = _out1630;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5127_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5125_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5126_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1631;
                DCOMP._IOwnership _out1632;
                DCOMP.COMP.FromOwnership(r, _5128_recOwned, expectedOwnership, out _out1631, out _out1632);
                r = _out1631;
                resultingOwnership = _out1632;
                readIdents = _5129_recIdents;
              }
            } else if (_source195.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5130___mcc_h710 = _source195.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5131___mcc_h711 = _source195.dtor_attributes;
              {
                RAST._IType _5132_fromTpeGen;
                RAST._IType _out1633;
                _out1633 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5132_fromTpeGen = _out1633;
                RAST._IType _5133_toTpeGen;
                RAST._IType _out1634;
                _out1634 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5133_toTpeGen = _out1634;
                RAST._IExpr _5134_recursiveGen;
                DCOMP._IOwnership _5135_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5136_recIdents;
                RAST._IExpr _out1635;
                DCOMP._IOwnership _out1636;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1637;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1635, out _out1636, out _out1637);
                _5134_recursiveGen = _out1635;
                _5135_recOwned = _out1636;
                _5136_recIdents = _out1637;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5134_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5132_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5133_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1638;
                DCOMP._IOwnership _out1639;
                DCOMP.COMP.FromOwnership(r, _5135_recOwned, expectedOwnership, out _out1638, out _out1639);
                r = _out1638;
                resultingOwnership = _out1639;
                readIdents = _5136_recIdents;
              }
            } else {
              DAST._IType _5137___mcc_h714 = _source195.dtor_baseType;
              DAST._INewtypeRange _5138___mcc_h715 = _source195.dtor_range;
              bool _5139___mcc_h716 = _source195.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5140___mcc_h717 = _source195.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5141_attributes = _5140___mcc_h717;
              bool _5142_erase = _5139___mcc_h716;
              DAST._INewtypeRange _5143_range = _5138___mcc_h715;
              DAST._IType _5144_b = _5137___mcc_h714;
              {
                Std.Wrappers._IOption<RAST._IType> _5145_nativeToType;
                _5145_nativeToType = DCOMP.COMP.NewtypeToRustType(_5144_b, _5143_range);
                if (object.Equals(_3470_fromTpe, _5144_b)) {
                  RAST._IExpr _5146_recursiveGen;
                  DCOMP._IOwnership _5147_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5148_recIdents;
                  RAST._IExpr _out1640;
                  DCOMP._IOwnership _out1641;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1642;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1640, out _out1641, out _out1642);
                  _5146_recursiveGen = _out1640;
                  _5147_recOwned = _out1641;
                  _5148_recIdents = _out1642;
                  readIdents = _5148_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source196 = _5145_nativeToType;
                  if (_source196.is_None) {
                    if (_5142_erase) {
                      r = _5146_recursiveGen;
                    } else {
                      RAST._IType _5149_rhsType;
                      RAST._IType _out1643;
                      _out1643 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _5149_rhsType = _out1643;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5149_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5146_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1644;
                    DCOMP._IOwnership _out1645;
                    DCOMP.COMP.FromOwnership(r, _5147_recOwned, expectedOwnership, out _out1644, out _out1645);
                    r = _out1644;
                    resultingOwnership = _out1645;
                  } else {
                    RAST._IType _5150___mcc_h1876 = _source196.dtor_value;
                    RAST._IType _5151_v = _5150___mcc_h1876;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5146_recursiveGen, RAST.Expr.create_ExprFromType(_5151_v)));
                    RAST._IExpr _out1646;
                    DCOMP._IOwnership _out1647;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1646, out _out1647);
                    r = _out1646;
                    resultingOwnership = _out1647;
                  }
                } else {
                  if ((_5145_nativeToType).is_Some) {
                    DAST._IType _source197 = _3470_fromTpe;
                    if (_source197.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5152___mcc_h1877 = _source197.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5153___mcc_h1878 = _source197.dtor_typeArgs;
                      DAST._IResolvedType _5154___mcc_h1879 = _source197.dtor_resolved;
                      DAST._IResolvedType _source198 = _5154___mcc_h1879;
                      if (_source198.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5155___mcc_h1883 = _source198.dtor_datatypeType;
                      } else if (_source198.is_Datatype) {
                        DAST._IDatatypeType _5156___mcc_h1885 = _source198.dtor_datatypeType;
                      } else if (_source198.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5157___mcc_h1887 = _source198.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5158___mcc_h1888 = _source198.dtor_attributes;
                      } else {
                        DAST._IType _5159___mcc_h1891 = _source198.dtor_baseType;
                        DAST._INewtypeRange _5160___mcc_h1892 = _source198.dtor_range;
                        bool _5161___mcc_h1893 = _source198.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5162___mcc_h1894 = _source198.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5163_attributes0 = _5162___mcc_h1894;
                        bool _5164_erase0 = _5161___mcc_h1893;
                        DAST._INewtypeRange _5165_range0 = _5160___mcc_h1892;
                        DAST._IType _5166_b0 = _5159___mcc_h1891;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5167_nativeFromType;
                          _5167_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5166_b0, _5165_range0);
                          if ((_5167_nativeFromType).is_Some) {
                            RAST._IExpr _5168_recursiveGen;
                            DCOMP._IOwnership _5169_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5170_recIdents;
                            RAST._IExpr _out1648;
                            DCOMP._IOwnership _out1649;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1650;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1648, out _out1649, out _out1650);
                            _5168_recursiveGen = _out1648;
                            _5169_recOwned = _out1649;
                            _5170_recIdents = _out1650;
                            RAST._IExpr _out1651;
                            DCOMP._IOwnership _out1652;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5168_recursiveGen, (_5145_nativeToType).dtor_value), _5169_recOwned, expectedOwnership, out _out1651, out _out1652);
                            r = _out1651;
                            resultingOwnership = _out1652;
                            readIdents = _5170_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source197.is_Nullable) {
                      DAST._IType _5171___mcc_h1899 = _source197.dtor_Nullable_a0;
                    } else if (_source197.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5172___mcc_h1901 = _source197.dtor_Tuple_a0;
                    } else if (_source197.is_Array) {
                      DAST._IType _5173___mcc_h1903 = _source197.dtor_element;
                      BigInteger _5174___mcc_h1904 = _source197.dtor_dims;
                    } else if (_source197.is_Seq) {
                      DAST._IType _5175___mcc_h1907 = _source197.dtor_element;
                    } else if (_source197.is_Set) {
                      DAST._IType _5176___mcc_h1909 = _source197.dtor_element;
                    } else if (_source197.is_Multiset) {
                      DAST._IType _5177___mcc_h1911 = _source197.dtor_element;
                    } else if (_source197.is_Map) {
                      DAST._IType _5178___mcc_h1913 = _source197.dtor_key;
                      DAST._IType _5179___mcc_h1914 = _source197.dtor_value;
                    } else if (_source197.is_SetBuilder) {
                      DAST._IType _5180___mcc_h1917 = _source197.dtor_element;
                    } else if (_source197.is_MapBuilder) {
                      DAST._IType _5181___mcc_h1919 = _source197.dtor_key;
                      DAST._IType _5182___mcc_h1920 = _source197.dtor_value;
                    } else if (_source197.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5183___mcc_h1923 = _source197.dtor_args;
                      DAST._IType _5184___mcc_h1924 = _source197.dtor_result;
                    } else if (_source197.is_Primitive) {
                      DAST._IPrimitive _5185___mcc_h1927 = _source197.dtor_Primitive_a0;
                    } else if (_source197.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5186___mcc_h1929 = _source197.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5187___mcc_h1931 = _source197.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5188_recursiveGen;
                      DCOMP._IOwnership _5189_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5190_recIdents;
                      RAST._IExpr _out1653;
                      DCOMP._IOwnership _out1654;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1655;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1653, out _out1654, out _out1655);
                      _5188_recursiveGen = _out1653;
                      _5189_recOwned = _out1654;
                      _5190_recIdents = _out1655;
                      RAST._IExpr _out1656;
                      DCOMP._IOwnership _out1657;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5188_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5145_nativeToType).dtor_value), _5189_recOwned, expectedOwnership, out _out1656, out _out1657);
                      r = _out1656;
                      resultingOwnership = _out1657;
                      readIdents = _5190_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1658;
                  DCOMP._IOwnership _out1659;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1660;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _5144_b), _5144_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1658, out _out1659, out _out1660);
                  r = _out1658;
                  resultingOwnership = _out1659;
                  readIdents = _out1660;
                }
              }
            }
          } else if (_source194.is_Nullable) {
            DAST._IType _5191___mcc_h722 = _source194.dtor_Nullable_a0;
            {
              RAST._IExpr _5192_recursiveGen;
              DCOMP._IOwnership _5193_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5194_recIdents;
              RAST._IExpr _out1661;
              DCOMP._IOwnership _out1662;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1663;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1661, out _out1662, out _out1663);
              _5192_recursiveGen = _out1661;
              _5193_recOwned = _out1662;
              _5194_recIdents = _out1663;
              r = _5192_recursiveGen;
              if (object.Equals(_5193_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1664;
              DCOMP._IOwnership _out1665;
              DCOMP.COMP.FromOwnership(r, _5193_recOwned, expectedOwnership, out _out1664, out _out1665);
              r = _out1664;
              resultingOwnership = _out1665;
              readIdents = _5194_recIdents;
            }
          } else if (_source194.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5195___mcc_h724 = _source194.dtor_Tuple_a0;
            {
              RAST._IType _5196_fromTpeGen;
              RAST._IType _out1666;
              _out1666 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5196_fromTpeGen = _out1666;
              RAST._IType _5197_toTpeGen;
              RAST._IType _out1667;
              _out1667 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5197_toTpeGen = _out1667;
              RAST._IExpr _5198_recursiveGen;
              DCOMP._IOwnership _5199_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5200_recIdents;
              RAST._IExpr _out1668;
              DCOMP._IOwnership _out1669;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1670;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1668, out _out1669, out _out1670);
              _5198_recursiveGen = _out1668;
              _5199_recOwned = _out1669;
              _5200_recIdents = _out1670;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5198_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5196_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5197_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1671;
              DCOMP._IOwnership _out1672;
              DCOMP.COMP.FromOwnership(r, _5199_recOwned, expectedOwnership, out _out1671, out _out1672);
              r = _out1671;
              resultingOwnership = _out1672;
              readIdents = _5200_recIdents;
            }
          } else if (_source194.is_Array) {
            DAST._IType _5201___mcc_h726 = _source194.dtor_element;
            BigInteger _5202___mcc_h727 = _source194.dtor_dims;
            {
              RAST._IType _5203_fromTpeGen;
              RAST._IType _out1673;
              _out1673 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5203_fromTpeGen = _out1673;
              RAST._IType _5204_toTpeGen;
              RAST._IType _out1674;
              _out1674 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5204_toTpeGen = _out1674;
              RAST._IExpr _5205_recursiveGen;
              DCOMP._IOwnership _5206_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5207_recIdents;
              RAST._IExpr _out1675;
              DCOMP._IOwnership _out1676;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1677;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1675, out _out1676, out _out1677);
              _5205_recursiveGen = _out1675;
              _5206_recOwned = _out1676;
              _5207_recIdents = _out1677;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5205_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5203_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5204_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1678;
              DCOMP._IOwnership _out1679;
              DCOMP.COMP.FromOwnership(r, _5206_recOwned, expectedOwnership, out _out1678, out _out1679);
              r = _out1678;
              resultingOwnership = _out1679;
              readIdents = _5207_recIdents;
            }
          } else if (_source194.is_Seq) {
            DAST._IType _5208___mcc_h730 = _source194.dtor_element;
            {
              RAST._IType _5209_fromTpeGen;
              RAST._IType _out1680;
              _out1680 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5209_fromTpeGen = _out1680;
              RAST._IType _5210_toTpeGen;
              RAST._IType _out1681;
              _out1681 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5210_toTpeGen = _out1681;
              RAST._IExpr _5211_recursiveGen;
              DCOMP._IOwnership _5212_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5213_recIdents;
              RAST._IExpr _out1682;
              DCOMP._IOwnership _out1683;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1684;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1682, out _out1683, out _out1684);
              _5211_recursiveGen = _out1682;
              _5212_recOwned = _out1683;
              _5213_recIdents = _out1684;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5211_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5209_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5210_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1685;
              DCOMP._IOwnership _out1686;
              DCOMP.COMP.FromOwnership(r, _5212_recOwned, expectedOwnership, out _out1685, out _out1686);
              r = _out1685;
              resultingOwnership = _out1686;
              readIdents = _5213_recIdents;
            }
          } else if (_source194.is_Set) {
            DAST._IType _5214___mcc_h732 = _source194.dtor_element;
            {
              RAST._IType _5215_fromTpeGen;
              RAST._IType _out1687;
              _out1687 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5215_fromTpeGen = _out1687;
              RAST._IType _5216_toTpeGen;
              RAST._IType _out1688;
              _out1688 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5216_toTpeGen = _out1688;
              RAST._IExpr _5217_recursiveGen;
              DCOMP._IOwnership _5218_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5219_recIdents;
              RAST._IExpr _out1689;
              DCOMP._IOwnership _out1690;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1691;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1689, out _out1690, out _out1691);
              _5217_recursiveGen = _out1689;
              _5218_recOwned = _out1690;
              _5219_recIdents = _out1691;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5217_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5215_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5216_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1692;
              DCOMP._IOwnership _out1693;
              DCOMP.COMP.FromOwnership(r, _5218_recOwned, expectedOwnership, out _out1692, out _out1693);
              r = _out1692;
              resultingOwnership = _out1693;
              readIdents = _5219_recIdents;
            }
          } else if (_source194.is_Multiset) {
            DAST._IType _5220___mcc_h734 = _source194.dtor_element;
            {
              RAST._IType _5221_fromTpeGen;
              RAST._IType _out1694;
              _out1694 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5221_fromTpeGen = _out1694;
              RAST._IType _5222_toTpeGen;
              RAST._IType _out1695;
              _out1695 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5222_toTpeGen = _out1695;
              RAST._IExpr _5223_recursiveGen;
              DCOMP._IOwnership _5224_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5225_recIdents;
              RAST._IExpr _out1696;
              DCOMP._IOwnership _out1697;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1698;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1696, out _out1697, out _out1698);
              _5223_recursiveGen = _out1696;
              _5224_recOwned = _out1697;
              _5225_recIdents = _out1698;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5223_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5221_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5222_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1699;
              DCOMP._IOwnership _out1700;
              DCOMP.COMP.FromOwnership(r, _5224_recOwned, expectedOwnership, out _out1699, out _out1700);
              r = _out1699;
              resultingOwnership = _out1700;
              readIdents = _5225_recIdents;
            }
          } else if (_source194.is_Map) {
            DAST._IType _5226___mcc_h736 = _source194.dtor_key;
            DAST._IType _5227___mcc_h737 = _source194.dtor_value;
            {
              RAST._IType _5228_fromTpeGen;
              RAST._IType _out1701;
              _out1701 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5228_fromTpeGen = _out1701;
              RAST._IType _5229_toTpeGen;
              RAST._IType _out1702;
              _out1702 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5229_toTpeGen = _out1702;
              RAST._IExpr _5230_recursiveGen;
              DCOMP._IOwnership _5231_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5232_recIdents;
              RAST._IExpr _out1703;
              DCOMP._IOwnership _out1704;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1705;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1703, out _out1704, out _out1705);
              _5230_recursiveGen = _out1703;
              _5231_recOwned = _out1704;
              _5232_recIdents = _out1705;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5230_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5228_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5229_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1706;
              DCOMP._IOwnership _out1707;
              DCOMP.COMP.FromOwnership(r, _5231_recOwned, expectedOwnership, out _out1706, out _out1707);
              r = _out1706;
              resultingOwnership = _out1707;
              readIdents = _5232_recIdents;
            }
          } else if (_source194.is_SetBuilder) {
            DAST._IType _5233___mcc_h740 = _source194.dtor_element;
            {
              RAST._IType _5234_fromTpeGen;
              RAST._IType _out1708;
              _out1708 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5234_fromTpeGen = _out1708;
              RAST._IType _5235_toTpeGen;
              RAST._IType _out1709;
              _out1709 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5235_toTpeGen = _out1709;
              RAST._IExpr _5236_recursiveGen;
              DCOMP._IOwnership _5237_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5238_recIdents;
              RAST._IExpr _out1710;
              DCOMP._IOwnership _out1711;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1712;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1710, out _out1711, out _out1712);
              _5236_recursiveGen = _out1710;
              _5237_recOwned = _out1711;
              _5238_recIdents = _out1712;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5236_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5234_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5235_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1713;
              DCOMP._IOwnership _out1714;
              DCOMP.COMP.FromOwnership(r, _5237_recOwned, expectedOwnership, out _out1713, out _out1714);
              r = _out1713;
              resultingOwnership = _out1714;
              readIdents = _5238_recIdents;
            }
          } else if (_source194.is_MapBuilder) {
            DAST._IType _5239___mcc_h742 = _source194.dtor_key;
            DAST._IType _5240___mcc_h743 = _source194.dtor_value;
            {
              RAST._IType _5241_fromTpeGen;
              RAST._IType _out1715;
              _out1715 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5241_fromTpeGen = _out1715;
              RAST._IType _5242_toTpeGen;
              RAST._IType _out1716;
              _out1716 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5242_toTpeGen = _out1716;
              RAST._IExpr _5243_recursiveGen;
              DCOMP._IOwnership _5244_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5245_recIdents;
              RAST._IExpr _out1717;
              DCOMP._IOwnership _out1718;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1719;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1717, out _out1718, out _out1719);
              _5243_recursiveGen = _out1717;
              _5244_recOwned = _out1718;
              _5245_recIdents = _out1719;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5243_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5241_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5242_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1720;
              DCOMP._IOwnership _out1721;
              DCOMP.COMP.FromOwnership(r, _5244_recOwned, expectedOwnership, out _out1720, out _out1721);
              r = _out1720;
              resultingOwnership = _out1721;
              readIdents = _5245_recIdents;
            }
          } else if (_source194.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5246___mcc_h746 = _source194.dtor_args;
            DAST._IType _5247___mcc_h747 = _source194.dtor_result;
            {
              RAST._IType _5248_fromTpeGen;
              RAST._IType _out1722;
              _out1722 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5248_fromTpeGen = _out1722;
              RAST._IType _5249_toTpeGen;
              RAST._IType _out1723;
              _out1723 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5249_toTpeGen = _out1723;
              RAST._IExpr _5250_recursiveGen;
              DCOMP._IOwnership _5251_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5252_recIdents;
              RAST._IExpr _out1724;
              DCOMP._IOwnership _out1725;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1726;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1724, out _out1725, out _out1726);
              _5250_recursiveGen = _out1724;
              _5251_recOwned = _out1725;
              _5252_recIdents = _out1726;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5250_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5248_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5249_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1727;
              DCOMP._IOwnership _out1728;
              DCOMP.COMP.FromOwnership(r, _5251_recOwned, expectedOwnership, out _out1727, out _out1728);
              r = _out1727;
              resultingOwnership = _out1728;
              readIdents = _5252_recIdents;
            }
          } else if (_source194.is_Primitive) {
            DAST._IPrimitive _5253___mcc_h750 = _source194.dtor_Primitive_a0;
            {
              RAST._IType _5254_fromTpeGen;
              RAST._IType _out1729;
              _out1729 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5254_fromTpeGen = _out1729;
              RAST._IType _5255_toTpeGen;
              RAST._IType _out1730;
              _out1730 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5255_toTpeGen = _out1730;
              RAST._IExpr _5256_recursiveGen;
              DCOMP._IOwnership _5257_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5258_recIdents;
              RAST._IExpr _out1731;
              DCOMP._IOwnership _out1732;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1733;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1731, out _out1732, out _out1733);
              _5256_recursiveGen = _out1731;
              _5257_recOwned = _out1732;
              _5258_recIdents = _out1733;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5256_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5254_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5255_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1734;
              DCOMP._IOwnership _out1735;
              DCOMP.COMP.FromOwnership(r, _5257_recOwned, expectedOwnership, out _out1734, out _out1735);
              r = _out1734;
              resultingOwnership = _out1735;
              readIdents = _5258_recIdents;
            }
          } else if (_source194.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5259___mcc_h752 = _source194.dtor_Passthrough_a0;
            {
              RAST._IType _5260_fromTpeGen;
              RAST._IType _out1736;
              _out1736 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5260_fromTpeGen = _out1736;
              RAST._IType _5261_toTpeGen;
              RAST._IType _out1737;
              _out1737 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5261_toTpeGen = _out1737;
              RAST._IExpr _5262_recursiveGen;
              DCOMP._IOwnership _5263_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5264_recIdents;
              RAST._IExpr _out1738;
              DCOMP._IOwnership _out1739;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1740;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1738, out _out1739, out _out1740);
              _5262_recursiveGen = _out1738;
              _5263_recOwned = _out1739;
              _5264_recIdents = _out1740;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5262_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5260_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5261_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1741;
              DCOMP._IOwnership _out1742;
              DCOMP.COMP.FromOwnership(r, _5263_recOwned, expectedOwnership, out _out1741, out _out1742);
              r = _out1741;
              resultingOwnership = _out1742;
              readIdents = _5264_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5265___mcc_h754 = _source194.dtor_TypeArg_a0;
            {
              RAST._IType _5266_fromTpeGen;
              RAST._IType _out1743;
              _out1743 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5266_fromTpeGen = _out1743;
              RAST._IType _5267_toTpeGen;
              RAST._IType _out1744;
              _out1744 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5267_toTpeGen = _out1744;
              RAST._IExpr _5268_recursiveGen;
              DCOMP._IOwnership _5269_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5270_recIdents;
              RAST._IExpr _out1745;
              DCOMP._IOwnership _out1746;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1747;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1745, out _out1746, out _out1747);
              _5268_recursiveGen = _out1745;
              _5269_recOwned = _out1746;
              _5270_recIdents = _out1747;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5268_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5266_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5267_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1748;
              DCOMP._IOwnership _out1749;
              DCOMP.COMP.FromOwnership(r, _5269_recOwned, expectedOwnership, out _out1748, out _out1749);
              r = _out1748;
              resultingOwnership = _out1749;
              readIdents = _5270_recIdents;
            }
          }
        } else if (_source130.is_SetBuilder) {
          DAST._IType _5271___mcc_h756 = _source130.dtor_element;
          DAST._IType _source199 = _3476___mcc_h1;
          if (_source199.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5272___mcc_h760 = _source199.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5273___mcc_h761 = _source199.dtor_typeArgs;
            DAST._IResolvedType _5274___mcc_h762 = _source199.dtor_resolved;
            DAST._IResolvedType _source200 = _5274___mcc_h762;
            if (_source200.is_AllocatedDatatype) {
              DAST._IDatatypeType _5275___mcc_h766 = _source200.dtor_datatypeType;
              {
                RAST._IType _5276_fromTpeGen;
                RAST._IType _out1750;
                _out1750 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5276_fromTpeGen = _out1750;
                RAST._IType _5277_toTpeGen;
                RAST._IType _out1751;
                _out1751 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5277_toTpeGen = _out1751;
                RAST._IExpr _5278_recursiveGen;
                DCOMP._IOwnership _5279_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5280_recIdents;
                RAST._IExpr _out1752;
                DCOMP._IOwnership _out1753;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1754;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1752, out _out1753, out _out1754);
                _5278_recursiveGen = _out1752;
                _5279_recOwned = _out1753;
                _5280_recIdents = _out1754;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5278_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5276_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5277_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1755;
                DCOMP._IOwnership _out1756;
                DCOMP.COMP.FromOwnership(r, _5279_recOwned, expectedOwnership, out _out1755, out _out1756);
                r = _out1755;
                resultingOwnership = _out1756;
                readIdents = _5280_recIdents;
              }
            } else if (_source200.is_Datatype) {
              DAST._IDatatypeType _5281___mcc_h768 = _source200.dtor_datatypeType;
              {
                RAST._IType _5282_fromTpeGen;
                RAST._IType _out1757;
                _out1757 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5282_fromTpeGen = _out1757;
                RAST._IType _5283_toTpeGen;
                RAST._IType _out1758;
                _out1758 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5283_toTpeGen = _out1758;
                RAST._IExpr _5284_recursiveGen;
                DCOMP._IOwnership _5285_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5286_recIdents;
                RAST._IExpr _out1759;
                DCOMP._IOwnership _out1760;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1761;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1759, out _out1760, out _out1761);
                _5284_recursiveGen = _out1759;
                _5285_recOwned = _out1760;
                _5286_recIdents = _out1761;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5284_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5282_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5283_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1762;
                DCOMP._IOwnership _out1763;
                DCOMP.COMP.FromOwnership(r, _5285_recOwned, expectedOwnership, out _out1762, out _out1763);
                r = _out1762;
                resultingOwnership = _out1763;
                readIdents = _5286_recIdents;
              }
            } else if (_source200.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5287___mcc_h770 = _source200.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5288___mcc_h771 = _source200.dtor_attributes;
              {
                RAST._IType _5289_fromTpeGen;
                RAST._IType _out1764;
                _out1764 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5289_fromTpeGen = _out1764;
                RAST._IType _5290_toTpeGen;
                RAST._IType _out1765;
                _out1765 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5290_toTpeGen = _out1765;
                RAST._IExpr _5291_recursiveGen;
                DCOMP._IOwnership _5292_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5293_recIdents;
                RAST._IExpr _out1766;
                DCOMP._IOwnership _out1767;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1768;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1766, out _out1767, out _out1768);
                _5291_recursiveGen = _out1766;
                _5292_recOwned = _out1767;
                _5293_recIdents = _out1768;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5291_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5289_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5290_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1769;
                DCOMP._IOwnership _out1770;
                DCOMP.COMP.FromOwnership(r, _5292_recOwned, expectedOwnership, out _out1769, out _out1770);
                r = _out1769;
                resultingOwnership = _out1770;
                readIdents = _5293_recIdents;
              }
            } else {
              DAST._IType _5294___mcc_h774 = _source200.dtor_baseType;
              DAST._INewtypeRange _5295___mcc_h775 = _source200.dtor_range;
              bool _5296___mcc_h776 = _source200.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5297___mcc_h777 = _source200.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5298_attributes = _5297___mcc_h777;
              bool _5299_erase = _5296___mcc_h776;
              DAST._INewtypeRange _5300_range = _5295___mcc_h775;
              DAST._IType _5301_b = _5294___mcc_h774;
              {
                Std.Wrappers._IOption<RAST._IType> _5302_nativeToType;
                _5302_nativeToType = DCOMP.COMP.NewtypeToRustType(_5301_b, _5300_range);
                if (object.Equals(_3470_fromTpe, _5301_b)) {
                  RAST._IExpr _5303_recursiveGen;
                  DCOMP._IOwnership _5304_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5305_recIdents;
                  RAST._IExpr _out1771;
                  DCOMP._IOwnership _out1772;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1773;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1771, out _out1772, out _out1773);
                  _5303_recursiveGen = _out1771;
                  _5304_recOwned = _out1772;
                  _5305_recIdents = _out1773;
                  readIdents = _5305_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source201 = _5302_nativeToType;
                  if (_source201.is_None) {
                    if (_5299_erase) {
                      r = _5303_recursiveGen;
                    } else {
                      RAST._IType _5306_rhsType;
                      RAST._IType _out1774;
                      _out1774 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _5306_rhsType = _out1774;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5306_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5303_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1775;
                    DCOMP._IOwnership _out1776;
                    DCOMP.COMP.FromOwnership(r, _5304_recOwned, expectedOwnership, out _out1775, out _out1776);
                    r = _out1775;
                    resultingOwnership = _out1776;
                  } else {
                    RAST._IType _5307___mcc_h1933 = _source201.dtor_value;
                    RAST._IType _5308_v = _5307___mcc_h1933;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5303_recursiveGen, RAST.Expr.create_ExprFromType(_5308_v)));
                    RAST._IExpr _out1777;
                    DCOMP._IOwnership _out1778;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1777, out _out1778);
                    r = _out1777;
                    resultingOwnership = _out1778;
                  }
                } else {
                  if ((_5302_nativeToType).is_Some) {
                    DAST._IType _source202 = _3470_fromTpe;
                    if (_source202.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5309___mcc_h1934 = _source202.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5310___mcc_h1935 = _source202.dtor_typeArgs;
                      DAST._IResolvedType _5311___mcc_h1936 = _source202.dtor_resolved;
                      DAST._IResolvedType _source203 = _5311___mcc_h1936;
                      if (_source203.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5312___mcc_h1940 = _source203.dtor_datatypeType;
                      } else if (_source203.is_Datatype) {
                        DAST._IDatatypeType _5313___mcc_h1942 = _source203.dtor_datatypeType;
                      } else if (_source203.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5314___mcc_h1944 = _source203.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5315___mcc_h1945 = _source203.dtor_attributes;
                      } else {
                        DAST._IType _5316___mcc_h1948 = _source203.dtor_baseType;
                        DAST._INewtypeRange _5317___mcc_h1949 = _source203.dtor_range;
                        bool _5318___mcc_h1950 = _source203.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5319___mcc_h1951 = _source203.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5320_attributes0 = _5319___mcc_h1951;
                        bool _5321_erase0 = _5318___mcc_h1950;
                        DAST._INewtypeRange _5322_range0 = _5317___mcc_h1949;
                        DAST._IType _5323_b0 = _5316___mcc_h1948;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5324_nativeFromType;
                          _5324_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5323_b0, _5322_range0);
                          if ((_5324_nativeFromType).is_Some) {
                            RAST._IExpr _5325_recursiveGen;
                            DCOMP._IOwnership _5326_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5327_recIdents;
                            RAST._IExpr _out1779;
                            DCOMP._IOwnership _out1780;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1781;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1779, out _out1780, out _out1781);
                            _5325_recursiveGen = _out1779;
                            _5326_recOwned = _out1780;
                            _5327_recIdents = _out1781;
                            RAST._IExpr _out1782;
                            DCOMP._IOwnership _out1783;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5325_recursiveGen, (_5302_nativeToType).dtor_value), _5326_recOwned, expectedOwnership, out _out1782, out _out1783);
                            r = _out1782;
                            resultingOwnership = _out1783;
                            readIdents = _5327_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source202.is_Nullable) {
                      DAST._IType _5328___mcc_h1956 = _source202.dtor_Nullable_a0;
                    } else if (_source202.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5329___mcc_h1958 = _source202.dtor_Tuple_a0;
                    } else if (_source202.is_Array) {
                      DAST._IType _5330___mcc_h1960 = _source202.dtor_element;
                      BigInteger _5331___mcc_h1961 = _source202.dtor_dims;
                    } else if (_source202.is_Seq) {
                      DAST._IType _5332___mcc_h1964 = _source202.dtor_element;
                    } else if (_source202.is_Set) {
                      DAST._IType _5333___mcc_h1966 = _source202.dtor_element;
                    } else if (_source202.is_Multiset) {
                      DAST._IType _5334___mcc_h1968 = _source202.dtor_element;
                    } else if (_source202.is_Map) {
                      DAST._IType _5335___mcc_h1970 = _source202.dtor_key;
                      DAST._IType _5336___mcc_h1971 = _source202.dtor_value;
                    } else if (_source202.is_SetBuilder) {
                      DAST._IType _5337___mcc_h1974 = _source202.dtor_element;
                    } else if (_source202.is_MapBuilder) {
                      DAST._IType _5338___mcc_h1976 = _source202.dtor_key;
                      DAST._IType _5339___mcc_h1977 = _source202.dtor_value;
                    } else if (_source202.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5340___mcc_h1980 = _source202.dtor_args;
                      DAST._IType _5341___mcc_h1981 = _source202.dtor_result;
                    } else if (_source202.is_Primitive) {
                      DAST._IPrimitive _5342___mcc_h1984 = _source202.dtor_Primitive_a0;
                    } else if (_source202.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5343___mcc_h1986 = _source202.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5344___mcc_h1988 = _source202.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5345_recursiveGen;
                      DCOMP._IOwnership _5346_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5347_recIdents;
                      RAST._IExpr _out1784;
                      DCOMP._IOwnership _out1785;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1786;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1784, out _out1785, out _out1786);
                      _5345_recursiveGen = _out1784;
                      _5346_recOwned = _out1785;
                      _5347_recIdents = _out1786;
                      RAST._IExpr _out1787;
                      DCOMP._IOwnership _out1788;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5345_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5302_nativeToType).dtor_value), _5346_recOwned, expectedOwnership, out _out1787, out _out1788);
                      r = _out1787;
                      resultingOwnership = _out1788;
                      readIdents = _5347_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1789;
                  DCOMP._IOwnership _out1790;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1791;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _5301_b), _5301_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1789, out _out1790, out _out1791);
                  r = _out1789;
                  resultingOwnership = _out1790;
                  readIdents = _out1791;
                }
              }
            }
          } else if (_source199.is_Nullable) {
            DAST._IType _5348___mcc_h782 = _source199.dtor_Nullable_a0;
            {
              RAST._IExpr _5349_recursiveGen;
              DCOMP._IOwnership _5350_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5351_recIdents;
              RAST._IExpr _out1792;
              DCOMP._IOwnership _out1793;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1794;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1792, out _out1793, out _out1794);
              _5349_recursiveGen = _out1792;
              _5350_recOwned = _out1793;
              _5351_recIdents = _out1794;
              r = _5349_recursiveGen;
              if (object.Equals(_5350_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1795;
              DCOMP._IOwnership _out1796;
              DCOMP.COMP.FromOwnership(r, _5350_recOwned, expectedOwnership, out _out1795, out _out1796);
              r = _out1795;
              resultingOwnership = _out1796;
              readIdents = _5351_recIdents;
            }
          } else if (_source199.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5352___mcc_h784 = _source199.dtor_Tuple_a0;
            {
              RAST._IType _5353_fromTpeGen;
              RAST._IType _out1797;
              _out1797 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5353_fromTpeGen = _out1797;
              RAST._IType _5354_toTpeGen;
              RAST._IType _out1798;
              _out1798 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5354_toTpeGen = _out1798;
              RAST._IExpr _5355_recursiveGen;
              DCOMP._IOwnership _5356_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5357_recIdents;
              RAST._IExpr _out1799;
              DCOMP._IOwnership _out1800;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1801;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1799, out _out1800, out _out1801);
              _5355_recursiveGen = _out1799;
              _5356_recOwned = _out1800;
              _5357_recIdents = _out1801;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5355_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5353_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5354_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1802;
              DCOMP._IOwnership _out1803;
              DCOMP.COMP.FromOwnership(r, _5356_recOwned, expectedOwnership, out _out1802, out _out1803);
              r = _out1802;
              resultingOwnership = _out1803;
              readIdents = _5357_recIdents;
            }
          } else if (_source199.is_Array) {
            DAST._IType _5358___mcc_h786 = _source199.dtor_element;
            BigInteger _5359___mcc_h787 = _source199.dtor_dims;
            {
              RAST._IType _5360_fromTpeGen;
              RAST._IType _out1804;
              _out1804 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5360_fromTpeGen = _out1804;
              RAST._IType _5361_toTpeGen;
              RAST._IType _out1805;
              _out1805 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5361_toTpeGen = _out1805;
              RAST._IExpr _5362_recursiveGen;
              DCOMP._IOwnership _5363_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5364_recIdents;
              RAST._IExpr _out1806;
              DCOMP._IOwnership _out1807;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1808;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1806, out _out1807, out _out1808);
              _5362_recursiveGen = _out1806;
              _5363_recOwned = _out1807;
              _5364_recIdents = _out1808;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5362_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5360_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5361_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1809;
              DCOMP._IOwnership _out1810;
              DCOMP.COMP.FromOwnership(r, _5363_recOwned, expectedOwnership, out _out1809, out _out1810);
              r = _out1809;
              resultingOwnership = _out1810;
              readIdents = _5364_recIdents;
            }
          } else if (_source199.is_Seq) {
            DAST._IType _5365___mcc_h790 = _source199.dtor_element;
            {
              RAST._IType _5366_fromTpeGen;
              RAST._IType _out1811;
              _out1811 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5366_fromTpeGen = _out1811;
              RAST._IType _5367_toTpeGen;
              RAST._IType _out1812;
              _out1812 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5367_toTpeGen = _out1812;
              RAST._IExpr _5368_recursiveGen;
              DCOMP._IOwnership _5369_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5370_recIdents;
              RAST._IExpr _out1813;
              DCOMP._IOwnership _out1814;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1815;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1813, out _out1814, out _out1815);
              _5368_recursiveGen = _out1813;
              _5369_recOwned = _out1814;
              _5370_recIdents = _out1815;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5368_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5366_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5367_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1816;
              DCOMP._IOwnership _out1817;
              DCOMP.COMP.FromOwnership(r, _5369_recOwned, expectedOwnership, out _out1816, out _out1817);
              r = _out1816;
              resultingOwnership = _out1817;
              readIdents = _5370_recIdents;
            }
          } else if (_source199.is_Set) {
            DAST._IType _5371___mcc_h792 = _source199.dtor_element;
            {
              RAST._IType _5372_fromTpeGen;
              RAST._IType _out1818;
              _out1818 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5372_fromTpeGen = _out1818;
              RAST._IType _5373_toTpeGen;
              RAST._IType _out1819;
              _out1819 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5373_toTpeGen = _out1819;
              RAST._IExpr _5374_recursiveGen;
              DCOMP._IOwnership _5375_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5376_recIdents;
              RAST._IExpr _out1820;
              DCOMP._IOwnership _out1821;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1822;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1820, out _out1821, out _out1822);
              _5374_recursiveGen = _out1820;
              _5375_recOwned = _out1821;
              _5376_recIdents = _out1822;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5374_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5372_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5373_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1823;
              DCOMP._IOwnership _out1824;
              DCOMP.COMP.FromOwnership(r, _5375_recOwned, expectedOwnership, out _out1823, out _out1824);
              r = _out1823;
              resultingOwnership = _out1824;
              readIdents = _5376_recIdents;
            }
          } else if (_source199.is_Multiset) {
            DAST._IType _5377___mcc_h794 = _source199.dtor_element;
            {
              RAST._IType _5378_fromTpeGen;
              RAST._IType _out1825;
              _out1825 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5378_fromTpeGen = _out1825;
              RAST._IType _5379_toTpeGen;
              RAST._IType _out1826;
              _out1826 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5379_toTpeGen = _out1826;
              RAST._IExpr _5380_recursiveGen;
              DCOMP._IOwnership _5381_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5382_recIdents;
              RAST._IExpr _out1827;
              DCOMP._IOwnership _out1828;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1829;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1827, out _out1828, out _out1829);
              _5380_recursiveGen = _out1827;
              _5381_recOwned = _out1828;
              _5382_recIdents = _out1829;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5380_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5378_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5379_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1830;
              DCOMP._IOwnership _out1831;
              DCOMP.COMP.FromOwnership(r, _5381_recOwned, expectedOwnership, out _out1830, out _out1831);
              r = _out1830;
              resultingOwnership = _out1831;
              readIdents = _5382_recIdents;
            }
          } else if (_source199.is_Map) {
            DAST._IType _5383___mcc_h796 = _source199.dtor_key;
            DAST._IType _5384___mcc_h797 = _source199.dtor_value;
            {
              RAST._IType _5385_fromTpeGen;
              RAST._IType _out1832;
              _out1832 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5385_fromTpeGen = _out1832;
              RAST._IType _5386_toTpeGen;
              RAST._IType _out1833;
              _out1833 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5386_toTpeGen = _out1833;
              RAST._IExpr _5387_recursiveGen;
              DCOMP._IOwnership _5388_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5389_recIdents;
              RAST._IExpr _out1834;
              DCOMP._IOwnership _out1835;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1836;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1834, out _out1835, out _out1836);
              _5387_recursiveGen = _out1834;
              _5388_recOwned = _out1835;
              _5389_recIdents = _out1836;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5387_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5385_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5386_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1837;
              DCOMP._IOwnership _out1838;
              DCOMP.COMP.FromOwnership(r, _5388_recOwned, expectedOwnership, out _out1837, out _out1838);
              r = _out1837;
              resultingOwnership = _out1838;
              readIdents = _5389_recIdents;
            }
          } else if (_source199.is_SetBuilder) {
            DAST._IType _5390___mcc_h800 = _source199.dtor_element;
            {
              RAST._IType _5391_fromTpeGen;
              RAST._IType _out1839;
              _out1839 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5391_fromTpeGen = _out1839;
              RAST._IType _5392_toTpeGen;
              RAST._IType _out1840;
              _out1840 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5392_toTpeGen = _out1840;
              RAST._IExpr _5393_recursiveGen;
              DCOMP._IOwnership _5394_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5395_recIdents;
              RAST._IExpr _out1841;
              DCOMP._IOwnership _out1842;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1843;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1841, out _out1842, out _out1843);
              _5393_recursiveGen = _out1841;
              _5394_recOwned = _out1842;
              _5395_recIdents = _out1843;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5393_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5391_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5392_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1844;
              DCOMP._IOwnership _out1845;
              DCOMP.COMP.FromOwnership(r, _5394_recOwned, expectedOwnership, out _out1844, out _out1845);
              r = _out1844;
              resultingOwnership = _out1845;
              readIdents = _5395_recIdents;
            }
          } else if (_source199.is_MapBuilder) {
            DAST._IType _5396___mcc_h802 = _source199.dtor_key;
            DAST._IType _5397___mcc_h803 = _source199.dtor_value;
            {
              RAST._IType _5398_fromTpeGen;
              RAST._IType _out1846;
              _out1846 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5398_fromTpeGen = _out1846;
              RAST._IType _5399_toTpeGen;
              RAST._IType _out1847;
              _out1847 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5399_toTpeGen = _out1847;
              RAST._IExpr _5400_recursiveGen;
              DCOMP._IOwnership _5401_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5402_recIdents;
              RAST._IExpr _out1848;
              DCOMP._IOwnership _out1849;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1850;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1848, out _out1849, out _out1850);
              _5400_recursiveGen = _out1848;
              _5401_recOwned = _out1849;
              _5402_recIdents = _out1850;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5400_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5398_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5399_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1851;
              DCOMP._IOwnership _out1852;
              DCOMP.COMP.FromOwnership(r, _5401_recOwned, expectedOwnership, out _out1851, out _out1852);
              r = _out1851;
              resultingOwnership = _out1852;
              readIdents = _5402_recIdents;
            }
          } else if (_source199.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5403___mcc_h806 = _source199.dtor_args;
            DAST._IType _5404___mcc_h807 = _source199.dtor_result;
            {
              RAST._IType _5405_fromTpeGen;
              RAST._IType _out1853;
              _out1853 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5405_fromTpeGen = _out1853;
              RAST._IType _5406_toTpeGen;
              RAST._IType _out1854;
              _out1854 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5406_toTpeGen = _out1854;
              RAST._IExpr _5407_recursiveGen;
              DCOMP._IOwnership _5408_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5409_recIdents;
              RAST._IExpr _out1855;
              DCOMP._IOwnership _out1856;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1857;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1855, out _out1856, out _out1857);
              _5407_recursiveGen = _out1855;
              _5408_recOwned = _out1856;
              _5409_recIdents = _out1857;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5407_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5405_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5406_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1858;
              DCOMP._IOwnership _out1859;
              DCOMP.COMP.FromOwnership(r, _5408_recOwned, expectedOwnership, out _out1858, out _out1859);
              r = _out1858;
              resultingOwnership = _out1859;
              readIdents = _5409_recIdents;
            }
          } else if (_source199.is_Primitive) {
            DAST._IPrimitive _5410___mcc_h810 = _source199.dtor_Primitive_a0;
            {
              RAST._IType _5411_fromTpeGen;
              RAST._IType _out1860;
              _out1860 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5411_fromTpeGen = _out1860;
              RAST._IType _5412_toTpeGen;
              RAST._IType _out1861;
              _out1861 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5412_toTpeGen = _out1861;
              RAST._IExpr _5413_recursiveGen;
              DCOMP._IOwnership _5414_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5415_recIdents;
              RAST._IExpr _out1862;
              DCOMP._IOwnership _out1863;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1864;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1862, out _out1863, out _out1864);
              _5413_recursiveGen = _out1862;
              _5414_recOwned = _out1863;
              _5415_recIdents = _out1864;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5413_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5411_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5412_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1865;
              DCOMP._IOwnership _out1866;
              DCOMP.COMP.FromOwnership(r, _5414_recOwned, expectedOwnership, out _out1865, out _out1866);
              r = _out1865;
              resultingOwnership = _out1866;
              readIdents = _5415_recIdents;
            }
          } else if (_source199.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5416___mcc_h812 = _source199.dtor_Passthrough_a0;
            {
              RAST._IType _5417_fromTpeGen;
              RAST._IType _out1867;
              _out1867 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5417_fromTpeGen = _out1867;
              RAST._IType _5418_toTpeGen;
              RAST._IType _out1868;
              _out1868 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5418_toTpeGen = _out1868;
              RAST._IExpr _5419_recursiveGen;
              DCOMP._IOwnership _5420_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5421_recIdents;
              RAST._IExpr _out1869;
              DCOMP._IOwnership _out1870;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1871;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1869, out _out1870, out _out1871);
              _5419_recursiveGen = _out1869;
              _5420_recOwned = _out1870;
              _5421_recIdents = _out1871;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5419_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5417_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5418_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1872;
              DCOMP._IOwnership _out1873;
              DCOMP.COMP.FromOwnership(r, _5420_recOwned, expectedOwnership, out _out1872, out _out1873);
              r = _out1872;
              resultingOwnership = _out1873;
              readIdents = _5421_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5422___mcc_h814 = _source199.dtor_TypeArg_a0;
            {
              RAST._IType _5423_fromTpeGen;
              RAST._IType _out1874;
              _out1874 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5423_fromTpeGen = _out1874;
              RAST._IType _5424_toTpeGen;
              RAST._IType _out1875;
              _out1875 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5424_toTpeGen = _out1875;
              RAST._IExpr _5425_recursiveGen;
              DCOMP._IOwnership _5426_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5427_recIdents;
              RAST._IExpr _out1876;
              DCOMP._IOwnership _out1877;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1878;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1876, out _out1877, out _out1878);
              _5425_recursiveGen = _out1876;
              _5426_recOwned = _out1877;
              _5427_recIdents = _out1878;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5425_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5423_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5424_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1879;
              DCOMP._IOwnership _out1880;
              DCOMP.COMP.FromOwnership(r, _5426_recOwned, expectedOwnership, out _out1879, out _out1880);
              r = _out1879;
              resultingOwnership = _out1880;
              readIdents = _5427_recIdents;
            }
          }
        } else if (_source130.is_MapBuilder) {
          DAST._IType _5428___mcc_h816 = _source130.dtor_key;
          DAST._IType _5429___mcc_h817 = _source130.dtor_value;
          DAST._IType _source204 = _3476___mcc_h1;
          if (_source204.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5430___mcc_h824 = _source204.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5431___mcc_h825 = _source204.dtor_typeArgs;
            DAST._IResolvedType _5432___mcc_h826 = _source204.dtor_resolved;
            DAST._IResolvedType _source205 = _5432___mcc_h826;
            if (_source205.is_AllocatedDatatype) {
              DAST._IDatatypeType _5433___mcc_h830 = _source205.dtor_datatypeType;
              {
                RAST._IType _5434_fromTpeGen;
                RAST._IType _out1881;
                _out1881 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5434_fromTpeGen = _out1881;
                RAST._IType _5435_toTpeGen;
                RAST._IType _out1882;
                _out1882 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5435_toTpeGen = _out1882;
                RAST._IExpr _5436_recursiveGen;
                DCOMP._IOwnership _5437_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5438_recIdents;
                RAST._IExpr _out1883;
                DCOMP._IOwnership _out1884;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1885;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1883, out _out1884, out _out1885);
                _5436_recursiveGen = _out1883;
                _5437_recOwned = _out1884;
                _5438_recIdents = _out1885;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5436_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5434_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5435_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1886;
                DCOMP._IOwnership _out1887;
                DCOMP.COMP.FromOwnership(r, _5437_recOwned, expectedOwnership, out _out1886, out _out1887);
                r = _out1886;
                resultingOwnership = _out1887;
                readIdents = _5438_recIdents;
              }
            } else if (_source205.is_Datatype) {
              DAST._IDatatypeType _5439___mcc_h832 = _source205.dtor_datatypeType;
              {
                RAST._IType _5440_fromTpeGen;
                RAST._IType _out1888;
                _out1888 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5440_fromTpeGen = _out1888;
                RAST._IType _5441_toTpeGen;
                RAST._IType _out1889;
                _out1889 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5441_toTpeGen = _out1889;
                RAST._IExpr _5442_recursiveGen;
                DCOMP._IOwnership _5443_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5444_recIdents;
                RAST._IExpr _out1890;
                DCOMP._IOwnership _out1891;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1892;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1890, out _out1891, out _out1892);
                _5442_recursiveGen = _out1890;
                _5443_recOwned = _out1891;
                _5444_recIdents = _out1892;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5442_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5440_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5441_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1893;
                DCOMP._IOwnership _out1894;
                DCOMP.COMP.FromOwnership(r, _5443_recOwned, expectedOwnership, out _out1893, out _out1894);
                r = _out1893;
                resultingOwnership = _out1894;
                readIdents = _5444_recIdents;
              }
            } else if (_source205.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5445___mcc_h834 = _source205.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5446___mcc_h835 = _source205.dtor_attributes;
              {
                RAST._IType _5447_fromTpeGen;
                RAST._IType _out1895;
                _out1895 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5447_fromTpeGen = _out1895;
                RAST._IType _5448_toTpeGen;
                RAST._IType _out1896;
                _out1896 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5448_toTpeGen = _out1896;
                RAST._IExpr _5449_recursiveGen;
                DCOMP._IOwnership _5450_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5451_recIdents;
                RAST._IExpr _out1897;
                DCOMP._IOwnership _out1898;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1899;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1897, out _out1898, out _out1899);
                _5449_recursiveGen = _out1897;
                _5450_recOwned = _out1898;
                _5451_recIdents = _out1899;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5449_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5447_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5448_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out1900;
                DCOMP._IOwnership _out1901;
                DCOMP.COMP.FromOwnership(r, _5450_recOwned, expectedOwnership, out _out1900, out _out1901);
                r = _out1900;
                resultingOwnership = _out1901;
                readIdents = _5451_recIdents;
              }
            } else {
              DAST._IType _5452___mcc_h838 = _source205.dtor_baseType;
              DAST._INewtypeRange _5453___mcc_h839 = _source205.dtor_range;
              bool _5454___mcc_h840 = _source205.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5455___mcc_h841 = _source205.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5456_attributes = _5455___mcc_h841;
              bool _5457_erase = _5454___mcc_h840;
              DAST._INewtypeRange _5458_range = _5453___mcc_h839;
              DAST._IType _5459_b = _5452___mcc_h838;
              {
                Std.Wrappers._IOption<RAST._IType> _5460_nativeToType;
                _5460_nativeToType = DCOMP.COMP.NewtypeToRustType(_5459_b, _5458_range);
                if (object.Equals(_3470_fromTpe, _5459_b)) {
                  RAST._IExpr _5461_recursiveGen;
                  DCOMP._IOwnership _5462_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5463_recIdents;
                  RAST._IExpr _out1902;
                  DCOMP._IOwnership _out1903;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1904;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1902, out _out1903, out _out1904);
                  _5461_recursiveGen = _out1902;
                  _5462_recOwned = _out1903;
                  _5463_recIdents = _out1904;
                  readIdents = _5463_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source206 = _5460_nativeToType;
                  if (_source206.is_None) {
                    if (_5457_erase) {
                      r = _5461_recursiveGen;
                    } else {
                      RAST._IType _5464_rhsType;
                      RAST._IType _out1905;
                      _out1905 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _5464_rhsType = _out1905;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5464_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5461_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out1906;
                    DCOMP._IOwnership _out1907;
                    DCOMP.COMP.FromOwnership(r, _5462_recOwned, expectedOwnership, out _out1906, out _out1907);
                    r = _out1906;
                    resultingOwnership = _out1907;
                  } else {
                    RAST._IType _5465___mcc_h1990 = _source206.dtor_value;
                    RAST._IType _5466_v = _5465___mcc_h1990;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5461_recursiveGen, RAST.Expr.create_ExprFromType(_5466_v)));
                    RAST._IExpr _out1908;
                    DCOMP._IOwnership _out1909;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1908, out _out1909);
                    r = _out1908;
                    resultingOwnership = _out1909;
                  }
                } else {
                  if ((_5460_nativeToType).is_Some) {
                    DAST._IType _source207 = _3470_fromTpe;
                    if (_source207.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5467___mcc_h1991 = _source207.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5468___mcc_h1992 = _source207.dtor_typeArgs;
                      DAST._IResolvedType _5469___mcc_h1993 = _source207.dtor_resolved;
                      DAST._IResolvedType _source208 = _5469___mcc_h1993;
                      if (_source208.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5470___mcc_h1997 = _source208.dtor_datatypeType;
                      } else if (_source208.is_Datatype) {
                        DAST._IDatatypeType _5471___mcc_h1999 = _source208.dtor_datatypeType;
                      } else if (_source208.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5472___mcc_h2001 = _source208.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5473___mcc_h2002 = _source208.dtor_attributes;
                      } else {
                        DAST._IType _5474___mcc_h2005 = _source208.dtor_baseType;
                        DAST._INewtypeRange _5475___mcc_h2006 = _source208.dtor_range;
                        bool _5476___mcc_h2007 = _source208.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5477___mcc_h2008 = _source208.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5478_attributes0 = _5477___mcc_h2008;
                        bool _5479_erase0 = _5476___mcc_h2007;
                        DAST._INewtypeRange _5480_range0 = _5475___mcc_h2006;
                        DAST._IType _5481_b0 = _5474___mcc_h2005;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5482_nativeFromType;
                          _5482_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5481_b0, _5480_range0);
                          if ((_5482_nativeFromType).is_Some) {
                            RAST._IExpr _5483_recursiveGen;
                            DCOMP._IOwnership _5484_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5485_recIdents;
                            RAST._IExpr _out1910;
                            DCOMP._IOwnership _out1911;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1912;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1910, out _out1911, out _out1912);
                            _5483_recursiveGen = _out1910;
                            _5484_recOwned = _out1911;
                            _5485_recIdents = _out1912;
                            RAST._IExpr _out1913;
                            DCOMP._IOwnership _out1914;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5483_recursiveGen, (_5460_nativeToType).dtor_value), _5484_recOwned, expectedOwnership, out _out1913, out _out1914);
                            r = _out1913;
                            resultingOwnership = _out1914;
                            readIdents = _5485_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source207.is_Nullable) {
                      DAST._IType _5486___mcc_h2013 = _source207.dtor_Nullable_a0;
                    } else if (_source207.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5487___mcc_h2015 = _source207.dtor_Tuple_a0;
                    } else if (_source207.is_Array) {
                      DAST._IType _5488___mcc_h2017 = _source207.dtor_element;
                      BigInteger _5489___mcc_h2018 = _source207.dtor_dims;
                    } else if (_source207.is_Seq) {
                      DAST._IType _5490___mcc_h2021 = _source207.dtor_element;
                    } else if (_source207.is_Set) {
                      DAST._IType _5491___mcc_h2023 = _source207.dtor_element;
                    } else if (_source207.is_Multiset) {
                      DAST._IType _5492___mcc_h2025 = _source207.dtor_element;
                    } else if (_source207.is_Map) {
                      DAST._IType _5493___mcc_h2027 = _source207.dtor_key;
                      DAST._IType _5494___mcc_h2028 = _source207.dtor_value;
                    } else if (_source207.is_SetBuilder) {
                      DAST._IType _5495___mcc_h2031 = _source207.dtor_element;
                    } else if (_source207.is_MapBuilder) {
                      DAST._IType _5496___mcc_h2033 = _source207.dtor_key;
                      DAST._IType _5497___mcc_h2034 = _source207.dtor_value;
                    } else if (_source207.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5498___mcc_h2037 = _source207.dtor_args;
                      DAST._IType _5499___mcc_h2038 = _source207.dtor_result;
                    } else if (_source207.is_Primitive) {
                      DAST._IPrimitive _5500___mcc_h2041 = _source207.dtor_Primitive_a0;
                    } else if (_source207.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5501___mcc_h2043 = _source207.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5502___mcc_h2045 = _source207.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5503_recursiveGen;
                      DCOMP._IOwnership _5504_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5505_recIdents;
                      RAST._IExpr _out1915;
                      DCOMP._IOwnership _out1916;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1917;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1915, out _out1916, out _out1917);
                      _5503_recursiveGen = _out1915;
                      _5504_recOwned = _out1916;
                      _5505_recIdents = _out1917;
                      RAST._IExpr _out1918;
                      DCOMP._IOwnership _out1919;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5503_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5460_nativeToType).dtor_value), _5504_recOwned, expectedOwnership, out _out1918, out _out1919);
                      r = _out1918;
                      resultingOwnership = _out1919;
                      readIdents = _5505_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out1920;
                  DCOMP._IOwnership _out1921;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1922;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _5459_b), _5459_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out1920, out _out1921, out _out1922);
                  r = _out1920;
                  resultingOwnership = _out1921;
                  readIdents = _out1922;
                }
              }
            }
          } else if (_source204.is_Nullable) {
            DAST._IType _5506___mcc_h846 = _source204.dtor_Nullable_a0;
            {
              RAST._IExpr _5507_recursiveGen;
              DCOMP._IOwnership _5508_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5509_recIdents;
              RAST._IExpr _out1923;
              DCOMP._IOwnership _out1924;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1925;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1923, out _out1924, out _out1925);
              _5507_recursiveGen = _out1923;
              _5508_recOwned = _out1924;
              _5509_recIdents = _out1925;
              r = _5507_recursiveGen;
              if (object.Equals(_5508_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out1926;
              DCOMP._IOwnership _out1927;
              DCOMP.COMP.FromOwnership(r, _5508_recOwned, expectedOwnership, out _out1926, out _out1927);
              r = _out1926;
              resultingOwnership = _out1927;
              readIdents = _5509_recIdents;
            }
          } else if (_source204.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5510___mcc_h848 = _source204.dtor_Tuple_a0;
            {
              RAST._IType _5511_fromTpeGen;
              RAST._IType _out1928;
              _out1928 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5511_fromTpeGen = _out1928;
              RAST._IType _5512_toTpeGen;
              RAST._IType _out1929;
              _out1929 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5512_toTpeGen = _out1929;
              RAST._IExpr _5513_recursiveGen;
              DCOMP._IOwnership _5514_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5515_recIdents;
              RAST._IExpr _out1930;
              DCOMP._IOwnership _out1931;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1932;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1930, out _out1931, out _out1932);
              _5513_recursiveGen = _out1930;
              _5514_recOwned = _out1931;
              _5515_recIdents = _out1932;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5513_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5511_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5512_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1933;
              DCOMP._IOwnership _out1934;
              DCOMP.COMP.FromOwnership(r, _5514_recOwned, expectedOwnership, out _out1933, out _out1934);
              r = _out1933;
              resultingOwnership = _out1934;
              readIdents = _5515_recIdents;
            }
          } else if (_source204.is_Array) {
            DAST._IType _5516___mcc_h850 = _source204.dtor_element;
            BigInteger _5517___mcc_h851 = _source204.dtor_dims;
            {
              RAST._IType _5518_fromTpeGen;
              RAST._IType _out1935;
              _out1935 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5518_fromTpeGen = _out1935;
              RAST._IType _5519_toTpeGen;
              RAST._IType _out1936;
              _out1936 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5519_toTpeGen = _out1936;
              RAST._IExpr _5520_recursiveGen;
              DCOMP._IOwnership _5521_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5522_recIdents;
              RAST._IExpr _out1937;
              DCOMP._IOwnership _out1938;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1939;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1937, out _out1938, out _out1939);
              _5520_recursiveGen = _out1937;
              _5521_recOwned = _out1938;
              _5522_recIdents = _out1939;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5520_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5518_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5519_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1940;
              DCOMP._IOwnership _out1941;
              DCOMP.COMP.FromOwnership(r, _5521_recOwned, expectedOwnership, out _out1940, out _out1941);
              r = _out1940;
              resultingOwnership = _out1941;
              readIdents = _5522_recIdents;
            }
          } else if (_source204.is_Seq) {
            DAST._IType _5523___mcc_h854 = _source204.dtor_element;
            {
              RAST._IType _5524_fromTpeGen;
              RAST._IType _out1942;
              _out1942 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5524_fromTpeGen = _out1942;
              RAST._IType _5525_toTpeGen;
              RAST._IType _out1943;
              _out1943 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5525_toTpeGen = _out1943;
              RAST._IExpr _5526_recursiveGen;
              DCOMP._IOwnership _5527_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5528_recIdents;
              RAST._IExpr _out1944;
              DCOMP._IOwnership _out1945;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1946;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1944, out _out1945, out _out1946);
              _5526_recursiveGen = _out1944;
              _5527_recOwned = _out1945;
              _5528_recIdents = _out1946;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5526_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5524_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5525_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1947;
              DCOMP._IOwnership _out1948;
              DCOMP.COMP.FromOwnership(r, _5527_recOwned, expectedOwnership, out _out1947, out _out1948);
              r = _out1947;
              resultingOwnership = _out1948;
              readIdents = _5528_recIdents;
            }
          } else if (_source204.is_Set) {
            DAST._IType _5529___mcc_h856 = _source204.dtor_element;
            {
              RAST._IType _5530_fromTpeGen;
              RAST._IType _out1949;
              _out1949 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5530_fromTpeGen = _out1949;
              RAST._IType _5531_toTpeGen;
              RAST._IType _out1950;
              _out1950 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5531_toTpeGen = _out1950;
              RAST._IExpr _5532_recursiveGen;
              DCOMP._IOwnership _5533_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5534_recIdents;
              RAST._IExpr _out1951;
              DCOMP._IOwnership _out1952;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1953;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1951, out _out1952, out _out1953);
              _5532_recursiveGen = _out1951;
              _5533_recOwned = _out1952;
              _5534_recIdents = _out1953;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5532_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5530_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5531_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1954;
              DCOMP._IOwnership _out1955;
              DCOMP.COMP.FromOwnership(r, _5533_recOwned, expectedOwnership, out _out1954, out _out1955);
              r = _out1954;
              resultingOwnership = _out1955;
              readIdents = _5534_recIdents;
            }
          } else if (_source204.is_Multiset) {
            DAST._IType _5535___mcc_h858 = _source204.dtor_element;
            {
              RAST._IType _5536_fromTpeGen;
              RAST._IType _out1956;
              _out1956 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5536_fromTpeGen = _out1956;
              RAST._IType _5537_toTpeGen;
              RAST._IType _out1957;
              _out1957 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5537_toTpeGen = _out1957;
              RAST._IExpr _5538_recursiveGen;
              DCOMP._IOwnership _5539_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5540_recIdents;
              RAST._IExpr _out1958;
              DCOMP._IOwnership _out1959;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1960;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1958, out _out1959, out _out1960);
              _5538_recursiveGen = _out1958;
              _5539_recOwned = _out1959;
              _5540_recIdents = _out1960;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5538_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5536_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5537_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1961;
              DCOMP._IOwnership _out1962;
              DCOMP.COMP.FromOwnership(r, _5539_recOwned, expectedOwnership, out _out1961, out _out1962);
              r = _out1961;
              resultingOwnership = _out1962;
              readIdents = _5540_recIdents;
            }
          } else if (_source204.is_Map) {
            DAST._IType _5541___mcc_h860 = _source204.dtor_key;
            DAST._IType _5542___mcc_h861 = _source204.dtor_value;
            {
              RAST._IType _5543_fromTpeGen;
              RAST._IType _out1963;
              _out1963 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5543_fromTpeGen = _out1963;
              RAST._IType _5544_toTpeGen;
              RAST._IType _out1964;
              _out1964 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5544_toTpeGen = _out1964;
              RAST._IExpr _5545_recursiveGen;
              DCOMP._IOwnership _5546_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5547_recIdents;
              RAST._IExpr _out1965;
              DCOMP._IOwnership _out1966;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1967;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1965, out _out1966, out _out1967);
              _5545_recursiveGen = _out1965;
              _5546_recOwned = _out1966;
              _5547_recIdents = _out1967;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5545_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5543_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5544_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1968;
              DCOMP._IOwnership _out1969;
              DCOMP.COMP.FromOwnership(r, _5546_recOwned, expectedOwnership, out _out1968, out _out1969);
              r = _out1968;
              resultingOwnership = _out1969;
              readIdents = _5547_recIdents;
            }
          } else if (_source204.is_SetBuilder) {
            DAST._IType _5548___mcc_h864 = _source204.dtor_element;
            {
              RAST._IType _5549_fromTpeGen;
              RAST._IType _out1970;
              _out1970 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5549_fromTpeGen = _out1970;
              RAST._IType _5550_toTpeGen;
              RAST._IType _out1971;
              _out1971 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5550_toTpeGen = _out1971;
              RAST._IExpr _5551_recursiveGen;
              DCOMP._IOwnership _5552_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5553_recIdents;
              RAST._IExpr _out1972;
              DCOMP._IOwnership _out1973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1974;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1972, out _out1973, out _out1974);
              _5551_recursiveGen = _out1972;
              _5552_recOwned = _out1973;
              _5553_recIdents = _out1974;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5551_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5549_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5550_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1975;
              DCOMP._IOwnership _out1976;
              DCOMP.COMP.FromOwnership(r, _5552_recOwned, expectedOwnership, out _out1975, out _out1976);
              r = _out1975;
              resultingOwnership = _out1976;
              readIdents = _5553_recIdents;
            }
          } else if (_source204.is_MapBuilder) {
            DAST._IType _5554___mcc_h866 = _source204.dtor_key;
            DAST._IType _5555___mcc_h867 = _source204.dtor_value;
            {
              RAST._IType _5556_fromTpeGen;
              RAST._IType _out1977;
              _out1977 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5556_fromTpeGen = _out1977;
              RAST._IType _5557_toTpeGen;
              RAST._IType _out1978;
              _out1978 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5557_toTpeGen = _out1978;
              RAST._IExpr _5558_recursiveGen;
              DCOMP._IOwnership _5559_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5560_recIdents;
              RAST._IExpr _out1979;
              DCOMP._IOwnership _out1980;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1981;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1979, out _out1980, out _out1981);
              _5558_recursiveGen = _out1979;
              _5559_recOwned = _out1980;
              _5560_recIdents = _out1981;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5558_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5556_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5557_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1982;
              DCOMP._IOwnership _out1983;
              DCOMP.COMP.FromOwnership(r, _5559_recOwned, expectedOwnership, out _out1982, out _out1983);
              r = _out1982;
              resultingOwnership = _out1983;
              readIdents = _5560_recIdents;
            }
          } else if (_source204.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5561___mcc_h870 = _source204.dtor_args;
            DAST._IType _5562___mcc_h871 = _source204.dtor_result;
            {
              RAST._IType _5563_fromTpeGen;
              RAST._IType _out1984;
              _out1984 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5563_fromTpeGen = _out1984;
              RAST._IType _5564_toTpeGen;
              RAST._IType _out1985;
              _out1985 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5564_toTpeGen = _out1985;
              RAST._IExpr _5565_recursiveGen;
              DCOMP._IOwnership _5566_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5567_recIdents;
              RAST._IExpr _out1986;
              DCOMP._IOwnership _out1987;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1988;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1986, out _out1987, out _out1988);
              _5565_recursiveGen = _out1986;
              _5566_recOwned = _out1987;
              _5567_recIdents = _out1988;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5565_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5563_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5564_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1989;
              DCOMP._IOwnership _out1990;
              DCOMP.COMP.FromOwnership(r, _5566_recOwned, expectedOwnership, out _out1989, out _out1990);
              r = _out1989;
              resultingOwnership = _out1990;
              readIdents = _5567_recIdents;
            }
          } else if (_source204.is_Primitive) {
            DAST._IPrimitive _5568___mcc_h874 = _source204.dtor_Primitive_a0;
            {
              RAST._IType _5569_fromTpeGen;
              RAST._IType _out1991;
              _out1991 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5569_fromTpeGen = _out1991;
              RAST._IType _5570_toTpeGen;
              RAST._IType _out1992;
              _out1992 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5570_toTpeGen = _out1992;
              RAST._IExpr _5571_recursiveGen;
              DCOMP._IOwnership _5572_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5573_recIdents;
              RAST._IExpr _out1993;
              DCOMP._IOwnership _out1994;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1995;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out1993, out _out1994, out _out1995);
              _5571_recursiveGen = _out1993;
              _5572_recOwned = _out1994;
              _5573_recIdents = _out1995;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5571_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5569_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5570_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out1996;
              DCOMP._IOwnership _out1997;
              DCOMP.COMP.FromOwnership(r, _5572_recOwned, expectedOwnership, out _out1996, out _out1997);
              r = _out1996;
              resultingOwnership = _out1997;
              readIdents = _5573_recIdents;
            }
          } else if (_source204.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5574___mcc_h876 = _source204.dtor_Passthrough_a0;
            {
              RAST._IType _5575_fromTpeGen;
              RAST._IType _out1998;
              _out1998 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5575_fromTpeGen = _out1998;
              RAST._IType _5576_toTpeGen;
              RAST._IType _out1999;
              _out1999 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5576_toTpeGen = _out1999;
              RAST._IExpr _5577_recursiveGen;
              DCOMP._IOwnership _5578_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5579_recIdents;
              RAST._IExpr _out2000;
              DCOMP._IOwnership _out2001;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2002;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2000, out _out2001, out _out2002);
              _5577_recursiveGen = _out2000;
              _5578_recOwned = _out2001;
              _5579_recIdents = _out2002;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5577_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5575_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5576_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2003;
              DCOMP._IOwnership _out2004;
              DCOMP.COMP.FromOwnership(r, _5578_recOwned, expectedOwnership, out _out2003, out _out2004);
              r = _out2003;
              resultingOwnership = _out2004;
              readIdents = _5579_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5580___mcc_h878 = _source204.dtor_TypeArg_a0;
            {
              RAST._IType _5581_fromTpeGen;
              RAST._IType _out2005;
              _out2005 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5581_fromTpeGen = _out2005;
              RAST._IType _5582_toTpeGen;
              RAST._IType _out2006;
              _out2006 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5582_toTpeGen = _out2006;
              RAST._IExpr _5583_recursiveGen;
              DCOMP._IOwnership _5584_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5585_recIdents;
              RAST._IExpr _out2007;
              DCOMP._IOwnership _out2008;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2009;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2007, out _out2008, out _out2009);
              _5583_recursiveGen = _out2007;
              _5584_recOwned = _out2008;
              _5585_recIdents = _out2009;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5583_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5581_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5582_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2010;
              DCOMP._IOwnership _out2011;
              DCOMP.COMP.FromOwnership(r, _5584_recOwned, expectedOwnership, out _out2010, out _out2011);
              r = _out2010;
              resultingOwnership = _out2011;
              readIdents = _5585_recIdents;
            }
          }
        } else if (_source130.is_Arrow) {
          Dafny.ISequence<DAST._IType> _5586___mcc_h880 = _source130.dtor_args;
          DAST._IType _5587___mcc_h881 = _source130.dtor_result;
          DAST._IType _source209 = _3476___mcc_h1;
          if (_source209.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5588___mcc_h888 = _source209.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _5589___mcc_h889 = _source209.dtor_typeArgs;
            DAST._IResolvedType _5590___mcc_h890 = _source209.dtor_resolved;
            DAST._IResolvedType _source210 = _5590___mcc_h890;
            if (_source210.is_AllocatedDatatype) {
              DAST._IDatatypeType _5591___mcc_h894 = _source210.dtor_datatypeType;
              {
                RAST._IType _5592_fromTpeGen;
                RAST._IType _out2012;
                _out2012 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5592_fromTpeGen = _out2012;
                RAST._IType _5593_toTpeGen;
                RAST._IType _out2013;
                _out2013 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5593_toTpeGen = _out2013;
                RAST._IExpr _5594_recursiveGen;
                DCOMP._IOwnership _5595_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5596_recIdents;
                RAST._IExpr _out2014;
                DCOMP._IOwnership _out2015;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2016;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2014, out _out2015, out _out2016);
                _5594_recursiveGen = _out2014;
                _5595_recOwned = _out2015;
                _5596_recIdents = _out2016;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5594_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5592_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5593_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2017;
                DCOMP._IOwnership _out2018;
                DCOMP.COMP.FromOwnership(r, _5595_recOwned, expectedOwnership, out _out2017, out _out2018);
                r = _out2017;
                resultingOwnership = _out2018;
                readIdents = _5596_recIdents;
              }
            } else if (_source210.is_Datatype) {
              DAST._IDatatypeType _5597___mcc_h896 = _source210.dtor_datatypeType;
              {
                RAST._IType _5598_fromTpeGen;
                RAST._IType _out2019;
                _out2019 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5598_fromTpeGen = _out2019;
                RAST._IType _5599_toTpeGen;
                RAST._IType _out2020;
                _out2020 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5599_toTpeGen = _out2020;
                RAST._IExpr _5600_recursiveGen;
                DCOMP._IOwnership _5601_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5602_recIdents;
                RAST._IExpr _out2021;
                DCOMP._IOwnership _out2022;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2023;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2021, out _out2022, out _out2023);
                _5600_recursiveGen = _out2021;
                _5601_recOwned = _out2022;
                _5602_recIdents = _out2023;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5600_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5598_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5599_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2024;
                DCOMP._IOwnership _out2025;
                DCOMP.COMP.FromOwnership(r, _5601_recOwned, expectedOwnership, out _out2024, out _out2025);
                r = _out2024;
                resultingOwnership = _out2025;
                readIdents = _5602_recIdents;
              }
            } else if (_source210.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5603___mcc_h898 = _source210.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _5604___mcc_h899 = _source210.dtor_attributes;
              {
                RAST._IType _5605_fromTpeGen;
                RAST._IType _out2026;
                _out2026 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5605_fromTpeGen = _out2026;
                RAST._IType _5606_toTpeGen;
                RAST._IType _out2027;
                _out2027 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5606_toTpeGen = _out2027;
                RAST._IExpr _5607_recursiveGen;
                DCOMP._IOwnership _5608_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5609_recIdents;
                RAST._IExpr _out2028;
                DCOMP._IOwnership _out2029;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2030;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2028, out _out2029, out _out2030);
                _5607_recursiveGen = _out2028;
                _5608_recOwned = _out2029;
                _5609_recIdents = _out2030;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5607_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5605_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5606_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2031;
                DCOMP._IOwnership _out2032;
                DCOMP.COMP.FromOwnership(r, _5608_recOwned, expectedOwnership, out _out2031, out _out2032);
                r = _out2031;
                resultingOwnership = _out2032;
                readIdents = _5609_recIdents;
              }
            } else {
              DAST._IType _5610___mcc_h902 = _source210.dtor_baseType;
              DAST._INewtypeRange _5611___mcc_h903 = _source210.dtor_range;
              bool _5612___mcc_h904 = _source210.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _5613___mcc_h905 = _source210.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _5614_attributes = _5613___mcc_h905;
              bool _5615_erase = _5612___mcc_h904;
              DAST._INewtypeRange _5616_range = _5611___mcc_h903;
              DAST._IType _5617_b = _5610___mcc_h902;
              {
                Std.Wrappers._IOption<RAST._IType> _5618_nativeToType;
                _5618_nativeToType = DCOMP.COMP.NewtypeToRustType(_5617_b, _5616_range);
                if (object.Equals(_3470_fromTpe, _5617_b)) {
                  RAST._IExpr _5619_recursiveGen;
                  DCOMP._IOwnership _5620_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5621_recIdents;
                  RAST._IExpr _out2033;
                  DCOMP._IOwnership _out2034;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2035;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2033, out _out2034, out _out2035);
                  _5619_recursiveGen = _out2033;
                  _5620_recOwned = _out2034;
                  _5621_recIdents = _out2035;
                  readIdents = _5621_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source211 = _5618_nativeToType;
                  if (_source211.is_None) {
                    if (_5615_erase) {
                      r = _5619_recursiveGen;
                    } else {
                      RAST._IType _5622_rhsType;
                      RAST._IType _out2036;
                      _out2036 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _5622_rhsType = _out2036;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5622_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5619_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2037;
                    DCOMP._IOwnership _out2038;
                    DCOMP.COMP.FromOwnership(r, _5620_recOwned, expectedOwnership, out _out2037, out _out2038);
                    r = _out2037;
                    resultingOwnership = _out2038;
                  } else {
                    RAST._IType _5623___mcc_h2047 = _source211.dtor_value;
                    RAST._IType _5624_v = _5623___mcc_h2047;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5619_recursiveGen, RAST.Expr.create_ExprFromType(_5624_v)));
                    RAST._IExpr _out2039;
                    DCOMP._IOwnership _out2040;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2039, out _out2040);
                    r = _out2039;
                    resultingOwnership = _out2040;
                  }
                } else {
                  if ((_5618_nativeToType).is_Some) {
                    DAST._IType _source212 = _3470_fromTpe;
                    if (_source212.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5625___mcc_h2048 = _source212.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _5626___mcc_h2049 = _source212.dtor_typeArgs;
                      DAST._IResolvedType _5627___mcc_h2050 = _source212.dtor_resolved;
                      DAST._IResolvedType _source213 = _5627___mcc_h2050;
                      if (_source213.is_AllocatedDatatype) {
                        DAST._IDatatypeType _5628___mcc_h2054 = _source213.dtor_datatypeType;
                      } else if (_source213.is_Datatype) {
                        DAST._IDatatypeType _5629___mcc_h2056 = _source213.dtor_datatypeType;
                      } else if (_source213.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5630___mcc_h2058 = _source213.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _5631___mcc_h2059 = _source213.dtor_attributes;
                      } else {
                        DAST._IType _5632___mcc_h2062 = _source213.dtor_baseType;
                        DAST._INewtypeRange _5633___mcc_h2063 = _source213.dtor_range;
                        bool _5634___mcc_h2064 = _source213.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _5635___mcc_h2065 = _source213.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _5636_attributes0 = _5635___mcc_h2065;
                        bool _5637_erase0 = _5634___mcc_h2064;
                        DAST._INewtypeRange _5638_range0 = _5633___mcc_h2063;
                        DAST._IType _5639_b0 = _5632___mcc_h2062;
                        {
                          Std.Wrappers._IOption<RAST._IType> _5640_nativeFromType;
                          _5640_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5639_b0, _5638_range0);
                          if ((_5640_nativeFromType).is_Some) {
                            RAST._IExpr _5641_recursiveGen;
                            DCOMP._IOwnership _5642_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5643_recIdents;
                            RAST._IExpr _out2041;
                            DCOMP._IOwnership _out2042;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2043;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2041, out _out2042, out _out2043);
                            _5641_recursiveGen = _out2041;
                            _5642_recOwned = _out2042;
                            _5643_recIdents = _out2043;
                            RAST._IExpr _out2044;
                            DCOMP._IOwnership _out2045;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5641_recursiveGen, (_5618_nativeToType).dtor_value), _5642_recOwned, expectedOwnership, out _out2044, out _out2045);
                            r = _out2044;
                            resultingOwnership = _out2045;
                            readIdents = _5643_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source212.is_Nullable) {
                      DAST._IType _5644___mcc_h2070 = _source212.dtor_Nullable_a0;
                    } else if (_source212.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _5645___mcc_h2072 = _source212.dtor_Tuple_a0;
                    } else if (_source212.is_Array) {
                      DAST._IType _5646___mcc_h2074 = _source212.dtor_element;
                      BigInteger _5647___mcc_h2075 = _source212.dtor_dims;
                    } else if (_source212.is_Seq) {
                      DAST._IType _5648___mcc_h2078 = _source212.dtor_element;
                    } else if (_source212.is_Set) {
                      DAST._IType _5649___mcc_h2080 = _source212.dtor_element;
                    } else if (_source212.is_Multiset) {
                      DAST._IType _5650___mcc_h2082 = _source212.dtor_element;
                    } else if (_source212.is_Map) {
                      DAST._IType _5651___mcc_h2084 = _source212.dtor_key;
                      DAST._IType _5652___mcc_h2085 = _source212.dtor_value;
                    } else if (_source212.is_SetBuilder) {
                      DAST._IType _5653___mcc_h2088 = _source212.dtor_element;
                    } else if (_source212.is_MapBuilder) {
                      DAST._IType _5654___mcc_h2090 = _source212.dtor_key;
                      DAST._IType _5655___mcc_h2091 = _source212.dtor_value;
                    } else if (_source212.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _5656___mcc_h2094 = _source212.dtor_args;
                      DAST._IType _5657___mcc_h2095 = _source212.dtor_result;
                    } else if (_source212.is_Primitive) {
                      DAST._IPrimitive _5658___mcc_h2098 = _source212.dtor_Primitive_a0;
                    } else if (_source212.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _5659___mcc_h2100 = _source212.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _5660___mcc_h2102 = _source212.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _5661_recursiveGen;
                      DCOMP._IOwnership _5662_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5663_recIdents;
                      RAST._IExpr _out2046;
                      DCOMP._IOwnership _out2047;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2048;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2046, out _out2047, out _out2048);
                      _5661_recursiveGen = _out2046;
                      _5662_recOwned = _out2047;
                      _5663_recIdents = _out2048;
                      RAST._IExpr _out2049;
                      DCOMP._IOwnership _out2050;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5661_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5618_nativeToType).dtor_value), _5662_recOwned, expectedOwnership, out _out2049, out _out2050);
                      r = _out2049;
                      resultingOwnership = _out2050;
                      readIdents = _5663_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2051;
                  DCOMP._IOwnership _out2052;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2053;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _5617_b), _5617_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out2051, out _out2052, out _out2053);
                  r = _out2051;
                  resultingOwnership = _out2052;
                  readIdents = _out2053;
                }
              }
            }
          } else if (_source209.is_Nullable) {
            DAST._IType _5664___mcc_h910 = _source209.dtor_Nullable_a0;
            {
              RAST._IExpr _5665_recursiveGen;
              DCOMP._IOwnership _5666_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5667_recIdents;
              RAST._IExpr _out2054;
              DCOMP._IOwnership _out2055;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2056;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2054, out _out2055, out _out2056);
              _5665_recursiveGen = _out2054;
              _5666_recOwned = _out2055;
              _5667_recIdents = _out2056;
              r = _5665_recursiveGen;
              if (object.Equals(_5666_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2057;
              DCOMP._IOwnership _out2058;
              DCOMP.COMP.FromOwnership(r, _5666_recOwned, expectedOwnership, out _out2057, out _out2058);
              r = _out2057;
              resultingOwnership = _out2058;
              readIdents = _5667_recIdents;
            }
          } else if (_source209.is_Tuple) {
            Dafny.ISequence<DAST._IType> _5668___mcc_h912 = _source209.dtor_Tuple_a0;
            {
              RAST._IType _5669_fromTpeGen;
              RAST._IType _out2059;
              _out2059 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5669_fromTpeGen = _out2059;
              RAST._IType _5670_toTpeGen;
              RAST._IType _out2060;
              _out2060 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5670_toTpeGen = _out2060;
              RAST._IExpr _5671_recursiveGen;
              DCOMP._IOwnership _5672_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5673_recIdents;
              RAST._IExpr _out2061;
              DCOMP._IOwnership _out2062;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2063;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2061, out _out2062, out _out2063);
              _5671_recursiveGen = _out2061;
              _5672_recOwned = _out2062;
              _5673_recIdents = _out2063;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5671_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5669_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5670_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2064;
              DCOMP._IOwnership _out2065;
              DCOMP.COMP.FromOwnership(r, _5672_recOwned, expectedOwnership, out _out2064, out _out2065);
              r = _out2064;
              resultingOwnership = _out2065;
              readIdents = _5673_recIdents;
            }
          } else if (_source209.is_Array) {
            DAST._IType _5674___mcc_h914 = _source209.dtor_element;
            BigInteger _5675___mcc_h915 = _source209.dtor_dims;
            {
              RAST._IType _5676_fromTpeGen;
              RAST._IType _out2066;
              _out2066 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5676_fromTpeGen = _out2066;
              RAST._IType _5677_toTpeGen;
              RAST._IType _out2067;
              _out2067 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5677_toTpeGen = _out2067;
              RAST._IExpr _5678_recursiveGen;
              DCOMP._IOwnership _5679_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5680_recIdents;
              RAST._IExpr _out2068;
              DCOMP._IOwnership _out2069;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2070;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2068, out _out2069, out _out2070);
              _5678_recursiveGen = _out2068;
              _5679_recOwned = _out2069;
              _5680_recIdents = _out2070;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5678_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5676_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5677_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2071;
              DCOMP._IOwnership _out2072;
              DCOMP.COMP.FromOwnership(r, _5679_recOwned, expectedOwnership, out _out2071, out _out2072);
              r = _out2071;
              resultingOwnership = _out2072;
              readIdents = _5680_recIdents;
            }
          } else if (_source209.is_Seq) {
            DAST._IType _5681___mcc_h918 = _source209.dtor_element;
            {
              RAST._IType _5682_fromTpeGen;
              RAST._IType _out2073;
              _out2073 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5682_fromTpeGen = _out2073;
              RAST._IType _5683_toTpeGen;
              RAST._IType _out2074;
              _out2074 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5683_toTpeGen = _out2074;
              RAST._IExpr _5684_recursiveGen;
              DCOMP._IOwnership _5685_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5686_recIdents;
              RAST._IExpr _out2075;
              DCOMP._IOwnership _out2076;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2077;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2075, out _out2076, out _out2077);
              _5684_recursiveGen = _out2075;
              _5685_recOwned = _out2076;
              _5686_recIdents = _out2077;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5684_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5682_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5683_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2078;
              DCOMP._IOwnership _out2079;
              DCOMP.COMP.FromOwnership(r, _5685_recOwned, expectedOwnership, out _out2078, out _out2079);
              r = _out2078;
              resultingOwnership = _out2079;
              readIdents = _5686_recIdents;
            }
          } else if (_source209.is_Set) {
            DAST._IType _5687___mcc_h920 = _source209.dtor_element;
            {
              RAST._IType _5688_fromTpeGen;
              RAST._IType _out2080;
              _out2080 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5688_fromTpeGen = _out2080;
              RAST._IType _5689_toTpeGen;
              RAST._IType _out2081;
              _out2081 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5689_toTpeGen = _out2081;
              RAST._IExpr _5690_recursiveGen;
              DCOMP._IOwnership _5691_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5692_recIdents;
              RAST._IExpr _out2082;
              DCOMP._IOwnership _out2083;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2084;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2082, out _out2083, out _out2084);
              _5690_recursiveGen = _out2082;
              _5691_recOwned = _out2083;
              _5692_recIdents = _out2084;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5690_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5688_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5689_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2085;
              DCOMP._IOwnership _out2086;
              DCOMP.COMP.FromOwnership(r, _5691_recOwned, expectedOwnership, out _out2085, out _out2086);
              r = _out2085;
              resultingOwnership = _out2086;
              readIdents = _5692_recIdents;
            }
          } else if (_source209.is_Multiset) {
            DAST._IType _5693___mcc_h922 = _source209.dtor_element;
            {
              RAST._IType _5694_fromTpeGen;
              RAST._IType _out2087;
              _out2087 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5694_fromTpeGen = _out2087;
              RAST._IType _5695_toTpeGen;
              RAST._IType _out2088;
              _out2088 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5695_toTpeGen = _out2088;
              RAST._IExpr _5696_recursiveGen;
              DCOMP._IOwnership _5697_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5698_recIdents;
              RAST._IExpr _out2089;
              DCOMP._IOwnership _out2090;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2091;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2089, out _out2090, out _out2091);
              _5696_recursiveGen = _out2089;
              _5697_recOwned = _out2090;
              _5698_recIdents = _out2091;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5696_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5694_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5695_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2092;
              DCOMP._IOwnership _out2093;
              DCOMP.COMP.FromOwnership(r, _5697_recOwned, expectedOwnership, out _out2092, out _out2093);
              r = _out2092;
              resultingOwnership = _out2093;
              readIdents = _5698_recIdents;
            }
          } else if (_source209.is_Map) {
            DAST._IType _5699___mcc_h924 = _source209.dtor_key;
            DAST._IType _5700___mcc_h925 = _source209.dtor_value;
            {
              RAST._IType _5701_fromTpeGen;
              RAST._IType _out2094;
              _out2094 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5701_fromTpeGen = _out2094;
              RAST._IType _5702_toTpeGen;
              RAST._IType _out2095;
              _out2095 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5702_toTpeGen = _out2095;
              RAST._IExpr _5703_recursiveGen;
              DCOMP._IOwnership _5704_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5705_recIdents;
              RAST._IExpr _out2096;
              DCOMP._IOwnership _out2097;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2098;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2096, out _out2097, out _out2098);
              _5703_recursiveGen = _out2096;
              _5704_recOwned = _out2097;
              _5705_recIdents = _out2098;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5703_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5701_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5702_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2099;
              DCOMP._IOwnership _out2100;
              DCOMP.COMP.FromOwnership(r, _5704_recOwned, expectedOwnership, out _out2099, out _out2100);
              r = _out2099;
              resultingOwnership = _out2100;
              readIdents = _5705_recIdents;
            }
          } else if (_source209.is_SetBuilder) {
            DAST._IType _5706___mcc_h928 = _source209.dtor_element;
            {
              RAST._IType _5707_fromTpeGen;
              RAST._IType _out2101;
              _out2101 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5707_fromTpeGen = _out2101;
              RAST._IType _5708_toTpeGen;
              RAST._IType _out2102;
              _out2102 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5708_toTpeGen = _out2102;
              RAST._IExpr _5709_recursiveGen;
              DCOMP._IOwnership _5710_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5711_recIdents;
              RAST._IExpr _out2103;
              DCOMP._IOwnership _out2104;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2105;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2103, out _out2104, out _out2105);
              _5709_recursiveGen = _out2103;
              _5710_recOwned = _out2104;
              _5711_recIdents = _out2105;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5709_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5707_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5708_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2106;
              DCOMP._IOwnership _out2107;
              DCOMP.COMP.FromOwnership(r, _5710_recOwned, expectedOwnership, out _out2106, out _out2107);
              r = _out2106;
              resultingOwnership = _out2107;
              readIdents = _5711_recIdents;
            }
          } else if (_source209.is_MapBuilder) {
            DAST._IType _5712___mcc_h930 = _source209.dtor_key;
            DAST._IType _5713___mcc_h931 = _source209.dtor_value;
            {
              RAST._IType _5714_fromTpeGen;
              RAST._IType _out2108;
              _out2108 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5714_fromTpeGen = _out2108;
              RAST._IType _5715_toTpeGen;
              RAST._IType _out2109;
              _out2109 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5715_toTpeGen = _out2109;
              RAST._IExpr _5716_recursiveGen;
              DCOMP._IOwnership _5717_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5718_recIdents;
              RAST._IExpr _out2110;
              DCOMP._IOwnership _out2111;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2112;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2110, out _out2111, out _out2112);
              _5716_recursiveGen = _out2110;
              _5717_recOwned = _out2111;
              _5718_recIdents = _out2112;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5716_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5714_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5715_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2113;
              DCOMP._IOwnership _out2114;
              DCOMP.COMP.FromOwnership(r, _5717_recOwned, expectedOwnership, out _out2113, out _out2114);
              r = _out2113;
              resultingOwnership = _out2114;
              readIdents = _5718_recIdents;
            }
          } else if (_source209.is_Arrow) {
            Dafny.ISequence<DAST._IType> _5719___mcc_h934 = _source209.dtor_args;
            DAST._IType _5720___mcc_h935 = _source209.dtor_result;
            {
              RAST._IType _5721_fromTpeGen;
              RAST._IType _out2115;
              _out2115 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5721_fromTpeGen = _out2115;
              RAST._IType _5722_toTpeGen;
              RAST._IType _out2116;
              _out2116 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5722_toTpeGen = _out2116;
              RAST._IExpr _5723_recursiveGen;
              DCOMP._IOwnership _5724_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5725_recIdents;
              RAST._IExpr _out2117;
              DCOMP._IOwnership _out2118;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2119;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2117, out _out2118, out _out2119);
              _5723_recursiveGen = _out2117;
              _5724_recOwned = _out2118;
              _5725_recIdents = _out2119;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5723_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5721_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5722_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2120;
              DCOMP._IOwnership _out2121;
              DCOMP.COMP.FromOwnership(r, _5724_recOwned, expectedOwnership, out _out2120, out _out2121);
              r = _out2120;
              resultingOwnership = _out2121;
              readIdents = _5725_recIdents;
            }
          } else if (_source209.is_Primitive) {
            DAST._IPrimitive _5726___mcc_h938 = _source209.dtor_Primitive_a0;
            {
              RAST._IType _5727_fromTpeGen;
              RAST._IType _out2122;
              _out2122 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5727_fromTpeGen = _out2122;
              RAST._IType _5728_toTpeGen;
              RAST._IType _out2123;
              _out2123 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5728_toTpeGen = _out2123;
              RAST._IExpr _5729_recursiveGen;
              DCOMP._IOwnership _5730_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5731_recIdents;
              RAST._IExpr _out2124;
              DCOMP._IOwnership _out2125;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2126;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2124, out _out2125, out _out2126);
              _5729_recursiveGen = _out2124;
              _5730_recOwned = _out2125;
              _5731_recIdents = _out2126;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5729_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5727_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5728_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2127;
              DCOMP._IOwnership _out2128;
              DCOMP.COMP.FromOwnership(r, _5730_recOwned, expectedOwnership, out _out2127, out _out2128);
              r = _out2127;
              resultingOwnership = _out2128;
              readIdents = _5731_recIdents;
            }
          } else if (_source209.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _5732___mcc_h940 = _source209.dtor_Passthrough_a0;
            {
              RAST._IType _5733_fromTpeGen;
              RAST._IType _out2129;
              _out2129 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5733_fromTpeGen = _out2129;
              RAST._IType _5734_toTpeGen;
              RAST._IType _out2130;
              _out2130 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5734_toTpeGen = _out2130;
              RAST._IExpr _5735_recursiveGen;
              DCOMP._IOwnership _5736_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5737_recIdents;
              RAST._IExpr _out2131;
              DCOMP._IOwnership _out2132;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2133;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2131, out _out2132, out _out2133);
              _5735_recursiveGen = _out2131;
              _5736_recOwned = _out2132;
              _5737_recIdents = _out2133;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5735_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5733_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5734_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2134;
              DCOMP._IOwnership _out2135;
              DCOMP.COMP.FromOwnership(r, _5736_recOwned, expectedOwnership, out _out2134, out _out2135);
              r = _out2134;
              resultingOwnership = _out2135;
              readIdents = _5737_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _5738___mcc_h942 = _source209.dtor_TypeArg_a0;
            {
              RAST._IType _5739_fromTpeGen;
              RAST._IType _out2136;
              _out2136 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _5739_fromTpeGen = _out2136;
              RAST._IType _5740_toTpeGen;
              RAST._IType _out2137;
              _out2137 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _5740_toTpeGen = _out2137;
              RAST._IExpr _5741_recursiveGen;
              DCOMP._IOwnership _5742_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5743_recIdents;
              RAST._IExpr _out2138;
              DCOMP._IOwnership _out2139;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2140;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2138, out _out2139, out _out2140);
              _5741_recursiveGen = _out2138;
              _5742_recOwned = _out2139;
              _5743_recIdents = _out2140;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5741_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5739_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5740_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2141;
              DCOMP._IOwnership _out2142;
              DCOMP.COMP.FromOwnership(r, _5742_recOwned, expectedOwnership, out _out2141, out _out2142);
              r = _out2141;
              resultingOwnership = _out2142;
              readIdents = _5743_recIdents;
            }
          }
        } else if (_source130.is_Primitive) {
          DAST._IPrimitive _5744___mcc_h944 = _source130.dtor_Primitive_a0;
          DAST._IPrimitive _source214 = _5744___mcc_h944;
          if (_source214.is_Int) {
            DAST._IType _source215 = _3476___mcc_h1;
            if (_source215.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5745___mcc_h948 = _source215.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _5746___mcc_h949 = _source215.dtor_typeArgs;
              DAST._IResolvedType _5747___mcc_h950 = _source215.dtor_resolved;
              DAST._IResolvedType _source216 = _5747___mcc_h950;
              if (_source216.is_AllocatedDatatype) {
                DAST._IDatatypeType _5748___mcc_h954 = _source216.dtor_datatypeType;
                {
                  RAST._IType _5749_fromTpeGen;
                  RAST._IType _out2143;
                  _out2143 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5749_fromTpeGen = _out2143;
                  RAST._IType _5750_toTpeGen;
                  RAST._IType _out2144;
                  _out2144 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5750_toTpeGen = _out2144;
                  RAST._IExpr _5751_recursiveGen;
                  DCOMP._IOwnership _5752_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5753_recIdents;
                  RAST._IExpr _out2145;
                  DCOMP._IOwnership _out2146;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2147;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2145, out _out2146, out _out2147);
                  _5751_recursiveGen = _out2145;
                  _5752_recOwned = _out2146;
                  _5753_recIdents = _out2147;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5751_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5749_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5750_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2148;
                  DCOMP._IOwnership _out2149;
                  DCOMP.COMP.FromOwnership(r, _5752_recOwned, expectedOwnership, out _out2148, out _out2149);
                  r = _out2148;
                  resultingOwnership = _out2149;
                  readIdents = _5753_recIdents;
                }
              } else if (_source216.is_Datatype) {
                DAST._IDatatypeType _5754___mcc_h956 = _source216.dtor_datatypeType;
                {
                  RAST._IType _5755_fromTpeGen;
                  RAST._IType _out2150;
                  _out2150 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5755_fromTpeGen = _out2150;
                  RAST._IType _5756_toTpeGen;
                  RAST._IType _out2151;
                  _out2151 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5756_toTpeGen = _out2151;
                  RAST._IExpr _5757_recursiveGen;
                  DCOMP._IOwnership _5758_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5759_recIdents;
                  RAST._IExpr _out2152;
                  DCOMP._IOwnership _out2153;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2154;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2152, out _out2153, out _out2154);
                  _5757_recursiveGen = _out2152;
                  _5758_recOwned = _out2153;
                  _5759_recIdents = _out2154;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5757_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5755_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5756_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2155;
                  DCOMP._IOwnership _out2156;
                  DCOMP.COMP.FromOwnership(r, _5758_recOwned, expectedOwnership, out _out2155, out _out2156);
                  r = _out2155;
                  resultingOwnership = _out2156;
                  readIdents = _5759_recIdents;
                }
              } else if (_source216.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5760___mcc_h958 = _source216.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _5761___mcc_h959 = _source216.dtor_attributes;
                {
                  RAST._IType _5762_fromTpeGen;
                  RAST._IType _out2157;
                  _out2157 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5762_fromTpeGen = _out2157;
                  RAST._IType _5763_toTpeGen;
                  RAST._IType _out2158;
                  _out2158 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5763_toTpeGen = _out2158;
                  RAST._IExpr _5764_recursiveGen;
                  DCOMP._IOwnership _5765_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5766_recIdents;
                  RAST._IExpr _out2159;
                  DCOMP._IOwnership _out2160;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2161;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2159, out _out2160, out _out2161);
                  _5764_recursiveGen = _out2159;
                  _5765_recOwned = _out2160;
                  _5766_recIdents = _out2161;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5764_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5762_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5763_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2162;
                  DCOMP._IOwnership _out2163;
                  DCOMP.COMP.FromOwnership(r, _5765_recOwned, expectedOwnership, out _out2162, out _out2163);
                  r = _out2162;
                  resultingOwnership = _out2163;
                  readIdents = _5766_recIdents;
                }
              } else {
                DAST._IType _5767___mcc_h962 = _source216.dtor_baseType;
                DAST._INewtypeRange _5768___mcc_h963 = _source216.dtor_range;
                bool _5769___mcc_h964 = _source216.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _5770___mcc_h965 = _source216.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _5771_attributes = _5770___mcc_h965;
                bool _5772_erase = _5769___mcc_h964;
                DAST._INewtypeRange _5773_range = _5768___mcc_h963;
                DAST._IType _5774_b = _5767___mcc_h962;
                {
                  Std.Wrappers._IOption<RAST._IType> _5775_nativeToType;
                  _5775_nativeToType = DCOMP.COMP.NewtypeToRustType(_5774_b, _5773_range);
                  if (object.Equals(_3470_fromTpe, _5774_b)) {
                    RAST._IExpr _5776_recursiveGen;
                    DCOMP._IOwnership _5777_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5778_recIdents;
                    RAST._IExpr _out2164;
                    DCOMP._IOwnership _out2165;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2166;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2164, out _out2165, out _out2166);
                    _5776_recursiveGen = _out2164;
                    _5777_recOwned = _out2165;
                    _5778_recIdents = _out2166;
                    readIdents = _5778_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source217 = _5775_nativeToType;
                    if (_source217.is_None) {
                      if (_5772_erase) {
                        r = _5776_recursiveGen;
                      } else {
                        RAST._IType _5779_rhsType;
                        RAST._IType _out2167;
                        _out2167 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _5779_rhsType = _out2167;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5779_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5776_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2168;
                      DCOMP._IOwnership _out2169;
                      DCOMP.COMP.FromOwnership(r, _5777_recOwned, expectedOwnership, out _out2168, out _out2169);
                      r = _out2168;
                      resultingOwnership = _out2169;
                    } else {
                      RAST._IType _5780___mcc_h2104 = _source217.dtor_value;
                      RAST._IType _5781_v = _5780___mcc_h2104;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5776_recursiveGen, RAST.Expr.create_ExprFromType(_5781_v)));
                      RAST._IExpr _out2170;
                      DCOMP._IOwnership _out2171;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2170, out _out2171);
                      r = _out2170;
                      resultingOwnership = _out2171;
                    }
                  } else {
                    if ((_5775_nativeToType).is_Some) {
                      DAST._IType _source218 = _3470_fromTpe;
                      if (_source218.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5782___mcc_h2105 = _source218.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _5783___mcc_h2106 = _source218.dtor_typeArgs;
                        DAST._IResolvedType _5784___mcc_h2107 = _source218.dtor_resolved;
                        DAST._IResolvedType _source219 = _5784___mcc_h2107;
                        if (_source219.is_AllocatedDatatype) {
                          DAST._IDatatypeType _5785___mcc_h2111 = _source219.dtor_datatypeType;
                        } else if (_source219.is_Datatype) {
                          DAST._IDatatypeType _5786___mcc_h2113 = _source219.dtor_datatypeType;
                        } else if (_source219.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5787___mcc_h2115 = _source219.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _5788___mcc_h2116 = _source219.dtor_attributes;
                        } else {
                          DAST._IType _5789___mcc_h2119 = _source219.dtor_baseType;
                          DAST._INewtypeRange _5790___mcc_h2120 = _source219.dtor_range;
                          bool _5791___mcc_h2121 = _source219.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _5792___mcc_h2122 = _source219.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _5793_attributes0 = _5792___mcc_h2122;
                          bool _5794_erase0 = _5791___mcc_h2121;
                          DAST._INewtypeRange _5795_range0 = _5790___mcc_h2120;
                          DAST._IType _5796_b0 = _5789___mcc_h2119;
                          {
                            Std.Wrappers._IOption<RAST._IType> _5797_nativeFromType;
                            _5797_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5796_b0, _5795_range0);
                            if ((_5797_nativeFromType).is_Some) {
                              RAST._IExpr _5798_recursiveGen;
                              DCOMP._IOwnership _5799_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5800_recIdents;
                              RAST._IExpr _out2172;
                              DCOMP._IOwnership _out2173;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2174;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2172, out _out2173, out _out2174);
                              _5798_recursiveGen = _out2172;
                              _5799_recOwned = _out2173;
                              _5800_recIdents = _out2174;
                              RAST._IExpr _out2175;
                              DCOMP._IOwnership _out2176;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5798_recursiveGen, (_5775_nativeToType).dtor_value), _5799_recOwned, expectedOwnership, out _out2175, out _out2176);
                              r = _out2175;
                              resultingOwnership = _out2176;
                              readIdents = _5800_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source218.is_Nullable) {
                        DAST._IType _5801___mcc_h2127 = _source218.dtor_Nullable_a0;
                      } else if (_source218.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _5802___mcc_h2129 = _source218.dtor_Tuple_a0;
                      } else if (_source218.is_Array) {
                        DAST._IType _5803___mcc_h2131 = _source218.dtor_element;
                        BigInteger _5804___mcc_h2132 = _source218.dtor_dims;
                      } else if (_source218.is_Seq) {
                        DAST._IType _5805___mcc_h2135 = _source218.dtor_element;
                      } else if (_source218.is_Set) {
                        DAST._IType _5806___mcc_h2137 = _source218.dtor_element;
                      } else if (_source218.is_Multiset) {
                        DAST._IType _5807___mcc_h2139 = _source218.dtor_element;
                      } else if (_source218.is_Map) {
                        DAST._IType _5808___mcc_h2141 = _source218.dtor_key;
                        DAST._IType _5809___mcc_h2142 = _source218.dtor_value;
                      } else if (_source218.is_SetBuilder) {
                        DAST._IType _5810___mcc_h2145 = _source218.dtor_element;
                      } else if (_source218.is_MapBuilder) {
                        DAST._IType _5811___mcc_h2147 = _source218.dtor_key;
                        DAST._IType _5812___mcc_h2148 = _source218.dtor_value;
                      } else if (_source218.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _5813___mcc_h2151 = _source218.dtor_args;
                        DAST._IType _5814___mcc_h2152 = _source218.dtor_result;
                      } else if (_source218.is_Primitive) {
                        DAST._IPrimitive _5815___mcc_h2155 = _source218.dtor_Primitive_a0;
                      } else if (_source218.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _5816___mcc_h2157 = _source218.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _5817___mcc_h2159 = _source218.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _5818_recursiveGen;
                        DCOMP._IOwnership _5819_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5820_recIdents;
                        RAST._IExpr _out2177;
                        DCOMP._IOwnership _out2178;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2179;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2177, out _out2178, out _out2179);
                        _5818_recursiveGen = _out2177;
                        _5819_recOwned = _out2178;
                        _5820_recIdents = _out2179;
                        RAST._IExpr _out2180;
                        DCOMP._IOwnership _out2181;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5818_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5775_nativeToType).dtor_value), _5819_recOwned, expectedOwnership, out _out2180, out _out2181);
                        r = _out2180;
                        resultingOwnership = _out2181;
                        readIdents = _5820_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2182;
                    DCOMP._IOwnership _out2183;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2184;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _5774_b), _5774_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out2182, out _out2183, out _out2184);
                    r = _out2182;
                    resultingOwnership = _out2183;
                    readIdents = _out2184;
                  }
                }
              }
            } else if (_source215.is_Nullable) {
              DAST._IType _5821___mcc_h970 = _source215.dtor_Nullable_a0;
              {
                RAST._IExpr _5822_recursiveGen;
                DCOMP._IOwnership _5823_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5824_recIdents;
                RAST._IExpr _out2185;
                DCOMP._IOwnership _out2186;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2187;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2185, out _out2186, out _out2187);
                _5822_recursiveGen = _out2185;
                _5823_recOwned = _out2186;
                _5824_recIdents = _out2187;
                r = _5822_recursiveGen;
                if (object.Equals(_5823_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2188;
                DCOMP._IOwnership _out2189;
                DCOMP.COMP.FromOwnership(r, _5823_recOwned, expectedOwnership, out _out2188, out _out2189);
                r = _out2188;
                resultingOwnership = _out2189;
                readIdents = _5824_recIdents;
              }
            } else if (_source215.is_Tuple) {
              Dafny.ISequence<DAST._IType> _5825___mcc_h972 = _source215.dtor_Tuple_a0;
              {
                RAST._IType _5826_fromTpeGen;
                RAST._IType _out2190;
                _out2190 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5826_fromTpeGen = _out2190;
                RAST._IType _5827_toTpeGen;
                RAST._IType _out2191;
                _out2191 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5827_toTpeGen = _out2191;
                RAST._IExpr _5828_recursiveGen;
                DCOMP._IOwnership _5829_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5830_recIdents;
                RAST._IExpr _out2192;
                DCOMP._IOwnership _out2193;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2194;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2192, out _out2193, out _out2194);
                _5828_recursiveGen = _out2192;
                _5829_recOwned = _out2193;
                _5830_recIdents = _out2194;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5828_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5826_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5827_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2195;
                DCOMP._IOwnership _out2196;
                DCOMP.COMP.FromOwnership(r, _5829_recOwned, expectedOwnership, out _out2195, out _out2196);
                r = _out2195;
                resultingOwnership = _out2196;
                readIdents = _5830_recIdents;
              }
            } else if (_source215.is_Array) {
              DAST._IType _5831___mcc_h974 = _source215.dtor_element;
              BigInteger _5832___mcc_h975 = _source215.dtor_dims;
              {
                RAST._IType _5833_fromTpeGen;
                RAST._IType _out2197;
                _out2197 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5833_fromTpeGen = _out2197;
                RAST._IType _5834_toTpeGen;
                RAST._IType _out2198;
                _out2198 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5834_toTpeGen = _out2198;
                RAST._IExpr _5835_recursiveGen;
                DCOMP._IOwnership _5836_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5837_recIdents;
                RAST._IExpr _out2199;
                DCOMP._IOwnership _out2200;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2201;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2199, out _out2200, out _out2201);
                _5835_recursiveGen = _out2199;
                _5836_recOwned = _out2200;
                _5837_recIdents = _out2201;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5835_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5833_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5834_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2202;
                DCOMP._IOwnership _out2203;
                DCOMP.COMP.FromOwnership(r, _5836_recOwned, expectedOwnership, out _out2202, out _out2203);
                r = _out2202;
                resultingOwnership = _out2203;
                readIdents = _5837_recIdents;
              }
            } else if (_source215.is_Seq) {
              DAST._IType _5838___mcc_h978 = _source215.dtor_element;
              {
                RAST._IType _5839_fromTpeGen;
                RAST._IType _out2204;
                _out2204 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5839_fromTpeGen = _out2204;
                RAST._IType _5840_toTpeGen;
                RAST._IType _out2205;
                _out2205 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5840_toTpeGen = _out2205;
                RAST._IExpr _5841_recursiveGen;
                DCOMP._IOwnership _5842_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5843_recIdents;
                RAST._IExpr _out2206;
                DCOMP._IOwnership _out2207;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2208;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2206, out _out2207, out _out2208);
                _5841_recursiveGen = _out2206;
                _5842_recOwned = _out2207;
                _5843_recIdents = _out2208;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5841_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5839_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5840_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2209;
                DCOMP._IOwnership _out2210;
                DCOMP.COMP.FromOwnership(r, _5842_recOwned, expectedOwnership, out _out2209, out _out2210);
                r = _out2209;
                resultingOwnership = _out2210;
                readIdents = _5843_recIdents;
              }
            } else if (_source215.is_Set) {
              DAST._IType _5844___mcc_h980 = _source215.dtor_element;
              {
                RAST._IType _5845_fromTpeGen;
                RAST._IType _out2211;
                _out2211 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5845_fromTpeGen = _out2211;
                RAST._IType _5846_toTpeGen;
                RAST._IType _out2212;
                _out2212 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5846_toTpeGen = _out2212;
                RAST._IExpr _5847_recursiveGen;
                DCOMP._IOwnership _5848_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5849_recIdents;
                RAST._IExpr _out2213;
                DCOMP._IOwnership _out2214;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2215;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2213, out _out2214, out _out2215);
                _5847_recursiveGen = _out2213;
                _5848_recOwned = _out2214;
                _5849_recIdents = _out2215;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5847_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5845_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5846_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2216;
                DCOMP._IOwnership _out2217;
                DCOMP.COMP.FromOwnership(r, _5848_recOwned, expectedOwnership, out _out2216, out _out2217);
                r = _out2216;
                resultingOwnership = _out2217;
                readIdents = _5849_recIdents;
              }
            } else if (_source215.is_Multiset) {
              DAST._IType _5850___mcc_h982 = _source215.dtor_element;
              {
                RAST._IType _5851_fromTpeGen;
                RAST._IType _out2218;
                _out2218 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5851_fromTpeGen = _out2218;
                RAST._IType _5852_toTpeGen;
                RAST._IType _out2219;
                _out2219 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5852_toTpeGen = _out2219;
                RAST._IExpr _5853_recursiveGen;
                DCOMP._IOwnership _5854_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5855_recIdents;
                RAST._IExpr _out2220;
                DCOMP._IOwnership _out2221;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2222;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2220, out _out2221, out _out2222);
                _5853_recursiveGen = _out2220;
                _5854_recOwned = _out2221;
                _5855_recIdents = _out2222;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5853_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5851_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5852_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2223;
                DCOMP._IOwnership _out2224;
                DCOMP.COMP.FromOwnership(r, _5854_recOwned, expectedOwnership, out _out2223, out _out2224);
                r = _out2223;
                resultingOwnership = _out2224;
                readIdents = _5855_recIdents;
              }
            } else if (_source215.is_Map) {
              DAST._IType _5856___mcc_h984 = _source215.dtor_key;
              DAST._IType _5857___mcc_h985 = _source215.dtor_value;
              {
                RAST._IType _5858_fromTpeGen;
                RAST._IType _out2225;
                _out2225 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5858_fromTpeGen = _out2225;
                RAST._IType _5859_toTpeGen;
                RAST._IType _out2226;
                _out2226 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5859_toTpeGen = _out2226;
                RAST._IExpr _5860_recursiveGen;
                DCOMP._IOwnership _5861_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5862_recIdents;
                RAST._IExpr _out2227;
                DCOMP._IOwnership _out2228;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2229;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2227, out _out2228, out _out2229);
                _5860_recursiveGen = _out2227;
                _5861_recOwned = _out2228;
                _5862_recIdents = _out2229;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5860_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5858_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5859_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2230;
                DCOMP._IOwnership _out2231;
                DCOMP.COMP.FromOwnership(r, _5861_recOwned, expectedOwnership, out _out2230, out _out2231);
                r = _out2230;
                resultingOwnership = _out2231;
                readIdents = _5862_recIdents;
              }
            } else if (_source215.is_SetBuilder) {
              DAST._IType _5863___mcc_h988 = _source215.dtor_element;
              {
                RAST._IType _5864_fromTpeGen;
                RAST._IType _out2232;
                _out2232 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5864_fromTpeGen = _out2232;
                RAST._IType _5865_toTpeGen;
                RAST._IType _out2233;
                _out2233 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5865_toTpeGen = _out2233;
                RAST._IExpr _5866_recursiveGen;
                DCOMP._IOwnership _5867_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5868_recIdents;
                RAST._IExpr _out2234;
                DCOMP._IOwnership _out2235;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2236;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2234, out _out2235, out _out2236);
                _5866_recursiveGen = _out2234;
                _5867_recOwned = _out2235;
                _5868_recIdents = _out2236;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5866_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5864_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5865_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2237;
                DCOMP._IOwnership _out2238;
                DCOMP.COMP.FromOwnership(r, _5867_recOwned, expectedOwnership, out _out2237, out _out2238);
                r = _out2237;
                resultingOwnership = _out2238;
                readIdents = _5868_recIdents;
              }
            } else if (_source215.is_MapBuilder) {
              DAST._IType _5869___mcc_h990 = _source215.dtor_key;
              DAST._IType _5870___mcc_h991 = _source215.dtor_value;
              {
                RAST._IType _5871_fromTpeGen;
                RAST._IType _out2239;
                _out2239 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5871_fromTpeGen = _out2239;
                RAST._IType _5872_toTpeGen;
                RAST._IType _out2240;
                _out2240 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5872_toTpeGen = _out2240;
                RAST._IExpr _5873_recursiveGen;
                DCOMP._IOwnership _5874_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5875_recIdents;
                RAST._IExpr _out2241;
                DCOMP._IOwnership _out2242;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2243;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2241, out _out2242, out _out2243);
                _5873_recursiveGen = _out2241;
                _5874_recOwned = _out2242;
                _5875_recIdents = _out2243;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5873_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5871_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5872_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2244;
                DCOMP._IOwnership _out2245;
                DCOMP.COMP.FromOwnership(r, _5874_recOwned, expectedOwnership, out _out2244, out _out2245);
                r = _out2244;
                resultingOwnership = _out2245;
                readIdents = _5875_recIdents;
              }
            } else if (_source215.is_Arrow) {
              Dafny.ISequence<DAST._IType> _5876___mcc_h994 = _source215.dtor_args;
              DAST._IType _5877___mcc_h995 = _source215.dtor_result;
              {
                RAST._IType _5878_fromTpeGen;
                RAST._IType _out2246;
                _out2246 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5878_fromTpeGen = _out2246;
                RAST._IType _5879_toTpeGen;
                RAST._IType _out2247;
                _out2247 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5879_toTpeGen = _out2247;
                RAST._IExpr _5880_recursiveGen;
                DCOMP._IOwnership _5881_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5882_recIdents;
                RAST._IExpr _out2248;
                DCOMP._IOwnership _out2249;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2250;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2248, out _out2249, out _out2250);
                _5880_recursiveGen = _out2248;
                _5881_recOwned = _out2249;
                _5882_recIdents = _out2250;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5880_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5878_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5879_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2251;
                DCOMP._IOwnership _out2252;
                DCOMP.COMP.FromOwnership(r, _5881_recOwned, expectedOwnership, out _out2251, out _out2252);
                r = _out2251;
                resultingOwnership = _out2252;
                readIdents = _5882_recIdents;
              }
            } else if (_source215.is_Primitive) {
              DAST._IPrimitive _5883___mcc_h998 = _source215.dtor_Primitive_a0;
              DAST._IPrimitive _source220 = _5883___mcc_h998;
              if (_source220.is_Int) {
                {
                  RAST._IType _5884_fromTpeGen;
                  RAST._IType _out2253;
                  _out2253 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5884_fromTpeGen = _out2253;
                  RAST._IType _5885_toTpeGen;
                  RAST._IType _out2254;
                  _out2254 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5885_toTpeGen = _out2254;
                  RAST._IExpr _5886_recursiveGen;
                  DCOMP._IOwnership _5887_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5888_recIdents;
                  RAST._IExpr _out2255;
                  DCOMP._IOwnership _out2256;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2257;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2255, out _out2256, out _out2257);
                  _5886_recursiveGen = _out2255;
                  _5887_recOwned = _out2256;
                  _5888_recIdents = _out2257;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5886_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5884_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5885_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2258;
                  DCOMP._IOwnership _out2259;
                  DCOMP.COMP.FromOwnership(r, _5887_recOwned, expectedOwnership, out _out2258, out _out2259);
                  r = _out2258;
                  resultingOwnership = _out2259;
                  readIdents = _5888_recIdents;
                }
              } else if (_source220.is_Real) {
                {
                  RAST._IExpr _5889_recursiveGen;
                  DCOMP._IOwnership _5890___v93;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5891_recIdents;
                  RAST._IExpr _out2260;
                  DCOMP._IOwnership _out2261;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2262;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2260, out _out2261, out _out2262);
                  _5889_recursiveGen = _out2260;
                  _5890___v93 = _out2261;
                  _5891_recIdents = _out2262;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_5889_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out2263;
                  DCOMP._IOwnership _out2264;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2263, out _out2264);
                  r = _out2263;
                  resultingOwnership = _out2264;
                  readIdents = _5891_recIdents;
                }
              } else if (_source220.is_String) {
                {
                  RAST._IType _5892_fromTpeGen;
                  RAST._IType _out2265;
                  _out2265 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5892_fromTpeGen = _out2265;
                  RAST._IType _5893_toTpeGen;
                  RAST._IType _out2266;
                  _out2266 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5893_toTpeGen = _out2266;
                  RAST._IExpr _5894_recursiveGen;
                  DCOMP._IOwnership _5895_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5896_recIdents;
                  RAST._IExpr _out2267;
                  DCOMP._IOwnership _out2268;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2269;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2267, out _out2268, out _out2269);
                  _5894_recursiveGen = _out2267;
                  _5895_recOwned = _out2268;
                  _5896_recIdents = _out2269;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5894_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5892_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5893_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2270;
                  DCOMP._IOwnership _out2271;
                  DCOMP.COMP.FromOwnership(r, _5895_recOwned, expectedOwnership, out _out2270, out _out2271);
                  r = _out2270;
                  resultingOwnership = _out2271;
                  readIdents = _5896_recIdents;
                }
              } else if (_source220.is_Bool) {
                {
                  RAST._IType _5897_fromTpeGen;
                  RAST._IType _out2272;
                  _out2272 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5897_fromTpeGen = _out2272;
                  RAST._IType _5898_toTpeGen;
                  RAST._IType _out2273;
                  _out2273 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5898_toTpeGen = _out2273;
                  RAST._IExpr _5899_recursiveGen;
                  DCOMP._IOwnership _5900_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5901_recIdents;
                  RAST._IExpr _out2274;
                  DCOMP._IOwnership _out2275;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2276;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2274, out _out2275, out _out2276);
                  _5899_recursiveGen = _out2274;
                  _5900_recOwned = _out2275;
                  _5901_recIdents = _out2276;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5899_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5897_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5898_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2277;
                  DCOMP._IOwnership _out2278;
                  DCOMP.COMP.FromOwnership(r, _5900_recOwned, expectedOwnership, out _out2277, out _out2278);
                  r = _out2277;
                  resultingOwnership = _out2278;
                  readIdents = _5901_recIdents;
                }
              } else {
                {
                  RAST._IType _5902_rhsType;
                  RAST._IType _out2279;
                  _out2279 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5902_rhsType = _out2279;
                  RAST._IExpr _5903_recursiveGen;
                  DCOMP._IOwnership _5904___v99;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5905_recIdents;
                  RAST._IExpr _out2280;
                  DCOMP._IOwnership _out2281;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2282;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2280, out _out2281, out _out2282);
                  _5903_recursiveGen = _out2280;
                  _5904___v99 = _out2281;
                  _5905_recIdents = _out2282;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_5903_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out2283;
                  DCOMP._IOwnership _out2284;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2283, out _out2284);
                  r = _out2283;
                  resultingOwnership = _out2284;
                  readIdents = _5905_recIdents;
                }
              }
            } else if (_source215.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _5906___mcc_h1000 = _source215.dtor_Passthrough_a0;
              {
                RAST._IType _5907_rhsType;
                RAST._IType _out2285;
                _out2285 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5907_rhsType = _out2285;
                RAST._IExpr _5908_recursiveGen;
                DCOMP._IOwnership _5909___v96;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5910_recIdents;
                RAST._IExpr _out2286;
                DCOMP._IOwnership _out2287;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2288;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2286, out _out2287, out _out2288);
                _5908_recursiveGen = _out2286;
                _5909___v96 = _out2287;
                _5910_recIdents = _out2288;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_5907_rhsType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_5908_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out2289;
                DCOMP._IOwnership _out2290;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2289, out _out2290);
                r = _out2289;
                resultingOwnership = _out2290;
                readIdents = _5910_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _5911___mcc_h1002 = _source215.dtor_TypeArg_a0;
              {
                RAST._IType _5912_fromTpeGen;
                RAST._IType _out2291;
                _out2291 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5912_fromTpeGen = _out2291;
                RAST._IType _5913_toTpeGen;
                RAST._IType _out2292;
                _out2292 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5913_toTpeGen = _out2292;
                RAST._IExpr _5914_recursiveGen;
                DCOMP._IOwnership _5915_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5916_recIdents;
                RAST._IExpr _out2293;
                DCOMP._IOwnership _out2294;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2295;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2293, out _out2294, out _out2295);
                _5914_recursiveGen = _out2293;
                _5915_recOwned = _out2294;
                _5916_recIdents = _out2295;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5914_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5912_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5913_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2296;
                DCOMP._IOwnership _out2297;
                DCOMP.COMP.FromOwnership(r, _5915_recOwned, expectedOwnership, out _out2296, out _out2297);
                r = _out2296;
                resultingOwnership = _out2297;
                readIdents = _5916_recIdents;
              }
            }
          } else if (_source214.is_Real) {
            DAST._IType _source221 = _3476___mcc_h1;
            if (_source221.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5917___mcc_h1004 = _source221.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _5918___mcc_h1005 = _source221.dtor_typeArgs;
              DAST._IResolvedType _5919___mcc_h1006 = _source221.dtor_resolved;
              DAST._IResolvedType _source222 = _5919___mcc_h1006;
              if (_source222.is_AllocatedDatatype) {
                DAST._IDatatypeType _5920___mcc_h1010 = _source222.dtor_datatypeType;
                {
                  RAST._IType _5921_fromTpeGen;
                  RAST._IType _out2298;
                  _out2298 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5921_fromTpeGen = _out2298;
                  RAST._IType _5922_toTpeGen;
                  RAST._IType _out2299;
                  _out2299 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5922_toTpeGen = _out2299;
                  RAST._IExpr _5923_recursiveGen;
                  DCOMP._IOwnership _5924_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5925_recIdents;
                  RAST._IExpr _out2300;
                  DCOMP._IOwnership _out2301;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2302;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2300, out _out2301, out _out2302);
                  _5923_recursiveGen = _out2300;
                  _5924_recOwned = _out2301;
                  _5925_recIdents = _out2302;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5923_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5921_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5922_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2303;
                  DCOMP._IOwnership _out2304;
                  DCOMP.COMP.FromOwnership(r, _5924_recOwned, expectedOwnership, out _out2303, out _out2304);
                  r = _out2303;
                  resultingOwnership = _out2304;
                  readIdents = _5925_recIdents;
                }
              } else if (_source222.is_Datatype) {
                DAST._IDatatypeType _5926___mcc_h1012 = _source222.dtor_datatypeType;
                {
                  RAST._IType _5927_fromTpeGen;
                  RAST._IType _out2305;
                  _out2305 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5927_fromTpeGen = _out2305;
                  RAST._IType _5928_toTpeGen;
                  RAST._IType _out2306;
                  _out2306 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5928_toTpeGen = _out2306;
                  RAST._IExpr _5929_recursiveGen;
                  DCOMP._IOwnership _5930_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5931_recIdents;
                  RAST._IExpr _out2307;
                  DCOMP._IOwnership _out2308;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2309;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2307, out _out2308, out _out2309);
                  _5929_recursiveGen = _out2307;
                  _5930_recOwned = _out2308;
                  _5931_recIdents = _out2309;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5929_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5927_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5928_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2310;
                  DCOMP._IOwnership _out2311;
                  DCOMP.COMP.FromOwnership(r, _5930_recOwned, expectedOwnership, out _out2310, out _out2311);
                  r = _out2310;
                  resultingOwnership = _out2311;
                  readIdents = _5931_recIdents;
                }
              } else if (_source222.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5932___mcc_h1014 = _source222.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _5933___mcc_h1015 = _source222.dtor_attributes;
                {
                  RAST._IType _5934_fromTpeGen;
                  RAST._IType _out2312;
                  _out2312 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _5934_fromTpeGen = _out2312;
                  RAST._IType _5935_toTpeGen;
                  RAST._IType _out2313;
                  _out2313 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _5935_toTpeGen = _out2313;
                  RAST._IExpr _5936_recursiveGen;
                  DCOMP._IOwnership _5937_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5938_recIdents;
                  RAST._IExpr _out2314;
                  DCOMP._IOwnership _out2315;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2316;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2314, out _out2315, out _out2316);
                  _5936_recursiveGen = _out2314;
                  _5937_recOwned = _out2315;
                  _5938_recIdents = _out2316;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_5936_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5934_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5935_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2317;
                  DCOMP._IOwnership _out2318;
                  DCOMP.COMP.FromOwnership(r, _5937_recOwned, expectedOwnership, out _out2317, out _out2318);
                  r = _out2317;
                  resultingOwnership = _out2318;
                  readIdents = _5938_recIdents;
                }
              } else {
                DAST._IType _5939___mcc_h1018 = _source222.dtor_baseType;
                DAST._INewtypeRange _5940___mcc_h1019 = _source222.dtor_range;
                bool _5941___mcc_h1020 = _source222.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _5942___mcc_h1021 = _source222.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _5943_attributes = _5942___mcc_h1021;
                bool _5944_erase = _5941___mcc_h1020;
                DAST._INewtypeRange _5945_range = _5940___mcc_h1019;
                DAST._IType _5946_b = _5939___mcc_h1018;
                {
                  Std.Wrappers._IOption<RAST._IType> _5947_nativeToType;
                  _5947_nativeToType = DCOMP.COMP.NewtypeToRustType(_5946_b, _5945_range);
                  if (object.Equals(_3470_fromTpe, _5946_b)) {
                    RAST._IExpr _5948_recursiveGen;
                    DCOMP._IOwnership _5949_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5950_recIdents;
                    RAST._IExpr _out2319;
                    DCOMP._IOwnership _out2320;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2321;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2319, out _out2320, out _out2321);
                    _5948_recursiveGen = _out2319;
                    _5949_recOwned = _out2320;
                    _5950_recIdents = _out2321;
                    readIdents = _5950_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source223 = _5947_nativeToType;
                    if (_source223.is_None) {
                      if (_5944_erase) {
                        r = _5948_recursiveGen;
                      } else {
                        RAST._IType _5951_rhsType;
                        RAST._IType _out2322;
                        _out2322 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _5951_rhsType = _out2322;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_5951_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_5948_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2323;
                      DCOMP._IOwnership _out2324;
                      DCOMP.COMP.FromOwnership(r, _5949_recOwned, expectedOwnership, out _out2323, out _out2324);
                      r = _out2323;
                      resultingOwnership = _out2324;
                    } else {
                      RAST._IType _5952___mcc_h2161 = _source223.dtor_value;
                      RAST._IType _5953_v = _5952___mcc_h2161;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_5948_recursiveGen, RAST.Expr.create_ExprFromType(_5953_v)));
                      RAST._IExpr _out2325;
                      DCOMP._IOwnership _out2326;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2325, out _out2326);
                      r = _out2325;
                      resultingOwnership = _out2326;
                    }
                  } else {
                    if ((_5947_nativeToType).is_Some) {
                      DAST._IType _source224 = _3470_fromTpe;
                      if (_source224.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5954___mcc_h2162 = _source224.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _5955___mcc_h2163 = _source224.dtor_typeArgs;
                        DAST._IResolvedType _5956___mcc_h2164 = _source224.dtor_resolved;
                        DAST._IResolvedType _source225 = _5956___mcc_h2164;
                        if (_source225.is_AllocatedDatatype) {
                          DAST._IDatatypeType _5957___mcc_h2168 = _source225.dtor_datatypeType;
                        } else if (_source225.is_Datatype) {
                          DAST._IDatatypeType _5958___mcc_h2170 = _source225.dtor_datatypeType;
                        } else if (_source225.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5959___mcc_h2172 = _source225.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _5960___mcc_h2173 = _source225.dtor_attributes;
                        } else {
                          DAST._IType _5961___mcc_h2176 = _source225.dtor_baseType;
                          DAST._INewtypeRange _5962___mcc_h2177 = _source225.dtor_range;
                          bool _5963___mcc_h2178 = _source225.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _5964___mcc_h2179 = _source225.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _5965_attributes0 = _5964___mcc_h2179;
                          bool _5966_erase0 = _5963___mcc_h2178;
                          DAST._INewtypeRange _5967_range0 = _5962___mcc_h2177;
                          DAST._IType _5968_b0 = _5961___mcc_h2176;
                          {
                            Std.Wrappers._IOption<RAST._IType> _5969_nativeFromType;
                            _5969_nativeFromType = DCOMP.COMP.NewtypeToRustType(_5968_b0, _5967_range0);
                            if ((_5969_nativeFromType).is_Some) {
                              RAST._IExpr _5970_recursiveGen;
                              DCOMP._IOwnership _5971_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5972_recIdents;
                              RAST._IExpr _out2327;
                              DCOMP._IOwnership _out2328;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2329;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2327, out _out2328, out _out2329);
                              _5970_recursiveGen = _out2327;
                              _5971_recOwned = _out2328;
                              _5972_recIdents = _out2329;
                              RAST._IExpr _out2330;
                              DCOMP._IOwnership _out2331;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_5970_recursiveGen, (_5947_nativeToType).dtor_value), _5971_recOwned, expectedOwnership, out _out2330, out _out2331);
                              r = _out2330;
                              resultingOwnership = _out2331;
                              readIdents = _5972_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source224.is_Nullable) {
                        DAST._IType _5973___mcc_h2184 = _source224.dtor_Nullable_a0;
                      } else if (_source224.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _5974___mcc_h2186 = _source224.dtor_Tuple_a0;
                      } else if (_source224.is_Array) {
                        DAST._IType _5975___mcc_h2188 = _source224.dtor_element;
                        BigInteger _5976___mcc_h2189 = _source224.dtor_dims;
                      } else if (_source224.is_Seq) {
                        DAST._IType _5977___mcc_h2192 = _source224.dtor_element;
                      } else if (_source224.is_Set) {
                        DAST._IType _5978___mcc_h2194 = _source224.dtor_element;
                      } else if (_source224.is_Multiset) {
                        DAST._IType _5979___mcc_h2196 = _source224.dtor_element;
                      } else if (_source224.is_Map) {
                        DAST._IType _5980___mcc_h2198 = _source224.dtor_key;
                        DAST._IType _5981___mcc_h2199 = _source224.dtor_value;
                      } else if (_source224.is_SetBuilder) {
                        DAST._IType _5982___mcc_h2202 = _source224.dtor_element;
                      } else if (_source224.is_MapBuilder) {
                        DAST._IType _5983___mcc_h2204 = _source224.dtor_key;
                        DAST._IType _5984___mcc_h2205 = _source224.dtor_value;
                      } else if (_source224.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _5985___mcc_h2208 = _source224.dtor_args;
                        DAST._IType _5986___mcc_h2209 = _source224.dtor_result;
                      } else if (_source224.is_Primitive) {
                        DAST._IPrimitive _5987___mcc_h2212 = _source224.dtor_Primitive_a0;
                      } else if (_source224.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _5988___mcc_h2214 = _source224.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _5989___mcc_h2216 = _source224.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _5990_recursiveGen;
                        DCOMP._IOwnership _5991_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5992_recIdents;
                        RAST._IExpr _out2332;
                        DCOMP._IOwnership _out2333;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2334;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2332, out _out2333, out _out2334);
                        _5990_recursiveGen = _out2332;
                        _5991_recOwned = _out2333;
                        _5992_recIdents = _out2334;
                        RAST._IExpr _out2335;
                        DCOMP._IOwnership _out2336;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_5990_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_5947_nativeToType).dtor_value), _5991_recOwned, expectedOwnership, out _out2335, out _out2336);
                        r = _out2335;
                        resultingOwnership = _out2336;
                        readIdents = _5992_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2337;
                    DCOMP._IOwnership _out2338;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2339;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _5946_b), _5946_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out2337, out _out2338, out _out2339);
                    r = _out2337;
                    resultingOwnership = _out2338;
                    readIdents = _out2339;
                  }
                }
              }
            } else if (_source221.is_Nullable) {
              DAST._IType _5993___mcc_h1026 = _source221.dtor_Nullable_a0;
              {
                RAST._IExpr _5994_recursiveGen;
                DCOMP._IOwnership _5995_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5996_recIdents;
                RAST._IExpr _out2340;
                DCOMP._IOwnership _out2341;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2342;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2340, out _out2341, out _out2342);
                _5994_recursiveGen = _out2340;
                _5995_recOwned = _out2341;
                _5996_recIdents = _out2342;
                r = _5994_recursiveGen;
                if (object.Equals(_5995_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2343;
                DCOMP._IOwnership _out2344;
                DCOMP.COMP.FromOwnership(r, _5995_recOwned, expectedOwnership, out _out2343, out _out2344);
                r = _out2343;
                resultingOwnership = _out2344;
                readIdents = _5996_recIdents;
              }
            } else if (_source221.is_Tuple) {
              Dafny.ISequence<DAST._IType> _5997___mcc_h1028 = _source221.dtor_Tuple_a0;
              {
                RAST._IType _5998_fromTpeGen;
                RAST._IType _out2345;
                _out2345 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _5998_fromTpeGen = _out2345;
                RAST._IType _5999_toTpeGen;
                RAST._IType _out2346;
                _out2346 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _5999_toTpeGen = _out2346;
                RAST._IExpr _6000_recursiveGen;
                DCOMP._IOwnership _6001_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6002_recIdents;
                RAST._IExpr _out2347;
                DCOMP._IOwnership _out2348;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2349;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2347, out _out2348, out _out2349);
                _6000_recursiveGen = _out2347;
                _6001_recOwned = _out2348;
                _6002_recIdents = _out2349;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6000_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_5998_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_5999_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2350;
                DCOMP._IOwnership _out2351;
                DCOMP.COMP.FromOwnership(r, _6001_recOwned, expectedOwnership, out _out2350, out _out2351);
                r = _out2350;
                resultingOwnership = _out2351;
                readIdents = _6002_recIdents;
              }
            } else if (_source221.is_Array) {
              DAST._IType _6003___mcc_h1030 = _source221.dtor_element;
              BigInteger _6004___mcc_h1031 = _source221.dtor_dims;
              {
                RAST._IType _6005_fromTpeGen;
                RAST._IType _out2352;
                _out2352 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6005_fromTpeGen = _out2352;
                RAST._IType _6006_toTpeGen;
                RAST._IType _out2353;
                _out2353 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6006_toTpeGen = _out2353;
                RAST._IExpr _6007_recursiveGen;
                DCOMP._IOwnership _6008_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6009_recIdents;
                RAST._IExpr _out2354;
                DCOMP._IOwnership _out2355;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2356;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2354, out _out2355, out _out2356);
                _6007_recursiveGen = _out2354;
                _6008_recOwned = _out2355;
                _6009_recIdents = _out2356;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6007_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6005_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6006_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2357;
                DCOMP._IOwnership _out2358;
                DCOMP.COMP.FromOwnership(r, _6008_recOwned, expectedOwnership, out _out2357, out _out2358);
                r = _out2357;
                resultingOwnership = _out2358;
                readIdents = _6009_recIdents;
              }
            } else if (_source221.is_Seq) {
              DAST._IType _6010___mcc_h1034 = _source221.dtor_element;
              {
                RAST._IType _6011_fromTpeGen;
                RAST._IType _out2359;
                _out2359 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6011_fromTpeGen = _out2359;
                RAST._IType _6012_toTpeGen;
                RAST._IType _out2360;
                _out2360 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6012_toTpeGen = _out2360;
                RAST._IExpr _6013_recursiveGen;
                DCOMP._IOwnership _6014_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6015_recIdents;
                RAST._IExpr _out2361;
                DCOMP._IOwnership _out2362;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2363;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2361, out _out2362, out _out2363);
                _6013_recursiveGen = _out2361;
                _6014_recOwned = _out2362;
                _6015_recIdents = _out2363;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6013_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6011_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6012_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2364;
                DCOMP._IOwnership _out2365;
                DCOMP.COMP.FromOwnership(r, _6014_recOwned, expectedOwnership, out _out2364, out _out2365);
                r = _out2364;
                resultingOwnership = _out2365;
                readIdents = _6015_recIdents;
              }
            } else if (_source221.is_Set) {
              DAST._IType _6016___mcc_h1036 = _source221.dtor_element;
              {
                RAST._IType _6017_fromTpeGen;
                RAST._IType _out2366;
                _out2366 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6017_fromTpeGen = _out2366;
                RAST._IType _6018_toTpeGen;
                RAST._IType _out2367;
                _out2367 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6018_toTpeGen = _out2367;
                RAST._IExpr _6019_recursiveGen;
                DCOMP._IOwnership _6020_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6021_recIdents;
                RAST._IExpr _out2368;
                DCOMP._IOwnership _out2369;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2370;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2368, out _out2369, out _out2370);
                _6019_recursiveGen = _out2368;
                _6020_recOwned = _out2369;
                _6021_recIdents = _out2370;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6019_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6017_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6018_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2371;
                DCOMP._IOwnership _out2372;
                DCOMP.COMP.FromOwnership(r, _6020_recOwned, expectedOwnership, out _out2371, out _out2372);
                r = _out2371;
                resultingOwnership = _out2372;
                readIdents = _6021_recIdents;
              }
            } else if (_source221.is_Multiset) {
              DAST._IType _6022___mcc_h1038 = _source221.dtor_element;
              {
                RAST._IType _6023_fromTpeGen;
                RAST._IType _out2373;
                _out2373 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6023_fromTpeGen = _out2373;
                RAST._IType _6024_toTpeGen;
                RAST._IType _out2374;
                _out2374 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6024_toTpeGen = _out2374;
                RAST._IExpr _6025_recursiveGen;
                DCOMP._IOwnership _6026_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6027_recIdents;
                RAST._IExpr _out2375;
                DCOMP._IOwnership _out2376;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2377;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2375, out _out2376, out _out2377);
                _6025_recursiveGen = _out2375;
                _6026_recOwned = _out2376;
                _6027_recIdents = _out2377;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6025_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6023_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6024_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2378;
                DCOMP._IOwnership _out2379;
                DCOMP.COMP.FromOwnership(r, _6026_recOwned, expectedOwnership, out _out2378, out _out2379);
                r = _out2378;
                resultingOwnership = _out2379;
                readIdents = _6027_recIdents;
              }
            } else if (_source221.is_Map) {
              DAST._IType _6028___mcc_h1040 = _source221.dtor_key;
              DAST._IType _6029___mcc_h1041 = _source221.dtor_value;
              {
                RAST._IType _6030_fromTpeGen;
                RAST._IType _out2380;
                _out2380 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6030_fromTpeGen = _out2380;
                RAST._IType _6031_toTpeGen;
                RAST._IType _out2381;
                _out2381 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6031_toTpeGen = _out2381;
                RAST._IExpr _6032_recursiveGen;
                DCOMP._IOwnership _6033_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6034_recIdents;
                RAST._IExpr _out2382;
                DCOMP._IOwnership _out2383;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2384;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2382, out _out2383, out _out2384);
                _6032_recursiveGen = _out2382;
                _6033_recOwned = _out2383;
                _6034_recIdents = _out2384;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6032_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6030_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6031_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2385;
                DCOMP._IOwnership _out2386;
                DCOMP.COMP.FromOwnership(r, _6033_recOwned, expectedOwnership, out _out2385, out _out2386);
                r = _out2385;
                resultingOwnership = _out2386;
                readIdents = _6034_recIdents;
              }
            } else if (_source221.is_SetBuilder) {
              DAST._IType _6035___mcc_h1044 = _source221.dtor_element;
              {
                RAST._IType _6036_fromTpeGen;
                RAST._IType _out2387;
                _out2387 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6036_fromTpeGen = _out2387;
                RAST._IType _6037_toTpeGen;
                RAST._IType _out2388;
                _out2388 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6037_toTpeGen = _out2388;
                RAST._IExpr _6038_recursiveGen;
                DCOMP._IOwnership _6039_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6040_recIdents;
                RAST._IExpr _out2389;
                DCOMP._IOwnership _out2390;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2391;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2389, out _out2390, out _out2391);
                _6038_recursiveGen = _out2389;
                _6039_recOwned = _out2390;
                _6040_recIdents = _out2391;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6038_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6036_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6037_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2392;
                DCOMP._IOwnership _out2393;
                DCOMP.COMP.FromOwnership(r, _6039_recOwned, expectedOwnership, out _out2392, out _out2393);
                r = _out2392;
                resultingOwnership = _out2393;
                readIdents = _6040_recIdents;
              }
            } else if (_source221.is_MapBuilder) {
              DAST._IType _6041___mcc_h1046 = _source221.dtor_key;
              DAST._IType _6042___mcc_h1047 = _source221.dtor_value;
              {
                RAST._IType _6043_fromTpeGen;
                RAST._IType _out2394;
                _out2394 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6043_fromTpeGen = _out2394;
                RAST._IType _6044_toTpeGen;
                RAST._IType _out2395;
                _out2395 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6044_toTpeGen = _out2395;
                RAST._IExpr _6045_recursiveGen;
                DCOMP._IOwnership _6046_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6047_recIdents;
                RAST._IExpr _out2396;
                DCOMP._IOwnership _out2397;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2398;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2396, out _out2397, out _out2398);
                _6045_recursiveGen = _out2396;
                _6046_recOwned = _out2397;
                _6047_recIdents = _out2398;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6045_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6043_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6044_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2399;
                DCOMP._IOwnership _out2400;
                DCOMP.COMP.FromOwnership(r, _6046_recOwned, expectedOwnership, out _out2399, out _out2400);
                r = _out2399;
                resultingOwnership = _out2400;
                readIdents = _6047_recIdents;
              }
            } else if (_source221.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6048___mcc_h1050 = _source221.dtor_args;
              DAST._IType _6049___mcc_h1051 = _source221.dtor_result;
              {
                RAST._IType _6050_fromTpeGen;
                RAST._IType _out2401;
                _out2401 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6050_fromTpeGen = _out2401;
                RAST._IType _6051_toTpeGen;
                RAST._IType _out2402;
                _out2402 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6051_toTpeGen = _out2402;
                RAST._IExpr _6052_recursiveGen;
                DCOMP._IOwnership _6053_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6054_recIdents;
                RAST._IExpr _out2403;
                DCOMP._IOwnership _out2404;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2405;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2403, out _out2404, out _out2405);
                _6052_recursiveGen = _out2403;
                _6053_recOwned = _out2404;
                _6054_recIdents = _out2405;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6052_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6050_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6051_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2406;
                DCOMP._IOwnership _out2407;
                DCOMP.COMP.FromOwnership(r, _6053_recOwned, expectedOwnership, out _out2406, out _out2407);
                r = _out2406;
                resultingOwnership = _out2407;
                readIdents = _6054_recIdents;
              }
            } else if (_source221.is_Primitive) {
              DAST._IPrimitive _6055___mcc_h1054 = _source221.dtor_Primitive_a0;
              DAST._IPrimitive _source226 = _6055___mcc_h1054;
              if (_source226.is_Int) {
                {
                  RAST._IExpr _6056_recursiveGen;
                  DCOMP._IOwnership _6057___v94;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6058_recIdents;
                  RAST._IExpr _out2408;
                  DCOMP._IOwnership _out2409;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2410;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2408, out _out2409, out _out2410);
                  _6056_recursiveGen = _out2408;
                  _6057___v94 = _out2409;
                  _6058_recIdents = _out2410;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_6056_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out2411;
                  DCOMP._IOwnership _out2412;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2411, out _out2412);
                  r = _out2411;
                  resultingOwnership = _out2412;
                  readIdents = _6058_recIdents;
                }
              } else if (_source226.is_Real) {
                {
                  RAST._IType _6059_fromTpeGen;
                  RAST._IType _out2413;
                  _out2413 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6059_fromTpeGen = _out2413;
                  RAST._IType _6060_toTpeGen;
                  RAST._IType _out2414;
                  _out2414 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6060_toTpeGen = _out2414;
                  RAST._IExpr _6061_recursiveGen;
                  DCOMP._IOwnership _6062_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6063_recIdents;
                  RAST._IExpr _out2415;
                  DCOMP._IOwnership _out2416;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2417;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2415, out _out2416, out _out2417);
                  _6061_recursiveGen = _out2415;
                  _6062_recOwned = _out2416;
                  _6063_recIdents = _out2417;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6061_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6059_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6060_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2418;
                  DCOMP._IOwnership _out2419;
                  DCOMP.COMP.FromOwnership(r, _6062_recOwned, expectedOwnership, out _out2418, out _out2419);
                  r = _out2418;
                  resultingOwnership = _out2419;
                  readIdents = _6063_recIdents;
                }
              } else if (_source226.is_String) {
                {
                  RAST._IType _6064_fromTpeGen;
                  RAST._IType _out2420;
                  _out2420 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6064_fromTpeGen = _out2420;
                  RAST._IType _6065_toTpeGen;
                  RAST._IType _out2421;
                  _out2421 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6065_toTpeGen = _out2421;
                  RAST._IExpr _6066_recursiveGen;
                  DCOMP._IOwnership _6067_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6068_recIdents;
                  RAST._IExpr _out2422;
                  DCOMP._IOwnership _out2423;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2424;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2422, out _out2423, out _out2424);
                  _6066_recursiveGen = _out2422;
                  _6067_recOwned = _out2423;
                  _6068_recIdents = _out2424;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6066_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6064_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6065_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2425;
                  DCOMP._IOwnership _out2426;
                  DCOMP.COMP.FromOwnership(r, _6067_recOwned, expectedOwnership, out _out2425, out _out2426);
                  r = _out2425;
                  resultingOwnership = _out2426;
                  readIdents = _6068_recIdents;
                }
              } else if (_source226.is_Bool) {
                {
                  RAST._IType _6069_fromTpeGen;
                  RAST._IType _out2427;
                  _out2427 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6069_fromTpeGen = _out2427;
                  RAST._IType _6070_toTpeGen;
                  RAST._IType _out2428;
                  _out2428 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6070_toTpeGen = _out2428;
                  RAST._IExpr _6071_recursiveGen;
                  DCOMP._IOwnership _6072_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6073_recIdents;
                  RAST._IExpr _out2429;
                  DCOMP._IOwnership _out2430;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2431;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2429, out _out2430, out _out2431);
                  _6071_recursiveGen = _out2429;
                  _6072_recOwned = _out2430;
                  _6073_recIdents = _out2431;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6071_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6069_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6070_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2432;
                  DCOMP._IOwnership _out2433;
                  DCOMP.COMP.FromOwnership(r, _6072_recOwned, expectedOwnership, out _out2432, out _out2433);
                  r = _out2432;
                  resultingOwnership = _out2433;
                  readIdents = _6073_recIdents;
                }
              } else {
                {
                  RAST._IType _6074_fromTpeGen;
                  RAST._IType _out2434;
                  _out2434 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6074_fromTpeGen = _out2434;
                  RAST._IType _6075_toTpeGen;
                  RAST._IType _out2435;
                  _out2435 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6075_toTpeGen = _out2435;
                  RAST._IExpr _6076_recursiveGen;
                  DCOMP._IOwnership _6077_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6078_recIdents;
                  RAST._IExpr _out2436;
                  DCOMP._IOwnership _out2437;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2438;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2436, out _out2437, out _out2438);
                  _6076_recursiveGen = _out2436;
                  _6077_recOwned = _out2437;
                  _6078_recIdents = _out2438;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6076_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6074_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6075_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2439;
                  DCOMP._IOwnership _out2440;
                  DCOMP.COMP.FromOwnership(r, _6077_recOwned, expectedOwnership, out _out2439, out _out2440);
                  r = _out2439;
                  resultingOwnership = _out2440;
                  readIdents = _6078_recIdents;
                }
              }
            } else if (_source221.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6079___mcc_h1056 = _source221.dtor_Passthrough_a0;
              {
                RAST._IType _6080_fromTpeGen;
                RAST._IType _out2441;
                _out2441 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6080_fromTpeGen = _out2441;
                RAST._IType _6081_toTpeGen;
                RAST._IType _out2442;
                _out2442 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6081_toTpeGen = _out2442;
                RAST._IExpr _6082_recursiveGen;
                DCOMP._IOwnership _6083_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6084_recIdents;
                RAST._IExpr _out2443;
                DCOMP._IOwnership _out2444;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2445;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2443, out _out2444, out _out2445);
                _6082_recursiveGen = _out2443;
                _6083_recOwned = _out2444;
                _6084_recIdents = _out2445;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6082_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6080_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6081_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2446;
                DCOMP._IOwnership _out2447;
                DCOMP.COMP.FromOwnership(r, _6083_recOwned, expectedOwnership, out _out2446, out _out2447);
                r = _out2446;
                resultingOwnership = _out2447;
                readIdents = _6084_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6085___mcc_h1058 = _source221.dtor_TypeArg_a0;
              {
                RAST._IType _6086_fromTpeGen;
                RAST._IType _out2448;
                _out2448 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6086_fromTpeGen = _out2448;
                RAST._IType _6087_toTpeGen;
                RAST._IType _out2449;
                _out2449 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6087_toTpeGen = _out2449;
                RAST._IExpr _6088_recursiveGen;
                DCOMP._IOwnership _6089_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6090_recIdents;
                RAST._IExpr _out2450;
                DCOMP._IOwnership _out2451;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2452;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2450, out _out2451, out _out2452);
                _6088_recursiveGen = _out2450;
                _6089_recOwned = _out2451;
                _6090_recIdents = _out2452;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6088_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6086_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6087_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2453;
                DCOMP._IOwnership _out2454;
                DCOMP.COMP.FromOwnership(r, _6089_recOwned, expectedOwnership, out _out2453, out _out2454);
                r = _out2453;
                resultingOwnership = _out2454;
                readIdents = _6090_recIdents;
              }
            }
          } else if (_source214.is_String) {
            DAST._IType _source227 = _3476___mcc_h1;
            if (_source227.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6091___mcc_h1060 = _source227.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6092___mcc_h1061 = _source227.dtor_typeArgs;
              DAST._IResolvedType _6093___mcc_h1062 = _source227.dtor_resolved;
              DAST._IResolvedType _source228 = _6093___mcc_h1062;
              if (_source228.is_AllocatedDatatype) {
                DAST._IDatatypeType _6094___mcc_h1066 = _source228.dtor_datatypeType;
                {
                  RAST._IType _6095_fromTpeGen;
                  RAST._IType _out2455;
                  _out2455 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6095_fromTpeGen = _out2455;
                  RAST._IType _6096_toTpeGen;
                  RAST._IType _out2456;
                  _out2456 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6096_toTpeGen = _out2456;
                  RAST._IExpr _6097_recursiveGen;
                  DCOMP._IOwnership _6098_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6099_recIdents;
                  RAST._IExpr _out2457;
                  DCOMP._IOwnership _out2458;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2459;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2457, out _out2458, out _out2459);
                  _6097_recursiveGen = _out2457;
                  _6098_recOwned = _out2458;
                  _6099_recIdents = _out2459;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6097_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6095_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6096_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2460;
                  DCOMP._IOwnership _out2461;
                  DCOMP.COMP.FromOwnership(r, _6098_recOwned, expectedOwnership, out _out2460, out _out2461);
                  r = _out2460;
                  resultingOwnership = _out2461;
                  readIdents = _6099_recIdents;
                }
              } else if (_source228.is_Datatype) {
                DAST._IDatatypeType _6100___mcc_h1068 = _source228.dtor_datatypeType;
                {
                  RAST._IType _6101_fromTpeGen;
                  RAST._IType _out2462;
                  _out2462 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6101_fromTpeGen = _out2462;
                  RAST._IType _6102_toTpeGen;
                  RAST._IType _out2463;
                  _out2463 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6102_toTpeGen = _out2463;
                  RAST._IExpr _6103_recursiveGen;
                  DCOMP._IOwnership _6104_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6105_recIdents;
                  RAST._IExpr _out2464;
                  DCOMP._IOwnership _out2465;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2466;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2464, out _out2465, out _out2466);
                  _6103_recursiveGen = _out2464;
                  _6104_recOwned = _out2465;
                  _6105_recIdents = _out2466;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6103_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6101_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6102_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2467;
                  DCOMP._IOwnership _out2468;
                  DCOMP.COMP.FromOwnership(r, _6104_recOwned, expectedOwnership, out _out2467, out _out2468);
                  r = _out2467;
                  resultingOwnership = _out2468;
                  readIdents = _6105_recIdents;
                }
              } else if (_source228.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6106___mcc_h1070 = _source228.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6107___mcc_h1071 = _source228.dtor_attributes;
                {
                  RAST._IType _6108_fromTpeGen;
                  RAST._IType _out2469;
                  _out2469 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6108_fromTpeGen = _out2469;
                  RAST._IType _6109_toTpeGen;
                  RAST._IType _out2470;
                  _out2470 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6109_toTpeGen = _out2470;
                  RAST._IExpr _6110_recursiveGen;
                  DCOMP._IOwnership _6111_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6112_recIdents;
                  RAST._IExpr _out2471;
                  DCOMP._IOwnership _out2472;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2473;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2471, out _out2472, out _out2473);
                  _6110_recursiveGen = _out2471;
                  _6111_recOwned = _out2472;
                  _6112_recIdents = _out2473;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6110_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6108_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6109_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2474;
                  DCOMP._IOwnership _out2475;
                  DCOMP.COMP.FromOwnership(r, _6111_recOwned, expectedOwnership, out _out2474, out _out2475);
                  r = _out2474;
                  resultingOwnership = _out2475;
                  readIdents = _6112_recIdents;
                }
              } else {
                DAST._IType _6113___mcc_h1074 = _source228.dtor_baseType;
                DAST._INewtypeRange _6114___mcc_h1075 = _source228.dtor_range;
                bool _6115___mcc_h1076 = _source228.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6116___mcc_h1077 = _source228.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6117_attributes = _6116___mcc_h1077;
                bool _6118_erase = _6115___mcc_h1076;
                DAST._INewtypeRange _6119_range = _6114___mcc_h1075;
                DAST._IType _6120_b = _6113___mcc_h1074;
                {
                  Std.Wrappers._IOption<RAST._IType> _6121_nativeToType;
                  _6121_nativeToType = DCOMP.COMP.NewtypeToRustType(_6120_b, _6119_range);
                  if (object.Equals(_3470_fromTpe, _6120_b)) {
                    RAST._IExpr _6122_recursiveGen;
                    DCOMP._IOwnership _6123_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6124_recIdents;
                    RAST._IExpr _out2476;
                    DCOMP._IOwnership _out2477;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2478;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2476, out _out2477, out _out2478);
                    _6122_recursiveGen = _out2476;
                    _6123_recOwned = _out2477;
                    _6124_recIdents = _out2478;
                    readIdents = _6124_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source229 = _6121_nativeToType;
                    if (_source229.is_None) {
                      if (_6118_erase) {
                        r = _6122_recursiveGen;
                      } else {
                        RAST._IType _6125_rhsType;
                        RAST._IType _out2479;
                        _out2479 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _6125_rhsType = _out2479;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6125_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6122_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2480;
                      DCOMP._IOwnership _out2481;
                      DCOMP.COMP.FromOwnership(r, _6123_recOwned, expectedOwnership, out _out2480, out _out2481);
                      r = _out2480;
                      resultingOwnership = _out2481;
                    } else {
                      RAST._IType _6126___mcc_h2218 = _source229.dtor_value;
                      RAST._IType _6127_v = _6126___mcc_h2218;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6122_recursiveGen, RAST.Expr.create_ExprFromType(_6127_v)));
                      RAST._IExpr _out2482;
                      DCOMP._IOwnership _out2483;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2482, out _out2483);
                      r = _out2482;
                      resultingOwnership = _out2483;
                    }
                  } else {
                    if ((_6121_nativeToType).is_Some) {
                      DAST._IType _source230 = _3470_fromTpe;
                      if (_source230.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6128___mcc_h2219 = _source230.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6129___mcc_h2220 = _source230.dtor_typeArgs;
                        DAST._IResolvedType _6130___mcc_h2221 = _source230.dtor_resolved;
                        DAST._IResolvedType _source231 = _6130___mcc_h2221;
                        if (_source231.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6131___mcc_h2225 = _source231.dtor_datatypeType;
                        } else if (_source231.is_Datatype) {
                          DAST._IDatatypeType _6132___mcc_h2227 = _source231.dtor_datatypeType;
                        } else if (_source231.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6133___mcc_h2229 = _source231.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6134___mcc_h2230 = _source231.dtor_attributes;
                        } else {
                          DAST._IType _6135___mcc_h2233 = _source231.dtor_baseType;
                          DAST._INewtypeRange _6136___mcc_h2234 = _source231.dtor_range;
                          bool _6137___mcc_h2235 = _source231.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6138___mcc_h2236 = _source231.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6139_attributes0 = _6138___mcc_h2236;
                          bool _6140_erase0 = _6137___mcc_h2235;
                          DAST._INewtypeRange _6141_range0 = _6136___mcc_h2234;
                          DAST._IType _6142_b0 = _6135___mcc_h2233;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6143_nativeFromType;
                            _6143_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6142_b0, _6141_range0);
                            if ((_6143_nativeFromType).is_Some) {
                              RAST._IExpr _6144_recursiveGen;
                              DCOMP._IOwnership _6145_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6146_recIdents;
                              RAST._IExpr _out2484;
                              DCOMP._IOwnership _out2485;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2486;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2484, out _out2485, out _out2486);
                              _6144_recursiveGen = _out2484;
                              _6145_recOwned = _out2485;
                              _6146_recIdents = _out2486;
                              RAST._IExpr _out2487;
                              DCOMP._IOwnership _out2488;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6144_recursiveGen, (_6121_nativeToType).dtor_value), _6145_recOwned, expectedOwnership, out _out2487, out _out2488);
                              r = _out2487;
                              resultingOwnership = _out2488;
                              readIdents = _6146_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source230.is_Nullable) {
                        DAST._IType _6147___mcc_h2241 = _source230.dtor_Nullable_a0;
                      } else if (_source230.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6148___mcc_h2243 = _source230.dtor_Tuple_a0;
                      } else if (_source230.is_Array) {
                        DAST._IType _6149___mcc_h2245 = _source230.dtor_element;
                        BigInteger _6150___mcc_h2246 = _source230.dtor_dims;
                      } else if (_source230.is_Seq) {
                        DAST._IType _6151___mcc_h2249 = _source230.dtor_element;
                      } else if (_source230.is_Set) {
                        DAST._IType _6152___mcc_h2251 = _source230.dtor_element;
                      } else if (_source230.is_Multiset) {
                        DAST._IType _6153___mcc_h2253 = _source230.dtor_element;
                      } else if (_source230.is_Map) {
                        DAST._IType _6154___mcc_h2255 = _source230.dtor_key;
                        DAST._IType _6155___mcc_h2256 = _source230.dtor_value;
                      } else if (_source230.is_SetBuilder) {
                        DAST._IType _6156___mcc_h2259 = _source230.dtor_element;
                      } else if (_source230.is_MapBuilder) {
                        DAST._IType _6157___mcc_h2261 = _source230.dtor_key;
                        DAST._IType _6158___mcc_h2262 = _source230.dtor_value;
                      } else if (_source230.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6159___mcc_h2265 = _source230.dtor_args;
                        DAST._IType _6160___mcc_h2266 = _source230.dtor_result;
                      } else if (_source230.is_Primitive) {
                        DAST._IPrimitive _6161___mcc_h2269 = _source230.dtor_Primitive_a0;
                      } else if (_source230.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6162___mcc_h2271 = _source230.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6163___mcc_h2273 = _source230.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6164_recursiveGen;
                        DCOMP._IOwnership _6165_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6166_recIdents;
                        RAST._IExpr _out2489;
                        DCOMP._IOwnership _out2490;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2491;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2489, out _out2490, out _out2491);
                        _6164_recursiveGen = _out2489;
                        _6165_recOwned = _out2490;
                        _6166_recIdents = _out2491;
                        RAST._IExpr _out2492;
                        DCOMP._IOwnership _out2493;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6164_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6121_nativeToType).dtor_value), _6165_recOwned, expectedOwnership, out _out2492, out _out2493);
                        r = _out2492;
                        resultingOwnership = _out2493;
                        readIdents = _6166_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2494;
                    DCOMP._IOwnership _out2495;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2496;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _6120_b), _6120_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out2494, out _out2495, out _out2496);
                    r = _out2494;
                    resultingOwnership = _out2495;
                    readIdents = _out2496;
                  }
                }
              }
            } else if (_source227.is_Nullable) {
              DAST._IType _6167___mcc_h1082 = _source227.dtor_Nullable_a0;
              {
                RAST._IExpr _6168_recursiveGen;
                DCOMP._IOwnership _6169_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6170_recIdents;
                RAST._IExpr _out2497;
                DCOMP._IOwnership _out2498;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2499;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2497, out _out2498, out _out2499);
                _6168_recursiveGen = _out2497;
                _6169_recOwned = _out2498;
                _6170_recIdents = _out2499;
                r = _6168_recursiveGen;
                if (object.Equals(_6169_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2500;
                DCOMP._IOwnership _out2501;
                DCOMP.COMP.FromOwnership(r, _6169_recOwned, expectedOwnership, out _out2500, out _out2501);
                r = _out2500;
                resultingOwnership = _out2501;
                readIdents = _6170_recIdents;
              }
            } else if (_source227.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6171___mcc_h1084 = _source227.dtor_Tuple_a0;
              {
                RAST._IType _6172_fromTpeGen;
                RAST._IType _out2502;
                _out2502 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6172_fromTpeGen = _out2502;
                RAST._IType _6173_toTpeGen;
                RAST._IType _out2503;
                _out2503 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6173_toTpeGen = _out2503;
                RAST._IExpr _6174_recursiveGen;
                DCOMP._IOwnership _6175_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6176_recIdents;
                RAST._IExpr _out2504;
                DCOMP._IOwnership _out2505;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2506;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2504, out _out2505, out _out2506);
                _6174_recursiveGen = _out2504;
                _6175_recOwned = _out2505;
                _6176_recIdents = _out2506;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6174_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6172_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6173_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2507;
                DCOMP._IOwnership _out2508;
                DCOMP.COMP.FromOwnership(r, _6175_recOwned, expectedOwnership, out _out2507, out _out2508);
                r = _out2507;
                resultingOwnership = _out2508;
                readIdents = _6176_recIdents;
              }
            } else if (_source227.is_Array) {
              DAST._IType _6177___mcc_h1086 = _source227.dtor_element;
              BigInteger _6178___mcc_h1087 = _source227.dtor_dims;
              {
                RAST._IType _6179_fromTpeGen;
                RAST._IType _out2509;
                _out2509 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6179_fromTpeGen = _out2509;
                RAST._IType _6180_toTpeGen;
                RAST._IType _out2510;
                _out2510 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6180_toTpeGen = _out2510;
                RAST._IExpr _6181_recursiveGen;
                DCOMP._IOwnership _6182_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6183_recIdents;
                RAST._IExpr _out2511;
                DCOMP._IOwnership _out2512;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2513;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2511, out _out2512, out _out2513);
                _6181_recursiveGen = _out2511;
                _6182_recOwned = _out2512;
                _6183_recIdents = _out2513;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6181_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6179_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6180_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2514;
                DCOMP._IOwnership _out2515;
                DCOMP.COMP.FromOwnership(r, _6182_recOwned, expectedOwnership, out _out2514, out _out2515);
                r = _out2514;
                resultingOwnership = _out2515;
                readIdents = _6183_recIdents;
              }
            } else if (_source227.is_Seq) {
              DAST._IType _6184___mcc_h1090 = _source227.dtor_element;
              {
                RAST._IType _6185_fromTpeGen;
                RAST._IType _out2516;
                _out2516 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6185_fromTpeGen = _out2516;
                RAST._IType _6186_toTpeGen;
                RAST._IType _out2517;
                _out2517 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6186_toTpeGen = _out2517;
                RAST._IExpr _6187_recursiveGen;
                DCOMP._IOwnership _6188_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6189_recIdents;
                RAST._IExpr _out2518;
                DCOMP._IOwnership _out2519;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2520;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2518, out _out2519, out _out2520);
                _6187_recursiveGen = _out2518;
                _6188_recOwned = _out2519;
                _6189_recIdents = _out2520;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6187_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6185_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6186_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2521;
                DCOMP._IOwnership _out2522;
                DCOMP.COMP.FromOwnership(r, _6188_recOwned, expectedOwnership, out _out2521, out _out2522);
                r = _out2521;
                resultingOwnership = _out2522;
                readIdents = _6189_recIdents;
              }
            } else if (_source227.is_Set) {
              DAST._IType _6190___mcc_h1092 = _source227.dtor_element;
              {
                RAST._IType _6191_fromTpeGen;
                RAST._IType _out2523;
                _out2523 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6191_fromTpeGen = _out2523;
                RAST._IType _6192_toTpeGen;
                RAST._IType _out2524;
                _out2524 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6192_toTpeGen = _out2524;
                RAST._IExpr _6193_recursiveGen;
                DCOMP._IOwnership _6194_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6195_recIdents;
                RAST._IExpr _out2525;
                DCOMP._IOwnership _out2526;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2527;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2525, out _out2526, out _out2527);
                _6193_recursiveGen = _out2525;
                _6194_recOwned = _out2526;
                _6195_recIdents = _out2527;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6193_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6191_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6192_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2528;
                DCOMP._IOwnership _out2529;
                DCOMP.COMP.FromOwnership(r, _6194_recOwned, expectedOwnership, out _out2528, out _out2529);
                r = _out2528;
                resultingOwnership = _out2529;
                readIdents = _6195_recIdents;
              }
            } else if (_source227.is_Multiset) {
              DAST._IType _6196___mcc_h1094 = _source227.dtor_element;
              {
                RAST._IType _6197_fromTpeGen;
                RAST._IType _out2530;
                _out2530 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6197_fromTpeGen = _out2530;
                RAST._IType _6198_toTpeGen;
                RAST._IType _out2531;
                _out2531 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6198_toTpeGen = _out2531;
                RAST._IExpr _6199_recursiveGen;
                DCOMP._IOwnership _6200_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6201_recIdents;
                RAST._IExpr _out2532;
                DCOMP._IOwnership _out2533;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2534;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2532, out _out2533, out _out2534);
                _6199_recursiveGen = _out2532;
                _6200_recOwned = _out2533;
                _6201_recIdents = _out2534;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6199_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6197_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6198_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2535;
                DCOMP._IOwnership _out2536;
                DCOMP.COMP.FromOwnership(r, _6200_recOwned, expectedOwnership, out _out2535, out _out2536);
                r = _out2535;
                resultingOwnership = _out2536;
                readIdents = _6201_recIdents;
              }
            } else if (_source227.is_Map) {
              DAST._IType _6202___mcc_h1096 = _source227.dtor_key;
              DAST._IType _6203___mcc_h1097 = _source227.dtor_value;
              {
                RAST._IType _6204_fromTpeGen;
                RAST._IType _out2537;
                _out2537 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6204_fromTpeGen = _out2537;
                RAST._IType _6205_toTpeGen;
                RAST._IType _out2538;
                _out2538 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6205_toTpeGen = _out2538;
                RAST._IExpr _6206_recursiveGen;
                DCOMP._IOwnership _6207_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6208_recIdents;
                RAST._IExpr _out2539;
                DCOMP._IOwnership _out2540;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2541;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2539, out _out2540, out _out2541);
                _6206_recursiveGen = _out2539;
                _6207_recOwned = _out2540;
                _6208_recIdents = _out2541;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6206_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6204_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6205_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2542;
                DCOMP._IOwnership _out2543;
                DCOMP.COMP.FromOwnership(r, _6207_recOwned, expectedOwnership, out _out2542, out _out2543);
                r = _out2542;
                resultingOwnership = _out2543;
                readIdents = _6208_recIdents;
              }
            } else if (_source227.is_SetBuilder) {
              DAST._IType _6209___mcc_h1100 = _source227.dtor_element;
              {
                RAST._IType _6210_fromTpeGen;
                RAST._IType _out2544;
                _out2544 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6210_fromTpeGen = _out2544;
                RAST._IType _6211_toTpeGen;
                RAST._IType _out2545;
                _out2545 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6211_toTpeGen = _out2545;
                RAST._IExpr _6212_recursiveGen;
                DCOMP._IOwnership _6213_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6214_recIdents;
                RAST._IExpr _out2546;
                DCOMP._IOwnership _out2547;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2548;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2546, out _out2547, out _out2548);
                _6212_recursiveGen = _out2546;
                _6213_recOwned = _out2547;
                _6214_recIdents = _out2548;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6212_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6210_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6211_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2549;
                DCOMP._IOwnership _out2550;
                DCOMP.COMP.FromOwnership(r, _6213_recOwned, expectedOwnership, out _out2549, out _out2550);
                r = _out2549;
                resultingOwnership = _out2550;
                readIdents = _6214_recIdents;
              }
            } else if (_source227.is_MapBuilder) {
              DAST._IType _6215___mcc_h1102 = _source227.dtor_key;
              DAST._IType _6216___mcc_h1103 = _source227.dtor_value;
              {
                RAST._IType _6217_fromTpeGen;
                RAST._IType _out2551;
                _out2551 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6217_fromTpeGen = _out2551;
                RAST._IType _6218_toTpeGen;
                RAST._IType _out2552;
                _out2552 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6218_toTpeGen = _out2552;
                RAST._IExpr _6219_recursiveGen;
                DCOMP._IOwnership _6220_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6221_recIdents;
                RAST._IExpr _out2553;
                DCOMP._IOwnership _out2554;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2555;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2553, out _out2554, out _out2555);
                _6219_recursiveGen = _out2553;
                _6220_recOwned = _out2554;
                _6221_recIdents = _out2555;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6219_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6217_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6218_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2556;
                DCOMP._IOwnership _out2557;
                DCOMP.COMP.FromOwnership(r, _6220_recOwned, expectedOwnership, out _out2556, out _out2557);
                r = _out2556;
                resultingOwnership = _out2557;
                readIdents = _6221_recIdents;
              }
            } else if (_source227.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6222___mcc_h1106 = _source227.dtor_args;
              DAST._IType _6223___mcc_h1107 = _source227.dtor_result;
              {
                RAST._IType _6224_fromTpeGen;
                RAST._IType _out2558;
                _out2558 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6224_fromTpeGen = _out2558;
                RAST._IType _6225_toTpeGen;
                RAST._IType _out2559;
                _out2559 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6225_toTpeGen = _out2559;
                RAST._IExpr _6226_recursiveGen;
                DCOMP._IOwnership _6227_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6228_recIdents;
                RAST._IExpr _out2560;
                DCOMP._IOwnership _out2561;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2562;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2560, out _out2561, out _out2562);
                _6226_recursiveGen = _out2560;
                _6227_recOwned = _out2561;
                _6228_recIdents = _out2562;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6226_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6224_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6225_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2563;
                DCOMP._IOwnership _out2564;
                DCOMP.COMP.FromOwnership(r, _6227_recOwned, expectedOwnership, out _out2563, out _out2564);
                r = _out2563;
                resultingOwnership = _out2564;
                readIdents = _6228_recIdents;
              }
            } else if (_source227.is_Primitive) {
              DAST._IPrimitive _6229___mcc_h1110 = _source227.dtor_Primitive_a0;
              {
                RAST._IType _6230_fromTpeGen;
                RAST._IType _out2565;
                _out2565 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6230_fromTpeGen = _out2565;
                RAST._IType _6231_toTpeGen;
                RAST._IType _out2566;
                _out2566 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6231_toTpeGen = _out2566;
                RAST._IExpr _6232_recursiveGen;
                DCOMP._IOwnership _6233_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6234_recIdents;
                RAST._IExpr _out2567;
                DCOMP._IOwnership _out2568;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2569;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2567, out _out2568, out _out2569);
                _6232_recursiveGen = _out2567;
                _6233_recOwned = _out2568;
                _6234_recIdents = _out2569;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6232_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6230_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6231_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2570;
                DCOMP._IOwnership _out2571;
                DCOMP.COMP.FromOwnership(r, _6233_recOwned, expectedOwnership, out _out2570, out _out2571);
                r = _out2570;
                resultingOwnership = _out2571;
                readIdents = _6234_recIdents;
              }
            } else if (_source227.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6235___mcc_h1112 = _source227.dtor_Passthrough_a0;
              {
                RAST._IType _6236_fromTpeGen;
                RAST._IType _out2572;
                _out2572 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6236_fromTpeGen = _out2572;
                RAST._IType _6237_toTpeGen;
                RAST._IType _out2573;
                _out2573 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6237_toTpeGen = _out2573;
                RAST._IExpr _6238_recursiveGen;
                DCOMP._IOwnership _6239_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6240_recIdents;
                RAST._IExpr _out2574;
                DCOMP._IOwnership _out2575;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2576;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2574, out _out2575, out _out2576);
                _6238_recursiveGen = _out2574;
                _6239_recOwned = _out2575;
                _6240_recIdents = _out2576;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6238_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6236_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6237_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2577;
                DCOMP._IOwnership _out2578;
                DCOMP.COMP.FromOwnership(r, _6239_recOwned, expectedOwnership, out _out2577, out _out2578);
                r = _out2577;
                resultingOwnership = _out2578;
                readIdents = _6240_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6241___mcc_h1114 = _source227.dtor_TypeArg_a0;
              {
                RAST._IType _6242_fromTpeGen;
                RAST._IType _out2579;
                _out2579 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6242_fromTpeGen = _out2579;
                RAST._IType _6243_toTpeGen;
                RAST._IType _out2580;
                _out2580 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6243_toTpeGen = _out2580;
                RAST._IExpr _6244_recursiveGen;
                DCOMP._IOwnership _6245_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6246_recIdents;
                RAST._IExpr _out2581;
                DCOMP._IOwnership _out2582;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2583;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2581, out _out2582, out _out2583);
                _6244_recursiveGen = _out2581;
                _6245_recOwned = _out2582;
                _6246_recIdents = _out2583;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6244_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6242_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6243_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2584;
                DCOMP._IOwnership _out2585;
                DCOMP.COMP.FromOwnership(r, _6245_recOwned, expectedOwnership, out _out2584, out _out2585);
                r = _out2584;
                resultingOwnership = _out2585;
                readIdents = _6246_recIdents;
              }
            }
          } else if (_source214.is_Bool) {
            DAST._IType _source232 = _3476___mcc_h1;
            if (_source232.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6247___mcc_h1116 = _source232.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6248___mcc_h1117 = _source232.dtor_typeArgs;
              DAST._IResolvedType _6249___mcc_h1118 = _source232.dtor_resolved;
              DAST._IResolvedType _source233 = _6249___mcc_h1118;
              if (_source233.is_AllocatedDatatype) {
                DAST._IDatatypeType _6250___mcc_h1122 = _source233.dtor_datatypeType;
                {
                  RAST._IType _6251_fromTpeGen;
                  RAST._IType _out2586;
                  _out2586 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6251_fromTpeGen = _out2586;
                  RAST._IType _6252_toTpeGen;
                  RAST._IType _out2587;
                  _out2587 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6252_toTpeGen = _out2587;
                  RAST._IExpr _6253_recursiveGen;
                  DCOMP._IOwnership _6254_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6255_recIdents;
                  RAST._IExpr _out2588;
                  DCOMP._IOwnership _out2589;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2590;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2588, out _out2589, out _out2590);
                  _6253_recursiveGen = _out2588;
                  _6254_recOwned = _out2589;
                  _6255_recIdents = _out2590;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6253_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6251_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6252_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2591;
                  DCOMP._IOwnership _out2592;
                  DCOMP.COMP.FromOwnership(r, _6254_recOwned, expectedOwnership, out _out2591, out _out2592);
                  r = _out2591;
                  resultingOwnership = _out2592;
                  readIdents = _6255_recIdents;
                }
              } else if (_source233.is_Datatype) {
                DAST._IDatatypeType _6256___mcc_h1124 = _source233.dtor_datatypeType;
                {
                  RAST._IType _6257_fromTpeGen;
                  RAST._IType _out2593;
                  _out2593 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6257_fromTpeGen = _out2593;
                  RAST._IType _6258_toTpeGen;
                  RAST._IType _out2594;
                  _out2594 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6258_toTpeGen = _out2594;
                  RAST._IExpr _6259_recursiveGen;
                  DCOMP._IOwnership _6260_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6261_recIdents;
                  RAST._IExpr _out2595;
                  DCOMP._IOwnership _out2596;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2597;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2595, out _out2596, out _out2597);
                  _6259_recursiveGen = _out2595;
                  _6260_recOwned = _out2596;
                  _6261_recIdents = _out2597;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6259_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6257_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6258_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2598;
                  DCOMP._IOwnership _out2599;
                  DCOMP.COMP.FromOwnership(r, _6260_recOwned, expectedOwnership, out _out2598, out _out2599);
                  r = _out2598;
                  resultingOwnership = _out2599;
                  readIdents = _6261_recIdents;
                }
              } else if (_source233.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6262___mcc_h1126 = _source233.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6263___mcc_h1127 = _source233.dtor_attributes;
                {
                  RAST._IType _6264_fromTpeGen;
                  RAST._IType _out2600;
                  _out2600 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6264_fromTpeGen = _out2600;
                  RAST._IType _6265_toTpeGen;
                  RAST._IType _out2601;
                  _out2601 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6265_toTpeGen = _out2601;
                  RAST._IExpr _6266_recursiveGen;
                  DCOMP._IOwnership _6267_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6268_recIdents;
                  RAST._IExpr _out2602;
                  DCOMP._IOwnership _out2603;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2604;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2602, out _out2603, out _out2604);
                  _6266_recursiveGen = _out2602;
                  _6267_recOwned = _out2603;
                  _6268_recIdents = _out2604;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6266_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6264_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6265_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2605;
                  DCOMP._IOwnership _out2606;
                  DCOMP.COMP.FromOwnership(r, _6267_recOwned, expectedOwnership, out _out2605, out _out2606);
                  r = _out2605;
                  resultingOwnership = _out2606;
                  readIdents = _6268_recIdents;
                }
              } else {
                DAST._IType _6269___mcc_h1130 = _source233.dtor_baseType;
                DAST._INewtypeRange _6270___mcc_h1131 = _source233.dtor_range;
                bool _6271___mcc_h1132 = _source233.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6272___mcc_h1133 = _source233.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6273_attributes = _6272___mcc_h1133;
                bool _6274_erase = _6271___mcc_h1132;
                DAST._INewtypeRange _6275_range = _6270___mcc_h1131;
                DAST._IType _6276_b = _6269___mcc_h1130;
                {
                  Std.Wrappers._IOption<RAST._IType> _6277_nativeToType;
                  _6277_nativeToType = DCOMP.COMP.NewtypeToRustType(_6276_b, _6275_range);
                  if (object.Equals(_3470_fromTpe, _6276_b)) {
                    RAST._IExpr _6278_recursiveGen;
                    DCOMP._IOwnership _6279_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6280_recIdents;
                    RAST._IExpr _out2607;
                    DCOMP._IOwnership _out2608;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2609;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2607, out _out2608, out _out2609);
                    _6278_recursiveGen = _out2607;
                    _6279_recOwned = _out2608;
                    _6280_recIdents = _out2609;
                    readIdents = _6280_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source234 = _6277_nativeToType;
                    if (_source234.is_None) {
                      if (_6274_erase) {
                        r = _6278_recursiveGen;
                      } else {
                        RAST._IType _6281_rhsType;
                        RAST._IType _out2610;
                        _out2610 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _6281_rhsType = _out2610;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6281_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6278_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2611;
                      DCOMP._IOwnership _out2612;
                      DCOMP.COMP.FromOwnership(r, _6279_recOwned, expectedOwnership, out _out2611, out _out2612);
                      r = _out2611;
                      resultingOwnership = _out2612;
                    } else {
                      RAST._IType _6282___mcc_h2275 = _source234.dtor_value;
                      RAST._IType _6283_v = _6282___mcc_h2275;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6278_recursiveGen, RAST.Expr.create_ExprFromType(_6283_v)));
                      RAST._IExpr _out2613;
                      DCOMP._IOwnership _out2614;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2613, out _out2614);
                      r = _out2613;
                      resultingOwnership = _out2614;
                    }
                  } else {
                    if ((_6277_nativeToType).is_Some) {
                      DAST._IType _source235 = _3470_fromTpe;
                      if (_source235.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6284___mcc_h2276 = _source235.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6285___mcc_h2277 = _source235.dtor_typeArgs;
                        DAST._IResolvedType _6286___mcc_h2278 = _source235.dtor_resolved;
                        DAST._IResolvedType _source236 = _6286___mcc_h2278;
                        if (_source236.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6287___mcc_h2282 = _source236.dtor_datatypeType;
                        } else if (_source236.is_Datatype) {
                          DAST._IDatatypeType _6288___mcc_h2284 = _source236.dtor_datatypeType;
                        } else if (_source236.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6289___mcc_h2286 = _source236.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6290___mcc_h2287 = _source236.dtor_attributes;
                        } else {
                          DAST._IType _6291___mcc_h2290 = _source236.dtor_baseType;
                          DAST._INewtypeRange _6292___mcc_h2291 = _source236.dtor_range;
                          bool _6293___mcc_h2292 = _source236.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6294___mcc_h2293 = _source236.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6295_attributes0 = _6294___mcc_h2293;
                          bool _6296_erase0 = _6293___mcc_h2292;
                          DAST._INewtypeRange _6297_range0 = _6292___mcc_h2291;
                          DAST._IType _6298_b0 = _6291___mcc_h2290;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6299_nativeFromType;
                            _6299_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6298_b0, _6297_range0);
                            if ((_6299_nativeFromType).is_Some) {
                              RAST._IExpr _6300_recursiveGen;
                              DCOMP._IOwnership _6301_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6302_recIdents;
                              RAST._IExpr _out2615;
                              DCOMP._IOwnership _out2616;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2617;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2615, out _out2616, out _out2617);
                              _6300_recursiveGen = _out2615;
                              _6301_recOwned = _out2616;
                              _6302_recIdents = _out2617;
                              RAST._IExpr _out2618;
                              DCOMP._IOwnership _out2619;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6300_recursiveGen, (_6277_nativeToType).dtor_value), _6301_recOwned, expectedOwnership, out _out2618, out _out2619);
                              r = _out2618;
                              resultingOwnership = _out2619;
                              readIdents = _6302_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source235.is_Nullable) {
                        DAST._IType _6303___mcc_h2298 = _source235.dtor_Nullable_a0;
                      } else if (_source235.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6304___mcc_h2300 = _source235.dtor_Tuple_a0;
                      } else if (_source235.is_Array) {
                        DAST._IType _6305___mcc_h2302 = _source235.dtor_element;
                        BigInteger _6306___mcc_h2303 = _source235.dtor_dims;
                      } else if (_source235.is_Seq) {
                        DAST._IType _6307___mcc_h2306 = _source235.dtor_element;
                      } else if (_source235.is_Set) {
                        DAST._IType _6308___mcc_h2308 = _source235.dtor_element;
                      } else if (_source235.is_Multiset) {
                        DAST._IType _6309___mcc_h2310 = _source235.dtor_element;
                      } else if (_source235.is_Map) {
                        DAST._IType _6310___mcc_h2312 = _source235.dtor_key;
                        DAST._IType _6311___mcc_h2313 = _source235.dtor_value;
                      } else if (_source235.is_SetBuilder) {
                        DAST._IType _6312___mcc_h2316 = _source235.dtor_element;
                      } else if (_source235.is_MapBuilder) {
                        DAST._IType _6313___mcc_h2318 = _source235.dtor_key;
                        DAST._IType _6314___mcc_h2319 = _source235.dtor_value;
                      } else if (_source235.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6315___mcc_h2322 = _source235.dtor_args;
                        DAST._IType _6316___mcc_h2323 = _source235.dtor_result;
                      } else if (_source235.is_Primitive) {
                        DAST._IPrimitive _6317___mcc_h2326 = _source235.dtor_Primitive_a0;
                      } else if (_source235.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6318___mcc_h2328 = _source235.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6319___mcc_h2330 = _source235.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6320_recursiveGen;
                        DCOMP._IOwnership _6321_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6322_recIdents;
                        RAST._IExpr _out2620;
                        DCOMP._IOwnership _out2621;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2622;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2620, out _out2621, out _out2622);
                        _6320_recursiveGen = _out2620;
                        _6321_recOwned = _out2621;
                        _6322_recIdents = _out2622;
                        RAST._IExpr _out2623;
                        DCOMP._IOwnership _out2624;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6320_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6277_nativeToType).dtor_value), _6321_recOwned, expectedOwnership, out _out2623, out _out2624);
                        r = _out2623;
                        resultingOwnership = _out2624;
                        readIdents = _6322_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2625;
                    DCOMP._IOwnership _out2626;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2627;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _6276_b), _6276_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out2625, out _out2626, out _out2627);
                    r = _out2625;
                    resultingOwnership = _out2626;
                    readIdents = _out2627;
                  }
                }
              }
            } else if (_source232.is_Nullable) {
              DAST._IType _6323___mcc_h1138 = _source232.dtor_Nullable_a0;
              {
                RAST._IExpr _6324_recursiveGen;
                DCOMP._IOwnership _6325_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6326_recIdents;
                RAST._IExpr _out2628;
                DCOMP._IOwnership _out2629;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2630;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2628, out _out2629, out _out2630);
                _6324_recursiveGen = _out2628;
                _6325_recOwned = _out2629;
                _6326_recIdents = _out2630;
                r = _6324_recursiveGen;
                if (object.Equals(_6325_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2631;
                DCOMP._IOwnership _out2632;
                DCOMP.COMP.FromOwnership(r, _6325_recOwned, expectedOwnership, out _out2631, out _out2632);
                r = _out2631;
                resultingOwnership = _out2632;
                readIdents = _6326_recIdents;
              }
            } else if (_source232.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6327___mcc_h1140 = _source232.dtor_Tuple_a0;
              {
                RAST._IType _6328_fromTpeGen;
                RAST._IType _out2633;
                _out2633 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6328_fromTpeGen = _out2633;
                RAST._IType _6329_toTpeGen;
                RAST._IType _out2634;
                _out2634 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6329_toTpeGen = _out2634;
                RAST._IExpr _6330_recursiveGen;
                DCOMP._IOwnership _6331_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6332_recIdents;
                RAST._IExpr _out2635;
                DCOMP._IOwnership _out2636;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2637;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2635, out _out2636, out _out2637);
                _6330_recursiveGen = _out2635;
                _6331_recOwned = _out2636;
                _6332_recIdents = _out2637;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6330_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6328_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6329_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2638;
                DCOMP._IOwnership _out2639;
                DCOMP.COMP.FromOwnership(r, _6331_recOwned, expectedOwnership, out _out2638, out _out2639);
                r = _out2638;
                resultingOwnership = _out2639;
                readIdents = _6332_recIdents;
              }
            } else if (_source232.is_Array) {
              DAST._IType _6333___mcc_h1142 = _source232.dtor_element;
              BigInteger _6334___mcc_h1143 = _source232.dtor_dims;
              {
                RAST._IType _6335_fromTpeGen;
                RAST._IType _out2640;
                _out2640 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6335_fromTpeGen = _out2640;
                RAST._IType _6336_toTpeGen;
                RAST._IType _out2641;
                _out2641 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6336_toTpeGen = _out2641;
                RAST._IExpr _6337_recursiveGen;
                DCOMP._IOwnership _6338_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6339_recIdents;
                RAST._IExpr _out2642;
                DCOMP._IOwnership _out2643;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2644;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2642, out _out2643, out _out2644);
                _6337_recursiveGen = _out2642;
                _6338_recOwned = _out2643;
                _6339_recIdents = _out2644;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6337_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6335_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6336_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2645;
                DCOMP._IOwnership _out2646;
                DCOMP.COMP.FromOwnership(r, _6338_recOwned, expectedOwnership, out _out2645, out _out2646);
                r = _out2645;
                resultingOwnership = _out2646;
                readIdents = _6339_recIdents;
              }
            } else if (_source232.is_Seq) {
              DAST._IType _6340___mcc_h1146 = _source232.dtor_element;
              {
                RAST._IType _6341_fromTpeGen;
                RAST._IType _out2647;
                _out2647 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6341_fromTpeGen = _out2647;
                RAST._IType _6342_toTpeGen;
                RAST._IType _out2648;
                _out2648 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6342_toTpeGen = _out2648;
                RAST._IExpr _6343_recursiveGen;
                DCOMP._IOwnership _6344_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6345_recIdents;
                RAST._IExpr _out2649;
                DCOMP._IOwnership _out2650;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2651;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2649, out _out2650, out _out2651);
                _6343_recursiveGen = _out2649;
                _6344_recOwned = _out2650;
                _6345_recIdents = _out2651;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6343_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6341_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6342_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2652;
                DCOMP._IOwnership _out2653;
                DCOMP.COMP.FromOwnership(r, _6344_recOwned, expectedOwnership, out _out2652, out _out2653);
                r = _out2652;
                resultingOwnership = _out2653;
                readIdents = _6345_recIdents;
              }
            } else if (_source232.is_Set) {
              DAST._IType _6346___mcc_h1148 = _source232.dtor_element;
              {
                RAST._IType _6347_fromTpeGen;
                RAST._IType _out2654;
                _out2654 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6347_fromTpeGen = _out2654;
                RAST._IType _6348_toTpeGen;
                RAST._IType _out2655;
                _out2655 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6348_toTpeGen = _out2655;
                RAST._IExpr _6349_recursiveGen;
                DCOMP._IOwnership _6350_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6351_recIdents;
                RAST._IExpr _out2656;
                DCOMP._IOwnership _out2657;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2658;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2656, out _out2657, out _out2658);
                _6349_recursiveGen = _out2656;
                _6350_recOwned = _out2657;
                _6351_recIdents = _out2658;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6349_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6347_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6348_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2659;
                DCOMP._IOwnership _out2660;
                DCOMP.COMP.FromOwnership(r, _6350_recOwned, expectedOwnership, out _out2659, out _out2660);
                r = _out2659;
                resultingOwnership = _out2660;
                readIdents = _6351_recIdents;
              }
            } else if (_source232.is_Multiset) {
              DAST._IType _6352___mcc_h1150 = _source232.dtor_element;
              {
                RAST._IType _6353_fromTpeGen;
                RAST._IType _out2661;
                _out2661 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6353_fromTpeGen = _out2661;
                RAST._IType _6354_toTpeGen;
                RAST._IType _out2662;
                _out2662 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6354_toTpeGen = _out2662;
                RAST._IExpr _6355_recursiveGen;
                DCOMP._IOwnership _6356_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6357_recIdents;
                RAST._IExpr _out2663;
                DCOMP._IOwnership _out2664;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2665;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2663, out _out2664, out _out2665);
                _6355_recursiveGen = _out2663;
                _6356_recOwned = _out2664;
                _6357_recIdents = _out2665;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6355_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6353_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6354_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2666;
                DCOMP._IOwnership _out2667;
                DCOMP.COMP.FromOwnership(r, _6356_recOwned, expectedOwnership, out _out2666, out _out2667);
                r = _out2666;
                resultingOwnership = _out2667;
                readIdents = _6357_recIdents;
              }
            } else if (_source232.is_Map) {
              DAST._IType _6358___mcc_h1152 = _source232.dtor_key;
              DAST._IType _6359___mcc_h1153 = _source232.dtor_value;
              {
                RAST._IType _6360_fromTpeGen;
                RAST._IType _out2668;
                _out2668 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6360_fromTpeGen = _out2668;
                RAST._IType _6361_toTpeGen;
                RAST._IType _out2669;
                _out2669 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6361_toTpeGen = _out2669;
                RAST._IExpr _6362_recursiveGen;
                DCOMP._IOwnership _6363_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6364_recIdents;
                RAST._IExpr _out2670;
                DCOMP._IOwnership _out2671;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2672;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2670, out _out2671, out _out2672);
                _6362_recursiveGen = _out2670;
                _6363_recOwned = _out2671;
                _6364_recIdents = _out2672;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6362_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6360_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6361_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2673;
                DCOMP._IOwnership _out2674;
                DCOMP.COMP.FromOwnership(r, _6363_recOwned, expectedOwnership, out _out2673, out _out2674);
                r = _out2673;
                resultingOwnership = _out2674;
                readIdents = _6364_recIdents;
              }
            } else if (_source232.is_SetBuilder) {
              DAST._IType _6365___mcc_h1156 = _source232.dtor_element;
              {
                RAST._IType _6366_fromTpeGen;
                RAST._IType _out2675;
                _out2675 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6366_fromTpeGen = _out2675;
                RAST._IType _6367_toTpeGen;
                RAST._IType _out2676;
                _out2676 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6367_toTpeGen = _out2676;
                RAST._IExpr _6368_recursiveGen;
                DCOMP._IOwnership _6369_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6370_recIdents;
                RAST._IExpr _out2677;
                DCOMP._IOwnership _out2678;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2679;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2677, out _out2678, out _out2679);
                _6368_recursiveGen = _out2677;
                _6369_recOwned = _out2678;
                _6370_recIdents = _out2679;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6368_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6366_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6367_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2680;
                DCOMP._IOwnership _out2681;
                DCOMP.COMP.FromOwnership(r, _6369_recOwned, expectedOwnership, out _out2680, out _out2681);
                r = _out2680;
                resultingOwnership = _out2681;
                readIdents = _6370_recIdents;
              }
            } else if (_source232.is_MapBuilder) {
              DAST._IType _6371___mcc_h1158 = _source232.dtor_key;
              DAST._IType _6372___mcc_h1159 = _source232.dtor_value;
              {
                RAST._IType _6373_fromTpeGen;
                RAST._IType _out2682;
                _out2682 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6373_fromTpeGen = _out2682;
                RAST._IType _6374_toTpeGen;
                RAST._IType _out2683;
                _out2683 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6374_toTpeGen = _out2683;
                RAST._IExpr _6375_recursiveGen;
                DCOMP._IOwnership _6376_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6377_recIdents;
                RAST._IExpr _out2684;
                DCOMP._IOwnership _out2685;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2686;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2684, out _out2685, out _out2686);
                _6375_recursiveGen = _out2684;
                _6376_recOwned = _out2685;
                _6377_recIdents = _out2686;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6375_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6373_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6374_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2687;
                DCOMP._IOwnership _out2688;
                DCOMP.COMP.FromOwnership(r, _6376_recOwned, expectedOwnership, out _out2687, out _out2688);
                r = _out2687;
                resultingOwnership = _out2688;
                readIdents = _6377_recIdents;
              }
            } else if (_source232.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6378___mcc_h1162 = _source232.dtor_args;
              DAST._IType _6379___mcc_h1163 = _source232.dtor_result;
              {
                RAST._IType _6380_fromTpeGen;
                RAST._IType _out2689;
                _out2689 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6380_fromTpeGen = _out2689;
                RAST._IType _6381_toTpeGen;
                RAST._IType _out2690;
                _out2690 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6381_toTpeGen = _out2690;
                RAST._IExpr _6382_recursiveGen;
                DCOMP._IOwnership _6383_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6384_recIdents;
                RAST._IExpr _out2691;
                DCOMP._IOwnership _out2692;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2693;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2691, out _out2692, out _out2693);
                _6382_recursiveGen = _out2691;
                _6383_recOwned = _out2692;
                _6384_recIdents = _out2693;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6382_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6380_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6381_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2694;
                DCOMP._IOwnership _out2695;
                DCOMP.COMP.FromOwnership(r, _6383_recOwned, expectedOwnership, out _out2694, out _out2695);
                r = _out2694;
                resultingOwnership = _out2695;
                readIdents = _6384_recIdents;
              }
            } else if (_source232.is_Primitive) {
              DAST._IPrimitive _6385___mcc_h1166 = _source232.dtor_Primitive_a0;
              {
                RAST._IType _6386_fromTpeGen;
                RAST._IType _out2696;
                _out2696 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6386_fromTpeGen = _out2696;
                RAST._IType _6387_toTpeGen;
                RAST._IType _out2697;
                _out2697 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6387_toTpeGen = _out2697;
                RAST._IExpr _6388_recursiveGen;
                DCOMP._IOwnership _6389_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6390_recIdents;
                RAST._IExpr _out2698;
                DCOMP._IOwnership _out2699;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2700;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2698, out _out2699, out _out2700);
                _6388_recursiveGen = _out2698;
                _6389_recOwned = _out2699;
                _6390_recIdents = _out2700;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6388_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6386_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6387_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2701;
                DCOMP._IOwnership _out2702;
                DCOMP.COMP.FromOwnership(r, _6389_recOwned, expectedOwnership, out _out2701, out _out2702);
                r = _out2701;
                resultingOwnership = _out2702;
                readIdents = _6390_recIdents;
              }
            } else if (_source232.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6391___mcc_h1168 = _source232.dtor_Passthrough_a0;
              {
                RAST._IType _6392_fromTpeGen;
                RAST._IType _out2703;
                _out2703 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6392_fromTpeGen = _out2703;
                RAST._IType _6393_toTpeGen;
                RAST._IType _out2704;
                _out2704 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6393_toTpeGen = _out2704;
                RAST._IExpr _6394_recursiveGen;
                DCOMP._IOwnership _6395_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6396_recIdents;
                RAST._IExpr _out2705;
                DCOMP._IOwnership _out2706;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2707;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2705, out _out2706, out _out2707);
                _6394_recursiveGen = _out2705;
                _6395_recOwned = _out2706;
                _6396_recIdents = _out2707;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6394_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6392_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6393_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2708;
                DCOMP._IOwnership _out2709;
                DCOMP.COMP.FromOwnership(r, _6395_recOwned, expectedOwnership, out _out2708, out _out2709);
                r = _out2708;
                resultingOwnership = _out2709;
                readIdents = _6396_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6397___mcc_h1170 = _source232.dtor_TypeArg_a0;
              {
                RAST._IType _6398_fromTpeGen;
                RAST._IType _out2710;
                _out2710 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6398_fromTpeGen = _out2710;
                RAST._IType _6399_toTpeGen;
                RAST._IType _out2711;
                _out2711 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6399_toTpeGen = _out2711;
                RAST._IExpr _6400_recursiveGen;
                DCOMP._IOwnership _6401_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6402_recIdents;
                RAST._IExpr _out2712;
                DCOMP._IOwnership _out2713;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2714;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2712, out _out2713, out _out2714);
                _6400_recursiveGen = _out2712;
                _6401_recOwned = _out2713;
                _6402_recIdents = _out2714;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6400_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6398_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6399_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2715;
                DCOMP._IOwnership _out2716;
                DCOMP.COMP.FromOwnership(r, _6401_recOwned, expectedOwnership, out _out2715, out _out2716);
                r = _out2715;
                resultingOwnership = _out2716;
                readIdents = _6402_recIdents;
              }
            }
          } else {
            DAST._IType _source237 = _3476___mcc_h1;
            if (_source237.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6403___mcc_h1172 = _source237.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _6404___mcc_h1173 = _source237.dtor_typeArgs;
              DAST._IResolvedType _6405___mcc_h1174 = _source237.dtor_resolved;
              DAST._IResolvedType _source238 = _6405___mcc_h1174;
              if (_source238.is_AllocatedDatatype) {
                DAST._IDatatypeType _6406___mcc_h1178 = _source238.dtor_datatypeType;
                {
                  RAST._IType _6407_fromTpeGen;
                  RAST._IType _out2717;
                  _out2717 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6407_fromTpeGen = _out2717;
                  RAST._IType _6408_toTpeGen;
                  RAST._IType _out2718;
                  _out2718 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6408_toTpeGen = _out2718;
                  RAST._IExpr _6409_recursiveGen;
                  DCOMP._IOwnership _6410_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6411_recIdents;
                  RAST._IExpr _out2719;
                  DCOMP._IOwnership _out2720;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2721;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2719, out _out2720, out _out2721);
                  _6409_recursiveGen = _out2719;
                  _6410_recOwned = _out2720;
                  _6411_recIdents = _out2721;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6409_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6407_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6408_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2722;
                  DCOMP._IOwnership _out2723;
                  DCOMP.COMP.FromOwnership(r, _6410_recOwned, expectedOwnership, out _out2722, out _out2723);
                  r = _out2722;
                  resultingOwnership = _out2723;
                  readIdents = _6411_recIdents;
                }
              } else if (_source238.is_Datatype) {
                DAST._IDatatypeType _6412___mcc_h1180 = _source238.dtor_datatypeType;
                {
                  RAST._IType _6413_fromTpeGen;
                  RAST._IType _out2724;
                  _out2724 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6413_fromTpeGen = _out2724;
                  RAST._IType _6414_toTpeGen;
                  RAST._IType _out2725;
                  _out2725 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6414_toTpeGen = _out2725;
                  RAST._IExpr _6415_recursiveGen;
                  DCOMP._IOwnership _6416_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6417_recIdents;
                  RAST._IExpr _out2726;
                  DCOMP._IOwnership _out2727;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2728;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2726, out _out2727, out _out2728);
                  _6415_recursiveGen = _out2726;
                  _6416_recOwned = _out2727;
                  _6417_recIdents = _out2728;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6415_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6413_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6414_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2729;
                  DCOMP._IOwnership _out2730;
                  DCOMP.COMP.FromOwnership(r, _6416_recOwned, expectedOwnership, out _out2729, out _out2730);
                  r = _out2729;
                  resultingOwnership = _out2730;
                  readIdents = _6417_recIdents;
                }
              } else if (_source238.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6418___mcc_h1182 = _source238.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _6419___mcc_h1183 = _source238.dtor_attributes;
                {
                  RAST._IType _6420_fromTpeGen;
                  RAST._IType _out2731;
                  _out2731 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6420_fromTpeGen = _out2731;
                  RAST._IType _6421_toTpeGen;
                  RAST._IType _out2732;
                  _out2732 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6421_toTpeGen = _out2732;
                  RAST._IExpr _6422_recursiveGen;
                  DCOMP._IOwnership _6423_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6424_recIdents;
                  RAST._IExpr _out2733;
                  DCOMP._IOwnership _out2734;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2735;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2733, out _out2734, out _out2735);
                  _6422_recursiveGen = _out2733;
                  _6423_recOwned = _out2734;
                  _6424_recIdents = _out2735;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6422_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6420_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6421_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2736;
                  DCOMP._IOwnership _out2737;
                  DCOMP.COMP.FromOwnership(r, _6423_recOwned, expectedOwnership, out _out2736, out _out2737);
                  r = _out2736;
                  resultingOwnership = _out2737;
                  readIdents = _6424_recIdents;
                }
              } else {
                DAST._IType _6425___mcc_h1186 = _source238.dtor_baseType;
                DAST._INewtypeRange _6426___mcc_h1187 = _source238.dtor_range;
                bool _6427___mcc_h1188 = _source238.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _6428___mcc_h1189 = _source238.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _6429_attributes = _6428___mcc_h1189;
                bool _6430_erase = _6427___mcc_h1188;
                DAST._INewtypeRange _6431_range = _6426___mcc_h1187;
                DAST._IType _6432_b = _6425___mcc_h1186;
                {
                  Std.Wrappers._IOption<RAST._IType> _6433_nativeToType;
                  _6433_nativeToType = DCOMP.COMP.NewtypeToRustType(_6432_b, _6431_range);
                  if (object.Equals(_3470_fromTpe, _6432_b)) {
                    RAST._IExpr _6434_recursiveGen;
                    DCOMP._IOwnership _6435_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6436_recIdents;
                    RAST._IExpr _out2738;
                    DCOMP._IOwnership _out2739;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2740;
                    DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2738, out _out2739, out _out2740);
                    _6434_recursiveGen = _out2738;
                    _6435_recOwned = _out2739;
                    _6436_recIdents = _out2740;
                    readIdents = _6436_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source239 = _6433_nativeToType;
                    if (_source239.is_None) {
                      if (_6430_erase) {
                        r = _6434_recursiveGen;
                      } else {
                        RAST._IType _6437_rhsType;
                        RAST._IType _out2741;
                        _out2741 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                        _6437_rhsType = _out2741;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6437_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6434_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out2742;
                      DCOMP._IOwnership _out2743;
                      DCOMP.COMP.FromOwnership(r, _6435_recOwned, expectedOwnership, out _out2742, out _out2743);
                      r = _out2742;
                      resultingOwnership = _out2743;
                    } else {
                      RAST._IType _6438___mcc_h2332 = _source239.dtor_value;
                      RAST._IType _6439_v = _6438___mcc_h2332;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6434_recursiveGen, RAST.Expr.create_ExprFromType(_6439_v)));
                      RAST._IExpr _out2744;
                      DCOMP._IOwnership _out2745;
                      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2744, out _out2745);
                      r = _out2744;
                      resultingOwnership = _out2745;
                    }
                  } else {
                    if ((_6433_nativeToType).is_Some) {
                      DAST._IType _source240 = _3470_fromTpe;
                      if (_source240.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6440___mcc_h2333 = _source240.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _6441___mcc_h2334 = _source240.dtor_typeArgs;
                        DAST._IResolvedType _6442___mcc_h2335 = _source240.dtor_resolved;
                        DAST._IResolvedType _source241 = _6442___mcc_h2335;
                        if (_source241.is_AllocatedDatatype) {
                          DAST._IDatatypeType _6443___mcc_h2339 = _source241.dtor_datatypeType;
                        } else if (_source241.is_Datatype) {
                          DAST._IDatatypeType _6444___mcc_h2341 = _source241.dtor_datatypeType;
                        } else if (_source241.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6445___mcc_h2343 = _source241.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _6446___mcc_h2344 = _source241.dtor_attributes;
                        } else {
                          DAST._IType _6447___mcc_h2347 = _source241.dtor_baseType;
                          DAST._INewtypeRange _6448___mcc_h2348 = _source241.dtor_range;
                          bool _6449___mcc_h2349 = _source241.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _6450___mcc_h2350 = _source241.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _6451_attributes0 = _6450___mcc_h2350;
                          bool _6452_erase0 = _6449___mcc_h2349;
                          DAST._INewtypeRange _6453_range0 = _6448___mcc_h2348;
                          DAST._IType _6454_b0 = _6447___mcc_h2347;
                          {
                            Std.Wrappers._IOption<RAST._IType> _6455_nativeFromType;
                            _6455_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6454_b0, _6453_range0);
                            if ((_6455_nativeFromType).is_Some) {
                              RAST._IExpr _6456_recursiveGen;
                              DCOMP._IOwnership _6457_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6458_recIdents;
                              RAST._IExpr _out2746;
                              DCOMP._IOwnership _out2747;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2748;
                              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2746, out _out2747, out _out2748);
                              _6456_recursiveGen = _out2746;
                              _6457_recOwned = _out2747;
                              _6458_recIdents = _out2748;
                              RAST._IExpr _out2749;
                              DCOMP._IOwnership _out2750;
                              DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6456_recursiveGen, (_6433_nativeToType).dtor_value), _6457_recOwned, expectedOwnership, out _out2749, out _out2750);
                              r = _out2749;
                              resultingOwnership = _out2750;
                              readIdents = _6458_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source240.is_Nullable) {
                        DAST._IType _6459___mcc_h2355 = _source240.dtor_Nullable_a0;
                      } else if (_source240.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _6460___mcc_h2357 = _source240.dtor_Tuple_a0;
                      } else if (_source240.is_Array) {
                        DAST._IType _6461___mcc_h2359 = _source240.dtor_element;
                        BigInteger _6462___mcc_h2360 = _source240.dtor_dims;
                      } else if (_source240.is_Seq) {
                        DAST._IType _6463___mcc_h2363 = _source240.dtor_element;
                      } else if (_source240.is_Set) {
                        DAST._IType _6464___mcc_h2365 = _source240.dtor_element;
                      } else if (_source240.is_Multiset) {
                        DAST._IType _6465___mcc_h2367 = _source240.dtor_element;
                      } else if (_source240.is_Map) {
                        DAST._IType _6466___mcc_h2369 = _source240.dtor_key;
                        DAST._IType _6467___mcc_h2370 = _source240.dtor_value;
                      } else if (_source240.is_SetBuilder) {
                        DAST._IType _6468___mcc_h2373 = _source240.dtor_element;
                      } else if (_source240.is_MapBuilder) {
                        DAST._IType _6469___mcc_h2375 = _source240.dtor_key;
                        DAST._IType _6470___mcc_h2376 = _source240.dtor_value;
                      } else if (_source240.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _6471___mcc_h2379 = _source240.dtor_args;
                        DAST._IType _6472___mcc_h2380 = _source240.dtor_result;
                      } else if (_source240.is_Primitive) {
                        DAST._IPrimitive _6473___mcc_h2383 = _source240.dtor_Primitive_a0;
                      } else if (_source240.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _6474___mcc_h2385 = _source240.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _6475___mcc_h2387 = _source240.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _6476_recursiveGen;
                        DCOMP._IOwnership _6477_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6478_recIdents;
                        RAST._IExpr _out2751;
                        DCOMP._IOwnership _out2752;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2753;
                        DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2751, out _out2752, out _out2753);
                        _6476_recursiveGen = _out2751;
                        _6477_recOwned = _out2752;
                        _6478_recIdents = _out2753;
                        RAST._IExpr _out2754;
                        DCOMP._IOwnership _out2755;
                        DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6476_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6433_nativeToType).dtor_value), _6477_recOwned, expectedOwnership, out _out2754, out _out2755);
                        r = _out2754;
                        resultingOwnership = _out2755;
                        readIdents = _6478_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out2756;
                    DCOMP._IOwnership _out2757;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2758;
                    DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _6432_b), _6432_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out2756, out _out2757, out _out2758);
                    r = _out2756;
                    resultingOwnership = _out2757;
                    readIdents = _out2758;
                  }
                }
              }
            } else if (_source237.is_Nullable) {
              DAST._IType _6479___mcc_h1194 = _source237.dtor_Nullable_a0;
              {
                RAST._IExpr _6480_recursiveGen;
                DCOMP._IOwnership _6481_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6482_recIdents;
                RAST._IExpr _out2759;
                DCOMP._IOwnership _out2760;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2761;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2759, out _out2760, out _out2761);
                _6480_recursiveGen = _out2759;
                _6481_recOwned = _out2760;
                _6482_recIdents = _out2761;
                r = _6480_recursiveGen;
                if (object.Equals(_6481_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out2762;
                DCOMP._IOwnership _out2763;
                DCOMP.COMP.FromOwnership(r, _6481_recOwned, expectedOwnership, out _out2762, out _out2763);
                r = _out2762;
                resultingOwnership = _out2763;
                readIdents = _6482_recIdents;
              }
            } else if (_source237.is_Tuple) {
              Dafny.ISequence<DAST._IType> _6483___mcc_h1196 = _source237.dtor_Tuple_a0;
              {
                RAST._IType _6484_fromTpeGen;
                RAST._IType _out2764;
                _out2764 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6484_fromTpeGen = _out2764;
                RAST._IType _6485_toTpeGen;
                RAST._IType _out2765;
                _out2765 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6485_toTpeGen = _out2765;
                RAST._IExpr _6486_recursiveGen;
                DCOMP._IOwnership _6487_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6488_recIdents;
                RAST._IExpr _out2766;
                DCOMP._IOwnership _out2767;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2768;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2766, out _out2767, out _out2768);
                _6486_recursiveGen = _out2766;
                _6487_recOwned = _out2767;
                _6488_recIdents = _out2768;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6486_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6484_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6485_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2769;
                DCOMP._IOwnership _out2770;
                DCOMP.COMP.FromOwnership(r, _6487_recOwned, expectedOwnership, out _out2769, out _out2770);
                r = _out2769;
                resultingOwnership = _out2770;
                readIdents = _6488_recIdents;
              }
            } else if (_source237.is_Array) {
              DAST._IType _6489___mcc_h1198 = _source237.dtor_element;
              BigInteger _6490___mcc_h1199 = _source237.dtor_dims;
              {
                RAST._IType _6491_fromTpeGen;
                RAST._IType _out2771;
                _out2771 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6491_fromTpeGen = _out2771;
                RAST._IType _6492_toTpeGen;
                RAST._IType _out2772;
                _out2772 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6492_toTpeGen = _out2772;
                RAST._IExpr _6493_recursiveGen;
                DCOMP._IOwnership _6494_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6495_recIdents;
                RAST._IExpr _out2773;
                DCOMP._IOwnership _out2774;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2775;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2773, out _out2774, out _out2775);
                _6493_recursiveGen = _out2773;
                _6494_recOwned = _out2774;
                _6495_recIdents = _out2775;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6493_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6491_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6492_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2776;
                DCOMP._IOwnership _out2777;
                DCOMP.COMP.FromOwnership(r, _6494_recOwned, expectedOwnership, out _out2776, out _out2777);
                r = _out2776;
                resultingOwnership = _out2777;
                readIdents = _6495_recIdents;
              }
            } else if (_source237.is_Seq) {
              DAST._IType _6496___mcc_h1202 = _source237.dtor_element;
              {
                RAST._IType _6497_fromTpeGen;
                RAST._IType _out2778;
                _out2778 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6497_fromTpeGen = _out2778;
                RAST._IType _6498_toTpeGen;
                RAST._IType _out2779;
                _out2779 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6498_toTpeGen = _out2779;
                RAST._IExpr _6499_recursiveGen;
                DCOMP._IOwnership _6500_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6501_recIdents;
                RAST._IExpr _out2780;
                DCOMP._IOwnership _out2781;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2782;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2780, out _out2781, out _out2782);
                _6499_recursiveGen = _out2780;
                _6500_recOwned = _out2781;
                _6501_recIdents = _out2782;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6499_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6497_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6498_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2783;
                DCOMP._IOwnership _out2784;
                DCOMP.COMP.FromOwnership(r, _6500_recOwned, expectedOwnership, out _out2783, out _out2784);
                r = _out2783;
                resultingOwnership = _out2784;
                readIdents = _6501_recIdents;
              }
            } else if (_source237.is_Set) {
              DAST._IType _6502___mcc_h1204 = _source237.dtor_element;
              {
                RAST._IType _6503_fromTpeGen;
                RAST._IType _out2785;
                _out2785 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6503_fromTpeGen = _out2785;
                RAST._IType _6504_toTpeGen;
                RAST._IType _out2786;
                _out2786 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6504_toTpeGen = _out2786;
                RAST._IExpr _6505_recursiveGen;
                DCOMP._IOwnership _6506_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6507_recIdents;
                RAST._IExpr _out2787;
                DCOMP._IOwnership _out2788;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2789;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2787, out _out2788, out _out2789);
                _6505_recursiveGen = _out2787;
                _6506_recOwned = _out2788;
                _6507_recIdents = _out2789;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6505_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6503_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6504_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2790;
                DCOMP._IOwnership _out2791;
                DCOMP.COMP.FromOwnership(r, _6506_recOwned, expectedOwnership, out _out2790, out _out2791);
                r = _out2790;
                resultingOwnership = _out2791;
                readIdents = _6507_recIdents;
              }
            } else if (_source237.is_Multiset) {
              DAST._IType _6508___mcc_h1206 = _source237.dtor_element;
              {
                RAST._IType _6509_fromTpeGen;
                RAST._IType _out2792;
                _out2792 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6509_fromTpeGen = _out2792;
                RAST._IType _6510_toTpeGen;
                RAST._IType _out2793;
                _out2793 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6510_toTpeGen = _out2793;
                RAST._IExpr _6511_recursiveGen;
                DCOMP._IOwnership _6512_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6513_recIdents;
                RAST._IExpr _out2794;
                DCOMP._IOwnership _out2795;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2796;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2794, out _out2795, out _out2796);
                _6511_recursiveGen = _out2794;
                _6512_recOwned = _out2795;
                _6513_recIdents = _out2796;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6511_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6509_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6510_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2797;
                DCOMP._IOwnership _out2798;
                DCOMP.COMP.FromOwnership(r, _6512_recOwned, expectedOwnership, out _out2797, out _out2798);
                r = _out2797;
                resultingOwnership = _out2798;
                readIdents = _6513_recIdents;
              }
            } else if (_source237.is_Map) {
              DAST._IType _6514___mcc_h1208 = _source237.dtor_key;
              DAST._IType _6515___mcc_h1209 = _source237.dtor_value;
              {
                RAST._IType _6516_fromTpeGen;
                RAST._IType _out2799;
                _out2799 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6516_fromTpeGen = _out2799;
                RAST._IType _6517_toTpeGen;
                RAST._IType _out2800;
                _out2800 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6517_toTpeGen = _out2800;
                RAST._IExpr _6518_recursiveGen;
                DCOMP._IOwnership _6519_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6520_recIdents;
                RAST._IExpr _out2801;
                DCOMP._IOwnership _out2802;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2803;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2801, out _out2802, out _out2803);
                _6518_recursiveGen = _out2801;
                _6519_recOwned = _out2802;
                _6520_recIdents = _out2803;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6518_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6516_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6517_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2804;
                DCOMP._IOwnership _out2805;
                DCOMP.COMP.FromOwnership(r, _6519_recOwned, expectedOwnership, out _out2804, out _out2805);
                r = _out2804;
                resultingOwnership = _out2805;
                readIdents = _6520_recIdents;
              }
            } else if (_source237.is_SetBuilder) {
              DAST._IType _6521___mcc_h1212 = _source237.dtor_element;
              {
                RAST._IType _6522_fromTpeGen;
                RAST._IType _out2806;
                _out2806 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6522_fromTpeGen = _out2806;
                RAST._IType _6523_toTpeGen;
                RAST._IType _out2807;
                _out2807 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6523_toTpeGen = _out2807;
                RAST._IExpr _6524_recursiveGen;
                DCOMP._IOwnership _6525_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6526_recIdents;
                RAST._IExpr _out2808;
                DCOMP._IOwnership _out2809;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2810;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2808, out _out2809, out _out2810);
                _6524_recursiveGen = _out2808;
                _6525_recOwned = _out2809;
                _6526_recIdents = _out2810;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6524_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6522_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6523_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2811;
                DCOMP._IOwnership _out2812;
                DCOMP.COMP.FromOwnership(r, _6525_recOwned, expectedOwnership, out _out2811, out _out2812);
                r = _out2811;
                resultingOwnership = _out2812;
                readIdents = _6526_recIdents;
              }
            } else if (_source237.is_MapBuilder) {
              DAST._IType _6527___mcc_h1214 = _source237.dtor_key;
              DAST._IType _6528___mcc_h1215 = _source237.dtor_value;
              {
                RAST._IType _6529_fromTpeGen;
                RAST._IType _out2813;
                _out2813 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6529_fromTpeGen = _out2813;
                RAST._IType _6530_toTpeGen;
                RAST._IType _out2814;
                _out2814 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6530_toTpeGen = _out2814;
                RAST._IExpr _6531_recursiveGen;
                DCOMP._IOwnership _6532_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6533_recIdents;
                RAST._IExpr _out2815;
                DCOMP._IOwnership _out2816;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2817;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2815, out _out2816, out _out2817);
                _6531_recursiveGen = _out2815;
                _6532_recOwned = _out2816;
                _6533_recIdents = _out2817;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6531_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6529_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6530_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2818;
                DCOMP._IOwnership _out2819;
                DCOMP.COMP.FromOwnership(r, _6532_recOwned, expectedOwnership, out _out2818, out _out2819);
                r = _out2818;
                resultingOwnership = _out2819;
                readIdents = _6533_recIdents;
              }
            } else if (_source237.is_Arrow) {
              Dafny.ISequence<DAST._IType> _6534___mcc_h1218 = _source237.dtor_args;
              DAST._IType _6535___mcc_h1219 = _source237.dtor_result;
              {
                RAST._IType _6536_fromTpeGen;
                RAST._IType _out2820;
                _out2820 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6536_fromTpeGen = _out2820;
                RAST._IType _6537_toTpeGen;
                RAST._IType _out2821;
                _out2821 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6537_toTpeGen = _out2821;
                RAST._IExpr _6538_recursiveGen;
                DCOMP._IOwnership _6539_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6540_recIdents;
                RAST._IExpr _out2822;
                DCOMP._IOwnership _out2823;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2824;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2822, out _out2823, out _out2824);
                _6538_recursiveGen = _out2822;
                _6539_recOwned = _out2823;
                _6540_recIdents = _out2824;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6538_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6536_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6537_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2825;
                DCOMP._IOwnership _out2826;
                DCOMP.COMP.FromOwnership(r, _6539_recOwned, expectedOwnership, out _out2825, out _out2826);
                r = _out2825;
                resultingOwnership = _out2826;
                readIdents = _6540_recIdents;
              }
            } else if (_source237.is_Primitive) {
              DAST._IPrimitive _6541___mcc_h1222 = _source237.dtor_Primitive_a0;
              DAST._IPrimitive _source242 = _6541___mcc_h1222;
              if (_source242.is_Int) {
                {
                  RAST._IType _6542_rhsType;
                  RAST._IType _out2827;
                  _out2827 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6542_rhsType = _out2827;
                  RAST._IExpr _6543_recursiveGen;
                  DCOMP._IOwnership _6544___v100;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6545_recIdents;
                  RAST._IExpr _out2828;
                  DCOMP._IOwnership _out2829;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2830;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2828, out _out2829, out _out2830);
                  _6543_recursiveGen = _out2828;
                  _6544___v100 = _out2829;
                  _6545_recIdents = _out2830;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6543_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out2831;
                  DCOMP._IOwnership _out2832;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2831, out _out2832);
                  r = _out2831;
                  resultingOwnership = _out2832;
                  readIdents = _6545_recIdents;
                }
              } else if (_source242.is_Real) {
                {
                  RAST._IType _6546_fromTpeGen;
                  RAST._IType _out2833;
                  _out2833 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6546_fromTpeGen = _out2833;
                  RAST._IType _6547_toTpeGen;
                  RAST._IType _out2834;
                  _out2834 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6547_toTpeGen = _out2834;
                  RAST._IExpr _6548_recursiveGen;
                  DCOMP._IOwnership _6549_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6550_recIdents;
                  RAST._IExpr _out2835;
                  DCOMP._IOwnership _out2836;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2837;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2835, out _out2836, out _out2837);
                  _6548_recursiveGen = _out2835;
                  _6549_recOwned = _out2836;
                  _6550_recIdents = _out2837;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6548_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6546_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6547_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2838;
                  DCOMP._IOwnership _out2839;
                  DCOMP.COMP.FromOwnership(r, _6549_recOwned, expectedOwnership, out _out2838, out _out2839);
                  r = _out2838;
                  resultingOwnership = _out2839;
                  readIdents = _6550_recIdents;
                }
              } else if (_source242.is_String) {
                {
                  RAST._IType _6551_fromTpeGen;
                  RAST._IType _out2840;
                  _out2840 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6551_fromTpeGen = _out2840;
                  RAST._IType _6552_toTpeGen;
                  RAST._IType _out2841;
                  _out2841 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6552_toTpeGen = _out2841;
                  RAST._IExpr _6553_recursiveGen;
                  DCOMP._IOwnership _6554_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6555_recIdents;
                  RAST._IExpr _out2842;
                  DCOMP._IOwnership _out2843;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2844;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2842, out _out2843, out _out2844);
                  _6553_recursiveGen = _out2842;
                  _6554_recOwned = _out2843;
                  _6555_recIdents = _out2844;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6553_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6551_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6552_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2845;
                  DCOMP._IOwnership _out2846;
                  DCOMP.COMP.FromOwnership(r, _6554_recOwned, expectedOwnership, out _out2845, out _out2846);
                  r = _out2845;
                  resultingOwnership = _out2846;
                  readIdents = _6555_recIdents;
                }
              } else if (_source242.is_Bool) {
                {
                  RAST._IType _6556_fromTpeGen;
                  RAST._IType _out2847;
                  _out2847 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6556_fromTpeGen = _out2847;
                  RAST._IType _6557_toTpeGen;
                  RAST._IType _out2848;
                  _out2848 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6557_toTpeGen = _out2848;
                  RAST._IExpr _6558_recursiveGen;
                  DCOMP._IOwnership _6559_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6560_recIdents;
                  RAST._IExpr _out2849;
                  DCOMP._IOwnership _out2850;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2851;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2849, out _out2850, out _out2851);
                  _6558_recursiveGen = _out2849;
                  _6559_recOwned = _out2850;
                  _6560_recIdents = _out2851;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6558_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6556_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6557_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2852;
                  DCOMP._IOwnership _out2853;
                  DCOMP.COMP.FromOwnership(r, _6559_recOwned, expectedOwnership, out _out2852, out _out2853);
                  r = _out2852;
                  resultingOwnership = _out2853;
                  readIdents = _6560_recIdents;
                }
              } else {
                {
                  RAST._IType _6561_fromTpeGen;
                  RAST._IType _out2854;
                  _out2854 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                  _6561_fromTpeGen = _out2854;
                  RAST._IType _6562_toTpeGen;
                  RAST._IType _out2855;
                  _out2855 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                  _6562_toTpeGen = _out2855;
                  RAST._IExpr _6563_recursiveGen;
                  DCOMP._IOwnership _6564_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6565_recIdents;
                  RAST._IExpr _out2856;
                  DCOMP._IOwnership _out2857;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2858;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2856, out _out2857, out _out2858);
                  _6563_recursiveGen = _out2856;
                  _6564_recOwned = _out2857;
                  _6565_recIdents = _out2858;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6563_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6561_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6562_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out2859;
                  DCOMP._IOwnership _out2860;
                  DCOMP.COMP.FromOwnership(r, _6564_recOwned, expectedOwnership, out _out2859, out _out2860);
                  r = _out2859;
                  resultingOwnership = _out2860;
                  readIdents = _6565_recIdents;
                }
              }
            } else if (_source237.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _6566___mcc_h1224 = _source237.dtor_Passthrough_a0;
              {
                RAST._IType _6567_fromTpeGen;
                RAST._IType _out2861;
                _out2861 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6567_fromTpeGen = _out2861;
                RAST._IType _6568_toTpeGen;
                RAST._IType _out2862;
                _out2862 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6568_toTpeGen = _out2862;
                RAST._IExpr _6569_recursiveGen;
                DCOMP._IOwnership _6570_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6571_recIdents;
                RAST._IExpr _out2863;
                DCOMP._IOwnership _out2864;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2865;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2863, out _out2864, out _out2865);
                _6569_recursiveGen = _out2863;
                _6570_recOwned = _out2864;
                _6571_recIdents = _out2865;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6569_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6567_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6568_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2866;
                DCOMP._IOwnership _out2867;
                DCOMP.COMP.FromOwnership(r, _6570_recOwned, expectedOwnership, out _out2866, out _out2867);
                r = _out2866;
                resultingOwnership = _out2867;
                readIdents = _6571_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _6572___mcc_h1226 = _source237.dtor_TypeArg_a0;
              {
                RAST._IType _6573_fromTpeGen;
                RAST._IType _out2868;
                _out2868 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6573_fromTpeGen = _out2868;
                RAST._IType _6574_toTpeGen;
                RAST._IType _out2869;
                _out2869 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6574_toTpeGen = _out2869;
                RAST._IExpr _6575_recursiveGen;
                DCOMP._IOwnership _6576_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6577_recIdents;
                RAST._IExpr _out2870;
                DCOMP._IOwnership _out2871;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2872;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2870, out _out2871, out _out2872);
                _6575_recursiveGen = _out2870;
                _6576_recOwned = _out2871;
                _6577_recIdents = _out2872;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6575_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6573_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6574_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2873;
                DCOMP._IOwnership _out2874;
                DCOMP.COMP.FromOwnership(r, _6576_recOwned, expectedOwnership, out _out2873, out _out2874);
                r = _out2873;
                resultingOwnership = _out2874;
                readIdents = _6577_recIdents;
              }
            }
          }
        } else if (_source130.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _6578___mcc_h1228 = _source130.dtor_Passthrough_a0;
          DAST._IType _source243 = _3476___mcc_h1;
          if (_source243.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6579___mcc_h1232 = _source243.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _6580___mcc_h1233 = _source243.dtor_typeArgs;
            DAST._IResolvedType _6581___mcc_h1234 = _source243.dtor_resolved;
            DAST._IResolvedType _source244 = _6581___mcc_h1234;
            if (_source244.is_AllocatedDatatype) {
              DAST._IDatatypeType _6582___mcc_h1238 = _source244.dtor_datatypeType;
              {
                RAST._IType _6583_fromTpeGen;
                RAST._IType _out2875;
                _out2875 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6583_fromTpeGen = _out2875;
                RAST._IType _6584_toTpeGen;
                RAST._IType _out2876;
                _out2876 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6584_toTpeGen = _out2876;
                RAST._IExpr _6585_recursiveGen;
                DCOMP._IOwnership _6586_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6587_recIdents;
                RAST._IExpr _out2877;
                DCOMP._IOwnership _out2878;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2879;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2877, out _out2878, out _out2879);
                _6585_recursiveGen = _out2877;
                _6586_recOwned = _out2878;
                _6587_recIdents = _out2879;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6585_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6583_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6584_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2880;
                DCOMP._IOwnership _out2881;
                DCOMP.COMP.FromOwnership(r, _6586_recOwned, expectedOwnership, out _out2880, out _out2881);
                r = _out2880;
                resultingOwnership = _out2881;
                readIdents = _6587_recIdents;
              }
            } else if (_source244.is_Datatype) {
              DAST._IDatatypeType _6588___mcc_h1240 = _source244.dtor_datatypeType;
              {
                RAST._IType _6589_fromTpeGen;
                RAST._IType _out2882;
                _out2882 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6589_fromTpeGen = _out2882;
                RAST._IType _6590_toTpeGen;
                RAST._IType _out2883;
                _out2883 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6590_toTpeGen = _out2883;
                RAST._IExpr _6591_recursiveGen;
                DCOMP._IOwnership _6592_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6593_recIdents;
                RAST._IExpr _out2884;
                DCOMP._IOwnership _out2885;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2886;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2884, out _out2885, out _out2886);
                _6591_recursiveGen = _out2884;
                _6592_recOwned = _out2885;
                _6593_recIdents = _out2886;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6591_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6589_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6590_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2887;
                DCOMP._IOwnership _out2888;
                DCOMP.COMP.FromOwnership(r, _6592_recOwned, expectedOwnership, out _out2887, out _out2888);
                r = _out2887;
                resultingOwnership = _out2888;
                readIdents = _6593_recIdents;
              }
            } else if (_source244.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6594___mcc_h1242 = _source244.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _6595___mcc_h1243 = _source244.dtor_attributes;
              {
                RAST._IType _6596_fromTpeGen;
                RAST._IType _out2889;
                _out2889 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6596_fromTpeGen = _out2889;
                RAST._IType _6597_toTpeGen;
                RAST._IType _out2890;
                _out2890 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6597_toTpeGen = _out2890;
                RAST._IExpr _6598_recursiveGen;
                DCOMP._IOwnership _6599_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6600_recIdents;
                RAST._IExpr _out2891;
                DCOMP._IOwnership _out2892;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2893;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2891, out _out2892, out _out2893);
                _6598_recursiveGen = _out2891;
                _6599_recOwned = _out2892;
                _6600_recIdents = _out2893;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6598_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6596_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6597_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2894;
                DCOMP._IOwnership _out2895;
                DCOMP.COMP.FromOwnership(r, _6599_recOwned, expectedOwnership, out _out2894, out _out2895);
                r = _out2894;
                resultingOwnership = _out2895;
                readIdents = _6600_recIdents;
              }
            } else {
              DAST._IType _6601___mcc_h1246 = _source244.dtor_baseType;
              DAST._INewtypeRange _6602___mcc_h1247 = _source244.dtor_range;
              bool _6603___mcc_h1248 = _source244.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _6604___mcc_h1249 = _source244.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _6605_attributes = _6604___mcc_h1249;
              bool _6606_erase = _6603___mcc_h1248;
              DAST._INewtypeRange _6607_range = _6602___mcc_h1247;
              DAST._IType _6608_b = _6601___mcc_h1246;
              {
                Std.Wrappers._IOption<RAST._IType> _6609_nativeToType;
                _6609_nativeToType = DCOMP.COMP.NewtypeToRustType(_6608_b, _6607_range);
                if (object.Equals(_3470_fromTpe, _6608_b)) {
                  RAST._IExpr _6610_recursiveGen;
                  DCOMP._IOwnership _6611_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6612_recIdents;
                  RAST._IExpr _out2896;
                  DCOMP._IOwnership _out2897;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2898;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2896, out _out2897, out _out2898);
                  _6610_recursiveGen = _out2896;
                  _6611_recOwned = _out2897;
                  _6612_recIdents = _out2898;
                  readIdents = _6612_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source245 = _6609_nativeToType;
                  if (_source245.is_None) {
                    if (_6606_erase) {
                      r = _6610_recursiveGen;
                    } else {
                      RAST._IType _6613_rhsType;
                      RAST._IType _out2899;
                      _out2899 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _6613_rhsType = _out2899;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6613_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6610_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out2900;
                    DCOMP._IOwnership _out2901;
                    DCOMP.COMP.FromOwnership(r, _6611_recOwned, expectedOwnership, out _out2900, out _out2901);
                    r = _out2900;
                    resultingOwnership = _out2901;
                  } else {
                    RAST._IType _6614___mcc_h2389 = _source245.dtor_value;
                    RAST._IType _6615_v = _6614___mcc_h2389;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6610_recursiveGen, RAST.Expr.create_ExprFromType(_6615_v)));
                    RAST._IExpr _out2902;
                    DCOMP._IOwnership _out2903;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2902, out _out2903);
                    r = _out2902;
                    resultingOwnership = _out2903;
                  }
                } else {
                  if ((_6609_nativeToType).is_Some) {
                    DAST._IType _source246 = _3470_fromTpe;
                    if (_source246.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6616___mcc_h2390 = _source246.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _6617___mcc_h2391 = _source246.dtor_typeArgs;
                      DAST._IResolvedType _6618___mcc_h2392 = _source246.dtor_resolved;
                      DAST._IResolvedType _source247 = _6618___mcc_h2392;
                      if (_source247.is_AllocatedDatatype) {
                        DAST._IDatatypeType _6619___mcc_h2396 = _source247.dtor_datatypeType;
                      } else if (_source247.is_Datatype) {
                        DAST._IDatatypeType _6620___mcc_h2398 = _source247.dtor_datatypeType;
                      } else if (_source247.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6621___mcc_h2400 = _source247.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _6622___mcc_h2401 = _source247.dtor_attributes;
                      } else {
                        DAST._IType _6623___mcc_h2404 = _source247.dtor_baseType;
                        DAST._INewtypeRange _6624___mcc_h2405 = _source247.dtor_range;
                        bool _6625___mcc_h2406 = _source247.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _6626___mcc_h2407 = _source247.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _6627_attributes0 = _6626___mcc_h2407;
                        bool _6628_erase0 = _6625___mcc_h2406;
                        DAST._INewtypeRange _6629_range0 = _6624___mcc_h2405;
                        DAST._IType _6630_b0 = _6623___mcc_h2404;
                        {
                          Std.Wrappers._IOption<RAST._IType> _6631_nativeFromType;
                          _6631_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6630_b0, _6629_range0);
                          if ((_6631_nativeFromType).is_Some) {
                            RAST._IExpr _6632_recursiveGen;
                            DCOMP._IOwnership _6633_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6634_recIdents;
                            RAST._IExpr _out2904;
                            DCOMP._IOwnership _out2905;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2906;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2904, out _out2905, out _out2906);
                            _6632_recursiveGen = _out2904;
                            _6633_recOwned = _out2905;
                            _6634_recIdents = _out2906;
                            RAST._IExpr _out2907;
                            DCOMP._IOwnership _out2908;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6632_recursiveGen, (_6609_nativeToType).dtor_value), _6633_recOwned, expectedOwnership, out _out2907, out _out2908);
                            r = _out2907;
                            resultingOwnership = _out2908;
                            readIdents = _6634_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source246.is_Nullable) {
                      DAST._IType _6635___mcc_h2412 = _source246.dtor_Nullable_a0;
                    } else if (_source246.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _6636___mcc_h2414 = _source246.dtor_Tuple_a0;
                    } else if (_source246.is_Array) {
                      DAST._IType _6637___mcc_h2416 = _source246.dtor_element;
                      BigInteger _6638___mcc_h2417 = _source246.dtor_dims;
                    } else if (_source246.is_Seq) {
                      DAST._IType _6639___mcc_h2420 = _source246.dtor_element;
                    } else if (_source246.is_Set) {
                      DAST._IType _6640___mcc_h2422 = _source246.dtor_element;
                    } else if (_source246.is_Multiset) {
                      DAST._IType _6641___mcc_h2424 = _source246.dtor_element;
                    } else if (_source246.is_Map) {
                      DAST._IType _6642___mcc_h2426 = _source246.dtor_key;
                      DAST._IType _6643___mcc_h2427 = _source246.dtor_value;
                    } else if (_source246.is_SetBuilder) {
                      DAST._IType _6644___mcc_h2430 = _source246.dtor_element;
                    } else if (_source246.is_MapBuilder) {
                      DAST._IType _6645___mcc_h2432 = _source246.dtor_key;
                      DAST._IType _6646___mcc_h2433 = _source246.dtor_value;
                    } else if (_source246.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _6647___mcc_h2436 = _source246.dtor_args;
                      DAST._IType _6648___mcc_h2437 = _source246.dtor_result;
                    } else if (_source246.is_Primitive) {
                      DAST._IPrimitive _6649___mcc_h2440 = _source246.dtor_Primitive_a0;
                    } else if (_source246.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _6650___mcc_h2442 = _source246.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _6651___mcc_h2444 = _source246.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _6652_recursiveGen;
                      DCOMP._IOwnership _6653_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6654_recIdents;
                      RAST._IExpr _out2909;
                      DCOMP._IOwnership _out2910;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2911;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2909, out _out2910, out _out2911);
                      _6652_recursiveGen = _out2909;
                      _6653_recOwned = _out2910;
                      _6654_recIdents = _out2911;
                      RAST._IExpr _out2912;
                      DCOMP._IOwnership _out2913;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6652_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6609_nativeToType).dtor_value), _6653_recOwned, expectedOwnership, out _out2912, out _out2913);
                      r = _out2912;
                      resultingOwnership = _out2913;
                      readIdents = _6654_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out2914;
                  DCOMP._IOwnership _out2915;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2916;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _6608_b), _6608_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out2914, out _out2915, out _out2916);
                  r = _out2914;
                  resultingOwnership = _out2915;
                  readIdents = _out2916;
                }
              }
            }
          } else if (_source243.is_Nullable) {
            DAST._IType _6655___mcc_h1254 = _source243.dtor_Nullable_a0;
            {
              RAST._IExpr _6656_recursiveGen;
              DCOMP._IOwnership _6657_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6658_recIdents;
              RAST._IExpr _out2917;
              DCOMP._IOwnership _out2918;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2919;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2917, out _out2918, out _out2919);
              _6656_recursiveGen = _out2917;
              _6657_recOwned = _out2918;
              _6658_recIdents = _out2919;
              r = _6656_recursiveGen;
              if (object.Equals(_6657_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out2920;
              DCOMP._IOwnership _out2921;
              DCOMP.COMP.FromOwnership(r, _6657_recOwned, expectedOwnership, out _out2920, out _out2921);
              r = _out2920;
              resultingOwnership = _out2921;
              readIdents = _6658_recIdents;
            }
          } else if (_source243.is_Tuple) {
            Dafny.ISequence<DAST._IType> _6659___mcc_h1256 = _source243.dtor_Tuple_a0;
            {
              RAST._IType _6660_fromTpeGen;
              RAST._IType _out2922;
              _out2922 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6660_fromTpeGen = _out2922;
              RAST._IType _6661_toTpeGen;
              RAST._IType _out2923;
              _out2923 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6661_toTpeGen = _out2923;
              RAST._IExpr _6662_recursiveGen;
              DCOMP._IOwnership _6663_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6664_recIdents;
              RAST._IExpr _out2924;
              DCOMP._IOwnership _out2925;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2926;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2924, out _out2925, out _out2926);
              _6662_recursiveGen = _out2924;
              _6663_recOwned = _out2925;
              _6664_recIdents = _out2926;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6662_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6660_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6661_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2927;
              DCOMP._IOwnership _out2928;
              DCOMP.COMP.FromOwnership(r, _6663_recOwned, expectedOwnership, out _out2927, out _out2928);
              r = _out2927;
              resultingOwnership = _out2928;
              readIdents = _6664_recIdents;
            }
          } else if (_source243.is_Array) {
            DAST._IType _6665___mcc_h1258 = _source243.dtor_element;
            BigInteger _6666___mcc_h1259 = _source243.dtor_dims;
            {
              RAST._IType _6667_fromTpeGen;
              RAST._IType _out2929;
              _out2929 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6667_fromTpeGen = _out2929;
              RAST._IType _6668_toTpeGen;
              RAST._IType _out2930;
              _out2930 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6668_toTpeGen = _out2930;
              RAST._IExpr _6669_recursiveGen;
              DCOMP._IOwnership _6670_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6671_recIdents;
              RAST._IExpr _out2931;
              DCOMP._IOwnership _out2932;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2933;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2931, out _out2932, out _out2933);
              _6669_recursiveGen = _out2931;
              _6670_recOwned = _out2932;
              _6671_recIdents = _out2933;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6669_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6667_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6668_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2934;
              DCOMP._IOwnership _out2935;
              DCOMP.COMP.FromOwnership(r, _6670_recOwned, expectedOwnership, out _out2934, out _out2935);
              r = _out2934;
              resultingOwnership = _out2935;
              readIdents = _6671_recIdents;
            }
          } else if (_source243.is_Seq) {
            DAST._IType _6672___mcc_h1262 = _source243.dtor_element;
            {
              RAST._IType _6673_fromTpeGen;
              RAST._IType _out2936;
              _out2936 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6673_fromTpeGen = _out2936;
              RAST._IType _6674_toTpeGen;
              RAST._IType _out2937;
              _out2937 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6674_toTpeGen = _out2937;
              RAST._IExpr _6675_recursiveGen;
              DCOMP._IOwnership _6676_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6677_recIdents;
              RAST._IExpr _out2938;
              DCOMP._IOwnership _out2939;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2940;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2938, out _out2939, out _out2940);
              _6675_recursiveGen = _out2938;
              _6676_recOwned = _out2939;
              _6677_recIdents = _out2940;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6675_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6673_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6674_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2941;
              DCOMP._IOwnership _out2942;
              DCOMP.COMP.FromOwnership(r, _6676_recOwned, expectedOwnership, out _out2941, out _out2942);
              r = _out2941;
              resultingOwnership = _out2942;
              readIdents = _6677_recIdents;
            }
          } else if (_source243.is_Set) {
            DAST._IType _6678___mcc_h1264 = _source243.dtor_element;
            {
              RAST._IType _6679_fromTpeGen;
              RAST._IType _out2943;
              _out2943 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6679_fromTpeGen = _out2943;
              RAST._IType _6680_toTpeGen;
              RAST._IType _out2944;
              _out2944 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6680_toTpeGen = _out2944;
              RAST._IExpr _6681_recursiveGen;
              DCOMP._IOwnership _6682_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6683_recIdents;
              RAST._IExpr _out2945;
              DCOMP._IOwnership _out2946;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2947;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2945, out _out2946, out _out2947);
              _6681_recursiveGen = _out2945;
              _6682_recOwned = _out2946;
              _6683_recIdents = _out2947;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6681_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6679_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6680_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2948;
              DCOMP._IOwnership _out2949;
              DCOMP.COMP.FromOwnership(r, _6682_recOwned, expectedOwnership, out _out2948, out _out2949);
              r = _out2948;
              resultingOwnership = _out2949;
              readIdents = _6683_recIdents;
            }
          } else if (_source243.is_Multiset) {
            DAST._IType _6684___mcc_h1266 = _source243.dtor_element;
            {
              RAST._IType _6685_fromTpeGen;
              RAST._IType _out2950;
              _out2950 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6685_fromTpeGen = _out2950;
              RAST._IType _6686_toTpeGen;
              RAST._IType _out2951;
              _out2951 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6686_toTpeGen = _out2951;
              RAST._IExpr _6687_recursiveGen;
              DCOMP._IOwnership _6688_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6689_recIdents;
              RAST._IExpr _out2952;
              DCOMP._IOwnership _out2953;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2954;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2952, out _out2953, out _out2954);
              _6687_recursiveGen = _out2952;
              _6688_recOwned = _out2953;
              _6689_recIdents = _out2954;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6687_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6685_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6686_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2955;
              DCOMP._IOwnership _out2956;
              DCOMP.COMP.FromOwnership(r, _6688_recOwned, expectedOwnership, out _out2955, out _out2956);
              r = _out2955;
              resultingOwnership = _out2956;
              readIdents = _6689_recIdents;
            }
          } else if (_source243.is_Map) {
            DAST._IType _6690___mcc_h1268 = _source243.dtor_key;
            DAST._IType _6691___mcc_h1269 = _source243.dtor_value;
            {
              RAST._IType _6692_fromTpeGen;
              RAST._IType _out2957;
              _out2957 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6692_fromTpeGen = _out2957;
              RAST._IType _6693_toTpeGen;
              RAST._IType _out2958;
              _out2958 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6693_toTpeGen = _out2958;
              RAST._IExpr _6694_recursiveGen;
              DCOMP._IOwnership _6695_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6696_recIdents;
              RAST._IExpr _out2959;
              DCOMP._IOwnership _out2960;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2961;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2959, out _out2960, out _out2961);
              _6694_recursiveGen = _out2959;
              _6695_recOwned = _out2960;
              _6696_recIdents = _out2961;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6694_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6692_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6693_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2962;
              DCOMP._IOwnership _out2963;
              DCOMP.COMP.FromOwnership(r, _6695_recOwned, expectedOwnership, out _out2962, out _out2963);
              r = _out2962;
              resultingOwnership = _out2963;
              readIdents = _6696_recIdents;
            }
          } else if (_source243.is_SetBuilder) {
            DAST._IType _6697___mcc_h1272 = _source243.dtor_element;
            {
              RAST._IType _6698_fromTpeGen;
              RAST._IType _out2964;
              _out2964 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6698_fromTpeGen = _out2964;
              RAST._IType _6699_toTpeGen;
              RAST._IType _out2965;
              _out2965 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6699_toTpeGen = _out2965;
              RAST._IExpr _6700_recursiveGen;
              DCOMP._IOwnership _6701_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6702_recIdents;
              RAST._IExpr _out2966;
              DCOMP._IOwnership _out2967;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2968;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2966, out _out2967, out _out2968);
              _6700_recursiveGen = _out2966;
              _6701_recOwned = _out2967;
              _6702_recIdents = _out2968;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6700_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6698_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6699_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2969;
              DCOMP._IOwnership _out2970;
              DCOMP.COMP.FromOwnership(r, _6701_recOwned, expectedOwnership, out _out2969, out _out2970);
              r = _out2969;
              resultingOwnership = _out2970;
              readIdents = _6702_recIdents;
            }
          } else if (_source243.is_MapBuilder) {
            DAST._IType _6703___mcc_h1274 = _source243.dtor_key;
            DAST._IType _6704___mcc_h1275 = _source243.dtor_value;
            {
              RAST._IType _6705_fromTpeGen;
              RAST._IType _out2971;
              _out2971 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6705_fromTpeGen = _out2971;
              RAST._IType _6706_toTpeGen;
              RAST._IType _out2972;
              _out2972 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6706_toTpeGen = _out2972;
              RAST._IExpr _6707_recursiveGen;
              DCOMP._IOwnership _6708_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6709_recIdents;
              RAST._IExpr _out2973;
              DCOMP._IOwnership _out2974;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2975;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2973, out _out2974, out _out2975);
              _6707_recursiveGen = _out2973;
              _6708_recOwned = _out2974;
              _6709_recIdents = _out2975;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6707_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6705_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6706_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2976;
              DCOMP._IOwnership _out2977;
              DCOMP.COMP.FromOwnership(r, _6708_recOwned, expectedOwnership, out _out2976, out _out2977);
              r = _out2976;
              resultingOwnership = _out2977;
              readIdents = _6709_recIdents;
            }
          } else if (_source243.is_Arrow) {
            Dafny.ISequence<DAST._IType> _6710___mcc_h1278 = _source243.dtor_args;
            DAST._IType _6711___mcc_h1279 = _source243.dtor_result;
            {
              RAST._IType _6712_fromTpeGen;
              RAST._IType _out2978;
              _out2978 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6712_fromTpeGen = _out2978;
              RAST._IType _6713_toTpeGen;
              RAST._IType _out2979;
              _out2979 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6713_toTpeGen = _out2979;
              RAST._IExpr _6714_recursiveGen;
              DCOMP._IOwnership _6715_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6716_recIdents;
              RAST._IExpr _out2980;
              DCOMP._IOwnership _out2981;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2982;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2980, out _out2981, out _out2982);
              _6714_recursiveGen = _out2980;
              _6715_recOwned = _out2981;
              _6716_recIdents = _out2982;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6714_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6712_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6713_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out2983;
              DCOMP._IOwnership _out2984;
              DCOMP.COMP.FromOwnership(r, _6715_recOwned, expectedOwnership, out _out2983, out _out2984);
              r = _out2983;
              resultingOwnership = _out2984;
              readIdents = _6716_recIdents;
            }
          } else if (_source243.is_Primitive) {
            DAST._IPrimitive _6717___mcc_h1282 = _source243.dtor_Primitive_a0;
            DAST._IPrimitive _source248 = _6717___mcc_h1282;
            if (_source248.is_Int) {
              {
                RAST._IType _6718_rhsType;
                RAST._IType _out2985;
                _out2985 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6718_rhsType = _out2985;
                RAST._IExpr _6719_recursiveGen;
                DCOMP._IOwnership _6720___v98;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6721_recIdents;
                RAST._IExpr _out2986;
                DCOMP._IOwnership _out2987;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2988;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2986, out _out2987, out _out2988);
                _6719_recursiveGen = _out2986;
                _6720___v98 = _out2987;
                _6721_recIdents = _out2988;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_6719_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out2989;
                DCOMP._IOwnership _out2990;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2989, out _out2990);
                r = _out2989;
                resultingOwnership = _out2990;
                readIdents = _6721_recIdents;
              }
            } else if (_source248.is_Real) {
              {
                RAST._IType _6722_fromTpeGen;
                RAST._IType _out2991;
                _out2991 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6722_fromTpeGen = _out2991;
                RAST._IType _6723_toTpeGen;
                RAST._IType _out2992;
                _out2992 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6723_toTpeGen = _out2992;
                RAST._IExpr _6724_recursiveGen;
                DCOMP._IOwnership _6725_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6726_recIdents;
                RAST._IExpr _out2993;
                DCOMP._IOwnership _out2994;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2995;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out2993, out _out2994, out _out2995);
                _6724_recursiveGen = _out2993;
                _6725_recOwned = _out2994;
                _6726_recIdents = _out2995;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6724_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6722_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6723_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out2996;
                DCOMP._IOwnership _out2997;
                DCOMP.COMP.FromOwnership(r, _6725_recOwned, expectedOwnership, out _out2996, out _out2997);
                r = _out2996;
                resultingOwnership = _out2997;
                readIdents = _6726_recIdents;
              }
            } else if (_source248.is_String) {
              {
                RAST._IType _6727_fromTpeGen;
                RAST._IType _out2998;
                _out2998 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6727_fromTpeGen = _out2998;
                RAST._IType _6728_toTpeGen;
                RAST._IType _out2999;
                _out2999 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6728_toTpeGen = _out2999;
                RAST._IExpr _6729_recursiveGen;
                DCOMP._IOwnership _6730_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6731_recIdents;
                RAST._IExpr _out3000;
                DCOMP._IOwnership _out3001;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3002;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3000, out _out3001, out _out3002);
                _6729_recursiveGen = _out3000;
                _6730_recOwned = _out3001;
                _6731_recIdents = _out3002;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6729_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6727_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6728_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3003;
                DCOMP._IOwnership _out3004;
                DCOMP.COMP.FromOwnership(r, _6730_recOwned, expectedOwnership, out _out3003, out _out3004);
                r = _out3003;
                resultingOwnership = _out3004;
                readIdents = _6731_recIdents;
              }
            } else if (_source248.is_Bool) {
              {
                RAST._IType _6732_fromTpeGen;
                RAST._IType _out3005;
                _out3005 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6732_fromTpeGen = _out3005;
                RAST._IType _6733_toTpeGen;
                RAST._IType _out3006;
                _out3006 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6733_toTpeGen = _out3006;
                RAST._IExpr _6734_recursiveGen;
                DCOMP._IOwnership _6735_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6736_recIdents;
                RAST._IExpr _out3007;
                DCOMP._IOwnership _out3008;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3009;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3007, out _out3008, out _out3009);
                _6734_recursiveGen = _out3007;
                _6735_recOwned = _out3008;
                _6736_recIdents = _out3009;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6734_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6732_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6733_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3010;
                DCOMP._IOwnership _out3011;
                DCOMP.COMP.FromOwnership(r, _6735_recOwned, expectedOwnership, out _out3010, out _out3011);
                r = _out3010;
                resultingOwnership = _out3011;
                readIdents = _6736_recIdents;
              }
            } else {
              {
                RAST._IType _6737_fromTpeGen;
                RAST._IType _out3012;
                _out3012 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6737_fromTpeGen = _out3012;
                RAST._IType _6738_toTpeGen;
                RAST._IType _out3013;
                _out3013 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6738_toTpeGen = _out3013;
                RAST._IExpr _6739_recursiveGen;
                DCOMP._IOwnership _6740_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6741_recIdents;
                RAST._IExpr _out3014;
                DCOMP._IOwnership _out3015;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3016;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3014, out _out3015, out _out3016);
                _6739_recursiveGen = _out3014;
                _6740_recOwned = _out3015;
                _6741_recIdents = _out3016;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6739_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6737_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6738_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3017;
                DCOMP._IOwnership _out3018;
                DCOMP.COMP.FromOwnership(r, _6740_recOwned, expectedOwnership, out _out3017, out _out3018);
                r = _out3017;
                resultingOwnership = _out3018;
                readIdents = _6741_recIdents;
              }
            }
          } else if (_source243.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _6742___mcc_h1284 = _source243.dtor_Passthrough_a0;
            {
              RAST._IExpr _6743_recursiveGen;
              DCOMP._IOwnership _6744___v103;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6745_recIdents;
              RAST._IExpr _out3019;
              DCOMP._IOwnership _out3020;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3021;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3019, out _out3020, out _out3021);
              _6743_recursiveGen = _out3019;
              _6744___v103 = _out3020;
              _6745_recIdents = _out3021;
              RAST._IType _6746_toTpeGen;
              RAST._IType _out3022;
              _out3022 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6746_toTpeGen = _out3022;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_6743_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_6746_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out3023;
              DCOMP._IOwnership _out3024;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3023, out _out3024);
              r = _out3023;
              resultingOwnership = _out3024;
              readIdents = _6745_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _6747___mcc_h1286 = _source243.dtor_TypeArg_a0;
            {
              RAST._IType _6748_fromTpeGen;
              RAST._IType _out3025;
              _out3025 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6748_fromTpeGen = _out3025;
              RAST._IType _6749_toTpeGen;
              RAST._IType _out3026;
              _out3026 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6749_toTpeGen = _out3026;
              RAST._IExpr _6750_recursiveGen;
              DCOMP._IOwnership _6751_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6752_recIdents;
              RAST._IExpr _out3027;
              DCOMP._IOwnership _out3028;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3029;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3027, out _out3028, out _out3029);
              _6750_recursiveGen = _out3027;
              _6751_recOwned = _out3028;
              _6752_recIdents = _out3029;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6750_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6748_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6749_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3030;
              DCOMP._IOwnership _out3031;
              DCOMP.COMP.FromOwnership(r, _6751_recOwned, expectedOwnership, out _out3030, out _out3031);
              r = _out3030;
              resultingOwnership = _out3031;
              readIdents = _6752_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _6753___mcc_h1288 = _source130.dtor_TypeArg_a0;
          DAST._IType _source249 = _3476___mcc_h1;
          if (_source249.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6754___mcc_h1292 = _source249.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _6755___mcc_h1293 = _source249.dtor_typeArgs;
            DAST._IResolvedType _6756___mcc_h1294 = _source249.dtor_resolved;
            DAST._IResolvedType _source250 = _6756___mcc_h1294;
            if (_source250.is_AllocatedDatatype) {
              DAST._IDatatypeType _6757___mcc_h1298 = _source250.dtor_datatypeType;
              {
                RAST._IType _6758_fromTpeGen;
                RAST._IType _out3032;
                _out3032 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6758_fromTpeGen = _out3032;
                RAST._IType _6759_toTpeGen;
                RAST._IType _out3033;
                _out3033 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6759_toTpeGen = _out3033;
                RAST._IExpr _6760_recursiveGen;
                DCOMP._IOwnership _6761_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6762_recIdents;
                RAST._IExpr _out3034;
                DCOMP._IOwnership _out3035;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3036;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3034, out _out3035, out _out3036);
                _6760_recursiveGen = _out3034;
                _6761_recOwned = _out3035;
                _6762_recIdents = _out3036;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6760_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6758_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6759_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3037;
                DCOMP._IOwnership _out3038;
                DCOMP.COMP.FromOwnership(r, _6761_recOwned, expectedOwnership, out _out3037, out _out3038);
                r = _out3037;
                resultingOwnership = _out3038;
                readIdents = _6762_recIdents;
              }
            } else if (_source250.is_Datatype) {
              DAST._IDatatypeType _6763___mcc_h1300 = _source250.dtor_datatypeType;
              {
                RAST._IType _6764_fromTpeGen;
                RAST._IType _out3039;
                _out3039 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6764_fromTpeGen = _out3039;
                RAST._IType _6765_toTpeGen;
                RAST._IType _out3040;
                _out3040 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6765_toTpeGen = _out3040;
                RAST._IExpr _6766_recursiveGen;
                DCOMP._IOwnership _6767_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6768_recIdents;
                RAST._IExpr _out3041;
                DCOMP._IOwnership _out3042;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3043;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3041, out _out3042, out _out3043);
                _6766_recursiveGen = _out3041;
                _6767_recOwned = _out3042;
                _6768_recIdents = _out3043;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6766_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6764_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6765_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3044;
                DCOMP._IOwnership _out3045;
                DCOMP.COMP.FromOwnership(r, _6767_recOwned, expectedOwnership, out _out3044, out _out3045);
                r = _out3044;
                resultingOwnership = _out3045;
                readIdents = _6768_recIdents;
              }
            } else if (_source250.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6769___mcc_h1302 = _source250.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _6770___mcc_h1303 = _source250.dtor_attributes;
              {
                RAST._IType _6771_fromTpeGen;
                RAST._IType _out3046;
                _out3046 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
                _6771_fromTpeGen = _out3046;
                RAST._IType _6772_toTpeGen;
                RAST._IType _out3047;
                _out3047 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                _6772_toTpeGen = _out3047;
                RAST._IExpr _6773_recursiveGen;
                DCOMP._IOwnership _6774_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6775_recIdents;
                RAST._IExpr _out3048;
                DCOMP._IOwnership _out3049;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3050;
                DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3048, out _out3049, out _out3050);
                _6773_recursiveGen = _out3048;
                _6774_recOwned = _out3049;
                _6775_recIdents = _out3050;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6773_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6771_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6772_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3051;
                DCOMP._IOwnership _out3052;
                DCOMP.COMP.FromOwnership(r, _6774_recOwned, expectedOwnership, out _out3051, out _out3052);
                r = _out3051;
                resultingOwnership = _out3052;
                readIdents = _6775_recIdents;
              }
            } else {
              DAST._IType _6776___mcc_h1306 = _source250.dtor_baseType;
              DAST._INewtypeRange _6777___mcc_h1307 = _source250.dtor_range;
              bool _6778___mcc_h1308 = _source250.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _6779___mcc_h1309 = _source250.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _6780_attributes = _6779___mcc_h1309;
              bool _6781_erase = _6778___mcc_h1308;
              DAST._INewtypeRange _6782_range = _6777___mcc_h1307;
              DAST._IType _6783_b = _6776___mcc_h1306;
              {
                Std.Wrappers._IOption<RAST._IType> _6784_nativeToType;
                _6784_nativeToType = DCOMP.COMP.NewtypeToRustType(_6783_b, _6782_range);
                if (object.Equals(_3470_fromTpe, _6783_b)) {
                  RAST._IExpr _6785_recursiveGen;
                  DCOMP._IOwnership _6786_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6787_recIdents;
                  RAST._IExpr _out3053;
                  DCOMP._IOwnership _out3054;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3055;
                  DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3053, out _out3054, out _out3055);
                  _6785_recursiveGen = _out3053;
                  _6786_recOwned = _out3054;
                  _6787_recIdents = _out3055;
                  readIdents = _6787_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source251 = _6784_nativeToType;
                  if (_source251.is_None) {
                    if (_6781_erase) {
                      r = _6785_recursiveGen;
                    } else {
                      RAST._IType _6788_rhsType;
                      RAST._IType _out3056;
                      _out3056 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
                      _6788_rhsType = _out3056;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_6788_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_6785_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out3057;
                    DCOMP._IOwnership _out3058;
                    DCOMP.COMP.FromOwnership(r, _6786_recOwned, expectedOwnership, out _out3057, out _out3058);
                    r = _out3057;
                    resultingOwnership = _out3058;
                  } else {
                    RAST._IType _6789___mcc_h2446 = _source251.dtor_value;
                    RAST._IType _6790_v = _6789___mcc_h2446;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_6785_recursiveGen, RAST.Expr.create_ExprFromType(_6790_v)));
                    RAST._IExpr _out3059;
                    DCOMP._IOwnership _out3060;
                    DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3059, out _out3060);
                    r = _out3059;
                    resultingOwnership = _out3060;
                  }
                } else {
                  if ((_6784_nativeToType).is_Some) {
                    DAST._IType _source252 = _3470_fromTpe;
                    if (_source252.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6791___mcc_h2447 = _source252.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _6792___mcc_h2448 = _source252.dtor_typeArgs;
                      DAST._IResolvedType _6793___mcc_h2449 = _source252.dtor_resolved;
                      DAST._IResolvedType _source253 = _6793___mcc_h2449;
                      if (_source253.is_AllocatedDatatype) {
                        DAST._IDatatypeType _6794___mcc_h2453 = _source253.dtor_datatypeType;
                      } else if (_source253.is_Datatype) {
                        DAST._IDatatypeType _6795___mcc_h2455 = _source253.dtor_datatypeType;
                      } else if (_source253.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6796___mcc_h2457 = _source253.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _6797___mcc_h2458 = _source253.dtor_attributes;
                      } else {
                        DAST._IType _6798___mcc_h2461 = _source253.dtor_baseType;
                        DAST._INewtypeRange _6799___mcc_h2462 = _source253.dtor_range;
                        bool _6800___mcc_h2463 = _source253.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _6801___mcc_h2464 = _source253.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _6802_attributes0 = _6801___mcc_h2464;
                        bool _6803_erase0 = _6800___mcc_h2463;
                        DAST._INewtypeRange _6804_range0 = _6799___mcc_h2462;
                        DAST._IType _6805_b0 = _6798___mcc_h2461;
                        {
                          Std.Wrappers._IOption<RAST._IType> _6806_nativeFromType;
                          _6806_nativeFromType = DCOMP.COMP.NewtypeToRustType(_6805_b0, _6804_range0);
                          if ((_6806_nativeFromType).is_Some) {
                            RAST._IExpr _6807_recursiveGen;
                            DCOMP._IOwnership _6808_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6809_recIdents;
                            RAST._IExpr _out3061;
                            DCOMP._IOwnership _out3062;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3063;
                            DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3061, out _out3062, out _out3063);
                            _6807_recursiveGen = _out3061;
                            _6808_recOwned = _out3062;
                            _6809_recIdents = _out3063;
                            RAST._IExpr _out3064;
                            DCOMP._IOwnership _out3065;
                            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_6807_recursiveGen, (_6784_nativeToType).dtor_value), _6808_recOwned, expectedOwnership, out _out3064, out _out3065);
                            r = _out3064;
                            resultingOwnership = _out3065;
                            readIdents = _6809_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source252.is_Nullable) {
                      DAST._IType _6810___mcc_h2469 = _source252.dtor_Nullable_a0;
                    } else if (_source252.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _6811___mcc_h2471 = _source252.dtor_Tuple_a0;
                    } else if (_source252.is_Array) {
                      DAST._IType _6812___mcc_h2473 = _source252.dtor_element;
                      BigInteger _6813___mcc_h2474 = _source252.dtor_dims;
                    } else if (_source252.is_Seq) {
                      DAST._IType _6814___mcc_h2477 = _source252.dtor_element;
                    } else if (_source252.is_Set) {
                      DAST._IType _6815___mcc_h2479 = _source252.dtor_element;
                    } else if (_source252.is_Multiset) {
                      DAST._IType _6816___mcc_h2481 = _source252.dtor_element;
                    } else if (_source252.is_Map) {
                      DAST._IType _6817___mcc_h2483 = _source252.dtor_key;
                      DAST._IType _6818___mcc_h2484 = _source252.dtor_value;
                    } else if (_source252.is_SetBuilder) {
                      DAST._IType _6819___mcc_h2487 = _source252.dtor_element;
                    } else if (_source252.is_MapBuilder) {
                      DAST._IType _6820___mcc_h2489 = _source252.dtor_key;
                      DAST._IType _6821___mcc_h2490 = _source252.dtor_value;
                    } else if (_source252.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _6822___mcc_h2493 = _source252.dtor_args;
                      DAST._IType _6823___mcc_h2494 = _source252.dtor_result;
                    } else if (_source252.is_Primitive) {
                      DAST._IPrimitive _6824___mcc_h2497 = _source252.dtor_Primitive_a0;
                    } else if (_source252.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _6825___mcc_h2499 = _source252.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _6826___mcc_h2501 = _source252.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_3470_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _6827_recursiveGen;
                      DCOMP._IOwnership _6828_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6829_recIdents;
                      RAST._IExpr _out3066;
                      DCOMP._IOwnership _out3067;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3068;
                      DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3066, out _out3067, out _out3068);
                      _6827_recursiveGen = _out3066;
                      _6828_recOwned = _out3067;
                      _6829_recIdents = _out3068;
                      RAST._IExpr _out3069;
                      DCOMP._IOwnership _out3070;
                      DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_6827_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_6784_nativeToType).dtor_value), _6828_recOwned, expectedOwnership, out _out3069, out _out3070);
                      r = _out3069;
                      resultingOwnership = _out3070;
                      readIdents = _6829_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out3071;
                  DCOMP._IOwnership _out3072;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3073;
                  DCOMP.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3469_expr, _3470_fromTpe, _6783_b), _6783_b, _3471_toTpe), selfIdent, env, expectedOwnership, out _out3071, out _out3072, out _out3073);
                  r = _out3071;
                  resultingOwnership = _out3072;
                  readIdents = _out3073;
                }
              }
            }
          } else if (_source249.is_Nullable) {
            DAST._IType _6830___mcc_h1314 = _source249.dtor_Nullable_a0;
            {
              RAST._IExpr _6831_recursiveGen;
              DCOMP._IOwnership _6832_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6833_recIdents;
              RAST._IExpr _out3074;
              DCOMP._IOwnership _out3075;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3076;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3074, out _out3075, out _out3076);
              _6831_recursiveGen = _out3074;
              _6832_recOwned = _out3075;
              _6833_recIdents = _out3076;
              r = _6831_recursiveGen;
              if (object.Equals(_6832_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out3077;
              DCOMP._IOwnership _out3078;
              DCOMP.COMP.FromOwnership(r, _6832_recOwned, expectedOwnership, out _out3077, out _out3078);
              r = _out3077;
              resultingOwnership = _out3078;
              readIdents = _6833_recIdents;
            }
          } else if (_source249.is_Tuple) {
            Dafny.ISequence<DAST._IType> _6834___mcc_h1316 = _source249.dtor_Tuple_a0;
            {
              RAST._IType _6835_fromTpeGen;
              RAST._IType _out3079;
              _out3079 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6835_fromTpeGen = _out3079;
              RAST._IType _6836_toTpeGen;
              RAST._IType _out3080;
              _out3080 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6836_toTpeGen = _out3080;
              RAST._IExpr _6837_recursiveGen;
              DCOMP._IOwnership _6838_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6839_recIdents;
              RAST._IExpr _out3081;
              DCOMP._IOwnership _out3082;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3083;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3081, out _out3082, out _out3083);
              _6837_recursiveGen = _out3081;
              _6838_recOwned = _out3082;
              _6839_recIdents = _out3083;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6837_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6835_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6836_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3084;
              DCOMP._IOwnership _out3085;
              DCOMP.COMP.FromOwnership(r, _6838_recOwned, expectedOwnership, out _out3084, out _out3085);
              r = _out3084;
              resultingOwnership = _out3085;
              readIdents = _6839_recIdents;
            }
          } else if (_source249.is_Array) {
            DAST._IType _6840___mcc_h1318 = _source249.dtor_element;
            BigInteger _6841___mcc_h1319 = _source249.dtor_dims;
            {
              RAST._IType _6842_fromTpeGen;
              RAST._IType _out3086;
              _out3086 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6842_fromTpeGen = _out3086;
              RAST._IType _6843_toTpeGen;
              RAST._IType _out3087;
              _out3087 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6843_toTpeGen = _out3087;
              RAST._IExpr _6844_recursiveGen;
              DCOMP._IOwnership _6845_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6846_recIdents;
              RAST._IExpr _out3088;
              DCOMP._IOwnership _out3089;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3090;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3088, out _out3089, out _out3090);
              _6844_recursiveGen = _out3088;
              _6845_recOwned = _out3089;
              _6846_recIdents = _out3090;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6844_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6842_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6843_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3091;
              DCOMP._IOwnership _out3092;
              DCOMP.COMP.FromOwnership(r, _6845_recOwned, expectedOwnership, out _out3091, out _out3092);
              r = _out3091;
              resultingOwnership = _out3092;
              readIdents = _6846_recIdents;
            }
          } else if (_source249.is_Seq) {
            DAST._IType _6847___mcc_h1322 = _source249.dtor_element;
            {
              RAST._IType _6848_fromTpeGen;
              RAST._IType _out3093;
              _out3093 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6848_fromTpeGen = _out3093;
              RAST._IType _6849_toTpeGen;
              RAST._IType _out3094;
              _out3094 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6849_toTpeGen = _out3094;
              RAST._IExpr _6850_recursiveGen;
              DCOMP._IOwnership _6851_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6852_recIdents;
              RAST._IExpr _out3095;
              DCOMP._IOwnership _out3096;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3097;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3095, out _out3096, out _out3097);
              _6850_recursiveGen = _out3095;
              _6851_recOwned = _out3096;
              _6852_recIdents = _out3097;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6850_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6848_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6849_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3098;
              DCOMP._IOwnership _out3099;
              DCOMP.COMP.FromOwnership(r, _6851_recOwned, expectedOwnership, out _out3098, out _out3099);
              r = _out3098;
              resultingOwnership = _out3099;
              readIdents = _6852_recIdents;
            }
          } else if (_source249.is_Set) {
            DAST._IType _6853___mcc_h1324 = _source249.dtor_element;
            {
              RAST._IType _6854_fromTpeGen;
              RAST._IType _out3100;
              _out3100 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6854_fromTpeGen = _out3100;
              RAST._IType _6855_toTpeGen;
              RAST._IType _out3101;
              _out3101 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6855_toTpeGen = _out3101;
              RAST._IExpr _6856_recursiveGen;
              DCOMP._IOwnership _6857_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6858_recIdents;
              RAST._IExpr _out3102;
              DCOMP._IOwnership _out3103;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3104;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3102, out _out3103, out _out3104);
              _6856_recursiveGen = _out3102;
              _6857_recOwned = _out3103;
              _6858_recIdents = _out3104;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6856_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6854_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6855_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3105;
              DCOMP._IOwnership _out3106;
              DCOMP.COMP.FromOwnership(r, _6857_recOwned, expectedOwnership, out _out3105, out _out3106);
              r = _out3105;
              resultingOwnership = _out3106;
              readIdents = _6858_recIdents;
            }
          } else if (_source249.is_Multiset) {
            DAST._IType _6859___mcc_h1326 = _source249.dtor_element;
            {
              RAST._IType _6860_fromTpeGen;
              RAST._IType _out3107;
              _out3107 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6860_fromTpeGen = _out3107;
              RAST._IType _6861_toTpeGen;
              RAST._IType _out3108;
              _out3108 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6861_toTpeGen = _out3108;
              RAST._IExpr _6862_recursiveGen;
              DCOMP._IOwnership _6863_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6864_recIdents;
              RAST._IExpr _out3109;
              DCOMP._IOwnership _out3110;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3111;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3109, out _out3110, out _out3111);
              _6862_recursiveGen = _out3109;
              _6863_recOwned = _out3110;
              _6864_recIdents = _out3111;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6862_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6860_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6861_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3112;
              DCOMP._IOwnership _out3113;
              DCOMP.COMP.FromOwnership(r, _6863_recOwned, expectedOwnership, out _out3112, out _out3113);
              r = _out3112;
              resultingOwnership = _out3113;
              readIdents = _6864_recIdents;
            }
          } else if (_source249.is_Map) {
            DAST._IType _6865___mcc_h1328 = _source249.dtor_key;
            DAST._IType _6866___mcc_h1329 = _source249.dtor_value;
            {
              RAST._IType _6867_fromTpeGen;
              RAST._IType _out3114;
              _out3114 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6867_fromTpeGen = _out3114;
              RAST._IType _6868_toTpeGen;
              RAST._IType _out3115;
              _out3115 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6868_toTpeGen = _out3115;
              RAST._IExpr _6869_recursiveGen;
              DCOMP._IOwnership _6870_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6871_recIdents;
              RAST._IExpr _out3116;
              DCOMP._IOwnership _out3117;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3118;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3116, out _out3117, out _out3118);
              _6869_recursiveGen = _out3116;
              _6870_recOwned = _out3117;
              _6871_recIdents = _out3118;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6869_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6867_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6868_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3119;
              DCOMP._IOwnership _out3120;
              DCOMP.COMP.FromOwnership(r, _6870_recOwned, expectedOwnership, out _out3119, out _out3120);
              r = _out3119;
              resultingOwnership = _out3120;
              readIdents = _6871_recIdents;
            }
          } else if (_source249.is_SetBuilder) {
            DAST._IType _6872___mcc_h1332 = _source249.dtor_element;
            {
              RAST._IType _6873_fromTpeGen;
              RAST._IType _out3121;
              _out3121 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6873_fromTpeGen = _out3121;
              RAST._IType _6874_toTpeGen;
              RAST._IType _out3122;
              _out3122 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6874_toTpeGen = _out3122;
              RAST._IExpr _6875_recursiveGen;
              DCOMP._IOwnership _6876_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6877_recIdents;
              RAST._IExpr _out3123;
              DCOMP._IOwnership _out3124;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3125;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3123, out _out3124, out _out3125);
              _6875_recursiveGen = _out3123;
              _6876_recOwned = _out3124;
              _6877_recIdents = _out3125;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6875_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6873_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6874_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3126;
              DCOMP._IOwnership _out3127;
              DCOMP.COMP.FromOwnership(r, _6876_recOwned, expectedOwnership, out _out3126, out _out3127);
              r = _out3126;
              resultingOwnership = _out3127;
              readIdents = _6877_recIdents;
            }
          } else if (_source249.is_MapBuilder) {
            DAST._IType _6878___mcc_h1334 = _source249.dtor_key;
            DAST._IType _6879___mcc_h1335 = _source249.dtor_value;
            {
              RAST._IType _6880_fromTpeGen;
              RAST._IType _out3128;
              _out3128 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6880_fromTpeGen = _out3128;
              RAST._IType _6881_toTpeGen;
              RAST._IType _out3129;
              _out3129 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6881_toTpeGen = _out3129;
              RAST._IExpr _6882_recursiveGen;
              DCOMP._IOwnership _6883_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6884_recIdents;
              RAST._IExpr _out3130;
              DCOMP._IOwnership _out3131;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3132;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3130, out _out3131, out _out3132);
              _6882_recursiveGen = _out3130;
              _6883_recOwned = _out3131;
              _6884_recIdents = _out3132;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6882_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6880_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6881_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3133;
              DCOMP._IOwnership _out3134;
              DCOMP.COMP.FromOwnership(r, _6883_recOwned, expectedOwnership, out _out3133, out _out3134);
              r = _out3133;
              resultingOwnership = _out3134;
              readIdents = _6884_recIdents;
            }
          } else if (_source249.is_Arrow) {
            Dafny.ISequence<DAST._IType> _6885___mcc_h1338 = _source249.dtor_args;
            DAST._IType _6886___mcc_h1339 = _source249.dtor_result;
            {
              RAST._IType _6887_fromTpeGen;
              RAST._IType _out3135;
              _out3135 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6887_fromTpeGen = _out3135;
              RAST._IType _6888_toTpeGen;
              RAST._IType _out3136;
              _out3136 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6888_toTpeGen = _out3136;
              RAST._IExpr _6889_recursiveGen;
              DCOMP._IOwnership _6890_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6891_recIdents;
              RAST._IExpr _out3137;
              DCOMP._IOwnership _out3138;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3139;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3137, out _out3138, out _out3139);
              _6889_recursiveGen = _out3137;
              _6890_recOwned = _out3138;
              _6891_recIdents = _out3139;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6889_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6887_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6888_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3140;
              DCOMP._IOwnership _out3141;
              DCOMP.COMP.FromOwnership(r, _6890_recOwned, expectedOwnership, out _out3140, out _out3141);
              r = _out3140;
              resultingOwnership = _out3141;
              readIdents = _6891_recIdents;
            }
          } else if (_source249.is_Primitive) {
            DAST._IPrimitive _6892___mcc_h1342 = _source249.dtor_Primitive_a0;
            {
              RAST._IType _6893_fromTpeGen;
              RAST._IType _out3142;
              _out3142 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6893_fromTpeGen = _out3142;
              RAST._IType _6894_toTpeGen;
              RAST._IType _out3143;
              _out3143 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6894_toTpeGen = _out3143;
              RAST._IExpr _6895_recursiveGen;
              DCOMP._IOwnership _6896_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6897_recIdents;
              RAST._IExpr _out3144;
              DCOMP._IOwnership _out3145;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3146;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3144, out _out3145, out _out3146);
              _6895_recursiveGen = _out3144;
              _6896_recOwned = _out3145;
              _6897_recIdents = _out3146;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6895_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6893_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6894_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3147;
              DCOMP._IOwnership _out3148;
              DCOMP.COMP.FromOwnership(r, _6896_recOwned, expectedOwnership, out _out3147, out _out3148);
              r = _out3147;
              resultingOwnership = _out3148;
              readIdents = _6897_recIdents;
            }
          } else if (_source249.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _6898___mcc_h1344 = _source249.dtor_Passthrough_a0;
            {
              RAST._IType _6899_fromTpeGen;
              RAST._IType _out3149;
              _out3149 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6899_fromTpeGen = _out3149;
              RAST._IType _6900_toTpeGen;
              RAST._IType _out3150;
              _out3150 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6900_toTpeGen = _out3150;
              RAST._IExpr _6901_recursiveGen;
              DCOMP._IOwnership _6902_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6903_recIdents;
              RAST._IExpr _out3151;
              DCOMP._IOwnership _out3152;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3153;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3151, out _out3152, out _out3153);
              _6901_recursiveGen = _out3151;
              _6902_recOwned = _out3152;
              _6903_recIdents = _out3153;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6901_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6899_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6900_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3154;
              DCOMP._IOwnership _out3155;
              DCOMP.COMP.FromOwnership(r, _6902_recOwned, expectedOwnership, out _out3154, out _out3155);
              r = _out3154;
              resultingOwnership = _out3155;
              readIdents = _6903_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _6904___mcc_h1346 = _source249.dtor_TypeArg_a0;
            {
              RAST._IType _6905_fromTpeGen;
              RAST._IType _out3156;
              _out3156 = DCOMP.COMP.GenType(_3470_fromTpe, true, false);
              _6905_fromTpeGen = _out3156;
              RAST._IType _6906_toTpeGen;
              RAST._IType _out3157;
              _out3157 = DCOMP.COMP.GenType(_3471_toTpe, true, false);
              _6906_toTpeGen = _out3157;
              RAST._IExpr _6907_recursiveGen;
              DCOMP._IOwnership _6908_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6909_recIdents;
              RAST._IExpr _out3158;
              DCOMP._IOwnership _out3159;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3160;
              DCOMP.COMP.GenExpr(_3469_expr, selfIdent, env, expectedOwnership, out _out3158, out _out3159, out _out3160);
              _6907_recursiveGen = _out3158;
              _6908_recOwned = _out3159;
              _6909_recIdents = _out3160;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_6907_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_6905_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_6906_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out3161;
              DCOMP._IOwnership _out3162;
              DCOMP.COMP.FromOwnership(r, _6908_recOwned, expectedOwnership, out _out3161, out _out3162);
              r = _out3161;
              resultingOwnership = _out3162;
              readIdents = _6909_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source254 = e;
      if (_source254.is_Literal) {
        DAST._ILiteral _6910___mcc_h0 = _source254.dtor_Literal_a0;
        RAST._IExpr _out3163;
        DCOMP._IOwnership _out3164;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3165;
        DCOMP.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out3163, out _out3164, out _out3165);
        r = _out3163;
        resultingOwnership = _out3164;
        readIdents = _out3165;
      } else if (_source254.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _6911___mcc_h1 = _source254.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _6912_name = _6911___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _6913_rName;
          _6913_rName = DCOMP.__default.escapeIdent(_6912_name);
          r = RAST.Expr.create_Identifier(_6913_rName);
          Std.Wrappers._IOption<RAST._IType> _6914_tpe;
          _6914_tpe = (env).GetType(_6913_rName);
          Std.Wrappers._IOption<RAST._IType> _6915_placeboOpt;
          _6915_placeboOpt = (((_6914_tpe).is_Some) ? (((_6914_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _6916_currentlyBorrowed;
          _6916_currentlyBorrowed = (env).IsBorrowed(_6912_name);
          bool _6917_noNeedOfClone;
          _6917_noNeedOfClone = (env).HasCopySemantics(_6912_name);
          if ((_6915_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _6916_currentlyBorrowed = false;
            _6917_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
            if (!(_6917_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else if (_6916_currentlyBorrowed) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_6912_name);
          return ;
        }
      } else if (_source254.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6918___mcc_h2 = _source254.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6919_path = _6918___mcc_h2;
        {
          RAST._IExpr _out3166;
          _out3166 = DCOMP.COMP.GenPathExpr(_6919_path);
          r = _out3166;
          RAST._IExpr _out3167;
          DCOMP._IOwnership _out3168;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3167, out _out3168);
          r = _out3167;
          resultingOwnership = _out3168;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source254.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _6920___mcc_h3 = _source254.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _6921_values = _6920___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _6922_s;
          _6922_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _6923_i;
          _6923_i = BigInteger.Zero;
          while ((_6923_i) < (new BigInteger((_6921_values).Count))) {
            if ((_6923_i).Sign == 1) {
              _6922_s = Dafny.Sequence<Dafny.Rune>.Concat(_6922_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _6924_recursiveGen;
            DCOMP._IOwnership _6925___v106;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6926_recIdents;
            RAST._IExpr _out3169;
            DCOMP._IOwnership _out3170;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3171;
            DCOMP.COMP.GenExpr((_6921_values).Select(_6923_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3169, out _out3170, out _out3171);
            _6924_recursiveGen = _out3169;
            _6925___v106 = _out3170;
            _6926_recIdents = _out3171;
            _6922_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_6922_s, (_6924_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6926_recIdents);
            _6923_i = (_6923_i) + (BigInteger.One);
          }
          _6922_s = Dafny.Sequence<Dafny.Rune>.Concat(_6922_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_6922_s);
          RAST._IExpr _out3172;
          DCOMP._IOwnership _out3173;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3172, out _out3173);
          r = _out3172;
          resultingOwnership = _out3173;
          return ;
        }
      } else if (_source254.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6927___mcc_h4 = _source254.dtor_path;
        Dafny.ISequence<DAST._IType> _6928___mcc_h5 = _source254.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _6929___mcc_h6 = _source254.dtor_args;
        Dafny.ISequence<DAST._IExpression> _6930_args = _6929___mcc_h6;
        Dafny.ISequence<DAST._IType> _6931_typeArgs = _6928___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _6932_path = _6927___mcc_h4;
        {
          RAST._IExpr _out3174;
          _out3174 = DCOMP.COMP.GenPathExpr(_6932_path);
          r = _out3174;
          if ((new BigInteger((_6931_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _6933_typeExprs;
            _6933_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi13 = new BigInteger((_6931_typeArgs).Count);
            for (BigInteger _6934_i = BigInteger.Zero; _6934_i < _hi13; _6934_i++) {
              RAST._IType _6935_typeExpr;
              RAST._IType _out3175;
              _out3175 = DCOMP.COMP.GenType((_6931_typeArgs).Select(_6934_i), false, false);
              _6935_typeExpr = _out3175;
              _6933_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_6933_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_6935_typeExpr));
            }
            r = (r).ApplyType(_6933_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _6936_arguments;
          _6936_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi14 = new BigInteger((_6930_args).Count);
          for (BigInteger _6937_i = BigInteger.Zero; _6937_i < _hi14; _6937_i++) {
            RAST._IExpr _6938_recursiveGen;
            DCOMP._IOwnership _6939___v107;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6940_recIdents;
            RAST._IExpr _out3176;
            DCOMP._IOwnership _out3177;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3178;
            DCOMP.COMP.GenExpr((_6930_args).Select(_6937_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3176, out _out3177, out _out3178);
            _6938_recursiveGen = _out3176;
            _6939___v107 = _out3177;
            _6940_recIdents = _out3178;
            _6936_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_6936_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_6938_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6940_recIdents);
          }
          r = (r).Apply(_6936_arguments);
          RAST._IExpr _out3179;
          DCOMP._IOwnership _out3180;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3179, out _out3180);
          r = _out3179;
          resultingOwnership = _out3180;
          return ;
        }
      } else if (_source254.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _6941___mcc_h7 = _source254.dtor_dims;
        DAST._IType _6942___mcc_h8 = _source254.dtor_typ;
        DAST._IType _6943_typ = _6942___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _6944_dims = _6941___mcc_h7;
        {
          BigInteger _6945_i;
          _6945_i = (new BigInteger((_6944_dims).Count)) - (BigInteger.One);
          RAST._IType _6946_genTyp;
          RAST._IType _out3181;
          _out3181 = DCOMP.COMP.GenType(_6943_typ, false, false);
          _6946_genTyp = _out3181;
          Dafny.ISequence<Dafny.Rune> _6947_s;
          _6947_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_6946_genTyp)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_6945_i).Sign != -1) {
            RAST._IExpr _6948_recursiveGen;
            DCOMP._IOwnership _6949___v108;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6950_recIdents;
            RAST._IExpr _out3182;
            DCOMP._IOwnership _out3183;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3184;
            DCOMP.COMP.GenExpr((_6944_dims).Select(_6945_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3182, out _out3183, out _out3184);
            _6948_recursiveGen = _out3182;
            _6949___v108 = _out3183;
            _6950_recIdents = _out3184;
            _6947_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _6947_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_6948_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6950_recIdents);
            _6945_i = (_6945_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_6947_s);
          RAST._IExpr _out3185;
          DCOMP._IOwnership _out3186;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3185, out _out3186);
          r = _out3185;
          resultingOwnership = _out3186;
          return ;
        }
      } else if (_source254.is_DatatypeValue) {
        DAST._IDatatypeType _6951___mcc_h9 = _source254.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _6952___mcc_h10 = _source254.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _6953___mcc_h11 = _source254.dtor_variant;
        bool _6954___mcc_h12 = _source254.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _6955___mcc_h13 = _source254.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _6956_values = _6955___mcc_h13;
        bool _6957_isCo = _6954___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _6958_variant = _6953___mcc_h11;
        Dafny.ISequence<DAST._IType> _6959_typeArgs = _6952___mcc_h10;
        DAST._IDatatypeType _6960_datatypeType = _6951___mcc_h9;
        {
          RAST._IExpr _out3187;
          _out3187 = DCOMP.COMP.GenPathExpr((_6960_datatypeType).dtor_path);
          r = _out3187;
          Dafny.ISequence<RAST._IType> _6961_genTypeArgs;
          _6961_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi15 = new BigInteger((_6959_typeArgs).Count);
          for (BigInteger _6962_i = BigInteger.Zero; _6962_i < _hi15; _6962_i++) {
            RAST._IType _6963_typeExpr;
            RAST._IType _out3188;
            _out3188 = DCOMP.COMP.GenType((_6959_typeArgs).Select(_6962_i), false, false);
            _6963_typeExpr = _out3188;
            _6961_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_6961_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_6963_typeExpr));
          }
          if ((new BigInteger((_6959_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_6961_genTypeArgs);
          }
          r = (r).MSel(DCOMP.__default.escapeIdent(_6958_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _6964_assignments;
          _6964_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi16 = new BigInteger((_6956_values).Count);
          for (BigInteger _6965_i = BigInteger.Zero; _6965_i < _hi16; _6965_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs52 = (_6956_values).Select(_6965_i);
            Dafny.ISequence<Dafny.Rune> _6966_name = _let_tmp_rhs52.dtor__0;
            DAST._IExpression _6967_value = _let_tmp_rhs52.dtor__1;
            if (_6957_isCo) {
              RAST._IExpr _6968_recursiveGen;
              DCOMP._IOwnership _6969___v109;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6970_recIdents;
              RAST._IExpr _out3189;
              DCOMP._IOwnership _out3190;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3191;
              DCOMP.COMP.GenExpr(_6967_value, selfIdent, DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out3189, out _out3190, out _out3191);
              _6968_recursiveGen = _out3189;
              _6969___v109 = _out3190;
              _6970_recIdents = _out3191;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6970_recIdents);
              Dafny.ISequence<Dafny.Rune> _6971_allReadCloned;
              _6971_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_6970_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _6972_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_2 in (_6970_recIdents).Elements) {
                  _6972_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_2;
                  if ((_6970_recIdents).Contains(_6972_next)) {
                    goto after__ASSIGN_SUCH_THAT_2;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3035)");
              after__ASSIGN_SUCH_THAT_2: ;
                _6971_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_6971_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_6972_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_6972_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _6970_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_6970_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_6972_next));
              }
              Dafny.ISequence<Dafny.Rune> _6973_assigned;
              _6973_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _6971_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_6968_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _6964_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_6964_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_6966_name), RAST.Expr.create_RawExpr(_6973_assigned))));
            } else {
              RAST._IExpr _6974_recursiveGen;
              DCOMP._IOwnership _6975___v110;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6976_recIdents;
              RAST._IExpr _out3192;
              DCOMP._IOwnership _out3193;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3194;
              DCOMP.COMP.GenExpr(_6967_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3192, out _out3193, out _out3194);
              _6974_recursiveGen = _out3192;
              _6975___v110 = _out3193;
              _6976_recIdents = _out3194;
              _6964_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_6964_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_6966_name), _6974_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6976_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _6964_assignments);
          if (DCOMP.COMP.IsRcWrapped((_6960_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out3195;
          DCOMP._IOwnership _out3196;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3195, out _out3196);
          r = _out3195;
          resultingOwnership = _out3196;
          return ;
        }
      } else if (_source254.is_Convert) {
        DAST._IExpression _6977___mcc_h14 = _source254.dtor_value;
        DAST._IType _6978___mcc_h15 = _source254.dtor_from;
        DAST._IType _6979___mcc_h16 = _source254.dtor_typ;
        {
          RAST._IExpr _out3197;
          DCOMP._IOwnership _out3198;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3199;
          DCOMP.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out3197, out _out3198, out _out3199);
          r = _out3197;
          resultingOwnership = _out3198;
          readIdents = _out3199;
        }
      } else if (_source254.is_SeqConstruct) {
        DAST._IExpression _6980___mcc_h17 = _source254.dtor_length;
        DAST._IExpression _6981___mcc_h18 = _source254.dtor_elem;
        DAST._IExpression _6982_expr = _6981___mcc_h18;
        DAST._IExpression _6983_length = _6980___mcc_h17;
        {
          RAST._IExpr _6984_recursiveGen;
          DCOMP._IOwnership _6985___v114;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6986_recIdents;
          RAST._IExpr _out3200;
          DCOMP._IOwnership _out3201;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3202;
          DCOMP.COMP.GenExpr(_6982_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3200, out _out3201, out _out3202);
          _6984_recursiveGen = _out3200;
          _6985___v114 = _out3201;
          _6986_recIdents = _out3202;
          RAST._IExpr _6987_lengthGen;
          DCOMP._IOwnership _6988___v115;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6989_lengthIdents;
          RAST._IExpr _out3203;
          DCOMP._IOwnership _out3204;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3205;
          DCOMP.COMP.GenExpr(_6983_length, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3203, out _out3204, out _out3205);
          _6987_lengthGen = _out3203;
          _6988___v115 = _out3204;
          _6989_lengthIdents = _out3205;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_6984_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_6987_lengthGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_6986_recIdents, _6989_lengthIdents);
          RAST._IExpr _out3206;
          DCOMP._IOwnership _out3207;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3206, out _out3207);
          r = _out3206;
          resultingOwnership = _out3207;
          return ;
        }
      } else if (_source254.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _6990___mcc_h19 = _source254.dtor_elements;
        DAST._IType _6991___mcc_h20 = _source254.dtor_typ;
        DAST._IType _6992_typ = _6991___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _6993_exprs = _6990___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _6994_genTpe;
          RAST._IType _out3208;
          _out3208 = DCOMP.COMP.GenType(_6992_typ, false, false);
          _6994_genTpe = _out3208;
          BigInteger _6995_i;
          _6995_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _6996_args;
          _6996_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_6995_i) < (new BigInteger((_6993_exprs).Count))) {
            RAST._IExpr _6997_recursiveGen;
            DCOMP._IOwnership _6998___v116;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6999_recIdents;
            RAST._IExpr _out3209;
            DCOMP._IOwnership _out3210;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3211;
            DCOMP.COMP.GenExpr((_6993_exprs).Select(_6995_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3209, out _out3210, out _out3211);
            _6997_recursiveGen = _out3209;
            _6998___v116 = _out3210;
            _6999_recIdents = _out3211;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _6999_recIdents);
            _6996_args = Dafny.Sequence<RAST._IExpr>.Concat(_6996_args, Dafny.Sequence<RAST._IExpr>.FromElements(_6997_recursiveGen));
            _6995_i = (_6995_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_6996_args);
          if ((new BigInteger((_6996_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_6994_genTpe));
          }
          RAST._IExpr _out3212;
          DCOMP._IOwnership _out3213;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3212, out _out3213);
          r = _out3212;
          resultingOwnership = _out3213;
          return ;
        }
      } else if (_source254.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _7000___mcc_h21 = _source254.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _7001_exprs = _7000___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _7002_generatedValues;
          _7002_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7003_i;
          _7003_i = BigInteger.Zero;
          while ((_7003_i) < (new BigInteger((_7001_exprs).Count))) {
            RAST._IExpr _7004_recursiveGen;
            DCOMP._IOwnership _7005___v117;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7006_recIdents;
            RAST._IExpr _out3214;
            DCOMP._IOwnership _out3215;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3216;
            DCOMP.COMP.GenExpr((_7001_exprs).Select(_7003_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3214, out _out3215, out _out3216);
            _7004_recursiveGen = _out3214;
            _7005___v117 = _out3215;
            _7006_recIdents = _out3216;
            _7002_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_7002_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_7004_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7006_recIdents);
            _7003_i = (_7003_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_7002_generatedValues);
          RAST._IExpr _out3217;
          DCOMP._IOwnership _out3218;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3217, out _out3218);
          r = _out3217;
          resultingOwnership = _out3218;
          return ;
        }
      } else if (_source254.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _7007___mcc_h22 = _source254.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _7008_exprs = _7007___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _7009_generatedValues;
          _7009_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7010_i;
          _7010_i = BigInteger.Zero;
          while ((_7010_i) < (new BigInteger((_7008_exprs).Count))) {
            RAST._IExpr _7011_recursiveGen;
            DCOMP._IOwnership _7012___v118;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7013_recIdents;
            RAST._IExpr _out3219;
            DCOMP._IOwnership _out3220;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3221;
            DCOMP.COMP.GenExpr((_7008_exprs).Select(_7010_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3219, out _out3220, out _out3221);
            _7011_recursiveGen = _out3219;
            _7012___v118 = _out3220;
            _7013_recIdents = _out3221;
            _7009_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_7009_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_7011_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7013_recIdents);
            _7010_i = (_7010_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_7009_generatedValues);
          RAST._IExpr _out3222;
          DCOMP._IOwnership _out3223;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3222, out _out3223);
          r = _out3222;
          resultingOwnership = _out3223;
          return ;
        }
      } else if (_source254.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7014___mcc_h23 = _source254.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7015_mapElems = _7014___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _7016_generatedValues;
          _7016_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _7017_i;
          _7017_i = BigInteger.Zero;
          while ((_7017_i) < (new BigInteger((_7015_mapElems).Count))) {
            RAST._IExpr _7018_recursiveGenKey;
            DCOMP._IOwnership _7019___v120;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7020_recIdentsKey;
            RAST._IExpr _out3224;
            DCOMP._IOwnership _out3225;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3226;
            DCOMP.COMP.GenExpr(((_7015_mapElems).Select(_7017_i)).dtor__0, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3224, out _out3225, out _out3226);
            _7018_recursiveGenKey = _out3224;
            _7019___v120 = _out3225;
            _7020_recIdentsKey = _out3226;
            RAST._IExpr _7021_recursiveGenValue;
            DCOMP._IOwnership _7022___v121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7023_recIdentsValue;
            RAST._IExpr _out3227;
            DCOMP._IOwnership _out3228;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3229;
            DCOMP.COMP.GenExpr(((_7015_mapElems).Select(_7017_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3227, out _out3228, out _out3229);
            _7021_recursiveGenValue = _out3227;
            _7022___v121 = _out3228;
            _7023_recIdentsValue = _out3229;
            _7016_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_7016_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_7018_recursiveGenKey, _7021_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7020_recIdentsKey), _7023_recIdentsValue);
            _7017_i = (_7017_i) + (BigInteger.One);
          }
          _7017_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _7024_arguments;
          _7024_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_7017_i) < (new BigInteger((_7016_generatedValues).Count))) {
            RAST._IExpr _7025_genKey;
            _7025_genKey = ((_7016_generatedValues).Select(_7017_i)).dtor__0;
            RAST._IExpr _7026_genValue;
            _7026_genValue = ((_7016_generatedValues).Select(_7017_i)).dtor__1;
            _7024_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7024_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _7025_genKey, _7026_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _7017_i = (_7017_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_7024_arguments);
          RAST._IExpr _out3230;
          DCOMP._IOwnership _out3231;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3230, out _out3231);
          r = _out3230;
          resultingOwnership = _out3231;
          return ;
        }
      } else if (_source254.is_MapBuilder) {
        DAST._IType _7027___mcc_h24 = _source254.dtor_keyType;
        DAST._IType _7028___mcc_h25 = _source254.dtor_valueType;
        DAST._IType _7029_valueType = _7028___mcc_h25;
        DAST._IType _7030_keyType = _7027___mcc_h24;
        {
          RAST._IType _7031_kType;
          RAST._IType _out3232;
          _out3232 = DCOMP.COMP.GenType(_7030_keyType, false, false);
          _7031_kType = _out3232;
          RAST._IType _7032_vType;
          RAST._IType _out3233;
          _out3233 = DCOMP.COMP.GenType(_7029_valueType, false, false);
          _7032_vType = _out3233;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_7031_kType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_7032_vType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out3234;
          DCOMP._IOwnership _out3235;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3234, out _out3235);
          r = _out3234;
          resultingOwnership = _out3235;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source254.is_SeqUpdate) {
        DAST._IExpression _7033___mcc_h26 = _source254.dtor_expr;
        DAST._IExpression _7034___mcc_h27 = _source254.dtor_indexExpr;
        DAST._IExpression _7035___mcc_h28 = _source254.dtor_value;
        DAST._IExpression _7036_value = _7035___mcc_h28;
        DAST._IExpression _7037_index = _7034___mcc_h27;
        DAST._IExpression _7038_expr = _7033___mcc_h26;
        {
          RAST._IExpr _7039_exprR;
          DCOMP._IOwnership _7040___v122;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7041_exprIdents;
          RAST._IExpr _out3236;
          DCOMP._IOwnership _out3237;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3238;
          DCOMP.COMP.GenExpr(_7038_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3236, out _out3237, out _out3238);
          _7039_exprR = _out3236;
          _7040___v122 = _out3237;
          _7041_exprIdents = _out3238;
          RAST._IExpr _7042_indexR;
          DCOMP._IOwnership _7043_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7044_indexIdents;
          RAST._IExpr _out3239;
          DCOMP._IOwnership _out3240;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3241;
          DCOMP.COMP.GenExpr(_7037_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3239, out _out3240, out _out3241);
          _7042_indexR = _out3239;
          _7043_indexOwnership = _out3240;
          _7044_indexIdents = _out3241;
          RAST._IExpr _7045_valueR;
          DCOMP._IOwnership _7046_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7047_valueIdents;
          RAST._IExpr _out3242;
          DCOMP._IOwnership _out3243;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3244;
          DCOMP.COMP.GenExpr(_7036_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3242, out _out3243, out _out3244);
          _7045_valueR = _out3242;
          _7046_valueOwnership = _out3243;
          _7047_valueIdents = _out3244;
          r = ((_7039_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7042_indexR, _7045_valueR));
          RAST._IExpr _out3245;
          DCOMP._IOwnership _out3246;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3245, out _out3246);
          r = _out3245;
          resultingOwnership = _out3246;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7041_exprIdents, _7044_indexIdents), _7047_valueIdents);
          return ;
        }
      } else if (_source254.is_MapUpdate) {
        DAST._IExpression _7048___mcc_h29 = _source254.dtor_expr;
        DAST._IExpression _7049___mcc_h30 = _source254.dtor_indexExpr;
        DAST._IExpression _7050___mcc_h31 = _source254.dtor_value;
        DAST._IExpression _7051_value = _7050___mcc_h31;
        DAST._IExpression _7052_index = _7049___mcc_h30;
        DAST._IExpression _7053_expr = _7048___mcc_h29;
        {
          RAST._IExpr _7054_exprR;
          DCOMP._IOwnership _7055___v123;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7056_exprIdents;
          RAST._IExpr _out3247;
          DCOMP._IOwnership _out3248;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3249;
          DCOMP.COMP.GenExpr(_7053_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3247, out _out3248, out _out3249);
          _7054_exprR = _out3247;
          _7055___v123 = _out3248;
          _7056_exprIdents = _out3249;
          RAST._IExpr _7057_indexR;
          DCOMP._IOwnership _7058_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7059_indexIdents;
          RAST._IExpr _out3250;
          DCOMP._IOwnership _out3251;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3252;
          DCOMP.COMP.GenExpr(_7052_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3250, out _out3251, out _out3252);
          _7057_indexR = _out3250;
          _7058_indexOwnership = _out3251;
          _7059_indexIdents = _out3252;
          RAST._IExpr _7060_valueR;
          DCOMP._IOwnership _7061_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7062_valueIdents;
          RAST._IExpr _out3253;
          DCOMP._IOwnership _out3254;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3255;
          DCOMP.COMP.GenExpr(_7051_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3253, out _out3254, out _out3255);
          _7060_valueR = _out3253;
          _7061_valueOwnership = _out3254;
          _7062_valueIdents = _out3255;
          r = ((_7054_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_7057_indexR, _7060_valueR));
          RAST._IExpr _out3256;
          DCOMP._IOwnership _out3257;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3256, out _out3257);
          r = _out3256;
          resultingOwnership = _out3257;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7056_exprIdents, _7059_indexIdents), _7062_valueIdents);
          return ;
        }
      } else if (_source254.is_SetBuilder) {
        DAST._IType _7063___mcc_h32 = _source254.dtor_elemType;
        DAST._IType _7064_elemType = _7063___mcc_h32;
        {
          RAST._IType _7065_eType;
          RAST._IType _out3258;
          _out3258 = DCOMP.COMP.GenType(_7064_elemType, false, false);
          _7065_eType = _out3258;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_7065_eType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out3259;
          DCOMP._IOwnership _out3260;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3259, out _out3260);
          r = _out3259;
          resultingOwnership = _out3260;
          return ;
        }
      } else if (_source254.is_ToMultiset) {
        DAST._IExpression _7066___mcc_h33 = _source254.dtor_ToMultiset_a0;
        DAST._IExpression _7067_expr = _7066___mcc_h33;
        {
          RAST._IExpr _7068_recursiveGen;
          DCOMP._IOwnership _7069___v119;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7070_recIdents;
          RAST._IExpr _out3261;
          DCOMP._IOwnership _out3262;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3263;
          DCOMP.COMP.GenExpr(_7067_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3261, out _out3262, out _out3263);
          _7068_recursiveGen = _out3261;
          _7069___v119 = _out3262;
          _7070_recIdents = _out3263;
          r = ((_7068_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _7070_recIdents;
          RAST._IExpr _out3264;
          DCOMP._IOwnership _out3265;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3264, out _out3265);
          r = _out3264;
          resultingOwnership = _out3265;
          return ;
        }
      } else if (_source254.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source255 = selfIdent;
          if (_source255.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out3266;
              DCOMP._IOwnership _out3267;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3266, out _out3267);
              r = _out3266;
              resultingOwnership = _out3267;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _7071___mcc_h273 = _source255.dtor_value;
            Dafny.ISequence<Dafny.Rune> _7072_id = _7071___mcc_h273;
            {
              r = RAST.Expr.create_RawExpr(_7072_id);
              if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_7072_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_7072_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7072_id);
            }
          }
          return ;
        }
      } else if (_source254.is_Ite) {
        DAST._IExpression _7073___mcc_h34 = _source254.dtor_cond;
        DAST._IExpression _7074___mcc_h35 = _source254.dtor_thn;
        DAST._IExpression _7075___mcc_h36 = _source254.dtor_els;
        DAST._IExpression _7076_f = _7075___mcc_h36;
        DAST._IExpression _7077_t = _7074___mcc_h35;
        DAST._IExpression _7078_cond = _7073___mcc_h34;
        {
          RAST._IExpr _7079_cond;
          DCOMP._IOwnership _7080___v124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7081_recIdentsCond;
          RAST._IExpr _out3268;
          DCOMP._IOwnership _out3269;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3270;
          DCOMP.COMP.GenExpr(_7078_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3268, out _out3269, out _out3270);
          _7079_cond = _out3268;
          _7080___v124 = _out3269;
          _7081_recIdentsCond = _out3270;
          Dafny.ISequence<Dafny.Rune> _7082_condString;
          _7082_condString = (_7079_cond)._ToString(DCOMP.__default.IND);
          RAST._IExpr _7083___v125;
          DCOMP._IOwnership _7084_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7085___v126;
          RAST._IExpr _out3271;
          DCOMP._IOwnership _out3272;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3273;
          DCOMP.COMP.GenExpr(_7077_t, selfIdent, env, expectedOwnership, out _out3271, out _out3272, out _out3273);
          _7083___v125 = _out3271;
          _7084_tHasToBeOwned = _out3272;
          _7085___v126 = _out3273;
          RAST._IExpr _7086_fExpr;
          DCOMP._IOwnership _7087_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7088_recIdentsF;
          RAST._IExpr _out3274;
          DCOMP._IOwnership _out3275;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3276;
          DCOMP.COMP.GenExpr(_7076_f, selfIdent, env, _7084_tHasToBeOwned, out _out3274, out _out3275, out _out3276);
          _7086_fExpr = _out3274;
          _7087_fOwned = _out3275;
          _7088_recIdentsF = _out3276;
          Dafny.ISequence<Dafny.Rune> _7089_fString;
          _7089_fString = (_7086_fExpr)._ToString(DCOMP.__default.IND);
          RAST._IExpr _7090_tExpr;
          DCOMP._IOwnership _7091___v127;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7092_recIdentsT;
          RAST._IExpr _out3277;
          DCOMP._IOwnership _out3278;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3279;
          DCOMP.COMP.GenExpr(_7077_t, selfIdent, env, _7087_fOwned, out _out3277, out _out3278, out _out3279);
          _7090_tExpr = _out3277;
          _7091___v127 = _out3278;
          _7092_recIdentsT = _out3279;
          Dafny.ISequence<Dafny.Rune> _7093_tString;
          _7093_tString = (_7090_tExpr)._ToString(DCOMP.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _7082_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _7093_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _7089_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out3280;
          DCOMP._IOwnership _out3281;
          DCOMP.COMP.FromOwnership(r, _7087_fOwned, expectedOwnership, out _out3280, out _out3281);
          r = _out3280;
          resultingOwnership = _out3281;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7081_recIdentsCond, _7092_recIdentsT), _7088_recIdentsF);
          return ;
        }
      } else if (_source254.is_UnOp) {
        DAST._IUnaryOp _7094___mcc_h37 = _source254.dtor_unOp;
        DAST._IExpression _7095___mcc_h38 = _source254.dtor_expr;
        DAST.Format._IUnOpFormat _7096___mcc_h39 = _source254.dtor_format1;
        DAST._IUnaryOp _source256 = _7094___mcc_h37;
        if (_source256.is_Not) {
          DAST.Format._IUnOpFormat _7097_format = _7096___mcc_h39;
          DAST._IExpression _7098_e = _7095___mcc_h38;
          {
            RAST._IExpr _7099_recursiveGen;
            DCOMP._IOwnership _7100___v128;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7101_recIdents;
            RAST._IExpr _out3282;
            DCOMP._IOwnership _out3283;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3284;
            DCOMP.COMP.GenExpr(_7098_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3282, out _out3283, out _out3284);
            _7099_recursiveGen = _out3282;
            _7100___v128 = _out3283;
            _7101_recIdents = _out3284;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _7099_recursiveGen, _7097_format);
            RAST._IExpr _out3285;
            DCOMP._IOwnership _out3286;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3285, out _out3286);
            r = _out3285;
            resultingOwnership = _out3286;
            readIdents = _7101_recIdents;
            return ;
          }
        } else if (_source256.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _7102_format = _7096___mcc_h39;
          DAST._IExpression _7103_e = _7095___mcc_h38;
          {
            RAST._IExpr _7104_recursiveGen;
            DCOMP._IOwnership _7105___v129;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7106_recIdents;
            RAST._IExpr _out3287;
            DCOMP._IOwnership _out3288;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3289;
            DCOMP.COMP.GenExpr(_7103_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3287, out _out3288, out _out3289);
            _7104_recursiveGen = _out3287;
            _7105___v129 = _out3288;
            _7106_recIdents = _out3289;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _7104_recursiveGen, _7102_format);
            RAST._IExpr _out3290;
            DCOMP._IOwnership _out3291;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3290, out _out3291);
            r = _out3290;
            resultingOwnership = _out3291;
            readIdents = _7106_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _7107_format = _7096___mcc_h39;
          DAST._IExpression _7108_e = _7095___mcc_h38;
          {
            RAST._IExpr _7109_recursiveGen;
            DCOMP._IOwnership _7110_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7111_recIdents;
            RAST._IExpr _out3292;
            DCOMP._IOwnership _out3293;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3294;
            DCOMP.COMP.GenExpr(_7108_e, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3292, out _out3293, out _out3294);
            _7109_recursiveGen = _out3292;
            _7110_recOwned = _out3293;
            _7111_recIdents = _out3294;
            r = ((_7109_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out3295;
            DCOMP._IOwnership _out3296;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3295, out _out3296);
            r = _out3295;
            resultingOwnership = _out3296;
            readIdents = _7111_recIdents;
            return ;
          }
        }
      } else if (_source254.is_BinOp) {
        DAST._IBinOp _7112___mcc_h40 = _source254.dtor_op;
        DAST._IExpression _7113___mcc_h41 = _source254.dtor_left;
        DAST._IExpression _7114___mcc_h42 = _source254.dtor_right;
        DAST.Format._IBinOpFormat _7115___mcc_h43 = _source254.dtor_format2;
        RAST._IExpr _out3297;
        DCOMP._IOwnership _out3298;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3299;
        DCOMP.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out3297, out _out3298, out _out3299);
        r = _out3297;
        resultingOwnership = _out3298;
        readIdents = _out3299;
      } else if (_source254.is_ArrayLen) {
        DAST._IExpression _7116___mcc_h44 = _source254.dtor_expr;
        BigInteger _7117___mcc_h45 = _source254.dtor_dim;
        BigInteger _7118_dim = _7117___mcc_h45;
        DAST._IExpression _7119_expr = _7116___mcc_h44;
        {
          RAST._IExpr _7120_recursiveGen;
          DCOMP._IOwnership _7121___v134;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7122_recIdents;
          RAST._IExpr _out3300;
          DCOMP._IOwnership _out3301;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3302;
          DCOMP.COMP.GenExpr(_7119_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3300, out _out3301, out _out3302);
          _7120_recursiveGen = _out3300;
          _7121___v134 = _out3301;
          _7122_recIdents = _out3302;
          if ((_7118_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_7120_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _7123_s;
            _7123_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMP.__default.IND);
            BigInteger _7124_i;
            _7124_i = BigInteger.One;
            while ((_7124_i) < (_7118_dim)) {
              _7123_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _7123_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _7124_i = (_7124_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7120_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _7123_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out3303;
          DCOMP._IOwnership _out3304;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3303, out _out3304);
          r = _out3303;
          resultingOwnership = _out3304;
          readIdents = _7122_recIdents;
          return ;
        }
      } else if (_source254.is_MapKeys) {
        DAST._IExpression _7125___mcc_h46 = _source254.dtor_expr;
        DAST._IExpression _7126_expr = _7125___mcc_h46;
        {
          RAST._IExpr _7127_recursiveGen;
          DCOMP._IOwnership _7128___v135;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7129_recIdents;
          RAST._IExpr _out3305;
          DCOMP._IOwnership _out3306;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3307;
          DCOMP.COMP.GenExpr(_7126_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3305, out _out3306, out _out3307);
          _7127_recursiveGen = _out3305;
          _7128___v135 = _out3306;
          _7129_recIdents = _out3307;
          readIdents = _7129_recIdents;
          r = ((_7127_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3308;
          DCOMP._IOwnership _out3309;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3308, out _out3309);
          r = _out3308;
          resultingOwnership = _out3309;
          return ;
        }
      } else if (_source254.is_MapValues) {
        DAST._IExpression _7130___mcc_h47 = _source254.dtor_expr;
        DAST._IExpression _7131_expr = _7130___mcc_h47;
        {
          RAST._IExpr _7132_recursiveGen;
          DCOMP._IOwnership _7133___v136;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7134_recIdents;
          RAST._IExpr _out3310;
          DCOMP._IOwnership _out3311;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3312;
          DCOMP.COMP.GenExpr(_7131_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3310, out _out3311, out _out3312);
          _7132_recursiveGen = _out3310;
          _7133___v136 = _out3311;
          _7134_recIdents = _out3312;
          readIdents = _7134_recIdents;
          r = ((_7132_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out3313;
          DCOMP._IOwnership _out3314;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3313, out _out3314);
          r = _out3313;
          resultingOwnership = _out3314;
          return ;
        }
      } else if (_source254.is_Select) {
        DAST._IExpression _7135___mcc_h48 = _source254.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7136___mcc_h49 = _source254.dtor_field;
        bool _7137___mcc_h50 = _source254.dtor_isConstant;
        bool _7138___mcc_h51 = _source254.dtor_onDatatype;
        DAST._IExpression _source257 = _7135___mcc_h48;
        if (_source257.is_Literal) {
          DAST._ILiteral _7139___mcc_h52 = _source257.dtor_Literal_a0;
          bool _7140_isDatatype = _7138___mcc_h51;
          bool _7141_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7142_field = _7136___mcc_h49;
          DAST._IExpression _7143_on = _7135___mcc_h48;
          {
            RAST._IExpr _7144_onExpr;
            DCOMP._IOwnership _7145_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7146_recIdents;
            RAST._IExpr _out3315;
            DCOMP._IOwnership _out3316;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3317;
            DCOMP.COMP.GenExpr(_7143_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3315, out _out3316, out _out3317);
            _7144_onExpr = _out3315;
            _7145_onOwned = _out3316;
            _7146_recIdents = _out3317;
            if ((_7140_isDatatype) || (_7141_isConstant)) {
              r = ((_7144_onExpr).Sel(DCOMP.__default.escapeIdent(_7142_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3318;
              DCOMP._IOwnership _out3319;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3318, out _out3319);
              r = _out3318;
              resultingOwnership = _out3319;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7144_onExpr)).Sel(DCOMP.__default.escapeIdent(_7142_field));
              RAST._IExpr _out3320;
              DCOMP._IOwnership _out3321;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3320, out _out3321);
              r = _out3320;
              resultingOwnership = _out3321;
            }
            readIdents = _7146_recIdents;
            return ;
          }
        } else if (_source257.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _7147___mcc_h54 = _source257.dtor_Ident_a0;
          bool _7148_isDatatype = _7138___mcc_h51;
          bool _7149_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7150_field = _7136___mcc_h49;
          DAST._IExpression _7151_on = _7135___mcc_h48;
          {
            RAST._IExpr _7152_onExpr;
            DCOMP._IOwnership _7153_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7154_recIdents;
            RAST._IExpr _out3322;
            DCOMP._IOwnership _out3323;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3324;
            DCOMP.COMP.GenExpr(_7151_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3322, out _out3323, out _out3324);
            _7152_onExpr = _out3322;
            _7153_onOwned = _out3323;
            _7154_recIdents = _out3324;
            if ((_7148_isDatatype) || (_7149_isConstant)) {
              r = ((_7152_onExpr).Sel(DCOMP.__default.escapeIdent(_7150_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3325;
              DCOMP._IOwnership _out3326;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3325, out _out3326);
              r = _out3325;
              resultingOwnership = _out3326;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7152_onExpr)).Sel(DCOMP.__default.escapeIdent(_7150_field));
              RAST._IExpr _out3327;
              DCOMP._IOwnership _out3328;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3327, out _out3328);
              r = _out3327;
              resultingOwnership = _out3328;
            }
            readIdents = _7154_recIdents;
            return ;
          }
        } else if (_source257.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7155___mcc_h56 = _source257.dtor_Companion_a0;
          bool _7156_isDatatype = _7138___mcc_h51;
          bool _7157_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7158_field = _7136___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7159_c = _7155___mcc_h56;
          {
            RAST._IExpr _7160_onExpr;
            DCOMP._IOwnership _7161_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7162_recIdents;
            RAST._IExpr _out3329;
            DCOMP._IOwnership _out3330;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3331;
            DCOMP.COMP.GenExpr(DAST.Expression.create_Companion(_7159_c), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3329, out _out3330, out _out3331);
            _7160_onExpr = _out3329;
            _7161_onOwned = _out3330;
            _7162_recIdents = _out3331;
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_7160_onExpr)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent(_7158_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()")));
            RAST._IExpr _out3332;
            DCOMP._IOwnership _out3333;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3332, out _out3333);
            r = _out3332;
            resultingOwnership = _out3333;
            readIdents = _7162_recIdents;
            return ;
          }
        } else if (_source257.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _7163___mcc_h58 = _source257.dtor_Tuple_a0;
          bool _7164_isDatatype = _7138___mcc_h51;
          bool _7165_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7166_field = _7136___mcc_h49;
          DAST._IExpression _7167_on = _7135___mcc_h48;
          {
            RAST._IExpr _7168_onExpr;
            DCOMP._IOwnership _7169_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7170_recIdents;
            RAST._IExpr _out3334;
            DCOMP._IOwnership _out3335;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3336;
            DCOMP.COMP.GenExpr(_7167_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3334, out _out3335, out _out3336);
            _7168_onExpr = _out3334;
            _7169_onOwned = _out3335;
            _7170_recIdents = _out3336;
            if ((_7164_isDatatype) || (_7165_isConstant)) {
              r = ((_7168_onExpr).Sel(DCOMP.__default.escapeIdent(_7166_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3337;
              DCOMP._IOwnership _out3338;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3337, out _out3338);
              r = _out3337;
              resultingOwnership = _out3338;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7168_onExpr)).Sel(DCOMP.__default.escapeIdent(_7166_field));
              RAST._IExpr _out3339;
              DCOMP._IOwnership _out3340;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3339, out _out3340);
              r = _out3339;
              resultingOwnership = _out3340;
            }
            readIdents = _7170_recIdents;
            return ;
          }
        } else if (_source257.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7171___mcc_h60 = _source257.dtor_path;
          Dafny.ISequence<DAST._IType> _7172___mcc_h61 = _source257.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7173___mcc_h62 = _source257.dtor_args;
          bool _7174_isDatatype = _7138___mcc_h51;
          bool _7175_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7176_field = _7136___mcc_h49;
          DAST._IExpression _7177_on = _7135___mcc_h48;
          {
            RAST._IExpr _7178_onExpr;
            DCOMP._IOwnership _7179_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7180_recIdents;
            RAST._IExpr _out3341;
            DCOMP._IOwnership _out3342;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3343;
            DCOMP.COMP.GenExpr(_7177_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3341, out _out3342, out _out3343);
            _7178_onExpr = _out3341;
            _7179_onOwned = _out3342;
            _7180_recIdents = _out3343;
            if ((_7174_isDatatype) || (_7175_isConstant)) {
              r = ((_7178_onExpr).Sel(DCOMP.__default.escapeIdent(_7176_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3344;
              DCOMP._IOwnership _out3345;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3344, out _out3345);
              r = _out3344;
              resultingOwnership = _out3345;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7178_onExpr)).Sel(DCOMP.__default.escapeIdent(_7176_field));
              RAST._IExpr _out3346;
              DCOMP._IOwnership _out3347;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3346, out _out3347);
              r = _out3346;
              resultingOwnership = _out3347;
            }
            readIdents = _7180_recIdents;
            return ;
          }
        } else if (_source257.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _7181___mcc_h66 = _source257.dtor_dims;
          DAST._IType _7182___mcc_h67 = _source257.dtor_typ;
          bool _7183_isDatatype = _7138___mcc_h51;
          bool _7184_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7185_field = _7136___mcc_h49;
          DAST._IExpression _7186_on = _7135___mcc_h48;
          {
            RAST._IExpr _7187_onExpr;
            DCOMP._IOwnership _7188_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7189_recIdents;
            RAST._IExpr _out3348;
            DCOMP._IOwnership _out3349;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3350;
            DCOMP.COMP.GenExpr(_7186_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3348, out _out3349, out _out3350);
            _7187_onExpr = _out3348;
            _7188_onOwned = _out3349;
            _7189_recIdents = _out3350;
            if ((_7183_isDatatype) || (_7184_isConstant)) {
              r = ((_7187_onExpr).Sel(DCOMP.__default.escapeIdent(_7185_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3351;
              DCOMP._IOwnership _out3352;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3351, out _out3352);
              r = _out3351;
              resultingOwnership = _out3352;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7187_onExpr)).Sel(DCOMP.__default.escapeIdent(_7185_field));
              RAST._IExpr _out3353;
              DCOMP._IOwnership _out3354;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3353, out _out3354);
              r = _out3353;
              resultingOwnership = _out3354;
            }
            readIdents = _7189_recIdents;
            return ;
          }
        } else if (_source257.is_DatatypeValue) {
          DAST._IDatatypeType _7190___mcc_h70 = _source257.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _7191___mcc_h71 = _source257.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _7192___mcc_h72 = _source257.dtor_variant;
          bool _7193___mcc_h73 = _source257.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7194___mcc_h74 = _source257.dtor_contents;
          bool _7195_isDatatype = _7138___mcc_h51;
          bool _7196_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7197_field = _7136___mcc_h49;
          DAST._IExpression _7198_on = _7135___mcc_h48;
          {
            RAST._IExpr _7199_onExpr;
            DCOMP._IOwnership _7200_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7201_recIdents;
            RAST._IExpr _out3355;
            DCOMP._IOwnership _out3356;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3357;
            DCOMP.COMP.GenExpr(_7198_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3355, out _out3356, out _out3357);
            _7199_onExpr = _out3355;
            _7200_onOwned = _out3356;
            _7201_recIdents = _out3357;
            if ((_7195_isDatatype) || (_7196_isConstant)) {
              r = ((_7199_onExpr).Sel(DCOMP.__default.escapeIdent(_7197_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3358;
              DCOMP._IOwnership _out3359;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3358, out _out3359);
              r = _out3358;
              resultingOwnership = _out3359;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7199_onExpr)).Sel(DCOMP.__default.escapeIdent(_7197_field));
              RAST._IExpr _out3360;
              DCOMP._IOwnership _out3361;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3360, out _out3361);
              r = _out3360;
              resultingOwnership = _out3361;
            }
            readIdents = _7201_recIdents;
            return ;
          }
        } else if (_source257.is_Convert) {
          DAST._IExpression _7202___mcc_h80 = _source257.dtor_value;
          DAST._IType _7203___mcc_h81 = _source257.dtor_from;
          DAST._IType _7204___mcc_h82 = _source257.dtor_typ;
          bool _7205_isDatatype = _7138___mcc_h51;
          bool _7206_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7207_field = _7136___mcc_h49;
          DAST._IExpression _7208_on = _7135___mcc_h48;
          {
            RAST._IExpr _7209_onExpr;
            DCOMP._IOwnership _7210_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7211_recIdents;
            RAST._IExpr _out3362;
            DCOMP._IOwnership _out3363;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3364;
            DCOMP.COMP.GenExpr(_7208_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3362, out _out3363, out _out3364);
            _7209_onExpr = _out3362;
            _7210_onOwned = _out3363;
            _7211_recIdents = _out3364;
            if ((_7205_isDatatype) || (_7206_isConstant)) {
              r = ((_7209_onExpr).Sel(DCOMP.__default.escapeIdent(_7207_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3365;
              DCOMP._IOwnership _out3366;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3365, out _out3366);
              r = _out3365;
              resultingOwnership = _out3366;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7209_onExpr)).Sel(DCOMP.__default.escapeIdent(_7207_field));
              RAST._IExpr _out3367;
              DCOMP._IOwnership _out3368;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3367, out _out3368);
              r = _out3367;
              resultingOwnership = _out3368;
            }
            readIdents = _7211_recIdents;
            return ;
          }
        } else if (_source257.is_SeqConstruct) {
          DAST._IExpression _7212___mcc_h86 = _source257.dtor_length;
          DAST._IExpression _7213___mcc_h87 = _source257.dtor_elem;
          bool _7214_isDatatype = _7138___mcc_h51;
          bool _7215_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7216_field = _7136___mcc_h49;
          DAST._IExpression _7217_on = _7135___mcc_h48;
          {
            RAST._IExpr _7218_onExpr;
            DCOMP._IOwnership _7219_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7220_recIdents;
            RAST._IExpr _out3369;
            DCOMP._IOwnership _out3370;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3371;
            DCOMP.COMP.GenExpr(_7217_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3369, out _out3370, out _out3371);
            _7218_onExpr = _out3369;
            _7219_onOwned = _out3370;
            _7220_recIdents = _out3371;
            if ((_7214_isDatatype) || (_7215_isConstant)) {
              r = ((_7218_onExpr).Sel(DCOMP.__default.escapeIdent(_7216_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3372;
              DCOMP._IOwnership _out3373;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3372, out _out3373);
              r = _out3372;
              resultingOwnership = _out3373;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7218_onExpr)).Sel(DCOMP.__default.escapeIdent(_7216_field));
              RAST._IExpr _out3374;
              DCOMP._IOwnership _out3375;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3374, out _out3375);
              r = _out3374;
              resultingOwnership = _out3375;
            }
            readIdents = _7220_recIdents;
            return ;
          }
        } else if (_source257.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _7221___mcc_h90 = _source257.dtor_elements;
          DAST._IType _7222___mcc_h91 = _source257.dtor_typ;
          bool _7223_isDatatype = _7138___mcc_h51;
          bool _7224_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7225_field = _7136___mcc_h49;
          DAST._IExpression _7226_on = _7135___mcc_h48;
          {
            RAST._IExpr _7227_onExpr;
            DCOMP._IOwnership _7228_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7229_recIdents;
            RAST._IExpr _out3376;
            DCOMP._IOwnership _out3377;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3378;
            DCOMP.COMP.GenExpr(_7226_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3376, out _out3377, out _out3378);
            _7227_onExpr = _out3376;
            _7228_onOwned = _out3377;
            _7229_recIdents = _out3378;
            if ((_7223_isDatatype) || (_7224_isConstant)) {
              r = ((_7227_onExpr).Sel(DCOMP.__default.escapeIdent(_7225_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3379;
              DCOMP._IOwnership _out3380;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3379, out _out3380);
              r = _out3379;
              resultingOwnership = _out3380;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7227_onExpr)).Sel(DCOMP.__default.escapeIdent(_7225_field));
              RAST._IExpr _out3381;
              DCOMP._IOwnership _out3382;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3381, out _out3382);
              r = _out3381;
              resultingOwnership = _out3382;
            }
            readIdents = _7229_recIdents;
            return ;
          }
        } else if (_source257.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _7230___mcc_h94 = _source257.dtor_elements;
          bool _7231_isDatatype = _7138___mcc_h51;
          bool _7232_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7233_field = _7136___mcc_h49;
          DAST._IExpression _7234_on = _7135___mcc_h48;
          {
            RAST._IExpr _7235_onExpr;
            DCOMP._IOwnership _7236_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7237_recIdents;
            RAST._IExpr _out3383;
            DCOMP._IOwnership _out3384;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3385;
            DCOMP.COMP.GenExpr(_7234_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3383, out _out3384, out _out3385);
            _7235_onExpr = _out3383;
            _7236_onOwned = _out3384;
            _7237_recIdents = _out3385;
            if ((_7231_isDatatype) || (_7232_isConstant)) {
              r = ((_7235_onExpr).Sel(DCOMP.__default.escapeIdent(_7233_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3386;
              DCOMP._IOwnership _out3387;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3386, out _out3387);
              r = _out3386;
              resultingOwnership = _out3387;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7235_onExpr)).Sel(DCOMP.__default.escapeIdent(_7233_field));
              RAST._IExpr _out3388;
              DCOMP._IOwnership _out3389;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3388, out _out3389);
              r = _out3388;
              resultingOwnership = _out3389;
            }
            readIdents = _7237_recIdents;
            return ;
          }
        } else if (_source257.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _7238___mcc_h96 = _source257.dtor_elements;
          bool _7239_isDatatype = _7138___mcc_h51;
          bool _7240_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7241_field = _7136___mcc_h49;
          DAST._IExpression _7242_on = _7135___mcc_h48;
          {
            RAST._IExpr _7243_onExpr;
            DCOMP._IOwnership _7244_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7245_recIdents;
            RAST._IExpr _out3390;
            DCOMP._IOwnership _out3391;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3392;
            DCOMP.COMP.GenExpr(_7242_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3390, out _out3391, out _out3392);
            _7243_onExpr = _out3390;
            _7244_onOwned = _out3391;
            _7245_recIdents = _out3392;
            if ((_7239_isDatatype) || (_7240_isConstant)) {
              r = ((_7243_onExpr).Sel(DCOMP.__default.escapeIdent(_7241_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3393;
              DCOMP._IOwnership _out3394;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3393, out _out3394);
              r = _out3393;
              resultingOwnership = _out3394;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7243_onExpr)).Sel(DCOMP.__default.escapeIdent(_7241_field));
              RAST._IExpr _out3395;
              DCOMP._IOwnership _out3396;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3395, out _out3396);
              r = _out3395;
              resultingOwnership = _out3396;
            }
            readIdents = _7245_recIdents;
            return ;
          }
        } else if (_source257.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7246___mcc_h98 = _source257.dtor_mapElems;
          bool _7247_isDatatype = _7138___mcc_h51;
          bool _7248_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7249_field = _7136___mcc_h49;
          DAST._IExpression _7250_on = _7135___mcc_h48;
          {
            RAST._IExpr _7251_onExpr;
            DCOMP._IOwnership _7252_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7253_recIdents;
            RAST._IExpr _out3397;
            DCOMP._IOwnership _out3398;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3399;
            DCOMP.COMP.GenExpr(_7250_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3397, out _out3398, out _out3399);
            _7251_onExpr = _out3397;
            _7252_onOwned = _out3398;
            _7253_recIdents = _out3399;
            if ((_7247_isDatatype) || (_7248_isConstant)) {
              r = ((_7251_onExpr).Sel(DCOMP.__default.escapeIdent(_7249_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3400;
              DCOMP._IOwnership _out3401;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3400, out _out3401);
              r = _out3400;
              resultingOwnership = _out3401;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7251_onExpr)).Sel(DCOMP.__default.escapeIdent(_7249_field));
              RAST._IExpr _out3402;
              DCOMP._IOwnership _out3403;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3402, out _out3403);
              r = _out3402;
              resultingOwnership = _out3403;
            }
            readIdents = _7253_recIdents;
            return ;
          }
        } else if (_source257.is_MapBuilder) {
          DAST._IType _7254___mcc_h100 = _source257.dtor_keyType;
          DAST._IType _7255___mcc_h101 = _source257.dtor_valueType;
          bool _7256_isDatatype = _7138___mcc_h51;
          bool _7257_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7258_field = _7136___mcc_h49;
          DAST._IExpression _7259_on = _7135___mcc_h48;
          {
            RAST._IExpr _7260_onExpr;
            DCOMP._IOwnership _7261_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7262_recIdents;
            RAST._IExpr _out3404;
            DCOMP._IOwnership _out3405;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3406;
            DCOMP.COMP.GenExpr(_7259_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3404, out _out3405, out _out3406);
            _7260_onExpr = _out3404;
            _7261_onOwned = _out3405;
            _7262_recIdents = _out3406;
            if ((_7256_isDatatype) || (_7257_isConstant)) {
              r = ((_7260_onExpr).Sel(DCOMP.__default.escapeIdent(_7258_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3407;
              DCOMP._IOwnership _out3408;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3407, out _out3408);
              r = _out3407;
              resultingOwnership = _out3408;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7260_onExpr)).Sel(DCOMP.__default.escapeIdent(_7258_field));
              RAST._IExpr _out3409;
              DCOMP._IOwnership _out3410;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3409, out _out3410);
              r = _out3409;
              resultingOwnership = _out3410;
            }
            readIdents = _7262_recIdents;
            return ;
          }
        } else if (_source257.is_SeqUpdate) {
          DAST._IExpression _7263___mcc_h104 = _source257.dtor_expr;
          DAST._IExpression _7264___mcc_h105 = _source257.dtor_indexExpr;
          DAST._IExpression _7265___mcc_h106 = _source257.dtor_value;
          bool _7266_isDatatype = _7138___mcc_h51;
          bool _7267_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7268_field = _7136___mcc_h49;
          DAST._IExpression _7269_on = _7135___mcc_h48;
          {
            RAST._IExpr _7270_onExpr;
            DCOMP._IOwnership _7271_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7272_recIdents;
            RAST._IExpr _out3411;
            DCOMP._IOwnership _out3412;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3413;
            DCOMP.COMP.GenExpr(_7269_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3411, out _out3412, out _out3413);
            _7270_onExpr = _out3411;
            _7271_onOwned = _out3412;
            _7272_recIdents = _out3413;
            if ((_7266_isDatatype) || (_7267_isConstant)) {
              r = ((_7270_onExpr).Sel(DCOMP.__default.escapeIdent(_7268_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3414;
              DCOMP._IOwnership _out3415;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3414, out _out3415);
              r = _out3414;
              resultingOwnership = _out3415;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7270_onExpr)).Sel(DCOMP.__default.escapeIdent(_7268_field));
              RAST._IExpr _out3416;
              DCOMP._IOwnership _out3417;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3416, out _out3417);
              r = _out3416;
              resultingOwnership = _out3417;
            }
            readIdents = _7272_recIdents;
            return ;
          }
        } else if (_source257.is_MapUpdate) {
          DAST._IExpression _7273___mcc_h110 = _source257.dtor_expr;
          DAST._IExpression _7274___mcc_h111 = _source257.dtor_indexExpr;
          DAST._IExpression _7275___mcc_h112 = _source257.dtor_value;
          bool _7276_isDatatype = _7138___mcc_h51;
          bool _7277_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7278_field = _7136___mcc_h49;
          DAST._IExpression _7279_on = _7135___mcc_h48;
          {
            RAST._IExpr _7280_onExpr;
            DCOMP._IOwnership _7281_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7282_recIdents;
            RAST._IExpr _out3418;
            DCOMP._IOwnership _out3419;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3420;
            DCOMP.COMP.GenExpr(_7279_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3418, out _out3419, out _out3420);
            _7280_onExpr = _out3418;
            _7281_onOwned = _out3419;
            _7282_recIdents = _out3420;
            if ((_7276_isDatatype) || (_7277_isConstant)) {
              r = ((_7280_onExpr).Sel(DCOMP.__default.escapeIdent(_7278_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3421;
              DCOMP._IOwnership _out3422;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3421, out _out3422);
              r = _out3421;
              resultingOwnership = _out3422;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7280_onExpr)).Sel(DCOMP.__default.escapeIdent(_7278_field));
              RAST._IExpr _out3423;
              DCOMP._IOwnership _out3424;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3423, out _out3424);
              r = _out3423;
              resultingOwnership = _out3424;
            }
            readIdents = _7282_recIdents;
            return ;
          }
        } else if (_source257.is_SetBuilder) {
          DAST._IType _7283___mcc_h116 = _source257.dtor_elemType;
          bool _7284_isDatatype = _7138___mcc_h51;
          bool _7285_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7286_field = _7136___mcc_h49;
          DAST._IExpression _7287_on = _7135___mcc_h48;
          {
            RAST._IExpr _7288_onExpr;
            DCOMP._IOwnership _7289_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7290_recIdents;
            RAST._IExpr _out3425;
            DCOMP._IOwnership _out3426;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3427;
            DCOMP.COMP.GenExpr(_7287_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3425, out _out3426, out _out3427);
            _7288_onExpr = _out3425;
            _7289_onOwned = _out3426;
            _7290_recIdents = _out3427;
            if ((_7284_isDatatype) || (_7285_isConstant)) {
              r = ((_7288_onExpr).Sel(DCOMP.__default.escapeIdent(_7286_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3428;
              DCOMP._IOwnership _out3429;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3428, out _out3429);
              r = _out3428;
              resultingOwnership = _out3429;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7288_onExpr)).Sel(DCOMP.__default.escapeIdent(_7286_field));
              RAST._IExpr _out3430;
              DCOMP._IOwnership _out3431;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3430, out _out3431);
              r = _out3430;
              resultingOwnership = _out3431;
            }
            readIdents = _7290_recIdents;
            return ;
          }
        } else if (_source257.is_ToMultiset) {
          DAST._IExpression _7291___mcc_h118 = _source257.dtor_ToMultiset_a0;
          bool _7292_isDatatype = _7138___mcc_h51;
          bool _7293_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7294_field = _7136___mcc_h49;
          DAST._IExpression _7295_on = _7135___mcc_h48;
          {
            RAST._IExpr _7296_onExpr;
            DCOMP._IOwnership _7297_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7298_recIdents;
            RAST._IExpr _out3432;
            DCOMP._IOwnership _out3433;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3434;
            DCOMP.COMP.GenExpr(_7295_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3432, out _out3433, out _out3434);
            _7296_onExpr = _out3432;
            _7297_onOwned = _out3433;
            _7298_recIdents = _out3434;
            if ((_7292_isDatatype) || (_7293_isConstant)) {
              r = ((_7296_onExpr).Sel(DCOMP.__default.escapeIdent(_7294_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3435;
              DCOMP._IOwnership _out3436;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3435, out _out3436);
              r = _out3435;
              resultingOwnership = _out3436;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7296_onExpr)).Sel(DCOMP.__default.escapeIdent(_7294_field));
              RAST._IExpr _out3437;
              DCOMP._IOwnership _out3438;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3437, out _out3438);
              r = _out3437;
              resultingOwnership = _out3438;
            }
            readIdents = _7298_recIdents;
            return ;
          }
        } else if (_source257.is_This) {
          bool _7299_isDatatype = _7138___mcc_h51;
          bool _7300_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7301_field = _7136___mcc_h49;
          DAST._IExpression _7302_on = _7135___mcc_h48;
          {
            RAST._IExpr _7303_onExpr;
            DCOMP._IOwnership _7304_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7305_recIdents;
            RAST._IExpr _out3439;
            DCOMP._IOwnership _out3440;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3441;
            DCOMP.COMP.GenExpr(_7302_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3439, out _out3440, out _out3441);
            _7303_onExpr = _out3439;
            _7304_onOwned = _out3440;
            _7305_recIdents = _out3441;
            if ((_7299_isDatatype) || (_7300_isConstant)) {
              r = ((_7303_onExpr).Sel(DCOMP.__default.escapeIdent(_7301_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3442;
              DCOMP._IOwnership _out3443;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3442, out _out3443);
              r = _out3442;
              resultingOwnership = _out3443;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7303_onExpr)).Sel(DCOMP.__default.escapeIdent(_7301_field));
              RAST._IExpr _out3444;
              DCOMP._IOwnership _out3445;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3444, out _out3445);
              r = _out3444;
              resultingOwnership = _out3445;
            }
            readIdents = _7305_recIdents;
            return ;
          }
        } else if (_source257.is_Ite) {
          DAST._IExpression _7306___mcc_h120 = _source257.dtor_cond;
          DAST._IExpression _7307___mcc_h121 = _source257.dtor_thn;
          DAST._IExpression _7308___mcc_h122 = _source257.dtor_els;
          bool _7309_isDatatype = _7138___mcc_h51;
          bool _7310_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7311_field = _7136___mcc_h49;
          DAST._IExpression _7312_on = _7135___mcc_h48;
          {
            RAST._IExpr _7313_onExpr;
            DCOMP._IOwnership _7314_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7315_recIdents;
            RAST._IExpr _out3446;
            DCOMP._IOwnership _out3447;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3448;
            DCOMP.COMP.GenExpr(_7312_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3446, out _out3447, out _out3448);
            _7313_onExpr = _out3446;
            _7314_onOwned = _out3447;
            _7315_recIdents = _out3448;
            if ((_7309_isDatatype) || (_7310_isConstant)) {
              r = ((_7313_onExpr).Sel(DCOMP.__default.escapeIdent(_7311_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3449;
              DCOMP._IOwnership _out3450;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3449, out _out3450);
              r = _out3449;
              resultingOwnership = _out3450;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7313_onExpr)).Sel(DCOMP.__default.escapeIdent(_7311_field));
              RAST._IExpr _out3451;
              DCOMP._IOwnership _out3452;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3451, out _out3452);
              r = _out3451;
              resultingOwnership = _out3452;
            }
            readIdents = _7315_recIdents;
            return ;
          }
        } else if (_source257.is_UnOp) {
          DAST._IUnaryOp _7316___mcc_h126 = _source257.dtor_unOp;
          DAST._IExpression _7317___mcc_h127 = _source257.dtor_expr;
          DAST.Format._IUnOpFormat _7318___mcc_h128 = _source257.dtor_format1;
          bool _7319_isDatatype = _7138___mcc_h51;
          bool _7320_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7321_field = _7136___mcc_h49;
          DAST._IExpression _7322_on = _7135___mcc_h48;
          {
            RAST._IExpr _7323_onExpr;
            DCOMP._IOwnership _7324_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7325_recIdents;
            RAST._IExpr _out3453;
            DCOMP._IOwnership _out3454;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3455;
            DCOMP.COMP.GenExpr(_7322_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3453, out _out3454, out _out3455);
            _7323_onExpr = _out3453;
            _7324_onOwned = _out3454;
            _7325_recIdents = _out3455;
            if ((_7319_isDatatype) || (_7320_isConstant)) {
              r = ((_7323_onExpr).Sel(DCOMP.__default.escapeIdent(_7321_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3456;
              DCOMP._IOwnership _out3457;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3456, out _out3457);
              r = _out3456;
              resultingOwnership = _out3457;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7323_onExpr)).Sel(DCOMP.__default.escapeIdent(_7321_field));
              RAST._IExpr _out3458;
              DCOMP._IOwnership _out3459;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3458, out _out3459);
              r = _out3458;
              resultingOwnership = _out3459;
            }
            readIdents = _7325_recIdents;
            return ;
          }
        } else if (_source257.is_BinOp) {
          DAST._IBinOp _7326___mcc_h132 = _source257.dtor_op;
          DAST._IExpression _7327___mcc_h133 = _source257.dtor_left;
          DAST._IExpression _7328___mcc_h134 = _source257.dtor_right;
          DAST.Format._IBinOpFormat _7329___mcc_h135 = _source257.dtor_format2;
          bool _7330_isDatatype = _7138___mcc_h51;
          bool _7331_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7332_field = _7136___mcc_h49;
          DAST._IExpression _7333_on = _7135___mcc_h48;
          {
            RAST._IExpr _7334_onExpr;
            DCOMP._IOwnership _7335_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7336_recIdents;
            RAST._IExpr _out3460;
            DCOMP._IOwnership _out3461;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3462;
            DCOMP.COMP.GenExpr(_7333_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3460, out _out3461, out _out3462);
            _7334_onExpr = _out3460;
            _7335_onOwned = _out3461;
            _7336_recIdents = _out3462;
            if ((_7330_isDatatype) || (_7331_isConstant)) {
              r = ((_7334_onExpr).Sel(DCOMP.__default.escapeIdent(_7332_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3463;
              DCOMP._IOwnership _out3464;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3463, out _out3464);
              r = _out3463;
              resultingOwnership = _out3464;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7334_onExpr)).Sel(DCOMP.__default.escapeIdent(_7332_field));
              RAST._IExpr _out3465;
              DCOMP._IOwnership _out3466;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3465, out _out3466);
              r = _out3465;
              resultingOwnership = _out3466;
            }
            readIdents = _7336_recIdents;
            return ;
          }
        } else if (_source257.is_ArrayLen) {
          DAST._IExpression _7337___mcc_h140 = _source257.dtor_expr;
          BigInteger _7338___mcc_h141 = _source257.dtor_dim;
          bool _7339_isDatatype = _7138___mcc_h51;
          bool _7340_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7341_field = _7136___mcc_h49;
          DAST._IExpression _7342_on = _7135___mcc_h48;
          {
            RAST._IExpr _7343_onExpr;
            DCOMP._IOwnership _7344_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7345_recIdents;
            RAST._IExpr _out3467;
            DCOMP._IOwnership _out3468;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3469;
            DCOMP.COMP.GenExpr(_7342_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3467, out _out3468, out _out3469);
            _7343_onExpr = _out3467;
            _7344_onOwned = _out3468;
            _7345_recIdents = _out3469;
            if ((_7339_isDatatype) || (_7340_isConstant)) {
              r = ((_7343_onExpr).Sel(DCOMP.__default.escapeIdent(_7341_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3470;
              DCOMP._IOwnership _out3471;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3470, out _out3471);
              r = _out3470;
              resultingOwnership = _out3471;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7343_onExpr)).Sel(DCOMP.__default.escapeIdent(_7341_field));
              RAST._IExpr _out3472;
              DCOMP._IOwnership _out3473;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3472, out _out3473);
              r = _out3472;
              resultingOwnership = _out3473;
            }
            readIdents = _7345_recIdents;
            return ;
          }
        } else if (_source257.is_MapKeys) {
          DAST._IExpression _7346___mcc_h144 = _source257.dtor_expr;
          bool _7347_isDatatype = _7138___mcc_h51;
          bool _7348_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7349_field = _7136___mcc_h49;
          DAST._IExpression _7350_on = _7135___mcc_h48;
          {
            RAST._IExpr _7351_onExpr;
            DCOMP._IOwnership _7352_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7353_recIdents;
            RAST._IExpr _out3474;
            DCOMP._IOwnership _out3475;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3476;
            DCOMP.COMP.GenExpr(_7350_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3474, out _out3475, out _out3476);
            _7351_onExpr = _out3474;
            _7352_onOwned = _out3475;
            _7353_recIdents = _out3476;
            if ((_7347_isDatatype) || (_7348_isConstant)) {
              r = ((_7351_onExpr).Sel(DCOMP.__default.escapeIdent(_7349_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3477;
              DCOMP._IOwnership _out3478;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3477, out _out3478);
              r = _out3477;
              resultingOwnership = _out3478;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7351_onExpr)).Sel(DCOMP.__default.escapeIdent(_7349_field));
              RAST._IExpr _out3479;
              DCOMP._IOwnership _out3480;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3479, out _out3480);
              r = _out3479;
              resultingOwnership = _out3480;
            }
            readIdents = _7353_recIdents;
            return ;
          }
        } else if (_source257.is_MapValues) {
          DAST._IExpression _7354___mcc_h146 = _source257.dtor_expr;
          bool _7355_isDatatype = _7138___mcc_h51;
          bool _7356_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7357_field = _7136___mcc_h49;
          DAST._IExpression _7358_on = _7135___mcc_h48;
          {
            RAST._IExpr _7359_onExpr;
            DCOMP._IOwnership _7360_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7361_recIdents;
            RAST._IExpr _out3481;
            DCOMP._IOwnership _out3482;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3483;
            DCOMP.COMP.GenExpr(_7358_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3481, out _out3482, out _out3483);
            _7359_onExpr = _out3481;
            _7360_onOwned = _out3482;
            _7361_recIdents = _out3483;
            if ((_7355_isDatatype) || (_7356_isConstant)) {
              r = ((_7359_onExpr).Sel(DCOMP.__default.escapeIdent(_7357_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3484;
              DCOMP._IOwnership _out3485;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3484, out _out3485);
              r = _out3484;
              resultingOwnership = _out3485;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7359_onExpr)).Sel(DCOMP.__default.escapeIdent(_7357_field));
              RAST._IExpr _out3486;
              DCOMP._IOwnership _out3487;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3486, out _out3487);
              r = _out3486;
              resultingOwnership = _out3487;
            }
            readIdents = _7361_recIdents;
            return ;
          }
        } else if (_source257.is_Select) {
          DAST._IExpression _7362___mcc_h148 = _source257.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7363___mcc_h149 = _source257.dtor_field;
          bool _7364___mcc_h150 = _source257.dtor_isConstant;
          bool _7365___mcc_h151 = _source257.dtor_onDatatype;
          bool _7366_isDatatype = _7138___mcc_h51;
          bool _7367_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7368_field = _7136___mcc_h49;
          DAST._IExpression _7369_on = _7135___mcc_h48;
          {
            RAST._IExpr _7370_onExpr;
            DCOMP._IOwnership _7371_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7372_recIdents;
            RAST._IExpr _out3488;
            DCOMP._IOwnership _out3489;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3490;
            DCOMP.COMP.GenExpr(_7369_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3488, out _out3489, out _out3490);
            _7370_onExpr = _out3488;
            _7371_onOwned = _out3489;
            _7372_recIdents = _out3490;
            if ((_7366_isDatatype) || (_7367_isConstant)) {
              r = ((_7370_onExpr).Sel(DCOMP.__default.escapeIdent(_7368_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3491;
              DCOMP._IOwnership _out3492;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3491, out _out3492);
              r = _out3491;
              resultingOwnership = _out3492;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7370_onExpr)).Sel(DCOMP.__default.escapeIdent(_7368_field));
              RAST._IExpr _out3493;
              DCOMP._IOwnership _out3494;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3493, out _out3494);
              r = _out3493;
              resultingOwnership = _out3494;
            }
            readIdents = _7372_recIdents;
            return ;
          }
        } else if (_source257.is_SelectFn) {
          DAST._IExpression _7373___mcc_h156 = _source257.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _7374___mcc_h157 = _source257.dtor_field;
          bool _7375___mcc_h158 = _source257.dtor_onDatatype;
          bool _7376___mcc_h159 = _source257.dtor_isStatic;
          BigInteger _7377___mcc_h160 = _source257.dtor_arity;
          bool _7378_isDatatype = _7138___mcc_h51;
          bool _7379_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7380_field = _7136___mcc_h49;
          DAST._IExpression _7381_on = _7135___mcc_h48;
          {
            RAST._IExpr _7382_onExpr;
            DCOMP._IOwnership _7383_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7384_recIdents;
            RAST._IExpr _out3495;
            DCOMP._IOwnership _out3496;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3497;
            DCOMP.COMP.GenExpr(_7381_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3495, out _out3496, out _out3497);
            _7382_onExpr = _out3495;
            _7383_onOwned = _out3496;
            _7384_recIdents = _out3497;
            if ((_7378_isDatatype) || (_7379_isConstant)) {
              r = ((_7382_onExpr).Sel(DCOMP.__default.escapeIdent(_7380_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3498;
              DCOMP._IOwnership _out3499;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3498, out _out3499);
              r = _out3498;
              resultingOwnership = _out3499;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7382_onExpr)).Sel(DCOMP.__default.escapeIdent(_7380_field));
              RAST._IExpr _out3500;
              DCOMP._IOwnership _out3501;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3500, out _out3501);
              r = _out3500;
              resultingOwnership = _out3501;
            }
            readIdents = _7384_recIdents;
            return ;
          }
        } else if (_source257.is_Index) {
          DAST._IExpression _7385___mcc_h166 = _source257.dtor_expr;
          DAST._ICollKind _7386___mcc_h167 = _source257.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _7387___mcc_h168 = _source257.dtor_indices;
          bool _7388_isDatatype = _7138___mcc_h51;
          bool _7389_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7390_field = _7136___mcc_h49;
          DAST._IExpression _7391_on = _7135___mcc_h48;
          {
            RAST._IExpr _7392_onExpr;
            DCOMP._IOwnership _7393_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7394_recIdents;
            RAST._IExpr _out3502;
            DCOMP._IOwnership _out3503;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3504;
            DCOMP.COMP.GenExpr(_7391_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3502, out _out3503, out _out3504);
            _7392_onExpr = _out3502;
            _7393_onOwned = _out3503;
            _7394_recIdents = _out3504;
            if ((_7388_isDatatype) || (_7389_isConstant)) {
              r = ((_7392_onExpr).Sel(DCOMP.__default.escapeIdent(_7390_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3505;
              DCOMP._IOwnership _out3506;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3505, out _out3506);
              r = _out3505;
              resultingOwnership = _out3506;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7392_onExpr)).Sel(DCOMP.__default.escapeIdent(_7390_field));
              RAST._IExpr _out3507;
              DCOMP._IOwnership _out3508;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3507, out _out3508);
              r = _out3507;
              resultingOwnership = _out3508;
            }
            readIdents = _7394_recIdents;
            return ;
          }
        } else if (_source257.is_IndexRange) {
          DAST._IExpression _7395___mcc_h172 = _source257.dtor_expr;
          bool _7396___mcc_h173 = _source257.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _7397___mcc_h174 = _source257.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _7398___mcc_h175 = _source257.dtor_high;
          bool _7399_isDatatype = _7138___mcc_h51;
          bool _7400_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7401_field = _7136___mcc_h49;
          DAST._IExpression _7402_on = _7135___mcc_h48;
          {
            RAST._IExpr _7403_onExpr;
            DCOMP._IOwnership _7404_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7405_recIdents;
            RAST._IExpr _out3509;
            DCOMP._IOwnership _out3510;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3511;
            DCOMP.COMP.GenExpr(_7402_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3509, out _out3510, out _out3511);
            _7403_onExpr = _out3509;
            _7404_onOwned = _out3510;
            _7405_recIdents = _out3511;
            if ((_7399_isDatatype) || (_7400_isConstant)) {
              r = ((_7403_onExpr).Sel(DCOMP.__default.escapeIdent(_7401_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3512;
              DCOMP._IOwnership _out3513;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3512, out _out3513);
              r = _out3512;
              resultingOwnership = _out3513;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7403_onExpr)).Sel(DCOMP.__default.escapeIdent(_7401_field));
              RAST._IExpr _out3514;
              DCOMP._IOwnership _out3515;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3514, out _out3515);
              r = _out3514;
              resultingOwnership = _out3515;
            }
            readIdents = _7405_recIdents;
            return ;
          }
        } else if (_source257.is_TupleSelect) {
          DAST._IExpression _7406___mcc_h180 = _source257.dtor_expr;
          BigInteger _7407___mcc_h181 = _source257.dtor_index;
          bool _7408_isDatatype = _7138___mcc_h51;
          bool _7409_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7410_field = _7136___mcc_h49;
          DAST._IExpression _7411_on = _7135___mcc_h48;
          {
            RAST._IExpr _7412_onExpr;
            DCOMP._IOwnership _7413_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7414_recIdents;
            RAST._IExpr _out3516;
            DCOMP._IOwnership _out3517;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3518;
            DCOMP.COMP.GenExpr(_7411_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3516, out _out3517, out _out3518);
            _7412_onExpr = _out3516;
            _7413_onOwned = _out3517;
            _7414_recIdents = _out3518;
            if ((_7408_isDatatype) || (_7409_isConstant)) {
              r = ((_7412_onExpr).Sel(DCOMP.__default.escapeIdent(_7410_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3519;
              DCOMP._IOwnership _out3520;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3519, out _out3520);
              r = _out3519;
              resultingOwnership = _out3520;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7412_onExpr)).Sel(DCOMP.__default.escapeIdent(_7410_field));
              RAST._IExpr _out3521;
              DCOMP._IOwnership _out3522;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3521, out _out3522);
              r = _out3521;
              resultingOwnership = _out3522;
            }
            readIdents = _7414_recIdents;
            return ;
          }
        } else if (_source257.is_Call) {
          DAST._IExpression _7415___mcc_h184 = _source257.dtor_on;
          DAST._ICallName _7416___mcc_h185 = _source257.dtor_callName;
          Dafny.ISequence<DAST._IType> _7417___mcc_h186 = _source257.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _7418___mcc_h187 = _source257.dtor_args;
          bool _7419_isDatatype = _7138___mcc_h51;
          bool _7420_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7421_field = _7136___mcc_h49;
          DAST._IExpression _7422_on = _7135___mcc_h48;
          {
            RAST._IExpr _7423_onExpr;
            DCOMP._IOwnership _7424_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7425_recIdents;
            RAST._IExpr _out3523;
            DCOMP._IOwnership _out3524;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3525;
            DCOMP.COMP.GenExpr(_7422_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3523, out _out3524, out _out3525);
            _7423_onExpr = _out3523;
            _7424_onOwned = _out3524;
            _7425_recIdents = _out3525;
            if ((_7419_isDatatype) || (_7420_isConstant)) {
              r = ((_7423_onExpr).Sel(DCOMP.__default.escapeIdent(_7421_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3526;
              DCOMP._IOwnership _out3527;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3526, out _out3527);
              r = _out3526;
              resultingOwnership = _out3527;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7423_onExpr)).Sel(DCOMP.__default.escapeIdent(_7421_field));
              RAST._IExpr _out3528;
              DCOMP._IOwnership _out3529;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3528, out _out3529);
              r = _out3528;
              resultingOwnership = _out3529;
            }
            readIdents = _7425_recIdents;
            return ;
          }
        } else if (_source257.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _7426___mcc_h192 = _source257.dtor_params;
          DAST._IType _7427___mcc_h193 = _source257.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _7428___mcc_h194 = _source257.dtor_body;
          bool _7429_isDatatype = _7138___mcc_h51;
          bool _7430_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7431_field = _7136___mcc_h49;
          DAST._IExpression _7432_on = _7135___mcc_h48;
          {
            RAST._IExpr _7433_onExpr;
            DCOMP._IOwnership _7434_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7435_recIdents;
            RAST._IExpr _out3530;
            DCOMP._IOwnership _out3531;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3532;
            DCOMP.COMP.GenExpr(_7432_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3530, out _out3531, out _out3532);
            _7433_onExpr = _out3530;
            _7434_onOwned = _out3531;
            _7435_recIdents = _out3532;
            if ((_7429_isDatatype) || (_7430_isConstant)) {
              r = ((_7433_onExpr).Sel(DCOMP.__default.escapeIdent(_7431_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3533;
              DCOMP._IOwnership _out3534;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3533, out _out3534);
              r = _out3533;
              resultingOwnership = _out3534;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7433_onExpr)).Sel(DCOMP.__default.escapeIdent(_7431_field));
              RAST._IExpr _out3535;
              DCOMP._IOwnership _out3536;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3535, out _out3536);
              r = _out3535;
              resultingOwnership = _out3536;
            }
            readIdents = _7435_recIdents;
            return ;
          }
        } else if (_source257.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7436___mcc_h198 = _source257.dtor_values;
          DAST._IType _7437___mcc_h199 = _source257.dtor_retType;
          DAST._IExpression _7438___mcc_h200 = _source257.dtor_expr;
          bool _7439_isDatatype = _7138___mcc_h51;
          bool _7440_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7441_field = _7136___mcc_h49;
          DAST._IExpression _7442_on = _7135___mcc_h48;
          {
            RAST._IExpr _7443_onExpr;
            DCOMP._IOwnership _7444_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7445_recIdents;
            RAST._IExpr _out3537;
            DCOMP._IOwnership _out3538;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3539;
            DCOMP.COMP.GenExpr(_7442_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3537, out _out3538, out _out3539);
            _7443_onExpr = _out3537;
            _7444_onOwned = _out3538;
            _7445_recIdents = _out3539;
            if ((_7439_isDatatype) || (_7440_isConstant)) {
              r = ((_7443_onExpr).Sel(DCOMP.__default.escapeIdent(_7441_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3540;
              DCOMP._IOwnership _out3541;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3540, out _out3541);
              r = _out3540;
              resultingOwnership = _out3541;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7443_onExpr)).Sel(DCOMP.__default.escapeIdent(_7441_field));
              RAST._IExpr _out3542;
              DCOMP._IOwnership _out3543;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3542, out _out3543);
              r = _out3542;
              resultingOwnership = _out3543;
            }
            readIdents = _7445_recIdents;
            return ;
          }
        } else if (_source257.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _7446___mcc_h204 = _source257.dtor_name;
          DAST._IType _7447___mcc_h205 = _source257.dtor_typ;
          DAST._IExpression _7448___mcc_h206 = _source257.dtor_value;
          DAST._IExpression _7449___mcc_h207 = _source257.dtor_iifeBody;
          bool _7450_isDatatype = _7138___mcc_h51;
          bool _7451_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7452_field = _7136___mcc_h49;
          DAST._IExpression _7453_on = _7135___mcc_h48;
          {
            RAST._IExpr _7454_onExpr;
            DCOMP._IOwnership _7455_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7456_recIdents;
            RAST._IExpr _out3544;
            DCOMP._IOwnership _out3545;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3546;
            DCOMP.COMP.GenExpr(_7453_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3544, out _out3545, out _out3546);
            _7454_onExpr = _out3544;
            _7455_onOwned = _out3545;
            _7456_recIdents = _out3546;
            if ((_7450_isDatatype) || (_7451_isConstant)) {
              r = ((_7454_onExpr).Sel(DCOMP.__default.escapeIdent(_7452_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3547;
              DCOMP._IOwnership _out3548;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3547, out _out3548);
              r = _out3547;
              resultingOwnership = _out3548;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7454_onExpr)).Sel(DCOMP.__default.escapeIdent(_7452_field));
              RAST._IExpr _out3549;
              DCOMP._IOwnership _out3550;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3549, out _out3550);
              r = _out3549;
              resultingOwnership = _out3550;
            }
            readIdents = _7456_recIdents;
            return ;
          }
        } else if (_source257.is_Apply) {
          DAST._IExpression _7457___mcc_h212 = _source257.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _7458___mcc_h213 = _source257.dtor_args;
          bool _7459_isDatatype = _7138___mcc_h51;
          bool _7460_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7461_field = _7136___mcc_h49;
          DAST._IExpression _7462_on = _7135___mcc_h48;
          {
            RAST._IExpr _7463_onExpr;
            DCOMP._IOwnership _7464_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7465_recIdents;
            RAST._IExpr _out3551;
            DCOMP._IOwnership _out3552;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3553;
            DCOMP.COMP.GenExpr(_7462_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3551, out _out3552, out _out3553);
            _7463_onExpr = _out3551;
            _7464_onOwned = _out3552;
            _7465_recIdents = _out3553;
            if ((_7459_isDatatype) || (_7460_isConstant)) {
              r = ((_7463_onExpr).Sel(DCOMP.__default.escapeIdent(_7461_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3554;
              DCOMP._IOwnership _out3555;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3554, out _out3555);
              r = _out3554;
              resultingOwnership = _out3555;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7463_onExpr)).Sel(DCOMP.__default.escapeIdent(_7461_field));
              RAST._IExpr _out3556;
              DCOMP._IOwnership _out3557;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3556, out _out3557);
              r = _out3556;
              resultingOwnership = _out3557;
            }
            readIdents = _7465_recIdents;
            return ;
          }
        } else if (_source257.is_TypeTest) {
          DAST._IExpression _7466___mcc_h216 = _source257.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7467___mcc_h217 = _source257.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _7468___mcc_h218 = _source257.dtor_variant;
          bool _7469_isDatatype = _7138___mcc_h51;
          bool _7470_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7471_field = _7136___mcc_h49;
          DAST._IExpression _7472_on = _7135___mcc_h48;
          {
            RAST._IExpr _7473_onExpr;
            DCOMP._IOwnership _7474_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7475_recIdents;
            RAST._IExpr _out3558;
            DCOMP._IOwnership _out3559;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3560;
            DCOMP.COMP.GenExpr(_7472_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3558, out _out3559, out _out3560);
            _7473_onExpr = _out3558;
            _7474_onOwned = _out3559;
            _7475_recIdents = _out3560;
            if ((_7469_isDatatype) || (_7470_isConstant)) {
              r = ((_7473_onExpr).Sel(DCOMP.__default.escapeIdent(_7471_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3561;
              DCOMP._IOwnership _out3562;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3561, out _out3562);
              r = _out3561;
              resultingOwnership = _out3562;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7473_onExpr)).Sel(DCOMP.__default.escapeIdent(_7471_field));
              RAST._IExpr _out3563;
              DCOMP._IOwnership _out3564;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3563, out _out3564);
              r = _out3563;
              resultingOwnership = _out3564;
            }
            readIdents = _7475_recIdents;
            return ;
          }
        } else if (_source257.is_InitializationValue) {
          DAST._IType _7476___mcc_h222 = _source257.dtor_typ;
          bool _7477_isDatatype = _7138___mcc_h51;
          bool _7478_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7479_field = _7136___mcc_h49;
          DAST._IExpression _7480_on = _7135___mcc_h48;
          {
            RAST._IExpr _7481_onExpr;
            DCOMP._IOwnership _7482_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7483_recIdents;
            RAST._IExpr _out3565;
            DCOMP._IOwnership _out3566;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3567;
            DCOMP.COMP.GenExpr(_7480_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3565, out _out3566, out _out3567);
            _7481_onExpr = _out3565;
            _7482_onOwned = _out3566;
            _7483_recIdents = _out3567;
            if ((_7477_isDatatype) || (_7478_isConstant)) {
              r = ((_7481_onExpr).Sel(DCOMP.__default.escapeIdent(_7479_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3568;
              DCOMP._IOwnership _out3569;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3568, out _out3569);
              r = _out3568;
              resultingOwnership = _out3569;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7481_onExpr)).Sel(DCOMP.__default.escapeIdent(_7479_field));
              RAST._IExpr _out3570;
              DCOMP._IOwnership _out3571;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3570, out _out3571);
              r = _out3570;
              resultingOwnership = _out3571;
            }
            readIdents = _7483_recIdents;
            return ;
          }
        } else if (_source257.is_BoolBoundedPool) {
          bool _7484_isDatatype = _7138___mcc_h51;
          bool _7485_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7486_field = _7136___mcc_h49;
          DAST._IExpression _7487_on = _7135___mcc_h48;
          {
            RAST._IExpr _7488_onExpr;
            DCOMP._IOwnership _7489_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7490_recIdents;
            RAST._IExpr _out3572;
            DCOMP._IOwnership _out3573;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3574;
            DCOMP.COMP.GenExpr(_7487_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3572, out _out3573, out _out3574);
            _7488_onExpr = _out3572;
            _7489_onOwned = _out3573;
            _7490_recIdents = _out3574;
            if ((_7484_isDatatype) || (_7485_isConstant)) {
              r = ((_7488_onExpr).Sel(DCOMP.__default.escapeIdent(_7486_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3575;
              DCOMP._IOwnership _out3576;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3575, out _out3576);
              r = _out3575;
              resultingOwnership = _out3576;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7488_onExpr)).Sel(DCOMP.__default.escapeIdent(_7486_field));
              RAST._IExpr _out3577;
              DCOMP._IOwnership _out3578;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3577, out _out3578);
              r = _out3577;
              resultingOwnership = _out3578;
            }
            readIdents = _7490_recIdents;
            return ;
          }
        } else if (_source257.is_SetBoundedPool) {
          DAST._IExpression _7491___mcc_h224 = _source257.dtor_of;
          bool _7492_isDatatype = _7138___mcc_h51;
          bool _7493_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7494_field = _7136___mcc_h49;
          DAST._IExpression _7495_on = _7135___mcc_h48;
          {
            RAST._IExpr _7496_onExpr;
            DCOMP._IOwnership _7497_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7498_recIdents;
            RAST._IExpr _out3579;
            DCOMP._IOwnership _out3580;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3581;
            DCOMP.COMP.GenExpr(_7495_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3579, out _out3580, out _out3581);
            _7496_onExpr = _out3579;
            _7497_onOwned = _out3580;
            _7498_recIdents = _out3581;
            if ((_7492_isDatatype) || (_7493_isConstant)) {
              r = ((_7496_onExpr).Sel(DCOMP.__default.escapeIdent(_7494_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3582;
              DCOMP._IOwnership _out3583;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3582, out _out3583);
              r = _out3582;
              resultingOwnership = _out3583;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7496_onExpr)).Sel(DCOMP.__default.escapeIdent(_7494_field));
              RAST._IExpr _out3584;
              DCOMP._IOwnership _out3585;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3584, out _out3585);
              r = _out3584;
              resultingOwnership = _out3585;
            }
            readIdents = _7498_recIdents;
            return ;
          }
        } else if (_source257.is_SeqBoundedPool) {
          DAST._IExpression _7499___mcc_h226 = _source257.dtor_of;
          bool _7500___mcc_h227 = _source257.dtor_includeDuplicates;
          bool _7501_isDatatype = _7138___mcc_h51;
          bool _7502_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7503_field = _7136___mcc_h49;
          DAST._IExpression _7504_on = _7135___mcc_h48;
          {
            RAST._IExpr _7505_onExpr;
            DCOMP._IOwnership _7506_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7507_recIdents;
            RAST._IExpr _out3586;
            DCOMP._IOwnership _out3587;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3588;
            DCOMP.COMP.GenExpr(_7504_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3586, out _out3587, out _out3588);
            _7505_onExpr = _out3586;
            _7506_onOwned = _out3587;
            _7507_recIdents = _out3588;
            if ((_7501_isDatatype) || (_7502_isConstant)) {
              r = ((_7505_onExpr).Sel(DCOMP.__default.escapeIdent(_7503_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3589;
              DCOMP._IOwnership _out3590;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3589, out _out3590);
              r = _out3589;
              resultingOwnership = _out3590;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7505_onExpr)).Sel(DCOMP.__default.escapeIdent(_7503_field));
              RAST._IExpr _out3591;
              DCOMP._IOwnership _out3592;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3591, out _out3592);
              r = _out3591;
              resultingOwnership = _out3592;
            }
            readIdents = _7507_recIdents;
            return ;
          }
        } else {
          DAST._IExpression _7508___mcc_h230 = _source257.dtor_lo;
          DAST._IExpression _7509___mcc_h231 = _source257.dtor_hi;
          bool _7510_isDatatype = _7138___mcc_h51;
          bool _7511_isConstant = _7137___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _7512_field = _7136___mcc_h49;
          DAST._IExpression _7513_on = _7135___mcc_h48;
          {
            RAST._IExpr _7514_onExpr;
            DCOMP._IOwnership _7515_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7516_recIdents;
            RAST._IExpr _out3593;
            DCOMP._IOwnership _out3594;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3595;
            DCOMP.COMP.GenExpr(_7513_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3593, out _out3594, out _out3595);
            _7514_onExpr = _out3593;
            _7515_onOwned = _out3594;
            _7516_recIdents = _out3595;
            if ((_7510_isDatatype) || (_7511_isConstant)) {
              r = ((_7514_onExpr).Sel(DCOMP.__default.escapeIdent(_7512_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out3596;
              DCOMP._IOwnership _out3597;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3596, out _out3597);
              r = _out3596;
              resultingOwnership = _out3597;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_7514_onExpr)).Sel(DCOMP.__default.escapeIdent(_7512_field));
              RAST._IExpr _out3598;
              DCOMP._IOwnership _out3599;
              DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out3598, out _out3599);
              r = _out3598;
              resultingOwnership = _out3599;
            }
            readIdents = _7516_recIdents;
            return ;
          }
        }
      } else if (_source254.is_SelectFn) {
        DAST._IExpression _7517___mcc_h234 = _source254.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _7518___mcc_h235 = _source254.dtor_field;
        bool _7519___mcc_h236 = _source254.dtor_onDatatype;
        bool _7520___mcc_h237 = _source254.dtor_isStatic;
        BigInteger _7521___mcc_h238 = _source254.dtor_arity;
        BigInteger _7522_arity = _7521___mcc_h238;
        bool _7523_isStatic = _7520___mcc_h237;
        bool _7524_isDatatype = _7519___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _7525_field = _7518___mcc_h235;
        DAST._IExpression _7526_on = _7517___mcc_h234;
        {
          RAST._IExpr _7527_onExpr;
          DCOMP._IOwnership _7528_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7529_recIdents;
          RAST._IExpr _out3600;
          DCOMP._IOwnership _out3601;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3602;
          DCOMP.COMP.GenExpr(_7526_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3600, out _out3601, out _out3602);
          _7527_onExpr = _out3600;
          _7528_onOwned = _out3601;
          _7529_recIdents = _out3602;
          Dafny.ISequence<Dafny.Rune> _7530_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _7531_onString;
          _7531_onString = (_7527_onExpr)._ToString(DCOMP.__default.IND);
          if (_7523_isStatic) {
            _7530_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7531_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeIdent(_7525_field));
          } else {
            _7530_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _7530_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7530_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _7531_onString), ((object.Equals(_7528_onOwned, DCOMP.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _7532_args;
            _7532_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _7533_i;
            _7533_i = BigInteger.Zero;
            while ((_7533_i) < (_7522_arity)) {
              if ((_7533_i).Sign == 1) {
                _7532_args = Dafny.Sequence<Dafny.Rune>.Concat(_7532_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _7532_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7532_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_7533_i));
              _7533_i = (_7533_i) + (BigInteger.One);
            }
            _7530_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7530_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _7532_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _7530_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7530_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _7525_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _7532_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _7530_s = Dafny.Sequence<Dafny.Rune>.Concat(_7530_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _7530_s = Dafny.Sequence<Dafny.Rune>.Concat(_7530_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _7534_typeShape;
          _7534_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _7535_i;
          _7535_i = BigInteger.Zero;
          while ((_7535_i) < (_7522_arity)) {
            if ((_7535_i).Sign == 1) {
              _7534_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7534_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _7534_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7534_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _7535_i = (_7535_i) + (BigInteger.One);
          }
          _7534_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_7534_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _7530_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _7530_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _7534_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_7530_s);
          RAST._IExpr _out3603;
          DCOMP._IOwnership _out3604;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3603, out _out3604);
          r = _out3603;
          resultingOwnership = _out3604;
          readIdents = _7529_recIdents;
          return ;
        }
      } else if (_source254.is_Index) {
        DAST._IExpression _7536___mcc_h239 = _source254.dtor_expr;
        DAST._ICollKind _7537___mcc_h240 = _source254.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _7538___mcc_h241 = _source254.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _7539_indices = _7538___mcc_h241;
        DAST._ICollKind _7540_collKind = _7537___mcc_h240;
        DAST._IExpression _7541_on = _7536___mcc_h239;
        {
          RAST._IExpr _7542_onExpr;
          DCOMP._IOwnership _7543_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7544_recIdents;
          RAST._IExpr _out3605;
          DCOMP._IOwnership _out3606;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3607;
          DCOMP.COMP.GenExpr(_7541_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3605, out _out3606, out _out3607);
          _7542_onExpr = _out3605;
          _7543_onOwned = _out3606;
          _7544_recIdents = _out3607;
          readIdents = _7544_recIdents;
          r = _7542_onExpr;
          BigInteger _7545_i;
          _7545_i = BigInteger.Zero;
          while ((_7545_i) < (new BigInteger((_7539_indices).Count))) {
            if (object.Equals(_7540_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _7546_idx;
            DCOMP._IOwnership _7547_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7548_recIdentsIdx;
            RAST._IExpr _out3608;
            DCOMP._IOwnership _out3609;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3610;
            DCOMP.COMP.GenExpr((_7539_indices).Select(_7545_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3608, out _out3609, out _out3610);
            _7546_idx = _out3608;
            _7547_idxOwned = _out3609;
            _7548_recIdentsIdx = _out3610;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_7546_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7548_recIdentsIdx);
            _7545_i = (_7545_i) + (BigInteger.One);
          }
          RAST._IExpr _out3611;
          DCOMP._IOwnership _out3612;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3611, out _out3612);
          r = _out3611;
          resultingOwnership = _out3612;
          return ;
        }
      } else if (_source254.is_IndexRange) {
        DAST._IExpression _7549___mcc_h242 = _source254.dtor_expr;
        bool _7550___mcc_h243 = _source254.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _7551___mcc_h244 = _source254.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _7552___mcc_h245 = _source254.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _7553_high = _7552___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _7554_low = _7551___mcc_h244;
        bool _7555_isArray = _7550___mcc_h243;
        DAST._IExpression _7556_on = _7549___mcc_h242;
        {
          RAST._IExpr _7557_onExpr;
          DCOMP._IOwnership _7558_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7559_recIdents;
          RAST._IExpr _out3613;
          DCOMP._IOwnership _out3614;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3615;
          DCOMP.COMP.GenExpr(_7556_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3613, out _out3614, out _out3615);
          _7557_onExpr = _out3613;
          _7558_onOwned = _out3614;
          _7559_recIdents = _out3615;
          readIdents = _7559_recIdents;
          Dafny.ISequence<Dafny.Rune> _7560_methodName;
          _7560_methodName = (((_7554_low).is_Some) ? ((((_7553_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_7553_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _7561_arguments;
          _7561_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source258 = _7554_low;
          if (_source258.is_None) {
          } else {
            DAST._IExpression _7562___mcc_h274 = _source258.dtor_value;
            DAST._IExpression _7563_l = _7562___mcc_h274;
            {
              RAST._IExpr _7564_lExpr;
              DCOMP._IOwnership _7565___v137;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7566_recIdentsL;
              RAST._IExpr _out3616;
              DCOMP._IOwnership _out3617;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3618;
              DCOMP.COMP.GenExpr(_7563_l, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3616, out _out3617, out _out3618);
              _7564_lExpr = _out3616;
              _7565___v137 = _out3617;
              _7566_recIdentsL = _out3618;
              _7561_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7561_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7564_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7566_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source259 = _7553_high;
          if (_source259.is_None) {
          } else {
            DAST._IExpression _7567___mcc_h275 = _source259.dtor_value;
            DAST._IExpression _7568_h = _7567___mcc_h275;
            {
              RAST._IExpr _7569_hExpr;
              DCOMP._IOwnership _7570___v138;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7571_recIdentsH;
              RAST._IExpr _out3619;
              DCOMP._IOwnership _out3620;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3621;
              DCOMP.COMP.GenExpr(_7568_h, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3619, out _out3620, out _out3621);
              _7569_hExpr = _out3619;
              _7570___v138 = _out3620;
              _7571_recIdentsH = _out3621;
              _7561_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_7561_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_7569_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7571_recIdentsH);
            }
          }
          r = _7557_onExpr;
          if (_7555_isArray) {
            if (!(_7560_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _7560_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _7560_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _7560_methodName))).Apply(_7561_arguments);
          } else {
            if (!(_7560_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_7560_methodName)).Apply(_7561_arguments);
            }
          }
          RAST._IExpr _out3622;
          DCOMP._IOwnership _out3623;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3622, out _out3623);
          r = _out3622;
          resultingOwnership = _out3623;
          return ;
        }
      } else if (_source254.is_TupleSelect) {
        DAST._IExpression _7572___mcc_h246 = _source254.dtor_expr;
        BigInteger _7573___mcc_h247 = _source254.dtor_index;
        BigInteger _7574_idx = _7573___mcc_h247;
        DAST._IExpression _7575_on = _7572___mcc_h246;
        {
          RAST._IExpr _7576_onExpr;
          DCOMP._IOwnership _7577_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7578_recIdents;
          RAST._IExpr _out3624;
          DCOMP._IOwnership _out3625;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3626;
          DCOMP.COMP.GenExpr(_7575_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3624, out _out3625, out _out3626);
          _7576_onExpr = _out3624;
          _7577_onOwnership = _out3625;
          _7578_recIdents = _out3626;
          r = (_7576_onExpr).Sel(Std.Strings.__default.OfNat(_7574_idx));
          RAST._IExpr _out3627;
          DCOMP._IOwnership _out3628;
          DCOMP.COMP.FromOwnership(r, _7577_onOwnership, expectedOwnership, out _out3627, out _out3628);
          r = _out3627;
          resultingOwnership = _out3628;
          readIdents = _7578_recIdents;
          return ;
        }
      } else if (_source254.is_Call) {
        DAST._IExpression _7579___mcc_h248 = _source254.dtor_on;
        DAST._ICallName _7580___mcc_h249 = _source254.dtor_callName;
        Dafny.ISequence<DAST._IType> _7581___mcc_h250 = _source254.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _7582___mcc_h251 = _source254.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7583_args = _7582___mcc_h251;
        Dafny.ISequence<DAST._IType> _7584_typeArgs = _7581___mcc_h250;
        DAST._ICallName _7585_name = _7580___mcc_h249;
        DAST._IExpression _7586_on = _7579___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _7587_onExpr;
          DCOMP._IOwnership _7588___v139;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7589_recIdents;
          RAST._IExpr _out3629;
          DCOMP._IOwnership _out3630;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3631;
          DCOMP.COMP.GenExpr(_7586_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out3629, out _out3630, out _out3631);
          _7587_onExpr = _out3629;
          _7588___v139 = _out3630;
          _7589_recIdents = _out3631;
          Dafny.ISequence<RAST._IType> _7590_typeExprs;
          _7590_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_7584_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi17 = new BigInteger((_7584_typeArgs).Count);
            for (BigInteger _7591_typeI = BigInteger.Zero; _7591_typeI < _hi17; _7591_typeI++) {
              RAST._IType _7592_typeExpr;
              RAST._IType _out3632;
              _out3632 = DCOMP.COMP.GenType((_7584_typeArgs).Select(_7591_typeI), false, false);
              _7592_typeExpr = _out3632;
              _7590_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_7590_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_7592_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _7593_argExprs;
          _7593_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi18 = new BigInteger((_7583_args).Count);
          for (BigInteger _7594_i = BigInteger.Zero; _7594_i < _hi18; _7594_i++) {
            DCOMP._IOwnership _7595_argOwnership;
            _7595_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_7585_name).is_Name) && ((_7594_i) < (new BigInteger((((_7585_name).dtor_signature)).Count)))) {
              RAST._IType _7596_tpe;
              RAST._IType _out3633;
              _out3633 = DCOMP.COMP.GenType(((((_7585_name).dtor_signature)).Select(_7594_i)).dtor_typ, false, false);
              _7596_tpe = _out3633;
              if ((_7596_tpe).HasCopySemantics()) {
                _7595_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _7597_argExpr;
            DCOMP._IOwnership _7598___v140;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7599_argIdents;
            RAST._IExpr _out3634;
            DCOMP._IOwnership _out3635;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3636;
            DCOMP.COMP.GenExpr((_7583_args).Select(_7594_i), selfIdent, env, _7595_argOwnership, out _out3634, out _out3635, out _out3636);
            _7597_argExpr = _out3634;
            _7598___v140 = _out3635;
            _7599_argIdents = _out3636;
            _7593_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_7593_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_7597_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7599_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7589_recIdents);
          Dafny.ISequence<Dafny.Rune> _7600_renderedName;
          _7600_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source260) => {
            if (_source260.is_Name) {
              Dafny.ISequence<Dafny.Rune> _7601___mcc_h276 = _source260.dtor_name;
              Dafny.ISequence<DAST._IFormal> _7602___mcc_h277 = _source260.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _7603_ident = _7601___mcc_h276;
              return DCOMP.__default.escapeIdent(_7603_ident);
            } else if (_source260.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source260.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source260.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_7585_name);
          DAST._IExpression _source261 = _7586_on;
          if (_source261.is_Literal) {
            DAST._ILiteral _7604___mcc_h278 = _source261.dtor_Literal_a0;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _7605___mcc_h280 = _source261.dtor_Ident_a0;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7606___mcc_h282 = _source261.dtor_Companion_a0;
            {
              _7587_onExpr = (_7587_onExpr).MSel(_7600_renderedName);
            }
          } else if (_source261.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _7607___mcc_h284 = _source261.dtor_Tuple_a0;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7608___mcc_h286 = _source261.dtor_path;
            Dafny.ISequence<DAST._IType> _7609___mcc_h287 = _source261.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _7610___mcc_h288 = _source261.dtor_args;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _7611___mcc_h292 = _source261.dtor_dims;
            DAST._IType _7612___mcc_h293 = _source261.dtor_typ;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_DatatypeValue) {
            DAST._IDatatypeType _7613___mcc_h296 = _source261.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _7614___mcc_h297 = _source261.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _7615___mcc_h298 = _source261.dtor_variant;
            bool _7616___mcc_h299 = _source261.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _7617___mcc_h300 = _source261.dtor_contents;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Convert) {
            DAST._IExpression _7618___mcc_h306 = _source261.dtor_value;
            DAST._IType _7619___mcc_h307 = _source261.dtor_from;
            DAST._IType _7620___mcc_h308 = _source261.dtor_typ;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SeqConstruct) {
            DAST._IExpression _7621___mcc_h312 = _source261.dtor_length;
            DAST._IExpression _7622___mcc_h313 = _source261.dtor_elem;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _7623___mcc_h316 = _source261.dtor_elements;
            DAST._IType _7624___mcc_h317 = _source261.dtor_typ;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _7625___mcc_h320 = _source261.dtor_elements;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _7626___mcc_h322 = _source261.dtor_elements;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _7627___mcc_h324 = _source261.dtor_mapElems;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_MapBuilder) {
            DAST._IType _7628___mcc_h326 = _source261.dtor_keyType;
            DAST._IType _7629___mcc_h327 = _source261.dtor_valueType;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SeqUpdate) {
            DAST._IExpression _7630___mcc_h330 = _source261.dtor_expr;
            DAST._IExpression _7631___mcc_h331 = _source261.dtor_indexExpr;
            DAST._IExpression _7632___mcc_h332 = _source261.dtor_value;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_MapUpdate) {
            DAST._IExpression _7633___mcc_h336 = _source261.dtor_expr;
            DAST._IExpression _7634___mcc_h337 = _source261.dtor_indexExpr;
            DAST._IExpression _7635___mcc_h338 = _source261.dtor_value;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SetBuilder) {
            DAST._IType _7636___mcc_h342 = _source261.dtor_elemType;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_ToMultiset) {
            DAST._IExpression _7637___mcc_h344 = _source261.dtor_ToMultiset_a0;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_This) {
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Ite) {
            DAST._IExpression _7638___mcc_h346 = _source261.dtor_cond;
            DAST._IExpression _7639___mcc_h347 = _source261.dtor_thn;
            DAST._IExpression _7640___mcc_h348 = _source261.dtor_els;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_UnOp) {
            DAST._IUnaryOp _7641___mcc_h352 = _source261.dtor_unOp;
            DAST._IExpression _7642___mcc_h353 = _source261.dtor_expr;
            DAST.Format._IUnOpFormat _7643___mcc_h354 = _source261.dtor_format1;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_BinOp) {
            DAST._IBinOp _7644___mcc_h358 = _source261.dtor_op;
            DAST._IExpression _7645___mcc_h359 = _source261.dtor_left;
            DAST._IExpression _7646___mcc_h360 = _source261.dtor_right;
            DAST.Format._IBinOpFormat _7647___mcc_h361 = _source261.dtor_format2;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_ArrayLen) {
            DAST._IExpression _7648___mcc_h366 = _source261.dtor_expr;
            BigInteger _7649___mcc_h367 = _source261.dtor_dim;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_MapKeys) {
            DAST._IExpression _7650___mcc_h370 = _source261.dtor_expr;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_MapValues) {
            DAST._IExpression _7651___mcc_h372 = _source261.dtor_expr;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Select) {
            DAST._IExpression _7652___mcc_h374 = _source261.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _7653___mcc_h375 = _source261.dtor_field;
            bool _7654___mcc_h376 = _source261.dtor_isConstant;
            bool _7655___mcc_h377 = _source261.dtor_onDatatype;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SelectFn) {
            DAST._IExpression _7656___mcc_h382 = _source261.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _7657___mcc_h383 = _source261.dtor_field;
            bool _7658___mcc_h384 = _source261.dtor_onDatatype;
            bool _7659___mcc_h385 = _source261.dtor_isStatic;
            BigInteger _7660___mcc_h386 = _source261.dtor_arity;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Index) {
            DAST._IExpression _7661___mcc_h392 = _source261.dtor_expr;
            DAST._ICollKind _7662___mcc_h393 = _source261.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _7663___mcc_h394 = _source261.dtor_indices;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_IndexRange) {
            DAST._IExpression _7664___mcc_h398 = _source261.dtor_expr;
            bool _7665___mcc_h399 = _source261.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _7666___mcc_h400 = _source261.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _7667___mcc_h401 = _source261.dtor_high;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_TupleSelect) {
            DAST._IExpression _7668___mcc_h406 = _source261.dtor_expr;
            BigInteger _7669___mcc_h407 = _source261.dtor_index;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Call) {
            DAST._IExpression _7670___mcc_h410 = _source261.dtor_on;
            DAST._ICallName _7671___mcc_h411 = _source261.dtor_callName;
            Dafny.ISequence<DAST._IType> _7672___mcc_h412 = _source261.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _7673___mcc_h413 = _source261.dtor_args;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _7674___mcc_h418 = _source261.dtor_params;
            DAST._IType _7675___mcc_h419 = _source261.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _7676___mcc_h420 = _source261.dtor_body;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7677___mcc_h424 = _source261.dtor_values;
            DAST._IType _7678___mcc_h425 = _source261.dtor_retType;
            DAST._IExpression _7679___mcc_h426 = _source261.dtor_expr;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _7680___mcc_h430 = _source261.dtor_name;
            DAST._IType _7681___mcc_h431 = _source261.dtor_typ;
            DAST._IExpression _7682___mcc_h432 = _source261.dtor_value;
            DAST._IExpression _7683___mcc_h433 = _source261.dtor_iifeBody;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_Apply) {
            DAST._IExpression _7684___mcc_h438 = _source261.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _7685___mcc_h439 = _source261.dtor_args;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_TypeTest) {
            DAST._IExpression _7686___mcc_h442 = _source261.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7687___mcc_h443 = _source261.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _7688___mcc_h444 = _source261.dtor_variant;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_InitializationValue) {
            DAST._IType _7689___mcc_h448 = _source261.dtor_typ;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_BoolBoundedPool) {
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SetBoundedPool) {
            DAST._IExpression _7690___mcc_h450 = _source261.dtor_of;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else if (_source261.is_SeqBoundedPool) {
            DAST._IExpression _7691___mcc_h452 = _source261.dtor_of;
            bool _7692___mcc_h453 = _source261.dtor_includeDuplicates;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          } else {
            DAST._IExpression _7693___mcc_h456 = _source261.dtor_lo;
            DAST._IExpression _7694___mcc_h457 = _source261.dtor_hi;
            {
              _7587_onExpr = (_7587_onExpr).Sel(_7600_renderedName);
            }
          }
          r = _7587_onExpr;
          if ((new BigInteger((_7590_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_7590_typeExprs);
          }
          r = (r).Apply(_7593_argExprs);
          RAST._IExpr _out3637;
          DCOMP._IOwnership _out3638;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3637, out _out3638);
          r = _out3637;
          resultingOwnership = _out3638;
          return ;
        }
      } else if (_source254.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _7695___mcc_h252 = _source254.dtor_params;
        DAST._IType _7696___mcc_h253 = _source254.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _7697___mcc_h254 = _source254.dtor_body;
        Dafny.ISequence<DAST._IStatement> _7698_body = _7697___mcc_h254;
        DAST._IType _7699_retType = _7696___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _7700_paramsDafny = _7695___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _7701_params;
          Dafny.ISequence<RAST._IFormal> _out3639;
          _out3639 = DCOMP.COMP.GenParams(_7700_paramsDafny);
          _7701_params = _out3639;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7702_paramNames;
          _7702_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _7703_paramTypesMap;
          _7703_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi19 = new BigInteger((_7701_params).Count);
          for (BigInteger _7704_i = BigInteger.Zero; _7704_i < _hi19; _7704_i++) {
            Dafny.ISequence<Dafny.Rune> _7705_name;
            _7705_name = ((_7701_params).Select(_7704_i)).dtor_name;
            _7702_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_7702_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_7705_name));
            _7703_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_7703_paramTypesMap, _7705_name, ((_7701_params).Select(_7704_i)).dtor_tpe);
          }
          DCOMP._IEnvironment _7706_env;
          _7706_env = DCOMP.Environment.create(_7702_paramNames, _7703_paramTypesMap);
          RAST._IExpr _7707_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7708_recIdents;
          DCOMP._IEnvironment _7709___v144;
          RAST._IExpr _out3640;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3641;
          DCOMP._IEnvironment _out3642;
          DCOMP.COMP.GenStmts(_7698_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _7706_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out3640, out _out3641, out _out3642);
          _7707_recursiveGen = _out3640;
          _7708_recIdents = _out3641;
          _7709___v144 = _out3642;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _7710_allReadCloned;
          _7710_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_7708_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _7711_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_3 in (_7708_recIdents).Elements) {
              _7711_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_3;
              if ((_7708_recIdents).Contains(_7711_next)) {
                goto after__ASSIGN_SUCH_THAT_3;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3475)");
          after__ASSIGN_SUCH_THAT_3: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_7711_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _7710_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_7710_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_7702_paramNames).Contains(_7711_next))) {
              _7710_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7710_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent(_7711_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMP.__default.escapeIdent(_7711_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7711_next));
            }
            _7708_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7708_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7711_next));
          }
          Dafny.ISequence<Dafny.Rune> _7712_paramsString;
          _7712_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _7713_paramTypes;
          _7713_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi20 = new BigInteger((_7701_params).Count);
          for (BigInteger _7714_i = BigInteger.Zero; _7714_i < _hi20; _7714_i++) {
            if ((_7714_i).Sign == 1) {
              _7712_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_7712_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _7713_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_7713_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _7712_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7712_paramsString, DCOMP.__default.escapeIdent(((_7701_params).Select(_7714_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_7701_params).Select(_7714_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
            _7713_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_7713_paramTypes, (RAST.Type.create_Borrowed(((_7701_params).Select(_7714_i)).dtor_tpe))._ToString(DCOMP.__default.IND));
          }
          RAST._IType _7715_retTypeGen;
          RAST._IType _out3643;
          _out3643 = DCOMP.COMP.GenType(_7699_retType, false, true);
          _7715_retTypeGen = _out3643;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _7713_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_7715_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _7710_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _7712_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_7715_retTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_7707_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out3644;
          DCOMP._IOwnership _out3645;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3644, out _out3645);
          r = _out3644;
          resultingOwnership = _out3645;
          return ;
        }
      } else if (_source254.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7716___mcc_h255 = _source254.dtor_values;
        DAST._IType _7717___mcc_h256 = _source254.dtor_retType;
        DAST._IExpression _7718___mcc_h257 = _source254.dtor_expr;
        DAST._IExpression _7719_expr = _7718___mcc_h257;
        DAST._IType _7720_retType = _7717___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _7721_values = _7716___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7722_paramNames;
          _7722_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _7723_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out3646;
          _out3646 = DCOMP.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_7724_value) => {
            return (_7724_value).dtor__0;
          })), _7721_values));
          _7723_paramFormals = _out3646;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _7725_paramTypes;
          _7725_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7726_paramNamesSet;
          _7726_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi21 = new BigInteger((_7721_values).Count);
          for (BigInteger _7727_i = BigInteger.Zero; _7727_i < _hi21; _7727_i++) {
            Dafny.ISequence<Dafny.Rune> _7728_name;
            _7728_name = (((_7721_values).Select(_7727_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _7729_rName;
            _7729_rName = DCOMP.__default.escapeIdent(_7728_name);
            _7722_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_7722_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_7729_rName));
            _7725_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_7725_paramTypes, _7729_rName, ((_7723_paramFormals).Select(_7727_i)).dtor_tpe);
            _7726_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7726_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_7728_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _7730_s;
          _7730_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _7731_paramsString;
          _7731_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi22 = new BigInteger((_7721_values).Count);
          for (BigInteger _7732_i = BigInteger.Zero; _7732_i < _hi22; _7732_i++) {
            if ((_7732_i).Sign == 1) {
              _7731_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_7731_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _7733_typStr;
            RAST._IType _out3647;
            _out3647 = DCOMP.COMP.GenType((((_7721_values).Select(_7732_i)).dtor__0).dtor_typ, false, true);
            _7733_typStr = _out3647;
            RAST._IExpr _7734_valueGen;
            DCOMP._IOwnership _7735___v145;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7736_recIdents;
            RAST._IExpr _out3648;
            DCOMP._IOwnership _out3649;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3650;
            DCOMP.COMP.GenExpr(((_7721_values).Select(_7732_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3648, out _out3649, out _out3650);
            _7734_valueGen = _out3648;
            _7735___v145 = _out3649;
            _7736_recIdents = _out3650;
            _7730_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7730_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMP.__default.escapeIdent((((_7721_values).Select(_7732_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_7733_typStr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7736_recIdents);
            _7730_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7730_s, (_7734_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMP._IEnvironment _7737_newEnv;
          _7737_newEnv = DCOMP.Environment.create(_7722_paramNames, _7725_paramTypes);
          RAST._IExpr _7738_recGen;
          DCOMP._IOwnership _7739_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7740_recIdents;
          RAST._IExpr _out3651;
          DCOMP._IOwnership _out3652;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3653;
          DCOMP.COMP.GenExpr(_7719_expr, selfIdent, _7737_newEnv, expectedOwnership, out _out3651, out _out3652, out _out3653);
          _7738_recGen = _out3651;
          _7739_recOwned = _out3652;
          _7740_recIdents = _out3653;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7740_recIdents, _7726_paramNamesSet);
          _7730_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7730_s, (_7738_recGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_7730_s);
          RAST._IExpr _out3654;
          DCOMP._IOwnership _out3655;
          DCOMP.COMP.FromOwnership(r, _7739_recOwned, expectedOwnership, out _out3654, out _out3655);
          r = _out3654;
          resultingOwnership = _out3655;
          return ;
        }
      } else if (_source254.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _7741___mcc_h258 = _source254.dtor_name;
        DAST._IType _7742___mcc_h259 = _source254.dtor_typ;
        DAST._IExpression _7743___mcc_h260 = _source254.dtor_value;
        DAST._IExpression _7744___mcc_h261 = _source254.dtor_iifeBody;
        DAST._IExpression _7745_iifeBody = _7744___mcc_h261;
        DAST._IExpression _7746_value = _7743___mcc_h260;
        DAST._IType _7747_tpe = _7742___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _7748_name = _7741___mcc_h258;
        {
          RAST._IExpr _7749_valueGen;
          DCOMP._IOwnership _7750___v146;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7751_recIdents;
          RAST._IExpr _out3656;
          DCOMP._IOwnership _out3657;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3658;
          DCOMP.COMP.GenExpr(_7746_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3656, out _out3657, out _out3658);
          _7749_valueGen = _out3656;
          _7750___v146 = _out3657;
          _7751_recIdents = _out3658;
          readIdents = _7751_recIdents;
          RAST._IType _7752_valueTypeGen;
          RAST._IType _out3659;
          _out3659 = DCOMP.COMP.GenType(_7747_tpe, false, true);
          _7752_valueTypeGen = _out3659;
          RAST._IExpr _7753_bodyGen;
          DCOMP._IOwnership _7754___v147;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7755_bodyIdents;
          RAST._IExpr _out3660;
          DCOMP._IOwnership _out3661;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3662;
          DCOMP.COMP.GenExpr(_7745_iifeBody, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3660, out _out3661, out _out3662);
          _7753_bodyGen = _out3660;
          _7754___v147 = _out3661;
          _7755_bodyIdents = _out3662;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_7755_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_7748_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMP.__default.escapeIdent((_7748_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_7752_valueTypeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_7749_valueGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_7753_bodyGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out3663;
          DCOMP._IOwnership _out3664;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3663, out _out3664);
          r = _out3663;
          resultingOwnership = _out3664;
          return ;
        }
      } else if (_source254.is_Apply) {
        DAST._IExpression _7756___mcc_h262 = _source254.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _7757___mcc_h263 = _source254.dtor_args;
        Dafny.ISequence<DAST._IExpression> _7758_args = _7757___mcc_h263;
        DAST._IExpression _7759_func = _7756___mcc_h262;
        {
          RAST._IExpr _7760_funcExpr;
          DCOMP._IOwnership _7761___v148;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7762_recIdents;
          RAST._IExpr _out3665;
          DCOMP._IOwnership _out3666;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3667;
          DCOMP.COMP.GenExpr(_7759_func, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3665, out _out3666, out _out3667);
          _7760_funcExpr = _out3665;
          _7761___v148 = _out3666;
          _7762_recIdents = _out3667;
          readIdents = _7762_recIdents;
          Dafny.ISequence<Dafny.Rune> _7763_argString;
          _7763_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _7764_i;
          _7764_i = BigInteger.Zero;
          while ((_7764_i) < (new BigInteger((_7758_args).Count))) {
            if ((_7764_i).Sign == 1) {
              _7763_argString = Dafny.Sequence<Dafny.Rune>.Concat(_7763_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _7765_argExpr;
            DCOMP._IOwnership _7766_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7767_argIdents;
            RAST._IExpr _out3668;
            DCOMP._IOwnership _out3669;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3670;
            DCOMP.COMP.GenExpr((_7758_args).Select(_7764_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3668, out _out3669, out _out3670);
            _7765_argExpr = _out3668;
            _7766_argOwned = _out3669;
            _7767_argIdents = _out3670;
            Dafny.ISequence<Dafny.Rune> _7768_argExprString;
            _7768_argExprString = (_7765_argExpr)._ToString(DCOMP.__default.IND);
            if (object.Equals(_7766_argOwned, DCOMP.Ownership.create_OwnershipOwned())) {
              _7768_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _7768_argExprString);
            }
            _7763_argString = Dafny.Sequence<Dafny.Rune>.Concat(_7763_argString, _7768_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _7767_argIdents);
            _7764_i = (_7764_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_7760_funcExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _7763_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out3671;
          DCOMP._IOwnership _out3672;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3671, out _out3672);
          r = _out3671;
          resultingOwnership = _out3672;
          return ;
        }
      } else if (_source254.is_TypeTest) {
        DAST._IExpression _7769___mcc_h264 = _source254.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7770___mcc_h265 = _source254.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _7771___mcc_h266 = _source254.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _7772_variant = _7771___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7773_dType = _7770___mcc_h265;
        DAST._IExpression _7774_on = _7769___mcc_h264;
        {
          RAST._IExpr _7775_exprGen;
          DCOMP._IOwnership _7776___v149;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7777_recIdents;
          RAST._IExpr _out3673;
          DCOMP._IOwnership _out3674;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3675;
          DCOMP.COMP.GenExpr(_7774_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3673, out _out3674, out _out3675);
          _7775_exprGen = _out3673;
          _7776___v149 = _out3674;
          _7777_recIdents = _out3675;
          RAST._IType _7778_dTypePath;
          RAST._IType _out3676;
          _out3676 = DCOMP.COMP.GenPath(_7773_dType);
          _7778_dTypePath = _out3676;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_7775_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_7778_dTypePath).MSel(DCOMP.__default.escapeIdent(_7772_variant)))._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out3677;
          DCOMP._IOwnership _out3678;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3677, out _out3678);
          r = _out3677;
          resultingOwnership = _out3678;
          readIdents = _7777_recIdents;
          return ;
        }
      } else if (_source254.is_InitializationValue) {
        DAST._IType _7779___mcc_h267 = _source254.dtor_typ;
        DAST._IType _7780_typ = _7779___mcc_h267;
        {
          RAST._IType _7781_typExpr;
          RAST._IType _out3679;
          _out3679 = DCOMP.COMP.GenType(_7780_typ, false, false);
          _7781_typExpr = _out3679;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_7781_typExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out3680;
          DCOMP._IOwnership _out3681;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3680, out _out3681);
          r = _out3680;
          resultingOwnership = _out3681;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source254.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out3682;
          DCOMP._IOwnership _out3683;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3682, out _out3683);
          r = _out3682;
          resultingOwnership = _out3683;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source254.is_SetBoundedPool) {
        DAST._IExpression _7782___mcc_h268 = _source254.dtor_of;
        DAST._IExpression _7783_of = _7782___mcc_h268;
        {
          RAST._IExpr _7784_exprGen;
          DCOMP._IOwnership _7785___v150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7786_recIdents;
          RAST._IExpr _out3684;
          DCOMP._IOwnership _out3685;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3686;
          DCOMP.COMP.GenExpr(_7783_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3684, out _out3685, out _out3686);
          _7784_exprGen = _out3684;
          _7785___v150 = _out3685;
          _7786_recIdents = _out3686;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7784_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out3687;
          DCOMP._IOwnership _out3688;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3687, out _out3688);
          r = _out3687;
          resultingOwnership = _out3688;
          readIdents = _7786_recIdents;
          return ;
        }
      } else if (_source254.is_SeqBoundedPool) {
        DAST._IExpression _7787___mcc_h269 = _source254.dtor_of;
        bool _7788___mcc_h270 = _source254.dtor_includeDuplicates;
        bool _7789_includeDuplicates = _7788___mcc_h270;
        DAST._IExpression _7790_of = _7787___mcc_h269;
        {
          RAST._IExpr _7791_exprGen;
          DCOMP._IOwnership _7792___v151;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7793_recIdents;
          RAST._IExpr _out3689;
          DCOMP._IOwnership _out3690;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3691;
          DCOMP.COMP.GenExpr(_7790_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out3689, out _out3690, out _out3691);
          _7791_exprGen = _out3689;
          _7792___v151 = _out3690;
          _7793_recIdents = _out3691;
          Dafny.ISequence<Dafny.Rune> _7794_s;
          _7794_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_7791_exprGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_7789_includeDuplicates)) {
            _7794_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _7794_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_7794_s);
          RAST._IExpr _out3692;
          DCOMP._IOwnership _out3693;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3692, out _out3693);
          r = _out3692;
          resultingOwnership = _out3693;
          readIdents = _7793_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _7795___mcc_h271 = _source254.dtor_lo;
        DAST._IExpression _7796___mcc_h272 = _source254.dtor_hi;
        DAST._IExpression _7797_hi = _7796___mcc_h272;
        DAST._IExpression _7798_lo = _7795___mcc_h271;
        {
          RAST._IExpr _7799_lo;
          DCOMP._IOwnership _7800___v152;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7801_recIdentsLo;
          RAST._IExpr _out3694;
          DCOMP._IOwnership _out3695;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3696;
          DCOMP.COMP.GenExpr(_7798_lo, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3694, out _out3695, out _out3696);
          _7799_lo = _out3694;
          _7800___v152 = _out3695;
          _7801_recIdentsLo = _out3696;
          RAST._IExpr _7802_hi;
          DCOMP._IOwnership _7803___v153;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7804_recIdentsHi;
          RAST._IExpr _out3697;
          DCOMP._IOwnership _out3698;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3699;
          DCOMP.COMP.GenExpr(_7797_hi, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out3697, out _out3698, out _out3699);
          _7802_hi = _out3697;
          _7803___v153 = _out3698;
          _7804_recIdentsHi = _out3699;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_7799_lo)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_7802_hi)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out3700;
          DCOMP._IOwnership _out3701;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out3700, out _out3701);
          r = _out3700;
          resultingOwnership = _out3701;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7801_recIdentsLo, _7804_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _7805_i;
      _7805_i = BigInteger.Zero;
      while ((_7805_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _7806_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _7807_m;
        RAST._IMod _out3702;
        _out3702 = DCOMP.COMP.GenModule((p).Select(_7805_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _7807_m = _out3702;
        _7806_generated = (_7807_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_7805_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _7806_generated);
        _7805_i = (_7805_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _7808_i;
      _7808_i = BigInteger.Zero;
      while ((_7808_i) < (new BigInteger((fullName).Count))) {
        if ((_7808_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMP.__default.escapeIdent((fullName).Select(_7808_i)));
        _7808_i = (_7808_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMP
namespace DCOMPUTF16 {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in119 = (i).Drop(new BigInteger(2));
            i = _in119;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in120 = (i).Drop(BigInteger.One);
        i = _in120;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _7809___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_7809___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _7809___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7809___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in121 = (i).Drop(new BigInteger(2));
        i = _in121;
        goto TAIL_CALL_START;
      } else {
        _7809___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7809___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in122 = (i).Drop(BigInteger.One);
        i = _in122;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _7810___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_7810___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _7810___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7810___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in123 = (i).Drop(BigInteger.One);
        i = _in123;
        goto TAIL_CALL_START;
      } else {
        _7810___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_7810___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in124 = (i).Drop(BigInteger.One);
        i = _in124;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMPUTF16.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMPUTF16.__default.has__special(i)))) && (!(DCOMPUTF16.__default.reserved__rust).Contains(i))) && (!(DCOMPUTF16.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMPUTF16.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMPUTF16.__default.is__tuple__builder(i)) {
        return DCOMPUTF16.__default.better__tuple__builder__name(i);
      } else if ((DCOMPUTF16.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMPUTF16.__default.is__idiomatic__rust__id(i)) {
        return DCOMPUTF16.__default.idiomatic__rust(i);
      } else if (DCOMPUTF16.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _7811_r = DCOMPUTF16.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _7811_r);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static bool UnicodeChars { get {
      return false;
    } }
    public static Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public static RAST._IType DafnyCharUnderlying { get {
      if (DCOMPUTF16.__default.UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMPUTF16._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMPUTF16._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IOwnership>(DCOMPUTF16.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IUnassignedStatus {
    bool is_Unassigned { get; }
    bool is_WithTracker { get; }
    Dafny.ISequence<Dafny.Rune> dtor_tracker__name { get; }
    _IUnassignedStatus DowncastClone();
  }
  public abstract class UnassignedStatus : _IUnassignedStatus {
    public UnassignedStatus() {
    }
    private static readonly DCOMPUTF16._IUnassignedStatus theDefault = create_Unassigned();
    public static DCOMPUTF16._IUnassignedStatus Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus>(DCOMPUTF16.UnassignedStatus.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IUnassignedStatus> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IUnassignedStatus create_Unassigned() {
      return new UnassignedStatus_Unassigned();
    }
    public static _IUnassignedStatus create_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) {
      return new UnassignedStatus_WithTracker(tracker__name);
    }
    public bool is_Unassigned { get { return this is UnassignedStatus_Unassigned; } }
    public bool is_WithTracker { get { return this is UnassignedStatus_WithTracker; } }
    public Dafny.ISequence<Dafny.Rune> dtor_tracker__name {
      get {
        var d = this;
        return ((UnassignedStatus_WithTracker)d)._tracker__name;
      }
    }
    public abstract _IUnassignedStatus DowncastClone();
  }
  public class UnassignedStatus_Unassigned : UnassignedStatus {
    public UnassignedStatus_Unassigned() : base() {
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_Unassigned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_Unassigned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.Unassigned";
      return s;
    }
  }
  public class UnassignedStatus_WithTracker : UnassignedStatus {
    public readonly Dafny.ISequence<Dafny.Rune> _tracker__name;
    public UnassignedStatus_WithTracker(Dafny.ISequence<Dafny.Rune> tracker__name) : base() {
      this._tracker__name = tracker__name;
    }
    public override _IUnassignedStatus DowncastClone() {
      if (this is _IUnassignedStatus dt) { return dt; }
      return new UnassignedStatus_WithTracker(_tracker__name);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.UnassignedStatus_WithTracker;
      return oth != null && object.Equals(this._tracker__name, oth._tracker__name);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._tracker__name));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.UnassignedStatus.WithTracker";
      s += "(";
      s += this._tracker__name.ToVerbatimString(true);
      s += ")";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._names = names;
      this._types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_names, _types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMPUTF16.Environment;
      return oth != null && object.Equals(this._names, oth._names) && object.Equals(this._types, oth._types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompilerUTF16.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._types);
      s += ")";
      return s;
    }
    private static readonly DCOMPUTF16._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMPUTF16._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment>(DCOMPUTF16.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMPUTF16._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._types;
      }
    }
    public static DCOMPUTF16._IEnvironment Empty() {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool HasCopySemantics(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).HasCopySemantics());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).HasCopySemantics(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMPUTF16._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
  }

  public partial class COMP {
    public COMP() {
    }
    public static RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<RAST._IModDecl> _7812_body;
      Dafny.ISequence<RAST._IModDecl> _out3703;
      _out3703 = DCOMPUTF16.COMP.GenModuleBody((mod).dtor_body, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
      _7812_body = _out3703;
      s = (((mod).dtor_isExtern) ? (RAST.Mod.create_ExternMod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name))) : (RAST.Mod.create_Mod(DCOMPUTF16.__default.escapeIdent((mod).dtor_name), _7812_body)));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((containingPath).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System")))) {
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements()))));
      }
      BigInteger _hi23 = new BigInteger((body).Count);
      for (BigInteger _7813_i = BigInteger.Zero; _7813_i < _hi23; _7813_i++) {
        Dafny.ISequence<RAST._IModDecl> _7814_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source262 = (body).Select(_7813_i);
        if (_source262.is_Module) {
          DAST._IModule _7815___mcc_h0 = _source262.dtor_Module_a0;
          DAST._IModule _7816_m = _7815___mcc_h0;
          RAST._IMod _7817_mm;
          RAST._IMod _out3704;
          _out3704 = DCOMPUTF16.COMP.GenModule(_7816_m, containingPath);
          _7817_mm = _out3704;
          _7814_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_7817_mm));
        } else if (_source262.is_Class) {
          DAST._IClass _7818___mcc_h1 = _source262.dtor_Class_a0;
          DAST._IClass _7819_c = _7818___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out3705;
          _out3705 = DCOMPUTF16.COMP.GenClass(_7819_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_7819_c).dtor_name)));
          _7814_generated = _out3705;
        } else if (_source262.is_Trait) {
          DAST._ITrait _7820___mcc_h2 = _source262.dtor_Trait_a0;
          DAST._ITrait _7821_t = _7820___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _7822_tt;
          Dafny.ISequence<Dafny.Rune> _out3706;
          _out3706 = DCOMPUTF16.COMP.GenTrait(_7821_t, containingPath);
          _7822_tt = _out3706;
          _7814_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_7822_tt));
        } else if (_source262.is_Newtype) {
          DAST._INewtype _7823___mcc_h3 = _source262.dtor_Newtype_a0;
          DAST._INewtype _7824_n = _7823___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out3707;
          _out3707 = DCOMPUTF16.COMP.GenNewtype(_7824_n);
          _7814_generated = _out3707;
        } else {
          DAST._IDatatype _7825___mcc_h4 = _source262.dtor_Datatype_a0;
          DAST._IDatatype _7826_d = _7825___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out3708;
          _out3708 = DCOMPUTF16.COMP.GenDatatype(_7826_d);
          _7814_generated = _out3708;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _7814_generated);
      }
      return s;
    }
    public static void GenTypeParameters(Dafny.ISequence<DAST._IType> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._ITypeParam> typeParams, out Dafny.ISequence<RAST._ITypeParam> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      BigInteger _7827_tpI;
      _7827_tpI = BigInteger.Zero;
      if ((new BigInteger((@params).Count)).Sign == 1) {
        while ((_7827_tpI) < (new BigInteger((@params).Count))) {
          DAST._IType _7828_tp;
          _7828_tp = (@params).Select(_7827_tpI);
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_7828_tp));
          RAST._IType _7829_genTp;
          RAST._IType _out3709;
          _out3709 = DCOMPUTF16.COMP.GenType(_7828_tp, false, false);
          _7829_genTp = _out3709;
          typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_7829_genTp)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements())));
          _7827_tpI = (_7827_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<RAST._IType> _7830_baseConstraints;
      _7830_baseConstraints = Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.StaticTrait);
      constrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(typeParams, _7830_baseConstraints);
    }
    public static Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _7831_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _7832_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _7833_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _7834_whereConstraints;
      Dafny.ISet<DAST._IType> _out3710;
      Dafny.ISequence<RAST._ITypeParam> _out3711;
      Dafny.ISequence<RAST._ITypeParam> _out3712;
      Dafny.ISequence<Dafny.Rune> _out3713;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3710, out _out3711, out _out3712, out _out3713);
      _7831_typeParamsSet = _out3710;
      _7832_sTypeParams = _out3711;
      _7833_sConstrainedTypeParams = _out3712;
      _7834_whereConstraints = _out3713;
      Dafny.ISequence<Dafny.Rune> _7835_constrainedTypeParams;
      _7835_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_7833_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _7836_fields;
      _7836_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _7837_fieldInits;
      _7837_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _7838_fieldI;
      _7838_fieldI = BigInteger.Zero;
      while ((_7838_fieldI) < (new BigInteger(((c).dtor_fields).Count))) {
        DAST._IField _7839_field;
        _7839_field = ((c).dtor_fields).Select(_7838_fieldI);
        RAST._IType _7840_fieldType;
        RAST._IType _out3714;
        _out3714 = DCOMPUTF16.COMP.GenType(((_7839_field).dtor_formal).dtor_typ, false, false);
        _7840_fieldType = _out3714;
        Dafny.ISequence<Dafny.Rune> _7841_fieldRustName;
        _7841_fieldRustName = DCOMPUTF16.__default.escapeIdent(((_7839_field).dtor_formal).dtor_name);
        _7836_fields = Dafny.Sequence<RAST._IField>.Concat(_7836_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_7841_fieldRustName, _7840_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source263 = (_7839_field).dtor_defaultValue;
        if (_source263.is_None) {
          {
            RAST._IExpr _7842_default;
            _7842_default = RAST.__default.std__Default__default;
            _7837_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7837_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_7841_fieldRustName, _7842_default)));
          }
        } else {
          DAST._IExpression _7843___mcc_h0 = _source263.dtor_value;
          DAST._IExpression _7844_e = _7843___mcc_h0;
          {
            RAST._IExpr _7845_expr;
            DCOMPUTF16._IOwnership _7846___v40;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7847___v41;
            RAST._IExpr _out3715;
            DCOMPUTF16._IOwnership _out3716;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3717;
            DCOMPUTF16.COMP.GenExpr(_7844_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3715, out _out3716, out _out3717);
            _7845_expr = _out3715;
            _7846___v40 = _out3716;
            _7847___v41 = _out3717;
            _7837_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7837_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_7841_fieldRustName, _7845_expr)));
          }
        }
        _7838_fieldI = (_7838_fieldI) + (BigInteger.One);
      }
      BigInteger _hi24 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _7848_typeParamI = BigInteger.Zero; _7848_typeParamI < _hi24; _7848_typeParamI++) {
        RAST._IType _7849_tpeGen;
        RAST._IType _out3718;
        _out3718 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_7848_typeParamI), false, false);
        _7849_tpeGen = _out3718;
        _7836_fields = Dafny.Sequence<RAST._IField>.Concat(_7836_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_7848_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_7849_tpeGen))))));
        _7837_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7837_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_7848_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _7850_datatypeName;
      _7850_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      RAST._IStruct _7851_struct;
      _7851_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _7850_datatypeName, _7832_sTypeParams, RAST.Fields.create_NamedFields(_7836_fields));
      Dafny.ISequence<RAST._IType> _7852_typeParamsAsTypes;
      _7852_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_7853_typeParam) => {
        return RAST.__default.RawType((_7853_typeParam).dtor_content);
      })), _7832_sTypeParams);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_7851_struct));
      DAST._IType _7854_underlyingDatatype;
      _7854_underlyingDatatype = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes)));
      Dafny.ISequence<RAST._IImplMember> _7855_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _7856_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3719;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3720;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_AllocatedDatatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _7831_typeParamsSet, out _out3719, out _out3720);
      _7855_implBodyRaw = _out3719;
      _7856_traitBodies = _out3720;
      Dafny.ISequence<RAST._IImplMember> _7857_implBody;
      _7857_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(RAST.Expr.create_Identifier(_7850_datatypeName), _7837_fieldInits))))), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.SelfPointerMut), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate"))).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())))))), _7855_implBodyRaw);
      RAST._IImpl _7858_i;
      _7858_i = RAST.Impl.create_Impl(_7833_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7850_datatypeName), _7852_typeParamsAsTypes), _7834_whereConstraints, _7857_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7858_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _7859_i;
        _7859_i = BigInteger.Zero;
        while ((_7859_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _7860_superClass;
          _7860_superClass = ((c).dtor_superClasses).Select(_7859_i);
          DAST._IType _source264 = _7860_superClass;
          if (_source264.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7861___mcc_h1 = _source264.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _7862___mcc_h2 = _source264.dtor_typeArgs;
            DAST._IResolvedType _7863___mcc_h3 = _source264.dtor_resolved;
            DAST._IResolvedType _source265 = _7863___mcc_h3;
            if (_source265.is_AllocatedDatatype) {
              DAST._IDatatypeType _7864___mcc_h7 = _source265.dtor_datatypeType;
            } else if (_source265.is_Datatype) {
              DAST._IDatatypeType _7865___mcc_h9 = _source265.dtor_datatypeType;
            } else if (_source265.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7866___mcc_h11 = _source265.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _7867___mcc_h12 = _source265.dtor_attributes;
              Dafny.ISequence<DAST._IType> _7868_typeArgs = _7862___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7869_traitPath = _7861___mcc_h1;
              {
                RAST._IType _7870_pathStr;
                RAST._IType _out3721;
                _out3721 = DCOMPUTF16.COMP.GenPath(_7869_traitPath);
                _7870_pathStr = _out3721;
                Dafny.ISequence<RAST._IType> _7871_typeArgs;
                Dafny.ISequence<RAST._IType> _out3722;
                _out3722 = DCOMPUTF16.COMP.GenTypeArgs(_7868_typeArgs, false, false);
                _7871_typeArgs = _out3722;
                Dafny.ISequence<RAST._IImplMember> _7872_body;
                _7872_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_7856_traitBodies).Contains(_7869_traitPath)) {
                  _7872_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_7856_traitBodies,_7869_traitPath);
                }
                RAST._IType _7873_genSelfPath;
                RAST._IType _out3723;
                _out3723 = DCOMPUTF16.COMP.GenPath(path);
                _7873_genSelfPath = _out3723;
                RAST._IModDecl _7874_x;
                _7874_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7833_sConstrainedTypeParams, RAST.Type.create_TypeApp(_7870_pathStr, _7871_typeArgs), RAST.__default.Rc(RAST.Type.create_TypeApp(_7873_genSelfPath, _7852_typeParamsAsTypes)), _7834_whereConstraints, _7872_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_7874_x));
              }
            } else {
              DAST._IType _7875___mcc_h15 = _source265.dtor_baseType;
              DAST._INewtypeRange _7876___mcc_h16 = _source265.dtor_range;
              bool _7877___mcc_h17 = _source265.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _7878___mcc_h18 = _source265.dtor_attributes;
            }
          } else if (_source264.is_Nullable) {
            DAST._IType _7879___mcc_h23 = _source264.dtor_Nullable_a0;
          } else if (_source264.is_Tuple) {
            Dafny.ISequence<DAST._IType> _7880___mcc_h25 = _source264.dtor_Tuple_a0;
          } else if (_source264.is_Array) {
            DAST._IType _7881___mcc_h27 = _source264.dtor_element;
            BigInteger _7882___mcc_h28 = _source264.dtor_dims;
          } else if (_source264.is_Seq) {
            DAST._IType _7883___mcc_h31 = _source264.dtor_element;
          } else if (_source264.is_Set) {
            DAST._IType _7884___mcc_h33 = _source264.dtor_element;
          } else if (_source264.is_Multiset) {
            DAST._IType _7885___mcc_h35 = _source264.dtor_element;
          } else if (_source264.is_Map) {
            DAST._IType _7886___mcc_h37 = _source264.dtor_key;
            DAST._IType _7887___mcc_h38 = _source264.dtor_value;
          } else if (_source264.is_SetBuilder) {
            DAST._IType _7888___mcc_h41 = _source264.dtor_element;
          } else if (_source264.is_MapBuilder) {
            DAST._IType _7889___mcc_h43 = _source264.dtor_key;
            DAST._IType _7890___mcc_h44 = _source264.dtor_value;
          } else if (_source264.is_Arrow) {
            Dafny.ISequence<DAST._IType> _7891___mcc_h47 = _source264.dtor_args;
            DAST._IType _7892___mcc_h48 = _source264.dtor_result;
          } else if (_source264.is_Primitive) {
            DAST._IPrimitive _7893___mcc_h51 = _source264.dtor_Primitive_a0;
          } else if (_source264.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _7894___mcc_h53 = _source264.dtor_Passthrough_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _7895___mcc_h55 = _source264.dtor_TypeArg_a0;
          }
          _7859_i = (_7859_i) + (BigInteger.One);
        }
      }
      RAST._IImpl _7896_d;
      _7896_d = RAST.Impl.create_ImplFor(_7833_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7850_datatypeName), _7852_typeParamsAsTypes), _7834_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(_7850_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::new()"))))))));
      Dafny.ISequence<RAST._IModDecl> _7897_defaultImpl;
      _7897_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7896_d));
      RAST._IImpl _7898_p;
      _7898_p = RAST.Impl.create_ImplFor(_7833_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7850_datatypeName), _7852_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), ((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")"))))))));
      Dafny.ISequence<RAST._IModDecl> _7899_printImpl;
      _7899_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7898_p));
      RAST._IImpl _7900_pp;
      _7900_pp = RAST.Impl.create_ImplFor(_7832_sTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::cmp::PartialEq")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7850_datatypeName), _7852_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("eq"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("other"), RAST.__default.SelfBorrowed)), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ptr::eq(self, other)")))))));
      Dafny.ISequence<RAST._IModDecl> _7901_ptrPartialEqImpl;
      _7901_ptrPartialEqImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_7900_pp));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(s, _7897_defaultImpl), _7899_printImpl), _7901_ptrPartialEqImpl);
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _7902_typeParamsSet;
      _7902_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._IType> _7903_typeParams;
      _7903_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _7904_tpI;
      _7904_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_7904_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._IType _7905_tp;
          _7905_tp = ((t).dtor_typeParams).Select(_7904_tpI);
          _7902_typeParamsSet = Dafny.Set<DAST._IType>.Union(_7902_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_7905_tp));
          RAST._IType _7906_genTp;
          RAST._IType _out3724;
          _out3724 = DCOMPUTF16.COMP.GenType(_7905_tp, false, false);
          _7906_genTp = _out3724;
          _7903_typeParams = Dafny.Sequence<RAST._IType>.Concat(_7903_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_7906_genTp));
          _7904_tpI = (_7904_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7907_fullPath;
      _7907_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _7908_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _7909___v45;
      Dafny.ISequence<RAST._IImplMember> _out3725;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3726;
      DCOMPUTF16.COMP.GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_7907_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_7907_fullPath, (t).dtor_attributes)), _7902_typeParamsSet, out _out3725, out _out3726);
      _7908_implBody = _out3725;
      _7909___v45 = _out3726;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(Dafny.Sequence<RAST._ITypeParam>.FromElements(), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMPUTF16.__default.escapeIdent((t).dtor_name)), _7903_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _7908_implBody)))._ToString(DCOMPUTF16.__default.IND);
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _7910_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _7911_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _7912_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _7913_whereConstraints;
      Dafny.ISet<DAST._IType> _out3727;
      Dafny.ISequence<RAST._ITypeParam> _out3728;
      Dafny.ISequence<RAST._ITypeParam> _out3729;
      Dafny.ISequence<Dafny.Rune> _out3730;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3727, out _out3728, out _out3729, out _out3730);
      _7910_typeParamsSet = _out3727;
      _7911_sTypeParams = _out3728;
      _7912_sConstrainedTypeParams = _out3729;
      _7913_whereConstraints = _out3730;
      Dafny.ISequence<RAST._IType> _7914_typeParamsAsTypes;
      _7914_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_7915_t) => {
        return RAST.__default.RawType((_7915_t).dtor_content);
      })), _7911_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _7916_constrainedTypeParams;
      _7916_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_7912_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _7917_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source266 = DCOMPUTF16.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source266.is_None) {
        RAST._IType _out3731;
        _out3731 = DCOMPUTF16.COMP.GenType((c).dtor_base, false, false);
        _7917_underlyingType = _out3731;
      } else {
        RAST._IType _7918___mcc_h0 = _source266.dtor_value;
        RAST._IType _7919_v = _7918___mcc_h0;
        _7917_underlyingType = _7919_v;
      }
      DAST._IType _7920_resultingType;
      _7920_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _7921_datatypeName;
      _7921_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _7921_datatypeName, _7911_sTypeParams, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _7917_underlyingType))))));
      RAST._IExpr _7922_fnBody;
      _7922_fnBody = RAST.Expr.create_Identifier(_7921_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source267 = (c).dtor_witnessExpr;
      if (_source267.is_None) {
        {
          _7922_fnBody = (_7922_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _7923___mcc_h1 = _source267.dtor_value;
        DAST._IExpression _7924_e = _7923___mcc_h1;
        {
          DAST._IExpression _7925_e;
          _7925_e = ((object.Equals((c).dtor_base, _7920_resultingType)) ? (_7924_e) : (DAST.Expression.create_Convert(_7924_e, (c).dtor_base, _7920_resultingType)));
          RAST._IExpr _7926_eStr;
          DCOMPUTF16._IOwnership _7927___v46;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7928___v47;
          RAST._IExpr _out3732;
          DCOMPUTF16._IOwnership _out3733;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3734;
          DCOMPUTF16.COMP.GenExpr(_7925_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3732, out _out3733, out _out3734);
          _7926_eStr = _out3732;
          _7927___v46 = _out3733;
          _7928___v47 = _out3734;
          _7922_fnBody = (_7922_fnBody).Apply1(_7926_eStr);
        }
      }
      RAST._IImplMember _7929_body;
      _7929_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7922_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7912_sConstrainedTypeParams, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7921_datatypeName), _7914_typeParamsAsTypes), _7913_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_7929_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7912_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7921_datatypeName), _7914_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7912_sConstrainedTypeParams, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7921_datatypeName), _7914_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_7917_underlyingType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public static Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _7930_typeParamsSet;
      Dafny.ISequence<RAST._ITypeParam> _7931_sTypeParams;
      Dafny.ISequence<RAST._ITypeParam> _7932_sConstrainedTypeParams;
      Dafny.ISequence<Dafny.Rune> _7933_whereConstraints;
      Dafny.ISet<DAST._IType> _out3735;
      Dafny.ISequence<RAST._ITypeParam> _out3736;
      Dafny.ISequence<RAST._ITypeParam> _out3737;
      Dafny.ISequence<Dafny.Rune> _out3738;
      DCOMPUTF16.COMP.GenTypeParameters((c).dtor_typeParams, out _out3735, out _out3736, out _out3737, out _out3738);
      _7930_typeParamsSet = _out3735;
      _7931_sTypeParams = _out3736;
      _7932_sConstrainedTypeParams = _out3737;
      _7933_whereConstraints = _out3738;
      Dafny.ISequence<RAST._IType> _7934_typeParamsAsTypes;
      _7934_typeParamsAsTypes = Std.Collections.Seq.__default.Map<RAST._ITypeParam, RAST._IType>(((System.Func<RAST._ITypeParam, RAST._IType>)((_7935_t) => {
        return RAST.__default.RawType((_7935_t).dtor_content);
      })), _7931_sTypeParams);
      Dafny.ISequence<Dafny.Rune> _7936_constrainedTypeParams;
      _7936_constrainedTypeParams = RAST.TypeParam.ToStringMultiple(_7932_sConstrainedTypeParams, Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.IND, DCOMPUTF16.__default.IND));
      Dafny.ISequence<Dafny.Rune> _7937_datatypeName;
      _7937_datatypeName = DCOMPUTF16.__default.escapeIdent((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _7938_ctors;
      _7938_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _7939_i;
      _7939_i = BigInteger.Zero;
      while ((_7939_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _7940_ctor;
        _7940_ctor = ((c).dtor_ctors).Select(_7939_i);
        Dafny.ISequence<RAST._IField> _7941_ctorArgs;
        _7941_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _7942_j;
        _7942_j = BigInteger.Zero;
        while ((_7942_j) < (new BigInteger(((_7940_ctor).dtor_args).Count))) {
          DAST._IFormal _7943_formal;
          _7943_formal = ((_7940_ctor).dtor_args).Select(_7942_j);
          RAST._IType _7944_formalType;
          RAST._IType _out3739;
          _out3739 = DCOMPUTF16.COMP.GenType((_7943_formal).dtor_typ, false, false);
          _7944_formalType = _out3739;
          if ((c).dtor_isCo) {
            _7941_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_7941_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_7943_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_7944_formalType))))));
          } else {
            _7941_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_7941_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_7943_formal).dtor_name), _7944_formalType))));
          }
          _7942_j = (_7942_j) + (BigInteger.One);
        }
        _7938_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_7938_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMPUTF16.__default.escapeIdent((_7940_ctor).dtor_name), RAST.Fields.create_NamedFields(_7941_ctorArgs))));
        _7939_i = (_7939_i) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7945_selfPath;
      _7945_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _7946_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _7947_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out3740;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out3741;
      DCOMPUTF16.COMP.GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_7945_selfPath, (c).dtor_attributes))), _7930_typeParamsSet, out _out3740, out _out3741);
      _7946_implBodyRaw = _out3740;
      _7947_traitBodies = _out3741;
      Dafny.ISequence<RAST._IImplMember> _7948_implBody;
      _7948_implBody = _7946_implBodyRaw;
      _7939_i = BigInteger.Zero;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7949_emittedFields;
      _7949_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      while ((_7939_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _7950_ctor;
        _7950_ctor = ((c).dtor_ctors).Select(_7939_i);
        BigInteger _7951_j;
        _7951_j = BigInteger.Zero;
        while ((_7951_j) < (new BigInteger(((_7950_ctor).dtor_args).Count))) {
          DAST._IFormal _7952_formal;
          _7952_formal = ((_7950_ctor).dtor_args).Select(_7951_j);
          if (!((_7949_emittedFields).Contains((_7952_formal).dtor_name))) {
            _7949_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_7949_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_7952_formal).dtor_name));
            RAST._IType _7953_formalType;
            RAST._IType _out3742;
            _out3742 = DCOMPUTF16.COMP.GenType((_7952_formal).dtor_typ, false, false);
            _7953_formalType = _out3742;
            Dafny.ISequence<RAST._IMatchCase> _7954_cases;
            _7954_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _7955_k;
            _7955_k = BigInteger.Zero;
            while ((_7955_k) < (new BigInteger(((c).dtor_ctors).Count))) {
              DAST._IDatatypeCtor _7956_ctor2;
              _7956_ctor2 = ((c).dtor_ctors).Select(_7955_k);
              Dafny.ISequence<Dafny.Rune> _7957_pattern;
              _7957_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7937_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent((_7956_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _7958_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              BigInteger _7959_l;
              _7959_l = BigInteger.Zero;
              bool _7960_hasMatchingField;
              _7960_hasMatchingField = false;
              while ((_7959_l) < (new BigInteger(((_7956_ctor2).dtor_args).Count))) {
                DAST._IFormal _7961_formal2;
                _7961_formal2 = ((_7956_ctor2).dtor_args).Select(_7959_l);
                if (((_7952_formal).dtor_name).Equals((_7961_formal2).dtor_name)) {
                  _7960_hasMatchingField = true;
                }
                _7957_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7957_pattern, DCOMPUTF16.__default.escapeIdent((_7961_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
                _7959_l = (_7959_l) + (BigInteger.One);
              }
              _7957_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_7957_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_7960_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _7958_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMPUTF16.__default.escapeIdent((_7952_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _7958_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_7952_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _7958_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _7962_ctorMatch;
              _7962_ctorMatch = RAST.MatchCase.create(_7957_pattern, RAST.Expr.create_RawExpr(_7958_rhs));
              _7954_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7954_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_7962_ctorMatch));
              _7955_k = (_7955_k) + (BigInteger.One);
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _7954_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7954_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_7937_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _7963_methodBody;
            _7963_methodBody = RAST.Expr.create_Match(RAST.__default.self, _7954_cases);
            _7948_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_7948_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMPUTF16.__default.escapeIdent((_7952_formal).dtor_name), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_7953_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7963_methodBody)))));
          }
          _7951_j = (_7951_j) + (BigInteger.One);
        }
        _7939_i = (_7939_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        BigInteger _7964_typeI;
        _7964_typeI = BigInteger.Zero;
        Dafny.ISequence<RAST._IType> _7965_types;
        _7965_types = Dafny.Sequence<RAST._IType>.FromElements();
        while ((_7964_typeI) < (new BigInteger(((c).dtor_typeParams).Count))) {
          RAST._IType _7966_genTp;
          RAST._IType _out3743;
          _out3743 = DCOMPUTF16.COMP.GenType(((c).dtor_typeParams).Select(_7964_typeI), false, false);
          _7966_genTp = _out3743;
          _7965_types = Dafny.Sequence<RAST._IType>.Concat(_7965_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData::")), Dafny.Sequence<RAST._IType>.FromElements(_7966_genTp))));
          _7964_typeI = (_7964_typeI) + (BigInteger.One);
        }
        _7938_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_7938_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_7967_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _7967_tpe);
})), _7965_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _7968_enumBody;
      _7968_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _7937_datatypeName, _7931_sTypeParams, _7938_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_7932_sConstrainedTypeParams, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7937_datatypeName), _7934_typeParamsAsTypes), _7933_whereConstraints, _7948_implBody)));
      _7939_i = BigInteger.Zero;
      Dafny.ISequence<RAST._IMatchCase> _7969_printImplBodyCases;
      _7969_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      while ((_7939_i) < (new BigInteger(((c).dtor_ctors).Count))) {
        DAST._IDatatypeCtor _7970_ctor;
        _7970_ctor = ((c).dtor_ctors).Select(_7939_i);
        Dafny.ISequence<Dafny.Rune> _7971_ctorMatch;
        _7971_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMPUTF16.__default.escapeIdent((_7970_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _7972_modulePrefix;
        _7972_modulePrefix = (((((c).dtor_enclosingModule)).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(((c).dtor_enclosingModule), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _7973_printRhs;
        _7973_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _7972_modulePrefix), (c).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMPUTF16.__default.escapeIdent((_7970_ctor).dtor_name)), (((_7970_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        BigInteger _7974_j;
        _7974_j = BigInteger.Zero;
        while ((_7974_j) < (new BigInteger(((_7970_ctor).dtor_args).Count))) {
          DAST._IFormal _7975_formal;
          _7975_formal = ((_7970_ctor).dtor_args).Select(_7974_j);
          _7971_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7971_ctorMatch, DCOMPUTF16.__default.escapeIdent((_7975_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          if ((_7974_j).Sign == 1) {
            _7973_printRhs = (_7973_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _7973_printRhs = (_7973_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMPUTF16.__default.escapeIdent((_7975_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
          _7974_j = (_7974_j) + (BigInteger.One);
        }
        _7971_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_7971_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_7970_ctor).dtor_hasAnyArgs) {
          _7973_printRhs = (_7973_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _7973_printRhs = (_7973_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _7969_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7969_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_7937_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _7971_ctorMatch), RAST.Expr.create_Block(_7973_printRhs))));
        _7939_i = (_7939_i) + (BigInteger.One);
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _7969_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_7969_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_7937_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      RAST._IExpr _7976_printImplBody;
      _7976_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _7969_printImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _7977_printImpl;
      _7977_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7932_sConstrainedTypeParams, RAST.__default.DafnyPrintTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7937_datatypeName), _7934_typeParamsAsTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_7976_printImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _7978_defaultImpl;
      _7978_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _7979_asRefImpl;
      _7979_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        _7939_i = BigInteger.Zero;
        RAST._IExpr _7980_structName;
        _7980_structName = (RAST.Expr.create_Identifier(_7937_datatypeName)).MSel(DCOMPUTF16.__default.escapeIdent((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _7981_structAssignments;
        _7981_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        while ((_7939_i) < (new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count))) {
          DAST._IFormal _7982_formal;
          _7982_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_7939_i);
          _7981_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_7981_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent((_7982_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
          _7939_i = (_7939_i) + (BigInteger.One);
        }
        Dafny.ISequence<RAST._ITypeParam> _7983_defaultConstrainedTypeParams;
        _7983_defaultConstrainedTypeParams = RAST.TypeParam.AddConstraintsMultiple(_7931_sTypeParams, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _7984_fullType;
        _7984_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_7937_datatypeName), _7934_typeParamsAsTypes);
        _7978_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7983_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _7984_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_7984_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_7980_structName, _7981_structAssignments))))))));
        _7979_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_7983_defaultConstrainedTypeParams, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_7984_fullType), RAST.Type.create_Borrowed(_7984_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParam>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_7968_enumBody, _7977_printImpl), _7978_defaultImpl), _7979_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi25 = new BigInteger((p).Count);
        for (BigInteger _7985_i = BigInteger.Zero; _7985_i < _hi25; _7985_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_7985_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = (((((p).Select(BigInteger.Zero))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))));
        BigInteger _hi26 = new BigInteger((p).Count);
        for (BigInteger _7986_i = BigInteger.Zero; _7986_i < _hi26; _7986_i++) {
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(((p).Select(_7986_i))));
        }
      }
      return r;
    }
    public static Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _7987_i;
        _7987_i = BigInteger.Zero;
        while ((_7987_i) < (new BigInteger((args).Count))) {
          RAST._IType _7988_genTp;
          RAST._IType _out3744;
          _out3744 = DCOMPUTF16.COMP.GenType((args).Select(_7987_i), inBinding, inFn);
          _7988_genTp = _out3744;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_7988_genTp));
          _7987_i = (_7987_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public static bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public static RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source268 = c;
      if (_source268.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7989___mcc_h0 = _source268.dtor_Path_a0;
        Dafny.ISequence<DAST._IType> _7990___mcc_h1 = _source268.dtor_typeArgs;
        DAST._IResolvedType _7991___mcc_h2 = _source268.dtor_resolved;
        DAST._IResolvedType _7992_resolved = _7991___mcc_h2;
        Dafny.ISequence<DAST._IType> _7993_args = _7990___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7994_p = _7989___mcc_h0;
        {
          RAST._IType _7995_t;
          RAST._IType _out3745;
          _out3745 = DCOMPUTF16.COMP.GenPath(_7994_p);
          _7995_t = _out3745;
          Dafny.ISequence<RAST._IType> _7996_typeArgs;
          Dafny.ISequence<RAST._IType> _out3746;
          _out3746 = DCOMPUTF16.COMP.GenTypeArgs(_7993_args, inBinding, inFn);
          _7996_typeArgs = _out3746;
          s = RAST.Type.create_TypeApp(_7995_t, _7996_typeArgs);
          DAST._IResolvedType _source269 = _7992_resolved;
          if (_source269.is_AllocatedDatatype) {
            DAST._IDatatypeType _7997___mcc_h21 = _source269.dtor_datatypeType;
            DAST._IDatatypeType _source270 = _7997___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _7998___mcc_h22 = _source270.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _7999___mcc_h23 = _source270.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8000_attributes = _7999___mcc_h23;
            {
              s = RAST.Type.create_PointerMut(s);
            }
          } else if (_source269.is_Datatype) {
            DAST._IDatatypeType _8001___mcc_h24 = _source269.dtor_datatypeType;
            DAST._IDatatypeType _source271 = _8001___mcc_h24;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8002___mcc_h25 = _source271.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8003___mcc_h26 = _source271.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8004_attributes = _8003___mcc_h26;
            {
              if (DCOMPUTF16.COMP.IsRcWrapped(_8004_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source269.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8005___mcc_h27 = _source269.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _8006___mcc_h28 = _source269.dtor_attributes;
            {
              if ((_7994_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = RAST.__default.Rc(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::any::Any")));
              } else {
                if (inBinding) {
                  s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
                } else {
                  s = RAST.Type.create_ImplType(s);
                }
              }
            }
          } else {
            DAST._IType _8007___mcc_h29 = _source269.dtor_baseType;
            DAST._INewtypeRange _8008___mcc_h30 = _source269.dtor_range;
            bool _8009___mcc_h31 = _source269.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _8010___mcc_h32 = _source269.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _8011_attributes = _8010___mcc_h32;
            bool _8012_erased = _8009___mcc_h31;
            DAST._INewtypeRange _8013_range = _8008___mcc_h30;
            DAST._IType _8014_t = _8007___mcc_h29;
            {
              if (_8012_erased) {
                Std.Wrappers._IOption<RAST._IType> _source272 = DCOMPUTF16.COMP.NewtypeToRustType(_8014_t, _8013_range);
                if (_source272.is_None) {
                } else {
                  RAST._IType _8015___mcc_h33 = _source272.dtor_value;
                  RAST._IType _8016_v = _8015___mcc_h33;
                  s = _8016_v;
                }
              }
            }
          }
        }
      } else if (_source268.is_Nullable) {
        DAST._IType _8017___mcc_h3 = _source268.dtor_Nullable_a0;
        DAST._IType _8018_inner = _8017___mcc_h3;
        {
          RAST._IType _8019_innerExpr;
          RAST._IType _out3747;
          _out3747 = DCOMPUTF16.COMP.GenType(_8018_inner, inBinding, inFn);
          _8019_innerExpr = _out3747;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_8019_innerExpr));
        }
      } else if (_source268.is_Tuple) {
        Dafny.ISequence<DAST._IType> _8020___mcc_h4 = _source268.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IType> _8021_types = _8020___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _8022_args;
          _8022_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _8023_i;
          _8023_i = BigInteger.Zero;
          while ((_8023_i) < (new BigInteger((_8021_types).Count))) {
            RAST._IType _8024_generated;
            RAST._IType _out3748;
            _out3748 = DCOMPUTF16.COMP.GenType((_8021_types).Select(_8023_i), inBinding, inFn);
            _8024_generated = _out3748;
            _8022_args = Dafny.Sequence<RAST._IType>.Concat(_8022_args, Dafny.Sequence<RAST._IType>.FromElements(_8024_generated));
            _8023_i = (_8023_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_8022_args);
        }
      } else if (_source268.is_Array) {
        DAST._IType _8025___mcc_h5 = _source268.dtor_element;
        BigInteger _8026___mcc_h6 = _source268.dtor_dims;
        BigInteger _8027_dims = _8026___mcc_h6;
        DAST._IType _8028_element = _8025___mcc_h5;
        {
          RAST._IType _8029_elem;
          RAST._IType _out3749;
          _out3749 = DCOMPUTF16.COMP.GenType(_8028_element, inBinding, inFn);
          _8029_elem = _out3749;
          s = _8029_elem;
          BigInteger _8030_i;
          _8030_i = BigInteger.Zero;
          while ((_8030_i) < (_8027_dims)) {
            s = RAST.__default.Rc(RAST.__default.RefCell(RAST.__default.Vec(s)));
            _8030_i = (_8030_i) + (BigInteger.One);
          }
        }
      } else if (_source268.is_Seq) {
        DAST._IType _8031___mcc_h7 = _source268.dtor_element;
        DAST._IType _8032_element = _8031___mcc_h7;
        {
          RAST._IType _8033_elem;
          RAST._IType _out3750;
          _out3750 = DCOMPUTF16.COMP.GenType(_8032_element, inBinding, inFn);
          _8033_elem = _out3750;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_8033_elem));
        }
      } else if (_source268.is_Set) {
        DAST._IType _8034___mcc_h8 = _source268.dtor_element;
        DAST._IType _8035_element = _8034___mcc_h8;
        {
          RAST._IType _8036_elem;
          RAST._IType _out3751;
          _out3751 = DCOMPUTF16.COMP.GenType(_8035_element, inBinding, inFn);
          _8036_elem = _out3751;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_8036_elem));
        }
      } else if (_source268.is_Multiset) {
        DAST._IType _8037___mcc_h9 = _source268.dtor_element;
        DAST._IType _8038_element = _8037___mcc_h9;
        {
          RAST._IType _8039_elem;
          RAST._IType _out3752;
          _out3752 = DCOMPUTF16.COMP.GenType(_8038_element, inBinding, inFn);
          _8039_elem = _out3752;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_8039_elem));
        }
      } else if (_source268.is_Map) {
        DAST._IType _8040___mcc_h10 = _source268.dtor_key;
        DAST._IType _8041___mcc_h11 = _source268.dtor_value;
        DAST._IType _8042_value = _8041___mcc_h11;
        DAST._IType _8043_key = _8040___mcc_h10;
        {
          RAST._IType _8044_keyType;
          RAST._IType _out3753;
          _out3753 = DCOMPUTF16.COMP.GenType(_8043_key, inBinding, inFn);
          _8044_keyType = _out3753;
          RAST._IType _8045_valueType;
          RAST._IType _out3754;
          _out3754 = DCOMPUTF16.COMP.GenType(_8042_value, inBinding, inFn);
          _8045_valueType = _out3754;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_8044_keyType, _8045_valueType));
        }
      } else if (_source268.is_SetBuilder) {
        DAST._IType _8046___mcc_h12 = _source268.dtor_element;
        DAST._IType _8047_elem = _8046___mcc_h12;
        {
          RAST._IType _8048_elemType;
          RAST._IType _out3755;
          _out3755 = DCOMPUTF16.COMP.GenType(_8047_elem, inBinding, inFn);
          _8048_elemType = _out3755;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_8048_elemType));
        }
      } else if (_source268.is_MapBuilder) {
        DAST._IType _8049___mcc_h13 = _source268.dtor_key;
        DAST._IType _8050___mcc_h14 = _source268.dtor_value;
        DAST._IType _8051_value = _8050___mcc_h14;
        DAST._IType _8052_key = _8049___mcc_h13;
        {
          RAST._IType _8053_keyType;
          RAST._IType _out3756;
          _out3756 = DCOMPUTF16.COMP.GenType(_8052_key, inBinding, inFn);
          _8053_keyType = _out3756;
          RAST._IType _8054_valueType;
          RAST._IType _out3757;
          _out3757 = DCOMPUTF16.COMP.GenType(_8051_value, inBinding, inFn);
          _8054_valueType = _out3757;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_8053_keyType, _8054_valueType));
        }
      } else if (_source268.is_Arrow) {
        Dafny.ISequence<DAST._IType> _8055___mcc_h15 = _source268.dtor_args;
        DAST._IType _8056___mcc_h16 = _source268.dtor_result;
        DAST._IType _8057_result = _8056___mcc_h16;
        Dafny.ISequence<DAST._IType> _8058_args = _8055___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _8059_argTypes;
          _8059_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _8060_i;
          _8060_i = BigInteger.Zero;
          while ((_8060_i) < (new BigInteger((_8058_args).Count))) {
            RAST._IType _8061_generated;
            RAST._IType _out3758;
            _out3758 = DCOMPUTF16.COMP.GenType((_8058_args).Select(_8060_i), inBinding, true);
            _8061_generated = _out3758;
            _8059_argTypes = Dafny.Sequence<RAST._IType>.Concat(_8059_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_8061_generated)));
            _8060_i = (_8060_i) + (BigInteger.One);
          }
          RAST._IType _8062_resultType;
          RAST._IType _out3759;
          _out3759 = DCOMPUTF16.COMP.GenType(_8057_result, inBinding, (inFn) || (inBinding));
          _8062_resultType = _out3759;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("FunctionWrapper")), Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_FnType(_8059_argTypes, RAST.Type.create_IntersectionType(_8062_resultType, RAST.__default.StaticTrait))));
        }
      } else if (_source268.is_Primitive) {
        DAST._IPrimitive _8063___mcc_h17 = _source268.dtor_Primitive_a0;
        DAST._IPrimitive _8064_p = _8063___mcc_h17;
        {
          DAST._IPrimitive _source273 = _8064_p;
          if (_source273.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source273.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source273.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar)));
          } else if (_source273.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel(DCOMPUTF16.__default.DafnyChar);
          }
        }
      } else if (_source268.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _8065___mcc_h18 = _source268.dtor_Passthrough_a0;
        Dafny.ISequence<Dafny.Rune> _8066_v = _8065___mcc_h18;
        s = RAST.__default.RawType(_8066_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _8067___mcc_h19 = _source268.dtor_TypeArg_a0;
        Dafny.ISequence<Dafny.Rune> _source274 = _8067___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _8068___mcc_h20 = _source274;
        Dafny.ISequence<Dafny.Rune> _8069_name = _8068___mcc_h20;
        s = RAST.__default.RawType(DCOMPUTF16.__default.escapeIdent(_8069_name));
      }
      return s;
    }
    public static void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _8070_i;
      _8070_i = BigInteger.Zero;
      while ((_8070_i) < (new BigInteger((body).Count))) {
        DAST._IMethod _source275 = (body).Select(_8070_i);
        DAST._IMethod _8071___mcc_h0 = _source275;
        DAST._IMethod _8072_m = _8071___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source276 = (_8072_m).dtor_overridingPath;
          if (_source276.is_None) {
            {
              RAST._IImplMember _8073_generated;
              RAST._IImplMember _out3760;
              _out3760 = DCOMPUTF16.COMP.GenMethod(_8072_m, forTrait, enclosingType, enclosingTypeParams);
              _8073_generated = _out3760;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_8073_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8074___mcc_h1 = _source276.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8075_p = _8074___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _8076_existing;
              _8076_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_8075_p)) {
                _8076_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_8075_p);
              }
              RAST._IImplMember _8077_genMethod;
              RAST._IImplMember _out3761;
              _out3761 = DCOMPUTF16.COMP.GenMethod(_8072_m, true, enclosingType, enclosingTypeParams);
              _8077_genMethod = _out3761;
              _8076_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_8076_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_8077_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_8075_p, _8076_existing)));
            }
          }
        }
        _8070_i = (_8070_i) + (BigInteger.One);
      }
    }
    public static Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _8078_i;
      _8078_i = BigInteger.Zero;
      while ((_8078_i) < (new BigInteger((@params).Count))) {
        DAST._IFormal _8079_param;
        _8079_param = (@params).Select(_8078_i);
        RAST._IType _8080_paramType;
        RAST._IType _out3762;
        _out3762 = DCOMPUTF16.COMP.GenType((_8079_param).dtor_typ, false, false);
        _8080_paramType = _out3762;
        if (!((_8080_paramType).HasCopySemantics())) {
          _8080_paramType = RAST.Type.create_Borrowed(_8080_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMPUTF16.__default.escapeIdent((_8079_param).dtor_name), _8080_paramType)));
        _8078_i = (_8078_i) + (BigInteger.One);
      }
      return s;
    }
    public static RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _8081_params;
      Dafny.ISequence<RAST._IFormal> _out3763;
      _out3763 = DCOMPUTF16.COMP.GenParams((m).dtor_params);
      _8081_params = _out3763;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8082_paramNames;
      _8082_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _8083_paramTypes;
      _8083_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi27 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _8084_paramI = BigInteger.Zero; _8084_paramI < _hi27; _8084_paramI++) {
        DAST._IFormal _8085_dafny__formal;
        _8085_dafny__formal = ((m).dtor_params).Select(_8084_paramI);
        RAST._IFormal _8086_formal;
        _8086_formal = (_8081_params).Select(_8084_paramI);
        Dafny.ISequence<Dafny.Rune> _8087_name;
        _8087_name = (_8086_formal).dtor_name;
        _8082_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8082_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8087_name));
        _8083_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8083_paramTypes, _8087_name, (_8086_formal).dtor_tpe);
      }
      if (!((m).dtor_isStatic)) {
        if (forTrait) {
          _8081_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), _8081_params);
        } else {
          RAST._IType _8088_tpe;
          RAST._IType _out3764;
          _out3764 = DCOMPUTF16.COMP.GenType(enclosingType, false, false);
          _8088_tpe = _out3764;
          _8081_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), RAST.Type.create_Borrowed(_8088_tpe))), _8081_params);
        }
      }
      Dafny.ISequence<RAST._IType> _8089_retTypeArgs;
      _8089_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _8090_typeI;
      _8090_typeI = BigInteger.Zero;
      while ((_8090_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _8091_typeExpr;
        RAST._IType _out3765;
        _out3765 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_8090_typeI), false, false);
        _8091_typeExpr = _out3765;
        _8089_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_8089_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_8091_typeExpr));
        _8090_typeI = (_8090_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _8092_visibility;
      _8092_visibility = RAST.Visibility.create_PUB();
      Dafny.ISequence<Dafny.Rune> _8093_fnName;
      _8093_fnName = DCOMPUTF16.__default.escapeIdent((m).dtor_name);
      Dafny.ISequence<DAST._IType> _8094_typeParamsFiltered;
      _8094_typeParamsFiltered = Dafny.Sequence<DAST._IType>.FromElements();
      BigInteger _8095_typeParamI;
      _8095_typeParamI = BigInteger.Zero;
      while ((_8095_typeParamI) < (new BigInteger(((m).dtor_typeParams).Count))) {
        DAST._IType _8096_typeParam;
        _8096_typeParam = ((m).dtor_typeParams).Select(_8095_typeParamI);
        if (!((enclosingTypeParams).Contains(_8096_typeParam))) {
          _8094_typeParamsFiltered = Dafny.Sequence<DAST._IType>.Concat(_8094_typeParamsFiltered, Dafny.Sequence<DAST._IType>.FromElements(_8096_typeParam));
        }
        _8095_typeParamI = (_8095_typeParamI) + (BigInteger.One);
      }
      Dafny.ISequence<Dafny.Rune> _8097_whereClauses;
      _8097_whereClauses = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      Dafny.ISequence<RAST._ITypeParam> _8098_typeParams;
      _8098_typeParams = Dafny.Sequence<RAST._ITypeParam>.FromElements();
      if ((new BigInteger((_8094_typeParamsFiltered).Count)).Sign == 1) {
        _8097_whereClauses = Dafny.Sequence<Dafny.Rune>.Concat(_8097_whereClauses, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" where "));
        BigInteger _8099_i;
        _8099_i = BigInteger.Zero;
        while ((_8099_i) < (new BigInteger((_8094_typeParamsFiltered).Count))) {
          RAST._IType _8100_typeExpr;
          RAST._IType _out3766;
          _out3766 = DCOMPUTF16.COMP.GenType((_8094_typeParamsFiltered).Select(_8099_i), false, false);
          _8100_typeExpr = _out3766;
          _8098_typeParams = Dafny.Sequence<RAST._ITypeParam>.Concat(_8098_typeParams, Dafny.Sequence<RAST._ITypeParam>.FromElements(RAST.TypeParam.create((_8100_typeExpr)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.CloneTrait, RAST.__default.DafnyPrintTrait, RAST.__default.DefaultTrait, RAST.__default.StaticTrait))));
          _8099_i = (_8099_i) + (BigInteger.One);
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _8101_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMPUTF16._IEnvironment _8102_env = DCOMPUTF16.Environment.Default();
      if ((m).dtor_hasBody) {
        RAST._IExpr _8103_earlyReturn;
        _8103_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source277 = (m).dtor_outVars;
        if (_source277.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8104___mcc_h0 = _source277.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8105_outVars = _8104___mcc_h0;
          {
            Dafny.ISequence<RAST._IExpr> _8106_tupleArgs;
            _8106_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi28 = new BigInteger((_8105_outVars).Count);
            for (BigInteger _8107_outI = BigInteger.Zero; _8107_outI < _hi28; _8107_outI++) {
              Dafny.ISequence<Dafny.Rune> _8108_outVar;
              _8108_outVar = (_8105_outVars).Select(_8107_outI);
              RAST._IType _8109_outType;
              RAST._IType _out3767;
              _out3767 = DCOMPUTF16.COMP.GenType(((m).dtor_outTypes).Select(_8107_outI), false, false);
              _8109_outType = _out3767;
              Dafny.ISequence<Dafny.Rune> _8110_outName;
              _8110_outName = DCOMPUTF16.__default.escapeIdent((_8108_outVar));
              _8082_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_8082_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8110_outName));
              RAST._IType _8111_outMaybeType;
              _8111_outMaybeType = (((_8109_outType).HasCopySemantics()) ? (_8109_outType) : (RAST.__default.MaybePlaceboType(_8109_outType)));
              _8083_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_8083_paramTypes, _8110_outName, _8111_outMaybeType);
              RAST._IExpr _8112_outVarReturn;
              DCOMPUTF16._IOwnership _8113___v52;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8114___v53;
              RAST._IExpr _out3768;
              DCOMPUTF16._IOwnership _out3769;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3770;
              DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident((_8108_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMPUTF16.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_8110_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_8110_outName, _8111_outMaybeType))), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3768, out _out3769, out _out3770);
              _8112_outVarReturn = _out3768;
              _8113___v52 = _out3769;
              _8114___v53 = _out3770;
              _8106_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_8106_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_8112_outVarReturn));
            }
            if ((new BigInteger((_8106_tupleArgs).Count)) == (BigInteger.One)) {
              _8103_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_8106_tupleArgs).Select(BigInteger.Zero)));
            } else {
              _8103_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_8106_tupleArgs)));
            }
          }
        }
        _8102_env = DCOMPUTF16.Environment.create(_8082_paramNames, _8083_paramTypes);
        RAST._IExpr _8115_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8116___v54;
        DCOMPUTF16._IEnvironment _8117___v55;
        RAST._IExpr _out3771;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3772;
        DCOMPUTF16._IEnvironment _out3773;
        DCOMPUTF16.COMP.GenStmts((m).dtor_body, (((m).dtor_isStatic) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))), _8102_env, true, _8103_earlyReturn, out _out3771, out _out3772, out _out3773);
        _8115_body = _out3771;
        _8116___v54 = _out3772;
        _8117___v55 = _out3773;
        _8101_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some(_8115_body);
      } else {
        _8102_env = DCOMPUTF16.Environment.create(_8082_paramNames, _8083_paramTypes);
        _8101_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_8092_visibility, RAST.Fn.create(_8093_fnName, _8098_typeParams, _8081_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_8089_retTypeArgs).Count)) == (BigInteger.One)) ? ((_8089_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_8089_retTypeArgs)))), _8097_whereClauses, _8101_fBody));
      return s;
    }
    public static void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8118_declarations;
      _8118_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _8119_i;
      _8119_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _8120_stmts;
      _8120_stmts = stmts;
      while ((_8119_i) < (new BigInteger((_8120_stmts).Count))) {
        DAST._IStatement _8121_stmt;
        _8121_stmt = (_8120_stmts).Select(_8119_i);
        DAST._IStatement _source278 = _8121_stmt;
        if (_source278.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _8122___mcc_h0 = _source278.dtor_name;
          DAST._IType _8123___mcc_h1 = _source278.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _8124___mcc_h2 = _source278.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source279 = _8124___mcc_h2;
          if (_source279.is_None) {
            DAST._IType _8125_optType = _8123___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _8126_name = _8122___mcc_h0;
            if (((_8119_i) + (BigInteger.One)) < (new BigInteger((_8120_stmts).Count))) {
              DAST._IStatement _source280 = (_8120_stmts).Select((_8119_i) + (BigInteger.One));
              if (_source280.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _8127___mcc_h52 = _source280.dtor_name;
                DAST._IType _8128___mcc_h53 = _source280.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _8129___mcc_h54 = _source280.dtor_maybeValue;
              } else if (_source280.is_Assign) {
                DAST._IAssignLhs _8130___mcc_h58 = _source280.dtor_lhs;
                DAST._IExpression _8131___mcc_h59 = _source280.dtor_value;
                DAST._IAssignLhs _source281 = _8130___mcc_h58;
                if (_source281.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _8132___mcc_h62 = _source281.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source282 = _8132___mcc_h62;
                  Dafny.ISequence<Dafny.Rune> _8133___mcc_h64 = _source282;
                  DAST._IExpression _8134_rhs = _8131___mcc_h59;
                  Dafny.ISequence<Dafny.Rune> _8135_name2 = _8133___mcc_h64;
                  if ((_8135_name2).Equals(_8126_name)) {
                    _8120_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_8120_stmts).Subsequence(BigInteger.Zero, _8119_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_8126_name, _8125_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_8134_rhs)))), (_8120_stmts).Drop((_8119_i) + (BigInteger.One)));
                    _8121_stmt = (_8120_stmts).Select(_8119_i);
                  }
                } else if (_source281.is_Select) {
                  DAST._IExpression _8136___mcc_h66 = _source281.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _8137___mcc_h67 = _source281.dtor_field;
                } else {
                  DAST._IExpression _8138___mcc_h70 = _source281.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _8139___mcc_h71 = _source281.dtor_indices;
                }
              } else if (_source280.is_If) {
                DAST._IExpression _8140___mcc_h74 = _source280.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _8141___mcc_h75 = _source280.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _8142___mcc_h76 = _source280.dtor_els;
              } else if (_source280.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _8143___mcc_h80 = _source280.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _8144___mcc_h81 = _source280.dtor_body;
              } else if (_source280.is_While) {
                DAST._IExpression _8145___mcc_h84 = _source280.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _8146___mcc_h85 = _source280.dtor_body;
              } else if (_source280.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _8147___mcc_h88 = _source280.dtor_boundName;
                DAST._IType _8148___mcc_h89 = _source280.dtor_boundType;
                DAST._IExpression _8149___mcc_h90 = _source280.dtor_over;
                Dafny.ISequence<DAST._IStatement> _8150___mcc_h91 = _source280.dtor_body;
              } else if (_source280.is_Call) {
                DAST._IExpression _8151___mcc_h96 = _source280.dtor_on;
                DAST._ICallName _8152___mcc_h97 = _source280.dtor_callName;
                Dafny.ISequence<DAST._IType> _8153___mcc_h98 = _source280.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _8154___mcc_h99 = _source280.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8155___mcc_h100 = _source280.dtor_outs;
              } else if (_source280.is_Return) {
                DAST._IExpression _8156___mcc_h106 = _source280.dtor_expr;
              } else if (_source280.is_EarlyReturn) {
              } else if (_source280.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8157___mcc_h108 = _source280.dtor_toLabel;
              } else if (_source280.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _8158___mcc_h110 = _source280.dtor_body;
              } else if (_source280.is_JumpTailCallStart) {
              } else if (_source280.is_Halt) {
              } else {
                DAST._IExpression _8159___mcc_h112 = _source280.dtor_Print_a0;
              }
            }
          } else {
            DAST._IExpression _8160___mcc_h6 = _source279.dtor_value;
          }
        } else if (_source278.is_Assign) {
          DAST._IAssignLhs _8161___mcc_h8 = _source278.dtor_lhs;
          DAST._IExpression _8162___mcc_h9 = _source278.dtor_value;
        } else if (_source278.is_If) {
          DAST._IExpression _8163___mcc_h12 = _source278.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8164___mcc_h13 = _source278.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _8165___mcc_h14 = _source278.dtor_els;
        } else if (_source278.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _8166___mcc_h18 = _source278.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _8167___mcc_h19 = _source278.dtor_body;
        } else if (_source278.is_While) {
          DAST._IExpression _8168___mcc_h22 = _source278.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8169___mcc_h23 = _source278.dtor_body;
        } else if (_source278.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _8170___mcc_h26 = _source278.dtor_boundName;
          DAST._IType _8171___mcc_h27 = _source278.dtor_boundType;
          DAST._IExpression _8172___mcc_h28 = _source278.dtor_over;
          Dafny.ISequence<DAST._IStatement> _8173___mcc_h29 = _source278.dtor_body;
        } else if (_source278.is_Call) {
          DAST._IExpression _8174___mcc_h34 = _source278.dtor_on;
          DAST._ICallName _8175___mcc_h35 = _source278.dtor_callName;
          Dafny.ISequence<DAST._IType> _8176___mcc_h36 = _source278.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8177___mcc_h37 = _source278.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8178___mcc_h38 = _source278.dtor_outs;
        } else if (_source278.is_Return) {
          DAST._IExpression _8179___mcc_h44 = _source278.dtor_expr;
        } else if (_source278.is_EarlyReturn) {
        } else if (_source278.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8180___mcc_h46 = _source278.dtor_toLabel;
        } else if (_source278.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _8181___mcc_h48 = _source278.dtor_body;
        } else if (_source278.is_JumpTailCallStart) {
        } else if (_source278.is_Halt) {
        } else {
          DAST._IExpression _8182___mcc_h50 = _source278.dtor_Print_a0;
        }
        RAST._IExpr _8183_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8184_recIdents;
        DCOMPUTF16._IEnvironment _8185_newEnv2;
        RAST._IExpr _out3774;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3775;
        DCOMPUTF16._IEnvironment _out3776;
        DCOMPUTF16.COMP.GenStmt(_8121_stmt, selfIdent, newEnv, (isLast) && ((_8119_i) == ((new BigInteger((_8120_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out3774, out _out3775, out _out3776);
        _8183_stmtExpr = _out3774;
        _8184_recIdents = _out3775;
        _8185_newEnv2 = _out3776;
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_8184_recIdents, _8118_declarations));
        newEnv = _8185_newEnv2;
        DAST._IStatement _source283 = _8121_stmt;
        if (_source283.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _8186___mcc_h114 = _source283.dtor_name;
          DAST._IType _8187___mcc_h115 = _source283.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _8188___mcc_h116 = _source283.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _8189_name = _8186___mcc_h114;
          {
            _8118_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8118_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8189_name));
          }
        } else if (_source283.is_Assign) {
          DAST._IAssignLhs _8190___mcc_h120 = _source283.dtor_lhs;
          DAST._IExpression _8191___mcc_h121 = _source283.dtor_value;
        } else if (_source283.is_If) {
          DAST._IExpression _8192___mcc_h124 = _source283.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8193___mcc_h125 = _source283.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _8194___mcc_h126 = _source283.dtor_els;
        } else if (_source283.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _8195___mcc_h130 = _source283.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _8196___mcc_h131 = _source283.dtor_body;
        } else if (_source283.is_While) {
          DAST._IExpression _8197___mcc_h134 = _source283.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _8198___mcc_h135 = _source283.dtor_body;
        } else if (_source283.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _8199___mcc_h138 = _source283.dtor_boundName;
          DAST._IType _8200___mcc_h139 = _source283.dtor_boundType;
          DAST._IExpression _8201___mcc_h140 = _source283.dtor_over;
          Dafny.ISequence<DAST._IStatement> _8202___mcc_h141 = _source283.dtor_body;
        } else if (_source283.is_Call) {
          DAST._IExpression _8203___mcc_h146 = _source283.dtor_on;
          DAST._ICallName _8204___mcc_h147 = _source283.dtor_callName;
          Dafny.ISequence<DAST._IType> _8205___mcc_h148 = _source283.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8206___mcc_h149 = _source283.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8207___mcc_h150 = _source283.dtor_outs;
        } else if (_source283.is_Return) {
          DAST._IExpression _8208___mcc_h156 = _source283.dtor_expr;
        } else if (_source283.is_EarlyReturn) {
        } else if (_source283.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8209___mcc_h158 = _source283.dtor_toLabel;
        } else if (_source283.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _8210___mcc_h160 = _source283.dtor_body;
        } else if (_source283.is_JumpTailCallStart) {
        } else if (_source283.is_Halt) {
        } else {
          DAST._IExpression _8211___mcc_h162 = _source283.dtor_Print_a0;
        }
        generated = (generated).Then(_8183_stmtExpr);
        _8119_i = (_8119_i) + (BigInteger.One);
      }
    }
    public static void GenAssignLhs(DAST._IAssignLhs lhs, Dafny.ISequence<Dafny.Rune> rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, out Dafny.ISequence<Dafny.Rune> generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      generated = Dafny.Sequence<Dafny.Rune>.Empty;
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IAssignLhs _source284 = lhs;
      if (_source284.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _8212___mcc_h0 = _source284.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source285 = _8212___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _8213___mcc_h1 = _source285;
        Dafny.ISequence<Dafny.Rune> _8214_id = _8213___mcc_h1;
        {
          if (((env).IsBorrowed(_8214_id)) || ((env).IsBorrowedMut(_8214_id))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), DCOMPUTF16.__default.escapeIdent(_8214_id));
          } else {
            generated = DCOMPUTF16.__default.escapeIdent(_8214_id);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8214_id);
          needsIIFE = false;
        }
      } else if (_source284.is_Select) {
        DAST._IExpression _8215___mcc_h2 = _source284.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _8216___mcc_h3 = _source284.dtor_field;
        Dafny.ISequence<Dafny.Rune> _8217_field = _8216___mcc_h3;
        DAST._IExpression _8218_on = _8215___mcc_h2;
        {
          RAST._IExpr _8219_onExpr;
          DCOMPUTF16._IOwnership _8220_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8221_recIdents;
          RAST._IExpr _out3777;
          DCOMPUTF16._IOwnership _out3778;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3779;
          DCOMPUTF16.COMP.GenExpr(_8218_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3777, out _out3778, out _out3779);
          _8219_onExpr = _out3777;
          _8220_onOwned = _out3778;
          _8221_recIdents = _out3779;
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*("), (_8219_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), _8217_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()) = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"));
          readIdents = _8221_recIdents;
          needsIIFE = true;
        }
      } else {
        DAST._IExpression _8222___mcc_h4 = _source284.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _8223___mcc_h5 = _source284.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _8224_indices = _8223___mcc_h5;
        DAST._IExpression _8225_on = _8222___mcc_h4;
        {
          RAST._IExpr _8226_onExpr;
          DCOMPUTF16._IOwnership _8227_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8228_recIdents;
          RAST._IExpr _out3780;
          DCOMPUTF16._IOwnership _out3781;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3782;
          DCOMPUTF16.COMP.GenExpr(_8225_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3780, out _out3781, out _out3782);
          _8226_onExpr = _out3780;
          _8227_onOwned = _out3781;
          _8228_recIdents = _out3782;
          readIdents = _8228_recIdents;
          generated = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          BigInteger _8229_i;
          _8229_i = BigInteger.Zero;
          while ((_8229_i) < (new BigInteger((_8224_indices).Count))) {
            RAST._IExpr _8230_idx;
            DCOMPUTF16._IOwnership _8231___v61;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8232_recIdentsIdx;
            RAST._IExpr _out3783;
            DCOMPUTF16._IOwnership _out3784;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3785;
            DCOMPUTF16.COMP.GenExpr((_8224_indices).Select(_8229_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3783, out _out3784, out _out3785);
            _8230_idx = _out3783;
            _8231___v61 = _out3784;
            _8232_recIdentsIdx = _out3785;
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let __idx")), Std.Strings.__default.OfNat(_8229_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = <usize as ::dafny_runtime::NumCast>::from(")), (_8230_idx)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap();\n"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8232_recIdentsIdx);
            _8229_i = (_8229_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, (_8226_onExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow_mut()"));
          _8229_i = BigInteger.Zero;
          while ((_8229_i) < (new BigInteger((_8224_indices).Count))) {
            generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[__idx")), Std.Strings.__default.OfNat(_8229_i)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("]"));
            _8229_i = (_8229_i) + (BigInteger.One);
          }
          generated = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(generated, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), rhs), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n}"));
          needsIIFE = true;
        }
      }
    }
    public static void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMPUTF16._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMPUTF16.Environment.Default();
      DAST._IStatement _source286 = stmt;
      if (_source286.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _8233___mcc_h0 = _source286.dtor_name;
        DAST._IType _8234___mcc_h1 = _source286.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _8235___mcc_h2 = _source286.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source287 = _8235___mcc_h2;
        if (_source287.is_None) {
          DAST._IType _8236_typ = _8234___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _8237_name = _8233___mcc_h0;
          {
            DAST._IStatement _8238_newStmt;
            _8238_newStmt = DAST.Statement.create_DeclareVar(_8237_name, _8236_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_8236_typ)));
            RAST._IExpr _out3786;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3787;
            DCOMPUTF16._IEnvironment _out3788;
            DCOMPUTF16.COMP.GenStmt(_8238_newStmt, selfIdent, env, isLast, earlyReturn, out _out3786, out _out3787, out _out3788);
            generated = _out3786;
            readIdents = _out3787;
            newEnv = _out3788;
          }
        } else {
          DAST._IExpression _8239___mcc_h3 = _source287.dtor_value;
          DAST._IExpression _8240_expression = _8239___mcc_h3;
          DAST._IType _8241_typ = _8234___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _8242_name = _8233___mcc_h0;
          {
            RAST._IType _8243_tpe;
            RAST._IType _out3789;
            _out3789 = DCOMPUTF16.COMP.GenType(_8241_typ, true, false);
            _8243_tpe = _out3789;
            Dafny.ISequence<Dafny.Rune> _8244_varName;
            _8244_varName = DCOMPUTF16.__default.escapeIdent(_8242_name);
            bool _8245_hasCopySemantics;
            _8245_hasCopySemantics = (_8243_tpe).HasCopySemantics();
            if (((_8240_expression).is_InitializationValue) && (!(_8245_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _8244_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_8243_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_8244_varName, RAST.__default.MaybePlaceboType(_8243_tpe));
            } else {
              RAST._IExpr _8246_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8247_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_8240_expression).is_InitializationValue) && (((_8243_tpe).is_Pointer) || ((_8243_tpe).is_PointerMut))) {
                _8246_expr = (((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ptr"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("null_mut"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                _8247_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMPUTF16._IOwnership _8248_exprOwnership = DCOMPUTF16.Ownership.Default();
                RAST._IExpr _out3790;
                DCOMPUTF16._IOwnership _out3791;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3792;
                DCOMPUTF16.COMP.GenExpr(_8240_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3790, out _out3791, out _out3792);
                _8246_expr = _out3790;
                _8248_exprOwnership = _out3791;
                _8247_recIdents = _out3792;
              }
              readIdents = _8247_recIdents;
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_8242_name), Std.Wrappers.Option<RAST._IType>.create_Some(_8243_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8246_expr));
              newEnv = (env).AddAssigned(DCOMPUTF16.__default.escapeIdent(_8242_name), _8243_tpe);
            }
          }
        }
      } else if (_source286.is_Assign) {
        DAST._IAssignLhs _8249___mcc_h4 = _source286.dtor_lhs;
        DAST._IExpression _8250___mcc_h5 = _source286.dtor_value;
        DAST._IExpression _8251_expression = _8250___mcc_h5;
        DAST._IAssignLhs _8252_lhs = _8249___mcc_h4;
        {
          Dafny.ISequence<Dafny.Rune> _8253_lhsGen;
          bool _8254_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8255_recIdents;
          Dafny.ISequence<Dafny.Rune> _out3793;
          bool _out3794;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3795;
          DCOMPUTF16.COMP.GenAssignLhs(_8252_lhs, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), selfIdent, env, out _out3793, out _out3794, out _out3795);
          _8253_lhsGen = _out3793;
          _8254_needsIIFE = _out3794;
          _8255_recIdents = _out3795;
          RAST._IExpr _8256_exprGen;
          DCOMPUTF16._IOwnership _8257___v62;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8258_exprIdents;
          RAST._IExpr _out3796;
          DCOMPUTF16._IOwnership _out3797;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3798;
          DCOMPUTF16.COMP.GenExpr(_8251_expression, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3796, out _out3797, out _out3798);
          _8256_exprGen = _out3796;
          _8257___v62 = _out3797;
          _8258_exprIdents = _out3798;
          if (_8254_needsIIFE) {
            newEnv = env;
            generated = RAST.Expr.create_Block(RAST.Expr.create_StmtExpr(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__rhs"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8256_exprGen)), RAST.Expr.create_RawExpr(_8253_lhsGen)));
          } else {
            if ((_8252_lhs).is_Ident) {
              Dafny.ISequence<Dafny.Rune> _8259_rustId;
              _8259_rustId = DCOMPUTF16.__default.escapeIdent(((_8252_lhs).dtor_ident));
              Std.Wrappers._IOption<RAST._IType> _8260_tpe;
              _8260_tpe = (env).GetType(_8259_rustId);
              if (((_8260_tpe).is_Some) && ((((_8260_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
                _8256_exprGen = RAST.__default.MaybePlacebo(_8256_exprGen);
              }
            }
            generated = RAST.__default.AssignVar(_8253_lhsGen, _8256_exprGen);
            newEnv = env;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8255_recIdents, _8258_exprIdents);
        }
      } else if (_source286.is_If) {
        DAST._IExpression _8261___mcc_h6 = _source286.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _8262___mcc_h7 = _source286.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _8263___mcc_h8 = _source286.dtor_els;
        Dafny.ISequence<DAST._IStatement> _8264_elsDafny = _8263___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _8265_thnDafny = _8262___mcc_h7;
        DAST._IExpression _8266_cond = _8261___mcc_h6;
        {
          RAST._IExpr _8267_cond;
          DCOMPUTF16._IOwnership _8268___v63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8269_recIdents;
          RAST._IExpr _out3799;
          DCOMPUTF16._IOwnership _out3800;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3801;
          DCOMPUTF16.COMP.GenExpr(_8266_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3799, out _out3800, out _out3801);
          _8267_cond = _out3799;
          _8268___v63 = _out3800;
          _8269_recIdents = _out3801;
          Dafny.ISequence<Dafny.Rune> _8270_condString;
          _8270_condString = (_8267_cond)._ToString(DCOMPUTF16.__default.IND);
          readIdents = _8269_recIdents;
          RAST._IExpr _8271_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8272_thnIdents;
          DCOMPUTF16._IEnvironment _8273_thnEnv;
          RAST._IExpr _out3802;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3803;
          DCOMPUTF16._IEnvironment _out3804;
          DCOMPUTF16.COMP.GenStmts(_8265_thnDafny, selfIdent, env, isLast, earlyReturn, out _out3802, out _out3803, out _out3804);
          _8271_thn = _out3802;
          _8272_thnIdents = _out3803;
          _8273_thnEnv = _out3804;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8272_thnIdents);
          RAST._IExpr _8274_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8275_elsIdents;
          DCOMPUTF16._IEnvironment _8276_elsEnv;
          RAST._IExpr _out3805;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3806;
          DCOMPUTF16._IEnvironment _out3807;
          DCOMPUTF16.COMP.GenStmts(_8264_elsDafny, selfIdent, env, isLast, earlyReturn, out _out3805, out _out3806, out _out3807);
          _8274_els = _out3805;
          _8275_elsIdents = _out3806;
          _8276_elsEnv = _out3807;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8275_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_8267_cond, _8271_thn, _8274_els);
        }
      } else if (_source286.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _8277___mcc_h9 = _source286.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _8278___mcc_h10 = _source286.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8279_body = _8278___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _8280_lbl = _8277___mcc_h9;
        {
          RAST._IExpr _8281_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8282_bodyIdents;
          DCOMPUTF16._IEnvironment _8283_env2;
          RAST._IExpr _out3808;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3809;
          DCOMPUTF16._IEnvironment _out3810;
          DCOMPUTF16.COMP.GenStmts(_8279_body, selfIdent, env, isLast, earlyReturn, out _out3808, out _out3809, out _out3810);
          _8281_body = _out3808;
          _8282_bodyIdents = _out3809;
          _8283_env2 = _out3810;
          readIdents = _8282_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _8280_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_8281_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source286.is_While) {
        DAST._IExpression _8284___mcc_h11 = _source286.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _8285___mcc_h12 = _source286.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8286_body = _8285___mcc_h12;
        DAST._IExpression _8287_cond = _8284___mcc_h11;
        {
          RAST._IExpr _8288_cond;
          DCOMPUTF16._IOwnership _8289___v64;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8290_recIdents;
          RAST._IExpr _out3811;
          DCOMPUTF16._IOwnership _out3812;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3813;
          DCOMPUTF16.COMP.GenExpr(_8287_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3811, out _out3812, out _out3813);
          _8288_cond = _out3811;
          _8289___v64 = _out3812;
          _8290_recIdents = _out3813;
          readIdents = _8290_recIdents;
          RAST._IExpr _8291_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8292_bodyIdents;
          DCOMPUTF16._IEnvironment _8293_bodyEnv;
          RAST._IExpr _out3814;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3815;
          DCOMPUTF16._IEnvironment _out3816;
          DCOMPUTF16.COMP.GenStmts(_8286_body, selfIdent, env, false, earlyReturn, out _out3814, out _out3815, out _out3816);
          _8291_bodyExpr = _out3814;
          _8292_bodyIdents = _out3815;
          _8293_bodyEnv = _out3816;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8292_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_8288_cond), _8291_bodyExpr);
        }
      } else if (_source286.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _8294___mcc_h13 = _source286.dtor_boundName;
        DAST._IType _8295___mcc_h14 = _source286.dtor_boundType;
        DAST._IExpression _8296___mcc_h15 = _source286.dtor_over;
        Dafny.ISequence<DAST._IStatement> _8297___mcc_h16 = _source286.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8298_body = _8297___mcc_h16;
        DAST._IExpression _8299_over = _8296___mcc_h15;
        DAST._IType _8300_boundType = _8295___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _8301_boundName = _8294___mcc_h13;
        {
          RAST._IExpr _8302_over;
          DCOMPUTF16._IOwnership _8303___v65;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8304_recIdents;
          RAST._IExpr _out3817;
          DCOMPUTF16._IOwnership _out3818;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3819;
          DCOMPUTF16.COMP.GenExpr(_8299_over, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3817, out _out3818, out _out3819);
          _8302_over = _out3817;
          _8303___v65 = _out3818;
          _8304_recIdents = _out3819;
          RAST._IType _8305_boundTpe;
          RAST._IType _out3820;
          _out3820 = DCOMPUTF16.COMP.GenType(_8300_boundType, false, false);
          _8305_boundTpe = _out3820;
          readIdents = _8304_recIdents;
          RAST._IExpr _8306_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8307_bodyIdents;
          DCOMPUTF16._IEnvironment _8308_bodyEnv;
          RAST._IExpr _out3821;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3822;
          DCOMPUTF16._IEnvironment _out3823;
          DCOMPUTF16.COMP.GenStmts(_8298_body, selfIdent, (env).AddAssigned(_8301_boundName, RAST.Type.create_Borrowed(_8305_boundTpe)), false, earlyReturn, out _out3821, out _out3822, out _out3823);
          _8306_bodyExpr = _out3821;
          _8307_bodyIdents = _out3822;
          _8308_bodyEnv = _out3823;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8307_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_8301_boundName));
          newEnv = env;
          generated = RAST.Expr.create_For(DCOMPUTF16.__default.escapeIdent(_8301_boundName), _8302_over, _8306_bodyExpr);
        }
      } else if (_source286.is_Call) {
        DAST._IExpression _8309___mcc_h17 = _source286.dtor_on;
        DAST._ICallName _8310___mcc_h18 = _source286.dtor_callName;
        Dafny.ISequence<DAST._IType> _8311___mcc_h19 = _source286.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _8312___mcc_h20 = _source286.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8313___mcc_h21 = _source286.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _8314_maybeOutVars = _8313___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _8315_args = _8312___mcc_h20;
        Dafny.ISequence<DAST._IType> _8316_typeArgs = _8311___mcc_h19;
        DAST._ICallName _8317_name = _8310___mcc_h18;
        DAST._IExpression _8318_on = _8309___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _8319_onExpr;
          DCOMPUTF16._IOwnership _8320___v68;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8321_enclosingIdents;
          RAST._IExpr _out3824;
          DCOMPUTF16._IOwnership _out3825;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3826;
          DCOMPUTF16.COMP.GenExpr(_8318_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out3824, out _out3825, out _out3826);
          _8319_onExpr = _out3824;
          _8320___v68 = _out3825;
          _8321_enclosingIdents = _out3826;
          Dafny.ISequence<RAST._IType> _8322_typeExprs;
          _8322_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_8316_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _8323_typeI;
            _8323_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _8324_typeArgsR;
            _8324_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_8323_typeI) < (new BigInteger((_8316_typeArgs).Count))) {
              RAST._IType _8325_tpe;
              RAST._IType _out3827;
              _out3827 = DCOMPUTF16.COMP.GenType((_8316_typeArgs).Select(_8323_typeI), false, false);
              _8325_tpe = _out3827;
              _8324_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_8324_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_8325_tpe));
              _8323_typeI = (_8323_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _8326_argExprs;
          _8326_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi29 = new BigInteger((_8315_args).Count);
          for (BigInteger _8327_i = BigInteger.Zero; _8327_i < _hi29; _8327_i++) {
            DCOMPUTF16._IOwnership _8328_argOwnership;
            _8328_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_8317_name).is_Name) && ((_8327_i) < (new BigInteger((((_8317_name).dtor_signature)).Count)))) {
              RAST._IType _8329_tpe;
              RAST._IType _out3828;
              _out3828 = DCOMPUTF16.COMP.GenType(((((_8317_name).dtor_signature)).Select(_8327_i)).dtor_typ, false, false);
              _8329_tpe = _out3828;
              if ((_8329_tpe).HasCopySemantics()) {
                _8328_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _8330_argExpr;
            DCOMPUTF16._IOwnership _8331_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8332_argIdents;
            RAST._IExpr _out3829;
            DCOMPUTF16._IOwnership _out3830;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3831;
            DCOMPUTF16.COMP.GenExpr((_8315_args).Select(_8327_i), selfIdent, env, _8328_argOwnership, out _out3829, out _out3830, out _out3831);
            _8330_argExpr = _out3829;
            _8331_ownership = _out3830;
            _8332_argIdents = _out3831;
            _8326_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_8326_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_8330_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8332_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _8321_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _8333_renderedName;
          _8333_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source288) => {
            if (_source288.is_Name) {
              Dafny.ISequence<Dafny.Rune> _8334___mcc_h26 = _source288.dtor_name;
              Dafny.ISequence<DAST._IFormal> _8335___mcc_h27 = _source288.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _8336_name = _8334___mcc_h26;
              return DCOMPUTF16.__default.escapeIdent(_8336_name);
            } else if (_source288.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source288.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source288.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_8317_name);
          DAST._IExpression _source289 = _8318_on;
          if (_source289.is_Literal) {
            DAST._ILiteral _8337___mcc_h28 = _source289.dtor_Literal_a0;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _8338___mcc_h30 = _source289.dtor_Ident_a0;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8339___mcc_h32 = _source289.dtor_Companion_a0;
            {
              _8319_onExpr = (_8319_onExpr).MSel(_8333_renderedName);
            }
          } else if (_source289.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _8340___mcc_h34 = _source289.dtor_Tuple_a0;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8341___mcc_h36 = _source289.dtor_path;
            Dafny.ISequence<DAST._IType> _8342___mcc_h37 = _source289.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _8343___mcc_h38 = _source289.dtor_args;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _8344___mcc_h42 = _source289.dtor_dims;
            DAST._IType _8345___mcc_h43 = _source289.dtor_typ;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_DatatypeValue) {
            DAST._IDatatypeType _8346___mcc_h46 = _source289.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _8347___mcc_h47 = _source289.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _8348___mcc_h48 = _source289.dtor_variant;
            bool _8349___mcc_h49 = _source289.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _8350___mcc_h50 = _source289.dtor_contents;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Convert) {
            DAST._IExpression _8351___mcc_h56 = _source289.dtor_value;
            DAST._IType _8352___mcc_h57 = _source289.dtor_from;
            DAST._IType _8353___mcc_h58 = _source289.dtor_typ;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SeqConstruct) {
            DAST._IExpression _8354___mcc_h62 = _source289.dtor_length;
            DAST._IExpression _8355___mcc_h63 = _source289.dtor_elem;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _8356___mcc_h66 = _source289.dtor_elements;
            DAST._IType _8357___mcc_h67 = _source289.dtor_typ;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _8358___mcc_h70 = _source289.dtor_elements;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _8359___mcc_h72 = _source289.dtor_elements;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _8360___mcc_h74 = _source289.dtor_mapElems;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_MapBuilder) {
            DAST._IType _8361___mcc_h76 = _source289.dtor_keyType;
            DAST._IType _8362___mcc_h77 = _source289.dtor_valueType;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SeqUpdate) {
            DAST._IExpression _8363___mcc_h80 = _source289.dtor_expr;
            DAST._IExpression _8364___mcc_h81 = _source289.dtor_indexExpr;
            DAST._IExpression _8365___mcc_h82 = _source289.dtor_value;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_MapUpdate) {
            DAST._IExpression _8366___mcc_h86 = _source289.dtor_expr;
            DAST._IExpression _8367___mcc_h87 = _source289.dtor_indexExpr;
            DAST._IExpression _8368___mcc_h88 = _source289.dtor_value;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SetBuilder) {
            DAST._IType _8369___mcc_h92 = _source289.dtor_elemType;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_ToMultiset) {
            DAST._IExpression _8370___mcc_h94 = _source289.dtor_ToMultiset_a0;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_This) {
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Ite) {
            DAST._IExpression _8371___mcc_h96 = _source289.dtor_cond;
            DAST._IExpression _8372___mcc_h97 = _source289.dtor_thn;
            DAST._IExpression _8373___mcc_h98 = _source289.dtor_els;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_UnOp) {
            DAST._IUnaryOp _8374___mcc_h102 = _source289.dtor_unOp;
            DAST._IExpression _8375___mcc_h103 = _source289.dtor_expr;
            DAST.Format._IUnOpFormat _8376___mcc_h104 = _source289.dtor_format1;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_BinOp) {
            DAST._IBinOp _8377___mcc_h108 = _source289.dtor_op;
            DAST._IExpression _8378___mcc_h109 = _source289.dtor_left;
            DAST._IExpression _8379___mcc_h110 = _source289.dtor_right;
            DAST.Format._IBinOpFormat _8380___mcc_h111 = _source289.dtor_format2;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_ArrayLen) {
            DAST._IExpression _8381___mcc_h116 = _source289.dtor_expr;
            BigInteger _8382___mcc_h117 = _source289.dtor_dim;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_MapKeys) {
            DAST._IExpression _8383___mcc_h120 = _source289.dtor_expr;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_MapValues) {
            DAST._IExpression _8384___mcc_h122 = _source289.dtor_expr;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Select) {
            DAST._IExpression _8385___mcc_h124 = _source289.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _8386___mcc_h125 = _source289.dtor_field;
            bool _8387___mcc_h126 = _source289.dtor_isConstant;
            bool _8388___mcc_h127 = _source289.dtor_onDatatype;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SelectFn) {
            DAST._IExpression _8389___mcc_h132 = _source289.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _8390___mcc_h133 = _source289.dtor_field;
            bool _8391___mcc_h134 = _source289.dtor_onDatatype;
            bool _8392___mcc_h135 = _source289.dtor_isStatic;
            BigInteger _8393___mcc_h136 = _source289.dtor_arity;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Index) {
            DAST._IExpression _8394___mcc_h142 = _source289.dtor_expr;
            DAST._ICollKind _8395___mcc_h143 = _source289.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _8396___mcc_h144 = _source289.dtor_indices;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_IndexRange) {
            DAST._IExpression _8397___mcc_h148 = _source289.dtor_expr;
            bool _8398___mcc_h149 = _source289.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _8399___mcc_h150 = _source289.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _8400___mcc_h151 = _source289.dtor_high;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_TupleSelect) {
            DAST._IExpression _8401___mcc_h156 = _source289.dtor_expr;
            BigInteger _8402___mcc_h157 = _source289.dtor_index;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Call) {
            DAST._IExpression _8403___mcc_h160 = _source289.dtor_on;
            DAST._ICallName _8404___mcc_h161 = _source289.dtor_callName;
            Dafny.ISequence<DAST._IType> _8405___mcc_h162 = _source289.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _8406___mcc_h163 = _source289.dtor_args;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _8407___mcc_h168 = _source289.dtor_params;
            DAST._IType _8408___mcc_h169 = _source289.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _8409___mcc_h170 = _source289.dtor_body;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8410___mcc_h174 = _source289.dtor_values;
            DAST._IType _8411___mcc_h175 = _source289.dtor_retType;
            DAST._IExpression _8412___mcc_h176 = _source289.dtor_expr;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _8413___mcc_h180 = _source289.dtor_name;
            DAST._IType _8414___mcc_h181 = _source289.dtor_typ;
            DAST._IExpression _8415___mcc_h182 = _source289.dtor_value;
            DAST._IExpression _8416___mcc_h183 = _source289.dtor_iifeBody;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_Apply) {
            DAST._IExpression _8417___mcc_h188 = _source289.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _8418___mcc_h189 = _source289.dtor_args;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_TypeTest) {
            DAST._IExpression _8419___mcc_h192 = _source289.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8420___mcc_h193 = _source289.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _8421___mcc_h194 = _source289.dtor_variant;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_InitializationValue) {
            DAST._IType _8422___mcc_h198 = _source289.dtor_typ;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_BoolBoundedPool) {
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SetBoundedPool) {
            DAST._IExpression _8423___mcc_h200 = _source289.dtor_of;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else if (_source289.is_SeqBoundedPool) {
            DAST._IExpression _8424___mcc_h202 = _source289.dtor_of;
            bool _8425___mcc_h203 = _source289.dtor_includeDuplicates;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          } else {
            DAST._IExpression _8426___mcc_h206 = _source289.dtor_lo;
            DAST._IExpression _8427___mcc_h207 = _source289.dtor_hi;
            {
              _8319_onExpr = (_8319_onExpr).Sel(_8333_renderedName);
            }
          }
          generated = _8319_onExpr;
          if ((new BigInteger((_8322_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_8322_typeExprs);
          }
          generated = (generated).Apply(_8326_argExprs);
          if (((_8314_maybeOutVars).is_Some) && ((new BigInteger(((_8314_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _8428_outVar;
            _8428_outVar = (((_8314_maybeOutVars).dtor_value).Select(BigInteger.Zero));
            if (!((env).HasCopySemantics(_8428_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_8428_outVar, generated);
          } else if (((_8314_maybeOutVars).is_None) || ((new BigInteger(((_8314_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _8429_tmpVar;
            _8429_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _8430_tmpId;
            _8430_tmpId = RAST.Expr.create_Identifier(_8429_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _8429_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8431_outVars;
            _8431_outVars = (_8314_maybeOutVars).dtor_value;
            BigInteger _hi30 = new BigInteger((_8431_outVars).Count);
            for (BigInteger _8432_outI = BigInteger.Zero; _8432_outI < _hi30; _8432_outI++) {
              Dafny.ISequence<Dafny.Rune> _8433_outVar;
              _8433_outVar = ((_8431_outVars).Select(_8432_outI));
              RAST._IExpr _8434_rhs;
              _8434_rhs = (_8430_tmpId).Sel(Std.Strings.__default.OfNat(_8432_outI));
              if (!((env).HasCopySemantics(_8433_outVar))) {
                _8434_rhs = RAST.__default.MaybePlacebo(_8434_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_8433_outVar, _8434_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source286.is_Return) {
        DAST._IExpression _8435___mcc_h22 = _source286.dtor_expr;
        DAST._IExpression _8436_exprDafny = _8435___mcc_h22;
        {
          RAST._IExpr _8437_expr;
          DCOMPUTF16._IOwnership _8438___v72;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8439_recIdents;
          RAST._IExpr _out3832;
          DCOMPUTF16._IOwnership _out3833;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3834;
          DCOMPUTF16.COMP.GenExpr(_8436_exprDafny, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3832, out _out3833, out _out3834);
          _8437_expr = _out3832;
          _8438___v72 = _out3833;
          _8439_recIdents = _out3834;
          readIdents = _8439_recIdents;
          if (isLast) {
            generated = _8437_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_8437_expr));
          }
          newEnv = env;
        }
      } else if (_source286.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source286.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8440___mcc_h23 = _source286.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8441_toLabel = _8440___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source290 = _8441_toLabel;
          if (_source290.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _8442___mcc_h210 = _source290.dtor_value;
            Dafny.ISequence<Dafny.Rune> _8443_lbl = _8442___mcc_h210;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _8443_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source286.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _8444___mcc_h24 = _source286.dtor_body;
        Dafny.ISequence<DAST._IStatement> _8445_body = _8444___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          BigInteger _hi31 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _8446_paramI = BigInteger.Zero; _8446_paramI < _hi31; _8446_paramI++) {
            Dafny.ISequence<Dafny.Rune> _8447_param;
            _8447_param = ((env).dtor_names).Select(_8446_paramI);
            RAST._IExpr _8448_paramInit;
            DCOMPUTF16._IOwnership _8449___v66;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8450___v67;
            RAST._IExpr _out3835;
            DCOMPUTF16._IOwnership _out3836;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3837;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Ident(_8447_param), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3835, out _out3836, out _out3837);
            _8448_paramInit = _out3835;
            _8449___v66 = _out3836;
            _8450___v67 = _out3837;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMPUTF16.__default.escapeIdent(_8447_param), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_8448_paramInit)));
          }
          RAST._IExpr _8451_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8452_bodyIdents;
          DCOMPUTF16._IEnvironment _8453_bodyEnv;
          RAST._IExpr _out3838;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3839;
          DCOMPUTF16._IEnvironment _out3840;
          DCOMPUTF16.COMP.GenStmts(_8445_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), env, false, earlyReturn, out _out3838, out _out3839, out _out3840);
          _8451_bodyExpr = _out3838;
          _8452_bodyIdents = _out3839;
          _8453_bodyEnv = _out3840;
          newEnv = env;
          readIdents = _8452_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _8451_bodyExpr)));
        }
      } else if (_source286.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source286.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else {
        DAST._IExpression _8454___mcc_h25 = _source286.dtor_Print_a0;
        DAST._IExpression _8455_e = _8454___mcc_h25;
        {
          RAST._IExpr _8456_printedExpr;
          DCOMPUTF16._IOwnership _8457_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8458_recIdents;
          RAST._IExpr _out3841;
          DCOMPUTF16._IOwnership _out3842;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3843;
          DCOMPUTF16.COMP.GenExpr(_8455_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out3841, out _out3842, out _out3843);
          _8456_printedExpr = _out3841;
          _8457_recOwnership = _out3842;
          _8458_recIdents = _out3843;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_8456_printedExpr)));
          readIdents = _8458_recIdents;
          newEnv = env;
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source291 = range;
      if (_source291.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source291.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source291.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source291.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source291.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source291.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source291.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source291.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source291.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source291.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source291.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMPUTF16._IOwnership ownership, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMPUTF16._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      if (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out3844;
        DCOMPUTF16._IOwnership _out3845;
        DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3844, out _out3845);
        @out = _out3844;
        resultingOwnership = _out3845;
        return ;
      } else if ((object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMPUTF16._IOwnership expectedOwnership, DCOMPUTF16._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()));
    }
    public static void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source292 = e;
      DAST._ILiteral _8459___mcc_h0 = _source292.dtor_Literal_a0;
      DAST._ILiteral _source293 = _8459___mcc_h0;
      if (_source293.is_BoolLiteral) {
        bool _8460___mcc_h1 = _source293.dtor_BoolLiteral_a0;
        if ((_8460___mcc_h1) == (false)) {
          {
            RAST._IExpr _out3846;
            DCOMPUTF16._IOwnership _out3847;
            DCOMPUTF16.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")), expectedOwnership, out _out3846, out _out3847);
            r = _out3846;
            resultingOwnership = _out3847;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        } else {
          {
            RAST._IExpr _out3848;
            DCOMPUTF16._IOwnership _out3849;
            DCOMPUTF16.COMP.FromOwned(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")), expectedOwnership, out _out3848, out _out3849);
            r = _out3848;
            resultingOwnership = _out3849;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            return ;
          }
        }
      } else if (_source293.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _8461___mcc_h2 = _source293.dtor_IntLiteral_a0;
        DAST._IType _8462___mcc_h3 = _source293.dtor_IntLiteral_a1;
        DAST._IType _8463_t = _8462___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _8464_i = _8461___mcc_h2;
        {
          DAST._IType _source294 = _8463_t;
          if (_source294.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8465___mcc_h100 = _source294.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8466___mcc_h101 = _source294.dtor_typeArgs;
            DAST._IResolvedType _8467___mcc_h102 = _source294.dtor_resolved;
            DAST._IType _8468_o = _8463_t;
            {
              RAST._IType _8469_genType;
              RAST._IType _out3850;
              _out3850 = DCOMPUTF16.COMP.GenType(_8468_o, false, false);
              _8469_genType = _out3850;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8469_genType);
            }
          } else if (_source294.is_Nullable) {
            DAST._IType _8470___mcc_h106 = _source294.dtor_Nullable_a0;
            DAST._IType _8471_o = _8463_t;
            {
              RAST._IType _8472_genType;
              RAST._IType _out3851;
              _out3851 = DCOMPUTF16.COMP.GenType(_8471_o, false, false);
              _8472_genType = _out3851;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8472_genType);
            }
          } else if (_source294.is_Tuple) {
            Dafny.ISequence<DAST._IType> _8473___mcc_h108 = _source294.dtor_Tuple_a0;
            DAST._IType _8474_o = _8463_t;
            {
              RAST._IType _8475_genType;
              RAST._IType _out3852;
              _out3852 = DCOMPUTF16.COMP.GenType(_8474_o, false, false);
              _8475_genType = _out3852;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8475_genType);
            }
          } else if (_source294.is_Array) {
            DAST._IType _8476___mcc_h110 = _source294.dtor_element;
            BigInteger _8477___mcc_h111 = _source294.dtor_dims;
            DAST._IType _8478_o = _8463_t;
            {
              RAST._IType _8479_genType;
              RAST._IType _out3853;
              _out3853 = DCOMPUTF16.COMP.GenType(_8478_o, false, false);
              _8479_genType = _out3853;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8479_genType);
            }
          } else if (_source294.is_Seq) {
            DAST._IType _8480___mcc_h114 = _source294.dtor_element;
            DAST._IType _8481_o = _8463_t;
            {
              RAST._IType _8482_genType;
              RAST._IType _out3854;
              _out3854 = DCOMPUTF16.COMP.GenType(_8481_o, false, false);
              _8482_genType = _out3854;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8482_genType);
            }
          } else if (_source294.is_Set) {
            DAST._IType _8483___mcc_h116 = _source294.dtor_element;
            DAST._IType _8484_o = _8463_t;
            {
              RAST._IType _8485_genType;
              RAST._IType _out3855;
              _out3855 = DCOMPUTF16.COMP.GenType(_8484_o, false, false);
              _8485_genType = _out3855;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8485_genType);
            }
          } else if (_source294.is_Multiset) {
            DAST._IType _8486___mcc_h118 = _source294.dtor_element;
            DAST._IType _8487_o = _8463_t;
            {
              RAST._IType _8488_genType;
              RAST._IType _out3856;
              _out3856 = DCOMPUTF16.COMP.GenType(_8487_o, false, false);
              _8488_genType = _out3856;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8488_genType);
            }
          } else if (_source294.is_Map) {
            DAST._IType _8489___mcc_h120 = _source294.dtor_key;
            DAST._IType _8490___mcc_h121 = _source294.dtor_value;
            DAST._IType _8491_o = _8463_t;
            {
              RAST._IType _8492_genType;
              RAST._IType _out3857;
              _out3857 = DCOMPUTF16.COMP.GenType(_8491_o, false, false);
              _8492_genType = _out3857;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8492_genType);
            }
          } else if (_source294.is_SetBuilder) {
            DAST._IType _8493___mcc_h124 = _source294.dtor_element;
            DAST._IType _8494_o = _8463_t;
            {
              RAST._IType _8495_genType;
              RAST._IType _out3858;
              _out3858 = DCOMPUTF16.COMP.GenType(_8494_o, false, false);
              _8495_genType = _out3858;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8495_genType);
            }
          } else if (_source294.is_MapBuilder) {
            DAST._IType _8496___mcc_h126 = _source294.dtor_key;
            DAST._IType _8497___mcc_h127 = _source294.dtor_value;
            DAST._IType _8498_o = _8463_t;
            {
              RAST._IType _8499_genType;
              RAST._IType _out3859;
              _out3859 = DCOMPUTF16.COMP.GenType(_8498_o, false, false);
              _8499_genType = _out3859;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8499_genType);
            }
          } else if (_source294.is_Arrow) {
            Dafny.ISequence<DAST._IType> _8500___mcc_h130 = _source294.dtor_args;
            DAST._IType _8501___mcc_h131 = _source294.dtor_result;
            DAST._IType _8502_o = _8463_t;
            {
              RAST._IType _8503_genType;
              RAST._IType _out3860;
              _out3860 = DCOMPUTF16.COMP.GenType(_8502_o, false, false);
              _8503_genType = _out3860;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8503_genType);
            }
          } else if (_source294.is_Primitive) {
            DAST._IPrimitive _8504___mcc_h134 = _source294.dtor_Primitive_a0;
            DAST._IPrimitive _source295 = _8504___mcc_h134;
            if (_source295.is_Int) {
              {
                if ((new BigInteger((_8464_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_8464_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_8464_i, true));
                }
              }
            } else if (_source295.is_Real) {
              DAST._IType _8505_o = _8463_t;
              {
                RAST._IType _8506_genType;
                RAST._IType _out3861;
                _out3861 = DCOMPUTF16.COMP.GenType(_8505_o, false, false);
                _8506_genType = _out3861;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8506_genType);
              }
            } else if (_source295.is_String) {
              DAST._IType _8507_o = _8463_t;
              {
                RAST._IType _8508_genType;
                RAST._IType _out3862;
                _out3862 = DCOMPUTF16.COMP.GenType(_8507_o, false, false);
                _8508_genType = _out3862;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8508_genType);
              }
            } else if (_source295.is_Bool) {
              DAST._IType _8509_o = _8463_t;
              {
                RAST._IType _8510_genType;
                RAST._IType _out3863;
                _out3863 = DCOMPUTF16.COMP.GenType(_8509_o, false, false);
                _8510_genType = _out3863;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8510_genType);
              }
            } else {
              DAST._IType _8511_o = _8463_t;
              {
                RAST._IType _8512_genType;
                RAST._IType _out3864;
                _out3864 = DCOMPUTF16.COMP.GenType(_8511_o, false, false);
                _8512_genType = _out3864;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8512_genType);
              }
            }
          } else if (_source294.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _8513___mcc_h136 = _source294.dtor_Passthrough_a0;
            DAST._IType _8514_o = _8463_t;
            {
              RAST._IType _8515_genType;
              RAST._IType _out3865;
              _out3865 = DCOMPUTF16.COMP.GenType(_8514_o, false, false);
              _8515_genType = _out3865;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8515_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _8516___mcc_h138 = _source294.dtor_TypeArg_a0;
            DAST._IType _8517_o = _8463_t;
            {
              RAST._IType _8518_genType;
              RAST._IType _out3866;
              _out3866 = DCOMPUTF16.COMP.GenType(_8517_o, false, false);
              _8518_genType = _out3866;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_8464_i), _8518_genType);
            }
          }
          RAST._IExpr _out3867;
          DCOMPUTF16._IOwnership _out3868;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3867, out _out3868);
          r = _out3867;
          resultingOwnership = _out3868;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source293.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _8519___mcc_h4 = _source293.dtor_DecLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _8520___mcc_h5 = _source293.dtor_DecLiteral_a1;
        DAST._IType _8521___mcc_h6 = _source293.dtor_DecLiteral_a2;
        DAST._IType _8522_t = _8521___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _8523_d = _8520___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _8524_n = _8519___mcc_h4;
        {
          DAST._IType _source296 = _8522_t;
          if (_source296.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8525___mcc_h140 = _source296.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _8526___mcc_h141 = _source296.dtor_typeArgs;
            DAST._IResolvedType _8527___mcc_h142 = _source296.dtor_resolved;
            DAST._IType _8528_o = _8522_t;
            {
              RAST._IType _8529_genType;
              RAST._IType _out3869;
              _out3869 = DCOMPUTF16.COMP.GenType(_8528_o, false, false);
              _8529_genType = _out3869;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8529_genType);
            }
          } else if (_source296.is_Nullable) {
            DAST._IType _8530___mcc_h146 = _source296.dtor_Nullable_a0;
            DAST._IType _8531_o = _8522_t;
            {
              RAST._IType _8532_genType;
              RAST._IType _out3870;
              _out3870 = DCOMPUTF16.COMP.GenType(_8531_o, false, false);
              _8532_genType = _out3870;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8532_genType);
            }
          } else if (_source296.is_Tuple) {
            Dafny.ISequence<DAST._IType> _8533___mcc_h148 = _source296.dtor_Tuple_a0;
            DAST._IType _8534_o = _8522_t;
            {
              RAST._IType _8535_genType;
              RAST._IType _out3871;
              _out3871 = DCOMPUTF16.COMP.GenType(_8534_o, false, false);
              _8535_genType = _out3871;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8535_genType);
            }
          } else if (_source296.is_Array) {
            DAST._IType _8536___mcc_h150 = _source296.dtor_element;
            BigInteger _8537___mcc_h151 = _source296.dtor_dims;
            DAST._IType _8538_o = _8522_t;
            {
              RAST._IType _8539_genType;
              RAST._IType _out3872;
              _out3872 = DCOMPUTF16.COMP.GenType(_8538_o, false, false);
              _8539_genType = _out3872;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8539_genType);
            }
          } else if (_source296.is_Seq) {
            DAST._IType _8540___mcc_h154 = _source296.dtor_element;
            DAST._IType _8541_o = _8522_t;
            {
              RAST._IType _8542_genType;
              RAST._IType _out3873;
              _out3873 = DCOMPUTF16.COMP.GenType(_8541_o, false, false);
              _8542_genType = _out3873;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8542_genType);
            }
          } else if (_source296.is_Set) {
            DAST._IType _8543___mcc_h156 = _source296.dtor_element;
            DAST._IType _8544_o = _8522_t;
            {
              RAST._IType _8545_genType;
              RAST._IType _out3874;
              _out3874 = DCOMPUTF16.COMP.GenType(_8544_o, false, false);
              _8545_genType = _out3874;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8545_genType);
            }
          } else if (_source296.is_Multiset) {
            DAST._IType _8546___mcc_h158 = _source296.dtor_element;
            DAST._IType _8547_o = _8522_t;
            {
              RAST._IType _8548_genType;
              RAST._IType _out3875;
              _out3875 = DCOMPUTF16.COMP.GenType(_8547_o, false, false);
              _8548_genType = _out3875;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8548_genType);
            }
          } else if (_source296.is_Map) {
            DAST._IType _8549___mcc_h160 = _source296.dtor_key;
            DAST._IType _8550___mcc_h161 = _source296.dtor_value;
            DAST._IType _8551_o = _8522_t;
            {
              RAST._IType _8552_genType;
              RAST._IType _out3876;
              _out3876 = DCOMPUTF16.COMP.GenType(_8551_o, false, false);
              _8552_genType = _out3876;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8552_genType);
            }
          } else if (_source296.is_SetBuilder) {
            DAST._IType _8553___mcc_h164 = _source296.dtor_element;
            DAST._IType _8554_o = _8522_t;
            {
              RAST._IType _8555_genType;
              RAST._IType _out3877;
              _out3877 = DCOMPUTF16.COMP.GenType(_8554_o, false, false);
              _8555_genType = _out3877;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8555_genType);
            }
          } else if (_source296.is_MapBuilder) {
            DAST._IType _8556___mcc_h166 = _source296.dtor_key;
            DAST._IType _8557___mcc_h167 = _source296.dtor_value;
            DAST._IType _8558_o = _8522_t;
            {
              RAST._IType _8559_genType;
              RAST._IType _out3878;
              _out3878 = DCOMPUTF16.COMP.GenType(_8558_o, false, false);
              _8559_genType = _out3878;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8559_genType);
            }
          } else if (_source296.is_Arrow) {
            Dafny.ISequence<DAST._IType> _8560___mcc_h170 = _source296.dtor_args;
            DAST._IType _8561___mcc_h171 = _source296.dtor_result;
            DAST._IType _8562_o = _8522_t;
            {
              RAST._IType _8563_genType;
              RAST._IType _out3879;
              _out3879 = DCOMPUTF16.COMP.GenType(_8562_o, false, false);
              _8563_genType = _out3879;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8563_genType);
            }
          } else if (_source296.is_Primitive) {
            DAST._IPrimitive _8564___mcc_h174 = _source296.dtor_Primitive_a0;
            DAST._IPrimitive _source297 = _8564___mcc_h174;
            if (_source297.is_Int) {
              DAST._IType _8565_o = _8522_t;
              {
                RAST._IType _8566_genType;
                RAST._IType _out3880;
                _out3880 = DCOMPUTF16.COMP.GenType(_8565_o, false, false);
                _8566_genType = _out3880;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8566_genType);
              }
            } else if (_source297.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source297.is_String) {
              DAST._IType _8567_o = _8522_t;
              {
                RAST._IType _8568_genType;
                RAST._IType _out3881;
                _out3881 = DCOMPUTF16.COMP.GenType(_8567_o, false, false);
                _8568_genType = _out3881;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8568_genType);
              }
            } else if (_source297.is_Bool) {
              DAST._IType _8569_o = _8522_t;
              {
                RAST._IType _8570_genType;
                RAST._IType _out3882;
                _out3882 = DCOMPUTF16.COMP.GenType(_8569_o, false, false);
                _8570_genType = _out3882;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8570_genType);
              }
            } else {
              DAST._IType _8571_o = _8522_t;
              {
                RAST._IType _8572_genType;
                RAST._IType _out3883;
                _out3883 = DCOMPUTF16.COMP.GenType(_8571_o, false, false);
                _8572_genType = _out3883;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8572_genType);
              }
            }
          } else if (_source296.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _8573___mcc_h176 = _source296.dtor_Passthrough_a0;
            DAST._IType _8574_o = _8522_t;
            {
              RAST._IType _8575_genType;
              RAST._IType _out3884;
              _out3884 = DCOMPUTF16.COMP.GenType(_8574_o, false, false);
              _8575_genType = _out3884;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8575_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _8576___mcc_h178 = _source296.dtor_TypeArg_a0;
            DAST._IType _8577_o = _8522_t;
            {
              RAST._IType _8578_genType;
              RAST._IType _out3885;
              _out3885 = DCOMPUTF16.COMP.GenType(_8577_o, false, false);
              _8578_genType = _out3885;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _8524_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _8523_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _8578_genType);
            }
          }
          RAST._IExpr _out3886;
          DCOMPUTF16._IOwnership _out3887;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3886, out _out3887);
          r = _out3886;
          resultingOwnership = _out3887;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source293.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _8579___mcc_h7 = _source293.dtor_StringLiteral_a0;
        Dafny.ISequence<Dafny.Rune> _8580_l = _8579___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of"))).Apply1(RAST.Expr.create_LiteralString(_8580_l, false));
          RAST._IExpr _out3888;
          DCOMPUTF16._IOwnership _out3889;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3888, out _out3889);
          r = _out3888;
          resultingOwnership = _out3889;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source293.is_CharLiteral) {
        Dafny.Rune _8581___mcc_h8 = _source293.dtor_CharLiteral_a0;
        Dafny.Rune _8582_c = _8581___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_8582_c).Value)));
          r = RAST.Expr.create_TypeAscription(r, DCOMPUTF16.__default.DafnyCharUnderlying);
          r = ((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(r);
          RAST._IExpr _out3890;
          DCOMPUTF16._IOwnership _out3891;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3890, out _out3891);
          r = _out3890;
          resultingOwnership = _out3891;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _8583___mcc_h9 = _source293.dtor_Null_a0;
        DAST._IType _8584_tpe = _8583___mcc_h9;
        {
          RAST._IType _8585_tpeGen;
          RAST._IType _out3892;
          _out3892 = DCOMPUTF16.COMP.GenType(_8584_tpe, false, false);
          _8585_tpeGen = _out3892;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _8585_tpeGen);
          RAST._IExpr _out3893;
          DCOMPUTF16._IOwnership _out3894;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3893, out _out3894);
          r = _out3893;
          resultingOwnership = _out3894;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public static void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs53 = e;
      DAST._IBinOp _8586_op = _let_tmp_rhs53.dtor_op;
      DAST._IExpression _8587_lExpr = _let_tmp_rhs53.dtor_left;
      DAST._IExpression _8588_rExpr = _let_tmp_rhs53.dtor_right;
      DAST.Format._IBinOpFormat _8589_format = _let_tmp_rhs53.dtor_format2;
      bool _8590_becomesLeftCallsRight;
      _8590_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source298) => {
        if (_source298.is_Eq) {
          bool _8591___mcc_h0 = _source298.dtor_referential;
          bool _8592___mcc_h1 = _source298.dtor_nullable;
          return false;
        } else if (_source298.is_Div) {
          return false;
        } else if (_source298.is_EuclidianDiv) {
          return false;
        } else if (_source298.is_Mod) {
          return false;
        } else if (_source298.is_EuclidianMod) {
          return false;
        } else if (_source298.is_Lt) {
          return false;
        } else if (_source298.is_LtChar) {
          return false;
        } else if (_source298.is_Plus) {
          return false;
        } else if (_source298.is_Minus) {
          return false;
        } else if (_source298.is_Times) {
          return false;
        } else if (_source298.is_BitwiseAnd) {
          return false;
        } else if (_source298.is_BitwiseOr) {
          return false;
        } else if (_source298.is_BitwiseXor) {
          return false;
        } else if (_source298.is_BitwiseShiftRight) {
          return false;
        } else if (_source298.is_BitwiseShiftLeft) {
          return false;
        } else if (_source298.is_And) {
          return false;
        } else if (_source298.is_Or) {
          return false;
        } else if (_source298.is_In) {
          return false;
        } else if (_source298.is_SeqProperPrefix) {
          return false;
        } else if (_source298.is_SeqPrefix) {
          return false;
        } else if (_source298.is_SetMerge) {
          return true;
        } else if (_source298.is_SetSubtraction) {
          return true;
        } else if (_source298.is_SetIntersection) {
          return true;
        } else if (_source298.is_Subset) {
          return false;
        } else if (_source298.is_ProperSubset) {
          return false;
        } else if (_source298.is_SetDisjoint) {
          return true;
        } else if (_source298.is_MapMerge) {
          return true;
        } else if (_source298.is_MapSubtraction) {
          return true;
        } else if (_source298.is_MultisetMerge) {
          return true;
        } else if (_source298.is_MultisetSubtraction) {
          return true;
        } else if (_source298.is_MultisetIntersection) {
          return true;
        } else if (_source298.is_Submultiset) {
          return false;
        } else if (_source298.is_ProperSubmultiset) {
          return false;
        } else if (_source298.is_MultisetDisjoint) {
          return true;
        } else if (_source298.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _8593___mcc_h4 = _source298.dtor_Passthrough_a0;
          return false;
        }
      }))(_8586_op);
      bool _8594_becomesRightCallsLeft;
      _8594_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source299) => {
        if (_source299.is_Eq) {
          bool _8595___mcc_h6 = _source299.dtor_referential;
          bool _8596___mcc_h7 = _source299.dtor_nullable;
          return false;
        } else if (_source299.is_Div) {
          return false;
        } else if (_source299.is_EuclidianDiv) {
          return false;
        } else if (_source299.is_Mod) {
          return false;
        } else if (_source299.is_EuclidianMod) {
          return false;
        } else if (_source299.is_Lt) {
          return false;
        } else if (_source299.is_LtChar) {
          return false;
        } else if (_source299.is_Plus) {
          return false;
        } else if (_source299.is_Minus) {
          return false;
        } else if (_source299.is_Times) {
          return false;
        } else if (_source299.is_BitwiseAnd) {
          return false;
        } else if (_source299.is_BitwiseOr) {
          return false;
        } else if (_source299.is_BitwiseXor) {
          return false;
        } else if (_source299.is_BitwiseShiftRight) {
          return false;
        } else if (_source299.is_BitwiseShiftLeft) {
          return false;
        } else if (_source299.is_And) {
          return false;
        } else if (_source299.is_Or) {
          return false;
        } else if (_source299.is_In) {
          return true;
        } else if (_source299.is_SeqProperPrefix) {
          return false;
        } else if (_source299.is_SeqPrefix) {
          return false;
        } else if (_source299.is_SetMerge) {
          return false;
        } else if (_source299.is_SetSubtraction) {
          return false;
        } else if (_source299.is_SetIntersection) {
          return false;
        } else if (_source299.is_Subset) {
          return false;
        } else if (_source299.is_ProperSubset) {
          return false;
        } else if (_source299.is_SetDisjoint) {
          return false;
        } else if (_source299.is_MapMerge) {
          return false;
        } else if (_source299.is_MapSubtraction) {
          return false;
        } else if (_source299.is_MultisetMerge) {
          return false;
        } else if (_source299.is_MultisetSubtraction) {
          return false;
        } else if (_source299.is_MultisetIntersection) {
          return false;
        } else if (_source299.is_Submultiset) {
          return false;
        } else if (_source299.is_ProperSubmultiset) {
          return false;
        } else if (_source299.is_MultisetDisjoint) {
          return false;
        } else if (_source299.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _8597___mcc_h10 = _source299.dtor_Passthrough_a0;
          return false;
        }
      }))(_8586_op);
      bool _8598_becomesCallLeftRight;
      _8598_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source300) => {
        if (_source300.is_Eq) {
          bool _8599___mcc_h12 = _source300.dtor_referential;
          bool _8600___mcc_h13 = _source300.dtor_nullable;
          if ((_8599___mcc_h12) == (true)) {
            if ((_8600___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source300.is_Div) {
          return false;
        } else if (_source300.is_EuclidianDiv) {
          return false;
        } else if (_source300.is_Mod) {
          return false;
        } else if (_source300.is_EuclidianMod) {
          return false;
        } else if (_source300.is_Lt) {
          return false;
        } else if (_source300.is_LtChar) {
          return false;
        } else if (_source300.is_Plus) {
          return false;
        } else if (_source300.is_Minus) {
          return false;
        } else if (_source300.is_Times) {
          return false;
        } else if (_source300.is_BitwiseAnd) {
          return false;
        } else if (_source300.is_BitwiseOr) {
          return false;
        } else if (_source300.is_BitwiseXor) {
          return false;
        } else if (_source300.is_BitwiseShiftRight) {
          return false;
        } else if (_source300.is_BitwiseShiftLeft) {
          return false;
        } else if (_source300.is_And) {
          return false;
        } else if (_source300.is_Or) {
          return false;
        } else if (_source300.is_In) {
          return false;
        } else if (_source300.is_SeqProperPrefix) {
          return false;
        } else if (_source300.is_SeqPrefix) {
          return false;
        } else if (_source300.is_SetMerge) {
          return false;
        } else if (_source300.is_SetSubtraction) {
          return false;
        } else if (_source300.is_SetIntersection) {
          return false;
        } else if (_source300.is_Subset) {
          return false;
        } else if (_source300.is_ProperSubset) {
          return false;
        } else if (_source300.is_SetDisjoint) {
          return false;
        } else if (_source300.is_MapMerge) {
          return false;
        } else if (_source300.is_MapSubtraction) {
          return false;
        } else if (_source300.is_MultisetMerge) {
          return false;
        } else if (_source300.is_MultisetSubtraction) {
          return false;
        } else if (_source300.is_MultisetIntersection) {
          return false;
        } else if (_source300.is_Submultiset) {
          return false;
        } else if (_source300.is_ProperSubmultiset) {
          return false;
        } else if (_source300.is_MultisetDisjoint) {
          return false;
        } else if (_source300.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _8601___mcc_h16 = _source300.dtor_Passthrough_a0;
          return false;
        }
      }))(_8586_op);
      DCOMPUTF16._IOwnership _8602_expectedLeftOwnership;
      _8602_expectedLeftOwnership = ((_8590_becomesLeftCallsRight) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : ((((_8594_becomesRightCallsLeft) || (_8598_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      DCOMPUTF16._IOwnership _8603_expectedRightOwnership;
      _8603_expectedRightOwnership = (((_8590_becomesLeftCallsRight) || (_8598_becomesCallLeftRight)) ? (DCOMPUTF16.Ownership.create_OwnershipBorrowed()) : (((_8594_becomesRightCallsLeft) ? (DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()) : (DCOMPUTF16.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _8604_left;
      DCOMPUTF16._IOwnership _8605___v77;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8606_recIdentsL;
      RAST._IExpr _out3895;
      DCOMPUTF16._IOwnership _out3896;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3897;
      DCOMPUTF16.COMP.GenExpr(_8587_lExpr, selfIdent, env, _8602_expectedLeftOwnership, out _out3895, out _out3896, out _out3897);
      _8604_left = _out3895;
      _8605___v77 = _out3896;
      _8606_recIdentsL = _out3897;
      RAST._IExpr _8607_right;
      DCOMPUTF16._IOwnership _8608___v78;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8609_recIdentsR;
      RAST._IExpr _out3898;
      DCOMPUTF16._IOwnership _out3899;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3900;
      DCOMPUTF16.COMP.GenExpr(_8588_rExpr, selfIdent, env, _8603_expectedRightOwnership, out _out3898, out _out3899, out _out3900);
      _8607_right = _out3898;
      _8608___v78 = _out3899;
      _8609_recIdentsR = _out3900;
      DAST._IBinOp _source301 = _8586_op;
      if (_source301.is_Eq) {
        bool _8610___mcc_h18 = _source301.dtor_referential;
        bool _8611___mcc_h19 = _source301.dtor_nullable;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source302 = _8586_op;
            if (_source302.is_Eq) {
              bool _8612___mcc_h24 = _source302.dtor_referential;
              bool _8613___mcc_h25 = _source302.dtor_nullable;
              bool _8614_nullable = _8613___mcc_h25;
              bool _8615_referential = _8612___mcc_h24;
              {
                if (_8615_referential) {
                  if (_8614_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source302.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source302.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8616___mcc_h26 = _source302.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8617_op = _8616___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_8617_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_Div) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source303 = _8586_op;
            if (_source303.is_Eq) {
              bool _8618___mcc_h27 = _source303.dtor_referential;
              bool _8619___mcc_h28 = _source303.dtor_nullable;
              bool _8620_nullable = _8619___mcc_h28;
              bool _8621_referential = _8618___mcc_h27;
              {
                if (_8621_referential) {
                  if (_8620_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source303.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source303.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8622___mcc_h29 = _source303.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8623_op = _8622___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_8623_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_EuclidianDiv) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source304 = _8586_op;
            if (_source304.is_Eq) {
              bool _8624___mcc_h30 = _source304.dtor_referential;
              bool _8625___mcc_h31 = _source304.dtor_nullable;
              bool _8626_nullable = _8625___mcc_h31;
              bool _8627_referential = _8624___mcc_h30;
              {
                if (_8627_referential) {
                  if (_8626_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source304.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source304.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8628___mcc_h32 = _source304.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8629_op = _8628___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_8629_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_Mod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source305 = _8586_op;
            if (_source305.is_Eq) {
              bool _8630___mcc_h33 = _source305.dtor_referential;
              bool _8631___mcc_h34 = _source305.dtor_nullable;
              bool _8632_nullable = _8631___mcc_h34;
              bool _8633_referential = _8630___mcc_h33;
              {
                if (_8633_referential) {
                  if (_8632_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source305.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source305.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8634___mcc_h35 = _source305.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8635_op = _8634___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_8635_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_EuclidianMod) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source306 = _8586_op;
            if (_source306.is_Eq) {
              bool _8636___mcc_h36 = _source306.dtor_referential;
              bool _8637___mcc_h37 = _source306.dtor_nullable;
              bool _8638_nullable = _8637___mcc_h37;
              bool _8639_referential = _8636___mcc_h36;
              {
                if (_8639_referential) {
                  if (_8638_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source306.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source306.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8640___mcc_h38 = _source306.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8641_op = _8640___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_8641_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_Lt) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source307 = _8586_op;
            if (_source307.is_Eq) {
              bool _8642___mcc_h39 = _source307.dtor_referential;
              bool _8643___mcc_h40 = _source307.dtor_nullable;
              bool _8644_nullable = _8643___mcc_h40;
              bool _8645_referential = _8642___mcc_h39;
              {
                if (_8645_referential) {
                  if (_8644_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source307.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source307.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8646___mcc_h41 = _source307.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8647_op = _8646___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_8647_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_LtChar) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source308 = _8586_op;
            if (_source308.is_Eq) {
              bool _8648___mcc_h42 = _source308.dtor_referential;
              bool _8649___mcc_h43 = _source308.dtor_nullable;
              bool _8650_nullable = _8649___mcc_h43;
              bool _8651_referential = _8648___mcc_h42;
              {
                if (_8651_referential) {
                  if (_8650_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source308.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source308.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8652___mcc_h44 = _source308.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8653_op = _8652___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_8653_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_Plus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source309 = _8586_op;
            if (_source309.is_Eq) {
              bool _8654___mcc_h45 = _source309.dtor_referential;
              bool _8655___mcc_h46 = _source309.dtor_nullable;
              bool _8656_nullable = _8655___mcc_h46;
              bool _8657_referential = _8654___mcc_h45;
              {
                if (_8657_referential) {
                  if (_8656_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source309.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source309.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8658___mcc_h47 = _source309.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8659_op = _8658___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_8659_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_Minus) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source310 = _8586_op;
            if (_source310.is_Eq) {
              bool _8660___mcc_h48 = _source310.dtor_referential;
              bool _8661___mcc_h49 = _source310.dtor_nullable;
              bool _8662_nullable = _8661___mcc_h49;
              bool _8663_referential = _8660___mcc_h48;
              {
                if (_8663_referential) {
                  if (_8662_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source310.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source310.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8664___mcc_h50 = _source310.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8665_op = _8664___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_8665_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_Times) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source311 = _8586_op;
            if (_source311.is_Eq) {
              bool _8666___mcc_h51 = _source311.dtor_referential;
              bool _8667___mcc_h52 = _source311.dtor_nullable;
              bool _8668_nullable = _8667___mcc_h52;
              bool _8669_referential = _8666___mcc_h51;
              {
                if (_8669_referential) {
                  if (_8668_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source311.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source311.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8670___mcc_h53 = _source311.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8671_op = _8670___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_8671_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_BitwiseAnd) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source312 = _8586_op;
            if (_source312.is_Eq) {
              bool _8672___mcc_h54 = _source312.dtor_referential;
              bool _8673___mcc_h55 = _source312.dtor_nullable;
              bool _8674_nullable = _8673___mcc_h55;
              bool _8675_referential = _8672___mcc_h54;
              {
                if (_8675_referential) {
                  if (_8674_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source312.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source312.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8676___mcc_h56 = _source312.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8677_op = _8676___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_8677_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_BitwiseOr) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source313 = _8586_op;
            if (_source313.is_Eq) {
              bool _8678___mcc_h57 = _source313.dtor_referential;
              bool _8679___mcc_h58 = _source313.dtor_nullable;
              bool _8680_nullable = _8679___mcc_h58;
              bool _8681_referential = _8678___mcc_h57;
              {
                if (_8681_referential) {
                  if (_8680_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source313.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source313.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8682___mcc_h59 = _source313.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8683_op = _8682___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_8683_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_BitwiseXor) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source314 = _8586_op;
            if (_source314.is_Eq) {
              bool _8684___mcc_h60 = _source314.dtor_referential;
              bool _8685___mcc_h61 = _source314.dtor_nullable;
              bool _8686_nullable = _8685___mcc_h61;
              bool _8687_referential = _8684___mcc_h60;
              {
                if (_8687_referential) {
                  if (_8686_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source314.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source314.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8688___mcc_h62 = _source314.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8689_op = _8688___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_8689_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_BitwiseShiftRight) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source315 = _8586_op;
            if (_source315.is_Eq) {
              bool _8690___mcc_h63 = _source315.dtor_referential;
              bool _8691___mcc_h64 = _source315.dtor_nullable;
              bool _8692_nullable = _8691___mcc_h64;
              bool _8693_referential = _8690___mcc_h63;
              {
                if (_8693_referential) {
                  if (_8692_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source315.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source315.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8694___mcc_h65 = _source315.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8695_op = _8694___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_8695_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_BitwiseShiftLeft) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source316 = _8586_op;
            if (_source316.is_Eq) {
              bool _8696___mcc_h66 = _source316.dtor_referential;
              bool _8697___mcc_h67 = _source316.dtor_nullable;
              bool _8698_nullable = _8697___mcc_h67;
              bool _8699_referential = _8696___mcc_h66;
              {
                if (_8699_referential) {
                  if (_8698_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source316.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source316.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8700___mcc_h68 = _source316.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8701_op = _8700___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_8701_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_And) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source317 = _8586_op;
            if (_source317.is_Eq) {
              bool _8702___mcc_h69 = _source317.dtor_referential;
              bool _8703___mcc_h70 = _source317.dtor_nullable;
              bool _8704_nullable = _8703___mcc_h70;
              bool _8705_referential = _8702___mcc_h69;
              {
                if (_8705_referential) {
                  if (_8704_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source317.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source317.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8706___mcc_h71 = _source317.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8707_op = _8706___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_8707_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_Or) {
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source318 = _8586_op;
            if (_source318.is_Eq) {
              bool _8708___mcc_h72 = _source318.dtor_referential;
              bool _8709___mcc_h73 = _source318.dtor_nullable;
              bool _8710_nullable = _8709___mcc_h73;
              bool _8711_referential = _8708___mcc_h72;
              {
                if (_8711_referential) {
                  if (_8710_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source318.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source318.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8712___mcc_h74 = _source318.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8713_op = _8712___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_8713_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      } else if (_source301.is_In) {
        {
          r = ((_8607_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_8604_left);
        }
      } else if (_source301.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _8604_left, _8607_right, _8589_format);
      } else if (_source301.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _8604_left, _8607_right, _8589_format);
      } else if (_source301.is_SetMerge) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_8607_right);
        }
      } else if (_source301.is_SetSubtraction) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_8607_right);
        }
      } else if (_source301.is_SetIntersection) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_8607_right);
        }
      } else if (_source301.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _8604_left, _8607_right, _8589_format);
        }
      } else if (_source301.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _8604_left, _8607_right, _8589_format);
        }
      } else if (_source301.is_SetDisjoint) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_8607_right);
        }
      } else if (_source301.is_MapMerge) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_8607_right);
        }
      } else if (_source301.is_MapSubtraction) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_8607_right);
        }
      } else if (_source301.is_MultisetMerge) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_8607_right);
        }
      } else if (_source301.is_MultisetSubtraction) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_8607_right);
        }
      } else if (_source301.is_MultisetIntersection) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_8607_right);
        }
      } else if (_source301.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _8604_left, _8607_right, _8589_format);
        }
      } else if (_source301.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _8604_left, _8607_right, _8589_format);
        }
      } else if (_source301.is_MultisetDisjoint) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_8607_right);
        }
      } else if (_source301.is_Concat) {
        {
          r = ((_8604_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_8607_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _8714___mcc_h22 = _source301.dtor_Passthrough_a0;
        {
          if ((DCOMPUTF16.COMP.OpTable).Contains(_8586_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMPUTF16.COMP.OpTable,_8586_op), _8604_left, _8607_right, _8589_format);
          } else {
            DAST._IBinOp _source319 = _8586_op;
            if (_source319.is_Eq) {
              bool _8715___mcc_h75 = _source319.dtor_referential;
              bool _8716___mcc_h76 = _source319.dtor_nullable;
              bool _8717_nullable = _8716___mcc_h76;
              bool _8718_referential = _8715___mcc_h75;
              {
                if (_8718_referential) {
                  if (_8717_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _8604_left, _8607_right, DAST.Format.BinOpFormat.create_NoFormat());
                }
              }
            } else if (_source319.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else if (_source319.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8604_left, _8607_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8719___mcc_h77 = _source319.dtor_Passthrough_a0;
              Dafny.ISequence<Dafny.Rune> _8720_op = _8719___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_8720_op, _8604_left, _8607_right, _8589_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out3901;
      DCOMPUTF16._IOwnership _out3902;
      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3901, out _out3902);
      r = _out3901;
      resultingOwnership = _out3902;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_8606_recIdentsL, _8609_recIdentsR);
      return ;
    }
    public static void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs54 = e;
      DAST._IExpression _8721_expr = _let_tmp_rhs54.dtor_value;
      DAST._IType _8722_fromTpe = _let_tmp_rhs54.dtor_from;
      DAST._IType _8723_toTpe = _let_tmp_rhs54.dtor_typ;
      if (object.Equals(_8722_fromTpe, _8723_toTpe)) {
        RAST._IExpr _8724_recursiveGen;
        DCOMPUTF16._IOwnership _8725_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8726_recIdents;
        RAST._IExpr _out3903;
        DCOMPUTF16._IOwnership _out3904;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3905;
        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3903, out _out3904, out _out3905);
        _8724_recursiveGen = _out3903;
        _8725_recOwned = _out3904;
        _8726_recIdents = _out3905;
        r = _8724_recursiveGen;
        RAST._IExpr _out3906;
        DCOMPUTF16._IOwnership _out3907;
        DCOMPUTF16.COMP.FromOwnership(r, _8725_recOwned, expectedOwnership, out _out3906, out _out3907);
        r = _out3906;
        resultingOwnership = _out3907;
        readIdents = _8726_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source320 = _System.Tuple2<DAST._IType, DAST._IType>.create(_8722_fromTpe, _8723_toTpe);
        DAST._IType _8727___mcc_h0 = _source320.dtor__0;
        DAST._IType _8728___mcc_h1 = _source320.dtor__1;
        DAST._IType _source321 = _8727___mcc_h0;
        if (_source321.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8729___mcc_h4 = _source321.dtor_Path_a0;
          Dafny.ISequence<DAST._IType> _8730___mcc_h5 = _source321.dtor_typeArgs;
          DAST._IResolvedType _8731___mcc_h6 = _source321.dtor_resolved;
          DAST._IResolvedType _source322 = _8731___mcc_h6;
          if (_source322.is_AllocatedDatatype) {
            DAST._IDatatypeType _8732___mcc_h16 = _source322.dtor_datatypeType;
            DAST._IType _source323 = _8728___mcc_h1;
            if (_source323.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8733___mcc_h20 = _source323.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _8734___mcc_h21 = _source323.dtor_typeArgs;
              DAST._IResolvedType _8735___mcc_h22 = _source323.dtor_resolved;
              DAST._IResolvedType _source324 = _8735___mcc_h22;
              if (_source324.is_AllocatedDatatype) {
                DAST._IDatatypeType _8736___mcc_h26 = _source324.dtor_datatypeType;
                {
                  RAST._IType _8737_fromTpeGen;
                  RAST._IType _out3908;
                  _out3908 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _8737_fromTpeGen = _out3908;
                  RAST._IType _8738_toTpeGen;
                  RAST._IType _out3909;
                  _out3909 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _8738_toTpeGen = _out3909;
                  RAST._IExpr _8739_recursiveGen;
                  DCOMPUTF16._IOwnership _8740_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8741_recIdents;
                  RAST._IExpr _out3910;
                  DCOMPUTF16._IOwnership _out3911;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3912;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3910, out _out3911, out _out3912);
                  _8739_recursiveGen = _out3910;
                  _8740_recOwned = _out3911;
                  _8741_recIdents = _out3912;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8739_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8737_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8738_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out3913;
                  DCOMPUTF16._IOwnership _out3914;
                  DCOMPUTF16.COMP.FromOwnership(r, _8740_recOwned, expectedOwnership, out _out3913, out _out3914);
                  r = _out3913;
                  resultingOwnership = _out3914;
                  readIdents = _8741_recIdents;
                }
              } else if (_source324.is_Datatype) {
                DAST._IDatatypeType _8742___mcc_h28 = _source324.dtor_datatypeType;
                {
                  RAST._IType _8743_fromTpeGen;
                  RAST._IType _out3915;
                  _out3915 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _8743_fromTpeGen = _out3915;
                  RAST._IType _8744_toTpeGen;
                  RAST._IType _out3916;
                  _out3916 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _8744_toTpeGen = _out3916;
                  RAST._IExpr _8745_recursiveGen;
                  DCOMPUTF16._IOwnership _8746_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8747_recIdents;
                  RAST._IExpr _out3917;
                  DCOMPUTF16._IOwnership _out3918;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3919;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3917, out _out3918, out _out3919);
                  _8745_recursiveGen = _out3917;
                  _8746_recOwned = _out3918;
                  _8747_recIdents = _out3919;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8745_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8743_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8744_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out3920;
                  DCOMPUTF16._IOwnership _out3921;
                  DCOMPUTF16.COMP.FromOwnership(r, _8746_recOwned, expectedOwnership, out _out3920, out _out3921);
                  r = _out3920;
                  resultingOwnership = _out3921;
                  readIdents = _8747_recIdents;
                }
              } else if (_source324.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8748___mcc_h30 = _source324.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _8749___mcc_h31 = _source324.dtor_attributes;
                {
                  RAST._IType _8750_fromTpeGen;
                  RAST._IType _out3922;
                  _out3922 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _8750_fromTpeGen = _out3922;
                  RAST._IType _8751_toTpeGen;
                  RAST._IType _out3923;
                  _out3923 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _8751_toTpeGen = _out3923;
                  RAST._IExpr _8752_recursiveGen;
                  DCOMPUTF16._IOwnership _8753_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8754_recIdents;
                  RAST._IExpr _out3924;
                  DCOMPUTF16._IOwnership _out3925;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3926;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3924, out _out3925, out _out3926);
                  _8752_recursiveGen = _out3924;
                  _8753_recOwned = _out3925;
                  _8754_recIdents = _out3926;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8752_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8750_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8751_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out3927;
                  DCOMPUTF16._IOwnership _out3928;
                  DCOMPUTF16.COMP.FromOwnership(r, _8753_recOwned, expectedOwnership, out _out3927, out _out3928);
                  r = _out3927;
                  resultingOwnership = _out3928;
                  readIdents = _8754_recIdents;
                }
              } else {
                DAST._IType _8755___mcc_h34 = _source324.dtor_baseType;
                DAST._INewtypeRange _8756___mcc_h35 = _source324.dtor_range;
                bool _8757___mcc_h36 = _source324.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _8758___mcc_h37 = _source324.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _8759_attributes = _8758___mcc_h37;
                bool _8760_erase = _8757___mcc_h36;
                DAST._INewtypeRange _8761_range = _8756___mcc_h35;
                DAST._IType _8762_b = _8755___mcc_h34;
                {
                  Std.Wrappers._IOption<RAST._IType> _8763_nativeToType;
                  _8763_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_8762_b, _8761_range);
                  if (object.Equals(_8722_fromTpe, _8762_b)) {
                    RAST._IExpr _8764_recursiveGen;
                    DCOMPUTF16._IOwnership _8765_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8766_recIdents;
                    RAST._IExpr _out3929;
                    DCOMPUTF16._IOwnership _out3930;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3931;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out3929, out _out3930, out _out3931);
                    _8764_recursiveGen = _out3929;
                    _8765_recOwned = _out3930;
                    _8766_recIdents = _out3931;
                    readIdents = _8766_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source325 = _8763_nativeToType;
                    if (_source325.is_None) {
                      if (_8760_erase) {
                        r = _8764_recursiveGen;
                      } else {
                        RAST._IType _8767_rhsType;
                        RAST._IType _out3932;
                        _out3932 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _8767_rhsType = _out3932;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_8767_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_8764_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out3933;
                      DCOMPUTF16._IOwnership _out3934;
                      DCOMPUTF16.COMP.FromOwnership(r, _8765_recOwned, expectedOwnership, out _out3933, out _out3934);
                      r = _out3933;
                      resultingOwnership = _out3934;
                    } else {
                      RAST._IType _8768___mcc_h1348 = _source325.dtor_value;
                      RAST._IType _8769_v = _8768___mcc_h1348;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8764_recursiveGen, RAST.Expr.create_ExprFromType(_8769_v)));
                      RAST._IExpr _out3935;
                      DCOMPUTF16._IOwnership _out3936;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out3935, out _out3936);
                      r = _out3935;
                      resultingOwnership = _out3936;
                    }
                  } else {
                    if ((_8763_nativeToType).is_Some) {
                      DAST._IType _source326 = _8722_fromTpe;
                      if (_source326.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8770___mcc_h1349 = _source326.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _8771___mcc_h1350 = _source326.dtor_typeArgs;
                        DAST._IResolvedType _8772___mcc_h1351 = _source326.dtor_resolved;
                        DAST._IResolvedType _source327 = _8772___mcc_h1351;
                        if (_source327.is_AllocatedDatatype) {
                          DAST._IDatatypeType _8773___mcc_h1355 = _source327.dtor_datatypeType;
                        } else if (_source327.is_Datatype) {
                          DAST._IDatatypeType _8774___mcc_h1357 = _source327.dtor_datatypeType;
                        } else if (_source327.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8775___mcc_h1359 = _source327.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _8776___mcc_h1360 = _source327.dtor_attributes;
                        } else {
                          DAST._IType _8777___mcc_h1363 = _source327.dtor_baseType;
                          DAST._INewtypeRange _8778___mcc_h1364 = _source327.dtor_range;
                          bool _8779___mcc_h1365 = _source327.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _8780___mcc_h1366 = _source327.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _8781_attributes0 = _8780___mcc_h1366;
                          bool _8782_erase0 = _8779___mcc_h1365;
                          DAST._INewtypeRange _8783_range0 = _8778___mcc_h1364;
                          DAST._IType _8784_b0 = _8777___mcc_h1363;
                          {
                            Std.Wrappers._IOption<RAST._IType> _8785_nativeFromType;
                            _8785_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8784_b0, _8783_range0);
                            if ((_8785_nativeFromType).is_Some) {
                              RAST._IExpr _8786_recursiveGen;
                              DCOMPUTF16._IOwnership _8787_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8788_recIdents;
                              RAST._IExpr _out3937;
                              DCOMPUTF16._IOwnership _out3938;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3939;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3937, out _out3938, out _out3939);
                              _8786_recursiveGen = _out3937;
                              _8787_recOwned = _out3938;
                              _8788_recIdents = _out3939;
                              RAST._IExpr _out3940;
                              DCOMPUTF16._IOwnership _out3941;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_8786_recursiveGen, (_8763_nativeToType).dtor_value), _8787_recOwned, expectedOwnership, out _out3940, out _out3941);
                              r = _out3940;
                              resultingOwnership = _out3941;
                              readIdents = _8788_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source326.is_Nullable) {
                        DAST._IType _8789___mcc_h1371 = _source326.dtor_Nullable_a0;
                      } else if (_source326.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _8790___mcc_h1373 = _source326.dtor_Tuple_a0;
                      } else if (_source326.is_Array) {
                        DAST._IType _8791___mcc_h1375 = _source326.dtor_element;
                        BigInteger _8792___mcc_h1376 = _source326.dtor_dims;
                      } else if (_source326.is_Seq) {
                        DAST._IType _8793___mcc_h1379 = _source326.dtor_element;
                      } else if (_source326.is_Set) {
                        DAST._IType _8794___mcc_h1381 = _source326.dtor_element;
                      } else if (_source326.is_Multiset) {
                        DAST._IType _8795___mcc_h1383 = _source326.dtor_element;
                      } else if (_source326.is_Map) {
                        DAST._IType _8796___mcc_h1385 = _source326.dtor_key;
                        DAST._IType _8797___mcc_h1386 = _source326.dtor_value;
                      } else if (_source326.is_SetBuilder) {
                        DAST._IType _8798___mcc_h1389 = _source326.dtor_element;
                      } else if (_source326.is_MapBuilder) {
                        DAST._IType _8799___mcc_h1391 = _source326.dtor_key;
                        DAST._IType _8800___mcc_h1392 = _source326.dtor_value;
                      } else if (_source326.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _8801___mcc_h1395 = _source326.dtor_args;
                        DAST._IType _8802___mcc_h1396 = _source326.dtor_result;
                      } else if (_source326.is_Primitive) {
                        DAST._IPrimitive _8803___mcc_h1399 = _source326.dtor_Primitive_a0;
                      } else if (_source326.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _8804___mcc_h1401 = _source326.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _8805___mcc_h1403 = _source326.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _8806_recursiveGen;
                        DCOMPUTF16._IOwnership _8807_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8808_recIdents;
                        RAST._IExpr _out3942;
                        DCOMPUTF16._IOwnership _out3943;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3944;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3942, out _out3943, out _out3944);
                        _8806_recursiveGen = _out3942;
                        _8807_recOwned = _out3943;
                        _8808_recIdents = _out3944;
                        RAST._IExpr _out3945;
                        DCOMPUTF16._IOwnership _out3946;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_8806_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_8763_nativeToType).dtor_value), _8807_recOwned, expectedOwnership, out _out3945, out _out3946);
                        r = _out3945;
                        resultingOwnership = _out3946;
                        readIdents = _8808_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out3947;
                    DCOMPUTF16._IOwnership _out3948;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3949;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _8762_b), _8762_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out3947, out _out3948, out _out3949);
                    r = _out3947;
                    resultingOwnership = _out3948;
                    readIdents = _out3949;
                  }
                }
              }
            } else if (_source323.is_Nullable) {
              DAST._IType _8809___mcc_h42 = _source323.dtor_Nullable_a0;
              {
                RAST._IExpr _8810_recursiveGen;
                DCOMPUTF16._IOwnership _8811_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8812_recIdents;
                RAST._IExpr _out3950;
                DCOMPUTF16._IOwnership _out3951;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3952;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3950, out _out3951, out _out3952);
                _8810_recursiveGen = _out3950;
                _8811_recOwned = _out3951;
                _8812_recIdents = _out3952;
                r = _8810_recursiveGen;
                if (object.Equals(_8811_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out3953;
                DCOMPUTF16._IOwnership _out3954;
                DCOMPUTF16.COMP.FromOwnership(r, _8811_recOwned, expectedOwnership, out _out3953, out _out3954);
                r = _out3953;
                resultingOwnership = _out3954;
                readIdents = _8812_recIdents;
              }
            } else if (_source323.is_Tuple) {
              Dafny.ISequence<DAST._IType> _8813___mcc_h44 = _source323.dtor_Tuple_a0;
              {
                RAST._IType _8814_fromTpeGen;
                RAST._IType _out3955;
                _out3955 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8814_fromTpeGen = _out3955;
                RAST._IType _8815_toTpeGen;
                RAST._IType _out3956;
                _out3956 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8815_toTpeGen = _out3956;
                RAST._IExpr _8816_recursiveGen;
                DCOMPUTF16._IOwnership _8817_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8818_recIdents;
                RAST._IExpr _out3957;
                DCOMPUTF16._IOwnership _out3958;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3959;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3957, out _out3958, out _out3959);
                _8816_recursiveGen = _out3957;
                _8817_recOwned = _out3958;
                _8818_recIdents = _out3959;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8816_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8814_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8815_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3960;
                DCOMPUTF16._IOwnership _out3961;
                DCOMPUTF16.COMP.FromOwnership(r, _8817_recOwned, expectedOwnership, out _out3960, out _out3961);
                r = _out3960;
                resultingOwnership = _out3961;
                readIdents = _8818_recIdents;
              }
            } else if (_source323.is_Array) {
              DAST._IType _8819___mcc_h46 = _source323.dtor_element;
              BigInteger _8820___mcc_h47 = _source323.dtor_dims;
              {
                RAST._IType _8821_fromTpeGen;
                RAST._IType _out3962;
                _out3962 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8821_fromTpeGen = _out3962;
                RAST._IType _8822_toTpeGen;
                RAST._IType _out3963;
                _out3963 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8822_toTpeGen = _out3963;
                RAST._IExpr _8823_recursiveGen;
                DCOMPUTF16._IOwnership _8824_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8825_recIdents;
                RAST._IExpr _out3964;
                DCOMPUTF16._IOwnership _out3965;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3966;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3964, out _out3965, out _out3966);
                _8823_recursiveGen = _out3964;
                _8824_recOwned = _out3965;
                _8825_recIdents = _out3966;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8823_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8821_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8822_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3967;
                DCOMPUTF16._IOwnership _out3968;
                DCOMPUTF16.COMP.FromOwnership(r, _8824_recOwned, expectedOwnership, out _out3967, out _out3968);
                r = _out3967;
                resultingOwnership = _out3968;
                readIdents = _8825_recIdents;
              }
            } else if (_source323.is_Seq) {
              DAST._IType _8826___mcc_h50 = _source323.dtor_element;
              {
                RAST._IType _8827_fromTpeGen;
                RAST._IType _out3969;
                _out3969 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8827_fromTpeGen = _out3969;
                RAST._IType _8828_toTpeGen;
                RAST._IType _out3970;
                _out3970 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8828_toTpeGen = _out3970;
                RAST._IExpr _8829_recursiveGen;
                DCOMPUTF16._IOwnership _8830_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8831_recIdents;
                RAST._IExpr _out3971;
                DCOMPUTF16._IOwnership _out3972;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3973;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3971, out _out3972, out _out3973);
                _8829_recursiveGen = _out3971;
                _8830_recOwned = _out3972;
                _8831_recIdents = _out3973;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8829_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8827_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8828_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3974;
                DCOMPUTF16._IOwnership _out3975;
                DCOMPUTF16.COMP.FromOwnership(r, _8830_recOwned, expectedOwnership, out _out3974, out _out3975);
                r = _out3974;
                resultingOwnership = _out3975;
                readIdents = _8831_recIdents;
              }
            } else if (_source323.is_Set) {
              DAST._IType _8832___mcc_h52 = _source323.dtor_element;
              {
                RAST._IType _8833_fromTpeGen;
                RAST._IType _out3976;
                _out3976 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8833_fromTpeGen = _out3976;
                RAST._IType _8834_toTpeGen;
                RAST._IType _out3977;
                _out3977 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8834_toTpeGen = _out3977;
                RAST._IExpr _8835_recursiveGen;
                DCOMPUTF16._IOwnership _8836_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8837_recIdents;
                RAST._IExpr _out3978;
                DCOMPUTF16._IOwnership _out3979;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3980;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3978, out _out3979, out _out3980);
                _8835_recursiveGen = _out3978;
                _8836_recOwned = _out3979;
                _8837_recIdents = _out3980;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8835_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8833_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8834_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3981;
                DCOMPUTF16._IOwnership _out3982;
                DCOMPUTF16.COMP.FromOwnership(r, _8836_recOwned, expectedOwnership, out _out3981, out _out3982);
                r = _out3981;
                resultingOwnership = _out3982;
                readIdents = _8837_recIdents;
              }
            } else if (_source323.is_Multiset) {
              DAST._IType _8838___mcc_h54 = _source323.dtor_element;
              {
                RAST._IType _8839_fromTpeGen;
                RAST._IType _out3983;
                _out3983 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8839_fromTpeGen = _out3983;
                RAST._IType _8840_toTpeGen;
                RAST._IType _out3984;
                _out3984 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8840_toTpeGen = _out3984;
                RAST._IExpr _8841_recursiveGen;
                DCOMPUTF16._IOwnership _8842_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8843_recIdents;
                RAST._IExpr _out3985;
                DCOMPUTF16._IOwnership _out3986;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3987;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3985, out _out3986, out _out3987);
                _8841_recursiveGen = _out3985;
                _8842_recOwned = _out3986;
                _8843_recIdents = _out3987;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8841_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8839_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8840_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3988;
                DCOMPUTF16._IOwnership _out3989;
                DCOMPUTF16.COMP.FromOwnership(r, _8842_recOwned, expectedOwnership, out _out3988, out _out3989);
                r = _out3988;
                resultingOwnership = _out3989;
                readIdents = _8843_recIdents;
              }
            } else if (_source323.is_Map) {
              DAST._IType _8844___mcc_h56 = _source323.dtor_key;
              DAST._IType _8845___mcc_h57 = _source323.dtor_value;
              {
                RAST._IType _8846_fromTpeGen;
                RAST._IType _out3990;
                _out3990 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8846_fromTpeGen = _out3990;
                RAST._IType _8847_toTpeGen;
                RAST._IType _out3991;
                _out3991 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8847_toTpeGen = _out3991;
                RAST._IExpr _8848_recursiveGen;
                DCOMPUTF16._IOwnership _8849_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8850_recIdents;
                RAST._IExpr _out3992;
                DCOMPUTF16._IOwnership _out3993;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out3994;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3992, out _out3993, out _out3994);
                _8848_recursiveGen = _out3992;
                _8849_recOwned = _out3993;
                _8850_recIdents = _out3994;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8848_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8846_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8847_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out3995;
                DCOMPUTF16._IOwnership _out3996;
                DCOMPUTF16.COMP.FromOwnership(r, _8849_recOwned, expectedOwnership, out _out3995, out _out3996);
                r = _out3995;
                resultingOwnership = _out3996;
                readIdents = _8850_recIdents;
              }
            } else if (_source323.is_SetBuilder) {
              DAST._IType _8851___mcc_h60 = _source323.dtor_element;
              {
                RAST._IType _8852_fromTpeGen;
                RAST._IType _out3997;
                _out3997 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8852_fromTpeGen = _out3997;
                RAST._IType _8853_toTpeGen;
                RAST._IType _out3998;
                _out3998 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8853_toTpeGen = _out3998;
                RAST._IExpr _8854_recursiveGen;
                DCOMPUTF16._IOwnership _8855_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8856_recIdents;
                RAST._IExpr _out3999;
                DCOMPUTF16._IOwnership _out4000;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4001;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out3999, out _out4000, out _out4001);
                _8854_recursiveGen = _out3999;
                _8855_recOwned = _out4000;
                _8856_recIdents = _out4001;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8854_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8852_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8853_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4002;
                DCOMPUTF16._IOwnership _out4003;
                DCOMPUTF16.COMP.FromOwnership(r, _8855_recOwned, expectedOwnership, out _out4002, out _out4003);
                r = _out4002;
                resultingOwnership = _out4003;
                readIdents = _8856_recIdents;
              }
            } else if (_source323.is_MapBuilder) {
              DAST._IType _8857___mcc_h62 = _source323.dtor_key;
              DAST._IType _8858___mcc_h63 = _source323.dtor_value;
              {
                RAST._IType _8859_fromTpeGen;
                RAST._IType _out4004;
                _out4004 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8859_fromTpeGen = _out4004;
                RAST._IType _8860_toTpeGen;
                RAST._IType _out4005;
                _out4005 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8860_toTpeGen = _out4005;
                RAST._IExpr _8861_recursiveGen;
                DCOMPUTF16._IOwnership _8862_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8863_recIdents;
                RAST._IExpr _out4006;
                DCOMPUTF16._IOwnership _out4007;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4008;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4006, out _out4007, out _out4008);
                _8861_recursiveGen = _out4006;
                _8862_recOwned = _out4007;
                _8863_recIdents = _out4008;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8861_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8859_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8860_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4009;
                DCOMPUTF16._IOwnership _out4010;
                DCOMPUTF16.COMP.FromOwnership(r, _8862_recOwned, expectedOwnership, out _out4009, out _out4010);
                r = _out4009;
                resultingOwnership = _out4010;
                readIdents = _8863_recIdents;
              }
            } else if (_source323.is_Arrow) {
              Dafny.ISequence<DAST._IType> _8864___mcc_h66 = _source323.dtor_args;
              DAST._IType _8865___mcc_h67 = _source323.dtor_result;
              {
                RAST._IType _8866_fromTpeGen;
                RAST._IType _out4011;
                _out4011 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8866_fromTpeGen = _out4011;
                RAST._IType _8867_toTpeGen;
                RAST._IType _out4012;
                _out4012 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8867_toTpeGen = _out4012;
                RAST._IExpr _8868_recursiveGen;
                DCOMPUTF16._IOwnership _8869_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8870_recIdents;
                RAST._IExpr _out4013;
                DCOMPUTF16._IOwnership _out4014;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4015;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4013, out _out4014, out _out4015);
                _8868_recursiveGen = _out4013;
                _8869_recOwned = _out4014;
                _8870_recIdents = _out4015;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8868_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8866_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8867_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4016;
                DCOMPUTF16._IOwnership _out4017;
                DCOMPUTF16.COMP.FromOwnership(r, _8869_recOwned, expectedOwnership, out _out4016, out _out4017);
                r = _out4016;
                resultingOwnership = _out4017;
                readIdents = _8870_recIdents;
              }
            } else if (_source323.is_Primitive) {
              DAST._IPrimitive _8871___mcc_h70 = _source323.dtor_Primitive_a0;
              {
                RAST._IType _8872_fromTpeGen;
                RAST._IType _out4018;
                _out4018 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8872_fromTpeGen = _out4018;
                RAST._IType _8873_toTpeGen;
                RAST._IType _out4019;
                _out4019 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8873_toTpeGen = _out4019;
                RAST._IExpr _8874_recursiveGen;
                DCOMPUTF16._IOwnership _8875_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8876_recIdents;
                RAST._IExpr _out4020;
                DCOMPUTF16._IOwnership _out4021;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4022;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4020, out _out4021, out _out4022);
                _8874_recursiveGen = _out4020;
                _8875_recOwned = _out4021;
                _8876_recIdents = _out4022;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8874_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8872_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8873_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4023;
                DCOMPUTF16._IOwnership _out4024;
                DCOMPUTF16.COMP.FromOwnership(r, _8875_recOwned, expectedOwnership, out _out4023, out _out4024);
                r = _out4023;
                resultingOwnership = _out4024;
                readIdents = _8876_recIdents;
              }
            } else if (_source323.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _8877___mcc_h72 = _source323.dtor_Passthrough_a0;
              {
                RAST._IType _8878_fromTpeGen;
                RAST._IType _out4025;
                _out4025 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8878_fromTpeGen = _out4025;
                RAST._IType _8879_toTpeGen;
                RAST._IType _out4026;
                _out4026 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8879_toTpeGen = _out4026;
                RAST._IExpr _8880_recursiveGen;
                DCOMPUTF16._IOwnership _8881_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8882_recIdents;
                RAST._IExpr _out4027;
                DCOMPUTF16._IOwnership _out4028;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4029;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4027, out _out4028, out _out4029);
                _8880_recursiveGen = _out4027;
                _8881_recOwned = _out4028;
                _8882_recIdents = _out4029;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8880_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8878_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8879_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4030;
                DCOMPUTF16._IOwnership _out4031;
                DCOMPUTF16.COMP.FromOwnership(r, _8881_recOwned, expectedOwnership, out _out4030, out _out4031);
                r = _out4030;
                resultingOwnership = _out4031;
                readIdents = _8882_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _8883___mcc_h74 = _source323.dtor_TypeArg_a0;
              {
                RAST._IType _8884_fromTpeGen;
                RAST._IType _out4032;
                _out4032 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8884_fromTpeGen = _out4032;
                RAST._IType _8885_toTpeGen;
                RAST._IType _out4033;
                _out4033 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8885_toTpeGen = _out4033;
                RAST._IExpr _8886_recursiveGen;
                DCOMPUTF16._IOwnership _8887_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8888_recIdents;
                RAST._IExpr _out4034;
                DCOMPUTF16._IOwnership _out4035;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4036;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4034, out _out4035, out _out4036);
                _8886_recursiveGen = _out4034;
                _8887_recOwned = _out4035;
                _8888_recIdents = _out4036;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8886_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8884_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8885_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4037;
                DCOMPUTF16._IOwnership _out4038;
                DCOMPUTF16.COMP.FromOwnership(r, _8887_recOwned, expectedOwnership, out _out4037, out _out4038);
                r = _out4037;
                resultingOwnership = _out4038;
                readIdents = _8888_recIdents;
              }
            }
          } else if (_source322.is_Datatype) {
            DAST._IDatatypeType _8889___mcc_h76 = _source322.dtor_datatypeType;
            DAST._IType _source328 = _8728___mcc_h1;
            if (_source328.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8890___mcc_h80 = _source328.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _8891___mcc_h81 = _source328.dtor_typeArgs;
              DAST._IResolvedType _8892___mcc_h82 = _source328.dtor_resolved;
              DAST._IResolvedType _source329 = _8892___mcc_h82;
              if (_source329.is_AllocatedDatatype) {
                DAST._IDatatypeType _8893___mcc_h86 = _source329.dtor_datatypeType;
                {
                  RAST._IType _8894_fromTpeGen;
                  RAST._IType _out4039;
                  _out4039 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _8894_fromTpeGen = _out4039;
                  RAST._IType _8895_toTpeGen;
                  RAST._IType _out4040;
                  _out4040 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _8895_toTpeGen = _out4040;
                  RAST._IExpr _8896_recursiveGen;
                  DCOMPUTF16._IOwnership _8897_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8898_recIdents;
                  RAST._IExpr _out4041;
                  DCOMPUTF16._IOwnership _out4042;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4043;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4041, out _out4042, out _out4043);
                  _8896_recursiveGen = _out4041;
                  _8897_recOwned = _out4042;
                  _8898_recIdents = _out4043;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8896_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8894_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8895_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4044;
                  DCOMPUTF16._IOwnership _out4045;
                  DCOMPUTF16.COMP.FromOwnership(r, _8897_recOwned, expectedOwnership, out _out4044, out _out4045);
                  r = _out4044;
                  resultingOwnership = _out4045;
                  readIdents = _8898_recIdents;
                }
              } else if (_source329.is_Datatype) {
                DAST._IDatatypeType _8899___mcc_h88 = _source329.dtor_datatypeType;
                {
                  RAST._IType _8900_fromTpeGen;
                  RAST._IType _out4046;
                  _out4046 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _8900_fromTpeGen = _out4046;
                  RAST._IType _8901_toTpeGen;
                  RAST._IType _out4047;
                  _out4047 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _8901_toTpeGen = _out4047;
                  RAST._IExpr _8902_recursiveGen;
                  DCOMPUTF16._IOwnership _8903_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8904_recIdents;
                  RAST._IExpr _out4048;
                  DCOMPUTF16._IOwnership _out4049;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4050;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4048, out _out4049, out _out4050);
                  _8902_recursiveGen = _out4048;
                  _8903_recOwned = _out4049;
                  _8904_recIdents = _out4050;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8902_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8900_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8901_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4051;
                  DCOMPUTF16._IOwnership _out4052;
                  DCOMPUTF16.COMP.FromOwnership(r, _8903_recOwned, expectedOwnership, out _out4051, out _out4052);
                  r = _out4051;
                  resultingOwnership = _out4052;
                  readIdents = _8904_recIdents;
                }
              } else if (_source329.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8905___mcc_h90 = _source329.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _8906___mcc_h91 = _source329.dtor_attributes;
                {
                  RAST._IType _8907_fromTpeGen;
                  RAST._IType _out4053;
                  _out4053 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _8907_fromTpeGen = _out4053;
                  RAST._IType _8908_toTpeGen;
                  RAST._IType _out4054;
                  _out4054 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _8908_toTpeGen = _out4054;
                  RAST._IExpr _8909_recursiveGen;
                  DCOMPUTF16._IOwnership _8910_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8911_recIdents;
                  RAST._IExpr _out4055;
                  DCOMPUTF16._IOwnership _out4056;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4057;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4055, out _out4056, out _out4057);
                  _8909_recursiveGen = _out4055;
                  _8910_recOwned = _out4056;
                  _8911_recIdents = _out4057;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8909_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8907_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8908_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4058;
                  DCOMPUTF16._IOwnership _out4059;
                  DCOMPUTF16.COMP.FromOwnership(r, _8910_recOwned, expectedOwnership, out _out4058, out _out4059);
                  r = _out4058;
                  resultingOwnership = _out4059;
                  readIdents = _8911_recIdents;
                }
              } else {
                DAST._IType _8912___mcc_h94 = _source329.dtor_baseType;
                DAST._INewtypeRange _8913___mcc_h95 = _source329.dtor_range;
                bool _8914___mcc_h96 = _source329.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _8915___mcc_h97 = _source329.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _8916_attributes = _8915___mcc_h97;
                bool _8917_erase = _8914___mcc_h96;
                DAST._INewtypeRange _8918_range = _8913___mcc_h95;
                DAST._IType _8919_b = _8912___mcc_h94;
                {
                  Std.Wrappers._IOption<RAST._IType> _8920_nativeToType;
                  _8920_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_8919_b, _8918_range);
                  if (object.Equals(_8722_fromTpe, _8919_b)) {
                    RAST._IExpr _8921_recursiveGen;
                    DCOMPUTF16._IOwnership _8922_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8923_recIdents;
                    RAST._IExpr _out4060;
                    DCOMPUTF16._IOwnership _out4061;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4062;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4060, out _out4061, out _out4062);
                    _8921_recursiveGen = _out4060;
                    _8922_recOwned = _out4061;
                    _8923_recIdents = _out4062;
                    readIdents = _8923_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source330 = _8920_nativeToType;
                    if (_source330.is_None) {
                      if (_8917_erase) {
                        r = _8921_recursiveGen;
                      } else {
                        RAST._IType _8924_rhsType;
                        RAST._IType _out4063;
                        _out4063 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _8924_rhsType = _out4063;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_8924_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_8921_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4064;
                      DCOMPUTF16._IOwnership _out4065;
                      DCOMPUTF16.COMP.FromOwnership(r, _8922_recOwned, expectedOwnership, out _out4064, out _out4065);
                      r = _out4064;
                      resultingOwnership = _out4065;
                    } else {
                      RAST._IType _8925___mcc_h1405 = _source330.dtor_value;
                      RAST._IType _8926_v = _8925___mcc_h1405;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_8921_recursiveGen, RAST.Expr.create_ExprFromType(_8926_v)));
                      RAST._IExpr _out4066;
                      DCOMPUTF16._IOwnership _out4067;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4066, out _out4067);
                      r = _out4066;
                      resultingOwnership = _out4067;
                    }
                  } else {
                    if ((_8920_nativeToType).is_Some) {
                      DAST._IType _source331 = _8722_fromTpe;
                      if (_source331.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8927___mcc_h1406 = _source331.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _8928___mcc_h1407 = _source331.dtor_typeArgs;
                        DAST._IResolvedType _8929___mcc_h1408 = _source331.dtor_resolved;
                        DAST._IResolvedType _source332 = _8929___mcc_h1408;
                        if (_source332.is_AllocatedDatatype) {
                          DAST._IDatatypeType _8930___mcc_h1412 = _source332.dtor_datatypeType;
                        } else if (_source332.is_Datatype) {
                          DAST._IDatatypeType _8931___mcc_h1414 = _source332.dtor_datatypeType;
                        } else if (_source332.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _8932___mcc_h1416 = _source332.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _8933___mcc_h1417 = _source332.dtor_attributes;
                        } else {
                          DAST._IType _8934___mcc_h1420 = _source332.dtor_baseType;
                          DAST._INewtypeRange _8935___mcc_h1421 = _source332.dtor_range;
                          bool _8936___mcc_h1422 = _source332.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _8937___mcc_h1423 = _source332.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _8938_attributes0 = _8937___mcc_h1423;
                          bool _8939_erase0 = _8936___mcc_h1422;
                          DAST._INewtypeRange _8940_range0 = _8935___mcc_h1421;
                          DAST._IType _8941_b0 = _8934___mcc_h1420;
                          {
                            Std.Wrappers._IOption<RAST._IType> _8942_nativeFromType;
                            _8942_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_8941_b0, _8940_range0);
                            if ((_8942_nativeFromType).is_Some) {
                              RAST._IExpr _8943_recursiveGen;
                              DCOMPUTF16._IOwnership _8944_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8945_recIdents;
                              RAST._IExpr _out4068;
                              DCOMPUTF16._IOwnership _out4069;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4070;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4068, out _out4069, out _out4070);
                              _8943_recursiveGen = _out4068;
                              _8944_recOwned = _out4069;
                              _8945_recIdents = _out4070;
                              RAST._IExpr _out4071;
                              DCOMPUTF16._IOwnership _out4072;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_8943_recursiveGen, (_8920_nativeToType).dtor_value), _8944_recOwned, expectedOwnership, out _out4071, out _out4072);
                              r = _out4071;
                              resultingOwnership = _out4072;
                              readIdents = _8945_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source331.is_Nullable) {
                        DAST._IType _8946___mcc_h1428 = _source331.dtor_Nullable_a0;
                      } else if (_source331.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _8947___mcc_h1430 = _source331.dtor_Tuple_a0;
                      } else if (_source331.is_Array) {
                        DAST._IType _8948___mcc_h1432 = _source331.dtor_element;
                        BigInteger _8949___mcc_h1433 = _source331.dtor_dims;
                      } else if (_source331.is_Seq) {
                        DAST._IType _8950___mcc_h1436 = _source331.dtor_element;
                      } else if (_source331.is_Set) {
                        DAST._IType _8951___mcc_h1438 = _source331.dtor_element;
                      } else if (_source331.is_Multiset) {
                        DAST._IType _8952___mcc_h1440 = _source331.dtor_element;
                      } else if (_source331.is_Map) {
                        DAST._IType _8953___mcc_h1442 = _source331.dtor_key;
                        DAST._IType _8954___mcc_h1443 = _source331.dtor_value;
                      } else if (_source331.is_SetBuilder) {
                        DAST._IType _8955___mcc_h1446 = _source331.dtor_element;
                      } else if (_source331.is_MapBuilder) {
                        DAST._IType _8956___mcc_h1448 = _source331.dtor_key;
                        DAST._IType _8957___mcc_h1449 = _source331.dtor_value;
                      } else if (_source331.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _8958___mcc_h1452 = _source331.dtor_args;
                        DAST._IType _8959___mcc_h1453 = _source331.dtor_result;
                      } else if (_source331.is_Primitive) {
                        DAST._IPrimitive _8960___mcc_h1456 = _source331.dtor_Primitive_a0;
                      } else if (_source331.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _8961___mcc_h1458 = _source331.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _8962___mcc_h1460 = _source331.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _8963_recursiveGen;
                        DCOMPUTF16._IOwnership _8964_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8965_recIdents;
                        RAST._IExpr _out4073;
                        DCOMPUTF16._IOwnership _out4074;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4075;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4073, out _out4074, out _out4075);
                        _8963_recursiveGen = _out4073;
                        _8964_recOwned = _out4074;
                        _8965_recIdents = _out4075;
                        RAST._IExpr _out4076;
                        DCOMPUTF16._IOwnership _out4077;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_8963_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_8920_nativeToType).dtor_value), _8964_recOwned, expectedOwnership, out _out4076, out _out4077);
                        r = _out4076;
                        resultingOwnership = _out4077;
                        readIdents = _8965_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4078;
                    DCOMPUTF16._IOwnership _out4079;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4080;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _8919_b), _8919_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4078, out _out4079, out _out4080);
                    r = _out4078;
                    resultingOwnership = _out4079;
                    readIdents = _out4080;
                  }
                }
              }
            } else if (_source328.is_Nullable) {
              DAST._IType _8966___mcc_h102 = _source328.dtor_Nullable_a0;
              {
                RAST._IExpr _8967_recursiveGen;
                DCOMPUTF16._IOwnership _8968_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8969_recIdents;
                RAST._IExpr _out4081;
                DCOMPUTF16._IOwnership _out4082;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4083;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4081, out _out4082, out _out4083);
                _8967_recursiveGen = _out4081;
                _8968_recOwned = _out4082;
                _8969_recIdents = _out4083;
                r = _8967_recursiveGen;
                if (object.Equals(_8968_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4084;
                DCOMPUTF16._IOwnership _out4085;
                DCOMPUTF16.COMP.FromOwnership(r, _8968_recOwned, expectedOwnership, out _out4084, out _out4085);
                r = _out4084;
                resultingOwnership = _out4085;
                readIdents = _8969_recIdents;
              }
            } else if (_source328.is_Tuple) {
              Dafny.ISequence<DAST._IType> _8970___mcc_h104 = _source328.dtor_Tuple_a0;
              {
                RAST._IType _8971_fromTpeGen;
                RAST._IType _out4086;
                _out4086 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8971_fromTpeGen = _out4086;
                RAST._IType _8972_toTpeGen;
                RAST._IType _out4087;
                _out4087 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8972_toTpeGen = _out4087;
                RAST._IExpr _8973_recursiveGen;
                DCOMPUTF16._IOwnership _8974_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8975_recIdents;
                RAST._IExpr _out4088;
                DCOMPUTF16._IOwnership _out4089;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4090;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4088, out _out4089, out _out4090);
                _8973_recursiveGen = _out4088;
                _8974_recOwned = _out4089;
                _8975_recIdents = _out4090;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8973_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8971_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8972_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4091;
                DCOMPUTF16._IOwnership _out4092;
                DCOMPUTF16.COMP.FromOwnership(r, _8974_recOwned, expectedOwnership, out _out4091, out _out4092);
                r = _out4091;
                resultingOwnership = _out4092;
                readIdents = _8975_recIdents;
              }
            } else if (_source328.is_Array) {
              DAST._IType _8976___mcc_h106 = _source328.dtor_element;
              BigInteger _8977___mcc_h107 = _source328.dtor_dims;
              {
                RAST._IType _8978_fromTpeGen;
                RAST._IType _out4093;
                _out4093 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8978_fromTpeGen = _out4093;
                RAST._IType _8979_toTpeGen;
                RAST._IType _out4094;
                _out4094 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8979_toTpeGen = _out4094;
                RAST._IExpr _8980_recursiveGen;
                DCOMPUTF16._IOwnership _8981_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8982_recIdents;
                RAST._IExpr _out4095;
                DCOMPUTF16._IOwnership _out4096;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4097;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4095, out _out4096, out _out4097);
                _8980_recursiveGen = _out4095;
                _8981_recOwned = _out4096;
                _8982_recIdents = _out4097;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8980_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8978_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8979_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4098;
                DCOMPUTF16._IOwnership _out4099;
                DCOMPUTF16.COMP.FromOwnership(r, _8981_recOwned, expectedOwnership, out _out4098, out _out4099);
                r = _out4098;
                resultingOwnership = _out4099;
                readIdents = _8982_recIdents;
              }
            } else if (_source328.is_Seq) {
              DAST._IType _8983___mcc_h110 = _source328.dtor_element;
              {
                RAST._IType _8984_fromTpeGen;
                RAST._IType _out4100;
                _out4100 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8984_fromTpeGen = _out4100;
                RAST._IType _8985_toTpeGen;
                RAST._IType _out4101;
                _out4101 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8985_toTpeGen = _out4101;
                RAST._IExpr _8986_recursiveGen;
                DCOMPUTF16._IOwnership _8987_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8988_recIdents;
                RAST._IExpr _out4102;
                DCOMPUTF16._IOwnership _out4103;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4104;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4102, out _out4103, out _out4104);
                _8986_recursiveGen = _out4102;
                _8987_recOwned = _out4103;
                _8988_recIdents = _out4104;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8986_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8984_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8985_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4105;
                DCOMPUTF16._IOwnership _out4106;
                DCOMPUTF16.COMP.FromOwnership(r, _8987_recOwned, expectedOwnership, out _out4105, out _out4106);
                r = _out4105;
                resultingOwnership = _out4106;
                readIdents = _8988_recIdents;
              }
            } else if (_source328.is_Set) {
              DAST._IType _8989___mcc_h112 = _source328.dtor_element;
              {
                RAST._IType _8990_fromTpeGen;
                RAST._IType _out4107;
                _out4107 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8990_fromTpeGen = _out4107;
                RAST._IType _8991_toTpeGen;
                RAST._IType _out4108;
                _out4108 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8991_toTpeGen = _out4108;
                RAST._IExpr _8992_recursiveGen;
                DCOMPUTF16._IOwnership _8993_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8994_recIdents;
                RAST._IExpr _out4109;
                DCOMPUTF16._IOwnership _out4110;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4111;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4109, out _out4110, out _out4111);
                _8992_recursiveGen = _out4109;
                _8993_recOwned = _out4110;
                _8994_recIdents = _out4111;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8992_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8990_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8991_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4112;
                DCOMPUTF16._IOwnership _out4113;
                DCOMPUTF16.COMP.FromOwnership(r, _8993_recOwned, expectedOwnership, out _out4112, out _out4113);
                r = _out4112;
                resultingOwnership = _out4113;
                readIdents = _8994_recIdents;
              }
            } else if (_source328.is_Multiset) {
              DAST._IType _8995___mcc_h114 = _source328.dtor_element;
              {
                RAST._IType _8996_fromTpeGen;
                RAST._IType _out4114;
                _out4114 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _8996_fromTpeGen = _out4114;
                RAST._IType _8997_toTpeGen;
                RAST._IType _out4115;
                _out4115 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _8997_toTpeGen = _out4115;
                RAST._IExpr _8998_recursiveGen;
                DCOMPUTF16._IOwnership _8999_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9000_recIdents;
                RAST._IExpr _out4116;
                DCOMPUTF16._IOwnership _out4117;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4118;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4116, out _out4117, out _out4118);
                _8998_recursiveGen = _out4116;
                _8999_recOwned = _out4117;
                _9000_recIdents = _out4118;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_8998_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_8996_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_8997_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4119;
                DCOMPUTF16._IOwnership _out4120;
                DCOMPUTF16.COMP.FromOwnership(r, _8999_recOwned, expectedOwnership, out _out4119, out _out4120);
                r = _out4119;
                resultingOwnership = _out4120;
                readIdents = _9000_recIdents;
              }
            } else if (_source328.is_Map) {
              DAST._IType _9001___mcc_h116 = _source328.dtor_key;
              DAST._IType _9002___mcc_h117 = _source328.dtor_value;
              {
                RAST._IType _9003_fromTpeGen;
                RAST._IType _out4121;
                _out4121 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9003_fromTpeGen = _out4121;
                RAST._IType _9004_toTpeGen;
                RAST._IType _out4122;
                _out4122 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9004_toTpeGen = _out4122;
                RAST._IExpr _9005_recursiveGen;
                DCOMPUTF16._IOwnership _9006_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9007_recIdents;
                RAST._IExpr _out4123;
                DCOMPUTF16._IOwnership _out4124;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4125;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4123, out _out4124, out _out4125);
                _9005_recursiveGen = _out4123;
                _9006_recOwned = _out4124;
                _9007_recIdents = _out4125;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9005_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9003_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9004_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4126;
                DCOMPUTF16._IOwnership _out4127;
                DCOMPUTF16.COMP.FromOwnership(r, _9006_recOwned, expectedOwnership, out _out4126, out _out4127);
                r = _out4126;
                resultingOwnership = _out4127;
                readIdents = _9007_recIdents;
              }
            } else if (_source328.is_SetBuilder) {
              DAST._IType _9008___mcc_h120 = _source328.dtor_element;
              {
                RAST._IType _9009_fromTpeGen;
                RAST._IType _out4128;
                _out4128 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9009_fromTpeGen = _out4128;
                RAST._IType _9010_toTpeGen;
                RAST._IType _out4129;
                _out4129 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9010_toTpeGen = _out4129;
                RAST._IExpr _9011_recursiveGen;
                DCOMPUTF16._IOwnership _9012_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9013_recIdents;
                RAST._IExpr _out4130;
                DCOMPUTF16._IOwnership _out4131;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4132;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4130, out _out4131, out _out4132);
                _9011_recursiveGen = _out4130;
                _9012_recOwned = _out4131;
                _9013_recIdents = _out4132;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9011_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9009_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9010_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4133;
                DCOMPUTF16._IOwnership _out4134;
                DCOMPUTF16.COMP.FromOwnership(r, _9012_recOwned, expectedOwnership, out _out4133, out _out4134);
                r = _out4133;
                resultingOwnership = _out4134;
                readIdents = _9013_recIdents;
              }
            } else if (_source328.is_MapBuilder) {
              DAST._IType _9014___mcc_h122 = _source328.dtor_key;
              DAST._IType _9015___mcc_h123 = _source328.dtor_value;
              {
                RAST._IType _9016_fromTpeGen;
                RAST._IType _out4135;
                _out4135 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9016_fromTpeGen = _out4135;
                RAST._IType _9017_toTpeGen;
                RAST._IType _out4136;
                _out4136 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9017_toTpeGen = _out4136;
                RAST._IExpr _9018_recursiveGen;
                DCOMPUTF16._IOwnership _9019_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9020_recIdents;
                RAST._IExpr _out4137;
                DCOMPUTF16._IOwnership _out4138;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4139;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4137, out _out4138, out _out4139);
                _9018_recursiveGen = _out4137;
                _9019_recOwned = _out4138;
                _9020_recIdents = _out4139;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9018_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9016_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9017_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4140;
                DCOMPUTF16._IOwnership _out4141;
                DCOMPUTF16.COMP.FromOwnership(r, _9019_recOwned, expectedOwnership, out _out4140, out _out4141);
                r = _out4140;
                resultingOwnership = _out4141;
                readIdents = _9020_recIdents;
              }
            } else if (_source328.is_Arrow) {
              Dafny.ISequence<DAST._IType> _9021___mcc_h126 = _source328.dtor_args;
              DAST._IType _9022___mcc_h127 = _source328.dtor_result;
              {
                RAST._IType _9023_fromTpeGen;
                RAST._IType _out4142;
                _out4142 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9023_fromTpeGen = _out4142;
                RAST._IType _9024_toTpeGen;
                RAST._IType _out4143;
                _out4143 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9024_toTpeGen = _out4143;
                RAST._IExpr _9025_recursiveGen;
                DCOMPUTF16._IOwnership _9026_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9027_recIdents;
                RAST._IExpr _out4144;
                DCOMPUTF16._IOwnership _out4145;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4146;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4144, out _out4145, out _out4146);
                _9025_recursiveGen = _out4144;
                _9026_recOwned = _out4145;
                _9027_recIdents = _out4146;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9025_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9023_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9024_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4147;
                DCOMPUTF16._IOwnership _out4148;
                DCOMPUTF16.COMP.FromOwnership(r, _9026_recOwned, expectedOwnership, out _out4147, out _out4148);
                r = _out4147;
                resultingOwnership = _out4148;
                readIdents = _9027_recIdents;
              }
            } else if (_source328.is_Primitive) {
              DAST._IPrimitive _9028___mcc_h130 = _source328.dtor_Primitive_a0;
              {
                RAST._IType _9029_fromTpeGen;
                RAST._IType _out4149;
                _out4149 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9029_fromTpeGen = _out4149;
                RAST._IType _9030_toTpeGen;
                RAST._IType _out4150;
                _out4150 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9030_toTpeGen = _out4150;
                RAST._IExpr _9031_recursiveGen;
                DCOMPUTF16._IOwnership _9032_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9033_recIdents;
                RAST._IExpr _out4151;
                DCOMPUTF16._IOwnership _out4152;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4153;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4151, out _out4152, out _out4153);
                _9031_recursiveGen = _out4151;
                _9032_recOwned = _out4152;
                _9033_recIdents = _out4153;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9031_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9029_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9030_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4154;
                DCOMPUTF16._IOwnership _out4155;
                DCOMPUTF16.COMP.FromOwnership(r, _9032_recOwned, expectedOwnership, out _out4154, out _out4155);
                r = _out4154;
                resultingOwnership = _out4155;
                readIdents = _9033_recIdents;
              }
            } else if (_source328.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _9034___mcc_h132 = _source328.dtor_Passthrough_a0;
              {
                RAST._IType _9035_fromTpeGen;
                RAST._IType _out4156;
                _out4156 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9035_fromTpeGen = _out4156;
                RAST._IType _9036_toTpeGen;
                RAST._IType _out4157;
                _out4157 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9036_toTpeGen = _out4157;
                RAST._IExpr _9037_recursiveGen;
                DCOMPUTF16._IOwnership _9038_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9039_recIdents;
                RAST._IExpr _out4158;
                DCOMPUTF16._IOwnership _out4159;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4160;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4158, out _out4159, out _out4160);
                _9037_recursiveGen = _out4158;
                _9038_recOwned = _out4159;
                _9039_recIdents = _out4160;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9037_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9035_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9036_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4161;
                DCOMPUTF16._IOwnership _out4162;
                DCOMPUTF16.COMP.FromOwnership(r, _9038_recOwned, expectedOwnership, out _out4161, out _out4162);
                r = _out4161;
                resultingOwnership = _out4162;
                readIdents = _9039_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9040___mcc_h134 = _source328.dtor_TypeArg_a0;
              {
                RAST._IType _9041_fromTpeGen;
                RAST._IType _out4163;
                _out4163 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9041_fromTpeGen = _out4163;
                RAST._IType _9042_toTpeGen;
                RAST._IType _out4164;
                _out4164 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9042_toTpeGen = _out4164;
                RAST._IExpr _9043_recursiveGen;
                DCOMPUTF16._IOwnership _9044_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9045_recIdents;
                RAST._IExpr _out4165;
                DCOMPUTF16._IOwnership _out4166;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4167;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4165, out _out4166, out _out4167);
                _9043_recursiveGen = _out4165;
                _9044_recOwned = _out4166;
                _9045_recIdents = _out4167;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9043_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9041_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9042_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4168;
                DCOMPUTF16._IOwnership _out4169;
                DCOMPUTF16.COMP.FromOwnership(r, _9044_recOwned, expectedOwnership, out _out4168, out _out4169);
                r = _out4168;
                resultingOwnership = _out4169;
                readIdents = _9045_recIdents;
              }
            }
          } else if (_source322.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9046___mcc_h136 = _source322.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _9047___mcc_h137 = _source322.dtor_attributes;
            DAST._IType _source333 = _8728___mcc_h1;
            if (_source333.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9048___mcc_h144 = _source333.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9049___mcc_h145 = _source333.dtor_typeArgs;
              DAST._IResolvedType _9050___mcc_h146 = _source333.dtor_resolved;
              DAST._IResolvedType _source334 = _9050___mcc_h146;
              if (_source334.is_AllocatedDatatype) {
                DAST._IDatatypeType _9051___mcc_h150 = _source334.dtor_datatypeType;
                {
                  RAST._IType _9052_fromTpeGen;
                  RAST._IType _out4170;
                  _out4170 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _9052_fromTpeGen = _out4170;
                  RAST._IType _9053_toTpeGen;
                  RAST._IType _out4171;
                  _out4171 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _9053_toTpeGen = _out4171;
                  RAST._IExpr _9054_recursiveGen;
                  DCOMPUTF16._IOwnership _9055_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9056_recIdents;
                  RAST._IExpr _out4172;
                  DCOMPUTF16._IOwnership _out4173;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4174;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4172, out _out4173, out _out4174);
                  _9054_recursiveGen = _out4172;
                  _9055_recOwned = _out4173;
                  _9056_recIdents = _out4174;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9054_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9052_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9053_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4175;
                  DCOMPUTF16._IOwnership _out4176;
                  DCOMPUTF16.COMP.FromOwnership(r, _9055_recOwned, expectedOwnership, out _out4175, out _out4176);
                  r = _out4175;
                  resultingOwnership = _out4176;
                  readIdents = _9056_recIdents;
                }
              } else if (_source334.is_Datatype) {
                DAST._IDatatypeType _9057___mcc_h152 = _source334.dtor_datatypeType;
                {
                  RAST._IType _9058_fromTpeGen;
                  RAST._IType _out4177;
                  _out4177 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _9058_fromTpeGen = _out4177;
                  RAST._IType _9059_toTpeGen;
                  RAST._IType _out4178;
                  _out4178 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _9059_toTpeGen = _out4178;
                  RAST._IExpr _9060_recursiveGen;
                  DCOMPUTF16._IOwnership _9061_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9062_recIdents;
                  RAST._IExpr _out4179;
                  DCOMPUTF16._IOwnership _out4180;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4181;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4179, out _out4180, out _out4181);
                  _9060_recursiveGen = _out4179;
                  _9061_recOwned = _out4180;
                  _9062_recIdents = _out4181;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9060_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9058_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9059_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4182;
                  DCOMPUTF16._IOwnership _out4183;
                  DCOMPUTF16.COMP.FromOwnership(r, _9061_recOwned, expectedOwnership, out _out4182, out _out4183);
                  r = _out4182;
                  resultingOwnership = _out4183;
                  readIdents = _9062_recIdents;
                }
              } else if (_source334.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9063___mcc_h154 = _source334.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9064___mcc_h155 = _source334.dtor_attributes;
                {
                  RAST._IType _9065_fromTpeGen;
                  RAST._IType _out4184;
                  _out4184 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _9065_fromTpeGen = _out4184;
                  RAST._IType _9066_toTpeGen;
                  RAST._IType _out4185;
                  _out4185 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _9066_toTpeGen = _out4185;
                  RAST._IExpr _9067_recursiveGen;
                  DCOMPUTF16._IOwnership _9068_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9069_recIdents;
                  RAST._IExpr _out4186;
                  DCOMPUTF16._IOwnership _out4187;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4188;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4186, out _out4187, out _out4188);
                  _9067_recursiveGen = _out4186;
                  _9068_recOwned = _out4187;
                  _9069_recIdents = _out4188;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9067_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9065_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9066_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out4189;
                  DCOMPUTF16._IOwnership _out4190;
                  DCOMPUTF16.COMP.FromOwnership(r, _9068_recOwned, expectedOwnership, out _out4189, out _out4190);
                  r = _out4189;
                  resultingOwnership = _out4190;
                  readIdents = _9069_recIdents;
                }
              } else {
                DAST._IType _9070___mcc_h158 = _source334.dtor_baseType;
                DAST._INewtypeRange _9071___mcc_h159 = _source334.dtor_range;
                bool _9072___mcc_h160 = _source334.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9073___mcc_h161 = _source334.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9074_attributes = _9073___mcc_h161;
                bool _9075_erase = _9072___mcc_h160;
                DAST._INewtypeRange _9076_range = _9071___mcc_h159;
                DAST._IType _9077_b = _9070___mcc_h158;
                {
                  Std.Wrappers._IOption<RAST._IType> _9078_nativeToType;
                  _9078_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9077_b, _9076_range);
                  if (object.Equals(_8722_fromTpe, _9077_b)) {
                    RAST._IExpr _9079_recursiveGen;
                    DCOMPUTF16._IOwnership _9080_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9081_recIdents;
                    RAST._IExpr _out4191;
                    DCOMPUTF16._IOwnership _out4192;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4193;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4191, out _out4192, out _out4193);
                    _9079_recursiveGen = _out4191;
                    _9080_recOwned = _out4192;
                    _9081_recIdents = _out4193;
                    readIdents = _9081_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source335 = _9078_nativeToType;
                    if (_source335.is_None) {
                      if (_9075_erase) {
                        r = _9079_recursiveGen;
                      } else {
                        RAST._IType _9082_rhsType;
                        RAST._IType _out4194;
                        _out4194 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _9082_rhsType = _out4194;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9082_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9079_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4195;
                      DCOMPUTF16._IOwnership _out4196;
                      DCOMPUTF16.COMP.FromOwnership(r, _9080_recOwned, expectedOwnership, out _out4195, out _out4196);
                      r = _out4195;
                      resultingOwnership = _out4196;
                    } else {
                      RAST._IType _9083___mcc_h1462 = _source335.dtor_value;
                      RAST._IType _9084_v = _9083___mcc_h1462;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9079_recursiveGen, RAST.Expr.create_ExprFromType(_9084_v)));
                      RAST._IExpr _out4197;
                      DCOMPUTF16._IOwnership _out4198;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4197, out _out4198);
                      r = _out4197;
                      resultingOwnership = _out4198;
                    }
                  } else {
                    if ((_9078_nativeToType).is_Some) {
                      DAST._IType _source336 = _8722_fromTpe;
                      if (_source336.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9085___mcc_h1463 = _source336.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9086___mcc_h1464 = _source336.dtor_typeArgs;
                        DAST._IResolvedType _9087___mcc_h1465 = _source336.dtor_resolved;
                        DAST._IResolvedType _source337 = _9087___mcc_h1465;
                        if (_source337.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9088___mcc_h1469 = _source337.dtor_datatypeType;
                        } else if (_source337.is_Datatype) {
                          DAST._IDatatypeType _9089___mcc_h1471 = _source337.dtor_datatypeType;
                        } else if (_source337.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9090___mcc_h1473 = _source337.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9091___mcc_h1474 = _source337.dtor_attributes;
                        } else {
                          DAST._IType _9092___mcc_h1477 = _source337.dtor_baseType;
                          DAST._INewtypeRange _9093___mcc_h1478 = _source337.dtor_range;
                          bool _9094___mcc_h1479 = _source337.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9095___mcc_h1480 = _source337.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9096_attributes0 = _9095___mcc_h1480;
                          bool _9097_erase0 = _9094___mcc_h1479;
                          DAST._INewtypeRange _9098_range0 = _9093___mcc_h1478;
                          DAST._IType _9099_b0 = _9092___mcc_h1477;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9100_nativeFromType;
                            _9100_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9099_b0, _9098_range0);
                            if ((_9100_nativeFromType).is_Some) {
                              RAST._IExpr _9101_recursiveGen;
                              DCOMPUTF16._IOwnership _9102_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9103_recIdents;
                              RAST._IExpr _out4199;
                              DCOMPUTF16._IOwnership _out4200;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4201;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4199, out _out4200, out _out4201);
                              _9101_recursiveGen = _out4199;
                              _9102_recOwned = _out4200;
                              _9103_recIdents = _out4201;
                              RAST._IExpr _out4202;
                              DCOMPUTF16._IOwnership _out4203;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9101_recursiveGen, (_9078_nativeToType).dtor_value), _9102_recOwned, expectedOwnership, out _out4202, out _out4203);
                              r = _out4202;
                              resultingOwnership = _out4203;
                              readIdents = _9103_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source336.is_Nullable) {
                        DAST._IType _9104___mcc_h1485 = _source336.dtor_Nullable_a0;
                      } else if (_source336.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9105___mcc_h1487 = _source336.dtor_Tuple_a0;
                      } else if (_source336.is_Array) {
                        DAST._IType _9106___mcc_h1489 = _source336.dtor_element;
                        BigInteger _9107___mcc_h1490 = _source336.dtor_dims;
                      } else if (_source336.is_Seq) {
                        DAST._IType _9108___mcc_h1493 = _source336.dtor_element;
                      } else if (_source336.is_Set) {
                        DAST._IType _9109___mcc_h1495 = _source336.dtor_element;
                      } else if (_source336.is_Multiset) {
                        DAST._IType _9110___mcc_h1497 = _source336.dtor_element;
                      } else if (_source336.is_Map) {
                        DAST._IType _9111___mcc_h1499 = _source336.dtor_key;
                        DAST._IType _9112___mcc_h1500 = _source336.dtor_value;
                      } else if (_source336.is_SetBuilder) {
                        DAST._IType _9113___mcc_h1503 = _source336.dtor_element;
                      } else if (_source336.is_MapBuilder) {
                        DAST._IType _9114___mcc_h1505 = _source336.dtor_key;
                        DAST._IType _9115___mcc_h1506 = _source336.dtor_value;
                      } else if (_source336.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _9116___mcc_h1509 = _source336.dtor_args;
                        DAST._IType _9117___mcc_h1510 = _source336.dtor_result;
                      } else if (_source336.is_Primitive) {
                        DAST._IPrimitive _9118___mcc_h1513 = _source336.dtor_Primitive_a0;
                      } else if (_source336.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _9119___mcc_h1515 = _source336.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _9120___mcc_h1517 = _source336.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9121_recursiveGen;
                        DCOMPUTF16._IOwnership _9122_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9123_recIdents;
                        RAST._IExpr _out4204;
                        DCOMPUTF16._IOwnership _out4205;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4206;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4204, out _out4205, out _out4206);
                        _9121_recursiveGen = _out4204;
                        _9122_recOwned = _out4205;
                        _9123_recIdents = _out4206;
                        RAST._IExpr _out4207;
                        DCOMPUTF16._IOwnership _out4208;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9121_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9078_nativeToType).dtor_value), _9122_recOwned, expectedOwnership, out _out4207, out _out4208);
                        r = _out4207;
                        resultingOwnership = _out4208;
                        readIdents = _9123_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4209;
                    DCOMPUTF16._IOwnership _out4210;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4211;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9077_b), _9077_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4209, out _out4210, out _out4211);
                    r = _out4209;
                    resultingOwnership = _out4210;
                    readIdents = _out4211;
                  }
                }
              }
            } else if (_source333.is_Nullable) {
              DAST._IType _9124___mcc_h166 = _source333.dtor_Nullable_a0;
              {
                RAST._IExpr _9125_recursiveGen;
                DCOMPUTF16._IOwnership _9126_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9127_recIdents;
                RAST._IExpr _out4212;
                DCOMPUTF16._IOwnership _out4213;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4214;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4212, out _out4213, out _out4214);
                _9125_recursiveGen = _out4212;
                _9126_recOwned = _out4213;
                _9127_recIdents = _out4214;
                r = _9125_recursiveGen;
                if (object.Equals(_9126_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4215;
                DCOMPUTF16._IOwnership _out4216;
                DCOMPUTF16.COMP.FromOwnership(r, _9126_recOwned, expectedOwnership, out _out4215, out _out4216);
                r = _out4215;
                resultingOwnership = _out4216;
                readIdents = _9127_recIdents;
              }
            } else if (_source333.is_Tuple) {
              Dafny.ISequence<DAST._IType> _9128___mcc_h168 = _source333.dtor_Tuple_a0;
              {
                RAST._IType _9129_fromTpeGen;
                RAST._IType _out4217;
                _out4217 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9129_fromTpeGen = _out4217;
                RAST._IType _9130_toTpeGen;
                RAST._IType _out4218;
                _out4218 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9130_toTpeGen = _out4218;
                RAST._IExpr _9131_recursiveGen;
                DCOMPUTF16._IOwnership _9132_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9133_recIdents;
                RAST._IExpr _out4219;
                DCOMPUTF16._IOwnership _out4220;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4221;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4219, out _out4220, out _out4221);
                _9131_recursiveGen = _out4219;
                _9132_recOwned = _out4220;
                _9133_recIdents = _out4221;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9131_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9129_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9130_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4222;
                DCOMPUTF16._IOwnership _out4223;
                DCOMPUTF16.COMP.FromOwnership(r, _9132_recOwned, expectedOwnership, out _out4222, out _out4223);
                r = _out4222;
                resultingOwnership = _out4223;
                readIdents = _9133_recIdents;
              }
            } else if (_source333.is_Array) {
              DAST._IType _9134___mcc_h170 = _source333.dtor_element;
              BigInteger _9135___mcc_h171 = _source333.dtor_dims;
              {
                RAST._IType _9136_fromTpeGen;
                RAST._IType _out4224;
                _out4224 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9136_fromTpeGen = _out4224;
                RAST._IType _9137_toTpeGen;
                RAST._IType _out4225;
                _out4225 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9137_toTpeGen = _out4225;
                RAST._IExpr _9138_recursiveGen;
                DCOMPUTF16._IOwnership _9139_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9140_recIdents;
                RAST._IExpr _out4226;
                DCOMPUTF16._IOwnership _out4227;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4228;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4226, out _out4227, out _out4228);
                _9138_recursiveGen = _out4226;
                _9139_recOwned = _out4227;
                _9140_recIdents = _out4228;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9138_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9136_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9137_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4229;
                DCOMPUTF16._IOwnership _out4230;
                DCOMPUTF16.COMP.FromOwnership(r, _9139_recOwned, expectedOwnership, out _out4229, out _out4230);
                r = _out4229;
                resultingOwnership = _out4230;
                readIdents = _9140_recIdents;
              }
            } else if (_source333.is_Seq) {
              DAST._IType _9141___mcc_h174 = _source333.dtor_element;
              {
                RAST._IType _9142_fromTpeGen;
                RAST._IType _out4231;
                _out4231 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9142_fromTpeGen = _out4231;
                RAST._IType _9143_toTpeGen;
                RAST._IType _out4232;
                _out4232 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9143_toTpeGen = _out4232;
                RAST._IExpr _9144_recursiveGen;
                DCOMPUTF16._IOwnership _9145_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9146_recIdents;
                RAST._IExpr _out4233;
                DCOMPUTF16._IOwnership _out4234;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4235;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4233, out _out4234, out _out4235);
                _9144_recursiveGen = _out4233;
                _9145_recOwned = _out4234;
                _9146_recIdents = _out4235;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9144_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9142_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9143_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4236;
                DCOMPUTF16._IOwnership _out4237;
                DCOMPUTF16.COMP.FromOwnership(r, _9145_recOwned, expectedOwnership, out _out4236, out _out4237);
                r = _out4236;
                resultingOwnership = _out4237;
                readIdents = _9146_recIdents;
              }
            } else if (_source333.is_Set) {
              DAST._IType _9147___mcc_h176 = _source333.dtor_element;
              {
                RAST._IType _9148_fromTpeGen;
                RAST._IType _out4238;
                _out4238 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9148_fromTpeGen = _out4238;
                RAST._IType _9149_toTpeGen;
                RAST._IType _out4239;
                _out4239 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9149_toTpeGen = _out4239;
                RAST._IExpr _9150_recursiveGen;
                DCOMPUTF16._IOwnership _9151_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9152_recIdents;
                RAST._IExpr _out4240;
                DCOMPUTF16._IOwnership _out4241;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4242;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4240, out _out4241, out _out4242);
                _9150_recursiveGen = _out4240;
                _9151_recOwned = _out4241;
                _9152_recIdents = _out4242;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9150_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9148_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9149_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4243;
                DCOMPUTF16._IOwnership _out4244;
                DCOMPUTF16.COMP.FromOwnership(r, _9151_recOwned, expectedOwnership, out _out4243, out _out4244);
                r = _out4243;
                resultingOwnership = _out4244;
                readIdents = _9152_recIdents;
              }
            } else if (_source333.is_Multiset) {
              DAST._IType _9153___mcc_h178 = _source333.dtor_element;
              {
                RAST._IType _9154_fromTpeGen;
                RAST._IType _out4245;
                _out4245 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9154_fromTpeGen = _out4245;
                RAST._IType _9155_toTpeGen;
                RAST._IType _out4246;
                _out4246 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9155_toTpeGen = _out4246;
                RAST._IExpr _9156_recursiveGen;
                DCOMPUTF16._IOwnership _9157_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9158_recIdents;
                RAST._IExpr _out4247;
                DCOMPUTF16._IOwnership _out4248;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4249;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4247, out _out4248, out _out4249);
                _9156_recursiveGen = _out4247;
                _9157_recOwned = _out4248;
                _9158_recIdents = _out4249;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9156_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9154_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9155_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4250;
                DCOMPUTF16._IOwnership _out4251;
                DCOMPUTF16.COMP.FromOwnership(r, _9157_recOwned, expectedOwnership, out _out4250, out _out4251);
                r = _out4250;
                resultingOwnership = _out4251;
                readIdents = _9158_recIdents;
              }
            } else if (_source333.is_Map) {
              DAST._IType _9159___mcc_h180 = _source333.dtor_key;
              DAST._IType _9160___mcc_h181 = _source333.dtor_value;
              {
                RAST._IType _9161_fromTpeGen;
                RAST._IType _out4252;
                _out4252 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9161_fromTpeGen = _out4252;
                RAST._IType _9162_toTpeGen;
                RAST._IType _out4253;
                _out4253 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9162_toTpeGen = _out4253;
                RAST._IExpr _9163_recursiveGen;
                DCOMPUTF16._IOwnership _9164_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9165_recIdents;
                RAST._IExpr _out4254;
                DCOMPUTF16._IOwnership _out4255;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4256;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4254, out _out4255, out _out4256);
                _9163_recursiveGen = _out4254;
                _9164_recOwned = _out4255;
                _9165_recIdents = _out4256;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9163_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9161_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9162_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4257;
                DCOMPUTF16._IOwnership _out4258;
                DCOMPUTF16.COMP.FromOwnership(r, _9164_recOwned, expectedOwnership, out _out4257, out _out4258);
                r = _out4257;
                resultingOwnership = _out4258;
                readIdents = _9165_recIdents;
              }
            } else if (_source333.is_SetBuilder) {
              DAST._IType _9166___mcc_h184 = _source333.dtor_element;
              {
                RAST._IType _9167_fromTpeGen;
                RAST._IType _out4259;
                _out4259 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9167_fromTpeGen = _out4259;
                RAST._IType _9168_toTpeGen;
                RAST._IType _out4260;
                _out4260 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9168_toTpeGen = _out4260;
                RAST._IExpr _9169_recursiveGen;
                DCOMPUTF16._IOwnership _9170_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9171_recIdents;
                RAST._IExpr _out4261;
                DCOMPUTF16._IOwnership _out4262;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4263;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4261, out _out4262, out _out4263);
                _9169_recursiveGen = _out4261;
                _9170_recOwned = _out4262;
                _9171_recIdents = _out4263;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9169_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9167_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9168_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4264;
                DCOMPUTF16._IOwnership _out4265;
                DCOMPUTF16.COMP.FromOwnership(r, _9170_recOwned, expectedOwnership, out _out4264, out _out4265);
                r = _out4264;
                resultingOwnership = _out4265;
                readIdents = _9171_recIdents;
              }
            } else if (_source333.is_MapBuilder) {
              DAST._IType _9172___mcc_h186 = _source333.dtor_key;
              DAST._IType _9173___mcc_h187 = _source333.dtor_value;
              {
                RAST._IType _9174_fromTpeGen;
                RAST._IType _out4266;
                _out4266 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9174_fromTpeGen = _out4266;
                RAST._IType _9175_toTpeGen;
                RAST._IType _out4267;
                _out4267 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9175_toTpeGen = _out4267;
                RAST._IExpr _9176_recursiveGen;
                DCOMPUTF16._IOwnership _9177_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9178_recIdents;
                RAST._IExpr _out4268;
                DCOMPUTF16._IOwnership _out4269;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4270;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4268, out _out4269, out _out4270);
                _9176_recursiveGen = _out4268;
                _9177_recOwned = _out4269;
                _9178_recIdents = _out4270;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9176_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9174_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9175_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4271;
                DCOMPUTF16._IOwnership _out4272;
                DCOMPUTF16.COMP.FromOwnership(r, _9177_recOwned, expectedOwnership, out _out4271, out _out4272);
                r = _out4271;
                resultingOwnership = _out4272;
                readIdents = _9178_recIdents;
              }
            } else if (_source333.is_Arrow) {
              Dafny.ISequence<DAST._IType> _9179___mcc_h190 = _source333.dtor_args;
              DAST._IType _9180___mcc_h191 = _source333.dtor_result;
              {
                RAST._IType _9181_fromTpeGen;
                RAST._IType _out4273;
                _out4273 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9181_fromTpeGen = _out4273;
                RAST._IType _9182_toTpeGen;
                RAST._IType _out4274;
                _out4274 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9182_toTpeGen = _out4274;
                RAST._IExpr _9183_recursiveGen;
                DCOMPUTF16._IOwnership _9184_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9185_recIdents;
                RAST._IExpr _out4275;
                DCOMPUTF16._IOwnership _out4276;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4277;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4275, out _out4276, out _out4277);
                _9183_recursiveGen = _out4275;
                _9184_recOwned = _out4276;
                _9185_recIdents = _out4277;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9183_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9181_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9182_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4278;
                DCOMPUTF16._IOwnership _out4279;
                DCOMPUTF16.COMP.FromOwnership(r, _9184_recOwned, expectedOwnership, out _out4278, out _out4279);
                r = _out4278;
                resultingOwnership = _out4279;
                readIdents = _9185_recIdents;
              }
            } else if (_source333.is_Primitive) {
              DAST._IPrimitive _9186___mcc_h194 = _source333.dtor_Primitive_a0;
              {
                RAST._IType _9187_fromTpeGen;
                RAST._IType _out4280;
                _out4280 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9187_fromTpeGen = _out4280;
                RAST._IType _9188_toTpeGen;
                RAST._IType _out4281;
                _out4281 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9188_toTpeGen = _out4281;
                RAST._IExpr _9189_recursiveGen;
                DCOMPUTF16._IOwnership _9190_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9191_recIdents;
                RAST._IExpr _out4282;
                DCOMPUTF16._IOwnership _out4283;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4284;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4282, out _out4283, out _out4284);
                _9189_recursiveGen = _out4282;
                _9190_recOwned = _out4283;
                _9191_recIdents = _out4284;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9189_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9187_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9188_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4285;
                DCOMPUTF16._IOwnership _out4286;
                DCOMPUTF16.COMP.FromOwnership(r, _9190_recOwned, expectedOwnership, out _out4285, out _out4286);
                r = _out4285;
                resultingOwnership = _out4286;
                readIdents = _9191_recIdents;
              }
            } else if (_source333.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _9192___mcc_h196 = _source333.dtor_Passthrough_a0;
              {
                RAST._IType _9193_fromTpeGen;
                RAST._IType _out4287;
                _out4287 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9193_fromTpeGen = _out4287;
                RAST._IType _9194_toTpeGen;
                RAST._IType _out4288;
                _out4288 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9194_toTpeGen = _out4288;
                RAST._IExpr _9195_recursiveGen;
                DCOMPUTF16._IOwnership _9196_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9197_recIdents;
                RAST._IExpr _out4289;
                DCOMPUTF16._IOwnership _out4290;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4291;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4289, out _out4290, out _out4291);
                _9195_recursiveGen = _out4289;
                _9196_recOwned = _out4290;
                _9197_recIdents = _out4291;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9195_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9193_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9194_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4292;
                DCOMPUTF16._IOwnership _out4293;
                DCOMPUTF16.COMP.FromOwnership(r, _9196_recOwned, expectedOwnership, out _out4292, out _out4293);
                r = _out4292;
                resultingOwnership = _out4293;
                readIdents = _9197_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9198___mcc_h198 = _source333.dtor_TypeArg_a0;
              {
                RAST._IType _9199_fromTpeGen;
                RAST._IType _out4294;
                _out4294 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9199_fromTpeGen = _out4294;
                RAST._IType _9200_toTpeGen;
                RAST._IType _out4295;
                _out4295 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9200_toTpeGen = _out4295;
                RAST._IExpr _9201_recursiveGen;
                DCOMPUTF16._IOwnership _9202_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9203_recIdents;
                RAST._IExpr _out4296;
                DCOMPUTF16._IOwnership _out4297;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4298;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4296, out _out4297, out _out4298);
                _9201_recursiveGen = _out4296;
                _9202_recOwned = _out4297;
                _9203_recIdents = _out4298;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9201_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9199_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9200_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4299;
                DCOMPUTF16._IOwnership _out4300;
                DCOMPUTF16.COMP.FromOwnership(r, _9202_recOwned, expectedOwnership, out _out4299, out _out4300);
                r = _out4299;
                resultingOwnership = _out4300;
                readIdents = _9203_recIdents;
              }
            }
          } else {
            DAST._IType _9204___mcc_h200 = _source322.dtor_baseType;
            DAST._INewtypeRange _9205___mcc_h201 = _source322.dtor_range;
            bool _9206___mcc_h202 = _source322.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _9207___mcc_h203 = _source322.dtor_attributes;
            DAST._IType _source338 = _8728___mcc_h1;
            if (_source338.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9208___mcc_h216 = _source338.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _9209___mcc_h217 = _source338.dtor_typeArgs;
              DAST._IResolvedType _9210___mcc_h218 = _source338.dtor_resolved;
              DAST._IResolvedType _source339 = _9210___mcc_h218;
              if (_source339.is_AllocatedDatatype) {
                DAST._IDatatypeType _9211___mcc_h225 = _source339.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _9212_attributes = _9207___mcc_h203;
                bool _9213_erase = _9206___mcc_h202;
                DAST._INewtypeRange _9214_range = _9205___mcc_h201;
                DAST._IType _9215_b = _9204___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _9216_nativeFromType;
                  _9216_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9215_b, _9214_range);
                  if (object.Equals(_9215_b, _8723_toTpe)) {
                    RAST._IExpr _9217_recursiveGen;
                    DCOMPUTF16._IOwnership _9218_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9219_recIdents;
                    RAST._IExpr _out4301;
                    DCOMPUTF16._IOwnership _out4302;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4303;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4301, out _out4302, out _out4303);
                    _9217_recursiveGen = _out4301;
                    _9218_recOwned = _out4302;
                    _9219_recIdents = _out4303;
                    readIdents = _9219_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source340 = _9216_nativeFromType;
                    if (_source340.is_None) {
                      if (_9213_erase) {
                        r = _9217_recursiveGen;
                      } else {
                        r = (_9217_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4304;
                      DCOMPUTF16._IOwnership _out4305;
                      DCOMPUTF16.COMP.FromOwnership(r, _9218_recOwned, expectedOwnership, out _out4304, out _out4305);
                      r = _out4304;
                      resultingOwnership = _out4305;
                    } else {
                      RAST._IType _9220___mcc_h1519 = _source340.dtor_value;
                      RAST._IType _9221_v = _9220___mcc_h1519;
                      RAST._IType _9222_toTpeRust;
                      RAST._IType _out4306;
                      _out4306 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                      _9222_toTpeRust = _out4306;
                      r = (((_9217_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9222_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4307;
                      DCOMPUTF16._IOwnership _out4308;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4307, out _out4308);
                      r = _out4307;
                      resultingOwnership = _out4308;
                    }
                  } else {
                    if ((_9216_nativeFromType).is_Some) {
                      if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9223_recursiveGen;
                        DCOMPUTF16._IOwnership _9224_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9225_recIdents;
                        RAST._IExpr _out4309;
                        DCOMPUTF16._IOwnership _out4310;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4311;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4309, out _out4310, out _out4311);
                        _9223_recursiveGen = _out4309;
                        _9224_recOwned = _out4310;
                        _9225_recIdents = _out4311;
                        RAST._IExpr _out4312;
                        DCOMPUTF16._IOwnership _out4313;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9223_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9224_recOwned, expectedOwnership, out _out4312, out _out4313);
                        r = _out4312;
                        resultingOwnership = _out4313;
                        readIdents = _9225_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4314;
                    DCOMPUTF16._IOwnership _out4315;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4316;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9215_b), _9215_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4314, out _out4315, out _out4316);
                    r = _out4314;
                    resultingOwnership = _out4315;
                    readIdents = _out4316;
                  }
                }
              } else if (_source339.is_Datatype) {
                DAST._IDatatypeType _9226___mcc_h228 = _source339.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _9227_attributes = _9207___mcc_h203;
                bool _9228_erase = _9206___mcc_h202;
                DAST._INewtypeRange _9229_range = _9205___mcc_h201;
                DAST._IType _9230_b = _9204___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _9231_nativeFromType;
                  _9231_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9230_b, _9229_range);
                  if (object.Equals(_9230_b, _8723_toTpe)) {
                    RAST._IExpr _9232_recursiveGen;
                    DCOMPUTF16._IOwnership _9233_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9234_recIdents;
                    RAST._IExpr _out4317;
                    DCOMPUTF16._IOwnership _out4318;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4319;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4317, out _out4318, out _out4319);
                    _9232_recursiveGen = _out4317;
                    _9233_recOwned = _out4318;
                    _9234_recIdents = _out4319;
                    readIdents = _9234_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source341 = _9231_nativeFromType;
                    if (_source341.is_None) {
                      if (_9228_erase) {
                        r = _9232_recursiveGen;
                      } else {
                        r = (_9232_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4320;
                      DCOMPUTF16._IOwnership _out4321;
                      DCOMPUTF16.COMP.FromOwnership(r, _9233_recOwned, expectedOwnership, out _out4320, out _out4321);
                      r = _out4320;
                      resultingOwnership = _out4321;
                    } else {
                      RAST._IType _9235___mcc_h1520 = _source341.dtor_value;
                      RAST._IType _9236_v = _9235___mcc_h1520;
                      RAST._IType _9237_toTpeRust;
                      RAST._IType _out4322;
                      _out4322 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                      _9237_toTpeRust = _out4322;
                      r = (((_9232_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9237_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4323;
                      DCOMPUTF16._IOwnership _out4324;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4323, out _out4324);
                      r = _out4323;
                      resultingOwnership = _out4324;
                    }
                  } else {
                    if ((_9231_nativeFromType).is_Some) {
                      if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9238_recursiveGen;
                        DCOMPUTF16._IOwnership _9239_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9240_recIdents;
                        RAST._IExpr _out4325;
                        DCOMPUTF16._IOwnership _out4326;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4327;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4325, out _out4326, out _out4327);
                        _9238_recursiveGen = _out4325;
                        _9239_recOwned = _out4326;
                        _9240_recIdents = _out4327;
                        RAST._IExpr _out4328;
                        DCOMPUTF16._IOwnership _out4329;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9238_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9239_recOwned, expectedOwnership, out _out4328, out _out4329);
                        r = _out4328;
                        resultingOwnership = _out4329;
                        readIdents = _9240_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4330;
                    DCOMPUTF16._IOwnership _out4331;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4332;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9230_b), _9230_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4330, out _out4331, out _out4332);
                    r = _out4330;
                    resultingOwnership = _out4331;
                    readIdents = _out4332;
                  }
                }
              } else if (_source339.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9241___mcc_h231 = _source339.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _9242___mcc_h232 = _source339.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9243_attributes = _9207___mcc_h203;
                bool _9244_erase = _9206___mcc_h202;
                DAST._INewtypeRange _9245_range = _9205___mcc_h201;
                DAST._IType _9246_b = _9204___mcc_h200;
                {
                  Std.Wrappers._IOption<RAST._IType> _9247_nativeFromType;
                  _9247_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9246_b, _9245_range);
                  if (object.Equals(_9246_b, _8723_toTpe)) {
                    RAST._IExpr _9248_recursiveGen;
                    DCOMPUTF16._IOwnership _9249_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9250_recIdents;
                    RAST._IExpr _out4333;
                    DCOMPUTF16._IOwnership _out4334;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4335;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4333, out _out4334, out _out4335);
                    _9248_recursiveGen = _out4333;
                    _9249_recOwned = _out4334;
                    _9250_recIdents = _out4335;
                    readIdents = _9250_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source342 = _9247_nativeFromType;
                    if (_source342.is_None) {
                      if (_9244_erase) {
                        r = _9248_recursiveGen;
                      } else {
                        r = (_9248_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                      }
                      RAST._IExpr _out4336;
                      DCOMPUTF16._IOwnership _out4337;
                      DCOMPUTF16.COMP.FromOwnership(r, _9249_recOwned, expectedOwnership, out _out4336, out _out4337);
                      r = _out4336;
                      resultingOwnership = _out4337;
                    } else {
                      RAST._IType _9251___mcc_h1521 = _source342.dtor_value;
                      RAST._IType _9252_v = _9251___mcc_h1521;
                      RAST._IType _9253_toTpeRust;
                      RAST._IType _out4338;
                      _out4338 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                      _9253_toTpeRust = _out4338;
                      r = (((_9248_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9253_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                      RAST._IExpr _out4339;
                      DCOMPUTF16._IOwnership _out4340;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4339, out _out4340);
                      r = _out4339;
                      resultingOwnership = _out4340;
                    }
                  } else {
                    if ((_9247_nativeFromType).is_Some) {
                      if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9254_recursiveGen;
                        DCOMPUTF16._IOwnership _9255_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9256_recIdents;
                        RAST._IExpr _out4341;
                        DCOMPUTF16._IOwnership _out4342;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4343;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4341, out _out4342, out _out4343);
                        _9254_recursiveGen = _out4341;
                        _9255_recOwned = _out4342;
                        _9256_recIdents = _out4343;
                        RAST._IExpr _out4344;
                        DCOMPUTF16._IOwnership _out4345;
                        DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9254_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9255_recOwned, expectedOwnership, out _out4344, out _out4345);
                        r = _out4344;
                        resultingOwnership = _out4345;
                        readIdents = _9256_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4346;
                    DCOMPUTF16._IOwnership _out4347;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4348;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9246_b), _9246_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4346, out _out4347, out _out4348);
                    r = _out4346;
                    resultingOwnership = _out4347;
                    readIdents = _out4348;
                  }
                }
              } else {
                DAST._IType _9257___mcc_h237 = _source339.dtor_baseType;
                DAST._INewtypeRange _9258___mcc_h238 = _source339.dtor_range;
                bool _9259___mcc_h239 = _source339.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _9260___mcc_h240 = _source339.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _9261_attributes = _9260___mcc_h240;
                bool _9262_erase = _9259___mcc_h239;
                DAST._INewtypeRange _9263_range = _9258___mcc_h238;
                DAST._IType _9264_b = _9257___mcc_h237;
                {
                  Std.Wrappers._IOption<RAST._IType> _9265_nativeToType;
                  _9265_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9264_b, _9263_range);
                  if (object.Equals(_8722_fromTpe, _9264_b)) {
                    RAST._IExpr _9266_recursiveGen;
                    DCOMPUTF16._IOwnership _9267_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9268_recIdents;
                    RAST._IExpr _out4349;
                    DCOMPUTF16._IOwnership _out4350;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4351;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4349, out _out4350, out _out4351);
                    _9266_recursiveGen = _out4349;
                    _9267_recOwned = _out4350;
                    _9268_recIdents = _out4351;
                    readIdents = _9268_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source343 = _9265_nativeToType;
                    if (_source343.is_None) {
                      if (_9262_erase) {
                        r = _9266_recursiveGen;
                      } else {
                        RAST._IType _9269_rhsType;
                        RAST._IType _out4352;
                        _out4352 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _9269_rhsType = _out4352;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9269_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9266_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out4353;
                      DCOMPUTF16._IOwnership _out4354;
                      DCOMPUTF16.COMP.FromOwnership(r, _9267_recOwned, expectedOwnership, out _out4353, out _out4354);
                      r = _out4353;
                      resultingOwnership = _out4354;
                    } else {
                      RAST._IType _9270___mcc_h1522 = _source343.dtor_value;
                      RAST._IType _9271_v = _9270___mcc_h1522;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9266_recursiveGen, RAST.Expr.create_ExprFromType(_9271_v)));
                      RAST._IExpr _out4355;
                      DCOMPUTF16._IOwnership _out4356;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4355, out _out4356);
                      r = _out4355;
                      resultingOwnership = _out4356;
                    }
                  } else {
                    if ((_9265_nativeToType).is_Some) {
                      DAST._IType _source344 = _8722_fromTpe;
                      if (_source344.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9272___mcc_h1523 = _source344.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _9273___mcc_h1524 = _source344.dtor_typeArgs;
                        DAST._IResolvedType _9274___mcc_h1525 = _source344.dtor_resolved;
                        DAST._IResolvedType _source345 = _9274___mcc_h1525;
                        if (_source345.is_AllocatedDatatype) {
                          DAST._IDatatypeType _9275___mcc_h1529 = _source345.dtor_datatypeType;
                        } else if (_source345.is_Datatype) {
                          DAST._IDatatypeType _9276___mcc_h1531 = _source345.dtor_datatypeType;
                        } else if (_source345.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9277___mcc_h1533 = _source345.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _9278___mcc_h1534 = _source345.dtor_attributes;
                        } else {
                          DAST._IType _9279___mcc_h1537 = _source345.dtor_baseType;
                          DAST._INewtypeRange _9280___mcc_h1538 = _source345.dtor_range;
                          bool _9281___mcc_h1539 = _source345.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _9282___mcc_h1540 = _source345.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _9283_attributes0 = _9282___mcc_h1540;
                          bool _9284_erase0 = _9281___mcc_h1539;
                          DAST._INewtypeRange _9285_range0 = _9280___mcc_h1538;
                          DAST._IType _9286_b0 = _9279___mcc_h1537;
                          {
                            Std.Wrappers._IOption<RAST._IType> _9287_nativeFromType;
                            _9287_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9286_b0, _9285_range0);
                            if ((_9287_nativeFromType).is_Some) {
                              RAST._IExpr _9288_recursiveGen;
                              DCOMPUTF16._IOwnership _9289_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9290_recIdents;
                              RAST._IExpr _out4357;
                              DCOMPUTF16._IOwnership _out4358;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4359;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4357, out _out4358, out _out4359);
                              _9288_recursiveGen = _out4357;
                              _9289_recOwned = _out4358;
                              _9290_recIdents = _out4359;
                              RAST._IExpr _out4360;
                              DCOMPUTF16._IOwnership _out4361;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9288_recursiveGen, (_9265_nativeToType).dtor_value), _9289_recOwned, expectedOwnership, out _out4360, out _out4361);
                              r = _out4360;
                              resultingOwnership = _out4361;
                              readIdents = _9290_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source344.is_Nullable) {
                        DAST._IType _9291___mcc_h1545 = _source344.dtor_Nullable_a0;
                      } else if (_source344.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _9292___mcc_h1547 = _source344.dtor_Tuple_a0;
                      } else if (_source344.is_Array) {
                        DAST._IType _9293___mcc_h1549 = _source344.dtor_element;
                        BigInteger _9294___mcc_h1550 = _source344.dtor_dims;
                      } else if (_source344.is_Seq) {
                        DAST._IType _9295___mcc_h1553 = _source344.dtor_element;
                      } else if (_source344.is_Set) {
                        DAST._IType _9296___mcc_h1555 = _source344.dtor_element;
                      } else if (_source344.is_Multiset) {
                        DAST._IType _9297___mcc_h1557 = _source344.dtor_element;
                      } else if (_source344.is_Map) {
                        DAST._IType _9298___mcc_h1559 = _source344.dtor_key;
                        DAST._IType _9299___mcc_h1560 = _source344.dtor_value;
                      } else if (_source344.is_SetBuilder) {
                        DAST._IType _9300___mcc_h1563 = _source344.dtor_element;
                      } else if (_source344.is_MapBuilder) {
                        DAST._IType _9301___mcc_h1565 = _source344.dtor_key;
                        DAST._IType _9302___mcc_h1566 = _source344.dtor_value;
                      } else if (_source344.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _9303___mcc_h1569 = _source344.dtor_args;
                        DAST._IType _9304___mcc_h1570 = _source344.dtor_result;
                      } else if (_source344.is_Primitive) {
                        DAST._IPrimitive _9305___mcc_h1573 = _source344.dtor_Primitive_a0;
                      } else if (_source344.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _9306___mcc_h1575 = _source344.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _9307___mcc_h1577 = _source344.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _9308_recursiveGen;
                        DCOMPUTF16._IOwnership _9309_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9310_recIdents;
                        RAST._IExpr _out4362;
                        DCOMPUTF16._IOwnership _out4363;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4364;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4362, out _out4363, out _out4364);
                        _9308_recursiveGen = _out4362;
                        _9309_recOwned = _out4363;
                        _9310_recIdents = _out4364;
                        RAST._IExpr _out4365;
                        DCOMPUTF16._IOwnership _out4366;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9308_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9265_nativeToType).dtor_value), _9309_recOwned, expectedOwnership, out _out4365, out _out4366);
                        r = _out4365;
                        resultingOwnership = _out4366;
                        readIdents = _9310_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out4367;
                    DCOMPUTF16._IOwnership _out4368;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4369;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9264_b), _9264_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4367, out _out4368, out _out4369);
                    r = _out4367;
                    resultingOwnership = _out4368;
                    readIdents = _out4369;
                  }
                }
              }
            } else if (_source338.is_Nullable) {
              DAST._IType _9311___mcc_h249 = _source338.dtor_Nullable_a0;
              {
                RAST._IExpr _9312_recursiveGen;
                DCOMPUTF16._IOwnership _9313_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9314_recIdents;
                RAST._IExpr _out4370;
                DCOMPUTF16._IOwnership _out4371;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4372;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4370, out _out4371, out _out4372);
                _9312_recursiveGen = _out4370;
                _9313_recOwned = _out4371;
                _9314_recIdents = _out4372;
                r = _9312_recursiveGen;
                if (object.Equals(_9313_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out4373;
                DCOMPUTF16._IOwnership _out4374;
                DCOMPUTF16.COMP.FromOwnership(r, _9313_recOwned, expectedOwnership, out _out4373, out _out4374);
                r = _out4373;
                resultingOwnership = _out4374;
                readIdents = _9314_recIdents;
              }
            } else if (_source338.is_Tuple) {
              Dafny.ISequence<DAST._IType> _9315___mcc_h252 = _source338.dtor_Tuple_a0;
              Dafny.ISequence<DAST._IAttribute> _9316_attributes = _9207___mcc_h203;
              bool _9317_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9318_range = _9205___mcc_h201;
              DAST._IType _9319_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9320_nativeFromType;
                _9320_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9319_b, _9318_range);
                if (object.Equals(_9319_b, _8723_toTpe)) {
                  RAST._IExpr _9321_recursiveGen;
                  DCOMPUTF16._IOwnership _9322_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9323_recIdents;
                  RAST._IExpr _out4375;
                  DCOMPUTF16._IOwnership _out4376;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4377;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4375, out _out4376, out _out4377);
                  _9321_recursiveGen = _out4375;
                  _9322_recOwned = _out4376;
                  _9323_recIdents = _out4377;
                  readIdents = _9323_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source346 = _9320_nativeFromType;
                  if (_source346.is_None) {
                    if (_9317_erase) {
                      r = _9321_recursiveGen;
                    } else {
                      r = (_9321_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4378;
                    DCOMPUTF16._IOwnership _out4379;
                    DCOMPUTF16.COMP.FromOwnership(r, _9322_recOwned, expectedOwnership, out _out4378, out _out4379);
                    r = _out4378;
                    resultingOwnership = _out4379;
                  } else {
                    RAST._IType _9324___mcc_h1579 = _source346.dtor_value;
                    RAST._IType _9325_v = _9324___mcc_h1579;
                    RAST._IType _9326_toTpeRust;
                    RAST._IType _out4380;
                    _out4380 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9326_toTpeRust = _out4380;
                    r = (((_9321_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9326_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4381;
                    DCOMPUTF16._IOwnership _out4382;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4381, out _out4382);
                    r = _out4381;
                    resultingOwnership = _out4382;
                  }
                } else {
                  if ((_9320_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9327_recursiveGen;
                      DCOMPUTF16._IOwnership _9328_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9329_recIdents;
                      RAST._IExpr _out4383;
                      DCOMPUTF16._IOwnership _out4384;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4385;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4383, out _out4384, out _out4385);
                      _9327_recursiveGen = _out4383;
                      _9328_recOwned = _out4384;
                      _9329_recIdents = _out4385;
                      RAST._IExpr _out4386;
                      DCOMPUTF16._IOwnership _out4387;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9327_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9328_recOwned, expectedOwnership, out _out4386, out _out4387);
                      r = _out4386;
                      resultingOwnership = _out4387;
                      readIdents = _9329_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4388;
                  DCOMPUTF16._IOwnership _out4389;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4390;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9319_b), _9319_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4388, out _out4389, out _out4390);
                  r = _out4388;
                  resultingOwnership = _out4389;
                  readIdents = _out4390;
                }
              }
            } else if (_source338.is_Array) {
              DAST._IType _9330___mcc_h255 = _source338.dtor_element;
              BigInteger _9331___mcc_h256 = _source338.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _9332_attributes = _9207___mcc_h203;
              bool _9333_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9334_range = _9205___mcc_h201;
              DAST._IType _9335_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9336_nativeFromType;
                _9336_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9335_b, _9334_range);
                if (object.Equals(_9335_b, _8723_toTpe)) {
                  RAST._IExpr _9337_recursiveGen;
                  DCOMPUTF16._IOwnership _9338_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9339_recIdents;
                  RAST._IExpr _out4391;
                  DCOMPUTF16._IOwnership _out4392;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4393;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4391, out _out4392, out _out4393);
                  _9337_recursiveGen = _out4391;
                  _9338_recOwned = _out4392;
                  _9339_recIdents = _out4393;
                  readIdents = _9339_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source347 = _9336_nativeFromType;
                  if (_source347.is_None) {
                    if (_9333_erase) {
                      r = _9337_recursiveGen;
                    } else {
                      r = (_9337_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4394;
                    DCOMPUTF16._IOwnership _out4395;
                    DCOMPUTF16.COMP.FromOwnership(r, _9338_recOwned, expectedOwnership, out _out4394, out _out4395);
                    r = _out4394;
                    resultingOwnership = _out4395;
                  } else {
                    RAST._IType _9340___mcc_h1580 = _source347.dtor_value;
                    RAST._IType _9341_v = _9340___mcc_h1580;
                    RAST._IType _9342_toTpeRust;
                    RAST._IType _out4396;
                    _out4396 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9342_toTpeRust = _out4396;
                    r = (((_9337_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9342_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4397;
                    DCOMPUTF16._IOwnership _out4398;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4397, out _out4398);
                    r = _out4397;
                    resultingOwnership = _out4398;
                  }
                } else {
                  if ((_9336_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9343_recursiveGen;
                      DCOMPUTF16._IOwnership _9344_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9345_recIdents;
                      RAST._IExpr _out4399;
                      DCOMPUTF16._IOwnership _out4400;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4401;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4399, out _out4400, out _out4401);
                      _9343_recursiveGen = _out4399;
                      _9344_recOwned = _out4400;
                      _9345_recIdents = _out4401;
                      RAST._IExpr _out4402;
                      DCOMPUTF16._IOwnership _out4403;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9343_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9344_recOwned, expectedOwnership, out _out4402, out _out4403);
                      r = _out4402;
                      resultingOwnership = _out4403;
                      readIdents = _9345_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4404;
                  DCOMPUTF16._IOwnership _out4405;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4406;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9335_b), _9335_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4404, out _out4405, out _out4406);
                  r = _out4404;
                  resultingOwnership = _out4405;
                  readIdents = _out4406;
                }
              }
            } else if (_source338.is_Seq) {
              DAST._IType _9346___mcc_h261 = _source338.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _9347_attributes = _9207___mcc_h203;
              bool _9348_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9349_range = _9205___mcc_h201;
              DAST._IType _9350_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9351_nativeFromType;
                _9351_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9350_b, _9349_range);
                if (object.Equals(_9350_b, _8723_toTpe)) {
                  RAST._IExpr _9352_recursiveGen;
                  DCOMPUTF16._IOwnership _9353_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9354_recIdents;
                  RAST._IExpr _out4407;
                  DCOMPUTF16._IOwnership _out4408;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4409;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4407, out _out4408, out _out4409);
                  _9352_recursiveGen = _out4407;
                  _9353_recOwned = _out4408;
                  _9354_recIdents = _out4409;
                  readIdents = _9354_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source348 = _9351_nativeFromType;
                  if (_source348.is_None) {
                    if (_9348_erase) {
                      r = _9352_recursiveGen;
                    } else {
                      r = (_9352_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4410;
                    DCOMPUTF16._IOwnership _out4411;
                    DCOMPUTF16.COMP.FromOwnership(r, _9353_recOwned, expectedOwnership, out _out4410, out _out4411);
                    r = _out4410;
                    resultingOwnership = _out4411;
                  } else {
                    RAST._IType _9355___mcc_h1581 = _source348.dtor_value;
                    RAST._IType _9356_v = _9355___mcc_h1581;
                    RAST._IType _9357_toTpeRust;
                    RAST._IType _out4412;
                    _out4412 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9357_toTpeRust = _out4412;
                    r = (((_9352_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9357_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4413;
                    DCOMPUTF16._IOwnership _out4414;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4413, out _out4414);
                    r = _out4413;
                    resultingOwnership = _out4414;
                  }
                } else {
                  if ((_9351_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9358_recursiveGen;
                      DCOMPUTF16._IOwnership _9359_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9360_recIdents;
                      RAST._IExpr _out4415;
                      DCOMPUTF16._IOwnership _out4416;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4417;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4415, out _out4416, out _out4417);
                      _9358_recursiveGen = _out4415;
                      _9359_recOwned = _out4416;
                      _9360_recIdents = _out4417;
                      RAST._IExpr _out4418;
                      DCOMPUTF16._IOwnership _out4419;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9358_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9359_recOwned, expectedOwnership, out _out4418, out _out4419);
                      r = _out4418;
                      resultingOwnership = _out4419;
                      readIdents = _9360_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4420;
                  DCOMPUTF16._IOwnership _out4421;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4422;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9350_b), _9350_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4420, out _out4421, out _out4422);
                  r = _out4420;
                  resultingOwnership = _out4421;
                  readIdents = _out4422;
                }
              }
            } else if (_source338.is_Set) {
              DAST._IType _9361___mcc_h264 = _source338.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _9362_attributes = _9207___mcc_h203;
              bool _9363_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9364_range = _9205___mcc_h201;
              DAST._IType _9365_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9366_nativeFromType;
                _9366_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9365_b, _9364_range);
                if (object.Equals(_9365_b, _8723_toTpe)) {
                  RAST._IExpr _9367_recursiveGen;
                  DCOMPUTF16._IOwnership _9368_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9369_recIdents;
                  RAST._IExpr _out4423;
                  DCOMPUTF16._IOwnership _out4424;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4425;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4423, out _out4424, out _out4425);
                  _9367_recursiveGen = _out4423;
                  _9368_recOwned = _out4424;
                  _9369_recIdents = _out4425;
                  readIdents = _9369_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source349 = _9366_nativeFromType;
                  if (_source349.is_None) {
                    if (_9363_erase) {
                      r = _9367_recursiveGen;
                    } else {
                      r = (_9367_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4426;
                    DCOMPUTF16._IOwnership _out4427;
                    DCOMPUTF16.COMP.FromOwnership(r, _9368_recOwned, expectedOwnership, out _out4426, out _out4427);
                    r = _out4426;
                    resultingOwnership = _out4427;
                  } else {
                    RAST._IType _9370___mcc_h1582 = _source349.dtor_value;
                    RAST._IType _9371_v = _9370___mcc_h1582;
                    RAST._IType _9372_toTpeRust;
                    RAST._IType _out4428;
                    _out4428 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9372_toTpeRust = _out4428;
                    r = (((_9367_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9372_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4429;
                    DCOMPUTF16._IOwnership _out4430;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4429, out _out4430);
                    r = _out4429;
                    resultingOwnership = _out4430;
                  }
                } else {
                  if ((_9366_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9373_recursiveGen;
                      DCOMPUTF16._IOwnership _9374_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9375_recIdents;
                      RAST._IExpr _out4431;
                      DCOMPUTF16._IOwnership _out4432;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4433;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4431, out _out4432, out _out4433);
                      _9373_recursiveGen = _out4431;
                      _9374_recOwned = _out4432;
                      _9375_recIdents = _out4433;
                      RAST._IExpr _out4434;
                      DCOMPUTF16._IOwnership _out4435;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9373_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9374_recOwned, expectedOwnership, out _out4434, out _out4435);
                      r = _out4434;
                      resultingOwnership = _out4435;
                      readIdents = _9375_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4436;
                  DCOMPUTF16._IOwnership _out4437;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4438;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9365_b), _9365_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4436, out _out4437, out _out4438);
                  r = _out4436;
                  resultingOwnership = _out4437;
                  readIdents = _out4438;
                }
              }
            } else if (_source338.is_Multiset) {
              DAST._IType _9376___mcc_h267 = _source338.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _9377_attributes = _9207___mcc_h203;
              bool _9378_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9379_range = _9205___mcc_h201;
              DAST._IType _9380_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9381_nativeFromType;
                _9381_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9380_b, _9379_range);
                if (object.Equals(_9380_b, _8723_toTpe)) {
                  RAST._IExpr _9382_recursiveGen;
                  DCOMPUTF16._IOwnership _9383_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9384_recIdents;
                  RAST._IExpr _out4439;
                  DCOMPUTF16._IOwnership _out4440;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4441;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4439, out _out4440, out _out4441);
                  _9382_recursiveGen = _out4439;
                  _9383_recOwned = _out4440;
                  _9384_recIdents = _out4441;
                  readIdents = _9384_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source350 = _9381_nativeFromType;
                  if (_source350.is_None) {
                    if (_9378_erase) {
                      r = _9382_recursiveGen;
                    } else {
                      r = (_9382_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4442;
                    DCOMPUTF16._IOwnership _out4443;
                    DCOMPUTF16.COMP.FromOwnership(r, _9383_recOwned, expectedOwnership, out _out4442, out _out4443);
                    r = _out4442;
                    resultingOwnership = _out4443;
                  } else {
                    RAST._IType _9385___mcc_h1583 = _source350.dtor_value;
                    RAST._IType _9386_v = _9385___mcc_h1583;
                    RAST._IType _9387_toTpeRust;
                    RAST._IType _out4444;
                    _out4444 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9387_toTpeRust = _out4444;
                    r = (((_9382_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9387_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4445;
                    DCOMPUTF16._IOwnership _out4446;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4445, out _out4446);
                    r = _out4445;
                    resultingOwnership = _out4446;
                  }
                } else {
                  if ((_9381_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9388_recursiveGen;
                      DCOMPUTF16._IOwnership _9389_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9390_recIdents;
                      RAST._IExpr _out4447;
                      DCOMPUTF16._IOwnership _out4448;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4449;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4447, out _out4448, out _out4449);
                      _9388_recursiveGen = _out4447;
                      _9389_recOwned = _out4448;
                      _9390_recIdents = _out4449;
                      RAST._IExpr _out4450;
                      DCOMPUTF16._IOwnership _out4451;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9388_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9389_recOwned, expectedOwnership, out _out4450, out _out4451);
                      r = _out4450;
                      resultingOwnership = _out4451;
                      readIdents = _9390_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4452;
                  DCOMPUTF16._IOwnership _out4453;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4454;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9380_b), _9380_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4452, out _out4453, out _out4454);
                  r = _out4452;
                  resultingOwnership = _out4453;
                  readIdents = _out4454;
                }
              }
            } else if (_source338.is_Map) {
              DAST._IType _9391___mcc_h270 = _source338.dtor_key;
              DAST._IType _9392___mcc_h271 = _source338.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _9393_attributes = _9207___mcc_h203;
              bool _9394_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9395_range = _9205___mcc_h201;
              DAST._IType _9396_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9397_nativeFromType;
                _9397_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9396_b, _9395_range);
                if (object.Equals(_9396_b, _8723_toTpe)) {
                  RAST._IExpr _9398_recursiveGen;
                  DCOMPUTF16._IOwnership _9399_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9400_recIdents;
                  RAST._IExpr _out4455;
                  DCOMPUTF16._IOwnership _out4456;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4457;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4455, out _out4456, out _out4457);
                  _9398_recursiveGen = _out4455;
                  _9399_recOwned = _out4456;
                  _9400_recIdents = _out4457;
                  readIdents = _9400_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source351 = _9397_nativeFromType;
                  if (_source351.is_None) {
                    if (_9394_erase) {
                      r = _9398_recursiveGen;
                    } else {
                      r = (_9398_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4458;
                    DCOMPUTF16._IOwnership _out4459;
                    DCOMPUTF16.COMP.FromOwnership(r, _9399_recOwned, expectedOwnership, out _out4458, out _out4459);
                    r = _out4458;
                    resultingOwnership = _out4459;
                  } else {
                    RAST._IType _9401___mcc_h1584 = _source351.dtor_value;
                    RAST._IType _9402_v = _9401___mcc_h1584;
                    RAST._IType _9403_toTpeRust;
                    RAST._IType _out4460;
                    _out4460 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9403_toTpeRust = _out4460;
                    r = (((_9398_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9403_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4461;
                    DCOMPUTF16._IOwnership _out4462;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4461, out _out4462);
                    r = _out4461;
                    resultingOwnership = _out4462;
                  }
                } else {
                  if ((_9397_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9404_recursiveGen;
                      DCOMPUTF16._IOwnership _9405_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9406_recIdents;
                      RAST._IExpr _out4463;
                      DCOMPUTF16._IOwnership _out4464;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4465;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4463, out _out4464, out _out4465);
                      _9404_recursiveGen = _out4463;
                      _9405_recOwned = _out4464;
                      _9406_recIdents = _out4465;
                      RAST._IExpr _out4466;
                      DCOMPUTF16._IOwnership _out4467;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9404_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9405_recOwned, expectedOwnership, out _out4466, out _out4467);
                      r = _out4466;
                      resultingOwnership = _out4467;
                      readIdents = _9406_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4468;
                  DCOMPUTF16._IOwnership _out4469;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4470;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9396_b), _9396_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4468, out _out4469, out _out4470);
                  r = _out4468;
                  resultingOwnership = _out4469;
                  readIdents = _out4470;
                }
              }
            } else if (_source338.is_SetBuilder) {
              DAST._IType _9407___mcc_h276 = _source338.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _9408_attributes = _9207___mcc_h203;
              bool _9409_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9410_range = _9205___mcc_h201;
              DAST._IType _9411_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9412_nativeFromType;
                _9412_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9411_b, _9410_range);
                if (object.Equals(_9411_b, _8723_toTpe)) {
                  RAST._IExpr _9413_recursiveGen;
                  DCOMPUTF16._IOwnership _9414_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9415_recIdents;
                  RAST._IExpr _out4471;
                  DCOMPUTF16._IOwnership _out4472;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4473;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4471, out _out4472, out _out4473);
                  _9413_recursiveGen = _out4471;
                  _9414_recOwned = _out4472;
                  _9415_recIdents = _out4473;
                  readIdents = _9415_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source352 = _9412_nativeFromType;
                  if (_source352.is_None) {
                    if (_9409_erase) {
                      r = _9413_recursiveGen;
                    } else {
                      r = (_9413_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4474;
                    DCOMPUTF16._IOwnership _out4475;
                    DCOMPUTF16.COMP.FromOwnership(r, _9414_recOwned, expectedOwnership, out _out4474, out _out4475);
                    r = _out4474;
                    resultingOwnership = _out4475;
                  } else {
                    RAST._IType _9416___mcc_h1585 = _source352.dtor_value;
                    RAST._IType _9417_v = _9416___mcc_h1585;
                    RAST._IType _9418_toTpeRust;
                    RAST._IType _out4476;
                    _out4476 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9418_toTpeRust = _out4476;
                    r = (((_9413_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9418_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4477;
                    DCOMPUTF16._IOwnership _out4478;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4477, out _out4478);
                    r = _out4477;
                    resultingOwnership = _out4478;
                  }
                } else {
                  if ((_9412_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9419_recursiveGen;
                      DCOMPUTF16._IOwnership _9420_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9421_recIdents;
                      RAST._IExpr _out4479;
                      DCOMPUTF16._IOwnership _out4480;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4481;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4479, out _out4480, out _out4481);
                      _9419_recursiveGen = _out4479;
                      _9420_recOwned = _out4480;
                      _9421_recIdents = _out4481;
                      RAST._IExpr _out4482;
                      DCOMPUTF16._IOwnership _out4483;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9419_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9420_recOwned, expectedOwnership, out _out4482, out _out4483);
                      r = _out4482;
                      resultingOwnership = _out4483;
                      readIdents = _9421_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4484;
                  DCOMPUTF16._IOwnership _out4485;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4486;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9411_b), _9411_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4484, out _out4485, out _out4486);
                  r = _out4484;
                  resultingOwnership = _out4485;
                  readIdents = _out4486;
                }
              }
            } else if (_source338.is_MapBuilder) {
              DAST._IType _9422___mcc_h279 = _source338.dtor_key;
              DAST._IType _9423___mcc_h280 = _source338.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _9424_attributes = _9207___mcc_h203;
              bool _9425_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9426_range = _9205___mcc_h201;
              DAST._IType _9427_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9428_nativeFromType;
                _9428_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9427_b, _9426_range);
                if (object.Equals(_9427_b, _8723_toTpe)) {
                  RAST._IExpr _9429_recursiveGen;
                  DCOMPUTF16._IOwnership _9430_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9431_recIdents;
                  RAST._IExpr _out4487;
                  DCOMPUTF16._IOwnership _out4488;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4489;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4487, out _out4488, out _out4489);
                  _9429_recursiveGen = _out4487;
                  _9430_recOwned = _out4488;
                  _9431_recIdents = _out4489;
                  readIdents = _9431_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source353 = _9428_nativeFromType;
                  if (_source353.is_None) {
                    if (_9425_erase) {
                      r = _9429_recursiveGen;
                    } else {
                      r = (_9429_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4490;
                    DCOMPUTF16._IOwnership _out4491;
                    DCOMPUTF16.COMP.FromOwnership(r, _9430_recOwned, expectedOwnership, out _out4490, out _out4491);
                    r = _out4490;
                    resultingOwnership = _out4491;
                  } else {
                    RAST._IType _9432___mcc_h1586 = _source353.dtor_value;
                    RAST._IType _9433_v = _9432___mcc_h1586;
                    RAST._IType _9434_toTpeRust;
                    RAST._IType _out4492;
                    _out4492 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9434_toTpeRust = _out4492;
                    r = (((_9429_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9434_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4493;
                    DCOMPUTF16._IOwnership _out4494;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4493, out _out4494);
                    r = _out4493;
                    resultingOwnership = _out4494;
                  }
                } else {
                  if ((_9428_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9435_recursiveGen;
                      DCOMPUTF16._IOwnership _9436_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9437_recIdents;
                      RAST._IExpr _out4495;
                      DCOMPUTF16._IOwnership _out4496;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4497;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4495, out _out4496, out _out4497);
                      _9435_recursiveGen = _out4495;
                      _9436_recOwned = _out4496;
                      _9437_recIdents = _out4497;
                      RAST._IExpr _out4498;
                      DCOMPUTF16._IOwnership _out4499;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9435_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9436_recOwned, expectedOwnership, out _out4498, out _out4499);
                      r = _out4498;
                      resultingOwnership = _out4499;
                      readIdents = _9437_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4500;
                  DCOMPUTF16._IOwnership _out4501;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4502;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9427_b), _9427_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4500, out _out4501, out _out4502);
                  r = _out4500;
                  resultingOwnership = _out4501;
                  readIdents = _out4502;
                }
              }
            } else if (_source338.is_Arrow) {
              Dafny.ISequence<DAST._IType> _9438___mcc_h285 = _source338.dtor_args;
              DAST._IType _9439___mcc_h286 = _source338.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _9440_attributes = _9207___mcc_h203;
              bool _9441_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9442_range = _9205___mcc_h201;
              DAST._IType _9443_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9444_nativeFromType;
                _9444_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9443_b, _9442_range);
                if (object.Equals(_9443_b, _8723_toTpe)) {
                  RAST._IExpr _9445_recursiveGen;
                  DCOMPUTF16._IOwnership _9446_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9447_recIdents;
                  RAST._IExpr _out4503;
                  DCOMPUTF16._IOwnership _out4504;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4505;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4503, out _out4504, out _out4505);
                  _9445_recursiveGen = _out4503;
                  _9446_recOwned = _out4504;
                  _9447_recIdents = _out4505;
                  readIdents = _9447_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source354 = _9444_nativeFromType;
                  if (_source354.is_None) {
                    if (_9441_erase) {
                      r = _9445_recursiveGen;
                    } else {
                      r = (_9445_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4506;
                    DCOMPUTF16._IOwnership _out4507;
                    DCOMPUTF16.COMP.FromOwnership(r, _9446_recOwned, expectedOwnership, out _out4506, out _out4507);
                    r = _out4506;
                    resultingOwnership = _out4507;
                  } else {
                    RAST._IType _9448___mcc_h1587 = _source354.dtor_value;
                    RAST._IType _9449_v = _9448___mcc_h1587;
                    RAST._IType _9450_toTpeRust;
                    RAST._IType _out4508;
                    _out4508 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9450_toTpeRust = _out4508;
                    r = (((_9445_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9450_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4509;
                    DCOMPUTF16._IOwnership _out4510;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4509, out _out4510);
                    r = _out4509;
                    resultingOwnership = _out4510;
                  }
                } else {
                  if ((_9444_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9451_recursiveGen;
                      DCOMPUTF16._IOwnership _9452_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9453_recIdents;
                      RAST._IExpr _out4511;
                      DCOMPUTF16._IOwnership _out4512;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4513;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4511, out _out4512, out _out4513);
                      _9451_recursiveGen = _out4511;
                      _9452_recOwned = _out4512;
                      _9453_recIdents = _out4513;
                      RAST._IExpr _out4514;
                      DCOMPUTF16._IOwnership _out4515;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9451_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9452_recOwned, expectedOwnership, out _out4514, out _out4515);
                      r = _out4514;
                      resultingOwnership = _out4515;
                      readIdents = _9453_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4516;
                  DCOMPUTF16._IOwnership _out4517;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4518;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9443_b), _9443_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4516, out _out4517, out _out4518);
                  r = _out4516;
                  resultingOwnership = _out4517;
                  readIdents = _out4518;
                }
              }
            } else if (_source338.is_Primitive) {
              DAST._IPrimitive _9454___mcc_h291 = _source338.dtor_Primitive_a0;
              Dafny.ISequence<DAST._IAttribute> _9455_attributes = _9207___mcc_h203;
              bool _9456_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9457_range = _9205___mcc_h201;
              DAST._IType _9458_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9459_nativeFromType;
                _9459_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9458_b, _9457_range);
                if (object.Equals(_9458_b, _8723_toTpe)) {
                  RAST._IExpr _9460_recursiveGen;
                  DCOMPUTF16._IOwnership _9461_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9462_recIdents;
                  RAST._IExpr _out4519;
                  DCOMPUTF16._IOwnership _out4520;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4521;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4519, out _out4520, out _out4521);
                  _9460_recursiveGen = _out4519;
                  _9461_recOwned = _out4520;
                  _9462_recIdents = _out4521;
                  readIdents = _9462_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source355 = _9459_nativeFromType;
                  if (_source355.is_None) {
                    if (_9456_erase) {
                      r = _9460_recursiveGen;
                    } else {
                      r = (_9460_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4522;
                    DCOMPUTF16._IOwnership _out4523;
                    DCOMPUTF16.COMP.FromOwnership(r, _9461_recOwned, expectedOwnership, out _out4522, out _out4523);
                    r = _out4522;
                    resultingOwnership = _out4523;
                  } else {
                    RAST._IType _9463___mcc_h1588 = _source355.dtor_value;
                    RAST._IType _9464_v = _9463___mcc_h1588;
                    RAST._IType _9465_toTpeRust;
                    RAST._IType _out4524;
                    _out4524 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9465_toTpeRust = _out4524;
                    r = (((_9460_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9465_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4525;
                    DCOMPUTF16._IOwnership _out4526;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4525, out _out4526);
                    r = _out4525;
                    resultingOwnership = _out4526;
                  }
                } else {
                  if ((_9459_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9466_recursiveGen;
                      DCOMPUTF16._IOwnership _9467_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9468_recIdents;
                      RAST._IExpr _out4527;
                      DCOMPUTF16._IOwnership _out4528;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4529;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4527, out _out4528, out _out4529);
                      _9466_recursiveGen = _out4527;
                      _9467_recOwned = _out4528;
                      _9468_recIdents = _out4529;
                      RAST._IExpr _out4530;
                      DCOMPUTF16._IOwnership _out4531;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9466_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9467_recOwned, expectedOwnership, out _out4530, out _out4531);
                      r = _out4530;
                      resultingOwnership = _out4531;
                      readIdents = _9468_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4532;
                  DCOMPUTF16._IOwnership _out4533;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4534;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9458_b), _9458_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4532, out _out4533, out _out4534);
                  r = _out4532;
                  resultingOwnership = _out4533;
                  readIdents = _out4534;
                }
              }
            } else if (_source338.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _9469___mcc_h294 = _source338.dtor_Passthrough_a0;
              Dafny.ISequence<DAST._IAttribute> _9470_attributes = _9207___mcc_h203;
              bool _9471_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9472_range = _9205___mcc_h201;
              DAST._IType _9473_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9474_nativeFromType;
                _9474_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9473_b, _9472_range);
                if (object.Equals(_9473_b, _8723_toTpe)) {
                  RAST._IExpr _9475_recursiveGen;
                  DCOMPUTF16._IOwnership _9476_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9477_recIdents;
                  RAST._IExpr _out4535;
                  DCOMPUTF16._IOwnership _out4536;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4537;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4535, out _out4536, out _out4537);
                  _9475_recursiveGen = _out4535;
                  _9476_recOwned = _out4536;
                  _9477_recIdents = _out4537;
                  readIdents = _9477_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source356 = _9474_nativeFromType;
                  if (_source356.is_None) {
                    if (_9471_erase) {
                      r = _9475_recursiveGen;
                    } else {
                      r = (_9475_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4538;
                    DCOMPUTF16._IOwnership _out4539;
                    DCOMPUTF16.COMP.FromOwnership(r, _9476_recOwned, expectedOwnership, out _out4538, out _out4539);
                    r = _out4538;
                    resultingOwnership = _out4539;
                  } else {
                    RAST._IType _9478___mcc_h1589 = _source356.dtor_value;
                    RAST._IType _9479_v = _9478___mcc_h1589;
                    RAST._IType _9480_toTpeRust;
                    RAST._IType _out4540;
                    _out4540 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9480_toTpeRust = _out4540;
                    r = (((_9475_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9480_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4541;
                    DCOMPUTF16._IOwnership _out4542;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4541, out _out4542);
                    r = _out4541;
                    resultingOwnership = _out4542;
                  }
                } else {
                  if ((_9474_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9481_recursiveGen;
                      DCOMPUTF16._IOwnership _9482_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9483_recIdents;
                      RAST._IExpr _out4543;
                      DCOMPUTF16._IOwnership _out4544;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4545;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4543, out _out4544, out _out4545);
                      _9481_recursiveGen = _out4543;
                      _9482_recOwned = _out4544;
                      _9483_recIdents = _out4545;
                      RAST._IExpr _out4546;
                      DCOMPUTF16._IOwnership _out4547;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9481_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9482_recOwned, expectedOwnership, out _out4546, out _out4547);
                      r = _out4546;
                      resultingOwnership = _out4547;
                      readIdents = _9483_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4548;
                  DCOMPUTF16._IOwnership _out4549;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4550;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9473_b), _9473_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4548, out _out4549, out _out4550);
                  r = _out4548;
                  resultingOwnership = _out4549;
                  readIdents = _out4550;
                }
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _9484___mcc_h297 = _source338.dtor_TypeArg_a0;
              Dafny.ISequence<DAST._IAttribute> _9485_attributes = _9207___mcc_h203;
              bool _9486_erase = _9206___mcc_h202;
              DAST._INewtypeRange _9487_range = _9205___mcc_h201;
              DAST._IType _9488_b = _9204___mcc_h200;
              {
                Std.Wrappers._IOption<RAST._IType> _9489_nativeFromType;
                _9489_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9488_b, _9487_range);
                if (object.Equals(_9488_b, _8723_toTpe)) {
                  RAST._IExpr _9490_recursiveGen;
                  DCOMPUTF16._IOwnership _9491_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9492_recIdents;
                  RAST._IExpr _out4551;
                  DCOMPUTF16._IOwnership _out4552;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4553;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4551, out _out4552, out _out4553);
                  _9490_recursiveGen = _out4551;
                  _9491_recOwned = _out4552;
                  _9492_recIdents = _out4553;
                  readIdents = _9492_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source357 = _9489_nativeFromType;
                  if (_source357.is_None) {
                    if (_9486_erase) {
                      r = _9490_recursiveGen;
                    } else {
                      r = (_9490_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
                    }
                    RAST._IExpr _out4554;
                    DCOMPUTF16._IOwnership _out4555;
                    DCOMPUTF16.COMP.FromOwnership(r, _9491_recOwned, expectedOwnership, out _out4554, out _out4555);
                    r = _out4554;
                    resultingOwnership = _out4555;
                  } else {
                    RAST._IType _9493___mcc_h1590 = _source357.dtor_value;
                    RAST._IType _9494_v = _9493___mcc_h1590;
                    RAST._IType _9495_toTpeRust;
                    RAST._IType _out4556;
                    _out4556 = DCOMPUTF16.COMP.GenType(_8723_toTpe, false, false);
                    _9495_toTpeRust = _out4556;
                    r = (((_9490_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_9495_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                    RAST._IExpr _out4557;
                    DCOMPUTF16._IOwnership _out4558;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4557, out _out4558);
                    r = _out4557;
                    resultingOwnership = _out4558;
                  }
                } else {
                  if ((_9489_nativeFromType).is_Some) {
                    if (object.Equals(_8723_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9496_recursiveGen;
                      DCOMPUTF16._IOwnership _9497_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9498_recIdents;
                      RAST._IExpr _out4559;
                      DCOMPUTF16._IOwnership _out4560;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4561;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4559, out _out4560, out _out4561);
                      _9496_recursiveGen = _out4559;
                      _9497_recOwned = _out4560;
                      _9498_recIdents = _out4561;
                      RAST._IExpr _out4562;
                      DCOMPUTF16._IOwnership _out4563;
                      DCOMPUTF16.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel(DCOMPUTF16.__default.DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_9496_recursiveGen, DCOMPUTF16.__default.DafnyCharUnderlying)), _9497_recOwned, expectedOwnership, out _out4562, out _out4563);
                      r = _out4562;
                      resultingOwnership = _out4563;
                      readIdents = _9498_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4564;
                  DCOMPUTF16._IOwnership _out4565;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4566;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9488_b), _9488_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4564, out _out4565, out _out4566);
                  r = _out4564;
                  resultingOwnership = _out4565;
                  readIdents = _out4566;
                }
              }
            }
          }
        } else if (_source321.is_Nullable) {
          DAST._IType _9499___mcc_h300 = _source321.dtor_Nullable_a0;
          DAST._IType _source358 = _8728___mcc_h1;
          if (_source358.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9500___mcc_h304 = _source358.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9501___mcc_h305 = _source358.dtor_typeArgs;
            DAST._IResolvedType _9502___mcc_h306 = _source358.dtor_resolved;
            DAST._IResolvedType _source359 = _9502___mcc_h306;
            if (_source359.is_AllocatedDatatype) {
              DAST._IDatatypeType _9503___mcc_h313 = _source359.dtor_datatypeType;
              {
                RAST._IExpr _9504_recursiveGen;
                DCOMPUTF16._IOwnership _9505_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9506_recIdents;
                RAST._IExpr _out4567;
                DCOMPUTF16._IOwnership _out4568;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4569;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4567, out _out4568, out _out4569);
                _9504_recursiveGen = _out4567;
                _9505_recOwned = _out4568;
                _9506_recIdents = _out4569;
                r = _9504_recursiveGen;
                if (object.Equals(_9505_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4570;
                DCOMPUTF16._IOwnership _out4571;
                DCOMPUTF16.COMP.FromOwnership(r, _9505_recOwned, expectedOwnership, out _out4570, out _out4571);
                r = _out4570;
                resultingOwnership = _out4571;
                readIdents = _9506_recIdents;
              }
            } else if (_source359.is_Datatype) {
              DAST._IDatatypeType _9507___mcc_h316 = _source359.dtor_datatypeType;
              {
                RAST._IExpr _9508_recursiveGen;
                DCOMPUTF16._IOwnership _9509_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9510_recIdents;
                RAST._IExpr _out4572;
                DCOMPUTF16._IOwnership _out4573;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4574;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4572, out _out4573, out _out4574);
                _9508_recursiveGen = _out4572;
                _9509_recOwned = _out4573;
                _9510_recIdents = _out4574;
                r = _9508_recursiveGen;
                if (object.Equals(_9509_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4575;
                DCOMPUTF16._IOwnership _out4576;
                DCOMPUTF16.COMP.FromOwnership(r, _9509_recOwned, expectedOwnership, out _out4575, out _out4576);
                r = _out4575;
                resultingOwnership = _out4576;
                readIdents = _9510_recIdents;
              }
            } else if (_source359.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9511___mcc_h319 = _source359.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9512___mcc_h320 = _source359.dtor_attributes;
              {
                RAST._IExpr _9513_recursiveGen;
                DCOMPUTF16._IOwnership _9514_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9515_recIdents;
                RAST._IExpr _out4577;
                DCOMPUTF16._IOwnership _out4578;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4579;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4577, out _out4578, out _out4579);
                _9513_recursiveGen = _out4577;
                _9514_recOwned = _out4578;
                _9515_recIdents = _out4579;
                r = _9513_recursiveGen;
                if (object.Equals(_9514_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4580;
                DCOMPUTF16._IOwnership _out4581;
                DCOMPUTF16.COMP.FromOwnership(r, _9514_recOwned, expectedOwnership, out _out4580, out _out4581);
                r = _out4580;
                resultingOwnership = _out4581;
                readIdents = _9515_recIdents;
              }
            } else {
              DAST._IType _9516___mcc_h325 = _source359.dtor_baseType;
              DAST._INewtypeRange _9517___mcc_h326 = _source359.dtor_range;
              bool _9518___mcc_h327 = _source359.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9519___mcc_h328 = _source359.dtor_attributes;
              {
                RAST._IExpr _9520_recursiveGen;
                DCOMPUTF16._IOwnership _9521_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9522_recIdents;
                RAST._IExpr _out4582;
                DCOMPUTF16._IOwnership _out4583;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4584;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4582, out _out4583, out _out4584);
                _9520_recursiveGen = _out4582;
                _9521_recOwned = _out4583;
                _9522_recIdents = _out4584;
                r = _9520_recursiveGen;
                if (object.Equals(_9521_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                RAST._IExpr _out4585;
                DCOMPUTF16._IOwnership _out4586;
                DCOMPUTF16.COMP.FromOwnership(r, _9521_recOwned, expectedOwnership, out _out4585, out _out4586);
                r = _out4585;
                resultingOwnership = _out4586;
                readIdents = _9522_recIdents;
              }
            }
          } else if (_source358.is_Nullable) {
            DAST._IType _9523___mcc_h337 = _source358.dtor_Nullable_a0;
            {
              RAST._IExpr _9524_recursiveGen;
              DCOMPUTF16._IOwnership _9525_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9526_recIdents;
              RAST._IExpr _out4587;
              DCOMPUTF16._IOwnership _out4588;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4589;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4587, out _out4588, out _out4589);
              _9524_recursiveGen = _out4587;
              _9525_recOwned = _out4588;
              _9526_recIdents = _out4589;
              r = _9524_recursiveGen;
              if (object.Equals(_9525_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4590;
              DCOMPUTF16._IOwnership _out4591;
              DCOMPUTF16.COMP.FromOwnership(r, _9525_recOwned, expectedOwnership, out _out4590, out _out4591);
              r = _out4590;
              resultingOwnership = _out4591;
              readIdents = _9526_recIdents;
            }
          } else if (_source358.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9527___mcc_h340 = _source358.dtor_Tuple_a0;
            {
              RAST._IExpr _9528_recursiveGen;
              DCOMPUTF16._IOwnership _9529_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9530_recIdents;
              RAST._IExpr _out4592;
              DCOMPUTF16._IOwnership _out4593;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4594;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4592, out _out4593, out _out4594);
              _9528_recursiveGen = _out4592;
              _9529_recOwned = _out4593;
              _9530_recIdents = _out4594;
              r = _9528_recursiveGen;
              if (object.Equals(_9529_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4595;
              DCOMPUTF16._IOwnership _out4596;
              DCOMPUTF16.COMP.FromOwnership(r, _9529_recOwned, expectedOwnership, out _out4595, out _out4596);
              r = _out4595;
              resultingOwnership = _out4596;
              readIdents = _9530_recIdents;
            }
          } else if (_source358.is_Array) {
            DAST._IType _9531___mcc_h343 = _source358.dtor_element;
            BigInteger _9532___mcc_h344 = _source358.dtor_dims;
            {
              RAST._IExpr _9533_recursiveGen;
              DCOMPUTF16._IOwnership _9534_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9535_recIdents;
              RAST._IExpr _out4597;
              DCOMPUTF16._IOwnership _out4598;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4599;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4597, out _out4598, out _out4599);
              _9533_recursiveGen = _out4597;
              _9534_recOwned = _out4598;
              _9535_recIdents = _out4599;
              r = _9533_recursiveGen;
              if (object.Equals(_9534_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4600;
              DCOMPUTF16._IOwnership _out4601;
              DCOMPUTF16.COMP.FromOwnership(r, _9534_recOwned, expectedOwnership, out _out4600, out _out4601);
              r = _out4600;
              resultingOwnership = _out4601;
              readIdents = _9535_recIdents;
            }
          } else if (_source358.is_Seq) {
            DAST._IType _9536___mcc_h349 = _source358.dtor_element;
            {
              RAST._IExpr _9537_recursiveGen;
              DCOMPUTF16._IOwnership _9538_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9539_recIdents;
              RAST._IExpr _out4602;
              DCOMPUTF16._IOwnership _out4603;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4604;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4602, out _out4603, out _out4604);
              _9537_recursiveGen = _out4602;
              _9538_recOwned = _out4603;
              _9539_recIdents = _out4604;
              r = _9537_recursiveGen;
              if (object.Equals(_9538_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4605;
              DCOMPUTF16._IOwnership _out4606;
              DCOMPUTF16.COMP.FromOwnership(r, _9538_recOwned, expectedOwnership, out _out4605, out _out4606);
              r = _out4605;
              resultingOwnership = _out4606;
              readIdents = _9539_recIdents;
            }
          } else if (_source358.is_Set) {
            DAST._IType _9540___mcc_h352 = _source358.dtor_element;
            {
              RAST._IExpr _9541_recursiveGen;
              DCOMPUTF16._IOwnership _9542_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9543_recIdents;
              RAST._IExpr _out4607;
              DCOMPUTF16._IOwnership _out4608;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4609;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4607, out _out4608, out _out4609);
              _9541_recursiveGen = _out4607;
              _9542_recOwned = _out4608;
              _9543_recIdents = _out4609;
              r = _9541_recursiveGen;
              if (object.Equals(_9542_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4610;
              DCOMPUTF16._IOwnership _out4611;
              DCOMPUTF16.COMP.FromOwnership(r, _9542_recOwned, expectedOwnership, out _out4610, out _out4611);
              r = _out4610;
              resultingOwnership = _out4611;
              readIdents = _9543_recIdents;
            }
          } else if (_source358.is_Multiset) {
            DAST._IType _9544___mcc_h355 = _source358.dtor_element;
            {
              RAST._IExpr _9545_recursiveGen;
              DCOMPUTF16._IOwnership _9546_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9547_recIdents;
              RAST._IExpr _out4612;
              DCOMPUTF16._IOwnership _out4613;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4614;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4612, out _out4613, out _out4614);
              _9545_recursiveGen = _out4612;
              _9546_recOwned = _out4613;
              _9547_recIdents = _out4614;
              r = _9545_recursiveGen;
              if (object.Equals(_9546_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4615;
              DCOMPUTF16._IOwnership _out4616;
              DCOMPUTF16.COMP.FromOwnership(r, _9546_recOwned, expectedOwnership, out _out4615, out _out4616);
              r = _out4615;
              resultingOwnership = _out4616;
              readIdents = _9547_recIdents;
            }
          } else if (_source358.is_Map) {
            DAST._IType _9548___mcc_h358 = _source358.dtor_key;
            DAST._IType _9549___mcc_h359 = _source358.dtor_value;
            {
              RAST._IExpr _9550_recursiveGen;
              DCOMPUTF16._IOwnership _9551_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9552_recIdents;
              RAST._IExpr _out4617;
              DCOMPUTF16._IOwnership _out4618;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4619;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4617, out _out4618, out _out4619);
              _9550_recursiveGen = _out4617;
              _9551_recOwned = _out4618;
              _9552_recIdents = _out4619;
              r = _9550_recursiveGen;
              if (object.Equals(_9551_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4620;
              DCOMPUTF16._IOwnership _out4621;
              DCOMPUTF16.COMP.FromOwnership(r, _9551_recOwned, expectedOwnership, out _out4620, out _out4621);
              r = _out4620;
              resultingOwnership = _out4621;
              readIdents = _9552_recIdents;
            }
          } else if (_source358.is_SetBuilder) {
            DAST._IType _9553___mcc_h364 = _source358.dtor_element;
            {
              RAST._IExpr _9554_recursiveGen;
              DCOMPUTF16._IOwnership _9555_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9556_recIdents;
              RAST._IExpr _out4622;
              DCOMPUTF16._IOwnership _out4623;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4624;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4622, out _out4623, out _out4624);
              _9554_recursiveGen = _out4622;
              _9555_recOwned = _out4623;
              _9556_recIdents = _out4624;
              r = _9554_recursiveGen;
              if (object.Equals(_9555_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4625;
              DCOMPUTF16._IOwnership _out4626;
              DCOMPUTF16.COMP.FromOwnership(r, _9555_recOwned, expectedOwnership, out _out4625, out _out4626);
              r = _out4625;
              resultingOwnership = _out4626;
              readIdents = _9556_recIdents;
            }
          } else if (_source358.is_MapBuilder) {
            DAST._IType _9557___mcc_h367 = _source358.dtor_key;
            DAST._IType _9558___mcc_h368 = _source358.dtor_value;
            {
              RAST._IExpr _9559_recursiveGen;
              DCOMPUTF16._IOwnership _9560_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9561_recIdents;
              RAST._IExpr _out4627;
              DCOMPUTF16._IOwnership _out4628;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4629;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4627, out _out4628, out _out4629);
              _9559_recursiveGen = _out4627;
              _9560_recOwned = _out4628;
              _9561_recIdents = _out4629;
              r = _9559_recursiveGen;
              if (object.Equals(_9560_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4630;
              DCOMPUTF16._IOwnership _out4631;
              DCOMPUTF16.COMP.FromOwnership(r, _9560_recOwned, expectedOwnership, out _out4630, out _out4631);
              r = _out4630;
              resultingOwnership = _out4631;
              readIdents = _9561_recIdents;
            }
          } else if (_source358.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9562___mcc_h373 = _source358.dtor_args;
            DAST._IType _9563___mcc_h374 = _source358.dtor_result;
            {
              RAST._IExpr _9564_recursiveGen;
              DCOMPUTF16._IOwnership _9565_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9566_recIdents;
              RAST._IExpr _out4632;
              DCOMPUTF16._IOwnership _out4633;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4634;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4632, out _out4633, out _out4634);
              _9564_recursiveGen = _out4632;
              _9565_recOwned = _out4633;
              _9566_recIdents = _out4634;
              r = _9564_recursiveGen;
              if (object.Equals(_9565_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4635;
              DCOMPUTF16._IOwnership _out4636;
              DCOMPUTF16.COMP.FromOwnership(r, _9565_recOwned, expectedOwnership, out _out4635, out _out4636);
              r = _out4635;
              resultingOwnership = _out4636;
              readIdents = _9566_recIdents;
            }
          } else if (_source358.is_Primitive) {
            DAST._IPrimitive _9567___mcc_h379 = _source358.dtor_Primitive_a0;
            {
              RAST._IExpr _9568_recursiveGen;
              DCOMPUTF16._IOwnership _9569_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9570_recIdents;
              RAST._IExpr _out4637;
              DCOMPUTF16._IOwnership _out4638;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4639;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4637, out _out4638, out _out4639);
              _9568_recursiveGen = _out4637;
              _9569_recOwned = _out4638;
              _9570_recIdents = _out4639;
              r = _9568_recursiveGen;
              if (object.Equals(_9569_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4640;
              DCOMPUTF16._IOwnership _out4641;
              DCOMPUTF16.COMP.FromOwnership(r, _9569_recOwned, expectedOwnership, out _out4640, out _out4641);
              r = _out4640;
              resultingOwnership = _out4641;
              readIdents = _9570_recIdents;
            }
          } else if (_source358.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9571___mcc_h382 = _source358.dtor_Passthrough_a0;
            {
              RAST._IExpr _9572_recursiveGen;
              DCOMPUTF16._IOwnership _9573_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9574_recIdents;
              RAST._IExpr _out4642;
              DCOMPUTF16._IOwnership _out4643;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4644;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4642, out _out4643, out _out4644);
              _9572_recursiveGen = _out4642;
              _9573_recOwned = _out4643;
              _9574_recIdents = _out4644;
              r = _9572_recursiveGen;
              if (object.Equals(_9573_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4645;
              DCOMPUTF16._IOwnership _out4646;
              DCOMPUTF16.COMP.FromOwnership(r, _9573_recOwned, expectedOwnership, out _out4645, out _out4646);
              r = _out4645;
              resultingOwnership = _out4646;
              readIdents = _9574_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9575___mcc_h385 = _source358.dtor_TypeArg_a0;
            {
              RAST._IExpr _9576_recursiveGen;
              DCOMPUTF16._IOwnership _9577_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9578_recIdents;
              RAST._IExpr _out4647;
              DCOMPUTF16._IOwnership _out4648;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4649;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4647, out _out4648, out _out4649);
              _9576_recursiveGen = _out4647;
              _9577_recOwned = _out4648;
              _9578_recIdents = _out4649;
              r = _9576_recursiveGen;
              if (object.Equals(_9577_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out4650;
              DCOMPUTF16._IOwnership _out4651;
              DCOMPUTF16.COMP.FromOwnership(r, _9577_recOwned, expectedOwnership, out _out4650, out _out4651);
              r = _out4650;
              resultingOwnership = _out4651;
              readIdents = _9578_recIdents;
            }
          }
        } else if (_source321.is_Tuple) {
          Dafny.ISequence<DAST._IType> _9579___mcc_h388 = _source321.dtor_Tuple_a0;
          DAST._IType _source360 = _8728___mcc_h1;
          if (_source360.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9580___mcc_h392 = _source360.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9581___mcc_h393 = _source360.dtor_typeArgs;
            DAST._IResolvedType _9582___mcc_h394 = _source360.dtor_resolved;
            DAST._IResolvedType _source361 = _9582___mcc_h394;
            if (_source361.is_AllocatedDatatype) {
              DAST._IDatatypeType _9583___mcc_h398 = _source361.dtor_datatypeType;
              {
                RAST._IType _9584_fromTpeGen;
                RAST._IType _out4652;
                _out4652 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9584_fromTpeGen = _out4652;
                RAST._IType _9585_toTpeGen;
                RAST._IType _out4653;
                _out4653 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9585_toTpeGen = _out4653;
                RAST._IExpr _9586_recursiveGen;
                DCOMPUTF16._IOwnership _9587_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9588_recIdents;
                RAST._IExpr _out4654;
                DCOMPUTF16._IOwnership _out4655;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4656;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4654, out _out4655, out _out4656);
                _9586_recursiveGen = _out4654;
                _9587_recOwned = _out4655;
                _9588_recIdents = _out4656;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9586_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9584_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9585_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4657;
                DCOMPUTF16._IOwnership _out4658;
                DCOMPUTF16.COMP.FromOwnership(r, _9587_recOwned, expectedOwnership, out _out4657, out _out4658);
                r = _out4657;
                resultingOwnership = _out4658;
                readIdents = _9588_recIdents;
              }
            } else if (_source361.is_Datatype) {
              DAST._IDatatypeType _9589___mcc_h400 = _source361.dtor_datatypeType;
              {
                RAST._IType _9590_fromTpeGen;
                RAST._IType _out4659;
                _out4659 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9590_fromTpeGen = _out4659;
                RAST._IType _9591_toTpeGen;
                RAST._IType _out4660;
                _out4660 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9591_toTpeGen = _out4660;
                RAST._IExpr _9592_recursiveGen;
                DCOMPUTF16._IOwnership _9593_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9594_recIdents;
                RAST._IExpr _out4661;
                DCOMPUTF16._IOwnership _out4662;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4663;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4661, out _out4662, out _out4663);
                _9592_recursiveGen = _out4661;
                _9593_recOwned = _out4662;
                _9594_recIdents = _out4663;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9592_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9590_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9591_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4664;
                DCOMPUTF16._IOwnership _out4665;
                DCOMPUTF16.COMP.FromOwnership(r, _9593_recOwned, expectedOwnership, out _out4664, out _out4665);
                r = _out4664;
                resultingOwnership = _out4665;
                readIdents = _9594_recIdents;
              }
            } else if (_source361.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9595___mcc_h402 = _source361.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9596___mcc_h403 = _source361.dtor_attributes;
              {
                RAST._IType _9597_fromTpeGen;
                RAST._IType _out4666;
                _out4666 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9597_fromTpeGen = _out4666;
                RAST._IType _9598_toTpeGen;
                RAST._IType _out4667;
                _out4667 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9598_toTpeGen = _out4667;
                RAST._IExpr _9599_recursiveGen;
                DCOMPUTF16._IOwnership _9600_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9601_recIdents;
                RAST._IExpr _out4668;
                DCOMPUTF16._IOwnership _out4669;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4670;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4668, out _out4669, out _out4670);
                _9599_recursiveGen = _out4668;
                _9600_recOwned = _out4669;
                _9601_recIdents = _out4670;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9599_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9597_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9598_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4671;
                DCOMPUTF16._IOwnership _out4672;
                DCOMPUTF16.COMP.FromOwnership(r, _9600_recOwned, expectedOwnership, out _out4671, out _out4672);
                r = _out4671;
                resultingOwnership = _out4672;
                readIdents = _9601_recIdents;
              }
            } else {
              DAST._IType _9602___mcc_h406 = _source361.dtor_baseType;
              DAST._INewtypeRange _9603___mcc_h407 = _source361.dtor_range;
              bool _9604___mcc_h408 = _source361.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9605___mcc_h409 = _source361.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9606_attributes = _9605___mcc_h409;
              bool _9607_erase = _9604___mcc_h408;
              DAST._INewtypeRange _9608_range = _9603___mcc_h407;
              DAST._IType _9609_b = _9602___mcc_h406;
              {
                Std.Wrappers._IOption<RAST._IType> _9610_nativeToType;
                _9610_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9609_b, _9608_range);
                if (object.Equals(_8722_fromTpe, _9609_b)) {
                  RAST._IExpr _9611_recursiveGen;
                  DCOMPUTF16._IOwnership _9612_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9613_recIdents;
                  RAST._IExpr _out4673;
                  DCOMPUTF16._IOwnership _out4674;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4675;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4673, out _out4674, out _out4675);
                  _9611_recursiveGen = _out4673;
                  _9612_recOwned = _out4674;
                  _9613_recIdents = _out4675;
                  readIdents = _9613_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source362 = _9610_nativeToType;
                  if (_source362.is_None) {
                    if (_9607_erase) {
                      r = _9611_recursiveGen;
                    } else {
                      RAST._IType _9614_rhsType;
                      RAST._IType _out4676;
                      _out4676 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _9614_rhsType = _out4676;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9614_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9611_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4677;
                    DCOMPUTF16._IOwnership _out4678;
                    DCOMPUTF16.COMP.FromOwnership(r, _9612_recOwned, expectedOwnership, out _out4677, out _out4678);
                    r = _out4677;
                    resultingOwnership = _out4678;
                  } else {
                    RAST._IType _9615___mcc_h1591 = _source362.dtor_value;
                    RAST._IType _9616_v = _9615___mcc_h1591;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9611_recursiveGen, RAST.Expr.create_ExprFromType(_9616_v)));
                    RAST._IExpr _out4679;
                    DCOMPUTF16._IOwnership _out4680;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4679, out _out4680);
                    r = _out4679;
                    resultingOwnership = _out4680;
                  }
                } else {
                  if ((_9610_nativeToType).is_Some) {
                    DAST._IType _source363 = _8722_fromTpe;
                    if (_source363.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9617___mcc_h1592 = _source363.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9618___mcc_h1593 = _source363.dtor_typeArgs;
                      DAST._IResolvedType _9619___mcc_h1594 = _source363.dtor_resolved;
                      DAST._IResolvedType _source364 = _9619___mcc_h1594;
                      if (_source364.is_AllocatedDatatype) {
                        DAST._IDatatypeType _9620___mcc_h1598 = _source364.dtor_datatypeType;
                      } else if (_source364.is_Datatype) {
                        DAST._IDatatypeType _9621___mcc_h1600 = _source364.dtor_datatypeType;
                      } else if (_source364.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9622___mcc_h1602 = _source364.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9623___mcc_h1603 = _source364.dtor_attributes;
                      } else {
                        DAST._IType _9624___mcc_h1606 = _source364.dtor_baseType;
                        DAST._INewtypeRange _9625___mcc_h1607 = _source364.dtor_range;
                        bool _9626___mcc_h1608 = _source364.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9627___mcc_h1609 = _source364.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9628_attributes0 = _9627___mcc_h1609;
                        bool _9629_erase0 = _9626___mcc_h1608;
                        DAST._INewtypeRange _9630_range0 = _9625___mcc_h1607;
                        DAST._IType _9631_b0 = _9624___mcc_h1606;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9632_nativeFromType;
                          _9632_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9631_b0, _9630_range0);
                          if ((_9632_nativeFromType).is_Some) {
                            RAST._IExpr _9633_recursiveGen;
                            DCOMPUTF16._IOwnership _9634_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9635_recIdents;
                            RAST._IExpr _out4681;
                            DCOMPUTF16._IOwnership _out4682;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4683;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4681, out _out4682, out _out4683);
                            _9633_recursiveGen = _out4681;
                            _9634_recOwned = _out4682;
                            _9635_recIdents = _out4683;
                            RAST._IExpr _out4684;
                            DCOMPUTF16._IOwnership _out4685;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9633_recursiveGen, (_9610_nativeToType).dtor_value), _9634_recOwned, expectedOwnership, out _out4684, out _out4685);
                            r = _out4684;
                            resultingOwnership = _out4685;
                            readIdents = _9635_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source363.is_Nullable) {
                      DAST._IType _9636___mcc_h1614 = _source363.dtor_Nullable_a0;
                    } else if (_source363.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9637___mcc_h1616 = _source363.dtor_Tuple_a0;
                    } else if (_source363.is_Array) {
                      DAST._IType _9638___mcc_h1618 = _source363.dtor_element;
                      BigInteger _9639___mcc_h1619 = _source363.dtor_dims;
                    } else if (_source363.is_Seq) {
                      DAST._IType _9640___mcc_h1622 = _source363.dtor_element;
                    } else if (_source363.is_Set) {
                      DAST._IType _9641___mcc_h1624 = _source363.dtor_element;
                    } else if (_source363.is_Multiset) {
                      DAST._IType _9642___mcc_h1626 = _source363.dtor_element;
                    } else if (_source363.is_Map) {
                      DAST._IType _9643___mcc_h1628 = _source363.dtor_key;
                      DAST._IType _9644___mcc_h1629 = _source363.dtor_value;
                    } else if (_source363.is_SetBuilder) {
                      DAST._IType _9645___mcc_h1632 = _source363.dtor_element;
                    } else if (_source363.is_MapBuilder) {
                      DAST._IType _9646___mcc_h1634 = _source363.dtor_key;
                      DAST._IType _9647___mcc_h1635 = _source363.dtor_value;
                    } else if (_source363.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9648___mcc_h1638 = _source363.dtor_args;
                      DAST._IType _9649___mcc_h1639 = _source363.dtor_result;
                    } else if (_source363.is_Primitive) {
                      DAST._IPrimitive _9650___mcc_h1642 = _source363.dtor_Primitive_a0;
                    } else if (_source363.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9651___mcc_h1644 = _source363.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9652___mcc_h1646 = _source363.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9653_recursiveGen;
                      DCOMPUTF16._IOwnership _9654_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9655_recIdents;
                      RAST._IExpr _out4686;
                      DCOMPUTF16._IOwnership _out4687;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4688;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4686, out _out4687, out _out4688);
                      _9653_recursiveGen = _out4686;
                      _9654_recOwned = _out4687;
                      _9655_recIdents = _out4688;
                      RAST._IExpr _out4689;
                      DCOMPUTF16._IOwnership _out4690;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9653_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9610_nativeToType).dtor_value), _9654_recOwned, expectedOwnership, out _out4689, out _out4690);
                      r = _out4689;
                      resultingOwnership = _out4690;
                      readIdents = _9655_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4691;
                  DCOMPUTF16._IOwnership _out4692;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4693;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9609_b), _9609_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4691, out _out4692, out _out4693);
                  r = _out4691;
                  resultingOwnership = _out4692;
                  readIdents = _out4693;
                }
              }
            }
          } else if (_source360.is_Nullable) {
            DAST._IType _9656___mcc_h414 = _source360.dtor_Nullable_a0;
            {
              RAST._IExpr _9657_recursiveGen;
              DCOMPUTF16._IOwnership _9658_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9659_recIdents;
              RAST._IExpr _out4694;
              DCOMPUTF16._IOwnership _out4695;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4696;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4694, out _out4695, out _out4696);
              _9657_recursiveGen = _out4694;
              _9658_recOwned = _out4695;
              _9659_recIdents = _out4696;
              r = _9657_recursiveGen;
              if (object.Equals(_9658_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4697;
              DCOMPUTF16._IOwnership _out4698;
              DCOMPUTF16.COMP.FromOwnership(r, _9658_recOwned, expectedOwnership, out _out4697, out _out4698);
              r = _out4697;
              resultingOwnership = _out4698;
              readIdents = _9659_recIdents;
            }
          } else if (_source360.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9660___mcc_h416 = _source360.dtor_Tuple_a0;
            {
              RAST._IType _9661_fromTpeGen;
              RAST._IType _out4699;
              _out4699 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9661_fromTpeGen = _out4699;
              RAST._IType _9662_toTpeGen;
              RAST._IType _out4700;
              _out4700 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9662_toTpeGen = _out4700;
              RAST._IExpr _9663_recursiveGen;
              DCOMPUTF16._IOwnership _9664_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9665_recIdents;
              RAST._IExpr _out4701;
              DCOMPUTF16._IOwnership _out4702;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4703;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4701, out _out4702, out _out4703);
              _9663_recursiveGen = _out4701;
              _9664_recOwned = _out4702;
              _9665_recIdents = _out4703;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9663_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9661_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9662_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4704;
              DCOMPUTF16._IOwnership _out4705;
              DCOMPUTF16.COMP.FromOwnership(r, _9664_recOwned, expectedOwnership, out _out4704, out _out4705);
              r = _out4704;
              resultingOwnership = _out4705;
              readIdents = _9665_recIdents;
            }
          } else if (_source360.is_Array) {
            DAST._IType _9666___mcc_h418 = _source360.dtor_element;
            BigInteger _9667___mcc_h419 = _source360.dtor_dims;
            {
              RAST._IType _9668_fromTpeGen;
              RAST._IType _out4706;
              _out4706 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9668_fromTpeGen = _out4706;
              RAST._IType _9669_toTpeGen;
              RAST._IType _out4707;
              _out4707 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9669_toTpeGen = _out4707;
              RAST._IExpr _9670_recursiveGen;
              DCOMPUTF16._IOwnership _9671_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9672_recIdents;
              RAST._IExpr _out4708;
              DCOMPUTF16._IOwnership _out4709;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4710;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4708, out _out4709, out _out4710);
              _9670_recursiveGen = _out4708;
              _9671_recOwned = _out4709;
              _9672_recIdents = _out4710;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9670_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9668_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9669_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4711;
              DCOMPUTF16._IOwnership _out4712;
              DCOMPUTF16.COMP.FromOwnership(r, _9671_recOwned, expectedOwnership, out _out4711, out _out4712);
              r = _out4711;
              resultingOwnership = _out4712;
              readIdents = _9672_recIdents;
            }
          } else if (_source360.is_Seq) {
            DAST._IType _9673___mcc_h422 = _source360.dtor_element;
            {
              RAST._IType _9674_fromTpeGen;
              RAST._IType _out4713;
              _out4713 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9674_fromTpeGen = _out4713;
              RAST._IType _9675_toTpeGen;
              RAST._IType _out4714;
              _out4714 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9675_toTpeGen = _out4714;
              RAST._IExpr _9676_recursiveGen;
              DCOMPUTF16._IOwnership _9677_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9678_recIdents;
              RAST._IExpr _out4715;
              DCOMPUTF16._IOwnership _out4716;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4717;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4715, out _out4716, out _out4717);
              _9676_recursiveGen = _out4715;
              _9677_recOwned = _out4716;
              _9678_recIdents = _out4717;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9676_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9674_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9675_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4718;
              DCOMPUTF16._IOwnership _out4719;
              DCOMPUTF16.COMP.FromOwnership(r, _9677_recOwned, expectedOwnership, out _out4718, out _out4719);
              r = _out4718;
              resultingOwnership = _out4719;
              readIdents = _9678_recIdents;
            }
          } else if (_source360.is_Set) {
            DAST._IType _9679___mcc_h424 = _source360.dtor_element;
            {
              RAST._IType _9680_fromTpeGen;
              RAST._IType _out4720;
              _out4720 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9680_fromTpeGen = _out4720;
              RAST._IType _9681_toTpeGen;
              RAST._IType _out4721;
              _out4721 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9681_toTpeGen = _out4721;
              RAST._IExpr _9682_recursiveGen;
              DCOMPUTF16._IOwnership _9683_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9684_recIdents;
              RAST._IExpr _out4722;
              DCOMPUTF16._IOwnership _out4723;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4724;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4722, out _out4723, out _out4724);
              _9682_recursiveGen = _out4722;
              _9683_recOwned = _out4723;
              _9684_recIdents = _out4724;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9682_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9680_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9681_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4725;
              DCOMPUTF16._IOwnership _out4726;
              DCOMPUTF16.COMP.FromOwnership(r, _9683_recOwned, expectedOwnership, out _out4725, out _out4726);
              r = _out4725;
              resultingOwnership = _out4726;
              readIdents = _9684_recIdents;
            }
          } else if (_source360.is_Multiset) {
            DAST._IType _9685___mcc_h426 = _source360.dtor_element;
            {
              RAST._IType _9686_fromTpeGen;
              RAST._IType _out4727;
              _out4727 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9686_fromTpeGen = _out4727;
              RAST._IType _9687_toTpeGen;
              RAST._IType _out4728;
              _out4728 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9687_toTpeGen = _out4728;
              RAST._IExpr _9688_recursiveGen;
              DCOMPUTF16._IOwnership _9689_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9690_recIdents;
              RAST._IExpr _out4729;
              DCOMPUTF16._IOwnership _out4730;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4731;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4729, out _out4730, out _out4731);
              _9688_recursiveGen = _out4729;
              _9689_recOwned = _out4730;
              _9690_recIdents = _out4731;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9688_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9686_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9687_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4732;
              DCOMPUTF16._IOwnership _out4733;
              DCOMPUTF16.COMP.FromOwnership(r, _9689_recOwned, expectedOwnership, out _out4732, out _out4733);
              r = _out4732;
              resultingOwnership = _out4733;
              readIdents = _9690_recIdents;
            }
          } else if (_source360.is_Map) {
            DAST._IType _9691___mcc_h428 = _source360.dtor_key;
            DAST._IType _9692___mcc_h429 = _source360.dtor_value;
            {
              RAST._IType _9693_fromTpeGen;
              RAST._IType _out4734;
              _out4734 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9693_fromTpeGen = _out4734;
              RAST._IType _9694_toTpeGen;
              RAST._IType _out4735;
              _out4735 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9694_toTpeGen = _out4735;
              RAST._IExpr _9695_recursiveGen;
              DCOMPUTF16._IOwnership _9696_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9697_recIdents;
              RAST._IExpr _out4736;
              DCOMPUTF16._IOwnership _out4737;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4738;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4736, out _out4737, out _out4738);
              _9695_recursiveGen = _out4736;
              _9696_recOwned = _out4737;
              _9697_recIdents = _out4738;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9695_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9693_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9694_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4739;
              DCOMPUTF16._IOwnership _out4740;
              DCOMPUTF16.COMP.FromOwnership(r, _9696_recOwned, expectedOwnership, out _out4739, out _out4740);
              r = _out4739;
              resultingOwnership = _out4740;
              readIdents = _9697_recIdents;
            }
          } else if (_source360.is_SetBuilder) {
            DAST._IType _9698___mcc_h432 = _source360.dtor_element;
            {
              RAST._IType _9699_fromTpeGen;
              RAST._IType _out4741;
              _out4741 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9699_fromTpeGen = _out4741;
              RAST._IType _9700_toTpeGen;
              RAST._IType _out4742;
              _out4742 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9700_toTpeGen = _out4742;
              RAST._IExpr _9701_recursiveGen;
              DCOMPUTF16._IOwnership _9702_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9703_recIdents;
              RAST._IExpr _out4743;
              DCOMPUTF16._IOwnership _out4744;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4745;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4743, out _out4744, out _out4745);
              _9701_recursiveGen = _out4743;
              _9702_recOwned = _out4744;
              _9703_recIdents = _out4745;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9701_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9699_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9700_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4746;
              DCOMPUTF16._IOwnership _out4747;
              DCOMPUTF16.COMP.FromOwnership(r, _9702_recOwned, expectedOwnership, out _out4746, out _out4747);
              r = _out4746;
              resultingOwnership = _out4747;
              readIdents = _9703_recIdents;
            }
          } else if (_source360.is_MapBuilder) {
            DAST._IType _9704___mcc_h434 = _source360.dtor_key;
            DAST._IType _9705___mcc_h435 = _source360.dtor_value;
            {
              RAST._IType _9706_fromTpeGen;
              RAST._IType _out4748;
              _out4748 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9706_fromTpeGen = _out4748;
              RAST._IType _9707_toTpeGen;
              RAST._IType _out4749;
              _out4749 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9707_toTpeGen = _out4749;
              RAST._IExpr _9708_recursiveGen;
              DCOMPUTF16._IOwnership _9709_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9710_recIdents;
              RAST._IExpr _out4750;
              DCOMPUTF16._IOwnership _out4751;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4752;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4750, out _out4751, out _out4752);
              _9708_recursiveGen = _out4750;
              _9709_recOwned = _out4751;
              _9710_recIdents = _out4752;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9708_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9706_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9707_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4753;
              DCOMPUTF16._IOwnership _out4754;
              DCOMPUTF16.COMP.FromOwnership(r, _9709_recOwned, expectedOwnership, out _out4753, out _out4754);
              r = _out4753;
              resultingOwnership = _out4754;
              readIdents = _9710_recIdents;
            }
          } else if (_source360.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9711___mcc_h438 = _source360.dtor_args;
            DAST._IType _9712___mcc_h439 = _source360.dtor_result;
            {
              RAST._IType _9713_fromTpeGen;
              RAST._IType _out4755;
              _out4755 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9713_fromTpeGen = _out4755;
              RAST._IType _9714_toTpeGen;
              RAST._IType _out4756;
              _out4756 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9714_toTpeGen = _out4756;
              RAST._IExpr _9715_recursiveGen;
              DCOMPUTF16._IOwnership _9716_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9717_recIdents;
              RAST._IExpr _out4757;
              DCOMPUTF16._IOwnership _out4758;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4759;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4757, out _out4758, out _out4759);
              _9715_recursiveGen = _out4757;
              _9716_recOwned = _out4758;
              _9717_recIdents = _out4759;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9715_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9713_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9714_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4760;
              DCOMPUTF16._IOwnership _out4761;
              DCOMPUTF16.COMP.FromOwnership(r, _9716_recOwned, expectedOwnership, out _out4760, out _out4761);
              r = _out4760;
              resultingOwnership = _out4761;
              readIdents = _9717_recIdents;
            }
          } else if (_source360.is_Primitive) {
            DAST._IPrimitive _9718___mcc_h442 = _source360.dtor_Primitive_a0;
            {
              RAST._IType _9719_fromTpeGen;
              RAST._IType _out4762;
              _out4762 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9719_fromTpeGen = _out4762;
              RAST._IType _9720_toTpeGen;
              RAST._IType _out4763;
              _out4763 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9720_toTpeGen = _out4763;
              RAST._IExpr _9721_recursiveGen;
              DCOMPUTF16._IOwnership _9722_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9723_recIdents;
              RAST._IExpr _out4764;
              DCOMPUTF16._IOwnership _out4765;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4766;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4764, out _out4765, out _out4766);
              _9721_recursiveGen = _out4764;
              _9722_recOwned = _out4765;
              _9723_recIdents = _out4766;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9721_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9719_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9720_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4767;
              DCOMPUTF16._IOwnership _out4768;
              DCOMPUTF16.COMP.FromOwnership(r, _9722_recOwned, expectedOwnership, out _out4767, out _out4768);
              r = _out4767;
              resultingOwnership = _out4768;
              readIdents = _9723_recIdents;
            }
          } else if (_source360.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9724___mcc_h444 = _source360.dtor_Passthrough_a0;
            {
              RAST._IType _9725_fromTpeGen;
              RAST._IType _out4769;
              _out4769 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9725_fromTpeGen = _out4769;
              RAST._IType _9726_toTpeGen;
              RAST._IType _out4770;
              _out4770 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9726_toTpeGen = _out4770;
              RAST._IExpr _9727_recursiveGen;
              DCOMPUTF16._IOwnership _9728_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9729_recIdents;
              RAST._IExpr _out4771;
              DCOMPUTF16._IOwnership _out4772;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4773;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4771, out _out4772, out _out4773);
              _9727_recursiveGen = _out4771;
              _9728_recOwned = _out4772;
              _9729_recIdents = _out4773;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9727_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9725_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9726_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4774;
              DCOMPUTF16._IOwnership _out4775;
              DCOMPUTF16.COMP.FromOwnership(r, _9728_recOwned, expectedOwnership, out _out4774, out _out4775);
              r = _out4774;
              resultingOwnership = _out4775;
              readIdents = _9729_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9730___mcc_h446 = _source360.dtor_TypeArg_a0;
            {
              RAST._IType _9731_fromTpeGen;
              RAST._IType _out4776;
              _out4776 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9731_fromTpeGen = _out4776;
              RAST._IType _9732_toTpeGen;
              RAST._IType _out4777;
              _out4777 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9732_toTpeGen = _out4777;
              RAST._IExpr _9733_recursiveGen;
              DCOMPUTF16._IOwnership _9734_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9735_recIdents;
              RAST._IExpr _out4778;
              DCOMPUTF16._IOwnership _out4779;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4780;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4778, out _out4779, out _out4780);
              _9733_recursiveGen = _out4778;
              _9734_recOwned = _out4779;
              _9735_recIdents = _out4780;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9733_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9731_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9732_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4781;
              DCOMPUTF16._IOwnership _out4782;
              DCOMPUTF16.COMP.FromOwnership(r, _9734_recOwned, expectedOwnership, out _out4781, out _out4782);
              r = _out4781;
              resultingOwnership = _out4782;
              readIdents = _9735_recIdents;
            }
          }
        } else if (_source321.is_Array) {
          DAST._IType _9736___mcc_h448 = _source321.dtor_element;
          BigInteger _9737___mcc_h449 = _source321.dtor_dims;
          DAST._IType _source365 = _8728___mcc_h1;
          if (_source365.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9738___mcc_h456 = _source365.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9739___mcc_h457 = _source365.dtor_typeArgs;
            DAST._IResolvedType _9740___mcc_h458 = _source365.dtor_resolved;
            DAST._IResolvedType _source366 = _9740___mcc_h458;
            if (_source366.is_AllocatedDatatype) {
              DAST._IDatatypeType _9741___mcc_h462 = _source366.dtor_datatypeType;
              {
                RAST._IType _9742_fromTpeGen;
                RAST._IType _out4783;
                _out4783 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9742_fromTpeGen = _out4783;
                RAST._IType _9743_toTpeGen;
                RAST._IType _out4784;
                _out4784 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9743_toTpeGen = _out4784;
                RAST._IExpr _9744_recursiveGen;
                DCOMPUTF16._IOwnership _9745_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9746_recIdents;
                RAST._IExpr _out4785;
                DCOMPUTF16._IOwnership _out4786;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4787;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4785, out _out4786, out _out4787);
                _9744_recursiveGen = _out4785;
                _9745_recOwned = _out4786;
                _9746_recIdents = _out4787;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9744_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9742_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9743_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4788;
                DCOMPUTF16._IOwnership _out4789;
                DCOMPUTF16.COMP.FromOwnership(r, _9745_recOwned, expectedOwnership, out _out4788, out _out4789);
                r = _out4788;
                resultingOwnership = _out4789;
                readIdents = _9746_recIdents;
              }
            } else if (_source366.is_Datatype) {
              DAST._IDatatypeType _9747___mcc_h464 = _source366.dtor_datatypeType;
              {
                RAST._IType _9748_fromTpeGen;
                RAST._IType _out4790;
                _out4790 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9748_fromTpeGen = _out4790;
                RAST._IType _9749_toTpeGen;
                RAST._IType _out4791;
                _out4791 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9749_toTpeGen = _out4791;
                RAST._IExpr _9750_recursiveGen;
                DCOMPUTF16._IOwnership _9751_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9752_recIdents;
                RAST._IExpr _out4792;
                DCOMPUTF16._IOwnership _out4793;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4794;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4792, out _out4793, out _out4794);
                _9750_recursiveGen = _out4792;
                _9751_recOwned = _out4793;
                _9752_recIdents = _out4794;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9750_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9748_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9749_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4795;
                DCOMPUTF16._IOwnership _out4796;
                DCOMPUTF16.COMP.FromOwnership(r, _9751_recOwned, expectedOwnership, out _out4795, out _out4796);
                r = _out4795;
                resultingOwnership = _out4796;
                readIdents = _9752_recIdents;
              }
            } else if (_source366.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9753___mcc_h466 = _source366.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9754___mcc_h467 = _source366.dtor_attributes;
              {
                RAST._IType _9755_fromTpeGen;
                RAST._IType _out4797;
                _out4797 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9755_fromTpeGen = _out4797;
                RAST._IType _9756_toTpeGen;
                RAST._IType _out4798;
                _out4798 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9756_toTpeGen = _out4798;
                RAST._IExpr _9757_recursiveGen;
                DCOMPUTF16._IOwnership _9758_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9759_recIdents;
                RAST._IExpr _out4799;
                DCOMPUTF16._IOwnership _out4800;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4801;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4799, out _out4800, out _out4801);
                _9757_recursiveGen = _out4799;
                _9758_recOwned = _out4800;
                _9759_recIdents = _out4801;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9757_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9755_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9756_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4802;
                DCOMPUTF16._IOwnership _out4803;
                DCOMPUTF16.COMP.FromOwnership(r, _9758_recOwned, expectedOwnership, out _out4802, out _out4803);
                r = _out4802;
                resultingOwnership = _out4803;
                readIdents = _9759_recIdents;
              }
            } else {
              DAST._IType _9760___mcc_h470 = _source366.dtor_baseType;
              DAST._INewtypeRange _9761___mcc_h471 = _source366.dtor_range;
              bool _9762___mcc_h472 = _source366.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9763___mcc_h473 = _source366.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9764_attributes = _9763___mcc_h473;
              bool _9765_erase = _9762___mcc_h472;
              DAST._INewtypeRange _9766_range = _9761___mcc_h471;
              DAST._IType _9767_b = _9760___mcc_h470;
              {
                Std.Wrappers._IOption<RAST._IType> _9768_nativeToType;
                _9768_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9767_b, _9766_range);
                if (object.Equals(_8722_fromTpe, _9767_b)) {
                  RAST._IExpr _9769_recursiveGen;
                  DCOMPUTF16._IOwnership _9770_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9771_recIdents;
                  RAST._IExpr _out4804;
                  DCOMPUTF16._IOwnership _out4805;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4806;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4804, out _out4805, out _out4806);
                  _9769_recursiveGen = _out4804;
                  _9770_recOwned = _out4805;
                  _9771_recIdents = _out4806;
                  readIdents = _9771_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source367 = _9768_nativeToType;
                  if (_source367.is_None) {
                    if (_9765_erase) {
                      r = _9769_recursiveGen;
                    } else {
                      RAST._IType _9772_rhsType;
                      RAST._IType _out4807;
                      _out4807 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _9772_rhsType = _out4807;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9772_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9769_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4808;
                    DCOMPUTF16._IOwnership _out4809;
                    DCOMPUTF16.COMP.FromOwnership(r, _9770_recOwned, expectedOwnership, out _out4808, out _out4809);
                    r = _out4808;
                    resultingOwnership = _out4809;
                  } else {
                    RAST._IType _9773___mcc_h1648 = _source367.dtor_value;
                    RAST._IType _9774_v = _9773___mcc_h1648;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9769_recursiveGen, RAST.Expr.create_ExprFromType(_9774_v)));
                    RAST._IExpr _out4810;
                    DCOMPUTF16._IOwnership _out4811;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4810, out _out4811);
                    r = _out4810;
                    resultingOwnership = _out4811;
                  }
                } else {
                  if ((_9768_nativeToType).is_Some) {
                    DAST._IType _source368 = _8722_fromTpe;
                    if (_source368.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9775___mcc_h1649 = _source368.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9776___mcc_h1650 = _source368.dtor_typeArgs;
                      DAST._IResolvedType _9777___mcc_h1651 = _source368.dtor_resolved;
                      DAST._IResolvedType _source369 = _9777___mcc_h1651;
                      if (_source369.is_AllocatedDatatype) {
                        DAST._IDatatypeType _9778___mcc_h1655 = _source369.dtor_datatypeType;
                      } else if (_source369.is_Datatype) {
                        DAST._IDatatypeType _9779___mcc_h1657 = _source369.dtor_datatypeType;
                      } else if (_source369.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9780___mcc_h1659 = _source369.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9781___mcc_h1660 = _source369.dtor_attributes;
                      } else {
                        DAST._IType _9782___mcc_h1663 = _source369.dtor_baseType;
                        DAST._INewtypeRange _9783___mcc_h1664 = _source369.dtor_range;
                        bool _9784___mcc_h1665 = _source369.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9785___mcc_h1666 = _source369.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9786_attributes0 = _9785___mcc_h1666;
                        bool _9787_erase0 = _9784___mcc_h1665;
                        DAST._INewtypeRange _9788_range0 = _9783___mcc_h1664;
                        DAST._IType _9789_b0 = _9782___mcc_h1663;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9790_nativeFromType;
                          _9790_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9789_b0, _9788_range0);
                          if ((_9790_nativeFromType).is_Some) {
                            RAST._IExpr _9791_recursiveGen;
                            DCOMPUTF16._IOwnership _9792_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9793_recIdents;
                            RAST._IExpr _out4812;
                            DCOMPUTF16._IOwnership _out4813;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4814;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4812, out _out4813, out _out4814);
                            _9791_recursiveGen = _out4812;
                            _9792_recOwned = _out4813;
                            _9793_recIdents = _out4814;
                            RAST._IExpr _out4815;
                            DCOMPUTF16._IOwnership _out4816;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9791_recursiveGen, (_9768_nativeToType).dtor_value), _9792_recOwned, expectedOwnership, out _out4815, out _out4816);
                            r = _out4815;
                            resultingOwnership = _out4816;
                            readIdents = _9793_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source368.is_Nullable) {
                      DAST._IType _9794___mcc_h1671 = _source368.dtor_Nullable_a0;
                    } else if (_source368.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9795___mcc_h1673 = _source368.dtor_Tuple_a0;
                    } else if (_source368.is_Array) {
                      DAST._IType _9796___mcc_h1675 = _source368.dtor_element;
                      BigInteger _9797___mcc_h1676 = _source368.dtor_dims;
                    } else if (_source368.is_Seq) {
                      DAST._IType _9798___mcc_h1679 = _source368.dtor_element;
                    } else if (_source368.is_Set) {
                      DAST._IType _9799___mcc_h1681 = _source368.dtor_element;
                    } else if (_source368.is_Multiset) {
                      DAST._IType _9800___mcc_h1683 = _source368.dtor_element;
                    } else if (_source368.is_Map) {
                      DAST._IType _9801___mcc_h1685 = _source368.dtor_key;
                      DAST._IType _9802___mcc_h1686 = _source368.dtor_value;
                    } else if (_source368.is_SetBuilder) {
                      DAST._IType _9803___mcc_h1689 = _source368.dtor_element;
                    } else if (_source368.is_MapBuilder) {
                      DAST._IType _9804___mcc_h1691 = _source368.dtor_key;
                      DAST._IType _9805___mcc_h1692 = _source368.dtor_value;
                    } else if (_source368.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9806___mcc_h1695 = _source368.dtor_args;
                      DAST._IType _9807___mcc_h1696 = _source368.dtor_result;
                    } else if (_source368.is_Primitive) {
                      DAST._IPrimitive _9808___mcc_h1699 = _source368.dtor_Primitive_a0;
                    } else if (_source368.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9809___mcc_h1701 = _source368.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9810___mcc_h1703 = _source368.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9811_recursiveGen;
                      DCOMPUTF16._IOwnership _9812_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9813_recIdents;
                      RAST._IExpr _out4817;
                      DCOMPUTF16._IOwnership _out4818;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4819;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4817, out _out4818, out _out4819);
                      _9811_recursiveGen = _out4817;
                      _9812_recOwned = _out4818;
                      _9813_recIdents = _out4819;
                      RAST._IExpr _out4820;
                      DCOMPUTF16._IOwnership _out4821;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9811_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9768_nativeToType).dtor_value), _9812_recOwned, expectedOwnership, out _out4820, out _out4821);
                      r = _out4820;
                      resultingOwnership = _out4821;
                      readIdents = _9813_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4822;
                  DCOMPUTF16._IOwnership _out4823;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4824;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9767_b), _9767_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4822, out _out4823, out _out4824);
                  r = _out4822;
                  resultingOwnership = _out4823;
                  readIdents = _out4824;
                }
              }
            }
          } else if (_source365.is_Nullable) {
            DAST._IType _9814___mcc_h478 = _source365.dtor_Nullable_a0;
            {
              RAST._IExpr _9815_recursiveGen;
              DCOMPUTF16._IOwnership _9816_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9817_recIdents;
              RAST._IExpr _out4825;
              DCOMPUTF16._IOwnership _out4826;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4827;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4825, out _out4826, out _out4827);
              _9815_recursiveGen = _out4825;
              _9816_recOwned = _out4826;
              _9817_recIdents = _out4827;
              r = _9815_recursiveGen;
              if (object.Equals(_9816_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4828;
              DCOMPUTF16._IOwnership _out4829;
              DCOMPUTF16.COMP.FromOwnership(r, _9816_recOwned, expectedOwnership, out _out4828, out _out4829);
              r = _out4828;
              resultingOwnership = _out4829;
              readIdents = _9817_recIdents;
            }
          } else if (_source365.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9818___mcc_h480 = _source365.dtor_Tuple_a0;
            {
              RAST._IType _9819_fromTpeGen;
              RAST._IType _out4830;
              _out4830 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9819_fromTpeGen = _out4830;
              RAST._IType _9820_toTpeGen;
              RAST._IType _out4831;
              _out4831 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9820_toTpeGen = _out4831;
              RAST._IExpr _9821_recursiveGen;
              DCOMPUTF16._IOwnership _9822_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9823_recIdents;
              RAST._IExpr _out4832;
              DCOMPUTF16._IOwnership _out4833;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4834;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4832, out _out4833, out _out4834);
              _9821_recursiveGen = _out4832;
              _9822_recOwned = _out4833;
              _9823_recIdents = _out4834;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9821_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9819_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9820_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4835;
              DCOMPUTF16._IOwnership _out4836;
              DCOMPUTF16.COMP.FromOwnership(r, _9822_recOwned, expectedOwnership, out _out4835, out _out4836);
              r = _out4835;
              resultingOwnership = _out4836;
              readIdents = _9823_recIdents;
            }
          } else if (_source365.is_Array) {
            DAST._IType _9824___mcc_h482 = _source365.dtor_element;
            BigInteger _9825___mcc_h483 = _source365.dtor_dims;
            {
              RAST._IType _9826_fromTpeGen;
              RAST._IType _out4837;
              _out4837 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9826_fromTpeGen = _out4837;
              RAST._IType _9827_toTpeGen;
              RAST._IType _out4838;
              _out4838 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9827_toTpeGen = _out4838;
              RAST._IExpr _9828_recursiveGen;
              DCOMPUTF16._IOwnership _9829_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9830_recIdents;
              RAST._IExpr _out4839;
              DCOMPUTF16._IOwnership _out4840;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4841;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4839, out _out4840, out _out4841);
              _9828_recursiveGen = _out4839;
              _9829_recOwned = _out4840;
              _9830_recIdents = _out4841;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9828_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9826_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9827_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4842;
              DCOMPUTF16._IOwnership _out4843;
              DCOMPUTF16.COMP.FromOwnership(r, _9829_recOwned, expectedOwnership, out _out4842, out _out4843);
              r = _out4842;
              resultingOwnership = _out4843;
              readIdents = _9830_recIdents;
            }
          } else if (_source365.is_Seq) {
            DAST._IType _9831___mcc_h486 = _source365.dtor_element;
            {
              RAST._IType _9832_fromTpeGen;
              RAST._IType _out4844;
              _out4844 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9832_fromTpeGen = _out4844;
              RAST._IType _9833_toTpeGen;
              RAST._IType _out4845;
              _out4845 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9833_toTpeGen = _out4845;
              RAST._IExpr _9834_recursiveGen;
              DCOMPUTF16._IOwnership _9835_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9836_recIdents;
              RAST._IExpr _out4846;
              DCOMPUTF16._IOwnership _out4847;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4848;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4846, out _out4847, out _out4848);
              _9834_recursiveGen = _out4846;
              _9835_recOwned = _out4847;
              _9836_recIdents = _out4848;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9834_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9832_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9833_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4849;
              DCOMPUTF16._IOwnership _out4850;
              DCOMPUTF16.COMP.FromOwnership(r, _9835_recOwned, expectedOwnership, out _out4849, out _out4850);
              r = _out4849;
              resultingOwnership = _out4850;
              readIdents = _9836_recIdents;
            }
          } else if (_source365.is_Set) {
            DAST._IType _9837___mcc_h488 = _source365.dtor_element;
            {
              RAST._IType _9838_fromTpeGen;
              RAST._IType _out4851;
              _out4851 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9838_fromTpeGen = _out4851;
              RAST._IType _9839_toTpeGen;
              RAST._IType _out4852;
              _out4852 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9839_toTpeGen = _out4852;
              RAST._IExpr _9840_recursiveGen;
              DCOMPUTF16._IOwnership _9841_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9842_recIdents;
              RAST._IExpr _out4853;
              DCOMPUTF16._IOwnership _out4854;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4855;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4853, out _out4854, out _out4855);
              _9840_recursiveGen = _out4853;
              _9841_recOwned = _out4854;
              _9842_recIdents = _out4855;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9840_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9838_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9839_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4856;
              DCOMPUTF16._IOwnership _out4857;
              DCOMPUTF16.COMP.FromOwnership(r, _9841_recOwned, expectedOwnership, out _out4856, out _out4857);
              r = _out4856;
              resultingOwnership = _out4857;
              readIdents = _9842_recIdents;
            }
          } else if (_source365.is_Multiset) {
            DAST._IType _9843___mcc_h490 = _source365.dtor_element;
            {
              RAST._IType _9844_fromTpeGen;
              RAST._IType _out4858;
              _out4858 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9844_fromTpeGen = _out4858;
              RAST._IType _9845_toTpeGen;
              RAST._IType _out4859;
              _out4859 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9845_toTpeGen = _out4859;
              RAST._IExpr _9846_recursiveGen;
              DCOMPUTF16._IOwnership _9847_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9848_recIdents;
              RAST._IExpr _out4860;
              DCOMPUTF16._IOwnership _out4861;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4862;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4860, out _out4861, out _out4862);
              _9846_recursiveGen = _out4860;
              _9847_recOwned = _out4861;
              _9848_recIdents = _out4862;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9846_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9844_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9845_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4863;
              DCOMPUTF16._IOwnership _out4864;
              DCOMPUTF16.COMP.FromOwnership(r, _9847_recOwned, expectedOwnership, out _out4863, out _out4864);
              r = _out4863;
              resultingOwnership = _out4864;
              readIdents = _9848_recIdents;
            }
          } else if (_source365.is_Map) {
            DAST._IType _9849___mcc_h492 = _source365.dtor_key;
            DAST._IType _9850___mcc_h493 = _source365.dtor_value;
            {
              RAST._IType _9851_fromTpeGen;
              RAST._IType _out4865;
              _out4865 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9851_fromTpeGen = _out4865;
              RAST._IType _9852_toTpeGen;
              RAST._IType _out4866;
              _out4866 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9852_toTpeGen = _out4866;
              RAST._IExpr _9853_recursiveGen;
              DCOMPUTF16._IOwnership _9854_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9855_recIdents;
              RAST._IExpr _out4867;
              DCOMPUTF16._IOwnership _out4868;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4869;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4867, out _out4868, out _out4869);
              _9853_recursiveGen = _out4867;
              _9854_recOwned = _out4868;
              _9855_recIdents = _out4869;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9853_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9851_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9852_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4870;
              DCOMPUTF16._IOwnership _out4871;
              DCOMPUTF16.COMP.FromOwnership(r, _9854_recOwned, expectedOwnership, out _out4870, out _out4871);
              r = _out4870;
              resultingOwnership = _out4871;
              readIdents = _9855_recIdents;
            }
          } else if (_source365.is_SetBuilder) {
            DAST._IType _9856___mcc_h496 = _source365.dtor_element;
            {
              RAST._IType _9857_fromTpeGen;
              RAST._IType _out4872;
              _out4872 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9857_fromTpeGen = _out4872;
              RAST._IType _9858_toTpeGen;
              RAST._IType _out4873;
              _out4873 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9858_toTpeGen = _out4873;
              RAST._IExpr _9859_recursiveGen;
              DCOMPUTF16._IOwnership _9860_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9861_recIdents;
              RAST._IExpr _out4874;
              DCOMPUTF16._IOwnership _out4875;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4876;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4874, out _out4875, out _out4876);
              _9859_recursiveGen = _out4874;
              _9860_recOwned = _out4875;
              _9861_recIdents = _out4876;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9859_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9857_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9858_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4877;
              DCOMPUTF16._IOwnership _out4878;
              DCOMPUTF16.COMP.FromOwnership(r, _9860_recOwned, expectedOwnership, out _out4877, out _out4878);
              r = _out4877;
              resultingOwnership = _out4878;
              readIdents = _9861_recIdents;
            }
          } else if (_source365.is_MapBuilder) {
            DAST._IType _9862___mcc_h498 = _source365.dtor_key;
            DAST._IType _9863___mcc_h499 = _source365.dtor_value;
            {
              RAST._IType _9864_fromTpeGen;
              RAST._IType _out4879;
              _out4879 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9864_fromTpeGen = _out4879;
              RAST._IType _9865_toTpeGen;
              RAST._IType _out4880;
              _out4880 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9865_toTpeGen = _out4880;
              RAST._IExpr _9866_recursiveGen;
              DCOMPUTF16._IOwnership _9867_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9868_recIdents;
              RAST._IExpr _out4881;
              DCOMPUTF16._IOwnership _out4882;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4883;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4881, out _out4882, out _out4883);
              _9866_recursiveGen = _out4881;
              _9867_recOwned = _out4882;
              _9868_recIdents = _out4883;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9866_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9864_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9865_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4884;
              DCOMPUTF16._IOwnership _out4885;
              DCOMPUTF16.COMP.FromOwnership(r, _9867_recOwned, expectedOwnership, out _out4884, out _out4885);
              r = _out4884;
              resultingOwnership = _out4885;
              readIdents = _9868_recIdents;
            }
          } else if (_source365.is_Arrow) {
            Dafny.ISequence<DAST._IType> _9869___mcc_h502 = _source365.dtor_args;
            DAST._IType _9870___mcc_h503 = _source365.dtor_result;
            {
              RAST._IType _9871_fromTpeGen;
              RAST._IType _out4886;
              _out4886 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9871_fromTpeGen = _out4886;
              RAST._IType _9872_toTpeGen;
              RAST._IType _out4887;
              _out4887 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9872_toTpeGen = _out4887;
              RAST._IExpr _9873_recursiveGen;
              DCOMPUTF16._IOwnership _9874_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9875_recIdents;
              RAST._IExpr _out4888;
              DCOMPUTF16._IOwnership _out4889;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4890;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4888, out _out4889, out _out4890);
              _9873_recursiveGen = _out4888;
              _9874_recOwned = _out4889;
              _9875_recIdents = _out4890;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9873_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9871_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9872_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4891;
              DCOMPUTF16._IOwnership _out4892;
              DCOMPUTF16.COMP.FromOwnership(r, _9874_recOwned, expectedOwnership, out _out4891, out _out4892);
              r = _out4891;
              resultingOwnership = _out4892;
              readIdents = _9875_recIdents;
            }
          } else if (_source365.is_Primitive) {
            DAST._IPrimitive _9876___mcc_h506 = _source365.dtor_Primitive_a0;
            {
              RAST._IType _9877_fromTpeGen;
              RAST._IType _out4893;
              _out4893 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9877_fromTpeGen = _out4893;
              RAST._IType _9878_toTpeGen;
              RAST._IType _out4894;
              _out4894 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9878_toTpeGen = _out4894;
              RAST._IExpr _9879_recursiveGen;
              DCOMPUTF16._IOwnership _9880_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9881_recIdents;
              RAST._IExpr _out4895;
              DCOMPUTF16._IOwnership _out4896;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4897;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4895, out _out4896, out _out4897);
              _9879_recursiveGen = _out4895;
              _9880_recOwned = _out4896;
              _9881_recIdents = _out4897;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9879_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9877_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9878_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4898;
              DCOMPUTF16._IOwnership _out4899;
              DCOMPUTF16.COMP.FromOwnership(r, _9880_recOwned, expectedOwnership, out _out4898, out _out4899);
              r = _out4898;
              resultingOwnership = _out4899;
              readIdents = _9881_recIdents;
            }
          } else if (_source365.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _9882___mcc_h508 = _source365.dtor_Passthrough_a0;
            {
              RAST._IType _9883_fromTpeGen;
              RAST._IType _out4900;
              _out4900 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9883_fromTpeGen = _out4900;
              RAST._IType _9884_toTpeGen;
              RAST._IType _out4901;
              _out4901 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9884_toTpeGen = _out4901;
              RAST._IExpr _9885_recursiveGen;
              DCOMPUTF16._IOwnership _9886_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9887_recIdents;
              RAST._IExpr _out4902;
              DCOMPUTF16._IOwnership _out4903;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4904;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4902, out _out4903, out _out4904);
              _9885_recursiveGen = _out4902;
              _9886_recOwned = _out4903;
              _9887_recIdents = _out4904;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9885_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9883_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9884_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4905;
              DCOMPUTF16._IOwnership _out4906;
              DCOMPUTF16.COMP.FromOwnership(r, _9886_recOwned, expectedOwnership, out _out4905, out _out4906);
              r = _out4905;
              resultingOwnership = _out4906;
              readIdents = _9887_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _9888___mcc_h510 = _source365.dtor_TypeArg_a0;
            {
              RAST._IType _9889_fromTpeGen;
              RAST._IType _out4907;
              _out4907 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9889_fromTpeGen = _out4907;
              RAST._IType _9890_toTpeGen;
              RAST._IType _out4908;
              _out4908 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9890_toTpeGen = _out4908;
              RAST._IExpr _9891_recursiveGen;
              DCOMPUTF16._IOwnership _9892_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9893_recIdents;
              RAST._IExpr _out4909;
              DCOMPUTF16._IOwnership _out4910;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4911;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4909, out _out4910, out _out4911);
              _9891_recursiveGen = _out4909;
              _9892_recOwned = _out4910;
              _9893_recIdents = _out4911;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9891_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9889_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9890_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4912;
              DCOMPUTF16._IOwnership _out4913;
              DCOMPUTF16.COMP.FromOwnership(r, _9892_recOwned, expectedOwnership, out _out4912, out _out4913);
              r = _out4912;
              resultingOwnership = _out4913;
              readIdents = _9893_recIdents;
            }
          }
        } else if (_source321.is_Seq) {
          DAST._IType _9894___mcc_h512 = _source321.dtor_element;
          DAST._IType _source370 = _8728___mcc_h1;
          if (_source370.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9895___mcc_h516 = _source370.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _9896___mcc_h517 = _source370.dtor_typeArgs;
            DAST._IResolvedType _9897___mcc_h518 = _source370.dtor_resolved;
            DAST._IResolvedType _source371 = _9897___mcc_h518;
            if (_source371.is_AllocatedDatatype) {
              DAST._IDatatypeType _9898___mcc_h522 = _source371.dtor_datatypeType;
              {
                RAST._IType _9899_fromTpeGen;
                RAST._IType _out4914;
                _out4914 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9899_fromTpeGen = _out4914;
                RAST._IType _9900_toTpeGen;
                RAST._IType _out4915;
                _out4915 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9900_toTpeGen = _out4915;
                RAST._IExpr _9901_recursiveGen;
                DCOMPUTF16._IOwnership _9902_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9903_recIdents;
                RAST._IExpr _out4916;
                DCOMPUTF16._IOwnership _out4917;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4918;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4916, out _out4917, out _out4918);
                _9901_recursiveGen = _out4916;
                _9902_recOwned = _out4917;
                _9903_recIdents = _out4918;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9901_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9899_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9900_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4919;
                DCOMPUTF16._IOwnership _out4920;
                DCOMPUTF16.COMP.FromOwnership(r, _9902_recOwned, expectedOwnership, out _out4919, out _out4920);
                r = _out4919;
                resultingOwnership = _out4920;
                readIdents = _9903_recIdents;
              }
            } else if (_source371.is_Datatype) {
              DAST._IDatatypeType _9904___mcc_h524 = _source371.dtor_datatypeType;
              {
                RAST._IType _9905_fromTpeGen;
                RAST._IType _out4921;
                _out4921 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9905_fromTpeGen = _out4921;
                RAST._IType _9906_toTpeGen;
                RAST._IType _out4922;
                _out4922 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9906_toTpeGen = _out4922;
                RAST._IExpr _9907_recursiveGen;
                DCOMPUTF16._IOwnership _9908_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9909_recIdents;
                RAST._IExpr _out4923;
                DCOMPUTF16._IOwnership _out4924;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4925;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4923, out _out4924, out _out4925);
                _9907_recursiveGen = _out4923;
                _9908_recOwned = _out4924;
                _9909_recIdents = _out4925;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9907_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9905_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9906_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4926;
                DCOMPUTF16._IOwnership _out4927;
                DCOMPUTF16.COMP.FromOwnership(r, _9908_recOwned, expectedOwnership, out _out4926, out _out4927);
                r = _out4926;
                resultingOwnership = _out4927;
                readIdents = _9909_recIdents;
              }
            } else if (_source371.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9910___mcc_h526 = _source371.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _9911___mcc_h527 = _source371.dtor_attributes;
              {
                RAST._IType _9912_fromTpeGen;
                RAST._IType _out4928;
                _out4928 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _9912_fromTpeGen = _out4928;
                RAST._IType _9913_toTpeGen;
                RAST._IType _out4929;
                _out4929 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _9913_toTpeGen = _out4929;
                RAST._IExpr _9914_recursiveGen;
                DCOMPUTF16._IOwnership _9915_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9916_recIdents;
                RAST._IExpr _out4930;
                DCOMPUTF16._IOwnership _out4931;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4932;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4930, out _out4931, out _out4932);
                _9914_recursiveGen = _out4930;
                _9915_recOwned = _out4931;
                _9916_recIdents = _out4932;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9914_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9912_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9913_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out4933;
                DCOMPUTF16._IOwnership _out4934;
                DCOMPUTF16.COMP.FromOwnership(r, _9915_recOwned, expectedOwnership, out _out4933, out _out4934);
                r = _out4933;
                resultingOwnership = _out4934;
                readIdents = _9916_recIdents;
              }
            } else {
              DAST._IType _9917___mcc_h530 = _source371.dtor_baseType;
              DAST._INewtypeRange _9918___mcc_h531 = _source371.dtor_range;
              bool _9919___mcc_h532 = _source371.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _9920___mcc_h533 = _source371.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _9921_attributes = _9920___mcc_h533;
              bool _9922_erase = _9919___mcc_h532;
              DAST._INewtypeRange _9923_range = _9918___mcc_h531;
              DAST._IType _9924_b = _9917___mcc_h530;
              {
                Std.Wrappers._IOption<RAST._IType> _9925_nativeToType;
                _9925_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_9924_b, _9923_range);
                if (object.Equals(_8722_fromTpe, _9924_b)) {
                  RAST._IExpr _9926_recursiveGen;
                  DCOMPUTF16._IOwnership _9927_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9928_recIdents;
                  RAST._IExpr _out4935;
                  DCOMPUTF16._IOwnership _out4936;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4937;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out4935, out _out4936, out _out4937);
                  _9926_recursiveGen = _out4935;
                  _9927_recOwned = _out4936;
                  _9928_recIdents = _out4937;
                  readIdents = _9928_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source372 = _9925_nativeToType;
                  if (_source372.is_None) {
                    if (_9922_erase) {
                      r = _9926_recursiveGen;
                    } else {
                      RAST._IType _9929_rhsType;
                      RAST._IType _out4938;
                      _out4938 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _9929_rhsType = _out4938;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_9929_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_9926_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out4939;
                    DCOMPUTF16._IOwnership _out4940;
                    DCOMPUTF16.COMP.FromOwnership(r, _9927_recOwned, expectedOwnership, out _out4939, out _out4940);
                    r = _out4939;
                    resultingOwnership = _out4940;
                  } else {
                    RAST._IType _9930___mcc_h1705 = _source372.dtor_value;
                    RAST._IType _9931_v = _9930___mcc_h1705;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_9926_recursiveGen, RAST.Expr.create_ExprFromType(_9931_v)));
                    RAST._IExpr _out4941;
                    DCOMPUTF16._IOwnership _out4942;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out4941, out _out4942);
                    r = _out4941;
                    resultingOwnership = _out4942;
                  }
                } else {
                  if ((_9925_nativeToType).is_Some) {
                    DAST._IType _source373 = _8722_fromTpe;
                    if (_source373.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9932___mcc_h1706 = _source373.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _9933___mcc_h1707 = _source373.dtor_typeArgs;
                      DAST._IResolvedType _9934___mcc_h1708 = _source373.dtor_resolved;
                      DAST._IResolvedType _source374 = _9934___mcc_h1708;
                      if (_source374.is_AllocatedDatatype) {
                        DAST._IDatatypeType _9935___mcc_h1712 = _source374.dtor_datatypeType;
                      } else if (_source374.is_Datatype) {
                        DAST._IDatatypeType _9936___mcc_h1714 = _source374.dtor_datatypeType;
                      } else if (_source374.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9937___mcc_h1716 = _source374.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _9938___mcc_h1717 = _source374.dtor_attributes;
                      } else {
                        DAST._IType _9939___mcc_h1720 = _source374.dtor_baseType;
                        DAST._INewtypeRange _9940___mcc_h1721 = _source374.dtor_range;
                        bool _9941___mcc_h1722 = _source374.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _9942___mcc_h1723 = _source374.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _9943_attributes0 = _9942___mcc_h1723;
                        bool _9944_erase0 = _9941___mcc_h1722;
                        DAST._INewtypeRange _9945_range0 = _9940___mcc_h1721;
                        DAST._IType _9946_b0 = _9939___mcc_h1720;
                        {
                          Std.Wrappers._IOption<RAST._IType> _9947_nativeFromType;
                          _9947_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_9946_b0, _9945_range0);
                          if ((_9947_nativeFromType).is_Some) {
                            RAST._IExpr _9948_recursiveGen;
                            DCOMPUTF16._IOwnership _9949_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9950_recIdents;
                            RAST._IExpr _out4943;
                            DCOMPUTF16._IOwnership _out4944;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4945;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4943, out _out4944, out _out4945);
                            _9948_recursiveGen = _out4943;
                            _9949_recOwned = _out4944;
                            _9950_recIdents = _out4945;
                            RAST._IExpr _out4946;
                            DCOMPUTF16._IOwnership _out4947;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_9948_recursiveGen, (_9925_nativeToType).dtor_value), _9949_recOwned, expectedOwnership, out _out4946, out _out4947);
                            r = _out4946;
                            resultingOwnership = _out4947;
                            readIdents = _9950_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source373.is_Nullable) {
                      DAST._IType _9951___mcc_h1728 = _source373.dtor_Nullable_a0;
                    } else if (_source373.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _9952___mcc_h1730 = _source373.dtor_Tuple_a0;
                    } else if (_source373.is_Array) {
                      DAST._IType _9953___mcc_h1732 = _source373.dtor_element;
                      BigInteger _9954___mcc_h1733 = _source373.dtor_dims;
                    } else if (_source373.is_Seq) {
                      DAST._IType _9955___mcc_h1736 = _source373.dtor_element;
                    } else if (_source373.is_Set) {
                      DAST._IType _9956___mcc_h1738 = _source373.dtor_element;
                    } else if (_source373.is_Multiset) {
                      DAST._IType _9957___mcc_h1740 = _source373.dtor_element;
                    } else if (_source373.is_Map) {
                      DAST._IType _9958___mcc_h1742 = _source373.dtor_key;
                      DAST._IType _9959___mcc_h1743 = _source373.dtor_value;
                    } else if (_source373.is_SetBuilder) {
                      DAST._IType _9960___mcc_h1746 = _source373.dtor_element;
                    } else if (_source373.is_MapBuilder) {
                      DAST._IType _9961___mcc_h1748 = _source373.dtor_key;
                      DAST._IType _9962___mcc_h1749 = _source373.dtor_value;
                    } else if (_source373.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _9963___mcc_h1752 = _source373.dtor_args;
                      DAST._IType _9964___mcc_h1753 = _source373.dtor_result;
                    } else if (_source373.is_Primitive) {
                      DAST._IPrimitive _9965___mcc_h1756 = _source373.dtor_Primitive_a0;
                    } else if (_source373.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _9966___mcc_h1758 = _source373.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _9967___mcc_h1760 = _source373.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _9968_recursiveGen;
                      DCOMPUTF16._IOwnership _9969_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9970_recIdents;
                      RAST._IExpr _out4948;
                      DCOMPUTF16._IOwnership _out4949;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4950;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4948, out _out4949, out _out4950);
                      _9968_recursiveGen = _out4948;
                      _9969_recOwned = _out4949;
                      _9970_recIdents = _out4950;
                      RAST._IExpr _out4951;
                      DCOMPUTF16._IOwnership _out4952;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_9968_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_9925_nativeToType).dtor_value), _9969_recOwned, expectedOwnership, out _out4951, out _out4952);
                      r = _out4951;
                      resultingOwnership = _out4952;
                      readIdents = _9970_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out4953;
                  DCOMPUTF16._IOwnership _out4954;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4955;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _9924_b), _9924_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out4953, out _out4954, out _out4955);
                  r = _out4953;
                  resultingOwnership = _out4954;
                  readIdents = _out4955;
                }
              }
            }
          } else if (_source370.is_Nullable) {
            DAST._IType _9971___mcc_h538 = _source370.dtor_Nullable_a0;
            {
              RAST._IExpr _9972_recursiveGen;
              DCOMPUTF16._IOwnership _9973_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9974_recIdents;
              RAST._IExpr _out4956;
              DCOMPUTF16._IOwnership _out4957;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4958;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4956, out _out4957, out _out4958);
              _9972_recursiveGen = _out4956;
              _9973_recOwned = _out4957;
              _9974_recIdents = _out4958;
              r = _9972_recursiveGen;
              if (object.Equals(_9973_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out4959;
              DCOMPUTF16._IOwnership _out4960;
              DCOMPUTF16.COMP.FromOwnership(r, _9973_recOwned, expectedOwnership, out _out4959, out _out4960);
              r = _out4959;
              resultingOwnership = _out4960;
              readIdents = _9974_recIdents;
            }
          } else if (_source370.is_Tuple) {
            Dafny.ISequence<DAST._IType> _9975___mcc_h540 = _source370.dtor_Tuple_a0;
            {
              RAST._IType _9976_fromTpeGen;
              RAST._IType _out4961;
              _out4961 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9976_fromTpeGen = _out4961;
              RAST._IType _9977_toTpeGen;
              RAST._IType _out4962;
              _out4962 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9977_toTpeGen = _out4962;
              RAST._IExpr _9978_recursiveGen;
              DCOMPUTF16._IOwnership _9979_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9980_recIdents;
              RAST._IExpr _out4963;
              DCOMPUTF16._IOwnership _out4964;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4965;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4963, out _out4964, out _out4965);
              _9978_recursiveGen = _out4963;
              _9979_recOwned = _out4964;
              _9980_recIdents = _out4965;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9978_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9976_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9977_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4966;
              DCOMPUTF16._IOwnership _out4967;
              DCOMPUTF16.COMP.FromOwnership(r, _9979_recOwned, expectedOwnership, out _out4966, out _out4967);
              r = _out4966;
              resultingOwnership = _out4967;
              readIdents = _9980_recIdents;
            }
          } else if (_source370.is_Array) {
            DAST._IType _9981___mcc_h542 = _source370.dtor_element;
            BigInteger _9982___mcc_h543 = _source370.dtor_dims;
            {
              RAST._IType _9983_fromTpeGen;
              RAST._IType _out4968;
              _out4968 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9983_fromTpeGen = _out4968;
              RAST._IType _9984_toTpeGen;
              RAST._IType _out4969;
              _out4969 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9984_toTpeGen = _out4969;
              RAST._IExpr _9985_recursiveGen;
              DCOMPUTF16._IOwnership _9986_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9987_recIdents;
              RAST._IExpr _out4970;
              DCOMPUTF16._IOwnership _out4971;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4972;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4970, out _out4971, out _out4972);
              _9985_recursiveGen = _out4970;
              _9986_recOwned = _out4971;
              _9987_recIdents = _out4972;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9985_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9983_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9984_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4973;
              DCOMPUTF16._IOwnership _out4974;
              DCOMPUTF16.COMP.FromOwnership(r, _9986_recOwned, expectedOwnership, out _out4973, out _out4974);
              r = _out4973;
              resultingOwnership = _out4974;
              readIdents = _9987_recIdents;
            }
          } else if (_source370.is_Seq) {
            DAST._IType _9988___mcc_h546 = _source370.dtor_element;
            {
              RAST._IType _9989_fromTpeGen;
              RAST._IType _out4975;
              _out4975 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9989_fromTpeGen = _out4975;
              RAST._IType _9990_toTpeGen;
              RAST._IType _out4976;
              _out4976 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9990_toTpeGen = _out4976;
              RAST._IExpr _9991_recursiveGen;
              DCOMPUTF16._IOwnership _9992_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9993_recIdents;
              RAST._IExpr _out4977;
              DCOMPUTF16._IOwnership _out4978;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4979;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4977, out _out4978, out _out4979);
              _9991_recursiveGen = _out4977;
              _9992_recOwned = _out4978;
              _9993_recIdents = _out4979;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9991_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9989_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9990_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4980;
              DCOMPUTF16._IOwnership _out4981;
              DCOMPUTF16.COMP.FromOwnership(r, _9992_recOwned, expectedOwnership, out _out4980, out _out4981);
              r = _out4980;
              resultingOwnership = _out4981;
              readIdents = _9993_recIdents;
            }
          } else if (_source370.is_Set) {
            DAST._IType _9994___mcc_h548 = _source370.dtor_element;
            {
              RAST._IType _9995_fromTpeGen;
              RAST._IType _out4982;
              _out4982 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _9995_fromTpeGen = _out4982;
              RAST._IType _9996_toTpeGen;
              RAST._IType _out4983;
              _out4983 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _9996_toTpeGen = _out4983;
              RAST._IExpr _9997_recursiveGen;
              DCOMPUTF16._IOwnership _9998_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9999_recIdents;
              RAST._IExpr _out4984;
              DCOMPUTF16._IOwnership _out4985;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4986;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4984, out _out4985, out _out4986);
              _9997_recursiveGen = _out4984;
              _9998_recOwned = _out4985;
              _9999_recIdents = _out4986;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_9997_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_9995_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_9996_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4987;
              DCOMPUTF16._IOwnership _out4988;
              DCOMPUTF16.COMP.FromOwnership(r, _9998_recOwned, expectedOwnership, out _out4987, out _out4988);
              r = _out4987;
              resultingOwnership = _out4988;
              readIdents = _9999_recIdents;
            }
          } else if (_source370.is_Multiset) {
            DAST._IType _10000___mcc_h550 = _source370.dtor_element;
            {
              RAST._IType _10001_fromTpeGen;
              RAST._IType _out4989;
              _out4989 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10001_fromTpeGen = _out4989;
              RAST._IType _10002_toTpeGen;
              RAST._IType _out4990;
              _out4990 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10002_toTpeGen = _out4990;
              RAST._IExpr _10003_recursiveGen;
              DCOMPUTF16._IOwnership _10004_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10005_recIdents;
              RAST._IExpr _out4991;
              DCOMPUTF16._IOwnership _out4992;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out4993;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4991, out _out4992, out _out4993);
              _10003_recursiveGen = _out4991;
              _10004_recOwned = _out4992;
              _10005_recIdents = _out4993;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10003_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10001_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10002_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out4994;
              DCOMPUTF16._IOwnership _out4995;
              DCOMPUTF16.COMP.FromOwnership(r, _10004_recOwned, expectedOwnership, out _out4994, out _out4995);
              r = _out4994;
              resultingOwnership = _out4995;
              readIdents = _10005_recIdents;
            }
          } else if (_source370.is_Map) {
            DAST._IType _10006___mcc_h552 = _source370.dtor_key;
            DAST._IType _10007___mcc_h553 = _source370.dtor_value;
            {
              RAST._IType _10008_fromTpeGen;
              RAST._IType _out4996;
              _out4996 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10008_fromTpeGen = _out4996;
              RAST._IType _10009_toTpeGen;
              RAST._IType _out4997;
              _out4997 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10009_toTpeGen = _out4997;
              RAST._IExpr _10010_recursiveGen;
              DCOMPUTF16._IOwnership _10011_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10012_recIdents;
              RAST._IExpr _out4998;
              DCOMPUTF16._IOwnership _out4999;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5000;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out4998, out _out4999, out _out5000);
              _10010_recursiveGen = _out4998;
              _10011_recOwned = _out4999;
              _10012_recIdents = _out5000;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10010_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10008_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10009_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5001;
              DCOMPUTF16._IOwnership _out5002;
              DCOMPUTF16.COMP.FromOwnership(r, _10011_recOwned, expectedOwnership, out _out5001, out _out5002);
              r = _out5001;
              resultingOwnership = _out5002;
              readIdents = _10012_recIdents;
            }
          } else if (_source370.is_SetBuilder) {
            DAST._IType _10013___mcc_h556 = _source370.dtor_element;
            {
              RAST._IType _10014_fromTpeGen;
              RAST._IType _out5003;
              _out5003 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10014_fromTpeGen = _out5003;
              RAST._IType _10015_toTpeGen;
              RAST._IType _out5004;
              _out5004 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10015_toTpeGen = _out5004;
              RAST._IExpr _10016_recursiveGen;
              DCOMPUTF16._IOwnership _10017_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10018_recIdents;
              RAST._IExpr _out5005;
              DCOMPUTF16._IOwnership _out5006;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5007;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5005, out _out5006, out _out5007);
              _10016_recursiveGen = _out5005;
              _10017_recOwned = _out5006;
              _10018_recIdents = _out5007;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10016_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10014_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10015_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5008;
              DCOMPUTF16._IOwnership _out5009;
              DCOMPUTF16.COMP.FromOwnership(r, _10017_recOwned, expectedOwnership, out _out5008, out _out5009);
              r = _out5008;
              resultingOwnership = _out5009;
              readIdents = _10018_recIdents;
            }
          } else if (_source370.is_MapBuilder) {
            DAST._IType _10019___mcc_h558 = _source370.dtor_key;
            DAST._IType _10020___mcc_h559 = _source370.dtor_value;
            {
              RAST._IType _10021_fromTpeGen;
              RAST._IType _out5010;
              _out5010 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10021_fromTpeGen = _out5010;
              RAST._IType _10022_toTpeGen;
              RAST._IType _out5011;
              _out5011 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10022_toTpeGen = _out5011;
              RAST._IExpr _10023_recursiveGen;
              DCOMPUTF16._IOwnership _10024_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10025_recIdents;
              RAST._IExpr _out5012;
              DCOMPUTF16._IOwnership _out5013;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5014;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5012, out _out5013, out _out5014);
              _10023_recursiveGen = _out5012;
              _10024_recOwned = _out5013;
              _10025_recIdents = _out5014;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10023_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10021_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10022_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5015;
              DCOMPUTF16._IOwnership _out5016;
              DCOMPUTF16.COMP.FromOwnership(r, _10024_recOwned, expectedOwnership, out _out5015, out _out5016);
              r = _out5015;
              resultingOwnership = _out5016;
              readIdents = _10025_recIdents;
            }
          } else if (_source370.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10026___mcc_h562 = _source370.dtor_args;
            DAST._IType _10027___mcc_h563 = _source370.dtor_result;
            {
              RAST._IType _10028_fromTpeGen;
              RAST._IType _out5017;
              _out5017 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10028_fromTpeGen = _out5017;
              RAST._IType _10029_toTpeGen;
              RAST._IType _out5018;
              _out5018 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10029_toTpeGen = _out5018;
              RAST._IExpr _10030_recursiveGen;
              DCOMPUTF16._IOwnership _10031_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10032_recIdents;
              RAST._IExpr _out5019;
              DCOMPUTF16._IOwnership _out5020;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5021;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5019, out _out5020, out _out5021);
              _10030_recursiveGen = _out5019;
              _10031_recOwned = _out5020;
              _10032_recIdents = _out5021;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10030_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10028_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10029_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5022;
              DCOMPUTF16._IOwnership _out5023;
              DCOMPUTF16.COMP.FromOwnership(r, _10031_recOwned, expectedOwnership, out _out5022, out _out5023);
              r = _out5022;
              resultingOwnership = _out5023;
              readIdents = _10032_recIdents;
            }
          } else if (_source370.is_Primitive) {
            DAST._IPrimitive _10033___mcc_h566 = _source370.dtor_Primitive_a0;
            {
              RAST._IType _10034_fromTpeGen;
              RAST._IType _out5024;
              _out5024 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10034_fromTpeGen = _out5024;
              RAST._IType _10035_toTpeGen;
              RAST._IType _out5025;
              _out5025 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10035_toTpeGen = _out5025;
              RAST._IExpr _10036_recursiveGen;
              DCOMPUTF16._IOwnership _10037_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10038_recIdents;
              RAST._IExpr _out5026;
              DCOMPUTF16._IOwnership _out5027;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5028;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5026, out _out5027, out _out5028);
              _10036_recursiveGen = _out5026;
              _10037_recOwned = _out5027;
              _10038_recIdents = _out5028;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10036_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10034_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10035_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5029;
              DCOMPUTF16._IOwnership _out5030;
              DCOMPUTF16.COMP.FromOwnership(r, _10037_recOwned, expectedOwnership, out _out5029, out _out5030);
              r = _out5029;
              resultingOwnership = _out5030;
              readIdents = _10038_recIdents;
            }
          } else if (_source370.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10039___mcc_h568 = _source370.dtor_Passthrough_a0;
            {
              RAST._IType _10040_fromTpeGen;
              RAST._IType _out5031;
              _out5031 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10040_fromTpeGen = _out5031;
              RAST._IType _10041_toTpeGen;
              RAST._IType _out5032;
              _out5032 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10041_toTpeGen = _out5032;
              RAST._IExpr _10042_recursiveGen;
              DCOMPUTF16._IOwnership _10043_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10044_recIdents;
              RAST._IExpr _out5033;
              DCOMPUTF16._IOwnership _out5034;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5035;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5033, out _out5034, out _out5035);
              _10042_recursiveGen = _out5033;
              _10043_recOwned = _out5034;
              _10044_recIdents = _out5035;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10042_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10040_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10041_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5036;
              DCOMPUTF16._IOwnership _out5037;
              DCOMPUTF16.COMP.FromOwnership(r, _10043_recOwned, expectedOwnership, out _out5036, out _out5037);
              r = _out5036;
              resultingOwnership = _out5037;
              readIdents = _10044_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10045___mcc_h570 = _source370.dtor_TypeArg_a0;
            {
              RAST._IType _10046_fromTpeGen;
              RAST._IType _out5038;
              _out5038 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10046_fromTpeGen = _out5038;
              RAST._IType _10047_toTpeGen;
              RAST._IType _out5039;
              _out5039 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10047_toTpeGen = _out5039;
              RAST._IExpr _10048_recursiveGen;
              DCOMPUTF16._IOwnership _10049_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10050_recIdents;
              RAST._IExpr _out5040;
              DCOMPUTF16._IOwnership _out5041;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5042;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5040, out _out5041, out _out5042);
              _10048_recursiveGen = _out5040;
              _10049_recOwned = _out5041;
              _10050_recIdents = _out5042;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10048_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10046_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10047_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5043;
              DCOMPUTF16._IOwnership _out5044;
              DCOMPUTF16.COMP.FromOwnership(r, _10049_recOwned, expectedOwnership, out _out5043, out _out5044);
              r = _out5043;
              resultingOwnership = _out5044;
              readIdents = _10050_recIdents;
            }
          }
        } else if (_source321.is_Set) {
          DAST._IType _10051___mcc_h572 = _source321.dtor_element;
          DAST._IType _source375 = _8728___mcc_h1;
          if (_source375.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10052___mcc_h576 = _source375.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10053___mcc_h577 = _source375.dtor_typeArgs;
            DAST._IResolvedType _10054___mcc_h578 = _source375.dtor_resolved;
            DAST._IResolvedType _source376 = _10054___mcc_h578;
            if (_source376.is_AllocatedDatatype) {
              DAST._IDatatypeType _10055___mcc_h582 = _source376.dtor_datatypeType;
              {
                RAST._IType _10056_fromTpeGen;
                RAST._IType _out5045;
                _out5045 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10056_fromTpeGen = _out5045;
                RAST._IType _10057_toTpeGen;
                RAST._IType _out5046;
                _out5046 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10057_toTpeGen = _out5046;
                RAST._IExpr _10058_recursiveGen;
                DCOMPUTF16._IOwnership _10059_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10060_recIdents;
                RAST._IExpr _out5047;
                DCOMPUTF16._IOwnership _out5048;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5049;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5047, out _out5048, out _out5049);
                _10058_recursiveGen = _out5047;
                _10059_recOwned = _out5048;
                _10060_recIdents = _out5049;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10058_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10056_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10057_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5050;
                DCOMPUTF16._IOwnership _out5051;
                DCOMPUTF16.COMP.FromOwnership(r, _10059_recOwned, expectedOwnership, out _out5050, out _out5051);
                r = _out5050;
                resultingOwnership = _out5051;
                readIdents = _10060_recIdents;
              }
            } else if (_source376.is_Datatype) {
              DAST._IDatatypeType _10061___mcc_h584 = _source376.dtor_datatypeType;
              {
                RAST._IType _10062_fromTpeGen;
                RAST._IType _out5052;
                _out5052 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10062_fromTpeGen = _out5052;
                RAST._IType _10063_toTpeGen;
                RAST._IType _out5053;
                _out5053 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10063_toTpeGen = _out5053;
                RAST._IExpr _10064_recursiveGen;
                DCOMPUTF16._IOwnership _10065_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10066_recIdents;
                RAST._IExpr _out5054;
                DCOMPUTF16._IOwnership _out5055;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5056;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5054, out _out5055, out _out5056);
                _10064_recursiveGen = _out5054;
                _10065_recOwned = _out5055;
                _10066_recIdents = _out5056;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10064_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10062_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10063_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5057;
                DCOMPUTF16._IOwnership _out5058;
                DCOMPUTF16.COMP.FromOwnership(r, _10065_recOwned, expectedOwnership, out _out5057, out _out5058);
                r = _out5057;
                resultingOwnership = _out5058;
                readIdents = _10066_recIdents;
              }
            } else if (_source376.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10067___mcc_h586 = _source376.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10068___mcc_h587 = _source376.dtor_attributes;
              {
                RAST._IType _10069_fromTpeGen;
                RAST._IType _out5059;
                _out5059 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10069_fromTpeGen = _out5059;
                RAST._IType _10070_toTpeGen;
                RAST._IType _out5060;
                _out5060 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10070_toTpeGen = _out5060;
                RAST._IExpr _10071_recursiveGen;
                DCOMPUTF16._IOwnership _10072_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10073_recIdents;
                RAST._IExpr _out5061;
                DCOMPUTF16._IOwnership _out5062;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5063;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5061, out _out5062, out _out5063);
                _10071_recursiveGen = _out5061;
                _10072_recOwned = _out5062;
                _10073_recIdents = _out5063;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10071_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10069_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10070_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5064;
                DCOMPUTF16._IOwnership _out5065;
                DCOMPUTF16.COMP.FromOwnership(r, _10072_recOwned, expectedOwnership, out _out5064, out _out5065);
                r = _out5064;
                resultingOwnership = _out5065;
                readIdents = _10073_recIdents;
              }
            } else {
              DAST._IType _10074___mcc_h590 = _source376.dtor_baseType;
              DAST._INewtypeRange _10075___mcc_h591 = _source376.dtor_range;
              bool _10076___mcc_h592 = _source376.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10077___mcc_h593 = _source376.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10078_attributes = _10077___mcc_h593;
              bool _10079_erase = _10076___mcc_h592;
              DAST._INewtypeRange _10080_range = _10075___mcc_h591;
              DAST._IType _10081_b = _10074___mcc_h590;
              {
                Std.Wrappers._IOption<RAST._IType> _10082_nativeToType;
                _10082_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10081_b, _10080_range);
                if (object.Equals(_8722_fromTpe, _10081_b)) {
                  RAST._IExpr _10083_recursiveGen;
                  DCOMPUTF16._IOwnership _10084_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10085_recIdents;
                  RAST._IExpr _out5066;
                  DCOMPUTF16._IOwnership _out5067;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5068;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5066, out _out5067, out _out5068);
                  _10083_recursiveGen = _out5066;
                  _10084_recOwned = _out5067;
                  _10085_recIdents = _out5068;
                  readIdents = _10085_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source377 = _10082_nativeToType;
                  if (_source377.is_None) {
                    if (_10079_erase) {
                      r = _10083_recursiveGen;
                    } else {
                      RAST._IType _10086_rhsType;
                      RAST._IType _out5069;
                      _out5069 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _10086_rhsType = _out5069;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10086_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10083_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5070;
                    DCOMPUTF16._IOwnership _out5071;
                    DCOMPUTF16.COMP.FromOwnership(r, _10084_recOwned, expectedOwnership, out _out5070, out _out5071);
                    r = _out5070;
                    resultingOwnership = _out5071;
                  } else {
                    RAST._IType _10087___mcc_h1762 = _source377.dtor_value;
                    RAST._IType _10088_v = _10087___mcc_h1762;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10083_recursiveGen, RAST.Expr.create_ExprFromType(_10088_v)));
                    RAST._IExpr _out5072;
                    DCOMPUTF16._IOwnership _out5073;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5072, out _out5073);
                    r = _out5072;
                    resultingOwnership = _out5073;
                  }
                } else {
                  if ((_10082_nativeToType).is_Some) {
                    DAST._IType _source378 = _8722_fromTpe;
                    if (_source378.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10089___mcc_h1763 = _source378.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10090___mcc_h1764 = _source378.dtor_typeArgs;
                      DAST._IResolvedType _10091___mcc_h1765 = _source378.dtor_resolved;
                      DAST._IResolvedType _source379 = _10091___mcc_h1765;
                      if (_source379.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10092___mcc_h1769 = _source379.dtor_datatypeType;
                      } else if (_source379.is_Datatype) {
                        DAST._IDatatypeType _10093___mcc_h1771 = _source379.dtor_datatypeType;
                      } else if (_source379.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10094___mcc_h1773 = _source379.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10095___mcc_h1774 = _source379.dtor_attributes;
                      } else {
                        DAST._IType _10096___mcc_h1777 = _source379.dtor_baseType;
                        DAST._INewtypeRange _10097___mcc_h1778 = _source379.dtor_range;
                        bool _10098___mcc_h1779 = _source379.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10099___mcc_h1780 = _source379.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10100_attributes0 = _10099___mcc_h1780;
                        bool _10101_erase0 = _10098___mcc_h1779;
                        DAST._INewtypeRange _10102_range0 = _10097___mcc_h1778;
                        DAST._IType _10103_b0 = _10096___mcc_h1777;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10104_nativeFromType;
                          _10104_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10103_b0, _10102_range0);
                          if ((_10104_nativeFromType).is_Some) {
                            RAST._IExpr _10105_recursiveGen;
                            DCOMPUTF16._IOwnership _10106_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10107_recIdents;
                            RAST._IExpr _out5074;
                            DCOMPUTF16._IOwnership _out5075;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5076;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5074, out _out5075, out _out5076);
                            _10105_recursiveGen = _out5074;
                            _10106_recOwned = _out5075;
                            _10107_recIdents = _out5076;
                            RAST._IExpr _out5077;
                            DCOMPUTF16._IOwnership _out5078;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10105_recursiveGen, (_10082_nativeToType).dtor_value), _10106_recOwned, expectedOwnership, out _out5077, out _out5078);
                            r = _out5077;
                            resultingOwnership = _out5078;
                            readIdents = _10107_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source378.is_Nullable) {
                      DAST._IType _10108___mcc_h1785 = _source378.dtor_Nullable_a0;
                    } else if (_source378.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10109___mcc_h1787 = _source378.dtor_Tuple_a0;
                    } else if (_source378.is_Array) {
                      DAST._IType _10110___mcc_h1789 = _source378.dtor_element;
                      BigInteger _10111___mcc_h1790 = _source378.dtor_dims;
                    } else if (_source378.is_Seq) {
                      DAST._IType _10112___mcc_h1793 = _source378.dtor_element;
                    } else if (_source378.is_Set) {
                      DAST._IType _10113___mcc_h1795 = _source378.dtor_element;
                    } else if (_source378.is_Multiset) {
                      DAST._IType _10114___mcc_h1797 = _source378.dtor_element;
                    } else if (_source378.is_Map) {
                      DAST._IType _10115___mcc_h1799 = _source378.dtor_key;
                      DAST._IType _10116___mcc_h1800 = _source378.dtor_value;
                    } else if (_source378.is_SetBuilder) {
                      DAST._IType _10117___mcc_h1803 = _source378.dtor_element;
                    } else if (_source378.is_MapBuilder) {
                      DAST._IType _10118___mcc_h1805 = _source378.dtor_key;
                      DAST._IType _10119___mcc_h1806 = _source378.dtor_value;
                    } else if (_source378.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10120___mcc_h1809 = _source378.dtor_args;
                      DAST._IType _10121___mcc_h1810 = _source378.dtor_result;
                    } else if (_source378.is_Primitive) {
                      DAST._IPrimitive _10122___mcc_h1813 = _source378.dtor_Primitive_a0;
                    } else if (_source378.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10123___mcc_h1815 = _source378.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10124___mcc_h1817 = _source378.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10125_recursiveGen;
                      DCOMPUTF16._IOwnership _10126_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10127_recIdents;
                      RAST._IExpr _out5079;
                      DCOMPUTF16._IOwnership _out5080;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5081;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5079, out _out5080, out _out5081);
                      _10125_recursiveGen = _out5079;
                      _10126_recOwned = _out5080;
                      _10127_recIdents = _out5081;
                      RAST._IExpr _out5082;
                      DCOMPUTF16._IOwnership _out5083;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10125_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10082_nativeToType).dtor_value), _10126_recOwned, expectedOwnership, out _out5082, out _out5083);
                      r = _out5082;
                      resultingOwnership = _out5083;
                      readIdents = _10127_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5084;
                  DCOMPUTF16._IOwnership _out5085;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5086;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _10081_b), _10081_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out5084, out _out5085, out _out5086);
                  r = _out5084;
                  resultingOwnership = _out5085;
                  readIdents = _out5086;
                }
              }
            }
          } else if (_source375.is_Nullable) {
            DAST._IType _10128___mcc_h598 = _source375.dtor_Nullable_a0;
            {
              RAST._IExpr _10129_recursiveGen;
              DCOMPUTF16._IOwnership _10130_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10131_recIdents;
              RAST._IExpr _out5087;
              DCOMPUTF16._IOwnership _out5088;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5089;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5087, out _out5088, out _out5089);
              _10129_recursiveGen = _out5087;
              _10130_recOwned = _out5088;
              _10131_recIdents = _out5089;
              r = _10129_recursiveGen;
              if (object.Equals(_10130_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5090;
              DCOMPUTF16._IOwnership _out5091;
              DCOMPUTF16.COMP.FromOwnership(r, _10130_recOwned, expectedOwnership, out _out5090, out _out5091);
              r = _out5090;
              resultingOwnership = _out5091;
              readIdents = _10131_recIdents;
            }
          } else if (_source375.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10132___mcc_h600 = _source375.dtor_Tuple_a0;
            {
              RAST._IType _10133_fromTpeGen;
              RAST._IType _out5092;
              _out5092 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10133_fromTpeGen = _out5092;
              RAST._IType _10134_toTpeGen;
              RAST._IType _out5093;
              _out5093 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10134_toTpeGen = _out5093;
              RAST._IExpr _10135_recursiveGen;
              DCOMPUTF16._IOwnership _10136_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10137_recIdents;
              RAST._IExpr _out5094;
              DCOMPUTF16._IOwnership _out5095;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5096;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5094, out _out5095, out _out5096);
              _10135_recursiveGen = _out5094;
              _10136_recOwned = _out5095;
              _10137_recIdents = _out5096;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10135_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10133_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10134_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5097;
              DCOMPUTF16._IOwnership _out5098;
              DCOMPUTF16.COMP.FromOwnership(r, _10136_recOwned, expectedOwnership, out _out5097, out _out5098);
              r = _out5097;
              resultingOwnership = _out5098;
              readIdents = _10137_recIdents;
            }
          } else if (_source375.is_Array) {
            DAST._IType _10138___mcc_h602 = _source375.dtor_element;
            BigInteger _10139___mcc_h603 = _source375.dtor_dims;
            {
              RAST._IType _10140_fromTpeGen;
              RAST._IType _out5099;
              _out5099 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10140_fromTpeGen = _out5099;
              RAST._IType _10141_toTpeGen;
              RAST._IType _out5100;
              _out5100 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10141_toTpeGen = _out5100;
              RAST._IExpr _10142_recursiveGen;
              DCOMPUTF16._IOwnership _10143_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10144_recIdents;
              RAST._IExpr _out5101;
              DCOMPUTF16._IOwnership _out5102;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5103;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5101, out _out5102, out _out5103);
              _10142_recursiveGen = _out5101;
              _10143_recOwned = _out5102;
              _10144_recIdents = _out5103;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10142_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10140_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10141_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5104;
              DCOMPUTF16._IOwnership _out5105;
              DCOMPUTF16.COMP.FromOwnership(r, _10143_recOwned, expectedOwnership, out _out5104, out _out5105);
              r = _out5104;
              resultingOwnership = _out5105;
              readIdents = _10144_recIdents;
            }
          } else if (_source375.is_Seq) {
            DAST._IType _10145___mcc_h606 = _source375.dtor_element;
            {
              RAST._IType _10146_fromTpeGen;
              RAST._IType _out5106;
              _out5106 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10146_fromTpeGen = _out5106;
              RAST._IType _10147_toTpeGen;
              RAST._IType _out5107;
              _out5107 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10147_toTpeGen = _out5107;
              RAST._IExpr _10148_recursiveGen;
              DCOMPUTF16._IOwnership _10149_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10150_recIdents;
              RAST._IExpr _out5108;
              DCOMPUTF16._IOwnership _out5109;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5110;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5108, out _out5109, out _out5110);
              _10148_recursiveGen = _out5108;
              _10149_recOwned = _out5109;
              _10150_recIdents = _out5110;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10148_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10146_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10147_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5111;
              DCOMPUTF16._IOwnership _out5112;
              DCOMPUTF16.COMP.FromOwnership(r, _10149_recOwned, expectedOwnership, out _out5111, out _out5112);
              r = _out5111;
              resultingOwnership = _out5112;
              readIdents = _10150_recIdents;
            }
          } else if (_source375.is_Set) {
            DAST._IType _10151___mcc_h608 = _source375.dtor_element;
            {
              RAST._IType _10152_fromTpeGen;
              RAST._IType _out5113;
              _out5113 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10152_fromTpeGen = _out5113;
              RAST._IType _10153_toTpeGen;
              RAST._IType _out5114;
              _out5114 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10153_toTpeGen = _out5114;
              RAST._IExpr _10154_recursiveGen;
              DCOMPUTF16._IOwnership _10155_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10156_recIdents;
              RAST._IExpr _out5115;
              DCOMPUTF16._IOwnership _out5116;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5117;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5115, out _out5116, out _out5117);
              _10154_recursiveGen = _out5115;
              _10155_recOwned = _out5116;
              _10156_recIdents = _out5117;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10154_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10152_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10153_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5118;
              DCOMPUTF16._IOwnership _out5119;
              DCOMPUTF16.COMP.FromOwnership(r, _10155_recOwned, expectedOwnership, out _out5118, out _out5119);
              r = _out5118;
              resultingOwnership = _out5119;
              readIdents = _10156_recIdents;
            }
          } else if (_source375.is_Multiset) {
            DAST._IType _10157___mcc_h610 = _source375.dtor_element;
            {
              RAST._IType _10158_fromTpeGen;
              RAST._IType _out5120;
              _out5120 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10158_fromTpeGen = _out5120;
              RAST._IType _10159_toTpeGen;
              RAST._IType _out5121;
              _out5121 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10159_toTpeGen = _out5121;
              RAST._IExpr _10160_recursiveGen;
              DCOMPUTF16._IOwnership _10161_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10162_recIdents;
              RAST._IExpr _out5122;
              DCOMPUTF16._IOwnership _out5123;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5124;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5122, out _out5123, out _out5124);
              _10160_recursiveGen = _out5122;
              _10161_recOwned = _out5123;
              _10162_recIdents = _out5124;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10160_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10158_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10159_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5125;
              DCOMPUTF16._IOwnership _out5126;
              DCOMPUTF16.COMP.FromOwnership(r, _10161_recOwned, expectedOwnership, out _out5125, out _out5126);
              r = _out5125;
              resultingOwnership = _out5126;
              readIdents = _10162_recIdents;
            }
          } else if (_source375.is_Map) {
            DAST._IType _10163___mcc_h612 = _source375.dtor_key;
            DAST._IType _10164___mcc_h613 = _source375.dtor_value;
            {
              RAST._IType _10165_fromTpeGen;
              RAST._IType _out5127;
              _out5127 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10165_fromTpeGen = _out5127;
              RAST._IType _10166_toTpeGen;
              RAST._IType _out5128;
              _out5128 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10166_toTpeGen = _out5128;
              RAST._IExpr _10167_recursiveGen;
              DCOMPUTF16._IOwnership _10168_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10169_recIdents;
              RAST._IExpr _out5129;
              DCOMPUTF16._IOwnership _out5130;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5131;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5129, out _out5130, out _out5131);
              _10167_recursiveGen = _out5129;
              _10168_recOwned = _out5130;
              _10169_recIdents = _out5131;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10167_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10165_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10166_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5132;
              DCOMPUTF16._IOwnership _out5133;
              DCOMPUTF16.COMP.FromOwnership(r, _10168_recOwned, expectedOwnership, out _out5132, out _out5133);
              r = _out5132;
              resultingOwnership = _out5133;
              readIdents = _10169_recIdents;
            }
          } else if (_source375.is_SetBuilder) {
            DAST._IType _10170___mcc_h616 = _source375.dtor_element;
            {
              RAST._IType _10171_fromTpeGen;
              RAST._IType _out5134;
              _out5134 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10171_fromTpeGen = _out5134;
              RAST._IType _10172_toTpeGen;
              RAST._IType _out5135;
              _out5135 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10172_toTpeGen = _out5135;
              RAST._IExpr _10173_recursiveGen;
              DCOMPUTF16._IOwnership _10174_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10175_recIdents;
              RAST._IExpr _out5136;
              DCOMPUTF16._IOwnership _out5137;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5138;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5136, out _out5137, out _out5138);
              _10173_recursiveGen = _out5136;
              _10174_recOwned = _out5137;
              _10175_recIdents = _out5138;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10173_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10171_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10172_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5139;
              DCOMPUTF16._IOwnership _out5140;
              DCOMPUTF16.COMP.FromOwnership(r, _10174_recOwned, expectedOwnership, out _out5139, out _out5140);
              r = _out5139;
              resultingOwnership = _out5140;
              readIdents = _10175_recIdents;
            }
          } else if (_source375.is_MapBuilder) {
            DAST._IType _10176___mcc_h618 = _source375.dtor_key;
            DAST._IType _10177___mcc_h619 = _source375.dtor_value;
            {
              RAST._IType _10178_fromTpeGen;
              RAST._IType _out5141;
              _out5141 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10178_fromTpeGen = _out5141;
              RAST._IType _10179_toTpeGen;
              RAST._IType _out5142;
              _out5142 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10179_toTpeGen = _out5142;
              RAST._IExpr _10180_recursiveGen;
              DCOMPUTF16._IOwnership _10181_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10182_recIdents;
              RAST._IExpr _out5143;
              DCOMPUTF16._IOwnership _out5144;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5145;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5143, out _out5144, out _out5145);
              _10180_recursiveGen = _out5143;
              _10181_recOwned = _out5144;
              _10182_recIdents = _out5145;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10180_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10178_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10179_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5146;
              DCOMPUTF16._IOwnership _out5147;
              DCOMPUTF16.COMP.FromOwnership(r, _10181_recOwned, expectedOwnership, out _out5146, out _out5147);
              r = _out5146;
              resultingOwnership = _out5147;
              readIdents = _10182_recIdents;
            }
          } else if (_source375.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10183___mcc_h622 = _source375.dtor_args;
            DAST._IType _10184___mcc_h623 = _source375.dtor_result;
            {
              RAST._IType _10185_fromTpeGen;
              RAST._IType _out5148;
              _out5148 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10185_fromTpeGen = _out5148;
              RAST._IType _10186_toTpeGen;
              RAST._IType _out5149;
              _out5149 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10186_toTpeGen = _out5149;
              RAST._IExpr _10187_recursiveGen;
              DCOMPUTF16._IOwnership _10188_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10189_recIdents;
              RAST._IExpr _out5150;
              DCOMPUTF16._IOwnership _out5151;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5152;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5150, out _out5151, out _out5152);
              _10187_recursiveGen = _out5150;
              _10188_recOwned = _out5151;
              _10189_recIdents = _out5152;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10187_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10185_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10186_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5153;
              DCOMPUTF16._IOwnership _out5154;
              DCOMPUTF16.COMP.FromOwnership(r, _10188_recOwned, expectedOwnership, out _out5153, out _out5154);
              r = _out5153;
              resultingOwnership = _out5154;
              readIdents = _10189_recIdents;
            }
          } else if (_source375.is_Primitive) {
            DAST._IPrimitive _10190___mcc_h626 = _source375.dtor_Primitive_a0;
            {
              RAST._IType _10191_fromTpeGen;
              RAST._IType _out5155;
              _out5155 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10191_fromTpeGen = _out5155;
              RAST._IType _10192_toTpeGen;
              RAST._IType _out5156;
              _out5156 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10192_toTpeGen = _out5156;
              RAST._IExpr _10193_recursiveGen;
              DCOMPUTF16._IOwnership _10194_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10195_recIdents;
              RAST._IExpr _out5157;
              DCOMPUTF16._IOwnership _out5158;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5159;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5157, out _out5158, out _out5159);
              _10193_recursiveGen = _out5157;
              _10194_recOwned = _out5158;
              _10195_recIdents = _out5159;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10193_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10191_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10192_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5160;
              DCOMPUTF16._IOwnership _out5161;
              DCOMPUTF16.COMP.FromOwnership(r, _10194_recOwned, expectedOwnership, out _out5160, out _out5161);
              r = _out5160;
              resultingOwnership = _out5161;
              readIdents = _10195_recIdents;
            }
          } else if (_source375.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10196___mcc_h628 = _source375.dtor_Passthrough_a0;
            {
              RAST._IType _10197_fromTpeGen;
              RAST._IType _out5162;
              _out5162 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10197_fromTpeGen = _out5162;
              RAST._IType _10198_toTpeGen;
              RAST._IType _out5163;
              _out5163 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10198_toTpeGen = _out5163;
              RAST._IExpr _10199_recursiveGen;
              DCOMPUTF16._IOwnership _10200_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10201_recIdents;
              RAST._IExpr _out5164;
              DCOMPUTF16._IOwnership _out5165;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5166;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5164, out _out5165, out _out5166);
              _10199_recursiveGen = _out5164;
              _10200_recOwned = _out5165;
              _10201_recIdents = _out5166;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10199_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10197_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10198_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5167;
              DCOMPUTF16._IOwnership _out5168;
              DCOMPUTF16.COMP.FromOwnership(r, _10200_recOwned, expectedOwnership, out _out5167, out _out5168);
              r = _out5167;
              resultingOwnership = _out5168;
              readIdents = _10201_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10202___mcc_h630 = _source375.dtor_TypeArg_a0;
            {
              RAST._IType _10203_fromTpeGen;
              RAST._IType _out5169;
              _out5169 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10203_fromTpeGen = _out5169;
              RAST._IType _10204_toTpeGen;
              RAST._IType _out5170;
              _out5170 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10204_toTpeGen = _out5170;
              RAST._IExpr _10205_recursiveGen;
              DCOMPUTF16._IOwnership _10206_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10207_recIdents;
              RAST._IExpr _out5171;
              DCOMPUTF16._IOwnership _out5172;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5173;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5171, out _out5172, out _out5173);
              _10205_recursiveGen = _out5171;
              _10206_recOwned = _out5172;
              _10207_recIdents = _out5173;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10205_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10203_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10204_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5174;
              DCOMPUTF16._IOwnership _out5175;
              DCOMPUTF16.COMP.FromOwnership(r, _10206_recOwned, expectedOwnership, out _out5174, out _out5175);
              r = _out5174;
              resultingOwnership = _out5175;
              readIdents = _10207_recIdents;
            }
          }
        } else if (_source321.is_Multiset) {
          DAST._IType _10208___mcc_h632 = _source321.dtor_element;
          DAST._IType _source380 = _8728___mcc_h1;
          if (_source380.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10209___mcc_h636 = _source380.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10210___mcc_h637 = _source380.dtor_typeArgs;
            DAST._IResolvedType _10211___mcc_h638 = _source380.dtor_resolved;
            DAST._IResolvedType _source381 = _10211___mcc_h638;
            if (_source381.is_AllocatedDatatype) {
              DAST._IDatatypeType _10212___mcc_h642 = _source381.dtor_datatypeType;
              {
                RAST._IType _10213_fromTpeGen;
                RAST._IType _out5176;
                _out5176 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10213_fromTpeGen = _out5176;
                RAST._IType _10214_toTpeGen;
                RAST._IType _out5177;
                _out5177 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10214_toTpeGen = _out5177;
                RAST._IExpr _10215_recursiveGen;
                DCOMPUTF16._IOwnership _10216_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10217_recIdents;
                RAST._IExpr _out5178;
                DCOMPUTF16._IOwnership _out5179;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5180;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5178, out _out5179, out _out5180);
                _10215_recursiveGen = _out5178;
                _10216_recOwned = _out5179;
                _10217_recIdents = _out5180;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10215_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10213_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10214_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5181;
                DCOMPUTF16._IOwnership _out5182;
                DCOMPUTF16.COMP.FromOwnership(r, _10216_recOwned, expectedOwnership, out _out5181, out _out5182);
                r = _out5181;
                resultingOwnership = _out5182;
                readIdents = _10217_recIdents;
              }
            } else if (_source381.is_Datatype) {
              DAST._IDatatypeType _10218___mcc_h644 = _source381.dtor_datatypeType;
              {
                RAST._IType _10219_fromTpeGen;
                RAST._IType _out5183;
                _out5183 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10219_fromTpeGen = _out5183;
                RAST._IType _10220_toTpeGen;
                RAST._IType _out5184;
                _out5184 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10220_toTpeGen = _out5184;
                RAST._IExpr _10221_recursiveGen;
                DCOMPUTF16._IOwnership _10222_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10223_recIdents;
                RAST._IExpr _out5185;
                DCOMPUTF16._IOwnership _out5186;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5187;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5185, out _out5186, out _out5187);
                _10221_recursiveGen = _out5185;
                _10222_recOwned = _out5186;
                _10223_recIdents = _out5187;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10221_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10219_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10220_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5188;
                DCOMPUTF16._IOwnership _out5189;
                DCOMPUTF16.COMP.FromOwnership(r, _10222_recOwned, expectedOwnership, out _out5188, out _out5189);
                r = _out5188;
                resultingOwnership = _out5189;
                readIdents = _10223_recIdents;
              }
            } else if (_source381.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10224___mcc_h646 = _source381.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10225___mcc_h647 = _source381.dtor_attributes;
              {
                RAST._IType _10226_fromTpeGen;
                RAST._IType _out5190;
                _out5190 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10226_fromTpeGen = _out5190;
                RAST._IType _10227_toTpeGen;
                RAST._IType _out5191;
                _out5191 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10227_toTpeGen = _out5191;
                RAST._IExpr _10228_recursiveGen;
                DCOMPUTF16._IOwnership _10229_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10230_recIdents;
                RAST._IExpr _out5192;
                DCOMPUTF16._IOwnership _out5193;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5194;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5192, out _out5193, out _out5194);
                _10228_recursiveGen = _out5192;
                _10229_recOwned = _out5193;
                _10230_recIdents = _out5194;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10228_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10226_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10227_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5195;
                DCOMPUTF16._IOwnership _out5196;
                DCOMPUTF16.COMP.FromOwnership(r, _10229_recOwned, expectedOwnership, out _out5195, out _out5196);
                r = _out5195;
                resultingOwnership = _out5196;
                readIdents = _10230_recIdents;
              }
            } else {
              DAST._IType _10231___mcc_h650 = _source381.dtor_baseType;
              DAST._INewtypeRange _10232___mcc_h651 = _source381.dtor_range;
              bool _10233___mcc_h652 = _source381.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10234___mcc_h653 = _source381.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10235_attributes = _10234___mcc_h653;
              bool _10236_erase = _10233___mcc_h652;
              DAST._INewtypeRange _10237_range = _10232___mcc_h651;
              DAST._IType _10238_b = _10231___mcc_h650;
              {
                Std.Wrappers._IOption<RAST._IType> _10239_nativeToType;
                _10239_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10238_b, _10237_range);
                if (object.Equals(_8722_fromTpe, _10238_b)) {
                  RAST._IExpr _10240_recursiveGen;
                  DCOMPUTF16._IOwnership _10241_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10242_recIdents;
                  RAST._IExpr _out5197;
                  DCOMPUTF16._IOwnership _out5198;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5199;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5197, out _out5198, out _out5199);
                  _10240_recursiveGen = _out5197;
                  _10241_recOwned = _out5198;
                  _10242_recIdents = _out5199;
                  readIdents = _10242_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source382 = _10239_nativeToType;
                  if (_source382.is_None) {
                    if (_10236_erase) {
                      r = _10240_recursiveGen;
                    } else {
                      RAST._IType _10243_rhsType;
                      RAST._IType _out5200;
                      _out5200 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _10243_rhsType = _out5200;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10243_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10240_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5201;
                    DCOMPUTF16._IOwnership _out5202;
                    DCOMPUTF16.COMP.FromOwnership(r, _10241_recOwned, expectedOwnership, out _out5201, out _out5202);
                    r = _out5201;
                    resultingOwnership = _out5202;
                  } else {
                    RAST._IType _10244___mcc_h1819 = _source382.dtor_value;
                    RAST._IType _10245_v = _10244___mcc_h1819;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10240_recursiveGen, RAST.Expr.create_ExprFromType(_10245_v)));
                    RAST._IExpr _out5203;
                    DCOMPUTF16._IOwnership _out5204;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5203, out _out5204);
                    r = _out5203;
                    resultingOwnership = _out5204;
                  }
                } else {
                  if ((_10239_nativeToType).is_Some) {
                    DAST._IType _source383 = _8722_fromTpe;
                    if (_source383.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10246___mcc_h1820 = _source383.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10247___mcc_h1821 = _source383.dtor_typeArgs;
                      DAST._IResolvedType _10248___mcc_h1822 = _source383.dtor_resolved;
                      DAST._IResolvedType _source384 = _10248___mcc_h1822;
                      if (_source384.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10249___mcc_h1826 = _source384.dtor_datatypeType;
                      } else if (_source384.is_Datatype) {
                        DAST._IDatatypeType _10250___mcc_h1828 = _source384.dtor_datatypeType;
                      } else if (_source384.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10251___mcc_h1830 = _source384.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10252___mcc_h1831 = _source384.dtor_attributes;
                      } else {
                        DAST._IType _10253___mcc_h1834 = _source384.dtor_baseType;
                        DAST._INewtypeRange _10254___mcc_h1835 = _source384.dtor_range;
                        bool _10255___mcc_h1836 = _source384.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10256___mcc_h1837 = _source384.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10257_attributes0 = _10256___mcc_h1837;
                        bool _10258_erase0 = _10255___mcc_h1836;
                        DAST._INewtypeRange _10259_range0 = _10254___mcc_h1835;
                        DAST._IType _10260_b0 = _10253___mcc_h1834;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10261_nativeFromType;
                          _10261_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10260_b0, _10259_range0);
                          if ((_10261_nativeFromType).is_Some) {
                            RAST._IExpr _10262_recursiveGen;
                            DCOMPUTF16._IOwnership _10263_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10264_recIdents;
                            RAST._IExpr _out5205;
                            DCOMPUTF16._IOwnership _out5206;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5207;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5205, out _out5206, out _out5207);
                            _10262_recursiveGen = _out5205;
                            _10263_recOwned = _out5206;
                            _10264_recIdents = _out5207;
                            RAST._IExpr _out5208;
                            DCOMPUTF16._IOwnership _out5209;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10262_recursiveGen, (_10239_nativeToType).dtor_value), _10263_recOwned, expectedOwnership, out _out5208, out _out5209);
                            r = _out5208;
                            resultingOwnership = _out5209;
                            readIdents = _10264_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source383.is_Nullable) {
                      DAST._IType _10265___mcc_h1842 = _source383.dtor_Nullable_a0;
                    } else if (_source383.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10266___mcc_h1844 = _source383.dtor_Tuple_a0;
                    } else if (_source383.is_Array) {
                      DAST._IType _10267___mcc_h1846 = _source383.dtor_element;
                      BigInteger _10268___mcc_h1847 = _source383.dtor_dims;
                    } else if (_source383.is_Seq) {
                      DAST._IType _10269___mcc_h1850 = _source383.dtor_element;
                    } else if (_source383.is_Set) {
                      DAST._IType _10270___mcc_h1852 = _source383.dtor_element;
                    } else if (_source383.is_Multiset) {
                      DAST._IType _10271___mcc_h1854 = _source383.dtor_element;
                    } else if (_source383.is_Map) {
                      DAST._IType _10272___mcc_h1856 = _source383.dtor_key;
                      DAST._IType _10273___mcc_h1857 = _source383.dtor_value;
                    } else if (_source383.is_SetBuilder) {
                      DAST._IType _10274___mcc_h1860 = _source383.dtor_element;
                    } else if (_source383.is_MapBuilder) {
                      DAST._IType _10275___mcc_h1862 = _source383.dtor_key;
                      DAST._IType _10276___mcc_h1863 = _source383.dtor_value;
                    } else if (_source383.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10277___mcc_h1866 = _source383.dtor_args;
                      DAST._IType _10278___mcc_h1867 = _source383.dtor_result;
                    } else if (_source383.is_Primitive) {
                      DAST._IPrimitive _10279___mcc_h1870 = _source383.dtor_Primitive_a0;
                    } else if (_source383.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10280___mcc_h1872 = _source383.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10281___mcc_h1874 = _source383.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10282_recursiveGen;
                      DCOMPUTF16._IOwnership _10283_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10284_recIdents;
                      RAST._IExpr _out5210;
                      DCOMPUTF16._IOwnership _out5211;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5212;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5210, out _out5211, out _out5212);
                      _10282_recursiveGen = _out5210;
                      _10283_recOwned = _out5211;
                      _10284_recIdents = _out5212;
                      RAST._IExpr _out5213;
                      DCOMPUTF16._IOwnership _out5214;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10282_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10239_nativeToType).dtor_value), _10283_recOwned, expectedOwnership, out _out5213, out _out5214);
                      r = _out5213;
                      resultingOwnership = _out5214;
                      readIdents = _10284_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5215;
                  DCOMPUTF16._IOwnership _out5216;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5217;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _10238_b), _10238_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out5215, out _out5216, out _out5217);
                  r = _out5215;
                  resultingOwnership = _out5216;
                  readIdents = _out5217;
                }
              }
            }
          } else if (_source380.is_Nullable) {
            DAST._IType _10285___mcc_h658 = _source380.dtor_Nullable_a0;
            {
              RAST._IExpr _10286_recursiveGen;
              DCOMPUTF16._IOwnership _10287_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10288_recIdents;
              RAST._IExpr _out5218;
              DCOMPUTF16._IOwnership _out5219;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5220;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5218, out _out5219, out _out5220);
              _10286_recursiveGen = _out5218;
              _10287_recOwned = _out5219;
              _10288_recIdents = _out5220;
              r = _10286_recursiveGen;
              if (object.Equals(_10287_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5221;
              DCOMPUTF16._IOwnership _out5222;
              DCOMPUTF16.COMP.FromOwnership(r, _10287_recOwned, expectedOwnership, out _out5221, out _out5222);
              r = _out5221;
              resultingOwnership = _out5222;
              readIdents = _10288_recIdents;
            }
          } else if (_source380.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10289___mcc_h660 = _source380.dtor_Tuple_a0;
            {
              RAST._IType _10290_fromTpeGen;
              RAST._IType _out5223;
              _out5223 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10290_fromTpeGen = _out5223;
              RAST._IType _10291_toTpeGen;
              RAST._IType _out5224;
              _out5224 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10291_toTpeGen = _out5224;
              RAST._IExpr _10292_recursiveGen;
              DCOMPUTF16._IOwnership _10293_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10294_recIdents;
              RAST._IExpr _out5225;
              DCOMPUTF16._IOwnership _out5226;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5227;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5225, out _out5226, out _out5227);
              _10292_recursiveGen = _out5225;
              _10293_recOwned = _out5226;
              _10294_recIdents = _out5227;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10292_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10290_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10291_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5228;
              DCOMPUTF16._IOwnership _out5229;
              DCOMPUTF16.COMP.FromOwnership(r, _10293_recOwned, expectedOwnership, out _out5228, out _out5229);
              r = _out5228;
              resultingOwnership = _out5229;
              readIdents = _10294_recIdents;
            }
          } else if (_source380.is_Array) {
            DAST._IType _10295___mcc_h662 = _source380.dtor_element;
            BigInteger _10296___mcc_h663 = _source380.dtor_dims;
            {
              RAST._IType _10297_fromTpeGen;
              RAST._IType _out5230;
              _out5230 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10297_fromTpeGen = _out5230;
              RAST._IType _10298_toTpeGen;
              RAST._IType _out5231;
              _out5231 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10298_toTpeGen = _out5231;
              RAST._IExpr _10299_recursiveGen;
              DCOMPUTF16._IOwnership _10300_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10301_recIdents;
              RAST._IExpr _out5232;
              DCOMPUTF16._IOwnership _out5233;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5234;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5232, out _out5233, out _out5234);
              _10299_recursiveGen = _out5232;
              _10300_recOwned = _out5233;
              _10301_recIdents = _out5234;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10299_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10297_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10298_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5235;
              DCOMPUTF16._IOwnership _out5236;
              DCOMPUTF16.COMP.FromOwnership(r, _10300_recOwned, expectedOwnership, out _out5235, out _out5236);
              r = _out5235;
              resultingOwnership = _out5236;
              readIdents = _10301_recIdents;
            }
          } else if (_source380.is_Seq) {
            DAST._IType _10302___mcc_h666 = _source380.dtor_element;
            {
              RAST._IType _10303_fromTpeGen;
              RAST._IType _out5237;
              _out5237 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10303_fromTpeGen = _out5237;
              RAST._IType _10304_toTpeGen;
              RAST._IType _out5238;
              _out5238 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10304_toTpeGen = _out5238;
              RAST._IExpr _10305_recursiveGen;
              DCOMPUTF16._IOwnership _10306_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10307_recIdents;
              RAST._IExpr _out5239;
              DCOMPUTF16._IOwnership _out5240;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5241;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5239, out _out5240, out _out5241);
              _10305_recursiveGen = _out5239;
              _10306_recOwned = _out5240;
              _10307_recIdents = _out5241;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10305_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10303_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10304_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5242;
              DCOMPUTF16._IOwnership _out5243;
              DCOMPUTF16.COMP.FromOwnership(r, _10306_recOwned, expectedOwnership, out _out5242, out _out5243);
              r = _out5242;
              resultingOwnership = _out5243;
              readIdents = _10307_recIdents;
            }
          } else if (_source380.is_Set) {
            DAST._IType _10308___mcc_h668 = _source380.dtor_element;
            {
              RAST._IType _10309_fromTpeGen;
              RAST._IType _out5244;
              _out5244 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10309_fromTpeGen = _out5244;
              RAST._IType _10310_toTpeGen;
              RAST._IType _out5245;
              _out5245 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10310_toTpeGen = _out5245;
              RAST._IExpr _10311_recursiveGen;
              DCOMPUTF16._IOwnership _10312_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10313_recIdents;
              RAST._IExpr _out5246;
              DCOMPUTF16._IOwnership _out5247;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5248;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5246, out _out5247, out _out5248);
              _10311_recursiveGen = _out5246;
              _10312_recOwned = _out5247;
              _10313_recIdents = _out5248;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10311_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10309_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10310_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5249;
              DCOMPUTF16._IOwnership _out5250;
              DCOMPUTF16.COMP.FromOwnership(r, _10312_recOwned, expectedOwnership, out _out5249, out _out5250);
              r = _out5249;
              resultingOwnership = _out5250;
              readIdents = _10313_recIdents;
            }
          } else if (_source380.is_Multiset) {
            DAST._IType _10314___mcc_h670 = _source380.dtor_element;
            {
              RAST._IType _10315_fromTpeGen;
              RAST._IType _out5251;
              _out5251 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10315_fromTpeGen = _out5251;
              RAST._IType _10316_toTpeGen;
              RAST._IType _out5252;
              _out5252 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10316_toTpeGen = _out5252;
              RAST._IExpr _10317_recursiveGen;
              DCOMPUTF16._IOwnership _10318_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10319_recIdents;
              RAST._IExpr _out5253;
              DCOMPUTF16._IOwnership _out5254;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5255;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5253, out _out5254, out _out5255);
              _10317_recursiveGen = _out5253;
              _10318_recOwned = _out5254;
              _10319_recIdents = _out5255;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10317_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10315_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10316_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5256;
              DCOMPUTF16._IOwnership _out5257;
              DCOMPUTF16.COMP.FromOwnership(r, _10318_recOwned, expectedOwnership, out _out5256, out _out5257);
              r = _out5256;
              resultingOwnership = _out5257;
              readIdents = _10319_recIdents;
            }
          } else if (_source380.is_Map) {
            DAST._IType _10320___mcc_h672 = _source380.dtor_key;
            DAST._IType _10321___mcc_h673 = _source380.dtor_value;
            {
              RAST._IType _10322_fromTpeGen;
              RAST._IType _out5258;
              _out5258 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10322_fromTpeGen = _out5258;
              RAST._IType _10323_toTpeGen;
              RAST._IType _out5259;
              _out5259 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10323_toTpeGen = _out5259;
              RAST._IExpr _10324_recursiveGen;
              DCOMPUTF16._IOwnership _10325_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10326_recIdents;
              RAST._IExpr _out5260;
              DCOMPUTF16._IOwnership _out5261;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5262;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5260, out _out5261, out _out5262);
              _10324_recursiveGen = _out5260;
              _10325_recOwned = _out5261;
              _10326_recIdents = _out5262;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10324_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10322_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10323_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5263;
              DCOMPUTF16._IOwnership _out5264;
              DCOMPUTF16.COMP.FromOwnership(r, _10325_recOwned, expectedOwnership, out _out5263, out _out5264);
              r = _out5263;
              resultingOwnership = _out5264;
              readIdents = _10326_recIdents;
            }
          } else if (_source380.is_SetBuilder) {
            DAST._IType _10327___mcc_h676 = _source380.dtor_element;
            {
              RAST._IType _10328_fromTpeGen;
              RAST._IType _out5265;
              _out5265 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10328_fromTpeGen = _out5265;
              RAST._IType _10329_toTpeGen;
              RAST._IType _out5266;
              _out5266 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10329_toTpeGen = _out5266;
              RAST._IExpr _10330_recursiveGen;
              DCOMPUTF16._IOwnership _10331_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10332_recIdents;
              RAST._IExpr _out5267;
              DCOMPUTF16._IOwnership _out5268;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5269;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5267, out _out5268, out _out5269);
              _10330_recursiveGen = _out5267;
              _10331_recOwned = _out5268;
              _10332_recIdents = _out5269;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10330_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10328_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10329_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5270;
              DCOMPUTF16._IOwnership _out5271;
              DCOMPUTF16.COMP.FromOwnership(r, _10331_recOwned, expectedOwnership, out _out5270, out _out5271);
              r = _out5270;
              resultingOwnership = _out5271;
              readIdents = _10332_recIdents;
            }
          } else if (_source380.is_MapBuilder) {
            DAST._IType _10333___mcc_h678 = _source380.dtor_key;
            DAST._IType _10334___mcc_h679 = _source380.dtor_value;
            {
              RAST._IType _10335_fromTpeGen;
              RAST._IType _out5272;
              _out5272 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10335_fromTpeGen = _out5272;
              RAST._IType _10336_toTpeGen;
              RAST._IType _out5273;
              _out5273 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10336_toTpeGen = _out5273;
              RAST._IExpr _10337_recursiveGen;
              DCOMPUTF16._IOwnership _10338_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10339_recIdents;
              RAST._IExpr _out5274;
              DCOMPUTF16._IOwnership _out5275;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5276;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5274, out _out5275, out _out5276);
              _10337_recursiveGen = _out5274;
              _10338_recOwned = _out5275;
              _10339_recIdents = _out5276;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10337_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10335_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10336_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5277;
              DCOMPUTF16._IOwnership _out5278;
              DCOMPUTF16.COMP.FromOwnership(r, _10338_recOwned, expectedOwnership, out _out5277, out _out5278);
              r = _out5277;
              resultingOwnership = _out5278;
              readIdents = _10339_recIdents;
            }
          } else if (_source380.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10340___mcc_h682 = _source380.dtor_args;
            DAST._IType _10341___mcc_h683 = _source380.dtor_result;
            {
              RAST._IType _10342_fromTpeGen;
              RAST._IType _out5279;
              _out5279 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10342_fromTpeGen = _out5279;
              RAST._IType _10343_toTpeGen;
              RAST._IType _out5280;
              _out5280 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10343_toTpeGen = _out5280;
              RAST._IExpr _10344_recursiveGen;
              DCOMPUTF16._IOwnership _10345_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10346_recIdents;
              RAST._IExpr _out5281;
              DCOMPUTF16._IOwnership _out5282;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5283;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5281, out _out5282, out _out5283);
              _10344_recursiveGen = _out5281;
              _10345_recOwned = _out5282;
              _10346_recIdents = _out5283;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10344_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10342_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10343_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5284;
              DCOMPUTF16._IOwnership _out5285;
              DCOMPUTF16.COMP.FromOwnership(r, _10345_recOwned, expectedOwnership, out _out5284, out _out5285);
              r = _out5284;
              resultingOwnership = _out5285;
              readIdents = _10346_recIdents;
            }
          } else if (_source380.is_Primitive) {
            DAST._IPrimitive _10347___mcc_h686 = _source380.dtor_Primitive_a0;
            {
              RAST._IType _10348_fromTpeGen;
              RAST._IType _out5286;
              _out5286 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10348_fromTpeGen = _out5286;
              RAST._IType _10349_toTpeGen;
              RAST._IType _out5287;
              _out5287 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10349_toTpeGen = _out5287;
              RAST._IExpr _10350_recursiveGen;
              DCOMPUTF16._IOwnership _10351_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10352_recIdents;
              RAST._IExpr _out5288;
              DCOMPUTF16._IOwnership _out5289;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5290;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5288, out _out5289, out _out5290);
              _10350_recursiveGen = _out5288;
              _10351_recOwned = _out5289;
              _10352_recIdents = _out5290;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10350_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10348_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10349_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5291;
              DCOMPUTF16._IOwnership _out5292;
              DCOMPUTF16.COMP.FromOwnership(r, _10351_recOwned, expectedOwnership, out _out5291, out _out5292);
              r = _out5291;
              resultingOwnership = _out5292;
              readIdents = _10352_recIdents;
            }
          } else if (_source380.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10353___mcc_h688 = _source380.dtor_Passthrough_a0;
            {
              RAST._IType _10354_fromTpeGen;
              RAST._IType _out5293;
              _out5293 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10354_fromTpeGen = _out5293;
              RAST._IType _10355_toTpeGen;
              RAST._IType _out5294;
              _out5294 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10355_toTpeGen = _out5294;
              RAST._IExpr _10356_recursiveGen;
              DCOMPUTF16._IOwnership _10357_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10358_recIdents;
              RAST._IExpr _out5295;
              DCOMPUTF16._IOwnership _out5296;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5297;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5295, out _out5296, out _out5297);
              _10356_recursiveGen = _out5295;
              _10357_recOwned = _out5296;
              _10358_recIdents = _out5297;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10356_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10354_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10355_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5298;
              DCOMPUTF16._IOwnership _out5299;
              DCOMPUTF16.COMP.FromOwnership(r, _10357_recOwned, expectedOwnership, out _out5298, out _out5299);
              r = _out5298;
              resultingOwnership = _out5299;
              readIdents = _10358_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10359___mcc_h690 = _source380.dtor_TypeArg_a0;
            {
              RAST._IType _10360_fromTpeGen;
              RAST._IType _out5300;
              _out5300 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10360_fromTpeGen = _out5300;
              RAST._IType _10361_toTpeGen;
              RAST._IType _out5301;
              _out5301 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10361_toTpeGen = _out5301;
              RAST._IExpr _10362_recursiveGen;
              DCOMPUTF16._IOwnership _10363_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10364_recIdents;
              RAST._IExpr _out5302;
              DCOMPUTF16._IOwnership _out5303;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5304;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5302, out _out5303, out _out5304);
              _10362_recursiveGen = _out5302;
              _10363_recOwned = _out5303;
              _10364_recIdents = _out5304;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10362_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10360_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10361_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5305;
              DCOMPUTF16._IOwnership _out5306;
              DCOMPUTF16.COMP.FromOwnership(r, _10363_recOwned, expectedOwnership, out _out5305, out _out5306);
              r = _out5305;
              resultingOwnership = _out5306;
              readIdents = _10364_recIdents;
            }
          }
        } else if (_source321.is_Map) {
          DAST._IType _10365___mcc_h692 = _source321.dtor_key;
          DAST._IType _10366___mcc_h693 = _source321.dtor_value;
          DAST._IType _source385 = _8728___mcc_h1;
          if (_source385.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10367___mcc_h700 = _source385.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10368___mcc_h701 = _source385.dtor_typeArgs;
            DAST._IResolvedType _10369___mcc_h702 = _source385.dtor_resolved;
            DAST._IResolvedType _source386 = _10369___mcc_h702;
            if (_source386.is_AllocatedDatatype) {
              DAST._IDatatypeType _10370___mcc_h706 = _source386.dtor_datatypeType;
              {
                RAST._IType _10371_fromTpeGen;
                RAST._IType _out5307;
                _out5307 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10371_fromTpeGen = _out5307;
                RAST._IType _10372_toTpeGen;
                RAST._IType _out5308;
                _out5308 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10372_toTpeGen = _out5308;
                RAST._IExpr _10373_recursiveGen;
                DCOMPUTF16._IOwnership _10374_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10375_recIdents;
                RAST._IExpr _out5309;
                DCOMPUTF16._IOwnership _out5310;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5311;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5309, out _out5310, out _out5311);
                _10373_recursiveGen = _out5309;
                _10374_recOwned = _out5310;
                _10375_recIdents = _out5311;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10373_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10371_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10372_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5312;
                DCOMPUTF16._IOwnership _out5313;
                DCOMPUTF16.COMP.FromOwnership(r, _10374_recOwned, expectedOwnership, out _out5312, out _out5313);
                r = _out5312;
                resultingOwnership = _out5313;
                readIdents = _10375_recIdents;
              }
            } else if (_source386.is_Datatype) {
              DAST._IDatatypeType _10376___mcc_h708 = _source386.dtor_datatypeType;
              {
                RAST._IType _10377_fromTpeGen;
                RAST._IType _out5314;
                _out5314 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10377_fromTpeGen = _out5314;
                RAST._IType _10378_toTpeGen;
                RAST._IType _out5315;
                _out5315 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10378_toTpeGen = _out5315;
                RAST._IExpr _10379_recursiveGen;
                DCOMPUTF16._IOwnership _10380_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10381_recIdents;
                RAST._IExpr _out5316;
                DCOMPUTF16._IOwnership _out5317;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5318;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5316, out _out5317, out _out5318);
                _10379_recursiveGen = _out5316;
                _10380_recOwned = _out5317;
                _10381_recIdents = _out5318;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10379_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10377_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10378_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5319;
                DCOMPUTF16._IOwnership _out5320;
                DCOMPUTF16.COMP.FromOwnership(r, _10380_recOwned, expectedOwnership, out _out5319, out _out5320);
                r = _out5319;
                resultingOwnership = _out5320;
                readIdents = _10381_recIdents;
              }
            } else if (_source386.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10382___mcc_h710 = _source386.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10383___mcc_h711 = _source386.dtor_attributes;
              {
                RAST._IType _10384_fromTpeGen;
                RAST._IType _out5321;
                _out5321 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10384_fromTpeGen = _out5321;
                RAST._IType _10385_toTpeGen;
                RAST._IType _out5322;
                _out5322 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10385_toTpeGen = _out5322;
                RAST._IExpr _10386_recursiveGen;
                DCOMPUTF16._IOwnership _10387_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10388_recIdents;
                RAST._IExpr _out5323;
                DCOMPUTF16._IOwnership _out5324;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5325;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5323, out _out5324, out _out5325);
                _10386_recursiveGen = _out5323;
                _10387_recOwned = _out5324;
                _10388_recIdents = _out5325;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10386_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10384_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10385_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5326;
                DCOMPUTF16._IOwnership _out5327;
                DCOMPUTF16.COMP.FromOwnership(r, _10387_recOwned, expectedOwnership, out _out5326, out _out5327);
                r = _out5326;
                resultingOwnership = _out5327;
                readIdents = _10388_recIdents;
              }
            } else {
              DAST._IType _10389___mcc_h714 = _source386.dtor_baseType;
              DAST._INewtypeRange _10390___mcc_h715 = _source386.dtor_range;
              bool _10391___mcc_h716 = _source386.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10392___mcc_h717 = _source386.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10393_attributes = _10392___mcc_h717;
              bool _10394_erase = _10391___mcc_h716;
              DAST._INewtypeRange _10395_range = _10390___mcc_h715;
              DAST._IType _10396_b = _10389___mcc_h714;
              {
                Std.Wrappers._IOption<RAST._IType> _10397_nativeToType;
                _10397_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10396_b, _10395_range);
                if (object.Equals(_8722_fromTpe, _10396_b)) {
                  RAST._IExpr _10398_recursiveGen;
                  DCOMPUTF16._IOwnership _10399_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10400_recIdents;
                  RAST._IExpr _out5328;
                  DCOMPUTF16._IOwnership _out5329;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5330;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5328, out _out5329, out _out5330);
                  _10398_recursiveGen = _out5328;
                  _10399_recOwned = _out5329;
                  _10400_recIdents = _out5330;
                  readIdents = _10400_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source387 = _10397_nativeToType;
                  if (_source387.is_None) {
                    if (_10394_erase) {
                      r = _10398_recursiveGen;
                    } else {
                      RAST._IType _10401_rhsType;
                      RAST._IType _out5331;
                      _out5331 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _10401_rhsType = _out5331;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10401_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10398_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5332;
                    DCOMPUTF16._IOwnership _out5333;
                    DCOMPUTF16.COMP.FromOwnership(r, _10399_recOwned, expectedOwnership, out _out5332, out _out5333);
                    r = _out5332;
                    resultingOwnership = _out5333;
                  } else {
                    RAST._IType _10402___mcc_h1876 = _source387.dtor_value;
                    RAST._IType _10403_v = _10402___mcc_h1876;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10398_recursiveGen, RAST.Expr.create_ExprFromType(_10403_v)));
                    RAST._IExpr _out5334;
                    DCOMPUTF16._IOwnership _out5335;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5334, out _out5335);
                    r = _out5334;
                    resultingOwnership = _out5335;
                  }
                } else {
                  if ((_10397_nativeToType).is_Some) {
                    DAST._IType _source388 = _8722_fromTpe;
                    if (_source388.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10404___mcc_h1877 = _source388.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10405___mcc_h1878 = _source388.dtor_typeArgs;
                      DAST._IResolvedType _10406___mcc_h1879 = _source388.dtor_resolved;
                      DAST._IResolvedType _source389 = _10406___mcc_h1879;
                      if (_source389.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10407___mcc_h1883 = _source389.dtor_datatypeType;
                      } else if (_source389.is_Datatype) {
                        DAST._IDatatypeType _10408___mcc_h1885 = _source389.dtor_datatypeType;
                      } else if (_source389.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10409___mcc_h1887 = _source389.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10410___mcc_h1888 = _source389.dtor_attributes;
                      } else {
                        DAST._IType _10411___mcc_h1891 = _source389.dtor_baseType;
                        DAST._INewtypeRange _10412___mcc_h1892 = _source389.dtor_range;
                        bool _10413___mcc_h1893 = _source389.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10414___mcc_h1894 = _source389.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10415_attributes0 = _10414___mcc_h1894;
                        bool _10416_erase0 = _10413___mcc_h1893;
                        DAST._INewtypeRange _10417_range0 = _10412___mcc_h1892;
                        DAST._IType _10418_b0 = _10411___mcc_h1891;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10419_nativeFromType;
                          _10419_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10418_b0, _10417_range0);
                          if ((_10419_nativeFromType).is_Some) {
                            RAST._IExpr _10420_recursiveGen;
                            DCOMPUTF16._IOwnership _10421_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10422_recIdents;
                            RAST._IExpr _out5336;
                            DCOMPUTF16._IOwnership _out5337;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5338;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5336, out _out5337, out _out5338);
                            _10420_recursiveGen = _out5336;
                            _10421_recOwned = _out5337;
                            _10422_recIdents = _out5338;
                            RAST._IExpr _out5339;
                            DCOMPUTF16._IOwnership _out5340;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10420_recursiveGen, (_10397_nativeToType).dtor_value), _10421_recOwned, expectedOwnership, out _out5339, out _out5340);
                            r = _out5339;
                            resultingOwnership = _out5340;
                            readIdents = _10422_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source388.is_Nullable) {
                      DAST._IType _10423___mcc_h1899 = _source388.dtor_Nullable_a0;
                    } else if (_source388.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10424___mcc_h1901 = _source388.dtor_Tuple_a0;
                    } else if (_source388.is_Array) {
                      DAST._IType _10425___mcc_h1903 = _source388.dtor_element;
                      BigInteger _10426___mcc_h1904 = _source388.dtor_dims;
                    } else if (_source388.is_Seq) {
                      DAST._IType _10427___mcc_h1907 = _source388.dtor_element;
                    } else if (_source388.is_Set) {
                      DAST._IType _10428___mcc_h1909 = _source388.dtor_element;
                    } else if (_source388.is_Multiset) {
                      DAST._IType _10429___mcc_h1911 = _source388.dtor_element;
                    } else if (_source388.is_Map) {
                      DAST._IType _10430___mcc_h1913 = _source388.dtor_key;
                      DAST._IType _10431___mcc_h1914 = _source388.dtor_value;
                    } else if (_source388.is_SetBuilder) {
                      DAST._IType _10432___mcc_h1917 = _source388.dtor_element;
                    } else if (_source388.is_MapBuilder) {
                      DAST._IType _10433___mcc_h1919 = _source388.dtor_key;
                      DAST._IType _10434___mcc_h1920 = _source388.dtor_value;
                    } else if (_source388.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10435___mcc_h1923 = _source388.dtor_args;
                      DAST._IType _10436___mcc_h1924 = _source388.dtor_result;
                    } else if (_source388.is_Primitive) {
                      DAST._IPrimitive _10437___mcc_h1927 = _source388.dtor_Primitive_a0;
                    } else if (_source388.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10438___mcc_h1929 = _source388.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10439___mcc_h1931 = _source388.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10440_recursiveGen;
                      DCOMPUTF16._IOwnership _10441_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10442_recIdents;
                      RAST._IExpr _out5341;
                      DCOMPUTF16._IOwnership _out5342;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5343;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5341, out _out5342, out _out5343);
                      _10440_recursiveGen = _out5341;
                      _10441_recOwned = _out5342;
                      _10442_recIdents = _out5343;
                      RAST._IExpr _out5344;
                      DCOMPUTF16._IOwnership _out5345;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10440_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10397_nativeToType).dtor_value), _10441_recOwned, expectedOwnership, out _out5344, out _out5345);
                      r = _out5344;
                      resultingOwnership = _out5345;
                      readIdents = _10442_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5346;
                  DCOMPUTF16._IOwnership _out5347;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5348;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _10396_b), _10396_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out5346, out _out5347, out _out5348);
                  r = _out5346;
                  resultingOwnership = _out5347;
                  readIdents = _out5348;
                }
              }
            }
          } else if (_source385.is_Nullable) {
            DAST._IType _10443___mcc_h722 = _source385.dtor_Nullable_a0;
            {
              RAST._IExpr _10444_recursiveGen;
              DCOMPUTF16._IOwnership _10445_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10446_recIdents;
              RAST._IExpr _out5349;
              DCOMPUTF16._IOwnership _out5350;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5351;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5349, out _out5350, out _out5351);
              _10444_recursiveGen = _out5349;
              _10445_recOwned = _out5350;
              _10446_recIdents = _out5351;
              r = _10444_recursiveGen;
              if (object.Equals(_10445_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5352;
              DCOMPUTF16._IOwnership _out5353;
              DCOMPUTF16.COMP.FromOwnership(r, _10445_recOwned, expectedOwnership, out _out5352, out _out5353);
              r = _out5352;
              resultingOwnership = _out5353;
              readIdents = _10446_recIdents;
            }
          } else if (_source385.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10447___mcc_h724 = _source385.dtor_Tuple_a0;
            {
              RAST._IType _10448_fromTpeGen;
              RAST._IType _out5354;
              _out5354 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10448_fromTpeGen = _out5354;
              RAST._IType _10449_toTpeGen;
              RAST._IType _out5355;
              _out5355 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10449_toTpeGen = _out5355;
              RAST._IExpr _10450_recursiveGen;
              DCOMPUTF16._IOwnership _10451_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10452_recIdents;
              RAST._IExpr _out5356;
              DCOMPUTF16._IOwnership _out5357;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5358;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5356, out _out5357, out _out5358);
              _10450_recursiveGen = _out5356;
              _10451_recOwned = _out5357;
              _10452_recIdents = _out5358;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10450_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10448_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10449_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5359;
              DCOMPUTF16._IOwnership _out5360;
              DCOMPUTF16.COMP.FromOwnership(r, _10451_recOwned, expectedOwnership, out _out5359, out _out5360);
              r = _out5359;
              resultingOwnership = _out5360;
              readIdents = _10452_recIdents;
            }
          } else if (_source385.is_Array) {
            DAST._IType _10453___mcc_h726 = _source385.dtor_element;
            BigInteger _10454___mcc_h727 = _source385.dtor_dims;
            {
              RAST._IType _10455_fromTpeGen;
              RAST._IType _out5361;
              _out5361 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10455_fromTpeGen = _out5361;
              RAST._IType _10456_toTpeGen;
              RAST._IType _out5362;
              _out5362 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10456_toTpeGen = _out5362;
              RAST._IExpr _10457_recursiveGen;
              DCOMPUTF16._IOwnership _10458_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10459_recIdents;
              RAST._IExpr _out5363;
              DCOMPUTF16._IOwnership _out5364;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5365;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5363, out _out5364, out _out5365);
              _10457_recursiveGen = _out5363;
              _10458_recOwned = _out5364;
              _10459_recIdents = _out5365;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10457_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10455_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10456_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5366;
              DCOMPUTF16._IOwnership _out5367;
              DCOMPUTF16.COMP.FromOwnership(r, _10458_recOwned, expectedOwnership, out _out5366, out _out5367);
              r = _out5366;
              resultingOwnership = _out5367;
              readIdents = _10459_recIdents;
            }
          } else if (_source385.is_Seq) {
            DAST._IType _10460___mcc_h730 = _source385.dtor_element;
            {
              RAST._IType _10461_fromTpeGen;
              RAST._IType _out5368;
              _out5368 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10461_fromTpeGen = _out5368;
              RAST._IType _10462_toTpeGen;
              RAST._IType _out5369;
              _out5369 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10462_toTpeGen = _out5369;
              RAST._IExpr _10463_recursiveGen;
              DCOMPUTF16._IOwnership _10464_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10465_recIdents;
              RAST._IExpr _out5370;
              DCOMPUTF16._IOwnership _out5371;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5372;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5370, out _out5371, out _out5372);
              _10463_recursiveGen = _out5370;
              _10464_recOwned = _out5371;
              _10465_recIdents = _out5372;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10463_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10461_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10462_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5373;
              DCOMPUTF16._IOwnership _out5374;
              DCOMPUTF16.COMP.FromOwnership(r, _10464_recOwned, expectedOwnership, out _out5373, out _out5374);
              r = _out5373;
              resultingOwnership = _out5374;
              readIdents = _10465_recIdents;
            }
          } else if (_source385.is_Set) {
            DAST._IType _10466___mcc_h732 = _source385.dtor_element;
            {
              RAST._IType _10467_fromTpeGen;
              RAST._IType _out5375;
              _out5375 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10467_fromTpeGen = _out5375;
              RAST._IType _10468_toTpeGen;
              RAST._IType _out5376;
              _out5376 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10468_toTpeGen = _out5376;
              RAST._IExpr _10469_recursiveGen;
              DCOMPUTF16._IOwnership _10470_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10471_recIdents;
              RAST._IExpr _out5377;
              DCOMPUTF16._IOwnership _out5378;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5379;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5377, out _out5378, out _out5379);
              _10469_recursiveGen = _out5377;
              _10470_recOwned = _out5378;
              _10471_recIdents = _out5379;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10469_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10467_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10468_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5380;
              DCOMPUTF16._IOwnership _out5381;
              DCOMPUTF16.COMP.FromOwnership(r, _10470_recOwned, expectedOwnership, out _out5380, out _out5381);
              r = _out5380;
              resultingOwnership = _out5381;
              readIdents = _10471_recIdents;
            }
          } else if (_source385.is_Multiset) {
            DAST._IType _10472___mcc_h734 = _source385.dtor_element;
            {
              RAST._IType _10473_fromTpeGen;
              RAST._IType _out5382;
              _out5382 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10473_fromTpeGen = _out5382;
              RAST._IType _10474_toTpeGen;
              RAST._IType _out5383;
              _out5383 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10474_toTpeGen = _out5383;
              RAST._IExpr _10475_recursiveGen;
              DCOMPUTF16._IOwnership _10476_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10477_recIdents;
              RAST._IExpr _out5384;
              DCOMPUTF16._IOwnership _out5385;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5386;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5384, out _out5385, out _out5386);
              _10475_recursiveGen = _out5384;
              _10476_recOwned = _out5385;
              _10477_recIdents = _out5386;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10475_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10473_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10474_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5387;
              DCOMPUTF16._IOwnership _out5388;
              DCOMPUTF16.COMP.FromOwnership(r, _10476_recOwned, expectedOwnership, out _out5387, out _out5388);
              r = _out5387;
              resultingOwnership = _out5388;
              readIdents = _10477_recIdents;
            }
          } else if (_source385.is_Map) {
            DAST._IType _10478___mcc_h736 = _source385.dtor_key;
            DAST._IType _10479___mcc_h737 = _source385.dtor_value;
            {
              RAST._IType _10480_fromTpeGen;
              RAST._IType _out5389;
              _out5389 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10480_fromTpeGen = _out5389;
              RAST._IType _10481_toTpeGen;
              RAST._IType _out5390;
              _out5390 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10481_toTpeGen = _out5390;
              RAST._IExpr _10482_recursiveGen;
              DCOMPUTF16._IOwnership _10483_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10484_recIdents;
              RAST._IExpr _out5391;
              DCOMPUTF16._IOwnership _out5392;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5393;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5391, out _out5392, out _out5393);
              _10482_recursiveGen = _out5391;
              _10483_recOwned = _out5392;
              _10484_recIdents = _out5393;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10482_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10480_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10481_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5394;
              DCOMPUTF16._IOwnership _out5395;
              DCOMPUTF16.COMP.FromOwnership(r, _10483_recOwned, expectedOwnership, out _out5394, out _out5395);
              r = _out5394;
              resultingOwnership = _out5395;
              readIdents = _10484_recIdents;
            }
          } else if (_source385.is_SetBuilder) {
            DAST._IType _10485___mcc_h740 = _source385.dtor_element;
            {
              RAST._IType _10486_fromTpeGen;
              RAST._IType _out5396;
              _out5396 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10486_fromTpeGen = _out5396;
              RAST._IType _10487_toTpeGen;
              RAST._IType _out5397;
              _out5397 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10487_toTpeGen = _out5397;
              RAST._IExpr _10488_recursiveGen;
              DCOMPUTF16._IOwnership _10489_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10490_recIdents;
              RAST._IExpr _out5398;
              DCOMPUTF16._IOwnership _out5399;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5400;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5398, out _out5399, out _out5400);
              _10488_recursiveGen = _out5398;
              _10489_recOwned = _out5399;
              _10490_recIdents = _out5400;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10488_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10486_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10487_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5401;
              DCOMPUTF16._IOwnership _out5402;
              DCOMPUTF16.COMP.FromOwnership(r, _10489_recOwned, expectedOwnership, out _out5401, out _out5402);
              r = _out5401;
              resultingOwnership = _out5402;
              readIdents = _10490_recIdents;
            }
          } else if (_source385.is_MapBuilder) {
            DAST._IType _10491___mcc_h742 = _source385.dtor_key;
            DAST._IType _10492___mcc_h743 = _source385.dtor_value;
            {
              RAST._IType _10493_fromTpeGen;
              RAST._IType _out5403;
              _out5403 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10493_fromTpeGen = _out5403;
              RAST._IType _10494_toTpeGen;
              RAST._IType _out5404;
              _out5404 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10494_toTpeGen = _out5404;
              RAST._IExpr _10495_recursiveGen;
              DCOMPUTF16._IOwnership _10496_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10497_recIdents;
              RAST._IExpr _out5405;
              DCOMPUTF16._IOwnership _out5406;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5407;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5405, out _out5406, out _out5407);
              _10495_recursiveGen = _out5405;
              _10496_recOwned = _out5406;
              _10497_recIdents = _out5407;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10495_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10493_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10494_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5408;
              DCOMPUTF16._IOwnership _out5409;
              DCOMPUTF16.COMP.FromOwnership(r, _10496_recOwned, expectedOwnership, out _out5408, out _out5409);
              r = _out5408;
              resultingOwnership = _out5409;
              readIdents = _10497_recIdents;
            }
          } else if (_source385.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10498___mcc_h746 = _source385.dtor_args;
            DAST._IType _10499___mcc_h747 = _source385.dtor_result;
            {
              RAST._IType _10500_fromTpeGen;
              RAST._IType _out5410;
              _out5410 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10500_fromTpeGen = _out5410;
              RAST._IType _10501_toTpeGen;
              RAST._IType _out5411;
              _out5411 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10501_toTpeGen = _out5411;
              RAST._IExpr _10502_recursiveGen;
              DCOMPUTF16._IOwnership _10503_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10504_recIdents;
              RAST._IExpr _out5412;
              DCOMPUTF16._IOwnership _out5413;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5414;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5412, out _out5413, out _out5414);
              _10502_recursiveGen = _out5412;
              _10503_recOwned = _out5413;
              _10504_recIdents = _out5414;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10502_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10500_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10501_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5415;
              DCOMPUTF16._IOwnership _out5416;
              DCOMPUTF16.COMP.FromOwnership(r, _10503_recOwned, expectedOwnership, out _out5415, out _out5416);
              r = _out5415;
              resultingOwnership = _out5416;
              readIdents = _10504_recIdents;
            }
          } else if (_source385.is_Primitive) {
            DAST._IPrimitive _10505___mcc_h750 = _source385.dtor_Primitive_a0;
            {
              RAST._IType _10506_fromTpeGen;
              RAST._IType _out5417;
              _out5417 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10506_fromTpeGen = _out5417;
              RAST._IType _10507_toTpeGen;
              RAST._IType _out5418;
              _out5418 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10507_toTpeGen = _out5418;
              RAST._IExpr _10508_recursiveGen;
              DCOMPUTF16._IOwnership _10509_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10510_recIdents;
              RAST._IExpr _out5419;
              DCOMPUTF16._IOwnership _out5420;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5421;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5419, out _out5420, out _out5421);
              _10508_recursiveGen = _out5419;
              _10509_recOwned = _out5420;
              _10510_recIdents = _out5421;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10508_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10506_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10507_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5422;
              DCOMPUTF16._IOwnership _out5423;
              DCOMPUTF16.COMP.FromOwnership(r, _10509_recOwned, expectedOwnership, out _out5422, out _out5423);
              r = _out5422;
              resultingOwnership = _out5423;
              readIdents = _10510_recIdents;
            }
          } else if (_source385.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10511___mcc_h752 = _source385.dtor_Passthrough_a0;
            {
              RAST._IType _10512_fromTpeGen;
              RAST._IType _out5424;
              _out5424 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10512_fromTpeGen = _out5424;
              RAST._IType _10513_toTpeGen;
              RAST._IType _out5425;
              _out5425 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10513_toTpeGen = _out5425;
              RAST._IExpr _10514_recursiveGen;
              DCOMPUTF16._IOwnership _10515_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10516_recIdents;
              RAST._IExpr _out5426;
              DCOMPUTF16._IOwnership _out5427;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5428;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5426, out _out5427, out _out5428);
              _10514_recursiveGen = _out5426;
              _10515_recOwned = _out5427;
              _10516_recIdents = _out5428;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10514_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10512_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10513_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5429;
              DCOMPUTF16._IOwnership _out5430;
              DCOMPUTF16.COMP.FromOwnership(r, _10515_recOwned, expectedOwnership, out _out5429, out _out5430);
              r = _out5429;
              resultingOwnership = _out5430;
              readIdents = _10516_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10517___mcc_h754 = _source385.dtor_TypeArg_a0;
            {
              RAST._IType _10518_fromTpeGen;
              RAST._IType _out5431;
              _out5431 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10518_fromTpeGen = _out5431;
              RAST._IType _10519_toTpeGen;
              RAST._IType _out5432;
              _out5432 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10519_toTpeGen = _out5432;
              RAST._IExpr _10520_recursiveGen;
              DCOMPUTF16._IOwnership _10521_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10522_recIdents;
              RAST._IExpr _out5433;
              DCOMPUTF16._IOwnership _out5434;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5435;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5433, out _out5434, out _out5435);
              _10520_recursiveGen = _out5433;
              _10521_recOwned = _out5434;
              _10522_recIdents = _out5435;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10520_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10518_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10519_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5436;
              DCOMPUTF16._IOwnership _out5437;
              DCOMPUTF16.COMP.FromOwnership(r, _10521_recOwned, expectedOwnership, out _out5436, out _out5437);
              r = _out5436;
              resultingOwnership = _out5437;
              readIdents = _10522_recIdents;
            }
          }
        } else if (_source321.is_SetBuilder) {
          DAST._IType _10523___mcc_h756 = _source321.dtor_element;
          DAST._IType _source390 = _8728___mcc_h1;
          if (_source390.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10524___mcc_h760 = _source390.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10525___mcc_h761 = _source390.dtor_typeArgs;
            DAST._IResolvedType _10526___mcc_h762 = _source390.dtor_resolved;
            DAST._IResolvedType _source391 = _10526___mcc_h762;
            if (_source391.is_AllocatedDatatype) {
              DAST._IDatatypeType _10527___mcc_h766 = _source391.dtor_datatypeType;
              {
                RAST._IType _10528_fromTpeGen;
                RAST._IType _out5438;
                _out5438 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10528_fromTpeGen = _out5438;
                RAST._IType _10529_toTpeGen;
                RAST._IType _out5439;
                _out5439 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10529_toTpeGen = _out5439;
                RAST._IExpr _10530_recursiveGen;
                DCOMPUTF16._IOwnership _10531_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10532_recIdents;
                RAST._IExpr _out5440;
                DCOMPUTF16._IOwnership _out5441;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5442;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5440, out _out5441, out _out5442);
                _10530_recursiveGen = _out5440;
                _10531_recOwned = _out5441;
                _10532_recIdents = _out5442;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10530_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10528_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10529_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5443;
                DCOMPUTF16._IOwnership _out5444;
                DCOMPUTF16.COMP.FromOwnership(r, _10531_recOwned, expectedOwnership, out _out5443, out _out5444);
                r = _out5443;
                resultingOwnership = _out5444;
                readIdents = _10532_recIdents;
              }
            } else if (_source391.is_Datatype) {
              DAST._IDatatypeType _10533___mcc_h768 = _source391.dtor_datatypeType;
              {
                RAST._IType _10534_fromTpeGen;
                RAST._IType _out5445;
                _out5445 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10534_fromTpeGen = _out5445;
                RAST._IType _10535_toTpeGen;
                RAST._IType _out5446;
                _out5446 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10535_toTpeGen = _out5446;
                RAST._IExpr _10536_recursiveGen;
                DCOMPUTF16._IOwnership _10537_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10538_recIdents;
                RAST._IExpr _out5447;
                DCOMPUTF16._IOwnership _out5448;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5449;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5447, out _out5448, out _out5449);
                _10536_recursiveGen = _out5447;
                _10537_recOwned = _out5448;
                _10538_recIdents = _out5449;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10536_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10534_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10535_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5450;
                DCOMPUTF16._IOwnership _out5451;
                DCOMPUTF16.COMP.FromOwnership(r, _10537_recOwned, expectedOwnership, out _out5450, out _out5451);
                r = _out5450;
                resultingOwnership = _out5451;
                readIdents = _10538_recIdents;
              }
            } else if (_source391.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10539___mcc_h770 = _source391.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10540___mcc_h771 = _source391.dtor_attributes;
              {
                RAST._IType _10541_fromTpeGen;
                RAST._IType _out5452;
                _out5452 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10541_fromTpeGen = _out5452;
                RAST._IType _10542_toTpeGen;
                RAST._IType _out5453;
                _out5453 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10542_toTpeGen = _out5453;
                RAST._IExpr _10543_recursiveGen;
                DCOMPUTF16._IOwnership _10544_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10545_recIdents;
                RAST._IExpr _out5454;
                DCOMPUTF16._IOwnership _out5455;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5456;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5454, out _out5455, out _out5456);
                _10543_recursiveGen = _out5454;
                _10544_recOwned = _out5455;
                _10545_recIdents = _out5456;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10543_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10541_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10542_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5457;
                DCOMPUTF16._IOwnership _out5458;
                DCOMPUTF16.COMP.FromOwnership(r, _10544_recOwned, expectedOwnership, out _out5457, out _out5458);
                r = _out5457;
                resultingOwnership = _out5458;
                readIdents = _10545_recIdents;
              }
            } else {
              DAST._IType _10546___mcc_h774 = _source391.dtor_baseType;
              DAST._INewtypeRange _10547___mcc_h775 = _source391.dtor_range;
              bool _10548___mcc_h776 = _source391.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10549___mcc_h777 = _source391.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10550_attributes = _10549___mcc_h777;
              bool _10551_erase = _10548___mcc_h776;
              DAST._INewtypeRange _10552_range = _10547___mcc_h775;
              DAST._IType _10553_b = _10546___mcc_h774;
              {
                Std.Wrappers._IOption<RAST._IType> _10554_nativeToType;
                _10554_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10553_b, _10552_range);
                if (object.Equals(_8722_fromTpe, _10553_b)) {
                  RAST._IExpr _10555_recursiveGen;
                  DCOMPUTF16._IOwnership _10556_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10557_recIdents;
                  RAST._IExpr _out5459;
                  DCOMPUTF16._IOwnership _out5460;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5461;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5459, out _out5460, out _out5461);
                  _10555_recursiveGen = _out5459;
                  _10556_recOwned = _out5460;
                  _10557_recIdents = _out5461;
                  readIdents = _10557_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source392 = _10554_nativeToType;
                  if (_source392.is_None) {
                    if (_10551_erase) {
                      r = _10555_recursiveGen;
                    } else {
                      RAST._IType _10558_rhsType;
                      RAST._IType _out5462;
                      _out5462 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _10558_rhsType = _out5462;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10558_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10555_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5463;
                    DCOMPUTF16._IOwnership _out5464;
                    DCOMPUTF16.COMP.FromOwnership(r, _10556_recOwned, expectedOwnership, out _out5463, out _out5464);
                    r = _out5463;
                    resultingOwnership = _out5464;
                  } else {
                    RAST._IType _10559___mcc_h1933 = _source392.dtor_value;
                    RAST._IType _10560_v = _10559___mcc_h1933;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10555_recursiveGen, RAST.Expr.create_ExprFromType(_10560_v)));
                    RAST._IExpr _out5465;
                    DCOMPUTF16._IOwnership _out5466;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5465, out _out5466);
                    r = _out5465;
                    resultingOwnership = _out5466;
                  }
                } else {
                  if ((_10554_nativeToType).is_Some) {
                    DAST._IType _source393 = _8722_fromTpe;
                    if (_source393.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10561___mcc_h1934 = _source393.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10562___mcc_h1935 = _source393.dtor_typeArgs;
                      DAST._IResolvedType _10563___mcc_h1936 = _source393.dtor_resolved;
                      DAST._IResolvedType _source394 = _10563___mcc_h1936;
                      if (_source394.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10564___mcc_h1940 = _source394.dtor_datatypeType;
                      } else if (_source394.is_Datatype) {
                        DAST._IDatatypeType _10565___mcc_h1942 = _source394.dtor_datatypeType;
                      } else if (_source394.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10566___mcc_h1944 = _source394.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10567___mcc_h1945 = _source394.dtor_attributes;
                      } else {
                        DAST._IType _10568___mcc_h1948 = _source394.dtor_baseType;
                        DAST._INewtypeRange _10569___mcc_h1949 = _source394.dtor_range;
                        bool _10570___mcc_h1950 = _source394.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10571___mcc_h1951 = _source394.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10572_attributes0 = _10571___mcc_h1951;
                        bool _10573_erase0 = _10570___mcc_h1950;
                        DAST._INewtypeRange _10574_range0 = _10569___mcc_h1949;
                        DAST._IType _10575_b0 = _10568___mcc_h1948;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10576_nativeFromType;
                          _10576_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10575_b0, _10574_range0);
                          if ((_10576_nativeFromType).is_Some) {
                            RAST._IExpr _10577_recursiveGen;
                            DCOMPUTF16._IOwnership _10578_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10579_recIdents;
                            RAST._IExpr _out5467;
                            DCOMPUTF16._IOwnership _out5468;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5469;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5467, out _out5468, out _out5469);
                            _10577_recursiveGen = _out5467;
                            _10578_recOwned = _out5468;
                            _10579_recIdents = _out5469;
                            RAST._IExpr _out5470;
                            DCOMPUTF16._IOwnership _out5471;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10577_recursiveGen, (_10554_nativeToType).dtor_value), _10578_recOwned, expectedOwnership, out _out5470, out _out5471);
                            r = _out5470;
                            resultingOwnership = _out5471;
                            readIdents = _10579_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source393.is_Nullable) {
                      DAST._IType _10580___mcc_h1956 = _source393.dtor_Nullable_a0;
                    } else if (_source393.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10581___mcc_h1958 = _source393.dtor_Tuple_a0;
                    } else if (_source393.is_Array) {
                      DAST._IType _10582___mcc_h1960 = _source393.dtor_element;
                      BigInteger _10583___mcc_h1961 = _source393.dtor_dims;
                    } else if (_source393.is_Seq) {
                      DAST._IType _10584___mcc_h1964 = _source393.dtor_element;
                    } else if (_source393.is_Set) {
                      DAST._IType _10585___mcc_h1966 = _source393.dtor_element;
                    } else if (_source393.is_Multiset) {
                      DAST._IType _10586___mcc_h1968 = _source393.dtor_element;
                    } else if (_source393.is_Map) {
                      DAST._IType _10587___mcc_h1970 = _source393.dtor_key;
                      DAST._IType _10588___mcc_h1971 = _source393.dtor_value;
                    } else if (_source393.is_SetBuilder) {
                      DAST._IType _10589___mcc_h1974 = _source393.dtor_element;
                    } else if (_source393.is_MapBuilder) {
                      DAST._IType _10590___mcc_h1976 = _source393.dtor_key;
                      DAST._IType _10591___mcc_h1977 = _source393.dtor_value;
                    } else if (_source393.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10592___mcc_h1980 = _source393.dtor_args;
                      DAST._IType _10593___mcc_h1981 = _source393.dtor_result;
                    } else if (_source393.is_Primitive) {
                      DAST._IPrimitive _10594___mcc_h1984 = _source393.dtor_Primitive_a0;
                    } else if (_source393.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10595___mcc_h1986 = _source393.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10596___mcc_h1988 = _source393.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10597_recursiveGen;
                      DCOMPUTF16._IOwnership _10598_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10599_recIdents;
                      RAST._IExpr _out5472;
                      DCOMPUTF16._IOwnership _out5473;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5474;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5472, out _out5473, out _out5474);
                      _10597_recursiveGen = _out5472;
                      _10598_recOwned = _out5473;
                      _10599_recIdents = _out5474;
                      RAST._IExpr _out5475;
                      DCOMPUTF16._IOwnership _out5476;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10597_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10554_nativeToType).dtor_value), _10598_recOwned, expectedOwnership, out _out5475, out _out5476);
                      r = _out5475;
                      resultingOwnership = _out5476;
                      readIdents = _10599_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5477;
                  DCOMPUTF16._IOwnership _out5478;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5479;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _10553_b), _10553_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out5477, out _out5478, out _out5479);
                  r = _out5477;
                  resultingOwnership = _out5478;
                  readIdents = _out5479;
                }
              }
            }
          } else if (_source390.is_Nullable) {
            DAST._IType _10600___mcc_h782 = _source390.dtor_Nullable_a0;
            {
              RAST._IExpr _10601_recursiveGen;
              DCOMPUTF16._IOwnership _10602_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10603_recIdents;
              RAST._IExpr _out5480;
              DCOMPUTF16._IOwnership _out5481;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5482;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5480, out _out5481, out _out5482);
              _10601_recursiveGen = _out5480;
              _10602_recOwned = _out5481;
              _10603_recIdents = _out5482;
              r = _10601_recursiveGen;
              if (object.Equals(_10602_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5483;
              DCOMPUTF16._IOwnership _out5484;
              DCOMPUTF16.COMP.FromOwnership(r, _10602_recOwned, expectedOwnership, out _out5483, out _out5484);
              r = _out5483;
              resultingOwnership = _out5484;
              readIdents = _10603_recIdents;
            }
          } else if (_source390.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10604___mcc_h784 = _source390.dtor_Tuple_a0;
            {
              RAST._IType _10605_fromTpeGen;
              RAST._IType _out5485;
              _out5485 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10605_fromTpeGen = _out5485;
              RAST._IType _10606_toTpeGen;
              RAST._IType _out5486;
              _out5486 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10606_toTpeGen = _out5486;
              RAST._IExpr _10607_recursiveGen;
              DCOMPUTF16._IOwnership _10608_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10609_recIdents;
              RAST._IExpr _out5487;
              DCOMPUTF16._IOwnership _out5488;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5489;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5487, out _out5488, out _out5489);
              _10607_recursiveGen = _out5487;
              _10608_recOwned = _out5488;
              _10609_recIdents = _out5489;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10607_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10605_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10606_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5490;
              DCOMPUTF16._IOwnership _out5491;
              DCOMPUTF16.COMP.FromOwnership(r, _10608_recOwned, expectedOwnership, out _out5490, out _out5491);
              r = _out5490;
              resultingOwnership = _out5491;
              readIdents = _10609_recIdents;
            }
          } else if (_source390.is_Array) {
            DAST._IType _10610___mcc_h786 = _source390.dtor_element;
            BigInteger _10611___mcc_h787 = _source390.dtor_dims;
            {
              RAST._IType _10612_fromTpeGen;
              RAST._IType _out5492;
              _out5492 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10612_fromTpeGen = _out5492;
              RAST._IType _10613_toTpeGen;
              RAST._IType _out5493;
              _out5493 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10613_toTpeGen = _out5493;
              RAST._IExpr _10614_recursiveGen;
              DCOMPUTF16._IOwnership _10615_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10616_recIdents;
              RAST._IExpr _out5494;
              DCOMPUTF16._IOwnership _out5495;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5496;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5494, out _out5495, out _out5496);
              _10614_recursiveGen = _out5494;
              _10615_recOwned = _out5495;
              _10616_recIdents = _out5496;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10614_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10612_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10613_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5497;
              DCOMPUTF16._IOwnership _out5498;
              DCOMPUTF16.COMP.FromOwnership(r, _10615_recOwned, expectedOwnership, out _out5497, out _out5498);
              r = _out5497;
              resultingOwnership = _out5498;
              readIdents = _10616_recIdents;
            }
          } else if (_source390.is_Seq) {
            DAST._IType _10617___mcc_h790 = _source390.dtor_element;
            {
              RAST._IType _10618_fromTpeGen;
              RAST._IType _out5499;
              _out5499 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10618_fromTpeGen = _out5499;
              RAST._IType _10619_toTpeGen;
              RAST._IType _out5500;
              _out5500 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10619_toTpeGen = _out5500;
              RAST._IExpr _10620_recursiveGen;
              DCOMPUTF16._IOwnership _10621_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10622_recIdents;
              RAST._IExpr _out5501;
              DCOMPUTF16._IOwnership _out5502;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5503;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5501, out _out5502, out _out5503);
              _10620_recursiveGen = _out5501;
              _10621_recOwned = _out5502;
              _10622_recIdents = _out5503;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10620_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10618_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10619_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5504;
              DCOMPUTF16._IOwnership _out5505;
              DCOMPUTF16.COMP.FromOwnership(r, _10621_recOwned, expectedOwnership, out _out5504, out _out5505);
              r = _out5504;
              resultingOwnership = _out5505;
              readIdents = _10622_recIdents;
            }
          } else if (_source390.is_Set) {
            DAST._IType _10623___mcc_h792 = _source390.dtor_element;
            {
              RAST._IType _10624_fromTpeGen;
              RAST._IType _out5506;
              _out5506 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10624_fromTpeGen = _out5506;
              RAST._IType _10625_toTpeGen;
              RAST._IType _out5507;
              _out5507 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10625_toTpeGen = _out5507;
              RAST._IExpr _10626_recursiveGen;
              DCOMPUTF16._IOwnership _10627_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10628_recIdents;
              RAST._IExpr _out5508;
              DCOMPUTF16._IOwnership _out5509;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5510;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5508, out _out5509, out _out5510);
              _10626_recursiveGen = _out5508;
              _10627_recOwned = _out5509;
              _10628_recIdents = _out5510;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10626_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10624_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10625_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5511;
              DCOMPUTF16._IOwnership _out5512;
              DCOMPUTF16.COMP.FromOwnership(r, _10627_recOwned, expectedOwnership, out _out5511, out _out5512);
              r = _out5511;
              resultingOwnership = _out5512;
              readIdents = _10628_recIdents;
            }
          } else if (_source390.is_Multiset) {
            DAST._IType _10629___mcc_h794 = _source390.dtor_element;
            {
              RAST._IType _10630_fromTpeGen;
              RAST._IType _out5513;
              _out5513 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10630_fromTpeGen = _out5513;
              RAST._IType _10631_toTpeGen;
              RAST._IType _out5514;
              _out5514 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10631_toTpeGen = _out5514;
              RAST._IExpr _10632_recursiveGen;
              DCOMPUTF16._IOwnership _10633_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10634_recIdents;
              RAST._IExpr _out5515;
              DCOMPUTF16._IOwnership _out5516;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5517;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5515, out _out5516, out _out5517);
              _10632_recursiveGen = _out5515;
              _10633_recOwned = _out5516;
              _10634_recIdents = _out5517;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10632_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10630_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10631_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5518;
              DCOMPUTF16._IOwnership _out5519;
              DCOMPUTF16.COMP.FromOwnership(r, _10633_recOwned, expectedOwnership, out _out5518, out _out5519);
              r = _out5518;
              resultingOwnership = _out5519;
              readIdents = _10634_recIdents;
            }
          } else if (_source390.is_Map) {
            DAST._IType _10635___mcc_h796 = _source390.dtor_key;
            DAST._IType _10636___mcc_h797 = _source390.dtor_value;
            {
              RAST._IType _10637_fromTpeGen;
              RAST._IType _out5520;
              _out5520 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10637_fromTpeGen = _out5520;
              RAST._IType _10638_toTpeGen;
              RAST._IType _out5521;
              _out5521 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10638_toTpeGen = _out5521;
              RAST._IExpr _10639_recursiveGen;
              DCOMPUTF16._IOwnership _10640_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10641_recIdents;
              RAST._IExpr _out5522;
              DCOMPUTF16._IOwnership _out5523;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5524;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5522, out _out5523, out _out5524);
              _10639_recursiveGen = _out5522;
              _10640_recOwned = _out5523;
              _10641_recIdents = _out5524;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10639_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10637_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10638_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5525;
              DCOMPUTF16._IOwnership _out5526;
              DCOMPUTF16.COMP.FromOwnership(r, _10640_recOwned, expectedOwnership, out _out5525, out _out5526);
              r = _out5525;
              resultingOwnership = _out5526;
              readIdents = _10641_recIdents;
            }
          } else if (_source390.is_SetBuilder) {
            DAST._IType _10642___mcc_h800 = _source390.dtor_element;
            {
              RAST._IType _10643_fromTpeGen;
              RAST._IType _out5527;
              _out5527 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10643_fromTpeGen = _out5527;
              RAST._IType _10644_toTpeGen;
              RAST._IType _out5528;
              _out5528 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10644_toTpeGen = _out5528;
              RAST._IExpr _10645_recursiveGen;
              DCOMPUTF16._IOwnership _10646_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10647_recIdents;
              RAST._IExpr _out5529;
              DCOMPUTF16._IOwnership _out5530;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5531;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5529, out _out5530, out _out5531);
              _10645_recursiveGen = _out5529;
              _10646_recOwned = _out5530;
              _10647_recIdents = _out5531;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10645_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10643_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10644_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5532;
              DCOMPUTF16._IOwnership _out5533;
              DCOMPUTF16.COMP.FromOwnership(r, _10646_recOwned, expectedOwnership, out _out5532, out _out5533);
              r = _out5532;
              resultingOwnership = _out5533;
              readIdents = _10647_recIdents;
            }
          } else if (_source390.is_MapBuilder) {
            DAST._IType _10648___mcc_h802 = _source390.dtor_key;
            DAST._IType _10649___mcc_h803 = _source390.dtor_value;
            {
              RAST._IType _10650_fromTpeGen;
              RAST._IType _out5534;
              _out5534 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10650_fromTpeGen = _out5534;
              RAST._IType _10651_toTpeGen;
              RAST._IType _out5535;
              _out5535 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10651_toTpeGen = _out5535;
              RAST._IExpr _10652_recursiveGen;
              DCOMPUTF16._IOwnership _10653_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10654_recIdents;
              RAST._IExpr _out5536;
              DCOMPUTF16._IOwnership _out5537;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5538;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5536, out _out5537, out _out5538);
              _10652_recursiveGen = _out5536;
              _10653_recOwned = _out5537;
              _10654_recIdents = _out5538;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10652_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10650_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10651_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5539;
              DCOMPUTF16._IOwnership _out5540;
              DCOMPUTF16.COMP.FromOwnership(r, _10653_recOwned, expectedOwnership, out _out5539, out _out5540);
              r = _out5539;
              resultingOwnership = _out5540;
              readIdents = _10654_recIdents;
            }
          } else if (_source390.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10655___mcc_h806 = _source390.dtor_args;
            DAST._IType _10656___mcc_h807 = _source390.dtor_result;
            {
              RAST._IType _10657_fromTpeGen;
              RAST._IType _out5541;
              _out5541 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10657_fromTpeGen = _out5541;
              RAST._IType _10658_toTpeGen;
              RAST._IType _out5542;
              _out5542 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10658_toTpeGen = _out5542;
              RAST._IExpr _10659_recursiveGen;
              DCOMPUTF16._IOwnership _10660_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10661_recIdents;
              RAST._IExpr _out5543;
              DCOMPUTF16._IOwnership _out5544;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5545;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5543, out _out5544, out _out5545);
              _10659_recursiveGen = _out5543;
              _10660_recOwned = _out5544;
              _10661_recIdents = _out5545;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10659_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10657_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10658_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5546;
              DCOMPUTF16._IOwnership _out5547;
              DCOMPUTF16.COMP.FromOwnership(r, _10660_recOwned, expectedOwnership, out _out5546, out _out5547);
              r = _out5546;
              resultingOwnership = _out5547;
              readIdents = _10661_recIdents;
            }
          } else if (_source390.is_Primitive) {
            DAST._IPrimitive _10662___mcc_h810 = _source390.dtor_Primitive_a0;
            {
              RAST._IType _10663_fromTpeGen;
              RAST._IType _out5548;
              _out5548 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10663_fromTpeGen = _out5548;
              RAST._IType _10664_toTpeGen;
              RAST._IType _out5549;
              _out5549 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10664_toTpeGen = _out5549;
              RAST._IExpr _10665_recursiveGen;
              DCOMPUTF16._IOwnership _10666_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10667_recIdents;
              RAST._IExpr _out5550;
              DCOMPUTF16._IOwnership _out5551;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5552;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5550, out _out5551, out _out5552);
              _10665_recursiveGen = _out5550;
              _10666_recOwned = _out5551;
              _10667_recIdents = _out5552;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10665_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10663_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10664_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5553;
              DCOMPUTF16._IOwnership _out5554;
              DCOMPUTF16.COMP.FromOwnership(r, _10666_recOwned, expectedOwnership, out _out5553, out _out5554);
              r = _out5553;
              resultingOwnership = _out5554;
              readIdents = _10667_recIdents;
            }
          } else if (_source390.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10668___mcc_h812 = _source390.dtor_Passthrough_a0;
            {
              RAST._IType _10669_fromTpeGen;
              RAST._IType _out5555;
              _out5555 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10669_fromTpeGen = _out5555;
              RAST._IType _10670_toTpeGen;
              RAST._IType _out5556;
              _out5556 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10670_toTpeGen = _out5556;
              RAST._IExpr _10671_recursiveGen;
              DCOMPUTF16._IOwnership _10672_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10673_recIdents;
              RAST._IExpr _out5557;
              DCOMPUTF16._IOwnership _out5558;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5559;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5557, out _out5558, out _out5559);
              _10671_recursiveGen = _out5557;
              _10672_recOwned = _out5558;
              _10673_recIdents = _out5559;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10671_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10669_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10670_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5560;
              DCOMPUTF16._IOwnership _out5561;
              DCOMPUTF16.COMP.FromOwnership(r, _10672_recOwned, expectedOwnership, out _out5560, out _out5561);
              r = _out5560;
              resultingOwnership = _out5561;
              readIdents = _10673_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10674___mcc_h814 = _source390.dtor_TypeArg_a0;
            {
              RAST._IType _10675_fromTpeGen;
              RAST._IType _out5562;
              _out5562 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10675_fromTpeGen = _out5562;
              RAST._IType _10676_toTpeGen;
              RAST._IType _out5563;
              _out5563 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10676_toTpeGen = _out5563;
              RAST._IExpr _10677_recursiveGen;
              DCOMPUTF16._IOwnership _10678_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10679_recIdents;
              RAST._IExpr _out5564;
              DCOMPUTF16._IOwnership _out5565;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5566;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5564, out _out5565, out _out5566);
              _10677_recursiveGen = _out5564;
              _10678_recOwned = _out5565;
              _10679_recIdents = _out5566;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10677_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10675_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10676_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5567;
              DCOMPUTF16._IOwnership _out5568;
              DCOMPUTF16.COMP.FromOwnership(r, _10678_recOwned, expectedOwnership, out _out5567, out _out5568);
              r = _out5567;
              resultingOwnership = _out5568;
              readIdents = _10679_recIdents;
            }
          }
        } else if (_source321.is_MapBuilder) {
          DAST._IType _10680___mcc_h816 = _source321.dtor_key;
          DAST._IType _10681___mcc_h817 = _source321.dtor_value;
          DAST._IType _source395 = _8728___mcc_h1;
          if (_source395.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10682___mcc_h824 = _source395.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10683___mcc_h825 = _source395.dtor_typeArgs;
            DAST._IResolvedType _10684___mcc_h826 = _source395.dtor_resolved;
            DAST._IResolvedType _source396 = _10684___mcc_h826;
            if (_source396.is_AllocatedDatatype) {
              DAST._IDatatypeType _10685___mcc_h830 = _source396.dtor_datatypeType;
              {
                RAST._IType _10686_fromTpeGen;
                RAST._IType _out5569;
                _out5569 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10686_fromTpeGen = _out5569;
                RAST._IType _10687_toTpeGen;
                RAST._IType _out5570;
                _out5570 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10687_toTpeGen = _out5570;
                RAST._IExpr _10688_recursiveGen;
                DCOMPUTF16._IOwnership _10689_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10690_recIdents;
                RAST._IExpr _out5571;
                DCOMPUTF16._IOwnership _out5572;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5573;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5571, out _out5572, out _out5573);
                _10688_recursiveGen = _out5571;
                _10689_recOwned = _out5572;
                _10690_recIdents = _out5573;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10688_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10686_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10687_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5574;
                DCOMPUTF16._IOwnership _out5575;
                DCOMPUTF16.COMP.FromOwnership(r, _10689_recOwned, expectedOwnership, out _out5574, out _out5575);
                r = _out5574;
                resultingOwnership = _out5575;
                readIdents = _10690_recIdents;
              }
            } else if (_source396.is_Datatype) {
              DAST._IDatatypeType _10691___mcc_h832 = _source396.dtor_datatypeType;
              {
                RAST._IType _10692_fromTpeGen;
                RAST._IType _out5576;
                _out5576 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10692_fromTpeGen = _out5576;
                RAST._IType _10693_toTpeGen;
                RAST._IType _out5577;
                _out5577 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10693_toTpeGen = _out5577;
                RAST._IExpr _10694_recursiveGen;
                DCOMPUTF16._IOwnership _10695_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10696_recIdents;
                RAST._IExpr _out5578;
                DCOMPUTF16._IOwnership _out5579;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5580;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5578, out _out5579, out _out5580);
                _10694_recursiveGen = _out5578;
                _10695_recOwned = _out5579;
                _10696_recIdents = _out5580;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10694_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10692_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10693_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5581;
                DCOMPUTF16._IOwnership _out5582;
                DCOMPUTF16.COMP.FromOwnership(r, _10695_recOwned, expectedOwnership, out _out5581, out _out5582);
                r = _out5581;
                resultingOwnership = _out5582;
                readIdents = _10696_recIdents;
              }
            } else if (_source396.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10697___mcc_h834 = _source396.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10698___mcc_h835 = _source396.dtor_attributes;
              {
                RAST._IType _10699_fromTpeGen;
                RAST._IType _out5583;
                _out5583 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10699_fromTpeGen = _out5583;
                RAST._IType _10700_toTpeGen;
                RAST._IType _out5584;
                _out5584 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10700_toTpeGen = _out5584;
                RAST._IExpr _10701_recursiveGen;
                DCOMPUTF16._IOwnership _10702_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10703_recIdents;
                RAST._IExpr _out5585;
                DCOMPUTF16._IOwnership _out5586;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5587;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5585, out _out5586, out _out5587);
                _10701_recursiveGen = _out5585;
                _10702_recOwned = _out5586;
                _10703_recIdents = _out5587;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10701_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10699_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10700_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5588;
                DCOMPUTF16._IOwnership _out5589;
                DCOMPUTF16.COMP.FromOwnership(r, _10702_recOwned, expectedOwnership, out _out5588, out _out5589);
                r = _out5588;
                resultingOwnership = _out5589;
                readIdents = _10703_recIdents;
              }
            } else {
              DAST._IType _10704___mcc_h838 = _source396.dtor_baseType;
              DAST._INewtypeRange _10705___mcc_h839 = _source396.dtor_range;
              bool _10706___mcc_h840 = _source396.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10707___mcc_h841 = _source396.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10708_attributes = _10707___mcc_h841;
              bool _10709_erase = _10706___mcc_h840;
              DAST._INewtypeRange _10710_range = _10705___mcc_h839;
              DAST._IType _10711_b = _10704___mcc_h838;
              {
                Std.Wrappers._IOption<RAST._IType> _10712_nativeToType;
                _10712_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10711_b, _10710_range);
                if (object.Equals(_8722_fromTpe, _10711_b)) {
                  RAST._IExpr _10713_recursiveGen;
                  DCOMPUTF16._IOwnership _10714_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10715_recIdents;
                  RAST._IExpr _out5590;
                  DCOMPUTF16._IOwnership _out5591;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5592;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5590, out _out5591, out _out5592);
                  _10713_recursiveGen = _out5590;
                  _10714_recOwned = _out5591;
                  _10715_recIdents = _out5592;
                  readIdents = _10715_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source397 = _10712_nativeToType;
                  if (_source397.is_None) {
                    if (_10709_erase) {
                      r = _10713_recursiveGen;
                    } else {
                      RAST._IType _10716_rhsType;
                      RAST._IType _out5593;
                      _out5593 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _10716_rhsType = _out5593;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10716_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10713_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5594;
                    DCOMPUTF16._IOwnership _out5595;
                    DCOMPUTF16.COMP.FromOwnership(r, _10714_recOwned, expectedOwnership, out _out5594, out _out5595);
                    r = _out5594;
                    resultingOwnership = _out5595;
                  } else {
                    RAST._IType _10717___mcc_h1990 = _source397.dtor_value;
                    RAST._IType _10718_v = _10717___mcc_h1990;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10713_recursiveGen, RAST.Expr.create_ExprFromType(_10718_v)));
                    RAST._IExpr _out5596;
                    DCOMPUTF16._IOwnership _out5597;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5596, out _out5597);
                    r = _out5596;
                    resultingOwnership = _out5597;
                  }
                } else {
                  if ((_10712_nativeToType).is_Some) {
                    DAST._IType _source398 = _8722_fromTpe;
                    if (_source398.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10719___mcc_h1991 = _source398.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10720___mcc_h1992 = _source398.dtor_typeArgs;
                      DAST._IResolvedType _10721___mcc_h1993 = _source398.dtor_resolved;
                      DAST._IResolvedType _source399 = _10721___mcc_h1993;
                      if (_source399.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10722___mcc_h1997 = _source399.dtor_datatypeType;
                      } else if (_source399.is_Datatype) {
                        DAST._IDatatypeType _10723___mcc_h1999 = _source399.dtor_datatypeType;
                      } else if (_source399.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10724___mcc_h2001 = _source399.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10725___mcc_h2002 = _source399.dtor_attributes;
                      } else {
                        DAST._IType _10726___mcc_h2005 = _source399.dtor_baseType;
                        DAST._INewtypeRange _10727___mcc_h2006 = _source399.dtor_range;
                        bool _10728___mcc_h2007 = _source399.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10729___mcc_h2008 = _source399.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10730_attributes0 = _10729___mcc_h2008;
                        bool _10731_erase0 = _10728___mcc_h2007;
                        DAST._INewtypeRange _10732_range0 = _10727___mcc_h2006;
                        DAST._IType _10733_b0 = _10726___mcc_h2005;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10734_nativeFromType;
                          _10734_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10733_b0, _10732_range0);
                          if ((_10734_nativeFromType).is_Some) {
                            RAST._IExpr _10735_recursiveGen;
                            DCOMPUTF16._IOwnership _10736_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10737_recIdents;
                            RAST._IExpr _out5598;
                            DCOMPUTF16._IOwnership _out5599;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5600;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5598, out _out5599, out _out5600);
                            _10735_recursiveGen = _out5598;
                            _10736_recOwned = _out5599;
                            _10737_recIdents = _out5600;
                            RAST._IExpr _out5601;
                            DCOMPUTF16._IOwnership _out5602;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10735_recursiveGen, (_10712_nativeToType).dtor_value), _10736_recOwned, expectedOwnership, out _out5601, out _out5602);
                            r = _out5601;
                            resultingOwnership = _out5602;
                            readIdents = _10737_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source398.is_Nullable) {
                      DAST._IType _10738___mcc_h2013 = _source398.dtor_Nullable_a0;
                    } else if (_source398.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10739___mcc_h2015 = _source398.dtor_Tuple_a0;
                    } else if (_source398.is_Array) {
                      DAST._IType _10740___mcc_h2017 = _source398.dtor_element;
                      BigInteger _10741___mcc_h2018 = _source398.dtor_dims;
                    } else if (_source398.is_Seq) {
                      DAST._IType _10742___mcc_h2021 = _source398.dtor_element;
                    } else if (_source398.is_Set) {
                      DAST._IType _10743___mcc_h2023 = _source398.dtor_element;
                    } else if (_source398.is_Multiset) {
                      DAST._IType _10744___mcc_h2025 = _source398.dtor_element;
                    } else if (_source398.is_Map) {
                      DAST._IType _10745___mcc_h2027 = _source398.dtor_key;
                      DAST._IType _10746___mcc_h2028 = _source398.dtor_value;
                    } else if (_source398.is_SetBuilder) {
                      DAST._IType _10747___mcc_h2031 = _source398.dtor_element;
                    } else if (_source398.is_MapBuilder) {
                      DAST._IType _10748___mcc_h2033 = _source398.dtor_key;
                      DAST._IType _10749___mcc_h2034 = _source398.dtor_value;
                    } else if (_source398.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10750___mcc_h2037 = _source398.dtor_args;
                      DAST._IType _10751___mcc_h2038 = _source398.dtor_result;
                    } else if (_source398.is_Primitive) {
                      DAST._IPrimitive _10752___mcc_h2041 = _source398.dtor_Primitive_a0;
                    } else if (_source398.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10753___mcc_h2043 = _source398.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10754___mcc_h2045 = _source398.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10755_recursiveGen;
                      DCOMPUTF16._IOwnership _10756_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10757_recIdents;
                      RAST._IExpr _out5603;
                      DCOMPUTF16._IOwnership _out5604;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5605;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5603, out _out5604, out _out5605);
                      _10755_recursiveGen = _out5603;
                      _10756_recOwned = _out5604;
                      _10757_recIdents = _out5605;
                      RAST._IExpr _out5606;
                      DCOMPUTF16._IOwnership _out5607;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10755_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10712_nativeToType).dtor_value), _10756_recOwned, expectedOwnership, out _out5606, out _out5607);
                      r = _out5606;
                      resultingOwnership = _out5607;
                      readIdents = _10757_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5608;
                  DCOMPUTF16._IOwnership _out5609;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5610;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _10711_b), _10711_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out5608, out _out5609, out _out5610);
                  r = _out5608;
                  resultingOwnership = _out5609;
                  readIdents = _out5610;
                }
              }
            }
          } else if (_source395.is_Nullable) {
            DAST._IType _10758___mcc_h846 = _source395.dtor_Nullable_a0;
            {
              RAST._IExpr _10759_recursiveGen;
              DCOMPUTF16._IOwnership _10760_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10761_recIdents;
              RAST._IExpr _out5611;
              DCOMPUTF16._IOwnership _out5612;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5613;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5611, out _out5612, out _out5613);
              _10759_recursiveGen = _out5611;
              _10760_recOwned = _out5612;
              _10761_recIdents = _out5613;
              r = _10759_recursiveGen;
              if (object.Equals(_10760_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5614;
              DCOMPUTF16._IOwnership _out5615;
              DCOMPUTF16.COMP.FromOwnership(r, _10760_recOwned, expectedOwnership, out _out5614, out _out5615);
              r = _out5614;
              resultingOwnership = _out5615;
              readIdents = _10761_recIdents;
            }
          } else if (_source395.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10762___mcc_h848 = _source395.dtor_Tuple_a0;
            {
              RAST._IType _10763_fromTpeGen;
              RAST._IType _out5616;
              _out5616 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10763_fromTpeGen = _out5616;
              RAST._IType _10764_toTpeGen;
              RAST._IType _out5617;
              _out5617 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10764_toTpeGen = _out5617;
              RAST._IExpr _10765_recursiveGen;
              DCOMPUTF16._IOwnership _10766_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10767_recIdents;
              RAST._IExpr _out5618;
              DCOMPUTF16._IOwnership _out5619;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5620;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5618, out _out5619, out _out5620);
              _10765_recursiveGen = _out5618;
              _10766_recOwned = _out5619;
              _10767_recIdents = _out5620;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10765_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10763_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10764_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5621;
              DCOMPUTF16._IOwnership _out5622;
              DCOMPUTF16.COMP.FromOwnership(r, _10766_recOwned, expectedOwnership, out _out5621, out _out5622);
              r = _out5621;
              resultingOwnership = _out5622;
              readIdents = _10767_recIdents;
            }
          } else if (_source395.is_Array) {
            DAST._IType _10768___mcc_h850 = _source395.dtor_element;
            BigInteger _10769___mcc_h851 = _source395.dtor_dims;
            {
              RAST._IType _10770_fromTpeGen;
              RAST._IType _out5623;
              _out5623 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10770_fromTpeGen = _out5623;
              RAST._IType _10771_toTpeGen;
              RAST._IType _out5624;
              _out5624 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10771_toTpeGen = _out5624;
              RAST._IExpr _10772_recursiveGen;
              DCOMPUTF16._IOwnership _10773_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10774_recIdents;
              RAST._IExpr _out5625;
              DCOMPUTF16._IOwnership _out5626;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5627;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5625, out _out5626, out _out5627);
              _10772_recursiveGen = _out5625;
              _10773_recOwned = _out5626;
              _10774_recIdents = _out5627;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10772_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10770_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10771_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5628;
              DCOMPUTF16._IOwnership _out5629;
              DCOMPUTF16.COMP.FromOwnership(r, _10773_recOwned, expectedOwnership, out _out5628, out _out5629);
              r = _out5628;
              resultingOwnership = _out5629;
              readIdents = _10774_recIdents;
            }
          } else if (_source395.is_Seq) {
            DAST._IType _10775___mcc_h854 = _source395.dtor_element;
            {
              RAST._IType _10776_fromTpeGen;
              RAST._IType _out5630;
              _out5630 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10776_fromTpeGen = _out5630;
              RAST._IType _10777_toTpeGen;
              RAST._IType _out5631;
              _out5631 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10777_toTpeGen = _out5631;
              RAST._IExpr _10778_recursiveGen;
              DCOMPUTF16._IOwnership _10779_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10780_recIdents;
              RAST._IExpr _out5632;
              DCOMPUTF16._IOwnership _out5633;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5634;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5632, out _out5633, out _out5634);
              _10778_recursiveGen = _out5632;
              _10779_recOwned = _out5633;
              _10780_recIdents = _out5634;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10778_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10776_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10777_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5635;
              DCOMPUTF16._IOwnership _out5636;
              DCOMPUTF16.COMP.FromOwnership(r, _10779_recOwned, expectedOwnership, out _out5635, out _out5636);
              r = _out5635;
              resultingOwnership = _out5636;
              readIdents = _10780_recIdents;
            }
          } else if (_source395.is_Set) {
            DAST._IType _10781___mcc_h856 = _source395.dtor_element;
            {
              RAST._IType _10782_fromTpeGen;
              RAST._IType _out5637;
              _out5637 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10782_fromTpeGen = _out5637;
              RAST._IType _10783_toTpeGen;
              RAST._IType _out5638;
              _out5638 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10783_toTpeGen = _out5638;
              RAST._IExpr _10784_recursiveGen;
              DCOMPUTF16._IOwnership _10785_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10786_recIdents;
              RAST._IExpr _out5639;
              DCOMPUTF16._IOwnership _out5640;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5641;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5639, out _out5640, out _out5641);
              _10784_recursiveGen = _out5639;
              _10785_recOwned = _out5640;
              _10786_recIdents = _out5641;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10784_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10782_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10783_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5642;
              DCOMPUTF16._IOwnership _out5643;
              DCOMPUTF16.COMP.FromOwnership(r, _10785_recOwned, expectedOwnership, out _out5642, out _out5643);
              r = _out5642;
              resultingOwnership = _out5643;
              readIdents = _10786_recIdents;
            }
          } else if (_source395.is_Multiset) {
            DAST._IType _10787___mcc_h858 = _source395.dtor_element;
            {
              RAST._IType _10788_fromTpeGen;
              RAST._IType _out5644;
              _out5644 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10788_fromTpeGen = _out5644;
              RAST._IType _10789_toTpeGen;
              RAST._IType _out5645;
              _out5645 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10789_toTpeGen = _out5645;
              RAST._IExpr _10790_recursiveGen;
              DCOMPUTF16._IOwnership _10791_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10792_recIdents;
              RAST._IExpr _out5646;
              DCOMPUTF16._IOwnership _out5647;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5648;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5646, out _out5647, out _out5648);
              _10790_recursiveGen = _out5646;
              _10791_recOwned = _out5647;
              _10792_recIdents = _out5648;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10790_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10788_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10789_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5649;
              DCOMPUTF16._IOwnership _out5650;
              DCOMPUTF16.COMP.FromOwnership(r, _10791_recOwned, expectedOwnership, out _out5649, out _out5650);
              r = _out5649;
              resultingOwnership = _out5650;
              readIdents = _10792_recIdents;
            }
          } else if (_source395.is_Map) {
            DAST._IType _10793___mcc_h860 = _source395.dtor_key;
            DAST._IType _10794___mcc_h861 = _source395.dtor_value;
            {
              RAST._IType _10795_fromTpeGen;
              RAST._IType _out5651;
              _out5651 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10795_fromTpeGen = _out5651;
              RAST._IType _10796_toTpeGen;
              RAST._IType _out5652;
              _out5652 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10796_toTpeGen = _out5652;
              RAST._IExpr _10797_recursiveGen;
              DCOMPUTF16._IOwnership _10798_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10799_recIdents;
              RAST._IExpr _out5653;
              DCOMPUTF16._IOwnership _out5654;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5655;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5653, out _out5654, out _out5655);
              _10797_recursiveGen = _out5653;
              _10798_recOwned = _out5654;
              _10799_recIdents = _out5655;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10797_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10795_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10796_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5656;
              DCOMPUTF16._IOwnership _out5657;
              DCOMPUTF16.COMP.FromOwnership(r, _10798_recOwned, expectedOwnership, out _out5656, out _out5657);
              r = _out5656;
              resultingOwnership = _out5657;
              readIdents = _10799_recIdents;
            }
          } else if (_source395.is_SetBuilder) {
            DAST._IType _10800___mcc_h864 = _source395.dtor_element;
            {
              RAST._IType _10801_fromTpeGen;
              RAST._IType _out5658;
              _out5658 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10801_fromTpeGen = _out5658;
              RAST._IType _10802_toTpeGen;
              RAST._IType _out5659;
              _out5659 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10802_toTpeGen = _out5659;
              RAST._IExpr _10803_recursiveGen;
              DCOMPUTF16._IOwnership _10804_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10805_recIdents;
              RAST._IExpr _out5660;
              DCOMPUTF16._IOwnership _out5661;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5662;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5660, out _out5661, out _out5662);
              _10803_recursiveGen = _out5660;
              _10804_recOwned = _out5661;
              _10805_recIdents = _out5662;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10803_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10801_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10802_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5663;
              DCOMPUTF16._IOwnership _out5664;
              DCOMPUTF16.COMP.FromOwnership(r, _10804_recOwned, expectedOwnership, out _out5663, out _out5664);
              r = _out5663;
              resultingOwnership = _out5664;
              readIdents = _10805_recIdents;
            }
          } else if (_source395.is_MapBuilder) {
            DAST._IType _10806___mcc_h866 = _source395.dtor_key;
            DAST._IType _10807___mcc_h867 = _source395.dtor_value;
            {
              RAST._IType _10808_fromTpeGen;
              RAST._IType _out5665;
              _out5665 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10808_fromTpeGen = _out5665;
              RAST._IType _10809_toTpeGen;
              RAST._IType _out5666;
              _out5666 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10809_toTpeGen = _out5666;
              RAST._IExpr _10810_recursiveGen;
              DCOMPUTF16._IOwnership _10811_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10812_recIdents;
              RAST._IExpr _out5667;
              DCOMPUTF16._IOwnership _out5668;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5669;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5667, out _out5668, out _out5669);
              _10810_recursiveGen = _out5667;
              _10811_recOwned = _out5668;
              _10812_recIdents = _out5669;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10810_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10808_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10809_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5670;
              DCOMPUTF16._IOwnership _out5671;
              DCOMPUTF16.COMP.FromOwnership(r, _10811_recOwned, expectedOwnership, out _out5670, out _out5671);
              r = _out5670;
              resultingOwnership = _out5671;
              readIdents = _10812_recIdents;
            }
          } else if (_source395.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10813___mcc_h870 = _source395.dtor_args;
            DAST._IType _10814___mcc_h871 = _source395.dtor_result;
            {
              RAST._IType _10815_fromTpeGen;
              RAST._IType _out5672;
              _out5672 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10815_fromTpeGen = _out5672;
              RAST._IType _10816_toTpeGen;
              RAST._IType _out5673;
              _out5673 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10816_toTpeGen = _out5673;
              RAST._IExpr _10817_recursiveGen;
              DCOMPUTF16._IOwnership _10818_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10819_recIdents;
              RAST._IExpr _out5674;
              DCOMPUTF16._IOwnership _out5675;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5676;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5674, out _out5675, out _out5676);
              _10817_recursiveGen = _out5674;
              _10818_recOwned = _out5675;
              _10819_recIdents = _out5676;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10817_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10815_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10816_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5677;
              DCOMPUTF16._IOwnership _out5678;
              DCOMPUTF16.COMP.FromOwnership(r, _10818_recOwned, expectedOwnership, out _out5677, out _out5678);
              r = _out5677;
              resultingOwnership = _out5678;
              readIdents = _10819_recIdents;
            }
          } else if (_source395.is_Primitive) {
            DAST._IPrimitive _10820___mcc_h874 = _source395.dtor_Primitive_a0;
            {
              RAST._IType _10821_fromTpeGen;
              RAST._IType _out5679;
              _out5679 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10821_fromTpeGen = _out5679;
              RAST._IType _10822_toTpeGen;
              RAST._IType _out5680;
              _out5680 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10822_toTpeGen = _out5680;
              RAST._IExpr _10823_recursiveGen;
              DCOMPUTF16._IOwnership _10824_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10825_recIdents;
              RAST._IExpr _out5681;
              DCOMPUTF16._IOwnership _out5682;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5683;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5681, out _out5682, out _out5683);
              _10823_recursiveGen = _out5681;
              _10824_recOwned = _out5682;
              _10825_recIdents = _out5683;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10823_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10821_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10822_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5684;
              DCOMPUTF16._IOwnership _out5685;
              DCOMPUTF16.COMP.FromOwnership(r, _10824_recOwned, expectedOwnership, out _out5684, out _out5685);
              r = _out5684;
              resultingOwnership = _out5685;
              readIdents = _10825_recIdents;
            }
          } else if (_source395.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10826___mcc_h876 = _source395.dtor_Passthrough_a0;
            {
              RAST._IType _10827_fromTpeGen;
              RAST._IType _out5686;
              _out5686 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10827_fromTpeGen = _out5686;
              RAST._IType _10828_toTpeGen;
              RAST._IType _out5687;
              _out5687 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10828_toTpeGen = _out5687;
              RAST._IExpr _10829_recursiveGen;
              DCOMPUTF16._IOwnership _10830_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10831_recIdents;
              RAST._IExpr _out5688;
              DCOMPUTF16._IOwnership _out5689;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5690;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5688, out _out5689, out _out5690);
              _10829_recursiveGen = _out5688;
              _10830_recOwned = _out5689;
              _10831_recIdents = _out5690;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10829_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10827_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10828_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5691;
              DCOMPUTF16._IOwnership _out5692;
              DCOMPUTF16.COMP.FromOwnership(r, _10830_recOwned, expectedOwnership, out _out5691, out _out5692);
              r = _out5691;
              resultingOwnership = _out5692;
              readIdents = _10831_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10832___mcc_h878 = _source395.dtor_TypeArg_a0;
            {
              RAST._IType _10833_fromTpeGen;
              RAST._IType _out5693;
              _out5693 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10833_fromTpeGen = _out5693;
              RAST._IType _10834_toTpeGen;
              RAST._IType _out5694;
              _out5694 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10834_toTpeGen = _out5694;
              RAST._IExpr _10835_recursiveGen;
              DCOMPUTF16._IOwnership _10836_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10837_recIdents;
              RAST._IExpr _out5695;
              DCOMPUTF16._IOwnership _out5696;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5697;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5695, out _out5696, out _out5697);
              _10835_recursiveGen = _out5695;
              _10836_recOwned = _out5696;
              _10837_recIdents = _out5697;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10835_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10833_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10834_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5698;
              DCOMPUTF16._IOwnership _out5699;
              DCOMPUTF16.COMP.FromOwnership(r, _10836_recOwned, expectedOwnership, out _out5698, out _out5699);
              r = _out5698;
              resultingOwnership = _out5699;
              readIdents = _10837_recIdents;
            }
          }
        } else if (_source321.is_Arrow) {
          Dafny.ISequence<DAST._IType> _10838___mcc_h880 = _source321.dtor_args;
          DAST._IType _10839___mcc_h881 = _source321.dtor_result;
          DAST._IType _source400 = _8728___mcc_h1;
          if (_source400.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10840___mcc_h888 = _source400.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _10841___mcc_h889 = _source400.dtor_typeArgs;
            DAST._IResolvedType _10842___mcc_h890 = _source400.dtor_resolved;
            DAST._IResolvedType _source401 = _10842___mcc_h890;
            if (_source401.is_AllocatedDatatype) {
              DAST._IDatatypeType _10843___mcc_h894 = _source401.dtor_datatypeType;
              {
                RAST._IType _10844_fromTpeGen;
                RAST._IType _out5700;
                _out5700 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10844_fromTpeGen = _out5700;
                RAST._IType _10845_toTpeGen;
                RAST._IType _out5701;
                _out5701 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10845_toTpeGen = _out5701;
                RAST._IExpr _10846_recursiveGen;
                DCOMPUTF16._IOwnership _10847_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10848_recIdents;
                RAST._IExpr _out5702;
                DCOMPUTF16._IOwnership _out5703;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5704;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5702, out _out5703, out _out5704);
                _10846_recursiveGen = _out5702;
                _10847_recOwned = _out5703;
                _10848_recIdents = _out5704;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10846_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10844_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10845_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5705;
                DCOMPUTF16._IOwnership _out5706;
                DCOMPUTF16.COMP.FromOwnership(r, _10847_recOwned, expectedOwnership, out _out5705, out _out5706);
                r = _out5705;
                resultingOwnership = _out5706;
                readIdents = _10848_recIdents;
              }
            } else if (_source401.is_Datatype) {
              DAST._IDatatypeType _10849___mcc_h896 = _source401.dtor_datatypeType;
              {
                RAST._IType _10850_fromTpeGen;
                RAST._IType _out5707;
                _out5707 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10850_fromTpeGen = _out5707;
                RAST._IType _10851_toTpeGen;
                RAST._IType _out5708;
                _out5708 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10851_toTpeGen = _out5708;
                RAST._IExpr _10852_recursiveGen;
                DCOMPUTF16._IOwnership _10853_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10854_recIdents;
                RAST._IExpr _out5709;
                DCOMPUTF16._IOwnership _out5710;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5711;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5709, out _out5710, out _out5711);
                _10852_recursiveGen = _out5709;
                _10853_recOwned = _out5710;
                _10854_recIdents = _out5711;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10852_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10850_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10851_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5712;
                DCOMPUTF16._IOwnership _out5713;
                DCOMPUTF16.COMP.FromOwnership(r, _10853_recOwned, expectedOwnership, out _out5712, out _out5713);
                r = _out5712;
                resultingOwnership = _out5713;
                readIdents = _10854_recIdents;
              }
            } else if (_source401.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10855___mcc_h898 = _source401.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _10856___mcc_h899 = _source401.dtor_attributes;
              {
                RAST._IType _10857_fromTpeGen;
                RAST._IType _out5714;
                _out5714 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _10857_fromTpeGen = _out5714;
                RAST._IType _10858_toTpeGen;
                RAST._IType _out5715;
                _out5715 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _10858_toTpeGen = _out5715;
                RAST._IExpr _10859_recursiveGen;
                DCOMPUTF16._IOwnership _10860_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10861_recIdents;
                RAST._IExpr _out5716;
                DCOMPUTF16._IOwnership _out5717;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5718;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5716, out _out5717, out _out5718);
                _10859_recursiveGen = _out5716;
                _10860_recOwned = _out5717;
                _10861_recIdents = _out5718;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10859_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10857_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10858_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5719;
                DCOMPUTF16._IOwnership _out5720;
                DCOMPUTF16.COMP.FromOwnership(r, _10860_recOwned, expectedOwnership, out _out5719, out _out5720);
                r = _out5719;
                resultingOwnership = _out5720;
                readIdents = _10861_recIdents;
              }
            } else {
              DAST._IType _10862___mcc_h902 = _source401.dtor_baseType;
              DAST._INewtypeRange _10863___mcc_h903 = _source401.dtor_range;
              bool _10864___mcc_h904 = _source401.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _10865___mcc_h905 = _source401.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _10866_attributes = _10865___mcc_h905;
              bool _10867_erase = _10864___mcc_h904;
              DAST._INewtypeRange _10868_range = _10863___mcc_h903;
              DAST._IType _10869_b = _10862___mcc_h902;
              {
                Std.Wrappers._IOption<RAST._IType> _10870_nativeToType;
                _10870_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_10869_b, _10868_range);
                if (object.Equals(_8722_fromTpe, _10869_b)) {
                  RAST._IExpr _10871_recursiveGen;
                  DCOMPUTF16._IOwnership _10872_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10873_recIdents;
                  RAST._IExpr _out5721;
                  DCOMPUTF16._IOwnership _out5722;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5723;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5721, out _out5722, out _out5723);
                  _10871_recursiveGen = _out5721;
                  _10872_recOwned = _out5722;
                  _10873_recIdents = _out5723;
                  readIdents = _10873_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source402 = _10870_nativeToType;
                  if (_source402.is_None) {
                    if (_10867_erase) {
                      r = _10871_recursiveGen;
                    } else {
                      RAST._IType _10874_rhsType;
                      RAST._IType _out5724;
                      _out5724 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _10874_rhsType = _out5724;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_10874_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_10871_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out5725;
                    DCOMPUTF16._IOwnership _out5726;
                    DCOMPUTF16.COMP.FromOwnership(r, _10872_recOwned, expectedOwnership, out _out5725, out _out5726);
                    r = _out5725;
                    resultingOwnership = _out5726;
                  } else {
                    RAST._IType _10875___mcc_h2047 = _source402.dtor_value;
                    RAST._IType _10876_v = _10875___mcc_h2047;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10871_recursiveGen, RAST.Expr.create_ExprFromType(_10876_v)));
                    RAST._IExpr _out5727;
                    DCOMPUTF16._IOwnership _out5728;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5727, out _out5728);
                    r = _out5727;
                    resultingOwnership = _out5728;
                  }
                } else {
                  if ((_10870_nativeToType).is_Some) {
                    DAST._IType _source403 = _8722_fromTpe;
                    if (_source403.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10877___mcc_h2048 = _source403.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _10878___mcc_h2049 = _source403.dtor_typeArgs;
                      DAST._IResolvedType _10879___mcc_h2050 = _source403.dtor_resolved;
                      DAST._IResolvedType _source404 = _10879___mcc_h2050;
                      if (_source404.is_AllocatedDatatype) {
                        DAST._IDatatypeType _10880___mcc_h2054 = _source404.dtor_datatypeType;
                      } else if (_source404.is_Datatype) {
                        DAST._IDatatypeType _10881___mcc_h2056 = _source404.dtor_datatypeType;
                      } else if (_source404.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10882___mcc_h2058 = _source404.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _10883___mcc_h2059 = _source404.dtor_attributes;
                      } else {
                        DAST._IType _10884___mcc_h2062 = _source404.dtor_baseType;
                        DAST._INewtypeRange _10885___mcc_h2063 = _source404.dtor_range;
                        bool _10886___mcc_h2064 = _source404.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _10887___mcc_h2065 = _source404.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _10888_attributes0 = _10887___mcc_h2065;
                        bool _10889_erase0 = _10886___mcc_h2064;
                        DAST._INewtypeRange _10890_range0 = _10885___mcc_h2063;
                        DAST._IType _10891_b0 = _10884___mcc_h2062;
                        {
                          Std.Wrappers._IOption<RAST._IType> _10892_nativeFromType;
                          _10892_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_10891_b0, _10890_range0);
                          if ((_10892_nativeFromType).is_Some) {
                            RAST._IExpr _10893_recursiveGen;
                            DCOMPUTF16._IOwnership _10894_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10895_recIdents;
                            RAST._IExpr _out5729;
                            DCOMPUTF16._IOwnership _out5730;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5731;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5729, out _out5730, out _out5731);
                            _10893_recursiveGen = _out5729;
                            _10894_recOwned = _out5730;
                            _10895_recIdents = _out5731;
                            RAST._IExpr _out5732;
                            DCOMPUTF16._IOwnership _out5733;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_10893_recursiveGen, (_10870_nativeToType).dtor_value), _10894_recOwned, expectedOwnership, out _out5732, out _out5733);
                            r = _out5732;
                            resultingOwnership = _out5733;
                            readIdents = _10895_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source403.is_Nullable) {
                      DAST._IType _10896___mcc_h2070 = _source403.dtor_Nullable_a0;
                    } else if (_source403.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _10897___mcc_h2072 = _source403.dtor_Tuple_a0;
                    } else if (_source403.is_Array) {
                      DAST._IType _10898___mcc_h2074 = _source403.dtor_element;
                      BigInteger _10899___mcc_h2075 = _source403.dtor_dims;
                    } else if (_source403.is_Seq) {
                      DAST._IType _10900___mcc_h2078 = _source403.dtor_element;
                    } else if (_source403.is_Set) {
                      DAST._IType _10901___mcc_h2080 = _source403.dtor_element;
                    } else if (_source403.is_Multiset) {
                      DAST._IType _10902___mcc_h2082 = _source403.dtor_element;
                    } else if (_source403.is_Map) {
                      DAST._IType _10903___mcc_h2084 = _source403.dtor_key;
                      DAST._IType _10904___mcc_h2085 = _source403.dtor_value;
                    } else if (_source403.is_SetBuilder) {
                      DAST._IType _10905___mcc_h2088 = _source403.dtor_element;
                    } else if (_source403.is_MapBuilder) {
                      DAST._IType _10906___mcc_h2090 = _source403.dtor_key;
                      DAST._IType _10907___mcc_h2091 = _source403.dtor_value;
                    } else if (_source403.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _10908___mcc_h2094 = _source403.dtor_args;
                      DAST._IType _10909___mcc_h2095 = _source403.dtor_result;
                    } else if (_source403.is_Primitive) {
                      DAST._IPrimitive _10910___mcc_h2098 = _source403.dtor_Primitive_a0;
                    } else if (_source403.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _10911___mcc_h2100 = _source403.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _10912___mcc_h2102 = _source403.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _10913_recursiveGen;
                      DCOMPUTF16._IOwnership _10914_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10915_recIdents;
                      RAST._IExpr _out5734;
                      DCOMPUTF16._IOwnership _out5735;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5736;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5734, out _out5735, out _out5736);
                      _10913_recursiveGen = _out5734;
                      _10914_recOwned = _out5735;
                      _10915_recIdents = _out5736;
                      RAST._IExpr _out5737;
                      DCOMPUTF16._IOwnership _out5738;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_10913_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_10870_nativeToType).dtor_value), _10914_recOwned, expectedOwnership, out _out5737, out _out5738);
                      r = _out5737;
                      resultingOwnership = _out5738;
                      readIdents = _10915_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out5739;
                  DCOMPUTF16._IOwnership _out5740;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5741;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _10869_b), _10869_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out5739, out _out5740, out _out5741);
                  r = _out5739;
                  resultingOwnership = _out5740;
                  readIdents = _out5741;
                }
              }
            }
          } else if (_source400.is_Nullable) {
            DAST._IType _10916___mcc_h910 = _source400.dtor_Nullable_a0;
            {
              RAST._IExpr _10917_recursiveGen;
              DCOMPUTF16._IOwnership _10918_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10919_recIdents;
              RAST._IExpr _out5742;
              DCOMPUTF16._IOwnership _out5743;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5744;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5742, out _out5743, out _out5744);
              _10917_recursiveGen = _out5742;
              _10918_recOwned = _out5743;
              _10919_recIdents = _out5744;
              r = _10917_recursiveGen;
              if (object.Equals(_10918_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out5745;
              DCOMPUTF16._IOwnership _out5746;
              DCOMPUTF16.COMP.FromOwnership(r, _10918_recOwned, expectedOwnership, out _out5745, out _out5746);
              r = _out5745;
              resultingOwnership = _out5746;
              readIdents = _10919_recIdents;
            }
          } else if (_source400.is_Tuple) {
            Dafny.ISequence<DAST._IType> _10920___mcc_h912 = _source400.dtor_Tuple_a0;
            {
              RAST._IType _10921_fromTpeGen;
              RAST._IType _out5747;
              _out5747 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10921_fromTpeGen = _out5747;
              RAST._IType _10922_toTpeGen;
              RAST._IType _out5748;
              _out5748 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10922_toTpeGen = _out5748;
              RAST._IExpr _10923_recursiveGen;
              DCOMPUTF16._IOwnership _10924_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10925_recIdents;
              RAST._IExpr _out5749;
              DCOMPUTF16._IOwnership _out5750;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5751;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5749, out _out5750, out _out5751);
              _10923_recursiveGen = _out5749;
              _10924_recOwned = _out5750;
              _10925_recIdents = _out5751;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10923_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10921_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10922_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5752;
              DCOMPUTF16._IOwnership _out5753;
              DCOMPUTF16.COMP.FromOwnership(r, _10924_recOwned, expectedOwnership, out _out5752, out _out5753);
              r = _out5752;
              resultingOwnership = _out5753;
              readIdents = _10925_recIdents;
            }
          } else if (_source400.is_Array) {
            DAST._IType _10926___mcc_h914 = _source400.dtor_element;
            BigInteger _10927___mcc_h915 = _source400.dtor_dims;
            {
              RAST._IType _10928_fromTpeGen;
              RAST._IType _out5754;
              _out5754 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10928_fromTpeGen = _out5754;
              RAST._IType _10929_toTpeGen;
              RAST._IType _out5755;
              _out5755 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10929_toTpeGen = _out5755;
              RAST._IExpr _10930_recursiveGen;
              DCOMPUTF16._IOwnership _10931_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10932_recIdents;
              RAST._IExpr _out5756;
              DCOMPUTF16._IOwnership _out5757;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5758;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5756, out _out5757, out _out5758);
              _10930_recursiveGen = _out5756;
              _10931_recOwned = _out5757;
              _10932_recIdents = _out5758;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10930_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10928_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10929_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5759;
              DCOMPUTF16._IOwnership _out5760;
              DCOMPUTF16.COMP.FromOwnership(r, _10931_recOwned, expectedOwnership, out _out5759, out _out5760);
              r = _out5759;
              resultingOwnership = _out5760;
              readIdents = _10932_recIdents;
            }
          } else if (_source400.is_Seq) {
            DAST._IType _10933___mcc_h918 = _source400.dtor_element;
            {
              RAST._IType _10934_fromTpeGen;
              RAST._IType _out5761;
              _out5761 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10934_fromTpeGen = _out5761;
              RAST._IType _10935_toTpeGen;
              RAST._IType _out5762;
              _out5762 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10935_toTpeGen = _out5762;
              RAST._IExpr _10936_recursiveGen;
              DCOMPUTF16._IOwnership _10937_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10938_recIdents;
              RAST._IExpr _out5763;
              DCOMPUTF16._IOwnership _out5764;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5765;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5763, out _out5764, out _out5765);
              _10936_recursiveGen = _out5763;
              _10937_recOwned = _out5764;
              _10938_recIdents = _out5765;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10936_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10934_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10935_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5766;
              DCOMPUTF16._IOwnership _out5767;
              DCOMPUTF16.COMP.FromOwnership(r, _10937_recOwned, expectedOwnership, out _out5766, out _out5767);
              r = _out5766;
              resultingOwnership = _out5767;
              readIdents = _10938_recIdents;
            }
          } else if (_source400.is_Set) {
            DAST._IType _10939___mcc_h920 = _source400.dtor_element;
            {
              RAST._IType _10940_fromTpeGen;
              RAST._IType _out5768;
              _out5768 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10940_fromTpeGen = _out5768;
              RAST._IType _10941_toTpeGen;
              RAST._IType _out5769;
              _out5769 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10941_toTpeGen = _out5769;
              RAST._IExpr _10942_recursiveGen;
              DCOMPUTF16._IOwnership _10943_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10944_recIdents;
              RAST._IExpr _out5770;
              DCOMPUTF16._IOwnership _out5771;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5772;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5770, out _out5771, out _out5772);
              _10942_recursiveGen = _out5770;
              _10943_recOwned = _out5771;
              _10944_recIdents = _out5772;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10942_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10940_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10941_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5773;
              DCOMPUTF16._IOwnership _out5774;
              DCOMPUTF16.COMP.FromOwnership(r, _10943_recOwned, expectedOwnership, out _out5773, out _out5774);
              r = _out5773;
              resultingOwnership = _out5774;
              readIdents = _10944_recIdents;
            }
          } else if (_source400.is_Multiset) {
            DAST._IType _10945___mcc_h922 = _source400.dtor_element;
            {
              RAST._IType _10946_fromTpeGen;
              RAST._IType _out5775;
              _out5775 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10946_fromTpeGen = _out5775;
              RAST._IType _10947_toTpeGen;
              RAST._IType _out5776;
              _out5776 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10947_toTpeGen = _out5776;
              RAST._IExpr _10948_recursiveGen;
              DCOMPUTF16._IOwnership _10949_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10950_recIdents;
              RAST._IExpr _out5777;
              DCOMPUTF16._IOwnership _out5778;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5779;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5777, out _out5778, out _out5779);
              _10948_recursiveGen = _out5777;
              _10949_recOwned = _out5778;
              _10950_recIdents = _out5779;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10948_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10946_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10947_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5780;
              DCOMPUTF16._IOwnership _out5781;
              DCOMPUTF16.COMP.FromOwnership(r, _10949_recOwned, expectedOwnership, out _out5780, out _out5781);
              r = _out5780;
              resultingOwnership = _out5781;
              readIdents = _10950_recIdents;
            }
          } else if (_source400.is_Map) {
            DAST._IType _10951___mcc_h924 = _source400.dtor_key;
            DAST._IType _10952___mcc_h925 = _source400.dtor_value;
            {
              RAST._IType _10953_fromTpeGen;
              RAST._IType _out5782;
              _out5782 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10953_fromTpeGen = _out5782;
              RAST._IType _10954_toTpeGen;
              RAST._IType _out5783;
              _out5783 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10954_toTpeGen = _out5783;
              RAST._IExpr _10955_recursiveGen;
              DCOMPUTF16._IOwnership _10956_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10957_recIdents;
              RAST._IExpr _out5784;
              DCOMPUTF16._IOwnership _out5785;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5786;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5784, out _out5785, out _out5786);
              _10955_recursiveGen = _out5784;
              _10956_recOwned = _out5785;
              _10957_recIdents = _out5786;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10955_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10953_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10954_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5787;
              DCOMPUTF16._IOwnership _out5788;
              DCOMPUTF16.COMP.FromOwnership(r, _10956_recOwned, expectedOwnership, out _out5787, out _out5788);
              r = _out5787;
              resultingOwnership = _out5788;
              readIdents = _10957_recIdents;
            }
          } else if (_source400.is_SetBuilder) {
            DAST._IType _10958___mcc_h928 = _source400.dtor_element;
            {
              RAST._IType _10959_fromTpeGen;
              RAST._IType _out5789;
              _out5789 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10959_fromTpeGen = _out5789;
              RAST._IType _10960_toTpeGen;
              RAST._IType _out5790;
              _out5790 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10960_toTpeGen = _out5790;
              RAST._IExpr _10961_recursiveGen;
              DCOMPUTF16._IOwnership _10962_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10963_recIdents;
              RAST._IExpr _out5791;
              DCOMPUTF16._IOwnership _out5792;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5793;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5791, out _out5792, out _out5793);
              _10961_recursiveGen = _out5791;
              _10962_recOwned = _out5792;
              _10963_recIdents = _out5793;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10961_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10959_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10960_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5794;
              DCOMPUTF16._IOwnership _out5795;
              DCOMPUTF16.COMP.FromOwnership(r, _10962_recOwned, expectedOwnership, out _out5794, out _out5795);
              r = _out5794;
              resultingOwnership = _out5795;
              readIdents = _10963_recIdents;
            }
          } else if (_source400.is_MapBuilder) {
            DAST._IType _10964___mcc_h930 = _source400.dtor_key;
            DAST._IType _10965___mcc_h931 = _source400.dtor_value;
            {
              RAST._IType _10966_fromTpeGen;
              RAST._IType _out5796;
              _out5796 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10966_fromTpeGen = _out5796;
              RAST._IType _10967_toTpeGen;
              RAST._IType _out5797;
              _out5797 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10967_toTpeGen = _out5797;
              RAST._IExpr _10968_recursiveGen;
              DCOMPUTF16._IOwnership _10969_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10970_recIdents;
              RAST._IExpr _out5798;
              DCOMPUTF16._IOwnership _out5799;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5800;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5798, out _out5799, out _out5800);
              _10968_recursiveGen = _out5798;
              _10969_recOwned = _out5799;
              _10970_recIdents = _out5800;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10968_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10966_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10967_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5801;
              DCOMPUTF16._IOwnership _out5802;
              DCOMPUTF16.COMP.FromOwnership(r, _10969_recOwned, expectedOwnership, out _out5801, out _out5802);
              r = _out5801;
              resultingOwnership = _out5802;
              readIdents = _10970_recIdents;
            }
          } else if (_source400.is_Arrow) {
            Dafny.ISequence<DAST._IType> _10971___mcc_h934 = _source400.dtor_args;
            DAST._IType _10972___mcc_h935 = _source400.dtor_result;
            {
              RAST._IType _10973_fromTpeGen;
              RAST._IType _out5803;
              _out5803 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10973_fromTpeGen = _out5803;
              RAST._IType _10974_toTpeGen;
              RAST._IType _out5804;
              _out5804 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10974_toTpeGen = _out5804;
              RAST._IExpr _10975_recursiveGen;
              DCOMPUTF16._IOwnership _10976_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10977_recIdents;
              RAST._IExpr _out5805;
              DCOMPUTF16._IOwnership _out5806;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5807;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5805, out _out5806, out _out5807);
              _10975_recursiveGen = _out5805;
              _10976_recOwned = _out5806;
              _10977_recIdents = _out5807;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10975_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10973_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10974_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5808;
              DCOMPUTF16._IOwnership _out5809;
              DCOMPUTF16.COMP.FromOwnership(r, _10976_recOwned, expectedOwnership, out _out5808, out _out5809);
              r = _out5808;
              resultingOwnership = _out5809;
              readIdents = _10977_recIdents;
            }
          } else if (_source400.is_Primitive) {
            DAST._IPrimitive _10978___mcc_h938 = _source400.dtor_Primitive_a0;
            {
              RAST._IType _10979_fromTpeGen;
              RAST._IType _out5810;
              _out5810 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10979_fromTpeGen = _out5810;
              RAST._IType _10980_toTpeGen;
              RAST._IType _out5811;
              _out5811 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10980_toTpeGen = _out5811;
              RAST._IExpr _10981_recursiveGen;
              DCOMPUTF16._IOwnership _10982_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10983_recIdents;
              RAST._IExpr _out5812;
              DCOMPUTF16._IOwnership _out5813;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5814;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5812, out _out5813, out _out5814);
              _10981_recursiveGen = _out5812;
              _10982_recOwned = _out5813;
              _10983_recIdents = _out5814;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10981_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10979_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10980_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5815;
              DCOMPUTF16._IOwnership _out5816;
              DCOMPUTF16.COMP.FromOwnership(r, _10982_recOwned, expectedOwnership, out _out5815, out _out5816);
              r = _out5815;
              resultingOwnership = _out5816;
              readIdents = _10983_recIdents;
            }
          } else if (_source400.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _10984___mcc_h940 = _source400.dtor_Passthrough_a0;
            {
              RAST._IType _10985_fromTpeGen;
              RAST._IType _out5817;
              _out5817 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10985_fromTpeGen = _out5817;
              RAST._IType _10986_toTpeGen;
              RAST._IType _out5818;
              _out5818 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10986_toTpeGen = _out5818;
              RAST._IExpr _10987_recursiveGen;
              DCOMPUTF16._IOwnership _10988_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10989_recIdents;
              RAST._IExpr _out5819;
              DCOMPUTF16._IOwnership _out5820;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5821;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5819, out _out5820, out _out5821);
              _10987_recursiveGen = _out5819;
              _10988_recOwned = _out5820;
              _10989_recIdents = _out5821;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10987_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10985_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10986_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5822;
              DCOMPUTF16._IOwnership _out5823;
              DCOMPUTF16.COMP.FromOwnership(r, _10988_recOwned, expectedOwnership, out _out5822, out _out5823);
              r = _out5822;
              resultingOwnership = _out5823;
              readIdents = _10989_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _10990___mcc_h942 = _source400.dtor_TypeArg_a0;
            {
              RAST._IType _10991_fromTpeGen;
              RAST._IType _out5824;
              _out5824 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _10991_fromTpeGen = _out5824;
              RAST._IType _10992_toTpeGen;
              RAST._IType _out5825;
              _out5825 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _10992_toTpeGen = _out5825;
              RAST._IExpr _10993_recursiveGen;
              DCOMPUTF16._IOwnership _10994_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10995_recIdents;
              RAST._IExpr _out5826;
              DCOMPUTF16._IOwnership _out5827;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5828;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5826, out _out5827, out _out5828);
              _10993_recursiveGen = _out5826;
              _10994_recOwned = _out5827;
              _10995_recIdents = _out5828;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_10993_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_10991_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_10992_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out5829;
              DCOMPUTF16._IOwnership _out5830;
              DCOMPUTF16.COMP.FromOwnership(r, _10994_recOwned, expectedOwnership, out _out5829, out _out5830);
              r = _out5829;
              resultingOwnership = _out5830;
              readIdents = _10995_recIdents;
            }
          }
        } else if (_source321.is_Primitive) {
          DAST._IPrimitive _10996___mcc_h944 = _source321.dtor_Primitive_a0;
          DAST._IPrimitive _source405 = _10996___mcc_h944;
          if (_source405.is_Int) {
            DAST._IType _source406 = _8728___mcc_h1;
            if (_source406.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10997___mcc_h948 = _source406.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _10998___mcc_h949 = _source406.dtor_typeArgs;
              DAST._IResolvedType _10999___mcc_h950 = _source406.dtor_resolved;
              DAST._IResolvedType _source407 = _10999___mcc_h950;
              if (_source407.is_AllocatedDatatype) {
                DAST._IDatatypeType _11000___mcc_h954 = _source407.dtor_datatypeType;
                {
                  RAST._IType _11001_fromTpeGen;
                  RAST._IType _out5831;
                  _out5831 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11001_fromTpeGen = _out5831;
                  RAST._IType _11002_toTpeGen;
                  RAST._IType _out5832;
                  _out5832 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11002_toTpeGen = _out5832;
                  RAST._IExpr _11003_recursiveGen;
                  DCOMPUTF16._IOwnership _11004_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11005_recIdents;
                  RAST._IExpr _out5833;
                  DCOMPUTF16._IOwnership _out5834;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5835;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5833, out _out5834, out _out5835);
                  _11003_recursiveGen = _out5833;
                  _11004_recOwned = _out5834;
                  _11005_recIdents = _out5835;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11003_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11001_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11002_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5836;
                  DCOMPUTF16._IOwnership _out5837;
                  DCOMPUTF16.COMP.FromOwnership(r, _11004_recOwned, expectedOwnership, out _out5836, out _out5837);
                  r = _out5836;
                  resultingOwnership = _out5837;
                  readIdents = _11005_recIdents;
                }
              } else if (_source407.is_Datatype) {
                DAST._IDatatypeType _11006___mcc_h956 = _source407.dtor_datatypeType;
                {
                  RAST._IType _11007_fromTpeGen;
                  RAST._IType _out5838;
                  _out5838 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11007_fromTpeGen = _out5838;
                  RAST._IType _11008_toTpeGen;
                  RAST._IType _out5839;
                  _out5839 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11008_toTpeGen = _out5839;
                  RAST._IExpr _11009_recursiveGen;
                  DCOMPUTF16._IOwnership _11010_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11011_recIdents;
                  RAST._IExpr _out5840;
                  DCOMPUTF16._IOwnership _out5841;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5842;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5840, out _out5841, out _out5842);
                  _11009_recursiveGen = _out5840;
                  _11010_recOwned = _out5841;
                  _11011_recIdents = _out5842;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11009_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11007_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11008_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5843;
                  DCOMPUTF16._IOwnership _out5844;
                  DCOMPUTF16.COMP.FromOwnership(r, _11010_recOwned, expectedOwnership, out _out5843, out _out5844);
                  r = _out5843;
                  resultingOwnership = _out5844;
                  readIdents = _11011_recIdents;
                }
              } else if (_source407.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11012___mcc_h958 = _source407.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _11013___mcc_h959 = _source407.dtor_attributes;
                {
                  RAST._IType _11014_fromTpeGen;
                  RAST._IType _out5845;
                  _out5845 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11014_fromTpeGen = _out5845;
                  RAST._IType _11015_toTpeGen;
                  RAST._IType _out5846;
                  _out5846 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11015_toTpeGen = _out5846;
                  RAST._IExpr _11016_recursiveGen;
                  DCOMPUTF16._IOwnership _11017_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11018_recIdents;
                  RAST._IExpr _out5847;
                  DCOMPUTF16._IOwnership _out5848;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5849;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5847, out _out5848, out _out5849);
                  _11016_recursiveGen = _out5847;
                  _11017_recOwned = _out5848;
                  _11018_recIdents = _out5849;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11016_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11014_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11015_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5850;
                  DCOMPUTF16._IOwnership _out5851;
                  DCOMPUTF16.COMP.FromOwnership(r, _11017_recOwned, expectedOwnership, out _out5850, out _out5851);
                  r = _out5850;
                  resultingOwnership = _out5851;
                  readIdents = _11018_recIdents;
                }
              } else {
                DAST._IType _11019___mcc_h962 = _source407.dtor_baseType;
                DAST._INewtypeRange _11020___mcc_h963 = _source407.dtor_range;
                bool _11021___mcc_h964 = _source407.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _11022___mcc_h965 = _source407.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _11023_attributes = _11022___mcc_h965;
                bool _11024_erase = _11021___mcc_h964;
                DAST._INewtypeRange _11025_range = _11020___mcc_h963;
                DAST._IType _11026_b = _11019___mcc_h962;
                {
                  Std.Wrappers._IOption<RAST._IType> _11027_nativeToType;
                  _11027_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11026_b, _11025_range);
                  if (object.Equals(_8722_fromTpe, _11026_b)) {
                    RAST._IExpr _11028_recursiveGen;
                    DCOMPUTF16._IOwnership _11029_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11030_recIdents;
                    RAST._IExpr _out5852;
                    DCOMPUTF16._IOwnership _out5853;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5854;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5852, out _out5853, out _out5854);
                    _11028_recursiveGen = _out5852;
                    _11029_recOwned = _out5853;
                    _11030_recIdents = _out5854;
                    readIdents = _11030_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source408 = _11027_nativeToType;
                    if (_source408.is_None) {
                      if (_11024_erase) {
                        r = _11028_recursiveGen;
                      } else {
                        RAST._IType _11031_rhsType;
                        RAST._IType _out5855;
                        _out5855 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _11031_rhsType = _out5855;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11031_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11028_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out5856;
                      DCOMPUTF16._IOwnership _out5857;
                      DCOMPUTF16.COMP.FromOwnership(r, _11029_recOwned, expectedOwnership, out _out5856, out _out5857);
                      r = _out5856;
                      resultingOwnership = _out5857;
                    } else {
                      RAST._IType _11032___mcc_h2104 = _source408.dtor_value;
                      RAST._IType _11033_v = _11032___mcc_h2104;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11028_recursiveGen, RAST.Expr.create_ExprFromType(_11033_v)));
                      RAST._IExpr _out5858;
                      DCOMPUTF16._IOwnership _out5859;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5858, out _out5859);
                      r = _out5858;
                      resultingOwnership = _out5859;
                    }
                  } else {
                    if ((_11027_nativeToType).is_Some) {
                      DAST._IType _source409 = _8722_fromTpe;
                      if (_source409.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11034___mcc_h2105 = _source409.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11035___mcc_h2106 = _source409.dtor_typeArgs;
                        DAST._IResolvedType _11036___mcc_h2107 = _source409.dtor_resolved;
                        DAST._IResolvedType _source410 = _11036___mcc_h2107;
                        if (_source410.is_AllocatedDatatype) {
                          DAST._IDatatypeType _11037___mcc_h2111 = _source410.dtor_datatypeType;
                        } else if (_source410.is_Datatype) {
                          DAST._IDatatypeType _11038___mcc_h2113 = _source410.dtor_datatypeType;
                        } else if (_source410.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11039___mcc_h2115 = _source410.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11040___mcc_h2116 = _source410.dtor_attributes;
                        } else {
                          DAST._IType _11041___mcc_h2119 = _source410.dtor_baseType;
                          DAST._INewtypeRange _11042___mcc_h2120 = _source410.dtor_range;
                          bool _11043___mcc_h2121 = _source410.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11044___mcc_h2122 = _source410.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11045_attributes0 = _11044___mcc_h2122;
                          bool _11046_erase0 = _11043___mcc_h2121;
                          DAST._INewtypeRange _11047_range0 = _11042___mcc_h2120;
                          DAST._IType _11048_b0 = _11041___mcc_h2119;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11049_nativeFromType;
                            _11049_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11048_b0, _11047_range0);
                            if ((_11049_nativeFromType).is_Some) {
                              RAST._IExpr _11050_recursiveGen;
                              DCOMPUTF16._IOwnership _11051_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11052_recIdents;
                              RAST._IExpr _out5860;
                              DCOMPUTF16._IOwnership _out5861;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5862;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5860, out _out5861, out _out5862);
                              _11050_recursiveGen = _out5860;
                              _11051_recOwned = _out5861;
                              _11052_recIdents = _out5862;
                              RAST._IExpr _out5863;
                              DCOMPUTF16._IOwnership _out5864;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11050_recursiveGen, (_11027_nativeToType).dtor_value), _11051_recOwned, expectedOwnership, out _out5863, out _out5864);
                              r = _out5863;
                              resultingOwnership = _out5864;
                              readIdents = _11052_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source409.is_Nullable) {
                        DAST._IType _11053___mcc_h2127 = _source409.dtor_Nullable_a0;
                      } else if (_source409.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11054___mcc_h2129 = _source409.dtor_Tuple_a0;
                      } else if (_source409.is_Array) {
                        DAST._IType _11055___mcc_h2131 = _source409.dtor_element;
                        BigInteger _11056___mcc_h2132 = _source409.dtor_dims;
                      } else if (_source409.is_Seq) {
                        DAST._IType _11057___mcc_h2135 = _source409.dtor_element;
                      } else if (_source409.is_Set) {
                        DAST._IType _11058___mcc_h2137 = _source409.dtor_element;
                      } else if (_source409.is_Multiset) {
                        DAST._IType _11059___mcc_h2139 = _source409.dtor_element;
                      } else if (_source409.is_Map) {
                        DAST._IType _11060___mcc_h2141 = _source409.dtor_key;
                        DAST._IType _11061___mcc_h2142 = _source409.dtor_value;
                      } else if (_source409.is_SetBuilder) {
                        DAST._IType _11062___mcc_h2145 = _source409.dtor_element;
                      } else if (_source409.is_MapBuilder) {
                        DAST._IType _11063___mcc_h2147 = _source409.dtor_key;
                        DAST._IType _11064___mcc_h2148 = _source409.dtor_value;
                      } else if (_source409.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11065___mcc_h2151 = _source409.dtor_args;
                        DAST._IType _11066___mcc_h2152 = _source409.dtor_result;
                      } else if (_source409.is_Primitive) {
                        DAST._IPrimitive _11067___mcc_h2155 = _source409.dtor_Primitive_a0;
                      } else if (_source409.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11068___mcc_h2157 = _source409.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11069___mcc_h2159 = _source409.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11070_recursiveGen;
                        DCOMPUTF16._IOwnership _11071_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11072_recIdents;
                        RAST._IExpr _out5865;
                        DCOMPUTF16._IOwnership _out5866;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5867;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5865, out _out5866, out _out5867);
                        _11070_recursiveGen = _out5865;
                        _11071_recOwned = _out5866;
                        _11072_recIdents = _out5867;
                        RAST._IExpr _out5868;
                        DCOMPUTF16._IOwnership _out5869;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11070_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11027_nativeToType).dtor_value), _11071_recOwned, expectedOwnership, out _out5868, out _out5869);
                        r = _out5868;
                        resultingOwnership = _out5869;
                        readIdents = _11072_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out5870;
                    DCOMPUTF16._IOwnership _out5871;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5872;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _11026_b), _11026_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out5870, out _out5871, out _out5872);
                    r = _out5870;
                    resultingOwnership = _out5871;
                    readIdents = _out5872;
                  }
                }
              }
            } else if (_source406.is_Nullable) {
              DAST._IType _11073___mcc_h970 = _source406.dtor_Nullable_a0;
              {
                RAST._IExpr _11074_recursiveGen;
                DCOMPUTF16._IOwnership _11075_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11076_recIdents;
                RAST._IExpr _out5873;
                DCOMPUTF16._IOwnership _out5874;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5875;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5873, out _out5874, out _out5875);
                _11074_recursiveGen = _out5873;
                _11075_recOwned = _out5874;
                _11076_recIdents = _out5875;
                r = _11074_recursiveGen;
                if (object.Equals(_11075_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out5876;
                DCOMPUTF16._IOwnership _out5877;
                DCOMPUTF16.COMP.FromOwnership(r, _11075_recOwned, expectedOwnership, out _out5876, out _out5877);
                r = _out5876;
                resultingOwnership = _out5877;
                readIdents = _11076_recIdents;
              }
            } else if (_source406.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11077___mcc_h972 = _source406.dtor_Tuple_a0;
              {
                RAST._IType _11078_fromTpeGen;
                RAST._IType _out5878;
                _out5878 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11078_fromTpeGen = _out5878;
                RAST._IType _11079_toTpeGen;
                RAST._IType _out5879;
                _out5879 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11079_toTpeGen = _out5879;
                RAST._IExpr _11080_recursiveGen;
                DCOMPUTF16._IOwnership _11081_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11082_recIdents;
                RAST._IExpr _out5880;
                DCOMPUTF16._IOwnership _out5881;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5882;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5880, out _out5881, out _out5882);
                _11080_recursiveGen = _out5880;
                _11081_recOwned = _out5881;
                _11082_recIdents = _out5882;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11080_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11078_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11079_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5883;
                DCOMPUTF16._IOwnership _out5884;
                DCOMPUTF16.COMP.FromOwnership(r, _11081_recOwned, expectedOwnership, out _out5883, out _out5884);
                r = _out5883;
                resultingOwnership = _out5884;
                readIdents = _11082_recIdents;
              }
            } else if (_source406.is_Array) {
              DAST._IType _11083___mcc_h974 = _source406.dtor_element;
              BigInteger _11084___mcc_h975 = _source406.dtor_dims;
              {
                RAST._IType _11085_fromTpeGen;
                RAST._IType _out5885;
                _out5885 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11085_fromTpeGen = _out5885;
                RAST._IType _11086_toTpeGen;
                RAST._IType _out5886;
                _out5886 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11086_toTpeGen = _out5886;
                RAST._IExpr _11087_recursiveGen;
                DCOMPUTF16._IOwnership _11088_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11089_recIdents;
                RAST._IExpr _out5887;
                DCOMPUTF16._IOwnership _out5888;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5889;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5887, out _out5888, out _out5889);
                _11087_recursiveGen = _out5887;
                _11088_recOwned = _out5888;
                _11089_recIdents = _out5889;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11087_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11085_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11086_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5890;
                DCOMPUTF16._IOwnership _out5891;
                DCOMPUTF16.COMP.FromOwnership(r, _11088_recOwned, expectedOwnership, out _out5890, out _out5891);
                r = _out5890;
                resultingOwnership = _out5891;
                readIdents = _11089_recIdents;
              }
            } else if (_source406.is_Seq) {
              DAST._IType _11090___mcc_h978 = _source406.dtor_element;
              {
                RAST._IType _11091_fromTpeGen;
                RAST._IType _out5892;
                _out5892 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11091_fromTpeGen = _out5892;
                RAST._IType _11092_toTpeGen;
                RAST._IType _out5893;
                _out5893 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11092_toTpeGen = _out5893;
                RAST._IExpr _11093_recursiveGen;
                DCOMPUTF16._IOwnership _11094_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11095_recIdents;
                RAST._IExpr _out5894;
                DCOMPUTF16._IOwnership _out5895;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5896;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5894, out _out5895, out _out5896);
                _11093_recursiveGen = _out5894;
                _11094_recOwned = _out5895;
                _11095_recIdents = _out5896;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11093_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11091_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11092_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5897;
                DCOMPUTF16._IOwnership _out5898;
                DCOMPUTF16.COMP.FromOwnership(r, _11094_recOwned, expectedOwnership, out _out5897, out _out5898);
                r = _out5897;
                resultingOwnership = _out5898;
                readIdents = _11095_recIdents;
              }
            } else if (_source406.is_Set) {
              DAST._IType _11096___mcc_h980 = _source406.dtor_element;
              {
                RAST._IType _11097_fromTpeGen;
                RAST._IType _out5899;
                _out5899 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11097_fromTpeGen = _out5899;
                RAST._IType _11098_toTpeGen;
                RAST._IType _out5900;
                _out5900 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11098_toTpeGen = _out5900;
                RAST._IExpr _11099_recursiveGen;
                DCOMPUTF16._IOwnership _11100_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11101_recIdents;
                RAST._IExpr _out5901;
                DCOMPUTF16._IOwnership _out5902;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5903;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5901, out _out5902, out _out5903);
                _11099_recursiveGen = _out5901;
                _11100_recOwned = _out5902;
                _11101_recIdents = _out5903;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11099_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11097_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11098_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5904;
                DCOMPUTF16._IOwnership _out5905;
                DCOMPUTF16.COMP.FromOwnership(r, _11100_recOwned, expectedOwnership, out _out5904, out _out5905);
                r = _out5904;
                resultingOwnership = _out5905;
                readIdents = _11101_recIdents;
              }
            } else if (_source406.is_Multiset) {
              DAST._IType _11102___mcc_h982 = _source406.dtor_element;
              {
                RAST._IType _11103_fromTpeGen;
                RAST._IType _out5906;
                _out5906 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11103_fromTpeGen = _out5906;
                RAST._IType _11104_toTpeGen;
                RAST._IType _out5907;
                _out5907 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11104_toTpeGen = _out5907;
                RAST._IExpr _11105_recursiveGen;
                DCOMPUTF16._IOwnership _11106_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11107_recIdents;
                RAST._IExpr _out5908;
                DCOMPUTF16._IOwnership _out5909;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5910;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5908, out _out5909, out _out5910);
                _11105_recursiveGen = _out5908;
                _11106_recOwned = _out5909;
                _11107_recIdents = _out5910;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11105_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11103_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11104_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5911;
                DCOMPUTF16._IOwnership _out5912;
                DCOMPUTF16.COMP.FromOwnership(r, _11106_recOwned, expectedOwnership, out _out5911, out _out5912);
                r = _out5911;
                resultingOwnership = _out5912;
                readIdents = _11107_recIdents;
              }
            } else if (_source406.is_Map) {
              DAST._IType _11108___mcc_h984 = _source406.dtor_key;
              DAST._IType _11109___mcc_h985 = _source406.dtor_value;
              {
                RAST._IType _11110_fromTpeGen;
                RAST._IType _out5913;
                _out5913 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11110_fromTpeGen = _out5913;
                RAST._IType _11111_toTpeGen;
                RAST._IType _out5914;
                _out5914 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11111_toTpeGen = _out5914;
                RAST._IExpr _11112_recursiveGen;
                DCOMPUTF16._IOwnership _11113_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11114_recIdents;
                RAST._IExpr _out5915;
                DCOMPUTF16._IOwnership _out5916;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5917;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5915, out _out5916, out _out5917);
                _11112_recursiveGen = _out5915;
                _11113_recOwned = _out5916;
                _11114_recIdents = _out5917;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11112_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11110_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11111_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5918;
                DCOMPUTF16._IOwnership _out5919;
                DCOMPUTF16.COMP.FromOwnership(r, _11113_recOwned, expectedOwnership, out _out5918, out _out5919);
                r = _out5918;
                resultingOwnership = _out5919;
                readIdents = _11114_recIdents;
              }
            } else if (_source406.is_SetBuilder) {
              DAST._IType _11115___mcc_h988 = _source406.dtor_element;
              {
                RAST._IType _11116_fromTpeGen;
                RAST._IType _out5920;
                _out5920 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11116_fromTpeGen = _out5920;
                RAST._IType _11117_toTpeGen;
                RAST._IType _out5921;
                _out5921 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11117_toTpeGen = _out5921;
                RAST._IExpr _11118_recursiveGen;
                DCOMPUTF16._IOwnership _11119_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11120_recIdents;
                RAST._IExpr _out5922;
                DCOMPUTF16._IOwnership _out5923;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5924;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5922, out _out5923, out _out5924);
                _11118_recursiveGen = _out5922;
                _11119_recOwned = _out5923;
                _11120_recIdents = _out5924;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11118_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11116_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11117_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5925;
                DCOMPUTF16._IOwnership _out5926;
                DCOMPUTF16.COMP.FromOwnership(r, _11119_recOwned, expectedOwnership, out _out5925, out _out5926);
                r = _out5925;
                resultingOwnership = _out5926;
                readIdents = _11120_recIdents;
              }
            } else if (_source406.is_MapBuilder) {
              DAST._IType _11121___mcc_h990 = _source406.dtor_key;
              DAST._IType _11122___mcc_h991 = _source406.dtor_value;
              {
                RAST._IType _11123_fromTpeGen;
                RAST._IType _out5927;
                _out5927 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11123_fromTpeGen = _out5927;
                RAST._IType _11124_toTpeGen;
                RAST._IType _out5928;
                _out5928 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11124_toTpeGen = _out5928;
                RAST._IExpr _11125_recursiveGen;
                DCOMPUTF16._IOwnership _11126_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11127_recIdents;
                RAST._IExpr _out5929;
                DCOMPUTF16._IOwnership _out5930;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5931;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5929, out _out5930, out _out5931);
                _11125_recursiveGen = _out5929;
                _11126_recOwned = _out5930;
                _11127_recIdents = _out5931;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11125_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11123_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11124_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5932;
                DCOMPUTF16._IOwnership _out5933;
                DCOMPUTF16.COMP.FromOwnership(r, _11126_recOwned, expectedOwnership, out _out5932, out _out5933);
                r = _out5932;
                resultingOwnership = _out5933;
                readIdents = _11127_recIdents;
              }
            } else if (_source406.is_Arrow) {
              Dafny.ISequence<DAST._IType> _11128___mcc_h994 = _source406.dtor_args;
              DAST._IType _11129___mcc_h995 = _source406.dtor_result;
              {
                RAST._IType _11130_fromTpeGen;
                RAST._IType _out5934;
                _out5934 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11130_fromTpeGen = _out5934;
                RAST._IType _11131_toTpeGen;
                RAST._IType _out5935;
                _out5935 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11131_toTpeGen = _out5935;
                RAST._IExpr _11132_recursiveGen;
                DCOMPUTF16._IOwnership _11133_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11134_recIdents;
                RAST._IExpr _out5936;
                DCOMPUTF16._IOwnership _out5937;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5938;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5936, out _out5937, out _out5938);
                _11132_recursiveGen = _out5936;
                _11133_recOwned = _out5937;
                _11134_recIdents = _out5938;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11132_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11130_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11131_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5939;
                DCOMPUTF16._IOwnership _out5940;
                DCOMPUTF16.COMP.FromOwnership(r, _11133_recOwned, expectedOwnership, out _out5939, out _out5940);
                r = _out5939;
                resultingOwnership = _out5940;
                readIdents = _11134_recIdents;
              }
            } else if (_source406.is_Primitive) {
              DAST._IPrimitive _11135___mcc_h998 = _source406.dtor_Primitive_a0;
              DAST._IPrimitive _source411 = _11135___mcc_h998;
              if (_source411.is_Int) {
                {
                  RAST._IType _11136_fromTpeGen;
                  RAST._IType _out5941;
                  _out5941 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11136_fromTpeGen = _out5941;
                  RAST._IType _11137_toTpeGen;
                  RAST._IType _out5942;
                  _out5942 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11137_toTpeGen = _out5942;
                  RAST._IExpr _11138_recursiveGen;
                  DCOMPUTF16._IOwnership _11139_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11140_recIdents;
                  RAST._IExpr _out5943;
                  DCOMPUTF16._IOwnership _out5944;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5945;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5943, out _out5944, out _out5945);
                  _11138_recursiveGen = _out5943;
                  _11139_recOwned = _out5944;
                  _11140_recIdents = _out5945;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11138_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11136_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11137_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5946;
                  DCOMPUTF16._IOwnership _out5947;
                  DCOMPUTF16.COMP.FromOwnership(r, _11139_recOwned, expectedOwnership, out _out5946, out _out5947);
                  r = _out5946;
                  resultingOwnership = _out5947;
                  readIdents = _11140_recIdents;
                }
              } else if (_source411.is_Real) {
                {
                  RAST._IExpr _11141_recursiveGen;
                  DCOMPUTF16._IOwnership _11142___v93;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11143_recIdents;
                  RAST._IExpr _out5948;
                  DCOMPUTF16._IOwnership _out5949;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5950;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5948, out _out5949, out _out5950);
                  _11141_recursiveGen = _out5948;
                  _11142___v93 = _out5949;
                  _11143_recIdents = _out5950;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_11141_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out5951;
                  DCOMPUTF16._IOwnership _out5952;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5951, out _out5952);
                  r = _out5951;
                  resultingOwnership = _out5952;
                  readIdents = _11143_recIdents;
                }
              } else if (_source411.is_String) {
                {
                  RAST._IType _11144_fromTpeGen;
                  RAST._IType _out5953;
                  _out5953 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11144_fromTpeGen = _out5953;
                  RAST._IType _11145_toTpeGen;
                  RAST._IType _out5954;
                  _out5954 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11145_toTpeGen = _out5954;
                  RAST._IExpr _11146_recursiveGen;
                  DCOMPUTF16._IOwnership _11147_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11148_recIdents;
                  RAST._IExpr _out5955;
                  DCOMPUTF16._IOwnership _out5956;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5957;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5955, out _out5956, out _out5957);
                  _11146_recursiveGen = _out5955;
                  _11147_recOwned = _out5956;
                  _11148_recIdents = _out5957;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11146_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11144_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11145_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5958;
                  DCOMPUTF16._IOwnership _out5959;
                  DCOMPUTF16.COMP.FromOwnership(r, _11147_recOwned, expectedOwnership, out _out5958, out _out5959);
                  r = _out5958;
                  resultingOwnership = _out5959;
                  readIdents = _11148_recIdents;
                }
              } else if (_source411.is_Bool) {
                {
                  RAST._IType _11149_fromTpeGen;
                  RAST._IType _out5960;
                  _out5960 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11149_fromTpeGen = _out5960;
                  RAST._IType _11150_toTpeGen;
                  RAST._IType _out5961;
                  _out5961 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11150_toTpeGen = _out5961;
                  RAST._IExpr _11151_recursiveGen;
                  DCOMPUTF16._IOwnership _11152_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11153_recIdents;
                  RAST._IExpr _out5962;
                  DCOMPUTF16._IOwnership _out5963;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5964;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5962, out _out5963, out _out5964);
                  _11151_recursiveGen = _out5962;
                  _11152_recOwned = _out5963;
                  _11153_recIdents = _out5964;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11151_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11149_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11150_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5965;
                  DCOMPUTF16._IOwnership _out5966;
                  DCOMPUTF16.COMP.FromOwnership(r, _11152_recOwned, expectedOwnership, out _out5965, out _out5966);
                  r = _out5965;
                  resultingOwnership = _out5966;
                  readIdents = _11153_recIdents;
                }
              } else {
                {
                  RAST._IType _11154_rhsType;
                  RAST._IType _out5967;
                  _out5967 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11154_rhsType = _out5967;
                  RAST._IExpr _11155_recursiveGen;
                  DCOMPUTF16._IOwnership _11156___v99;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11157_recIdents;
                  RAST._IExpr _out5968;
                  DCOMPUTF16._IOwnership _out5969;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5970;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5968, out _out5969, out _out5970);
                  _11155_recursiveGen = _out5968;
                  _11156___v99 = _out5969;
                  _11157_recIdents = _out5970;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_11155_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out5971;
                  DCOMPUTF16._IOwnership _out5972;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5971, out _out5972);
                  r = _out5971;
                  resultingOwnership = _out5972;
                  readIdents = _11157_recIdents;
                }
              }
            } else if (_source406.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _11158___mcc_h1000 = _source406.dtor_Passthrough_a0;
              {
                RAST._IType _11159_rhsType;
                RAST._IType _out5973;
                _out5973 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11159_rhsType = _out5973;
                RAST._IExpr _11160_recursiveGen;
                DCOMPUTF16._IOwnership _11161___v96;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11162_recIdents;
                RAST._IExpr _out5974;
                DCOMPUTF16._IOwnership _out5975;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5976;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out5974, out _out5975, out _out5976);
                _11160_recursiveGen = _out5974;
                _11161___v96 = _out5975;
                _11162_recIdents = _out5976;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_11159_rhsType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_11160_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out5977;
                DCOMPUTF16._IOwnership _out5978;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out5977, out _out5978);
                r = _out5977;
                resultingOwnership = _out5978;
                readIdents = _11162_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _11163___mcc_h1002 = _source406.dtor_TypeArg_a0;
              {
                RAST._IType _11164_fromTpeGen;
                RAST._IType _out5979;
                _out5979 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11164_fromTpeGen = _out5979;
                RAST._IType _11165_toTpeGen;
                RAST._IType _out5980;
                _out5980 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11165_toTpeGen = _out5980;
                RAST._IExpr _11166_recursiveGen;
                DCOMPUTF16._IOwnership _11167_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11168_recIdents;
                RAST._IExpr _out5981;
                DCOMPUTF16._IOwnership _out5982;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5983;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5981, out _out5982, out _out5983);
                _11166_recursiveGen = _out5981;
                _11167_recOwned = _out5982;
                _11168_recIdents = _out5983;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11166_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11164_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11165_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out5984;
                DCOMPUTF16._IOwnership _out5985;
                DCOMPUTF16.COMP.FromOwnership(r, _11167_recOwned, expectedOwnership, out _out5984, out _out5985);
                r = _out5984;
                resultingOwnership = _out5985;
                readIdents = _11168_recIdents;
              }
            }
          } else if (_source405.is_Real) {
            DAST._IType _source412 = _8728___mcc_h1;
            if (_source412.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11169___mcc_h1004 = _source412.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _11170___mcc_h1005 = _source412.dtor_typeArgs;
              DAST._IResolvedType _11171___mcc_h1006 = _source412.dtor_resolved;
              DAST._IResolvedType _source413 = _11171___mcc_h1006;
              if (_source413.is_AllocatedDatatype) {
                DAST._IDatatypeType _11172___mcc_h1010 = _source413.dtor_datatypeType;
                {
                  RAST._IType _11173_fromTpeGen;
                  RAST._IType _out5986;
                  _out5986 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11173_fromTpeGen = _out5986;
                  RAST._IType _11174_toTpeGen;
                  RAST._IType _out5987;
                  _out5987 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11174_toTpeGen = _out5987;
                  RAST._IExpr _11175_recursiveGen;
                  DCOMPUTF16._IOwnership _11176_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11177_recIdents;
                  RAST._IExpr _out5988;
                  DCOMPUTF16._IOwnership _out5989;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5990;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5988, out _out5989, out _out5990);
                  _11175_recursiveGen = _out5988;
                  _11176_recOwned = _out5989;
                  _11177_recIdents = _out5990;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11175_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11173_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11174_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5991;
                  DCOMPUTF16._IOwnership _out5992;
                  DCOMPUTF16.COMP.FromOwnership(r, _11176_recOwned, expectedOwnership, out _out5991, out _out5992);
                  r = _out5991;
                  resultingOwnership = _out5992;
                  readIdents = _11177_recIdents;
                }
              } else if (_source413.is_Datatype) {
                DAST._IDatatypeType _11178___mcc_h1012 = _source413.dtor_datatypeType;
                {
                  RAST._IType _11179_fromTpeGen;
                  RAST._IType _out5993;
                  _out5993 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11179_fromTpeGen = _out5993;
                  RAST._IType _11180_toTpeGen;
                  RAST._IType _out5994;
                  _out5994 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11180_toTpeGen = _out5994;
                  RAST._IExpr _11181_recursiveGen;
                  DCOMPUTF16._IOwnership _11182_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11183_recIdents;
                  RAST._IExpr _out5995;
                  DCOMPUTF16._IOwnership _out5996;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out5997;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out5995, out _out5996, out _out5997);
                  _11181_recursiveGen = _out5995;
                  _11182_recOwned = _out5996;
                  _11183_recIdents = _out5997;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11181_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11179_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11180_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out5998;
                  DCOMPUTF16._IOwnership _out5999;
                  DCOMPUTF16.COMP.FromOwnership(r, _11182_recOwned, expectedOwnership, out _out5998, out _out5999);
                  r = _out5998;
                  resultingOwnership = _out5999;
                  readIdents = _11183_recIdents;
                }
              } else if (_source413.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11184___mcc_h1014 = _source413.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _11185___mcc_h1015 = _source413.dtor_attributes;
                {
                  RAST._IType _11186_fromTpeGen;
                  RAST._IType _out6000;
                  _out6000 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11186_fromTpeGen = _out6000;
                  RAST._IType _11187_toTpeGen;
                  RAST._IType _out6001;
                  _out6001 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11187_toTpeGen = _out6001;
                  RAST._IExpr _11188_recursiveGen;
                  DCOMPUTF16._IOwnership _11189_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11190_recIdents;
                  RAST._IExpr _out6002;
                  DCOMPUTF16._IOwnership _out6003;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6004;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6002, out _out6003, out _out6004);
                  _11188_recursiveGen = _out6002;
                  _11189_recOwned = _out6003;
                  _11190_recIdents = _out6004;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11188_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11186_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11187_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6005;
                  DCOMPUTF16._IOwnership _out6006;
                  DCOMPUTF16.COMP.FromOwnership(r, _11189_recOwned, expectedOwnership, out _out6005, out _out6006);
                  r = _out6005;
                  resultingOwnership = _out6006;
                  readIdents = _11190_recIdents;
                }
              } else {
                DAST._IType _11191___mcc_h1018 = _source413.dtor_baseType;
                DAST._INewtypeRange _11192___mcc_h1019 = _source413.dtor_range;
                bool _11193___mcc_h1020 = _source413.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _11194___mcc_h1021 = _source413.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _11195_attributes = _11194___mcc_h1021;
                bool _11196_erase = _11193___mcc_h1020;
                DAST._INewtypeRange _11197_range = _11192___mcc_h1019;
                DAST._IType _11198_b = _11191___mcc_h1018;
                {
                  Std.Wrappers._IOption<RAST._IType> _11199_nativeToType;
                  _11199_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11198_b, _11197_range);
                  if (object.Equals(_8722_fromTpe, _11198_b)) {
                    RAST._IExpr _11200_recursiveGen;
                    DCOMPUTF16._IOwnership _11201_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11202_recIdents;
                    RAST._IExpr _out6007;
                    DCOMPUTF16._IOwnership _out6008;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6009;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6007, out _out6008, out _out6009);
                    _11200_recursiveGen = _out6007;
                    _11201_recOwned = _out6008;
                    _11202_recIdents = _out6009;
                    readIdents = _11202_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source414 = _11199_nativeToType;
                    if (_source414.is_None) {
                      if (_11196_erase) {
                        r = _11200_recursiveGen;
                      } else {
                        RAST._IType _11203_rhsType;
                        RAST._IType _out6010;
                        _out6010 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _11203_rhsType = _out6010;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11203_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11200_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6011;
                      DCOMPUTF16._IOwnership _out6012;
                      DCOMPUTF16.COMP.FromOwnership(r, _11201_recOwned, expectedOwnership, out _out6011, out _out6012);
                      r = _out6011;
                      resultingOwnership = _out6012;
                    } else {
                      RAST._IType _11204___mcc_h2161 = _source414.dtor_value;
                      RAST._IType _11205_v = _11204___mcc_h2161;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11200_recursiveGen, RAST.Expr.create_ExprFromType(_11205_v)));
                      RAST._IExpr _out6013;
                      DCOMPUTF16._IOwnership _out6014;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6013, out _out6014);
                      r = _out6013;
                      resultingOwnership = _out6014;
                    }
                  } else {
                    if ((_11199_nativeToType).is_Some) {
                      DAST._IType _source415 = _8722_fromTpe;
                      if (_source415.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11206___mcc_h2162 = _source415.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11207___mcc_h2163 = _source415.dtor_typeArgs;
                        DAST._IResolvedType _11208___mcc_h2164 = _source415.dtor_resolved;
                        DAST._IResolvedType _source416 = _11208___mcc_h2164;
                        if (_source416.is_AllocatedDatatype) {
                          DAST._IDatatypeType _11209___mcc_h2168 = _source416.dtor_datatypeType;
                        } else if (_source416.is_Datatype) {
                          DAST._IDatatypeType _11210___mcc_h2170 = _source416.dtor_datatypeType;
                        } else if (_source416.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11211___mcc_h2172 = _source416.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11212___mcc_h2173 = _source416.dtor_attributes;
                        } else {
                          DAST._IType _11213___mcc_h2176 = _source416.dtor_baseType;
                          DAST._INewtypeRange _11214___mcc_h2177 = _source416.dtor_range;
                          bool _11215___mcc_h2178 = _source416.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11216___mcc_h2179 = _source416.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11217_attributes0 = _11216___mcc_h2179;
                          bool _11218_erase0 = _11215___mcc_h2178;
                          DAST._INewtypeRange _11219_range0 = _11214___mcc_h2177;
                          DAST._IType _11220_b0 = _11213___mcc_h2176;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11221_nativeFromType;
                            _11221_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11220_b0, _11219_range0);
                            if ((_11221_nativeFromType).is_Some) {
                              RAST._IExpr _11222_recursiveGen;
                              DCOMPUTF16._IOwnership _11223_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11224_recIdents;
                              RAST._IExpr _out6015;
                              DCOMPUTF16._IOwnership _out6016;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6017;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6015, out _out6016, out _out6017);
                              _11222_recursiveGen = _out6015;
                              _11223_recOwned = _out6016;
                              _11224_recIdents = _out6017;
                              RAST._IExpr _out6018;
                              DCOMPUTF16._IOwnership _out6019;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11222_recursiveGen, (_11199_nativeToType).dtor_value), _11223_recOwned, expectedOwnership, out _out6018, out _out6019);
                              r = _out6018;
                              resultingOwnership = _out6019;
                              readIdents = _11224_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source415.is_Nullable) {
                        DAST._IType _11225___mcc_h2184 = _source415.dtor_Nullable_a0;
                      } else if (_source415.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11226___mcc_h2186 = _source415.dtor_Tuple_a0;
                      } else if (_source415.is_Array) {
                        DAST._IType _11227___mcc_h2188 = _source415.dtor_element;
                        BigInteger _11228___mcc_h2189 = _source415.dtor_dims;
                      } else if (_source415.is_Seq) {
                        DAST._IType _11229___mcc_h2192 = _source415.dtor_element;
                      } else if (_source415.is_Set) {
                        DAST._IType _11230___mcc_h2194 = _source415.dtor_element;
                      } else if (_source415.is_Multiset) {
                        DAST._IType _11231___mcc_h2196 = _source415.dtor_element;
                      } else if (_source415.is_Map) {
                        DAST._IType _11232___mcc_h2198 = _source415.dtor_key;
                        DAST._IType _11233___mcc_h2199 = _source415.dtor_value;
                      } else if (_source415.is_SetBuilder) {
                        DAST._IType _11234___mcc_h2202 = _source415.dtor_element;
                      } else if (_source415.is_MapBuilder) {
                        DAST._IType _11235___mcc_h2204 = _source415.dtor_key;
                        DAST._IType _11236___mcc_h2205 = _source415.dtor_value;
                      } else if (_source415.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11237___mcc_h2208 = _source415.dtor_args;
                        DAST._IType _11238___mcc_h2209 = _source415.dtor_result;
                      } else if (_source415.is_Primitive) {
                        DAST._IPrimitive _11239___mcc_h2212 = _source415.dtor_Primitive_a0;
                      } else if (_source415.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11240___mcc_h2214 = _source415.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11241___mcc_h2216 = _source415.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11242_recursiveGen;
                        DCOMPUTF16._IOwnership _11243_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11244_recIdents;
                        RAST._IExpr _out6020;
                        DCOMPUTF16._IOwnership _out6021;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6022;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6020, out _out6021, out _out6022);
                        _11242_recursiveGen = _out6020;
                        _11243_recOwned = _out6021;
                        _11244_recIdents = _out6022;
                        RAST._IExpr _out6023;
                        DCOMPUTF16._IOwnership _out6024;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11242_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11199_nativeToType).dtor_value), _11243_recOwned, expectedOwnership, out _out6023, out _out6024);
                        r = _out6023;
                        resultingOwnership = _out6024;
                        readIdents = _11244_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6025;
                    DCOMPUTF16._IOwnership _out6026;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6027;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _11198_b), _11198_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out6025, out _out6026, out _out6027);
                    r = _out6025;
                    resultingOwnership = _out6026;
                    readIdents = _out6027;
                  }
                }
              }
            } else if (_source412.is_Nullable) {
              DAST._IType _11245___mcc_h1026 = _source412.dtor_Nullable_a0;
              {
                RAST._IExpr _11246_recursiveGen;
                DCOMPUTF16._IOwnership _11247_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11248_recIdents;
                RAST._IExpr _out6028;
                DCOMPUTF16._IOwnership _out6029;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6030;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6028, out _out6029, out _out6030);
                _11246_recursiveGen = _out6028;
                _11247_recOwned = _out6029;
                _11248_recIdents = _out6030;
                r = _11246_recursiveGen;
                if (object.Equals(_11247_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6031;
                DCOMPUTF16._IOwnership _out6032;
                DCOMPUTF16.COMP.FromOwnership(r, _11247_recOwned, expectedOwnership, out _out6031, out _out6032);
                r = _out6031;
                resultingOwnership = _out6032;
                readIdents = _11248_recIdents;
              }
            } else if (_source412.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11249___mcc_h1028 = _source412.dtor_Tuple_a0;
              {
                RAST._IType _11250_fromTpeGen;
                RAST._IType _out6033;
                _out6033 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11250_fromTpeGen = _out6033;
                RAST._IType _11251_toTpeGen;
                RAST._IType _out6034;
                _out6034 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11251_toTpeGen = _out6034;
                RAST._IExpr _11252_recursiveGen;
                DCOMPUTF16._IOwnership _11253_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11254_recIdents;
                RAST._IExpr _out6035;
                DCOMPUTF16._IOwnership _out6036;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6037;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6035, out _out6036, out _out6037);
                _11252_recursiveGen = _out6035;
                _11253_recOwned = _out6036;
                _11254_recIdents = _out6037;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11252_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11250_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11251_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6038;
                DCOMPUTF16._IOwnership _out6039;
                DCOMPUTF16.COMP.FromOwnership(r, _11253_recOwned, expectedOwnership, out _out6038, out _out6039);
                r = _out6038;
                resultingOwnership = _out6039;
                readIdents = _11254_recIdents;
              }
            } else if (_source412.is_Array) {
              DAST._IType _11255___mcc_h1030 = _source412.dtor_element;
              BigInteger _11256___mcc_h1031 = _source412.dtor_dims;
              {
                RAST._IType _11257_fromTpeGen;
                RAST._IType _out6040;
                _out6040 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11257_fromTpeGen = _out6040;
                RAST._IType _11258_toTpeGen;
                RAST._IType _out6041;
                _out6041 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11258_toTpeGen = _out6041;
                RAST._IExpr _11259_recursiveGen;
                DCOMPUTF16._IOwnership _11260_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11261_recIdents;
                RAST._IExpr _out6042;
                DCOMPUTF16._IOwnership _out6043;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6044;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6042, out _out6043, out _out6044);
                _11259_recursiveGen = _out6042;
                _11260_recOwned = _out6043;
                _11261_recIdents = _out6044;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11259_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11257_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11258_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6045;
                DCOMPUTF16._IOwnership _out6046;
                DCOMPUTF16.COMP.FromOwnership(r, _11260_recOwned, expectedOwnership, out _out6045, out _out6046);
                r = _out6045;
                resultingOwnership = _out6046;
                readIdents = _11261_recIdents;
              }
            } else if (_source412.is_Seq) {
              DAST._IType _11262___mcc_h1034 = _source412.dtor_element;
              {
                RAST._IType _11263_fromTpeGen;
                RAST._IType _out6047;
                _out6047 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11263_fromTpeGen = _out6047;
                RAST._IType _11264_toTpeGen;
                RAST._IType _out6048;
                _out6048 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11264_toTpeGen = _out6048;
                RAST._IExpr _11265_recursiveGen;
                DCOMPUTF16._IOwnership _11266_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11267_recIdents;
                RAST._IExpr _out6049;
                DCOMPUTF16._IOwnership _out6050;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6051;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6049, out _out6050, out _out6051);
                _11265_recursiveGen = _out6049;
                _11266_recOwned = _out6050;
                _11267_recIdents = _out6051;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11265_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11263_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11264_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6052;
                DCOMPUTF16._IOwnership _out6053;
                DCOMPUTF16.COMP.FromOwnership(r, _11266_recOwned, expectedOwnership, out _out6052, out _out6053);
                r = _out6052;
                resultingOwnership = _out6053;
                readIdents = _11267_recIdents;
              }
            } else if (_source412.is_Set) {
              DAST._IType _11268___mcc_h1036 = _source412.dtor_element;
              {
                RAST._IType _11269_fromTpeGen;
                RAST._IType _out6054;
                _out6054 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11269_fromTpeGen = _out6054;
                RAST._IType _11270_toTpeGen;
                RAST._IType _out6055;
                _out6055 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11270_toTpeGen = _out6055;
                RAST._IExpr _11271_recursiveGen;
                DCOMPUTF16._IOwnership _11272_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11273_recIdents;
                RAST._IExpr _out6056;
                DCOMPUTF16._IOwnership _out6057;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6058;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6056, out _out6057, out _out6058);
                _11271_recursiveGen = _out6056;
                _11272_recOwned = _out6057;
                _11273_recIdents = _out6058;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11271_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11269_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11270_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6059;
                DCOMPUTF16._IOwnership _out6060;
                DCOMPUTF16.COMP.FromOwnership(r, _11272_recOwned, expectedOwnership, out _out6059, out _out6060);
                r = _out6059;
                resultingOwnership = _out6060;
                readIdents = _11273_recIdents;
              }
            } else if (_source412.is_Multiset) {
              DAST._IType _11274___mcc_h1038 = _source412.dtor_element;
              {
                RAST._IType _11275_fromTpeGen;
                RAST._IType _out6061;
                _out6061 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11275_fromTpeGen = _out6061;
                RAST._IType _11276_toTpeGen;
                RAST._IType _out6062;
                _out6062 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11276_toTpeGen = _out6062;
                RAST._IExpr _11277_recursiveGen;
                DCOMPUTF16._IOwnership _11278_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11279_recIdents;
                RAST._IExpr _out6063;
                DCOMPUTF16._IOwnership _out6064;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6065;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6063, out _out6064, out _out6065);
                _11277_recursiveGen = _out6063;
                _11278_recOwned = _out6064;
                _11279_recIdents = _out6065;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11277_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11275_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11276_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6066;
                DCOMPUTF16._IOwnership _out6067;
                DCOMPUTF16.COMP.FromOwnership(r, _11278_recOwned, expectedOwnership, out _out6066, out _out6067);
                r = _out6066;
                resultingOwnership = _out6067;
                readIdents = _11279_recIdents;
              }
            } else if (_source412.is_Map) {
              DAST._IType _11280___mcc_h1040 = _source412.dtor_key;
              DAST._IType _11281___mcc_h1041 = _source412.dtor_value;
              {
                RAST._IType _11282_fromTpeGen;
                RAST._IType _out6068;
                _out6068 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11282_fromTpeGen = _out6068;
                RAST._IType _11283_toTpeGen;
                RAST._IType _out6069;
                _out6069 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11283_toTpeGen = _out6069;
                RAST._IExpr _11284_recursiveGen;
                DCOMPUTF16._IOwnership _11285_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11286_recIdents;
                RAST._IExpr _out6070;
                DCOMPUTF16._IOwnership _out6071;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6072;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6070, out _out6071, out _out6072);
                _11284_recursiveGen = _out6070;
                _11285_recOwned = _out6071;
                _11286_recIdents = _out6072;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11284_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11282_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11283_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6073;
                DCOMPUTF16._IOwnership _out6074;
                DCOMPUTF16.COMP.FromOwnership(r, _11285_recOwned, expectedOwnership, out _out6073, out _out6074);
                r = _out6073;
                resultingOwnership = _out6074;
                readIdents = _11286_recIdents;
              }
            } else if (_source412.is_SetBuilder) {
              DAST._IType _11287___mcc_h1044 = _source412.dtor_element;
              {
                RAST._IType _11288_fromTpeGen;
                RAST._IType _out6075;
                _out6075 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11288_fromTpeGen = _out6075;
                RAST._IType _11289_toTpeGen;
                RAST._IType _out6076;
                _out6076 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11289_toTpeGen = _out6076;
                RAST._IExpr _11290_recursiveGen;
                DCOMPUTF16._IOwnership _11291_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11292_recIdents;
                RAST._IExpr _out6077;
                DCOMPUTF16._IOwnership _out6078;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6079;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6077, out _out6078, out _out6079);
                _11290_recursiveGen = _out6077;
                _11291_recOwned = _out6078;
                _11292_recIdents = _out6079;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11290_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11288_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11289_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6080;
                DCOMPUTF16._IOwnership _out6081;
                DCOMPUTF16.COMP.FromOwnership(r, _11291_recOwned, expectedOwnership, out _out6080, out _out6081);
                r = _out6080;
                resultingOwnership = _out6081;
                readIdents = _11292_recIdents;
              }
            } else if (_source412.is_MapBuilder) {
              DAST._IType _11293___mcc_h1046 = _source412.dtor_key;
              DAST._IType _11294___mcc_h1047 = _source412.dtor_value;
              {
                RAST._IType _11295_fromTpeGen;
                RAST._IType _out6082;
                _out6082 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11295_fromTpeGen = _out6082;
                RAST._IType _11296_toTpeGen;
                RAST._IType _out6083;
                _out6083 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11296_toTpeGen = _out6083;
                RAST._IExpr _11297_recursiveGen;
                DCOMPUTF16._IOwnership _11298_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11299_recIdents;
                RAST._IExpr _out6084;
                DCOMPUTF16._IOwnership _out6085;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6086;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6084, out _out6085, out _out6086);
                _11297_recursiveGen = _out6084;
                _11298_recOwned = _out6085;
                _11299_recIdents = _out6086;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11297_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11295_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11296_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6087;
                DCOMPUTF16._IOwnership _out6088;
                DCOMPUTF16.COMP.FromOwnership(r, _11298_recOwned, expectedOwnership, out _out6087, out _out6088);
                r = _out6087;
                resultingOwnership = _out6088;
                readIdents = _11299_recIdents;
              }
            } else if (_source412.is_Arrow) {
              Dafny.ISequence<DAST._IType> _11300___mcc_h1050 = _source412.dtor_args;
              DAST._IType _11301___mcc_h1051 = _source412.dtor_result;
              {
                RAST._IType _11302_fromTpeGen;
                RAST._IType _out6089;
                _out6089 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11302_fromTpeGen = _out6089;
                RAST._IType _11303_toTpeGen;
                RAST._IType _out6090;
                _out6090 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11303_toTpeGen = _out6090;
                RAST._IExpr _11304_recursiveGen;
                DCOMPUTF16._IOwnership _11305_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11306_recIdents;
                RAST._IExpr _out6091;
                DCOMPUTF16._IOwnership _out6092;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6093;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6091, out _out6092, out _out6093);
                _11304_recursiveGen = _out6091;
                _11305_recOwned = _out6092;
                _11306_recIdents = _out6093;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11304_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11302_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11303_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6094;
                DCOMPUTF16._IOwnership _out6095;
                DCOMPUTF16.COMP.FromOwnership(r, _11305_recOwned, expectedOwnership, out _out6094, out _out6095);
                r = _out6094;
                resultingOwnership = _out6095;
                readIdents = _11306_recIdents;
              }
            } else if (_source412.is_Primitive) {
              DAST._IPrimitive _11307___mcc_h1054 = _source412.dtor_Primitive_a0;
              DAST._IPrimitive _source417 = _11307___mcc_h1054;
              if (_source417.is_Int) {
                {
                  RAST._IExpr _11308_recursiveGen;
                  DCOMPUTF16._IOwnership _11309___v94;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11310_recIdents;
                  RAST._IExpr _out6096;
                  DCOMPUTF16._IOwnership _out6097;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6098;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6096, out _out6097, out _out6098);
                  _11308_recursiveGen = _out6096;
                  _11309___v94 = _out6097;
                  _11310_recIdents = _out6098;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_11308_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out6099;
                  DCOMPUTF16._IOwnership _out6100;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6099, out _out6100);
                  r = _out6099;
                  resultingOwnership = _out6100;
                  readIdents = _11310_recIdents;
                }
              } else if (_source417.is_Real) {
                {
                  RAST._IType _11311_fromTpeGen;
                  RAST._IType _out6101;
                  _out6101 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11311_fromTpeGen = _out6101;
                  RAST._IType _11312_toTpeGen;
                  RAST._IType _out6102;
                  _out6102 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11312_toTpeGen = _out6102;
                  RAST._IExpr _11313_recursiveGen;
                  DCOMPUTF16._IOwnership _11314_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11315_recIdents;
                  RAST._IExpr _out6103;
                  DCOMPUTF16._IOwnership _out6104;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6105;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6103, out _out6104, out _out6105);
                  _11313_recursiveGen = _out6103;
                  _11314_recOwned = _out6104;
                  _11315_recIdents = _out6105;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11313_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11311_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11312_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6106;
                  DCOMPUTF16._IOwnership _out6107;
                  DCOMPUTF16.COMP.FromOwnership(r, _11314_recOwned, expectedOwnership, out _out6106, out _out6107);
                  r = _out6106;
                  resultingOwnership = _out6107;
                  readIdents = _11315_recIdents;
                }
              } else if (_source417.is_String) {
                {
                  RAST._IType _11316_fromTpeGen;
                  RAST._IType _out6108;
                  _out6108 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11316_fromTpeGen = _out6108;
                  RAST._IType _11317_toTpeGen;
                  RAST._IType _out6109;
                  _out6109 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11317_toTpeGen = _out6109;
                  RAST._IExpr _11318_recursiveGen;
                  DCOMPUTF16._IOwnership _11319_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11320_recIdents;
                  RAST._IExpr _out6110;
                  DCOMPUTF16._IOwnership _out6111;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6112;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6110, out _out6111, out _out6112);
                  _11318_recursiveGen = _out6110;
                  _11319_recOwned = _out6111;
                  _11320_recIdents = _out6112;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11318_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11316_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11317_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6113;
                  DCOMPUTF16._IOwnership _out6114;
                  DCOMPUTF16.COMP.FromOwnership(r, _11319_recOwned, expectedOwnership, out _out6113, out _out6114);
                  r = _out6113;
                  resultingOwnership = _out6114;
                  readIdents = _11320_recIdents;
                }
              } else if (_source417.is_Bool) {
                {
                  RAST._IType _11321_fromTpeGen;
                  RAST._IType _out6115;
                  _out6115 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11321_fromTpeGen = _out6115;
                  RAST._IType _11322_toTpeGen;
                  RAST._IType _out6116;
                  _out6116 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11322_toTpeGen = _out6116;
                  RAST._IExpr _11323_recursiveGen;
                  DCOMPUTF16._IOwnership _11324_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11325_recIdents;
                  RAST._IExpr _out6117;
                  DCOMPUTF16._IOwnership _out6118;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6119;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6117, out _out6118, out _out6119);
                  _11323_recursiveGen = _out6117;
                  _11324_recOwned = _out6118;
                  _11325_recIdents = _out6119;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11323_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11321_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11322_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6120;
                  DCOMPUTF16._IOwnership _out6121;
                  DCOMPUTF16.COMP.FromOwnership(r, _11324_recOwned, expectedOwnership, out _out6120, out _out6121);
                  r = _out6120;
                  resultingOwnership = _out6121;
                  readIdents = _11325_recIdents;
                }
              } else {
                {
                  RAST._IType _11326_fromTpeGen;
                  RAST._IType _out6122;
                  _out6122 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11326_fromTpeGen = _out6122;
                  RAST._IType _11327_toTpeGen;
                  RAST._IType _out6123;
                  _out6123 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11327_toTpeGen = _out6123;
                  RAST._IExpr _11328_recursiveGen;
                  DCOMPUTF16._IOwnership _11329_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11330_recIdents;
                  RAST._IExpr _out6124;
                  DCOMPUTF16._IOwnership _out6125;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6126;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6124, out _out6125, out _out6126);
                  _11328_recursiveGen = _out6124;
                  _11329_recOwned = _out6125;
                  _11330_recIdents = _out6126;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11328_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11326_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11327_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6127;
                  DCOMPUTF16._IOwnership _out6128;
                  DCOMPUTF16.COMP.FromOwnership(r, _11329_recOwned, expectedOwnership, out _out6127, out _out6128);
                  r = _out6127;
                  resultingOwnership = _out6128;
                  readIdents = _11330_recIdents;
                }
              }
            } else if (_source412.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _11331___mcc_h1056 = _source412.dtor_Passthrough_a0;
              {
                RAST._IType _11332_fromTpeGen;
                RAST._IType _out6129;
                _out6129 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11332_fromTpeGen = _out6129;
                RAST._IType _11333_toTpeGen;
                RAST._IType _out6130;
                _out6130 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11333_toTpeGen = _out6130;
                RAST._IExpr _11334_recursiveGen;
                DCOMPUTF16._IOwnership _11335_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11336_recIdents;
                RAST._IExpr _out6131;
                DCOMPUTF16._IOwnership _out6132;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6133;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6131, out _out6132, out _out6133);
                _11334_recursiveGen = _out6131;
                _11335_recOwned = _out6132;
                _11336_recIdents = _out6133;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11334_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11332_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11333_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6134;
                DCOMPUTF16._IOwnership _out6135;
                DCOMPUTF16.COMP.FromOwnership(r, _11335_recOwned, expectedOwnership, out _out6134, out _out6135);
                r = _out6134;
                resultingOwnership = _out6135;
                readIdents = _11336_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _11337___mcc_h1058 = _source412.dtor_TypeArg_a0;
              {
                RAST._IType _11338_fromTpeGen;
                RAST._IType _out6136;
                _out6136 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11338_fromTpeGen = _out6136;
                RAST._IType _11339_toTpeGen;
                RAST._IType _out6137;
                _out6137 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11339_toTpeGen = _out6137;
                RAST._IExpr _11340_recursiveGen;
                DCOMPUTF16._IOwnership _11341_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11342_recIdents;
                RAST._IExpr _out6138;
                DCOMPUTF16._IOwnership _out6139;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6140;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6138, out _out6139, out _out6140);
                _11340_recursiveGen = _out6138;
                _11341_recOwned = _out6139;
                _11342_recIdents = _out6140;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11340_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11338_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11339_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6141;
                DCOMPUTF16._IOwnership _out6142;
                DCOMPUTF16.COMP.FromOwnership(r, _11341_recOwned, expectedOwnership, out _out6141, out _out6142);
                r = _out6141;
                resultingOwnership = _out6142;
                readIdents = _11342_recIdents;
              }
            }
          } else if (_source405.is_String) {
            DAST._IType _source418 = _8728___mcc_h1;
            if (_source418.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11343___mcc_h1060 = _source418.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _11344___mcc_h1061 = _source418.dtor_typeArgs;
              DAST._IResolvedType _11345___mcc_h1062 = _source418.dtor_resolved;
              DAST._IResolvedType _source419 = _11345___mcc_h1062;
              if (_source419.is_AllocatedDatatype) {
                DAST._IDatatypeType _11346___mcc_h1066 = _source419.dtor_datatypeType;
                {
                  RAST._IType _11347_fromTpeGen;
                  RAST._IType _out6143;
                  _out6143 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11347_fromTpeGen = _out6143;
                  RAST._IType _11348_toTpeGen;
                  RAST._IType _out6144;
                  _out6144 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11348_toTpeGen = _out6144;
                  RAST._IExpr _11349_recursiveGen;
                  DCOMPUTF16._IOwnership _11350_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11351_recIdents;
                  RAST._IExpr _out6145;
                  DCOMPUTF16._IOwnership _out6146;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6147;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6145, out _out6146, out _out6147);
                  _11349_recursiveGen = _out6145;
                  _11350_recOwned = _out6146;
                  _11351_recIdents = _out6147;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11349_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11347_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11348_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6148;
                  DCOMPUTF16._IOwnership _out6149;
                  DCOMPUTF16.COMP.FromOwnership(r, _11350_recOwned, expectedOwnership, out _out6148, out _out6149);
                  r = _out6148;
                  resultingOwnership = _out6149;
                  readIdents = _11351_recIdents;
                }
              } else if (_source419.is_Datatype) {
                DAST._IDatatypeType _11352___mcc_h1068 = _source419.dtor_datatypeType;
                {
                  RAST._IType _11353_fromTpeGen;
                  RAST._IType _out6150;
                  _out6150 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11353_fromTpeGen = _out6150;
                  RAST._IType _11354_toTpeGen;
                  RAST._IType _out6151;
                  _out6151 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11354_toTpeGen = _out6151;
                  RAST._IExpr _11355_recursiveGen;
                  DCOMPUTF16._IOwnership _11356_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11357_recIdents;
                  RAST._IExpr _out6152;
                  DCOMPUTF16._IOwnership _out6153;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6154;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6152, out _out6153, out _out6154);
                  _11355_recursiveGen = _out6152;
                  _11356_recOwned = _out6153;
                  _11357_recIdents = _out6154;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11355_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11353_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11354_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6155;
                  DCOMPUTF16._IOwnership _out6156;
                  DCOMPUTF16.COMP.FromOwnership(r, _11356_recOwned, expectedOwnership, out _out6155, out _out6156);
                  r = _out6155;
                  resultingOwnership = _out6156;
                  readIdents = _11357_recIdents;
                }
              } else if (_source419.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11358___mcc_h1070 = _source419.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _11359___mcc_h1071 = _source419.dtor_attributes;
                {
                  RAST._IType _11360_fromTpeGen;
                  RAST._IType _out6157;
                  _out6157 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11360_fromTpeGen = _out6157;
                  RAST._IType _11361_toTpeGen;
                  RAST._IType _out6158;
                  _out6158 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11361_toTpeGen = _out6158;
                  RAST._IExpr _11362_recursiveGen;
                  DCOMPUTF16._IOwnership _11363_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11364_recIdents;
                  RAST._IExpr _out6159;
                  DCOMPUTF16._IOwnership _out6160;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6161;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6159, out _out6160, out _out6161);
                  _11362_recursiveGen = _out6159;
                  _11363_recOwned = _out6160;
                  _11364_recIdents = _out6161;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11362_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11360_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11361_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6162;
                  DCOMPUTF16._IOwnership _out6163;
                  DCOMPUTF16.COMP.FromOwnership(r, _11363_recOwned, expectedOwnership, out _out6162, out _out6163);
                  r = _out6162;
                  resultingOwnership = _out6163;
                  readIdents = _11364_recIdents;
                }
              } else {
                DAST._IType _11365___mcc_h1074 = _source419.dtor_baseType;
                DAST._INewtypeRange _11366___mcc_h1075 = _source419.dtor_range;
                bool _11367___mcc_h1076 = _source419.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _11368___mcc_h1077 = _source419.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _11369_attributes = _11368___mcc_h1077;
                bool _11370_erase = _11367___mcc_h1076;
                DAST._INewtypeRange _11371_range = _11366___mcc_h1075;
                DAST._IType _11372_b = _11365___mcc_h1074;
                {
                  Std.Wrappers._IOption<RAST._IType> _11373_nativeToType;
                  _11373_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11372_b, _11371_range);
                  if (object.Equals(_8722_fromTpe, _11372_b)) {
                    RAST._IExpr _11374_recursiveGen;
                    DCOMPUTF16._IOwnership _11375_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11376_recIdents;
                    RAST._IExpr _out6164;
                    DCOMPUTF16._IOwnership _out6165;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6166;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6164, out _out6165, out _out6166);
                    _11374_recursiveGen = _out6164;
                    _11375_recOwned = _out6165;
                    _11376_recIdents = _out6166;
                    readIdents = _11376_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source420 = _11373_nativeToType;
                    if (_source420.is_None) {
                      if (_11370_erase) {
                        r = _11374_recursiveGen;
                      } else {
                        RAST._IType _11377_rhsType;
                        RAST._IType _out6167;
                        _out6167 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _11377_rhsType = _out6167;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11377_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11374_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6168;
                      DCOMPUTF16._IOwnership _out6169;
                      DCOMPUTF16.COMP.FromOwnership(r, _11375_recOwned, expectedOwnership, out _out6168, out _out6169);
                      r = _out6168;
                      resultingOwnership = _out6169;
                    } else {
                      RAST._IType _11378___mcc_h2218 = _source420.dtor_value;
                      RAST._IType _11379_v = _11378___mcc_h2218;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11374_recursiveGen, RAST.Expr.create_ExprFromType(_11379_v)));
                      RAST._IExpr _out6170;
                      DCOMPUTF16._IOwnership _out6171;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6170, out _out6171);
                      r = _out6170;
                      resultingOwnership = _out6171;
                    }
                  } else {
                    if ((_11373_nativeToType).is_Some) {
                      DAST._IType _source421 = _8722_fromTpe;
                      if (_source421.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11380___mcc_h2219 = _source421.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11381___mcc_h2220 = _source421.dtor_typeArgs;
                        DAST._IResolvedType _11382___mcc_h2221 = _source421.dtor_resolved;
                        DAST._IResolvedType _source422 = _11382___mcc_h2221;
                        if (_source422.is_AllocatedDatatype) {
                          DAST._IDatatypeType _11383___mcc_h2225 = _source422.dtor_datatypeType;
                        } else if (_source422.is_Datatype) {
                          DAST._IDatatypeType _11384___mcc_h2227 = _source422.dtor_datatypeType;
                        } else if (_source422.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11385___mcc_h2229 = _source422.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11386___mcc_h2230 = _source422.dtor_attributes;
                        } else {
                          DAST._IType _11387___mcc_h2233 = _source422.dtor_baseType;
                          DAST._INewtypeRange _11388___mcc_h2234 = _source422.dtor_range;
                          bool _11389___mcc_h2235 = _source422.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11390___mcc_h2236 = _source422.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11391_attributes0 = _11390___mcc_h2236;
                          bool _11392_erase0 = _11389___mcc_h2235;
                          DAST._INewtypeRange _11393_range0 = _11388___mcc_h2234;
                          DAST._IType _11394_b0 = _11387___mcc_h2233;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11395_nativeFromType;
                            _11395_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11394_b0, _11393_range0);
                            if ((_11395_nativeFromType).is_Some) {
                              RAST._IExpr _11396_recursiveGen;
                              DCOMPUTF16._IOwnership _11397_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11398_recIdents;
                              RAST._IExpr _out6172;
                              DCOMPUTF16._IOwnership _out6173;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6174;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6172, out _out6173, out _out6174);
                              _11396_recursiveGen = _out6172;
                              _11397_recOwned = _out6173;
                              _11398_recIdents = _out6174;
                              RAST._IExpr _out6175;
                              DCOMPUTF16._IOwnership _out6176;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11396_recursiveGen, (_11373_nativeToType).dtor_value), _11397_recOwned, expectedOwnership, out _out6175, out _out6176);
                              r = _out6175;
                              resultingOwnership = _out6176;
                              readIdents = _11398_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source421.is_Nullable) {
                        DAST._IType _11399___mcc_h2241 = _source421.dtor_Nullable_a0;
                      } else if (_source421.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11400___mcc_h2243 = _source421.dtor_Tuple_a0;
                      } else if (_source421.is_Array) {
                        DAST._IType _11401___mcc_h2245 = _source421.dtor_element;
                        BigInteger _11402___mcc_h2246 = _source421.dtor_dims;
                      } else if (_source421.is_Seq) {
                        DAST._IType _11403___mcc_h2249 = _source421.dtor_element;
                      } else if (_source421.is_Set) {
                        DAST._IType _11404___mcc_h2251 = _source421.dtor_element;
                      } else if (_source421.is_Multiset) {
                        DAST._IType _11405___mcc_h2253 = _source421.dtor_element;
                      } else if (_source421.is_Map) {
                        DAST._IType _11406___mcc_h2255 = _source421.dtor_key;
                        DAST._IType _11407___mcc_h2256 = _source421.dtor_value;
                      } else if (_source421.is_SetBuilder) {
                        DAST._IType _11408___mcc_h2259 = _source421.dtor_element;
                      } else if (_source421.is_MapBuilder) {
                        DAST._IType _11409___mcc_h2261 = _source421.dtor_key;
                        DAST._IType _11410___mcc_h2262 = _source421.dtor_value;
                      } else if (_source421.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11411___mcc_h2265 = _source421.dtor_args;
                        DAST._IType _11412___mcc_h2266 = _source421.dtor_result;
                      } else if (_source421.is_Primitive) {
                        DAST._IPrimitive _11413___mcc_h2269 = _source421.dtor_Primitive_a0;
                      } else if (_source421.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11414___mcc_h2271 = _source421.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11415___mcc_h2273 = _source421.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11416_recursiveGen;
                        DCOMPUTF16._IOwnership _11417_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11418_recIdents;
                        RAST._IExpr _out6177;
                        DCOMPUTF16._IOwnership _out6178;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6179;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6177, out _out6178, out _out6179);
                        _11416_recursiveGen = _out6177;
                        _11417_recOwned = _out6178;
                        _11418_recIdents = _out6179;
                        RAST._IExpr _out6180;
                        DCOMPUTF16._IOwnership _out6181;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11416_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11373_nativeToType).dtor_value), _11417_recOwned, expectedOwnership, out _out6180, out _out6181);
                        r = _out6180;
                        resultingOwnership = _out6181;
                        readIdents = _11418_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6182;
                    DCOMPUTF16._IOwnership _out6183;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6184;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _11372_b), _11372_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out6182, out _out6183, out _out6184);
                    r = _out6182;
                    resultingOwnership = _out6183;
                    readIdents = _out6184;
                  }
                }
              }
            } else if (_source418.is_Nullable) {
              DAST._IType _11419___mcc_h1082 = _source418.dtor_Nullable_a0;
              {
                RAST._IExpr _11420_recursiveGen;
                DCOMPUTF16._IOwnership _11421_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11422_recIdents;
                RAST._IExpr _out6185;
                DCOMPUTF16._IOwnership _out6186;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6187;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6185, out _out6186, out _out6187);
                _11420_recursiveGen = _out6185;
                _11421_recOwned = _out6186;
                _11422_recIdents = _out6187;
                r = _11420_recursiveGen;
                if (object.Equals(_11421_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6188;
                DCOMPUTF16._IOwnership _out6189;
                DCOMPUTF16.COMP.FromOwnership(r, _11421_recOwned, expectedOwnership, out _out6188, out _out6189);
                r = _out6188;
                resultingOwnership = _out6189;
                readIdents = _11422_recIdents;
              }
            } else if (_source418.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11423___mcc_h1084 = _source418.dtor_Tuple_a0;
              {
                RAST._IType _11424_fromTpeGen;
                RAST._IType _out6190;
                _out6190 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11424_fromTpeGen = _out6190;
                RAST._IType _11425_toTpeGen;
                RAST._IType _out6191;
                _out6191 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11425_toTpeGen = _out6191;
                RAST._IExpr _11426_recursiveGen;
                DCOMPUTF16._IOwnership _11427_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11428_recIdents;
                RAST._IExpr _out6192;
                DCOMPUTF16._IOwnership _out6193;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6194;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6192, out _out6193, out _out6194);
                _11426_recursiveGen = _out6192;
                _11427_recOwned = _out6193;
                _11428_recIdents = _out6194;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11426_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11424_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11425_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6195;
                DCOMPUTF16._IOwnership _out6196;
                DCOMPUTF16.COMP.FromOwnership(r, _11427_recOwned, expectedOwnership, out _out6195, out _out6196);
                r = _out6195;
                resultingOwnership = _out6196;
                readIdents = _11428_recIdents;
              }
            } else if (_source418.is_Array) {
              DAST._IType _11429___mcc_h1086 = _source418.dtor_element;
              BigInteger _11430___mcc_h1087 = _source418.dtor_dims;
              {
                RAST._IType _11431_fromTpeGen;
                RAST._IType _out6197;
                _out6197 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11431_fromTpeGen = _out6197;
                RAST._IType _11432_toTpeGen;
                RAST._IType _out6198;
                _out6198 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11432_toTpeGen = _out6198;
                RAST._IExpr _11433_recursiveGen;
                DCOMPUTF16._IOwnership _11434_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11435_recIdents;
                RAST._IExpr _out6199;
                DCOMPUTF16._IOwnership _out6200;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6201;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6199, out _out6200, out _out6201);
                _11433_recursiveGen = _out6199;
                _11434_recOwned = _out6200;
                _11435_recIdents = _out6201;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11433_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11431_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11432_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6202;
                DCOMPUTF16._IOwnership _out6203;
                DCOMPUTF16.COMP.FromOwnership(r, _11434_recOwned, expectedOwnership, out _out6202, out _out6203);
                r = _out6202;
                resultingOwnership = _out6203;
                readIdents = _11435_recIdents;
              }
            } else if (_source418.is_Seq) {
              DAST._IType _11436___mcc_h1090 = _source418.dtor_element;
              {
                RAST._IType _11437_fromTpeGen;
                RAST._IType _out6204;
                _out6204 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11437_fromTpeGen = _out6204;
                RAST._IType _11438_toTpeGen;
                RAST._IType _out6205;
                _out6205 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11438_toTpeGen = _out6205;
                RAST._IExpr _11439_recursiveGen;
                DCOMPUTF16._IOwnership _11440_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11441_recIdents;
                RAST._IExpr _out6206;
                DCOMPUTF16._IOwnership _out6207;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6208;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6206, out _out6207, out _out6208);
                _11439_recursiveGen = _out6206;
                _11440_recOwned = _out6207;
                _11441_recIdents = _out6208;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11439_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11437_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11438_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6209;
                DCOMPUTF16._IOwnership _out6210;
                DCOMPUTF16.COMP.FromOwnership(r, _11440_recOwned, expectedOwnership, out _out6209, out _out6210);
                r = _out6209;
                resultingOwnership = _out6210;
                readIdents = _11441_recIdents;
              }
            } else if (_source418.is_Set) {
              DAST._IType _11442___mcc_h1092 = _source418.dtor_element;
              {
                RAST._IType _11443_fromTpeGen;
                RAST._IType _out6211;
                _out6211 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11443_fromTpeGen = _out6211;
                RAST._IType _11444_toTpeGen;
                RAST._IType _out6212;
                _out6212 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11444_toTpeGen = _out6212;
                RAST._IExpr _11445_recursiveGen;
                DCOMPUTF16._IOwnership _11446_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11447_recIdents;
                RAST._IExpr _out6213;
                DCOMPUTF16._IOwnership _out6214;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6215;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6213, out _out6214, out _out6215);
                _11445_recursiveGen = _out6213;
                _11446_recOwned = _out6214;
                _11447_recIdents = _out6215;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11445_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11443_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11444_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6216;
                DCOMPUTF16._IOwnership _out6217;
                DCOMPUTF16.COMP.FromOwnership(r, _11446_recOwned, expectedOwnership, out _out6216, out _out6217);
                r = _out6216;
                resultingOwnership = _out6217;
                readIdents = _11447_recIdents;
              }
            } else if (_source418.is_Multiset) {
              DAST._IType _11448___mcc_h1094 = _source418.dtor_element;
              {
                RAST._IType _11449_fromTpeGen;
                RAST._IType _out6218;
                _out6218 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11449_fromTpeGen = _out6218;
                RAST._IType _11450_toTpeGen;
                RAST._IType _out6219;
                _out6219 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11450_toTpeGen = _out6219;
                RAST._IExpr _11451_recursiveGen;
                DCOMPUTF16._IOwnership _11452_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11453_recIdents;
                RAST._IExpr _out6220;
                DCOMPUTF16._IOwnership _out6221;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6222;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6220, out _out6221, out _out6222);
                _11451_recursiveGen = _out6220;
                _11452_recOwned = _out6221;
                _11453_recIdents = _out6222;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11451_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11449_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11450_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6223;
                DCOMPUTF16._IOwnership _out6224;
                DCOMPUTF16.COMP.FromOwnership(r, _11452_recOwned, expectedOwnership, out _out6223, out _out6224);
                r = _out6223;
                resultingOwnership = _out6224;
                readIdents = _11453_recIdents;
              }
            } else if (_source418.is_Map) {
              DAST._IType _11454___mcc_h1096 = _source418.dtor_key;
              DAST._IType _11455___mcc_h1097 = _source418.dtor_value;
              {
                RAST._IType _11456_fromTpeGen;
                RAST._IType _out6225;
                _out6225 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11456_fromTpeGen = _out6225;
                RAST._IType _11457_toTpeGen;
                RAST._IType _out6226;
                _out6226 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11457_toTpeGen = _out6226;
                RAST._IExpr _11458_recursiveGen;
                DCOMPUTF16._IOwnership _11459_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11460_recIdents;
                RAST._IExpr _out6227;
                DCOMPUTF16._IOwnership _out6228;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6229;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6227, out _out6228, out _out6229);
                _11458_recursiveGen = _out6227;
                _11459_recOwned = _out6228;
                _11460_recIdents = _out6229;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11458_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11456_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11457_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6230;
                DCOMPUTF16._IOwnership _out6231;
                DCOMPUTF16.COMP.FromOwnership(r, _11459_recOwned, expectedOwnership, out _out6230, out _out6231);
                r = _out6230;
                resultingOwnership = _out6231;
                readIdents = _11460_recIdents;
              }
            } else if (_source418.is_SetBuilder) {
              DAST._IType _11461___mcc_h1100 = _source418.dtor_element;
              {
                RAST._IType _11462_fromTpeGen;
                RAST._IType _out6232;
                _out6232 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11462_fromTpeGen = _out6232;
                RAST._IType _11463_toTpeGen;
                RAST._IType _out6233;
                _out6233 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11463_toTpeGen = _out6233;
                RAST._IExpr _11464_recursiveGen;
                DCOMPUTF16._IOwnership _11465_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11466_recIdents;
                RAST._IExpr _out6234;
                DCOMPUTF16._IOwnership _out6235;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6236;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6234, out _out6235, out _out6236);
                _11464_recursiveGen = _out6234;
                _11465_recOwned = _out6235;
                _11466_recIdents = _out6236;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11464_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11462_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11463_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6237;
                DCOMPUTF16._IOwnership _out6238;
                DCOMPUTF16.COMP.FromOwnership(r, _11465_recOwned, expectedOwnership, out _out6237, out _out6238);
                r = _out6237;
                resultingOwnership = _out6238;
                readIdents = _11466_recIdents;
              }
            } else if (_source418.is_MapBuilder) {
              DAST._IType _11467___mcc_h1102 = _source418.dtor_key;
              DAST._IType _11468___mcc_h1103 = _source418.dtor_value;
              {
                RAST._IType _11469_fromTpeGen;
                RAST._IType _out6239;
                _out6239 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11469_fromTpeGen = _out6239;
                RAST._IType _11470_toTpeGen;
                RAST._IType _out6240;
                _out6240 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11470_toTpeGen = _out6240;
                RAST._IExpr _11471_recursiveGen;
                DCOMPUTF16._IOwnership _11472_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11473_recIdents;
                RAST._IExpr _out6241;
                DCOMPUTF16._IOwnership _out6242;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6243;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6241, out _out6242, out _out6243);
                _11471_recursiveGen = _out6241;
                _11472_recOwned = _out6242;
                _11473_recIdents = _out6243;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11471_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11469_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11470_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6244;
                DCOMPUTF16._IOwnership _out6245;
                DCOMPUTF16.COMP.FromOwnership(r, _11472_recOwned, expectedOwnership, out _out6244, out _out6245);
                r = _out6244;
                resultingOwnership = _out6245;
                readIdents = _11473_recIdents;
              }
            } else if (_source418.is_Arrow) {
              Dafny.ISequence<DAST._IType> _11474___mcc_h1106 = _source418.dtor_args;
              DAST._IType _11475___mcc_h1107 = _source418.dtor_result;
              {
                RAST._IType _11476_fromTpeGen;
                RAST._IType _out6246;
                _out6246 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11476_fromTpeGen = _out6246;
                RAST._IType _11477_toTpeGen;
                RAST._IType _out6247;
                _out6247 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11477_toTpeGen = _out6247;
                RAST._IExpr _11478_recursiveGen;
                DCOMPUTF16._IOwnership _11479_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11480_recIdents;
                RAST._IExpr _out6248;
                DCOMPUTF16._IOwnership _out6249;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6250;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6248, out _out6249, out _out6250);
                _11478_recursiveGen = _out6248;
                _11479_recOwned = _out6249;
                _11480_recIdents = _out6250;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11478_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11476_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11477_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6251;
                DCOMPUTF16._IOwnership _out6252;
                DCOMPUTF16.COMP.FromOwnership(r, _11479_recOwned, expectedOwnership, out _out6251, out _out6252);
                r = _out6251;
                resultingOwnership = _out6252;
                readIdents = _11480_recIdents;
              }
            } else if (_source418.is_Primitive) {
              DAST._IPrimitive _11481___mcc_h1110 = _source418.dtor_Primitive_a0;
              {
                RAST._IType _11482_fromTpeGen;
                RAST._IType _out6253;
                _out6253 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11482_fromTpeGen = _out6253;
                RAST._IType _11483_toTpeGen;
                RAST._IType _out6254;
                _out6254 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11483_toTpeGen = _out6254;
                RAST._IExpr _11484_recursiveGen;
                DCOMPUTF16._IOwnership _11485_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11486_recIdents;
                RAST._IExpr _out6255;
                DCOMPUTF16._IOwnership _out6256;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6257;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6255, out _out6256, out _out6257);
                _11484_recursiveGen = _out6255;
                _11485_recOwned = _out6256;
                _11486_recIdents = _out6257;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11484_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11482_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11483_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6258;
                DCOMPUTF16._IOwnership _out6259;
                DCOMPUTF16.COMP.FromOwnership(r, _11485_recOwned, expectedOwnership, out _out6258, out _out6259);
                r = _out6258;
                resultingOwnership = _out6259;
                readIdents = _11486_recIdents;
              }
            } else if (_source418.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _11487___mcc_h1112 = _source418.dtor_Passthrough_a0;
              {
                RAST._IType _11488_fromTpeGen;
                RAST._IType _out6260;
                _out6260 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11488_fromTpeGen = _out6260;
                RAST._IType _11489_toTpeGen;
                RAST._IType _out6261;
                _out6261 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11489_toTpeGen = _out6261;
                RAST._IExpr _11490_recursiveGen;
                DCOMPUTF16._IOwnership _11491_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11492_recIdents;
                RAST._IExpr _out6262;
                DCOMPUTF16._IOwnership _out6263;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6264;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6262, out _out6263, out _out6264);
                _11490_recursiveGen = _out6262;
                _11491_recOwned = _out6263;
                _11492_recIdents = _out6264;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11490_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11488_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11489_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6265;
                DCOMPUTF16._IOwnership _out6266;
                DCOMPUTF16.COMP.FromOwnership(r, _11491_recOwned, expectedOwnership, out _out6265, out _out6266);
                r = _out6265;
                resultingOwnership = _out6266;
                readIdents = _11492_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _11493___mcc_h1114 = _source418.dtor_TypeArg_a0;
              {
                RAST._IType _11494_fromTpeGen;
                RAST._IType _out6267;
                _out6267 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11494_fromTpeGen = _out6267;
                RAST._IType _11495_toTpeGen;
                RAST._IType _out6268;
                _out6268 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11495_toTpeGen = _out6268;
                RAST._IExpr _11496_recursiveGen;
                DCOMPUTF16._IOwnership _11497_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11498_recIdents;
                RAST._IExpr _out6269;
                DCOMPUTF16._IOwnership _out6270;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6271;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6269, out _out6270, out _out6271);
                _11496_recursiveGen = _out6269;
                _11497_recOwned = _out6270;
                _11498_recIdents = _out6271;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11496_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11494_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11495_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6272;
                DCOMPUTF16._IOwnership _out6273;
                DCOMPUTF16.COMP.FromOwnership(r, _11497_recOwned, expectedOwnership, out _out6272, out _out6273);
                r = _out6272;
                resultingOwnership = _out6273;
                readIdents = _11498_recIdents;
              }
            }
          } else if (_source405.is_Bool) {
            DAST._IType _source423 = _8728___mcc_h1;
            if (_source423.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11499___mcc_h1116 = _source423.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _11500___mcc_h1117 = _source423.dtor_typeArgs;
              DAST._IResolvedType _11501___mcc_h1118 = _source423.dtor_resolved;
              DAST._IResolvedType _source424 = _11501___mcc_h1118;
              if (_source424.is_AllocatedDatatype) {
                DAST._IDatatypeType _11502___mcc_h1122 = _source424.dtor_datatypeType;
                {
                  RAST._IType _11503_fromTpeGen;
                  RAST._IType _out6274;
                  _out6274 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11503_fromTpeGen = _out6274;
                  RAST._IType _11504_toTpeGen;
                  RAST._IType _out6275;
                  _out6275 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11504_toTpeGen = _out6275;
                  RAST._IExpr _11505_recursiveGen;
                  DCOMPUTF16._IOwnership _11506_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11507_recIdents;
                  RAST._IExpr _out6276;
                  DCOMPUTF16._IOwnership _out6277;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6278;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6276, out _out6277, out _out6278);
                  _11505_recursiveGen = _out6276;
                  _11506_recOwned = _out6277;
                  _11507_recIdents = _out6278;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11505_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11503_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11504_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6279;
                  DCOMPUTF16._IOwnership _out6280;
                  DCOMPUTF16.COMP.FromOwnership(r, _11506_recOwned, expectedOwnership, out _out6279, out _out6280);
                  r = _out6279;
                  resultingOwnership = _out6280;
                  readIdents = _11507_recIdents;
                }
              } else if (_source424.is_Datatype) {
                DAST._IDatatypeType _11508___mcc_h1124 = _source424.dtor_datatypeType;
                {
                  RAST._IType _11509_fromTpeGen;
                  RAST._IType _out6281;
                  _out6281 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11509_fromTpeGen = _out6281;
                  RAST._IType _11510_toTpeGen;
                  RAST._IType _out6282;
                  _out6282 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11510_toTpeGen = _out6282;
                  RAST._IExpr _11511_recursiveGen;
                  DCOMPUTF16._IOwnership _11512_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11513_recIdents;
                  RAST._IExpr _out6283;
                  DCOMPUTF16._IOwnership _out6284;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6285;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6283, out _out6284, out _out6285);
                  _11511_recursiveGen = _out6283;
                  _11512_recOwned = _out6284;
                  _11513_recIdents = _out6285;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11511_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11509_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11510_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6286;
                  DCOMPUTF16._IOwnership _out6287;
                  DCOMPUTF16.COMP.FromOwnership(r, _11512_recOwned, expectedOwnership, out _out6286, out _out6287);
                  r = _out6286;
                  resultingOwnership = _out6287;
                  readIdents = _11513_recIdents;
                }
              } else if (_source424.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11514___mcc_h1126 = _source424.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _11515___mcc_h1127 = _source424.dtor_attributes;
                {
                  RAST._IType _11516_fromTpeGen;
                  RAST._IType _out6288;
                  _out6288 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11516_fromTpeGen = _out6288;
                  RAST._IType _11517_toTpeGen;
                  RAST._IType _out6289;
                  _out6289 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11517_toTpeGen = _out6289;
                  RAST._IExpr _11518_recursiveGen;
                  DCOMPUTF16._IOwnership _11519_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11520_recIdents;
                  RAST._IExpr _out6290;
                  DCOMPUTF16._IOwnership _out6291;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6292;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6290, out _out6291, out _out6292);
                  _11518_recursiveGen = _out6290;
                  _11519_recOwned = _out6291;
                  _11520_recIdents = _out6292;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11518_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11516_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11517_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6293;
                  DCOMPUTF16._IOwnership _out6294;
                  DCOMPUTF16.COMP.FromOwnership(r, _11519_recOwned, expectedOwnership, out _out6293, out _out6294);
                  r = _out6293;
                  resultingOwnership = _out6294;
                  readIdents = _11520_recIdents;
                }
              } else {
                DAST._IType _11521___mcc_h1130 = _source424.dtor_baseType;
                DAST._INewtypeRange _11522___mcc_h1131 = _source424.dtor_range;
                bool _11523___mcc_h1132 = _source424.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _11524___mcc_h1133 = _source424.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _11525_attributes = _11524___mcc_h1133;
                bool _11526_erase = _11523___mcc_h1132;
                DAST._INewtypeRange _11527_range = _11522___mcc_h1131;
                DAST._IType _11528_b = _11521___mcc_h1130;
                {
                  Std.Wrappers._IOption<RAST._IType> _11529_nativeToType;
                  _11529_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11528_b, _11527_range);
                  if (object.Equals(_8722_fromTpe, _11528_b)) {
                    RAST._IExpr _11530_recursiveGen;
                    DCOMPUTF16._IOwnership _11531_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11532_recIdents;
                    RAST._IExpr _out6295;
                    DCOMPUTF16._IOwnership _out6296;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6297;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6295, out _out6296, out _out6297);
                    _11530_recursiveGen = _out6295;
                    _11531_recOwned = _out6296;
                    _11532_recIdents = _out6297;
                    readIdents = _11532_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source425 = _11529_nativeToType;
                    if (_source425.is_None) {
                      if (_11526_erase) {
                        r = _11530_recursiveGen;
                      } else {
                        RAST._IType _11533_rhsType;
                        RAST._IType _out6298;
                        _out6298 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _11533_rhsType = _out6298;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11533_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11530_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6299;
                      DCOMPUTF16._IOwnership _out6300;
                      DCOMPUTF16.COMP.FromOwnership(r, _11531_recOwned, expectedOwnership, out _out6299, out _out6300);
                      r = _out6299;
                      resultingOwnership = _out6300;
                    } else {
                      RAST._IType _11534___mcc_h2275 = _source425.dtor_value;
                      RAST._IType _11535_v = _11534___mcc_h2275;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11530_recursiveGen, RAST.Expr.create_ExprFromType(_11535_v)));
                      RAST._IExpr _out6301;
                      DCOMPUTF16._IOwnership _out6302;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6301, out _out6302);
                      r = _out6301;
                      resultingOwnership = _out6302;
                    }
                  } else {
                    if ((_11529_nativeToType).is_Some) {
                      DAST._IType _source426 = _8722_fromTpe;
                      if (_source426.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11536___mcc_h2276 = _source426.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11537___mcc_h2277 = _source426.dtor_typeArgs;
                        DAST._IResolvedType _11538___mcc_h2278 = _source426.dtor_resolved;
                        DAST._IResolvedType _source427 = _11538___mcc_h2278;
                        if (_source427.is_AllocatedDatatype) {
                          DAST._IDatatypeType _11539___mcc_h2282 = _source427.dtor_datatypeType;
                        } else if (_source427.is_Datatype) {
                          DAST._IDatatypeType _11540___mcc_h2284 = _source427.dtor_datatypeType;
                        } else if (_source427.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11541___mcc_h2286 = _source427.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11542___mcc_h2287 = _source427.dtor_attributes;
                        } else {
                          DAST._IType _11543___mcc_h2290 = _source427.dtor_baseType;
                          DAST._INewtypeRange _11544___mcc_h2291 = _source427.dtor_range;
                          bool _11545___mcc_h2292 = _source427.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11546___mcc_h2293 = _source427.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11547_attributes0 = _11546___mcc_h2293;
                          bool _11548_erase0 = _11545___mcc_h2292;
                          DAST._INewtypeRange _11549_range0 = _11544___mcc_h2291;
                          DAST._IType _11550_b0 = _11543___mcc_h2290;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11551_nativeFromType;
                            _11551_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11550_b0, _11549_range0);
                            if ((_11551_nativeFromType).is_Some) {
                              RAST._IExpr _11552_recursiveGen;
                              DCOMPUTF16._IOwnership _11553_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11554_recIdents;
                              RAST._IExpr _out6303;
                              DCOMPUTF16._IOwnership _out6304;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6305;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6303, out _out6304, out _out6305);
                              _11552_recursiveGen = _out6303;
                              _11553_recOwned = _out6304;
                              _11554_recIdents = _out6305;
                              RAST._IExpr _out6306;
                              DCOMPUTF16._IOwnership _out6307;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11552_recursiveGen, (_11529_nativeToType).dtor_value), _11553_recOwned, expectedOwnership, out _out6306, out _out6307);
                              r = _out6306;
                              resultingOwnership = _out6307;
                              readIdents = _11554_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source426.is_Nullable) {
                        DAST._IType _11555___mcc_h2298 = _source426.dtor_Nullable_a0;
                      } else if (_source426.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11556___mcc_h2300 = _source426.dtor_Tuple_a0;
                      } else if (_source426.is_Array) {
                        DAST._IType _11557___mcc_h2302 = _source426.dtor_element;
                        BigInteger _11558___mcc_h2303 = _source426.dtor_dims;
                      } else if (_source426.is_Seq) {
                        DAST._IType _11559___mcc_h2306 = _source426.dtor_element;
                      } else if (_source426.is_Set) {
                        DAST._IType _11560___mcc_h2308 = _source426.dtor_element;
                      } else if (_source426.is_Multiset) {
                        DAST._IType _11561___mcc_h2310 = _source426.dtor_element;
                      } else if (_source426.is_Map) {
                        DAST._IType _11562___mcc_h2312 = _source426.dtor_key;
                        DAST._IType _11563___mcc_h2313 = _source426.dtor_value;
                      } else if (_source426.is_SetBuilder) {
                        DAST._IType _11564___mcc_h2316 = _source426.dtor_element;
                      } else if (_source426.is_MapBuilder) {
                        DAST._IType _11565___mcc_h2318 = _source426.dtor_key;
                        DAST._IType _11566___mcc_h2319 = _source426.dtor_value;
                      } else if (_source426.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11567___mcc_h2322 = _source426.dtor_args;
                        DAST._IType _11568___mcc_h2323 = _source426.dtor_result;
                      } else if (_source426.is_Primitive) {
                        DAST._IPrimitive _11569___mcc_h2326 = _source426.dtor_Primitive_a0;
                      } else if (_source426.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11570___mcc_h2328 = _source426.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11571___mcc_h2330 = _source426.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11572_recursiveGen;
                        DCOMPUTF16._IOwnership _11573_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11574_recIdents;
                        RAST._IExpr _out6308;
                        DCOMPUTF16._IOwnership _out6309;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6310;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6308, out _out6309, out _out6310);
                        _11572_recursiveGen = _out6308;
                        _11573_recOwned = _out6309;
                        _11574_recIdents = _out6310;
                        RAST._IExpr _out6311;
                        DCOMPUTF16._IOwnership _out6312;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11572_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11529_nativeToType).dtor_value), _11573_recOwned, expectedOwnership, out _out6311, out _out6312);
                        r = _out6311;
                        resultingOwnership = _out6312;
                        readIdents = _11574_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6313;
                    DCOMPUTF16._IOwnership _out6314;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6315;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _11528_b), _11528_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out6313, out _out6314, out _out6315);
                    r = _out6313;
                    resultingOwnership = _out6314;
                    readIdents = _out6315;
                  }
                }
              }
            } else if (_source423.is_Nullable) {
              DAST._IType _11575___mcc_h1138 = _source423.dtor_Nullable_a0;
              {
                RAST._IExpr _11576_recursiveGen;
                DCOMPUTF16._IOwnership _11577_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11578_recIdents;
                RAST._IExpr _out6316;
                DCOMPUTF16._IOwnership _out6317;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6318;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6316, out _out6317, out _out6318);
                _11576_recursiveGen = _out6316;
                _11577_recOwned = _out6317;
                _11578_recIdents = _out6318;
                r = _11576_recursiveGen;
                if (object.Equals(_11577_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6319;
                DCOMPUTF16._IOwnership _out6320;
                DCOMPUTF16.COMP.FromOwnership(r, _11577_recOwned, expectedOwnership, out _out6319, out _out6320);
                r = _out6319;
                resultingOwnership = _out6320;
                readIdents = _11578_recIdents;
              }
            } else if (_source423.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11579___mcc_h1140 = _source423.dtor_Tuple_a0;
              {
                RAST._IType _11580_fromTpeGen;
                RAST._IType _out6321;
                _out6321 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11580_fromTpeGen = _out6321;
                RAST._IType _11581_toTpeGen;
                RAST._IType _out6322;
                _out6322 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11581_toTpeGen = _out6322;
                RAST._IExpr _11582_recursiveGen;
                DCOMPUTF16._IOwnership _11583_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11584_recIdents;
                RAST._IExpr _out6323;
                DCOMPUTF16._IOwnership _out6324;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6325;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6323, out _out6324, out _out6325);
                _11582_recursiveGen = _out6323;
                _11583_recOwned = _out6324;
                _11584_recIdents = _out6325;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11582_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11580_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11581_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6326;
                DCOMPUTF16._IOwnership _out6327;
                DCOMPUTF16.COMP.FromOwnership(r, _11583_recOwned, expectedOwnership, out _out6326, out _out6327);
                r = _out6326;
                resultingOwnership = _out6327;
                readIdents = _11584_recIdents;
              }
            } else if (_source423.is_Array) {
              DAST._IType _11585___mcc_h1142 = _source423.dtor_element;
              BigInteger _11586___mcc_h1143 = _source423.dtor_dims;
              {
                RAST._IType _11587_fromTpeGen;
                RAST._IType _out6328;
                _out6328 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11587_fromTpeGen = _out6328;
                RAST._IType _11588_toTpeGen;
                RAST._IType _out6329;
                _out6329 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11588_toTpeGen = _out6329;
                RAST._IExpr _11589_recursiveGen;
                DCOMPUTF16._IOwnership _11590_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11591_recIdents;
                RAST._IExpr _out6330;
                DCOMPUTF16._IOwnership _out6331;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6332;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6330, out _out6331, out _out6332);
                _11589_recursiveGen = _out6330;
                _11590_recOwned = _out6331;
                _11591_recIdents = _out6332;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11589_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11587_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11588_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6333;
                DCOMPUTF16._IOwnership _out6334;
                DCOMPUTF16.COMP.FromOwnership(r, _11590_recOwned, expectedOwnership, out _out6333, out _out6334);
                r = _out6333;
                resultingOwnership = _out6334;
                readIdents = _11591_recIdents;
              }
            } else if (_source423.is_Seq) {
              DAST._IType _11592___mcc_h1146 = _source423.dtor_element;
              {
                RAST._IType _11593_fromTpeGen;
                RAST._IType _out6335;
                _out6335 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11593_fromTpeGen = _out6335;
                RAST._IType _11594_toTpeGen;
                RAST._IType _out6336;
                _out6336 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11594_toTpeGen = _out6336;
                RAST._IExpr _11595_recursiveGen;
                DCOMPUTF16._IOwnership _11596_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11597_recIdents;
                RAST._IExpr _out6337;
                DCOMPUTF16._IOwnership _out6338;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6339;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6337, out _out6338, out _out6339);
                _11595_recursiveGen = _out6337;
                _11596_recOwned = _out6338;
                _11597_recIdents = _out6339;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11595_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11593_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11594_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6340;
                DCOMPUTF16._IOwnership _out6341;
                DCOMPUTF16.COMP.FromOwnership(r, _11596_recOwned, expectedOwnership, out _out6340, out _out6341);
                r = _out6340;
                resultingOwnership = _out6341;
                readIdents = _11597_recIdents;
              }
            } else if (_source423.is_Set) {
              DAST._IType _11598___mcc_h1148 = _source423.dtor_element;
              {
                RAST._IType _11599_fromTpeGen;
                RAST._IType _out6342;
                _out6342 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11599_fromTpeGen = _out6342;
                RAST._IType _11600_toTpeGen;
                RAST._IType _out6343;
                _out6343 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11600_toTpeGen = _out6343;
                RAST._IExpr _11601_recursiveGen;
                DCOMPUTF16._IOwnership _11602_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11603_recIdents;
                RAST._IExpr _out6344;
                DCOMPUTF16._IOwnership _out6345;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6346;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6344, out _out6345, out _out6346);
                _11601_recursiveGen = _out6344;
                _11602_recOwned = _out6345;
                _11603_recIdents = _out6346;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11601_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11599_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11600_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6347;
                DCOMPUTF16._IOwnership _out6348;
                DCOMPUTF16.COMP.FromOwnership(r, _11602_recOwned, expectedOwnership, out _out6347, out _out6348);
                r = _out6347;
                resultingOwnership = _out6348;
                readIdents = _11603_recIdents;
              }
            } else if (_source423.is_Multiset) {
              DAST._IType _11604___mcc_h1150 = _source423.dtor_element;
              {
                RAST._IType _11605_fromTpeGen;
                RAST._IType _out6349;
                _out6349 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11605_fromTpeGen = _out6349;
                RAST._IType _11606_toTpeGen;
                RAST._IType _out6350;
                _out6350 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11606_toTpeGen = _out6350;
                RAST._IExpr _11607_recursiveGen;
                DCOMPUTF16._IOwnership _11608_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11609_recIdents;
                RAST._IExpr _out6351;
                DCOMPUTF16._IOwnership _out6352;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6353;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6351, out _out6352, out _out6353);
                _11607_recursiveGen = _out6351;
                _11608_recOwned = _out6352;
                _11609_recIdents = _out6353;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11607_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11605_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11606_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6354;
                DCOMPUTF16._IOwnership _out6355;
                DCOMPUTF16.COMP.FromOwnership(r, _11608_recOwned, expectedOwnership, out _out6354, out _out6355);
                r = _out6354;
                resultingOwnership = _out6355;
                readIdents = _11609_recIdents;
              }
            } else if (_source423.is_Map) {
              DAST._IType _11610___mcc_h1152 = _source423.dtor_key;
              DAST._IType _11611___mcc_h1153 = _source423.dtor_value;
              {
                RAST._IType _11612_fromTpeGen;
                RAST._IType _out6356;
                _out6356 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11612_fromTpeGen = _out6356;
                RAST._IType _11613_toTpeGen;
                RAST._IType _out6357;
                _out6357 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11613_toTpeGen = _out6357;
                RAST._IExpr _11614_recursiveGen;
                DCOMPUTF16._IOwnership _11615_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11616_recIdents;
                RAST._IExpr _out6358;
                DCOMPUTF16._IOwnership _out6359;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6360;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6358, out _out6359, out _out6360);
                _11614_recursiveGen = _out6358;
                _11615_recOwned = _out6359;
                _11616_recIdents = _out6360;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11614_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11612_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11613_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6361;
                DCOMPUTF16._IOwnership _out6362;
                DCOMPUTF16.COMP.FromOwnership(r, _11615_recOwned, expectedOwnership, out _out6361, out _out6362);
                r = _out6361;
                resultingOwnership = _out6362;
                readIdents = _11616_recIdents;
              }
            } else if (_source423.is_SetBuilder) {
              DAST._IType _11617___mcc_h1156 = _source423.dtor_element;
              {
                RAST._IType _11618_fromTpeGen;
                RAST._IType _out6363;
                _out6363 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11618_fromTpeGen = _out6363;
                RAST._IType _11619_toTpeGen;
                RAST._IType _out6364;
                _out6364 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11619_toTpeGen = _out6364;
                RAST._IExpr _11620_recursiveGen;
                DCOMPUTF16._IOwnership _11621_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11622_recIdents;
                RAST._IExpr _out6365;
                DCOMPUTF16._IOwnership _out6366;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6367;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6365, out _out6366, out _out6367);
                _11620_recursiveGen = _out6365;
                _11621_recOwned = _out6366;
                _11622_recIdents = _out6367;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11620_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11618_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11619_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6368;
                DCOMPUTF16._IOwnership _out6369;
                DCOMPUTF16.COMP.FromOwnership(r, _11621_recOwned, expectedOwnership, out _out6368, out _out6369);
                r = _out6368;
                resultingOwnership = _out6369;
                readIdents = _11622_recIdents;
              }
            } else if (_source423.is_MapBuilder) {
              DAST._IType _11623___mcc_h1158 = _source423.dtor_key;
              DAST._IType _11624___mcc_h1159 = _source423.dtor_value;
              {
                RAST._IType _11625_fromTpeGen;
                RAST._IType _out6370;
                _out6370 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11625_fromTpeGen = _out6370;
                RAST._IType _11626_toTpeGen;
                RAST._IType _out6371;
                _out6371 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11626_toTpeGen = _out6371;
                RAST._IExpr _11627_recursiveGen;
                DCOMPUTF16._IOwnership _11628_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11629_recIdents;
                RAST._IExpr _out6372;
                DCOMPUTF16._IOwnership _out6373;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6374;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6372, out _out6373, out _out6374);
                _11627_recursiveGen = _out6372;
                _11628_recOwned = _out6373;
                _11629_recIdents = _out6374;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11627_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11625_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11626_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6375;
                DCOMPUTF16._IOwnership _out6376;
                DCOMPUTF16.COMP.FromOwnership(r, _11628_recOwned, expectedOwnership, out _out6375, out _out6376);
                r = _out6375;
                resultingOwnership = _out6376;
                readIdents = _11629_recIdents;
              }
            } else if (_source423.is_Arrow) {
              Dafny.ISequence<DAST._IType> _11630___mcc_h1162 = _source423.dtor_args;
              DAST._IType _11631___mcc_h1163 = _source423.dtor_result;
              {
                RAST._IType _11632_fromTpeGen;
                RAST._IType _out6377;
                _out6377 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11632_fromTpeGen = _out6377;
                RAST._IType _11633_toTpeGen;
                RAST._IType _out6378;
                _out6378 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11633_toTpeGen = _out6378;
                RAST._IExpr _11634_recursiveGen;
                DCOMPUTF16._IOwnership _11635_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11636_recIdents;
                RAST._IExpr _out6379;
                DCOMPUTF16._IOwnership _out6380;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6381;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6379, out _out6380, out _out6381);
                _11634_recursiveGen = _out6379;
                _11635_recOwned = _out6380;
                _11636_recIdents = _out6381;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11634_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11632_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11633_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6382;
                DCOMPUTF16._IOwnership _out6383;
                DCOMPUTF16.COMP.FromOwnership(r, _11635_recOwned, expectedOwnership, out _out6382, out _out6383);
                r = _out6382;
                resultingOwnership = _out6383;
                readIdents = _11636_recIdents;
              }
            } else if (_source423.is_Primitive) {
              DAST._IPrimitive _11637___mcc_h1166 = _source423.dtor_Primitive_a0;
              {
                RAST._IType _11638_fromTpeGen;
                RAST._IType _out6384;
                _out6384 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11638_fromTpeGen = _out6384;
                RAST._IType _11639_toTpeGen;
                RAST._IType _out6385;
                _out6385 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11639_toTpeGen = _out6385;
                RAST._IExpr _11640_recursiveGen;
                DCOMPUTF16._IOwnership _11641_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11642_recIdents;
                RAST._IExpr _out6386;
                DCOMPUTF16._IOwnership _out6387;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6388;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6386, out _out6387, out _out6388);
                _11640_recursiveGen = _out6386;
                _11641_recOwned = _out6387;
                _11642_recIdents = _out6388;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11640_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11638_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11639_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6389;
                DCOMPUTF16._IOwnership _out6390;
                DCOMPUTF16.COMP.FromOwnership(r, _11641_recOwned, expectedOwnership, out _out6389, out _out6390);
                r = _out6389;
                resultingOwnership = _out6390;
                readIdents = _11642_recIdents;
              }
            } else if (_source423.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _11643___mcc_h1168 = _source423.dtor_Passthrough_a0;
              {
                RAST._IType _11644_fromTpeGen;
                RAST._IType _out6391;
                _out6391 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11644_fromTpeGen = _out6391;
                RAST._IType _11645_toTpeGen;
                RAST._IType _out6392;
                _out6392 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11645_toTpeGen = _out6392;
                RAST._IExpr _11646_recursiveGen;
                DCOMPUTF16._IOwnership _11647_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11648_recIdents;
                RAST._IExpr _out6393;
                DCOMPUTF16._IOwnership _out6394;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6395;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6393, out _out6394, out _out6395);
                _11646_recursiveGen = _out6393;
                _11647_recOwned = _out6394;
                _11648_recIdents = _out6395;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11646_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11644_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11645_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6396;
                DCOMPUTF16._IOwnership _out6397;
                DCOMPUTF16.COMP.FromOwnership(r, _11647_recOwned, expectedOwnership, out _out6396, out _out6397);
                r = _out6396;
                resultingOwnership = _out6397;
                readIdents = _11648_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _11649___mcc_h1170 = _source423.dtor_TypeArg_a0;
              {
                RAST._IType _11650_fromTpeGen;
                RAST._IType _out6398;
                _out6398 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11650_fromTpeGen = _out6398;
                RAST._IType _11651_toTpeGen;
                RAST._IType _out6399;
                _out6399 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11651_toTpeGen = _out6399;
                RAST._IExpr _11652_recursiveGen;
                DCOMPUTF16._IOwnership _11653_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11654_recIdents;
                RAST._IExpr _out6400;
                DCOMPUTF16._IOwnership _out6401;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6402;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6400, out _out6401, out _out6402);
                _11652_recursiveGen = _out6400;
                _11653_recOwned = _out6401;
                _11654_recIdents = _out6402;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11652_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11650_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11651_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6403;
                DCOMPUTF16._IOwnership _out6404;
                DCOMPUTF16.COMP.FromOwnership(r, _11653_recOwned, expectedOwnership, out _out6403, out _out6404);
                r = _out6403;
                resultingOwnership = _out6404;
                readIdents = _11654_recIdents;
              }
            }
          } else {
            DAST._IType _source428 = _8728___mcc_h1;
            if (_source428.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11655___mcc_h1172 = _source428.dtor_Path_a0;
              Dafny.ISequence<DAST._IType> _11656___mcc_h1173 = _source428.dtor_typeArgs;
              DAST._IResolvedType _11657___mcc_h1174 = _source428.dtor_resolved;
              DAST._IResolvedType _source429 = _11657___mcc_h1174;
              if (_source429.is_AllocatedDatatype) {
                DAST._IDatatypeType _11658___mcc_h1178 = _source429.dtor_datatypeType;
                {
                  RAST._IType _11659_fromTpeGen;
                  RAST._IType _out6405;
                  _out6405 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11659_fromTpeGen = _out6405;
                  RAST._IType _11660_toTpeGen;
                  RAST._IType _out6406;
                  _out6406 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11660_toTpeGen = _out6406;
                  RAST._IExpr _11661_recursiveGen;
                  DCOMPUTF16._IOwnership _11662_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11663_recIdents;
                  RAST._IExpr _out6407;
                  DCOMPUTF16._IOwnership _out6408;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6409;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6407, out _out6408, out _out6409);
                  _11661_recursiveGen = _out6407;
                  _11662_recOwned = _out6408;
                  _11663_recIdents = _out6409;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11661_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11659_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11660_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6410;
                  DCOMPUTF16._IOwnership _out6411;
                  DCOMPUTF16.COMP.FromOwnership(r, _11662_recOwned, expectedOwnership, out _out6410, out _out6411);
                  r = _out6410;
                  resultingOwnership = _out6411;
                  readIdents = _11663_recIdents;
                }
              } else if (_source429.is_Datatype) {
                DAST._IDatatypeType _11664___mcc_h1180 = _source429.dtor_datatypeType;
                {
                  RAST._IType _11665_fromTpeGen;
                  RAST._IType _out6412;
                  _out6412 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11665_fromTpeGen = _out6412;
                  RAST._IType _11666_toTpeGen;
                  RAST._IType _out6413;
                  _out6413 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11666_toTpeGen = _out6413;
                  RAST._IExpr _11667_recursiveGen;
                  DCOMPUTF16._IOwnership _11668_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11669_recIdents;
                  RAST._IExpr _out6414;
                  DCOMPUTF16._IOwnership _out6415;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6416;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6414, out _out6415, out _out6416);
                  _11667_recursiveGen = _out6414;
                  _11668_recOwned = _out6415;
                  _11669_recIdents = _out6416;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11667_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11665_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11666_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6417;
                  DCOMPUTF16._IOwnership _out6418;
                  DCOMPUTF16.COMP.FromOwnership(r, _11668_recOwned, expectedOwnership, out _out6417, out _out6418);
                  r = _out6417;
                  resultingOwnership = _out6418;
                  readIdents = _11669_recIdents;
                }
              } else if (_source429.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11670___mcc_h1182 = _source429.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _11671___mcc_h1183 = _source429.dtor_attributes;
                {
                  RAST._IType _11672_fromTpeGen;
                  RAST._IType _out6419;
                  _out6419 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11672_fromTpeGen = _out6419;
                  RAST._IType _11673_toTpeGen;
                  RAST._IType _out6420;
                  _out6420 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11673_toTpeGen = _out6420;
                  RAST._IExpr _11674_recursiveGen;
                  DCOMPUTF16._IOwnership _11675_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11676_recIdents;
                  RAST._IExpr _out6421;
                  DCOMPUTF16._IOwnership _out6422;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6423;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6421, out _out6422, out _out6423);
                  _11674_recursiveGen = _out6421;
                  _11675_recOwned = _out6422;
                  _11676_recIdents = _out6423;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11674_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11672_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11673_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6424;
                  DCOMPUTF16._IOwnership _out6425;
                  DCOMPUTF16.COMP.FromOwnership(r, _11675_recOwned, expectedOwnership, out _out6424, out _out6425);
                  r = _out6424;
                  resultingOwnership = _out6425;
                  readIdents = _11676_recIdents;
                }
              } else {
                DAST._IType _11677___mcc_h1186 = _source429.dtor_baseType;
                DAST._INewtypeRange _11678___mcc_h1187 = _source429.dtor_range;
                bool _11679___mcc_h1188 = _source429.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _11680___mcc_h1189 = _source429.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _11681_attributes = _11680___mcc_h1189;
                bool _11682_erase = _11679___mcc_h1188;
                DAST._INewtypeRange _11683_range = _11678___mcc_h1187;
                DAST._IType _11684_b = _11677___mcc_h1186;
                {
                  Std.Wrappers._IOption<RAST._IType> _11685_nativeToType;
                  _11685_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11684_b, _11683_range);
                  if (object.Equals(_8722_fromTpe, _11684_b)) {
                    RAST._IExpr _11686_recursiveGen;
                    DCOMPUTF16._IOwnership _11687_recOwned;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11688_recIdents;
                    RAST._IExpr _out6426;
                    DCOMPUTF16._IOwnership _out6427;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6428;
                    DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6426, out _out6427, out _out6428);
                    _11686_recursiveGen = _out6426;
                    _11687_recOwned = _out6427;
                    _11688_recIdents = _out6428;
                    readIdents = _11688_recIdents;
                    Std.Wrappers._IOption<RAST._IType> _source430 = _11685_nativeToType;
                    if (_source430.is_None) {
                      if (_11682_erase) {
                        r = _11686_recursiveGen;
                      } else {
                        RAST._IType _11689_rhsType;
                        RAST._IType _out6429;
                        _out6429 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                        _11689_rhsType = _out6429;
                        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11689_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11686_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                      }
                      RAST._IExpr _out6430;
                      DCOMPUTF16._IOwnership _out6431;
                      DCOMPUTF16.COMP.FromOwnership(r, _11687_recOwned, expectedOwnership, out _out6430, out _out6431);
                      r = _out6430;
                      resultingOwnership = _out6431;
                    } else {
                      RAST._IType _11690___mcc_h2332 = _source430.dtor_value;
                      RAST._IType _11691_v = _11690___mcc_h2332;
                      r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11686_recursiveGen, RAST.Expr.create_ExprFromType(_11691_v)));
                      RAST._IExpr _out6432;
                      DCOMPUTF16._IOwnership _out6433;
                      DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6432, out _out6433);
                      r = _out6432;
                      resultingOwnership = _out6433;
                    }
                  } else {
                    if ((_11685_nativeToType).is_Some) {
                      DAST._IType _source431 = _8722_fromTpe;
                      if (_source431.is_Path) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11692___mcc_h2333 = _source431.dtor_Path_a0;
                        Dafny.ISequence<DAST._IType> _11693___mcc_h2334 = _source431.dtor_typeArgs;
                        DAST._IResolvedType _11694___mcc_h2335 = _source431.dtor_resolved;
                        DAST._IResolvedType _source432 = _11694___mcc_h2335;
                        if (_source432.is_AllocatedDatatype) {
                          DAST._IDatatypeType _11695___mcc_h2339 = _source432.dtor_datatypeType;
                        } else if (_source432.is_Datatype) {
                          DAST._IDatatypeType _11696___mcc_h2341 = _source432.dtor_datatypeType;
                        } else if (_source432.is_Trait) {
                          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11697___mcc_h2343 = _source432.dtor_path;
                          Dafny.ISequence<DAST._IAttribute> _11698___mcc_h2344 = _source432.dtor_attributes;
                        } else {
                          DAST._IType _11699___mcc_h2347 = _source432.dtor_baseType;
                          DAST._INewtypeRange _11700___mcc_h2348 = _source432.dtor_range;
                          bool _11701___mcc_h2349 = _source432.dtor_erase;
                          Dafny.ISequence<DAST._IAttribute> _11702___mcc_h2350 = _source432.dtor_attributes;
                          Dafny.ISequence<DAST._IAttribute> _11703_attributes0 = _11702___mcc_h2350;
                          bool _11704_erase0 = _11701___mcc_h2349;
                          DAST._INewtypeRange _11705_range0 = _11700___mcc_h2348;
                          DAST._IType _11706_b0 = _11699___mcc_h2347;
                          {
                            Std.Wrappers._IOption<RAST._IType> _11707_nativeFromType;
                            _11707_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11706_b0, _11705_range0);
                            if ((_11707_nativeFromType).is_Some) {
                              RAST._IExpr _11708_recursiveGen;
                              DCOMPUTF16._IOwnership _11709_recOwned;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11710_recIdents;
                              RAST._IExpr _out6434;
                              DCOMPUTF16._IOwnership _out6435;
                              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6436;
                              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6434, out _out6435, out _out6436);
                              _11708_recursiveGen = _out6434;
                              _11709_recOwned = _out6435;
                              _11710_recIdents = _out6436;
                              RAST._IExpr _out6437;
                              DCOMPUTF16._IOwnership _out6438;
                              DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11708_recursiveGen, (_11685_nativeToType).dtor_value), _11709_recOwned, expectedOwnership, out _out6437, out _out6438);
                              r = _out6437;
                              resultingOwnership = _out6438;
                              readIdents = _11710_recIdents;
                              return ;
                            }
                          }
                        }
                      } else if (_source431.is_Nullable) {
                        DAST._IType _11711___mcc_h2355 = _source431.dtor_Nullable_a0;
                      } else if (_source431.is_Tuple) {
                        Dafny.ISequence<DAST._IType> _11712___mcc_h2357 = _source431.dtor_Tuple_a0;
                      } else if (_source431.is_Array) {
                        DAST._IType _11713___mcc_h2359 = _source431.dtor_element;
                        BigInteger _11714___mcc_h2360 = _source431.dtor_dims;
                      } else if (_source431.is_Seq) {
                        DAST._IType _11715___mcc_h2363 = _source431.dtor_element;
                      } else if (_source431.is_Set) {
                        DAST._IType _11716___mcc_h2365 = _source431.dtor_element;
                      } else if (_source431.is_Multiset) {
                        DAST._IType _11717___mcc_h2367 = _source431.dtor_element;
                      } else if (_source431.is_Map) {
                        DAST._IType _11718___mcc_h2369 = _source431.dtor_key;
                        DAST._IType _11719___mcc_h2370 = _source431.dtor_value;
                      } else if (_source431.is_SetBuilder) {
                        DAST._IType _11720___mcc_h2373 = _source431.dtor_element;
                      } else if (_source431.is_MapBuilder) {
                        DAST._IType _11721___mcc_h2375 = _source431.dtor_key;
                        DAST._IType _11722___mcc_h2376 = _source431.dtor_value;
                      } else if (_source431.is_Arrow) {
                        Dafny.ISequence<DAST._IType> _11723___mcc_h2379 = _source431.dtor_args;
                        DAST._IType _11724___mcc_h2380 = _source431.dtor_result;
                      } else if (_source431.is_Primitive) {
                        DAST._IPrimitive _11725___mcc_h2383 = _source431.dtor_Primitive_a0;
                      } else if (_source431.is_Passthrough) {
                        Dafny.ISequence<Dafny.Rune> _11726___mcc_h2385 = _source431.dtor_Passthrough_a0;
                      } else {
                        Dafny.ISequence<Dafny.Rune> _11727___mcc_h2387 = _source431.dtor_TypeArg_a0;
                      }
                      if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                        RAST._IExpr _11728_recursiveGen;
                        DCOMPUTF16._IOwnership _11729_recOwned;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11730_recIdents;
                        RAST._IExpr _out6439;
                        DCOMPUTF16._IOwnership _out6440;
                        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6441;
                        DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6439, out _out6440, out _out6441);
                        _11728_recursiveGen = _out6439;
                        _11729_recOwned = _out6440;
                        _11730_recIdents = _out6441;
                        RAST._IExpr _out6442;
                        DCOMPUTF16._IOwnership _out6443;
                        DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11728_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11685_nativeToType).dtor_value), _11729_recOwned, expectedOwnership, out _out6442, out _out6443);
                        r = _out6442;
                        resultingOwnership = _out6443;
                        readIdents = _11730_recIdents;
                        return ;
                      }
                    }
                    RAST._IExpr _out6444;
                    DCOMPUTF16._IOwnership _out6445;
                    Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6446;
                    DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _11684_b), _11684_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out6444, out _out6445, out _out6446);
                    r = _out6444;
                    resultingOwnership = _out6445;
                    readIdents = _out6446;
                  }
                }
              }
            } else if (_source428.is_Nullable) {
              DAST._IType _11731___mcc_h1194 = _source428.dtor_Nullable_a0;
              {
                RAST._IExpr _11732_recursiveGen;
                DCOMPUTF16._IOwnership _11733_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11734_recIdents;
                RAST._IExpr _out6447;
                DCOMPUTF16._IOwnership _out6448;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6449;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6447, out _out6448, out _out6449);
                _11732_recursiveGen = _out6447;
                _11733_recOwned = _out6448;
                _11734_recIdents = _out6449;
                r = _11732_recursiveGen;
                if (object.Equals(_11733_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                  r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
                }
                r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
                RAST._IExpr _out6450;
                DCOMPUTF16._IOwnership _out6451;
                DCOMPUTF16.COMP.FromOwnership(r, _11733_recOwned, expectedOwnership, out _out6450, out _out6451);
                r = _out6450;
                resultingOwnership = _out6451;
                readIdents = _11734_recIdents;
              }
            } else if (_source428.is_Tuple) {
              Dafny.ISequence<DAST._IType> _11735___mcc_h1196 = _source428.dtor_Tuple_a0;
              {
                RAST._IType _11736_fromTpeGen;
                RAST._IType _out6452;
                _out6452 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11736_fromTpeGen = _out6452;
                RAST._IType _11737_toTpeGen;
                RAST._IType _out6453;
                _out6453 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11737_toTpeGen = _out6453;
                RAST._IExpr _11738_recursiveGen;
                DCOMPUTF16._IOwnership _11739_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11740_recIdents;
                RAST._IExpr _out6454;
                DCOMPUTF16._IOwnership _out6455;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6456;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6454, out _out6455, out _out6456);
                _11738_recursiveGen = _out6454;
                _11739_recOwned = _out6455;
                _11740_recIdents = _out6456;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11738_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11736_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11737_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6457;
                DCOMPUTF16._IOwnership _out6458;
                DCOMPUTF16.COMP.FromOwnership(r, _11739_recOwned, expectedOwnership, out _out6457, out _out6458);
                r = _out6457;
                resultingOwnership = _out6458;
                readIdents = _11740_recIdents;
              }
            } else if (_source428.is_Array) {
              DAST._IType _11741___mcc_h1198 = _source428.dtor_element;
              BigInteger _11742___mcc_h1199 = _source428.dtor_dims;
              {
                RAST._IType _11743_fromTpeGen;
                RAST._IType _out6459;
                _out6459 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11743_fromTpeGen = _out6459;
                RAST._IType _11744_toTpeGen;
                RAST._IType _out6460;
                _out6460 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11744_toTpeGen = _out6460;
                RAST._IExpr _11745_recursiveGen;
                DCOMPUTF16._IOwnership _11746_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11747_recIdents;
                RAST._IExpr _out6461;
                DCOMPUTF16._IOwnership _out6462;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6463;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6461, out _out6462, out _out6463);
                _11745_recursiveGen = _out6461;
                _11746_recOwned = _out6462;
                _11747_recIdents = _out6463;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11745_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11743_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11744_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6464;
                DCOMPUTF16._IOwnership _out6465;
                DCOMPUTF16.COMP.FromOwnership(r, _11746_recOwned, expectedOwnership, out _out6464, out _out6465);
                r = _out6464;
                resultingOwnership = _out6465;
                readIdents = _11747_recIdents;
              }
            } else if (_source428.is_Seq) {
              DAST._IType _11748___mcc_h1202 = _source428.dtor_element;
              {
                RAST._IType _11749_fromTpeGen;
                RAST._IType _out6466;
                _out6466 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11749_fromTpeGen = _out6466;
                RAST._IType _11750_toTpeGen;
                RAST._IType _out6467;
                _out6467 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11750_toTpeGen = _out6467;
                RAST._IExpr _11751_recursiveGen;
                DCOMPUTF16._IOwnership _11752_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11753_recIdents;
                RAST._IExpr _out6468;
                DCOMPUTF16._IOwnership _out6469;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6470;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6468, out _out6469, out _out6470);
                _11751_recursiveGen = _out6468;
                _11752_recOwned = _out6469;
                _11753_recIdents = _out6470;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11751_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11749_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11750_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6471;
                DCOMPUTF16._IOwnership _out6472;
                DCOMPUTF16.COMP.FromOwnership(r, _11752_recOwned, expectedOwnership, out _out6471, out _out6472);
                r = _out6471;
                resultingOwnership = _out6472;
                readIdents = _11753_recIdents;
              }
            } else if (_source428.is_Set) {
              DAST._IType _11754___mcc_h1204 = _source428.dtor_element;
              {
                RAST._IType _11755_fromTpeGen;
                RAST._IType _out6473;
                _out6473 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11755_fromTpeGen = _out6473;
                RAST._IType _11756_toTpeGen;
                RAST._IType _out6474;
                _out6474 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11756_toTpeGen = _out6474;
                RAST._IExpr _11757_recursiveGen;
                DCOMPUTF16._IOwnership _11758_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11759_recIdents;
                RAST._IExpr _out6475;
                DCOMPUTF16._IOwnership _out6476;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6477;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6475, out _out6476, out _out6477);
                _11757_recursiveGen = _out6475;
                _11758_recOwned = _out6476;
                _11759_recIdents = _out6477;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11757_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11755_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11756_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6478;
                DCOMPUTF16._IOwnership _out6479;
                DCOMPUTF16.COMP.FromOwnership(r, _11758_recOwned, expectedOwnership, out _out6478, out _out6479);
                r = _out6478;
                resultingOwnership = _out6479;
                readIdents = _11759_recIdents;
              }
            } else if (_source428.is_Multiset) {
              DAST._IType _11760___mcc_h1206 = _source428.dtor_element;
              {
                RAST._IType _11761_fromTpeGen;
                RAST._IType _out6480;
                _out6480 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11761_fromTpeGen = _out6480;
                RAST._IType _11762_toTpeGen;
                RAST._IType _out6481;
                _out6481 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11762_toTpeGen = _out6481;
                RAST._IExpr _11763_recursiveGen;
                DCOMPUTF16._IOwnership _11764_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11765_recIdents;
                RAST._IExpr _out6482;
                DCOMPUTF16._IOwnership _out6483;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6484;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6482, out _out6483, out _out6484);
                _11763_recursiveGen = _out6482;
                _11764_recOwned = _out6483;
                _11765_recIdents = _out6484;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11763_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11761_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11762_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6485;
                DCOMPUTF16._IOwnership _out6486;
                DCOMPUTF16.COMP.FromOwnership(r, _11764_recOwned, expectedOwnership, out _out6485, out _out6486);
                r = _out6485;
                resultingOwnership = _out6486;
                readIdents = _11765_recIdents;
              }
            } else if (_source428.is_Map) {
              DAST._IType _11766___mcc_h1208 = _source428.dtor_key;
              DAST._IType _11767___mcc_h1209 = _source428.dtor_value;
              {
                RAST._IType _11768_fromTpeGen;
                RAST._IType _out6487;
                _out6487 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11768_fromTpeGen = _out6487;
                RAST._IType _11769_toTpeGen;
                RAST._IType _out6488;
                _out6488 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11769_toTpeGen = _out6488;
                RAST._IExpr _11770_recursiveGen;
                DCOMPUTF16._IOwnership _11771_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11772_recIdents;
                RAST._IExpr _out6489;
                DCOMPUTF16._IOwnership _out6490;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6491;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6489, out _out6490, out _out6491);
                _11770_recursiveGen = _out6489;
                _11771_recOwned = _out6490;
                _11772_recIdents = _out6491;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11770_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11768_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11769_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6492;
                DCOMPUTF16._IOwnership _out6493;
                DCOMPUTF16.COMP.FromOwnership(r, _11771_recOwned, expectedOwnership, out _out6492, out _out6493);
                r = _out6492;
                resultingOwnership = _out6493;
                readIdents = _11772_recIdents;
              }
            } else if (_source428.is_SetBuilder) {
              DAST._IType _11773___mcc_h1212 = _source428.dtor_element;
              {
                RAST._IType _11774_fromTpeGen;
                RAST._IType _out6494;
                _out6494 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11774_fromTpeGen = _out6494;
                RAST._IType _11775_toTpeGen;
                RAST._IType _out6495;
                _out6495 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11775_toTpeGen = _out6495;
                RAST._IExpr _11776_recursiveGen;
                DCOMPUTF16._IOwnership _11777_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11778_recIdents;
                RAST._IExpr _out6496;
                DCOMPUTF16._IOwnership _out6497;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6498;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6496, out _out6497, out _out6498);
                _11776_recursiveGen = _out6496;
                _11777_recOwned = _out6497;
                _11778_recIdents = _out6498;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11776_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11774_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11775_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6499;
                DCOMPUTF16._IOwnership _out6500;
                DCOMPUTF16.COMP.FromOwnership(r, _11777_recOwned, expectedOwnership, out _out6499, out _out6500);
                r = _out6499;
                resultingOwnership = _out6500;
                readIdents = _11778_recIdents;
              }
            } else if (_source428.is_MapBuilder) {
              DAST._IType _11779___mcc_h1214 = _source428.dtor_key;
              DAST._IType _11780___mcc_h1215 = _source428.dtor_value;
              {
                RAST._IType _11781_fromTpeGen;
                RAST._IType _out6501;
                _out6501 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11781_fromTpeGen = _out6501;
                RAST._IType _11782_toTpeGen;
                RAST._IType _out6502;
                _out6502 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11782_toTpeGen = _out6502;
                RAST._IExpr _11783_recursiveGen;
                DCOMPUTF16._IOwnership _11784_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11785_recIdents;
                RAST._IExpr _out6503;
                DCOMPUTF16._IOwnership _out6504;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6505;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6503, out _out6504, out _out6505);
                _11783_recursiveGen = _out6503;
                _11784_recOwned = _out6504;
                _11785_recIdents = _out6505;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11783_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11781_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11782_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6506;
                DCOMPUTF16._IOwnership _out6507;
                DCOMPUTF16.COMP.FromOwnership(r, _11784_recOwned, expectedOwnership, out _out6506, out _out6507);
                r = _out6506;
                resultingOwnership = _out6507;
                readIdents = _11785_recIdents;
              }
            } else if (_source428.is_Arrow) {
              Dafny.ISequence<DAST._IType> _11786___mcc_h1218 = _source428.dtor_args;
              DAST._IType _11787___mcc_h1219 = _source428.dtor_result;
              {
                RAST._IType _11788_fromTpeGen;
                RAST._IType _out6508;
                _out6508 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11788_fromTpeGen = _out6508;
                RAST._IType _11789_toTpeGen;
                RAST._IType _out6509;
                _out6509 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11789_toTpeGen = _out6509;
                RAST._IExpr _11790_recursiveGen;
                DCOMPUTF16._IOwnership _11791_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11792_recIdents;
                RAST._IExpr _out6510;
                DCOMPUTF16._IOwnership _out6511;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6512;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6510, out _out6511, out _out6512);
                _11790_recursiveGen = _out6510;
                _11791_recOwned = _out6511;
                _11792_recIdents = _out6512;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11790_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11788_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11789_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6513;
                DCOMPUTF16._IOwnership _out6514;
                DCOMPUTF16.COMP.FromOwnership(r, _11791_recOwned, expectedOwnership, out _out6513, out _out6514);
                r = _out6513;
                resultingOwnership = _out6514;
                readIdents = _11792_recIdents;
              }
            } else if (_source428.is_Primitive) {
              DAST._IPrimitive _11793___mcc_h1222 = _source428.dtor_Primitive_a0;
              DAST._IPrimitive _source433 = _11793___mcc_h1222;
              if (_source433.is_Int) {
                {
                  RAST._IType _11794_rhsType;
                  RAST._IType _out6515;
                  _out6515 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11794_rhsType = _out6515;
                  RAST._IExpr _11795_recursiveGen;
                  DCOMPUTF16._IOwnership _11796___v100;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11797_recIdents;
                  RAST._IExpr _out6516;
                  DCOMPUTF16._IOwnership _out6517;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6518;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6516, out _out6517, out _out6518);
                  _11795_recursiveGen = _out6516;
                  _11796___v100 = _out6517;
                  _11797_recIdents = _out6518;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_11795_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as u32)}")));
                  RAST._IExpr _out6519;
                  DCOMPUTF16._IOwnership _out6520;
                  DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6519, out _out6520);
                  r = _out6519;
                  resultingOwnership = _out6520;
                  readIdents = _11797_recIdents;
                }
              } else if (_source433.is_Real) {
                {
                  RAST._IType _11798_fromTpeGen;
                  RAST._IType _out6521;
                  _out6521 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11798_fromTpeGen = _out6521;
                  RAST._IType _11799_toTpeGen;
                  RAST._IType _out6522;
                  _out6522 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11799_toTpeGen = _out6522;
                  RAST._IExpr _11800_recursiveGen;
                  DCOMPUTF16._IOwnership _11801_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11802_recIdents;
                  RAST._IExpr _out6523;
                  DCOMPUTF16._IOwnership _out6524;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6525;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6523, out _out6524, out _out6525);
                  _11800_recursiveGen = _out6523;
                  _11801_recOwned = _out6524;
                  _11802_recIdents = _out6525;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11800_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11798_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11799_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6526;
                  DCOMPUTF16._IOwnership _out6527;
                  DCOMPUTF16.COMP.FromOwnership(r, _11801_recOwned, expectedOwnership, out _out6526, out _out6527);
                  r = _out6526;
                  resultingOwnership = _out6527;
                  readIdents = _11802_recIdents;
                }
              } else if (_source433.is_String) {
                {
                  RAST._IType _11803_fromTpeGen;
                  RAST._IType _out6528;
                  _out6528 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11803_fromTpeGen = _out6528;
                  RAST._IType _11804_toTpeGen;
                  RAST._IType _out6529;
                  _out6529 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11804_toTpeGen = _out6529;
                  RAST._IExpr _11805_recursiveGen;
                  DCOMPUTF16._IOwnership _11806_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11807_recIdents;
                  RAST._IExpr _out6530;
                  DCOMPUTF16._IOwnership _out6531;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6532;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6530, out _out6531, out _out6532);
                  _11805_recursiveGen = _out6530;
                  _11806_recOwned = _out6531;
                  _11807_recIdents = _out6532;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11805_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11803_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11804_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6533;
                  DCOMPUTF16._IOwnership _out6534;
                  DCOMPUTF16.COMP.FromOwnership(r, _11806_recOwned, expectedOwnership, out _out6533, out _out6534);
                  r = _out6533;
                  resultingOwnership = _out6534;
                  readIdents = _11807_recIdents;
                }
              } else if (_source433.is_Bool) {
                {
                  RAST._IType _11808_fromTpeGen;
                  RAST._IType _out6535;
                  _out6535 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11808_fromTpeGen = _out6535;
                  RAST._IType _11809_toTpeGen;
                  RAST._IType _out6536;
                  _out6536 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11809_toTpeGen = _out6536;
                  RAST._IExpr _11810_recursiveGen;
                  DCOMPUTF16._IOwnership _11811_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11812_recIdents;
                  RAST._IExpr _out6537;
                  DCOMPUTF16._IOwnership _out6538;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6539;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6537, out _out6538, out _out6539);
                  _11810_recursiveGen = _out6537;
                  _11811_recOwned = _out6538;
                  _11812_recIdents = _out6539;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11810_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11808_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11809_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6540;
                  DCOMPUTF16._IOwnership _out6541;
                  DCOMPUTF16.COMP.FromOwnership(r, _11811_recOwned, expectedOwnership, out _out6540, out _out6541);
                  r = _out6540;
                  resultingOwnership = _out6541;
                  readIdents = _11812_recIdents;
                }
              } else {
                {
                  RAST._IType _11813_fromTpeGen;
                  RAST._IType _out6542;
                  _out6542 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                  _11813_fromTpeGen = _out6542;
                  RAST._IType _11814_toTpeGen;
                  RAST._IType _out6543;
                  _out6543 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                  _11814_toTpeGen = _out6543;
                  RAST._IExpr _11815_recursiveGen;
                  DCOMPUTF16._IOwnership _11816_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11817_recIdents;
                  RAST._IExpr _out6544;
                  DCOMPUTF16._IOwnership _out6545;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6546;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6544, out _out6545, out _out6546);
                  _11815_recursiveGen = _out6544;
                  _11816_recOwned = _out6545;
                  _11817_recIdents = _out6546;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11815_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11813_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11814_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                  RAST._IExpr _out6547;
                  DCOMPUTF16._IOwnership _out6548;
                  DCOMPUTF16.COMP.FromOwnership(r, _11816_recOwned, expectedOwnership, out _out6547, out _out6548);
                  r = _out6547;
                  resultingOwnership = _out6548;
                  readIdents = _11817_recIdents;
                }
              }
            } else if (_source428.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _11818___mcc_h1224 = _source428.dtor_Passthrough_a0;
              {
                RAST._IType _11819_fromTpeGen;
                RAST._IType _out6549;
                _out6549 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11819_fromTpeGen = _out6549;
                RAST._IType _11820_toTpeGen;
                RAST._IType _out6550;
                _out6550 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11820_toTpeGen = _out6550;
                RAST._IExpr _11821_recursiveGen;
                DCOMPUTF16._IOwnership _11822_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11823_recIdents;
                RAST._IExpr _out6551;
                DCOMPUTF16._IOwnership _out6552;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6553;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6551, out _out6552, out _out6553);
                _11821_recursiveGen = _out6551;
                _11822_recOwned = _out6552;
                _11823_recIdents = _out6553;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11821_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11819_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11820_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6554;
                DCOMPUTF16._IOwnership _out6555;
                DCOMPUTF16.COMP.FromOwnership(r, _11822_recOwned, expectedOwnership, out _out6554, out _out6555);
                r = _out6554;
                resultingOwnership = _out6555;
                readIdents = _11823_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _11824___mcc_h1226 = _source428.dtor_TypeArg_a0;
              {
                RAST._IType _11825_fromTpeGen;
                RAST._IType _out6556;
                _out6556 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11825_fromTpeGen = _out6556;
                RAST._IType _11826_toTpeGen;
                RAST._IType _out6557;
                _out6557 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11826_toTpeGen = _out6557;
                RAST._IExpr _11827_recursiveGen;
                DCOMPUTF16._IOwnership _11828_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11829_recIdents;
                RAST._IExpr _out6558;
                DCOMPUTF16._IOwnership _out6559;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6560;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6558, out _out6559, out _out6560);
                _11827_recursiveGen = _out6558;
                _11828_recOwned = _out6559;
                _11829_recIdents = _out6560;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11827_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11825_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11826_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6561;
                DCOMPUTF16._IOwnership _out6562;
                DCOMPUTF16.COMP.FromOwnership(r, _11828_recOwned, expectedOwnership, out _out6561, out _out6562);
                r = _out6561;
                resultingOwnership = _out6562;
                readIdents = _11829_recIdents;
              }
            }
          }
        } else if (_source321.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _11830___mcc_h1228 = _source321.dtor_Passthrough_a0;
          DAST._IType _source434 = _8728___mcc_h1;
          if (_source434.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11831___mcc_h1232 = _source434.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _11832___mcc_h1233 = _source434.dtor_typeArgs;
            DAST._IResolvedType _11833___mcc_h1234 = _source434.dtor_resolved;
            DAST._IResolvedType _source435 = _11833___mcc_h1234;
            if (_source435.is_AllocatedDatatype) {
              DAST._IDatatypeType _11834___mcc_h1238 = _source435.dtor_datatypeType;
              {
                RAST._IType _11835_fromTpeGen;
                RAST._IType _out6563;
                _out6563 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11835_fromTpeGen = _out6563;
                RAST._IType _11836_toTpeGen;
                RAST._IType _out6564;
                _out6564 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11836_toTpeGen = _out6564;
                RAST._IExpr _11837_recursiveGen;
                DCOMPUTF16._IOwnership _11838_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11839_recIdents;
                RAST._IExpr _out6565;
                DCOMPUTF16._IOwnership _out6566;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6567;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6565, out _out6566, out _out6567);
                _11837_recursiveGen = _out6565;
                _11838_recOwned = _out6566;
                _11839_recIdents = _out6567;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11837_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11835_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11836_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6568;
                DCOMPUTF16._IOwnership _out6569;
                DCOMPUTF16.COMP.FromOwnership(r, _11838_recOwned, expectedOwnership, out _out6568, out _out6569);
                r = _out6568;
                resultingOwnership = _out6569;
                readIdents = _11839_recIdents;
              }
            } else if (_source435.is_Datatype) {
              DAST._IDatatypeType _11840___mcc_h1240 = _source435.dtor_datatypeType;
              {
                RAST._IType _11841_fromTpeGen;
                RAST._IType _out6570;
                _out6570 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11841_fromTpeGen = _out6570;
                RAST._IType _11842_toTpeGen;
                RAST._IType _out6571;
                _out6571 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11842_toTpeGen = _out6571;
                RAST._IExpr _11843_recursiveGen;
                DCOMPUTF16._IOwnership _11844_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11845_recIdents;
                RAST._IExpr _out6572;
                DCOMPUTF16._IOwnership _out6573;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6574;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6572, out _out6573, out _out6574);
                _11843_recursiveGen = _out6572;
                _11844_recOwned = _out6573;
                _11845_recIdents = _out6574;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11843_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11841_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11842_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6575;
                DCOMPUTF16._IOwnership _out6576;
                DCOMPUTF16.COMP.FromOwnership(r, _11844_recOwned, expectedOwnership, out _out6575, out _out6576);
                r = _out6575;
                resultingOwnership = _out6576;
                readIdents = _11845_recIdents;
              }
            } else if (_source435.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11846___mcc_h1242 = _source435.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _11847___mcc_h1243 = _source435.dtor_attributes;
              {
                RAST._IType _11848_fromTpeGen;
                RAST._IType _out6577;
                _out6577 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11848_fromTpeGen = _out6577;
                RAST._IType _11849_toTpeGen;
                RAST._IType _out6578;
                _out6578 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11849_toTpeGen = _out6578;
                RAST._IExpr _11850_recursiveGen;
                DCOMPUTF16._IOwnership _11851_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11852_recIdents;
                RAST._IExpr _out6579;
                DCOMPUTF16._IOwnership _out6580;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6581;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6579, out _out6580, out _out6581);
                _11850_recursiveGen = _out6579;
                _11851_recOwned = _out6580;
                _11852_recIdents = _out6581;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11850_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11848_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11849_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6582;
                DCOMPUTF16._IOwnership _out6583;
                DCOMPUTF16.COMP.FromOwnership(r, _11851_recOwned, expectedOwnership, out _out6582, out _out6583);
                r = _out6582;
                resultingOwnership = _out6583;
                readIdents = _11852_recIdents;
              }
            } else {
              DAST._IType _11853___mcc_h1246 = _source435.dtor_baseType;
              DAST._INewtypeRange _11854___mcc_h1247 = _source435.dtor_range;
              bool _11855___mcc_h1248 = _source435.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _11856___mcc_h1249 = _source435.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _11857_attributes = _11856___mcc_h1249;
              bool _11858_erase = _11855___mcc_h1248;
              DAST._INewtypeRange _11859_range = _11854___mcc_h1247;
              DAST._IType _11860_b = _11853___mcc_h1246;
              {
                Std.Wrappers._IOption<RAST._IType> _11861_nativeToType;
                _11861_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_11860_b, _11859_range);
                if (object.Equals(_8722_fromTpe, _11860_b)) {
                  RAST._IExpr _11862_recursiveGen;
                  DCOMPUTF16._IOwnership _11863_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11864_recIdents;
                  RAST._IExpr _out6584;
                  DCOMPUTF16._IOwnership _out6585;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6586;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6584, out _out6585, out _out6586);
                  _11862_recursiveGen = _out6584;
                  _11863_recOwned = _out6585;
                  _11864_recIdents = _out6586;
                  readIdents = _11864_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source436 = _11861_nativeToType;
                  if (_source436.is_None) {
                    if (_11858_erase) {
                      r = _11862_recursiveGen;
                    } else {
                      RAST._IType _11865_rhsType;
                      RAST._IType _out6587;
                      _out6587 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _11865_rhsType = _out6587;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_11865_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_11862_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6588;
                    DCOMPUTF16._IOwnership _out6589;
                    DCOMPUTF16.COMP.FromOwnership(r, _11863_recOwned, expectedOwnership, out _out6588, out _out6589);
                    r = _out6588;
                    resultingOwnership = _out6589;
                  } else {
                    RAST._IType _11866___mcc_h2389 = _source436.dtor_value;
                    RAST._IType _11867_v = _11866___mcc_h2389;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11862_recursiveGen, RAST.Expr.create_ExprFromType(_11867_v)));
                    RAST._IExpr _out6590;
                    DCOMPUTF16._IOwnership _out6591;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6590, out _out6591);
                    r = _out6590;
                    resultingOwnership = _out6591;
                  }
                } else {
                  if ((_11861_nativeToType).is_Some) {
                    DAST._IType _source437 = _8722_fromTpe;
                    if (_source437.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11868___mcc_h2390 = _source437.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _11869___mcc_h2391 = _source437.dtor_typeArgs;
                      DAST._IResolvedType _11870___mcc_h2392 = _source437.dtor_resolved;
                      DAST._IResolvedType _source438 = _11870___mcc_h2392;
                      if (_source438.is_AllocatedDatatype) {
                        DAST._IDatatypeType _11871___mcc_h2396 = _source438.dtor_datatypeType;
                      } else if (_source438.is_Datatype) {
                        DAST._IDatatypeType _11872___mcc_h2398 = _source438.dtor_datatypeType;
                      } else if (_source438.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11873___mcc_h2400 = _source438.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _11874___mcc_h2401 = _source438.dtor_attributes;
                      } else {
                        DAST._IType _11875___mcc_h2404 = _source438.dtor_baseType;
                        DAST._INewtypeRange _11876___mcc_h2405 = _source438.dtor_range;
                        bool _11877___mcc_h2406 = _source438.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _11878___mcc_h2407 = _source438.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _11879_attributes0 = _11878___mcc_h2407;
                        bool _11880_erase0 = _11877___mcc_h2406;
                        DAST._INewtypeRange _11881_range0 = _11876___mcc_h2405;
                        DAST._IType _11882_b0 = _11875___mcc_h2404;
                        {
                          Std.Wrappers._IOption<RAST._IType> _11883_nativeFromType;
                          _11883_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_11882_b0, _11881_range0);
                          if ((_11883_nativeFromType).is_Some) {
                            RAST._IExpr _11884_recursiveGen;
                            DCOMPUTF16._IOwnership _11885_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11886_recIdents;
                            RAST._IExpr _out6592;
                            DCOMPUTF16._IOwnership _out6593;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6594;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6592, out _out6593, out _out6594);
                            _11884_recursiveGen = _out6592;
                            _11885_recOwned = _out6593;
                            _11886_recIdents = _out6594;
                            RAST._IExpr _out6595;
                            DCOMPUTF16._IOwnership _out6596;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_11884_recursiveGen, (_11861_nativeToType).dtor_value), _11885_recOwned, expectedOwnership, out _out6595, out _out6596);
                            r = _out6595;
                            resultingOwnership = _out6596;
                            readIdents = _11886_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source437.is_Nullable) {
                      DAST._IType _11887___mcc_h2412 = _source437.dtor_Nullable_a0;
                    } else if (_source437.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _11888___mcc_h2414 = _source437.dtor_Tuple_a0;
                    } else if (_source437.is_Array) {
                      DAST._IType _11889___mcc_h2416 = _source437.dtor_element;
                      BigInteger _11890___mcc_h2417 = _source437.dtor_dims;
                    } else if (_source437.is_Seq) {
                      DAST._IType _11891___mcc_h2420 = _source437.dtor_element;
                    } else if (_source437.is_Set) {
                      DAST._IType _11892___mcc_h2422 = _source437.dtor_element;
                    } else if (_source437.is_Multiset) {
                      DAST._IType _11893___mcc_h2424 = _source437.dtor_element;
                    } else if (_source437.is_Map) {
                      DAST._IType _11894___mcc_h2426 = _source437.dtor_key;
                      DAST._IType _11895___mcc_h2427 = _source437.dtor_value;
                    } else if (_source437.is_SetBuilder) {
                      DAST._IType _11896___mcc_h2430 = _source437.dtor_element;
                    } else if (_source437.is_MapBuilder) {
                      DAST._IType _11897___mcc_h2432 = _source437.dtor_key;
                      DAST._IType _11898___mcc_h2433 = _source437.dtor_value;
                    } else if (_source437.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _11899___mcc_h2436 = _source437.dtor_args;
                      DAST._IType _11900___mcc_h2437 = _source437.dtor_result;
                    } else if (_source437.is_Primitive) {
                      DAST._IPrimitive _11901___mcc_h2440 = _source437.dtor_Primitive_a0;
                    } else if (_source437.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _11902___mcc_h2442 = _source437.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _11903___mcc_h2444 = _source437.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _11904_recursiveGen;
                      DCOMPUTF16._IOwnership _11905_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11906_recIdents;
                      RAST._IExpr _out6597;
                      DCOMPUTF16._IOwnership _out6598;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6599;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6597, out _out6598, out _out6599);
                      _11904_recursiveGen = _out6597;
                      _11905_recOwned = _out6598;
                      _11906_recIdents = _out6599;
                      RAST._IExpr _out6600;
                      DCOMPUTF16._IOwnership _out6601;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_11904_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_11861_nativeToType).dtor_value), _11905_recOwned, expectedOwnership, out _out6600, out _out6601);
                      r = _out6600;
                      resultingOwnership = _out6601;
                      readIdents = _11906_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6602;
                  DCOMPUTF16._IOwnership _out6603;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6604;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _11860_b), _11860_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out6602, out _out6603, out _out6604);
                  r = _out6602;
                  resultingOwnership = _out6603;
                  readIdents = _out6604;
                }
              }
            }
          } else if (_source434.is_Nullable) {
            DAST._IType _11907___mcc_h1254 = _source434.dtor_Nullable_a0;
            {
              RAST._IExpr _11908_recursiveGen;
              DCOMPUTF16._IOwnership _11909_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11910_recIdents;
              RAST._IExpr _out6605;
              DCOMPUTF16._IOwnership _out6606;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6607;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6605, out _out6606, out _out6607);
              _11908_recursiveGen = _out6605;
              _11909_recOwned = _out6606;
              _11910_recIdents = _out6607;
              r = _11908_recursiveGen;
              if (object.Equals(_11909_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out6608;
              DCOMPUTF16._IOwnership _out6609;
              DCOMPUTF16.COMP.FromOwnership(r, _11909_recOwned, expectedOwnership, out _out6608, out _out6609);
              r = _out6608;
              resultingOwnership = _out6609;
              readIdents = _11910_recIdents;
            }
          } else if (_source434.is_Tuple) {
            Dafny.ISequence<DAST._IType> _11911___mcc_h1256 = _source434.dtor_Tuple_a0;
            {
              RAST._IType _11912_fromTpeGen;
              RAST._IType _out6610;
              _out6610 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11912_fromTpeGen = _out6610;
              RAST._IType _11913_toTpeGen;
              RAST._IType _out6611;
              _out6611 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11913_toTpeGen = _out6611;
              RAST._IExpr _11914_recursiveGen;
              DCOMPUTF16._IOwnership _11915_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11916_recIdents;
              RAST._IExpr _out6612;
              DCOMPUTF16._IOwnership _out6613;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6614;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6612, out _out6613, out _out6614);
              _11914_recursiveGen = _out6612;
              _11915_recOwned = _out6613;
              _11916_recIdents = _out6614;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11914_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11912_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11913_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6615;
              DCOMPUTF16._IOwnership _out6616;
              DCOMPUTF16.COMP.FromOwnership(r, _11915_recOwned, expectedOwnership, out _out6615, out _out6616);
              r = _out6615;
              resultingOwnership = _out6616;
              readIdents = _11916_recIdents;
            }
          } else if (_source434.is_Array) {
            DAST._IType _11917___mcc_h1258 = _source434.dtor_element;
            BigInteger _11918___mcc_h1259 = _source434.dtor_dims;
            {
              RAST._IType _11919_fromTpeGen;
              RAST._IType _out6617;
              _out6617 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11919_fromTpeGen = _out6617;
              RAST._IType _11920_toTpeGen;
              RAST._IType _out6618;
              _out6618 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11920_toTpeGen = _out6618;
              RAST._IExpr _11921_recursiveGen;
              DCOMPUTF16._IOwnership _11922_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11923_recIdents;
              RAST._IExpr _out6619;
              DCOMPUTF16._IOwnership _out6620;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6621;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6619, out _out6620, out _out6621);
              _11921_recursiveGen = _out6619;
              _11922_recOwned = _out6620;
              _11923_recIdents = _out6621;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11921_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11919_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11920_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6622;
              DCOMPUTF16._IOwnership _out6623;
              DCOMPUTF16.COMP.FromOwnership(r, _11922_recOwned, expectedOwnership, out _out6622, out _out6623);
              r = _out6622;
              resultingOwnership = _out6623;
              readIdents = _11923_recIdents;
            }
          } else if (_source434.is_Seq) {
            DAST._IType _11924___mcc_h1262 = _source434.dtor_element;
            {
              RAST._IType _11925_fromTpeGen;
              RAST._IType _out6624;
              _out6624 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11925_fromTpeGen = _out6624;
              RAST._IType _11926_toTpeGen;
              RAST._IType _out6625;
              _out6625 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11926_toTpeGen = _out6625;
              RAST._IExpr _11927_recursiveGen;
              DCOMPUTF16._IOwnership _11928_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11929_recIdents;
              RAST._IExpr _out6626;
              DCOMPUTF16._IOwnership _out6627;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6628;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6626, out _out6627, out _out6628);
              _11927_recursiveGen = _out6626;
              _11928_recOwned = _out6627;
              _11929_recIdents = _out6628;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11927_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11925_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11926_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6629;
              DCOMPUTF16._IOwnership _out6630;
              DCOMPUTF16.COMP.FromOwnership(r, _11928_recOwned, expectedOwnership, out _out6629, out _out6630);
              r = _out6629;
              resultingOwnership = _out6630;
              readIdents = _11929_recIdents;
            }
          } else if (_source434.is_Set) {
            DAST._IType _11930___mcc_h1264 = _source434.dtor_element;
            {
              RAST._IType _11931_fromTpeGen;
              RAST._IType _out6631;
              _out6631 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11931_fromTpeGen = _out6631;
              RAST._IType _11932_toTpeGen;
              RAST._IType _out6632;
              _out6632 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11932_toTpeGen = _out6632;
              RAST._IExpr _11933_recursiveGen;
              DCOMPUTF16._IOwnership _11934_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11935_recIdents;
              RAST._IExpr _out6633;
              DCOMPUTF16._IOwnership _out6634;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6635;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6633, out _out6634, out _out6635);
              _11933_recursiveGen = _out6633;
              _11934_recOwned = _out6634;
              _11935_recIdents = _out6635;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11933_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11931_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11932_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6636;
              DCOMPUTF16._IOwnership _out6637;
              DCOMPUTF16.COMP.FromOwnership(r, _11934_recOwned, expectedOwnership, out _out6636, out _out6637);
              r = _out6636;
              resultingOwnership = _out6637;
              readIdents = _11935_recIdents;
            }
          } else if (_source434.is_Multiset) {
            DAST._IType _11936___mcc_h1266 = _source434.dtor_element;
            {
              RAST._IType _11937_fromTpeGen;
              RAST._IType _out6638;
              _out6638 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11937_fromTpeGen = _out6638;
              RAST._IType _11938_toTpeGen;
              RAST._IType _out6639;
              _out6639 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11938_toTpeGen = _out6639;
              RAST._IExpr _11939_recursiveGen;
              DCOMPUTF16._IOwnership _11940_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11941_recIdents;
              RAST._IExpr _out6640;
              DCOMPUTF16._IOwnership _out6641;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6642;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6640, out _out6641, out _out6642);
              _11939_recursiveGen = _out6640;
              _11940_recOwned = _out6641;
              _11941_recIdents = _out6642;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11939_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11937_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11938_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6643;
              DCOMPUTF16._IOwnership _out6644;
              DCOMPUTF16.COMP.FromOwnership(r, _11940_recOwned, expectedOwnership, out _out6643, out _out6644);
              r = _out6643;
              resultingOwnership = _out6644;
              readIdents = _11941_recIdents;
            }
          } else if (_source434.is_Map) {
            DAST._IType _11942___mcc_h1268 = _source434.dtor_key;
            DAST._IType _11943___mcc_h1269 = _source434.dtor_value;
            {
              RAST._IType _11944_fromTpeGen;
              RAST._IType _out6645;
              _out6645 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11944_fromTpeGen = _out6645;
              RAST._IType _11945_toTpeGen;
              RAST._IType _out6646;
              _out6646 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11945_toTpeGen = _out6646;
              RAST._IExpr _11946_recursiveGen;
              DCOMPUTF16._IOwnership _11947_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11948_recIdents;
              RAST._IExpr _out6647;
              DCOMPUTF16._IOwnership _out6648;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6649;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6647, out _out6648, out _out6649);
              _11946_recursiveGen = _out6647;
              _11947_recOwned = _out6648;
              _11948_recIdents = _out6649;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11946_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11944_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11945_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6650;
              DCOMPUTF16._IOwnership _out6651;
              DCOMPUTF16.COMP.FromOwnership(r, _11947_recOwned, expectedOwnership, out _out6650, out _out6651);
              r = _out6650;
              resultingOwnership = _out6651;
              readIdents = _11948_recIdents;
            }
          } else if (_source434.is_SetBuilder) {
            DAST._IType _11949___mcc_h1272 = _source434.dtor_element;
            {
              RAST._IType _11950_fromTpeGen;
              RAST._IType _out6652;
              _out6652 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11950_fromTpeGen = _out6652;
              RAST._IType _11951_toTpeGen;
              RAST._IType _out6653;
              _out6653 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11951_toTpeGen = _out6653;
              RAST._IExpr _11952_recursiveGen;
              DCOMPUTF16._IOwnership _11953_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11954_recIdents;
              RAST._IExpr _out6654;
              DCOMPUTF16._IOwnership _out6655;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6656;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6654, out _out6655, out _out6656);
              _11952_recursiveGen = _out6654;
              _11953_recOwned = _out6655;
              _11954_recIdents = _out6656;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11952_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11950_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11951_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6657;
              DCOMPUTF16._IOwnership _out6658;
              DCOMPUTF16.COMP.FromOwnership(r, _11953_recOwned, expectedOwnership, out _out6657, out _out6658);
              r = _out6657;
              resultingOwnership = _out6658;
              readIdents = _11954_recIdents;
            }
          } else if (_source434.is_MapBuilder) {
            DAST._IType _11955___mcc_h1274 = _source434.dtor_key;
            DAST._IType _11956___mcc_h1275 = _source434.dtor_value;
            {
              RAST._IType _11957_fromTpeGen;
              RAST._IType _out6659;
              _out6659 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11957_fromTpeGen = _out6659;
              RAST._IType _11958_toTpeGen;
              RAST._IType _out6660;
              _out6660 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11958_toTpeGen = _out6660;
              RAST._IExpr _11959_recursiveGen;
              DCOMPUTF16._IOwnership _11960_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11961_recIdents;
              RAST._IExpr _out6661;
              DCOMPUTF16._IOwnership _out6662;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6663;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6661, out _out6662, out _out6663);
              _11959_recursiveGen = _out6661;
              _11960_recOwned = _out6662;
              _11961_recIdents = _out6663;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11959_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11957_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11958_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6664;
              DCOMPUTF16._IOwnership _out6665;
              DCOMPUTF16.COMP.FromOwnership(r, _11960_recOwned, expectedOwnership, out _out6664, out _out6665);
              r = _out6664;
              resultingOwnership = _out6665;
              readIdents = _11961_recIdents;
            }
          } else if (_source434.is_Arrow) {
            Dafny.ISequence<DAST._IType> _11962___mcc_h1278 = _source434.dtor_args;
            DAST._IType _11963___mcc_h1279 = _source434.dtor_result;
            {
              RAST._IType _11964_fromTpeGen;
              RAST._IType _out6666;
              _out6666 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _11964_fromTpeGen = _out6666;
              RAST._IType _11965_toTpeGen;
              RAST._IType _out6667;
              _out6667 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11965_toTpeGen = _out6667;
              RAST._IExpr _11966_recursiveGen;
              DCOMPUTF16._IOwnership _11967_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11968_recIdents;
              RAST._IExpr _out6668;
              DCOMPUTF16._IOwnership _out6669;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6670;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6668, out _out6669, out _out6670);
              _11966_recursiveGen = _out6668;
              _11967_recOwned = _out6669;
              _11968_recIdents = _out6670;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11966_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11964_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11965_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6671;
              DCOMPUTF16._IOwnership _out6672;
              DCOMPUTF16.COMP.FromOwnership(r, _11967_recOwned, expectedOwnership, out _out6671, out _out6672);
              r = _out6671;
              resultingOwnership = _out6672;
              readIdents = _11968_recIdents;
            }
          } else if (_source434.is_Primitive) {
            DAST._IPrimitive _11969___mcc_h1282 = _source434.dtor_Primitive_a0;
            DAST._IPrimitive _source439 = _11969___mcc_h1282;
            if (_source439.is_Int) {
              {
                RAST._IType _11970_rhsType;
                RAST._IType _out6673;
                _out6673 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11970_rhsType = _out6673;
                RAST._IExpr _11971_recursiveGen;
                DCOMPUTF16._IOwnership _11972___v98;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11973_recIdents;
                RAST._IExpr _out6674;
                DCOMPUTF16._IOwnership _out6675;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6676;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6674, out _out6675, out _out6676);
                _11971_recursiveGen = _out6674;
                _11972___v98 = _out6675;
                _11973_recIdents = _out6676;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_11971_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out6677;
                DCOMPUTF16._IOwnership _out6678;
                DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6677, out _out6678);
                r = _out6677;
                resultingOwnership = _out6678;
                readIdents = _11973_recIdents;
              }
            } else if (_source439.is_Real) {
              {
                RAST._IType _11974_fromTpeGen;
                RAST._IType _out6679;
                _out6679 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11974_fromTpeGen = _out6679;
                RAST._IType _11975_toTpeGen;
                RAST._IType _out6680;
                _out6680 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11975_toTpeGen = _out6680;
                RAST._IExpr _11976_recursiveGen;
                DCOMPUTF16._IOwnership _11977_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11978_recIdents;
                RAST._IExpr _out6681;
                DCOMPUTF16._IOwnership _out6682;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6683;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6681, out _out6682, out _out6683);
                _11976_recursiveGen = _out6681;
                _11977_recOwned = _out6682;
                _11978_recIdents = _out6683;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11976_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11974_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11975_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6684;
                DCOMPUTF16._IOwnership _out6685;
                DCOMPUTF16.COMP.FromOwnership(r, _11977_recOwned, expectedOwnership, out _out6684, out _out6685);
                r = _out6684;
                resultingOwnership = _out6685;
                readIdents = _11978_recIdents;
              }
            } else if (_source439.is_String) {
              {
                RAST._IType _11979_fromTpeGen;
                RAST._IType _out6686;
                _out6686 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11979_fromTpeGen = _out6686;
                RAST._IType _11980_toTpeGen;
                RAST._IType _out6687;
                _out6687 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11980_toTpeGen = _out6687;
                RAST._IExpr _11981_recursiveGen;
                DCOMPUTF16._IOwnership _11982_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11983_recIdents;
                RAST._IExpr _out6688;
                DCOMPUTF16._IOwnership _out6689;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6690;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6688, out _out6689, out _out6690);
                _11981_recursiveGen = _out6688;
                _11982_recOwned = _out6689;
                _11983_recIdents = _out6690;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11981_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11979_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11980_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6691;
                DCOMPUTF16._IOwnership _out6692;
                DCOMPUTF16.COMP.FromOwnership(r, _11982_recOwned, expectedOwnership, out _out6691, out _out6692);
                r = _out6691;
                resultingOwnership = _out6692;
                readIdents = _11983_recIdents;
              }
            } else if (_source439.is_Bool) {
              {
                RAST._IType _11984_fromTpeGen;
                RAST._IType _out6693;
                _out6693 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11984_fromTpeGen = _out6693;
                RAST._IType _11985_toTpeGen;
                RAST._IType _out6694;
                _out6694 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11985_toTpeGen = _out6694;
                RAST._IExpr _11986_recursiveGen;
                DCOMPUTF16._IOwnership _11987_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11988_recIdents;
                RAST._IExpr _out6695;
                DCOMPUTF16._IOwnership _out6696;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6697;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6695, out _out6696, out _out6697);
                _11986_recursiveGen = _out6695;
                _11987_recOwned = _out6696;
                _11988_recIdents = _out6697;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11986_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11984_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11985_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6698;
                DCOMPUTF16._IOwnership _out6699;
                DCOMPUTF16.COMP.FromOwnership(r, _11987_recOwned, expectedOwnership, out _out6698, out _out6699);
                r = _out6698;
                resultingOwnership = _out6699;
                readIdents = _11988_recIdents;
              }
            } else {
              {
                RAST._IType _11989_fromTpeGen;
                RAST._IType _out6700;
                _out6700 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _11989_fromTpeGen = _out6700;
                RAST._IType _11990_toTpeGen;
                RAST._IType _out6701;
                _out6701 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _11990_toTpeGen = _out6701;
                RAST._IExpr _11991_recursiveGen;
                DCOMPUTF16._IOwnership _11992_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11993_recIdents;
                RAST._IExpr _out6702;
                DCOMPUTF16._IOwnership _out6703;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6704;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6702, out _out6703, out _out6704);
                _11991_recursiveGen = _out6702;
                _11992_recOwned = _out6703;
                _11993_recIdents = _out6704;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_11991_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_11989_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_11990_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6705;
                DCOMPUTF16._IOwnership _out6706;
                DCOMPUTF16.COMP.FromOwnership(r, _11992_recOwned, expectedOwnership, out _out6705, out _out6706);
                r = _out6705;
                resultingOwnership = _out6706;
                readIdents = _11993_recIdents;
              }
            }
          } else if (_source434.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _11994___mcc_h1284 = _source434.dtor_Passthrough_a0;
            {
              RAST._IExpr _11995_recursiveGen;
              DCOMPUTF16._IOwnership _11996___v103;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11997_recIdents;
              RAST._IExpr _out6707;
              DCOMPUTF16._IOwnership _out6708;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6709;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6707, out _out6708, out _out6709);
              _11995_recursiveGen = _out6707;
              _11996___v103 = _out6708;
              _11997_recIdents = _out6709;
              RAST._IType _11998_toTpeGen;
              RAST._IType _out6710;
              _out6710 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _11998_toTpeGen = _out6710;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_11995_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_11998_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out6711;
              DCOMPUTF16._IOwnership _out6712;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6711, out _out6712);
              r = _out6711;
              resultingOwnership = _out6712;
              readIdents = _11997_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _11999___mcc_h1286 = _source434.dtor_TypeArg_a0;
            {
              RAST._IType _12000_fromTpeGen;
              RAST._IType _out6713;
              _out6713 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12000_fromTpeGen = _out6713;
              RAST._IType _12001_toTpeGen;
              RAST._IType _out6714;
              _out6714 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12001_toTpeGen = _out6714;
              RAST._IExpr _12002_recursiveGen;
              DCOMPUTF16._IOwnership _12003_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12004_recIdents;
              RAST._IExpr _out6715;
              DCOMPUTF16._IOwnership _out6716;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6717;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6715, out _out6716, out _out6717);
              _12002_recursiveGen = _out6715;
              _12003_recOwned = _out6716;
              _12004_recIdents = _out6717;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12002_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12000_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12001_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6718;
              DCOMPUTF16._IOwnership _out6719;
              DCOMPUTF16.COMP.FromOwnership(r, _12003_recOwned, expectedOwnership, out _out6718, out _out6719);
              r = _out6718;
              resultingOwnership = _out6719;
              readIdents = _12004_recIdents;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _12005___mcc_h1288 = _source321.dtor_TypeArg_a0;
          DAST._IType _source440 = _8728___mcc_h1;
          if (_source440.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12006___mcc_h1292 = _source440.dtor_Path_a0;
            Dafny.ISequence<DAST._IType> _12007___mcc_h1293 = _source440.dtor_typeArgs;
            DAST._IResolvedType _12008___mcc_h1294 = _source440.dtor_resolved;
            DAST._IResolvedType _source441 = _12008___mcc_h1294;
            if (_source441.is_AllocatedDatatype) {
              DAST._IDatatypeType _12009___mcc_h1298 = _source441.dtor_datatypeType;
              {
                RAST._IType _12010_fromTpeGen;
                RAST._IType _out6720;
                _out6720 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _12010_fromTpeGen = _out6720;
                RAST._IType _12011_toTpeGen;
                RAST._IType _out6721;
                _out6721 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _12011_toTpeGen = _out6721;
                RAST._IExpr _12012_recursiveGen;
                DCOMPUTF16._IOwnership _12013_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12014_recIdents;
                RAST._IExpr _out6722;
                DCOMPUTF16._IOwnership _out6723;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6724;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6722, out _out6723, out _out6724);
                _12012_recursiveGen = _out6722;
                _12013_recOwned = _out6723;
                _12014_recIdents = _out6724;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12012_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12010_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12011_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6725;
                DCOMPUTF16._IOwnership _out6726;
                DCOMPUTF16.COMP.FromOwnership(r, _12013_recOwned, expectedOwnership, out _out6725, out _out6726);
                r = _out6725;
                resultingOwnership = _out6726;
                readIdents = _12014_recIdents;
              }
            } else if (_source441.is_Datatype) {
              DAST._IDatatypeType _12015___mcc_h1300 = _source441.dtor_datatypeType;
              {
                RAST._IType _12016_fromTpeGen;
                RAST._IType _out6727;
                _out6727 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _12016_fromTpeGen = _out6727;
                RAST._IType _12017_toTpeGen;
                RAST._IType _out6728;
                _out6728 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _12017_toTpeGen = _out6728;
                RAST._IExpr _12018_recursiveGen;
                DCOMPUTF16._IOwnership _12019_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12020_recIdents;
                RAST._IExpr _out6729;
                DCOMPUTF16._IOwnership _out6730;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6731;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6729, out _out6730, out _out6731);
                _12018_recursiveGen = _out6729;
                _12019_recOwned = _out6730;
                _12020_recIdents = _out6731;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12018_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12016_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12017_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6732;
                DCOMPUTF16._IOwnership _out6733;
                DCOMPUTF16.COMP.FromOwnership(r, _12019_recOwned, expectedOwnership, out _out6732, out _out6733);
                r = _out6732;
                resultingOwnership = _out6733;
                readIdents = _12020_recIdents;
              }
            } else if (_source441.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12021___mcc_h1302 = _source441.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _12022___mcc_h1303 = _source441.dtor_attributes;
              {
                RAST._IType _12023_fromTpeGen;
                RAST._IType _out6734;
                _out6734 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
                _12023_fromTpeGen = _out6734;
                RAST._IType _12024_toTpeGen;
                RAST._IType _out6735;
                _out6735 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                _12024_toTpeGen = _out6735;
                RAST._IExpr _12025_recursiveGen;
                DCOMPUTF16._IOwnership _12026_recOwned;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12027_recIdents;
                RAST._IExpr _out6736;
                DCOMPUTF16._IOwnership _out6737;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6738;
                DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6736, out _out6737, out _out6738);
                _12025_recursiveGen = _out6736;
                _12026_recOwned = _out6737;
                _12027_recIdents = _out6738;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12025_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12023_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12024_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
                RAST._IExpr _out6739;
                DCOMPUTF16._IOwnership _out6740;
                DCOMPUTF16.COMP.FromOwnership(r, _12026_recOwned, expectedOwnership, out _out6739, out _out6740);
                r = _out6739;
                resultingOwnership = _out6740;
                readIdents = _12027_recIdents;
              }
            } else {
              DAST._IType _12028___mcc_h1306 = _source441.dtor_baseType;
              DAST._INewtypeRange _12029___mcc_h1307 = _source441.dtor_range;
              bool _12030___mcc_h1308 = _source441.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _12031___mcc_h1309 = _source441.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _12032_attributes = _12031___mcc_h1309;
              bool _12033_erase = _12030___mcc_h1308;
              DAST._INewtypeRange _12034_range = _12029___mcc_h1307;
              DAST._IType _12035_b = _12028___mcc_h1306;
              {
                Std.Wrappers._IOption<RAST._IType> _12036_nativeToType;
                _12036_nativeToType = DCOMPUTF16.COMP.NewtypeToRustType(_12035_b, _12034_range);
                if (object.Equals(_8722_fromTpe, _12035_b)) {
                  RAST._IExpr _12037_recursiveGen;
                  DCOMPUTF16._IOwnership _12038_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12039_recIdents;
                  RAST._IExpr _out6741;
                  DCOMPUTF16._IOwnership _out6742;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6743;
                  DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6741, out _out6742, out _out6743);
                  _12037_recursiveGen = _out6741;
                  _12038_recOwned = _out6742;
                  _12039_recIdents = _out6743;
                  readIdents = _12039_recIdents;
                  Std.Wrappers._IOption<RAST._IType> _source442 = _12036_nativeToType;
                  if (_source442.is_None) {
                    if (_12033_erase) {
                      r = _12037_recursiveGen;
                    } else {
                      RAST._IType _12040_rhsType;
                      RAST._IType _out6744;
                      _out6744 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
                      _12040_rhsType = _out6744;
                      r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12040_rhsType)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_12037_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                    }
                    RAST._IExpr _out6745;
                    DCOMPUTF16._IOwnership _out6746;
                    DCOMPUTF16.COMP.FromOwnership(r, _12038_recOwned, expectedOwnership, out _out6745, out _out6746);
                    r = _out6745;
                    resultingOwnership = _out6746;
                  } else {
                    RAST._IType _12041___mcc_h2446 = _source442.dtor_value;
                    RAST._IType _12042_v = _12041___mcc_h2446;
                    r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12037_recursiveGen, RAST.Expr.create_ExprFromType(_12042_v)));
                    RAST._IExpr _out6747;
                    DCOMPUTF16._IOwnership _out6748;
                    DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6747, out _out6748);
                    r = _out6747;
                    resultingOwnership = _out6748;
                  }
                } else {
                  if ((_12036_nativeToType).is_Some) {
                    DAST._IType _source443 = _8722_fromTpe;
                    if (_source443.is_Path) {
                      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12043___mcc_h2447 = _source443.dtor_Path_a0;
                      Dafny.ISequence<DAST._IType> _12044___mcc_h2448 = _source443.dtor_typeArgs;
                      DAST._IResolvedType _12045___mcc_h2449 = _source443.dtor_resolved;
                      DAST._IResolvedType _source444 = _12045___mcc_h2449;
                      if (_source444.is_AllocatedDatatype) {
                        DAST._IDatatypeType _12046___mcc_h2453 = _source444.dtor_datatypeType;
                      } else if (_source444.is_Datatype) {
                        DAST._IDatatypeType _12047___mcc_h2455 = _source444.dtor_datatypeType;
                      } else if (_source444.is_Trait) {
                        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12048___mcc_h2457 = _source444.dtor_path;
                        Dafny.ISequence<DAST._IAttribute> _12049___mcc_h2458 = _source444.dtor_attributes;
                      } else {
                        DAST._IType _12050___mcc_h2461 = _source444.dtor_baseType;
                        DAST._INewtypeRange _12051___mcc_h2462 = _source444.dtor_range;
                        bool _12052___mcc_h2463 = _source444.dtor_erase;
                        Dafny.ISequence<DAST._IAttribute> _12053___mcc_h2464 = _source444.dtor_attributes;
                        Dafny.ISequence<DAST._IAttribute> _12054_attributes0 = _12053___mcc_h2464;
                        bool _12055_erase0 = _12052___mcc_h2463;
                        DAST._INewtypeRange _12056_range0 = _12051___mcc_h2462;
                        DAST._IType _12057_b0 = _12050___mcc_h2461;
                        {
                          Std.Wrappers._IOption<RAST._IType> _12058_nativeFromType;
                          _12058_nativeFromType = DCOMPUTF16.COMP.NewtypeToRustType(_12057_b0, _12056_range0);
                          if ((_12058_nativeFromType).is_Some) {
                            RAST._IExpr _12059_recursiveGen;
                            DCOMPUTF16._IOwnership _12060_recOwned;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12061_recIdents;
                            RAST._IExpr _out6749;
                            DCOMPUTF16._IOwnership _out6750;
                            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6751;
                            DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6749, out _out6750, out _out6751);
                            _12059_recursiveGen = _out6749;
                            _12060_recOwned = _out6750;
                            _12061_recIdents = _out6751;
                            RAST._IExpr _out6752;
                            DCOMPUTF16._IOwnership _out6753;
                            DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_12059_recursiveGen, (_12036_nativeToType).dtor_value), _12060_recOwned, expectedOwnership, out _out6752, out _out6753);
                            r = _out6752;
                            resultingOwnership = _out6753;
                            readIdents = _12061_recIdents;
                            return ;
                          }
                        }
                      }
                    } else if (_source443.is_Nullable) {
                      DAST._IType _12062___mcc_h2469 = _source443.dtor_Nullable_a0;
                    } else if (_source443.is_Tuple) {
                      Dafny.ISequence<DAST._IType> _12063___mcc_h2471 = _source443.dtor_Tuple_a0;
                    } else if (_source443.is_Array) {
                      DAST._IType _12064___mcc_h2473 = _source443.dtor_element;
                      BigInteger _12065___mcc_h2474 = _source443.dtor_dims;
                    } else if (_source443.is_Seq) {
                      DAST._IType _12066___mcc_h2477 = _source443.dtor_element;
                    } else if (_source443.is_Set) {
                      DAST._IType _12067___mcc_h2479 = _source443.dtor_element;
                    } else if (_source443.is_Multiset) {
                      DAST._IType _12068___mcc_h2481 = _source443.dtor_element;
                    } else if (_source443.is_Map) {
                      DAST._IType _12069___mcc_h2483 = _source443.dtor_key;
                      DAST._IType _12070___mcc_h2484 = _source443.dtor_value;
                    } else if (_source443.is_SetBuilder) {
                      DAST._IType _12071___mcc_h2487 = _source443.dtor_element;
                    } else if (_source443.is_MapBuilder) {
                      DAST._IType _12072___mcc_h2489 = _source443.dtor_key;
                      DAST._IType _12073___mcc_h2490 = _source443.dtor_value;
                    } else if (_source443.is_Arrow) {
                      Dafny.ISequence<DAST._IType> _12074___mcc_h2493 = _source443.dtor_args;
                      DAST._IType _12075___mcc_h2494 = _source443.dtor_result;
                    } else if (_source443.is_Primitive) {
                      DAST._IPrimitive _12076___mcc_h2497 = _source443.dtor_Primitive_a0;
                    } else if (_source443.is_Passthrough) {
                      Dafny.ISequence<Dafny.Rune> _12077___mcc_h2499 = _source443.dtor_Passthrough_a0;
                    } else {
                      Dafny.ISequence<Dafny.Rune> _12078___mcc_h2501 = _source443.dtor_TypeArg_a0;
                    }
                    if (object.Equals(_8722_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
                      RAST._IExpr _12079_recursiveGen;
                      DCOMPUTF16._IOwnership _12080_recOwned;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12081_recIdents;
                      RAST._IExpr _out6754;
                      DCOMPUTF16._IOwnership _out6755;
                      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6756;
                      DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6754, out _out6755, out _out6756);
                      _12079_recursiveGen = _out6754;
                      _12080_recOwned = _out6755;
                      _12081_recIdents = _out6756;
                      RAST._IExpr _out6757;
                      DCOMPUTF16._IOwnership _out6758;
                      DCOMPUTF16.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_12079_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_12036_nativeToType).dtor_value), _12080_recOwned, expectedOwnership, out _out6757, out _out6758);
                      r = _out6757;
                      resultingOwnership = _out6758;
                      readIdents = _12081_recIdents;
                      return ;
                    }
                  }
                  RAST._IExpr _out6759;
                  DCOMPUTF16._IOwnership _out6760;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6761;
                  DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_8721_expr, _8722_fromTpe, _12035_b), _12035_b, _8723_toTpe), selfIdent, env, expectedOwnership, out _out6759, out _out6760, out _out6761);
                  r = _out6759;
                  resultingOwnership = _out6760;
                  readIdents = _out6761;
                }
              }
            }
          } else if (_source440.is_Nullable) {
            DAST._IType _12082___mcc_h1314 = _source440.dtor_Nullable_a0;
            {
              RAST._IExpr _12083_recursiveGen;
              DCOMPUTF16._IOwnership _12084_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12085_recIdents;
              RAST._IExpr _out6762;
              DCOMPUTF16._IOwnership _out6763;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6764;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6762, out _out6763, out _out6764);
              _12083_recursiveGen = _out6762;
              _12084_recOwned = _out6763;
              _12085_recIdents = _out6764;
              r = _12083_recursiveGen;
              if (object.Equals(_12084_recOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = RAST.Expr.create_Call(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some")), Dafny.Sequence<RAST._IExpr>.FromElements(r));
              RAST._IExpr _out6765;
              DCOMPUTF16._IOwnership _out6766;
              DCOMPUTF16.COMP.FromOwnership(r, _12084_recOwned, expectedOwnership, out _out6765, out _out6766);
              r = _out6765;
              resultingOwnership = _out6766;
              readIdents = _12085_recIdents;
            }
          } else if (_source440.is_Tuple) {
            Dafny.ISequence<DAST._IType> _12086___mcc_h1316 = _source440.dtor_Tuple_a0;
            {
              RAST._IType _12087_fromTpeGen;
              RAST._IType _out6767;
              _out6767 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12087_fromTpeGen = _out6767;
              RAST._IType _12088_toTpeGen;
              RAST._IType _out6768;
              _out6768 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12088_toTpeGen = _out6768;
              RAST._IExpr _12089_recursiveGen;
              DCOMPUTF16._IOwnership _12090_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12091_recIdents;
              RAST._IExpr _out6769;
              DCOMPUTF16._IOwnership _out6770;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6771;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6769, out _out6770, out _out6771);
              _12089_recursiveGen = _out6769;
              _12090_recOwned = _out6770;
              _12091_recIdents = _out6771;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12089_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12087_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12088_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6772;
              DCOMPUTF16._IOwnership _out6773;
              DCOMPUTF16.COMP.FromOwnership(r, _12090_recOwned, expectedOwnership, out _out6772, out _out6773);
              r = _out6772;
              resultingOwnership = _out6773;
              readIdents = _12091_recIdents;
            }
          } else if (_source440.is_Array) {
            DAST._IType _12092___mcc_h1318 = _source440.dtor_element;
            BigInteger _12093___mcc_h1319 = _source440.dtor_dims;
            {
              RAST._IType _12094_fromTpeGen;
              RAST._IType _out6774;
              _out6774 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12094_fromTpeGen = _out6774;
              RAST._IType _12095_toTpeGen;
              RAST._IType _out6775;
              _out6775 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12095_toTpeGen = _out6775;
              RAST._IExpr _12096_recursiveGen;
              DCOMPUTF16._IOwnership _12097_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12098_recIdents;
              RAST._IExpr _out6776;
              DCOMPUTF16._IOwnership _out6777;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6778;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6776, out _out6777, out _out6778);
              _12096_recursiveGen = _out6776;
              _12097_recOwned = _out6777;
              _12098_recIdents = _out6778;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12096_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12094_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12095_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6779;
              DCOMPUTF16._IOwnership _out6780;
              DCOMPUTF16.COMP.FromOwnership(r, _12097_recOwned, expectedOwnership, out _out6779, out _out6780);
              r = _out6779;
              resultingOwnership = _out6780;
              readIdents = _12098_recIdents;
            }
          } else if (_source440.is_Seq) {
            DAST._IType _12099___mcc_h1322 = _source440.dtor_element;
            {
              RAST._IType _12100_fromTpeGen;
              RAST._IType _out6781;
              _out6781 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12100_fromTpeGen = _out6781;
              RAST._IType _12101_toTpeGen;
              RAST._IType _out6782;
              _out6782 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12101_toTpeGen = _out6782;
              RAST._IExpr _12102_recursiveGen;
              DCOMPUTF16._IOwnership _12103_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12104_recIdents;
              RAST._IExpr _out6783;
              DCOMPUTF16._IOwnership _out6784;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6785;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6783, out _out6784, out _out6785);
              _12102_recursiveGen = _out6783;
              _12103_recOwned = _out6784;
              _12104_recIdents = _out6785;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12102_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12100_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12101_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6786;
              DCOMPUTF16._IOwnership _out6787;
              DCOMPUTF16.COMP.FromOwnership(r, _12103_recOwned, expectedOwnership, out _out6786, out _out6787);
              r = _out6786;
              resultingOwnership = _out6787;
              readIdents = _12104_recIdents;
            }
          } else if (_source440.is_Set) {
            DAST._IType _12105___mcc_h1324 = _source440.dtor_element;
            {
              RAST._IType _12106_fromTpeGen;
              RAST._IType _out6788;
              _out6788 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12106_fromTpeGen = _out6788;
              RAST._IType _12107_toTpeGen;
              RAST._IType _out6789;
              _out6789 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12107_toTpeGen = _out6789;
              RAST._IExpr _12108_recursiveGen;
              DCOMPUTF16._IOwnership _12109_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12110_recIdents;
              RAST._IExpr _out6790;
              DCOMPUTF16._IOwnership _out6791;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6792;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6790, out _out6791, out _out6792);
              _12108_recursiveGen = _out6790;
              _12109_recOwned = _out6791;
              _12110_recIdents = _out6792;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12108_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12106_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12107_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6793;
              DCOMPUTF16._IOwnership _out6794;
              DCOMPUTF16.COMP.FromOwnership(r, _12109_recOwned, expectedOwnership, out _out6793, out _out6794);
              r = _out6793;
              resultingOwnership = _out6794;
              readIdents = _12110_recIdents;
            }
          } else if (_source440.is_Multiset) {
            DAST._IType _12111___mcc_h1326 = _source440.dtor_element;
            {
              RAST._IType _12112_fromTpeGen;
              RAST._IType _out6795;
              _out6795 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12112_fromTpeGen = _out6795;
              RAST._IType _12113_toTpeGen;
              RAST._IType _out6796;
              _out6796 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12113_toTpeGen = _out6796;
              RAST._IExpr _12114_recursiveGen;
              DCOMPUTF16._IOwnership _12115_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12116_recIdents;
              RAST._IExpr _out6797;
              DCOMPUTF16._IOwnership _out6798;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6799;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6797, out _out6798, out _out6799);
              _12114_recursiveGen = _out6797;
              _12115_recOwned = _out6798;
              _12116_recIdents = _out6799;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12114_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12112_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12113_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6800;
              DCOMPUTF16._IOwnership _out6801;
              DCOMPUTF16.COMP.FromOwnership(r, _12115_recOwned, expectedOwnership, out _out6800, out _out6801);
              r = _out6800;
              resultingOwnership = _out6801;
              readIdents = _12116_recIdents;
            }
          } else if (_source440.is_Map) {
            DAST._IType _12117___mcc_h1328 = _source440.dtor_key;
            DAST._IType _12118___mcc_h1329 = _source440.dtor_value;
            {
              RAST._IType _12119_fromTpeGen;
              RAST._IType _out6802;
              _out6802 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12119_fromTpeGen = _out6802;
              RAST._IType _12120_toTpeGen;
              RAST._IType _out6803;
              _out6803 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12120_toTpeGen = _out6803;
              RAST._IExpr _12121_recursiveGen;
              DCOMPUTF16._IOwnership _12122_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12123_recIdents;
              RAST._IExpr _out6804;
              DCOMPUTF16._IOwnership _out6805;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6806;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6804, out _out6805, out _out6806);
              _12121_recursiveGen = _out6804;
              _12122_recOwned = _out6805;
              _12123_recIdents = _out6806;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12121_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12119_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12120_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6807;
              DCOMPUTF16._IOwnership _out6808;
              DCOMPUTF16.COMP.FromOwnership(r, _12122_recOwned, expectedOwnership, out _out6807, out _out6808);
              r = _out6807;
              resultingOwnership = _out6808;
              readIdents = _12123_recIdents;
            }
          } else if (_source440.is_SetBuilder) {
            DAST._IType _12124___mcc_h1332 = _source440.dtor_element;
            {
              RAST._IType _12125_fromTpeGen;
              RAST._IType _out6809;
              _out6809 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12125_fromTpeGen = _out6809;
              RAST._IType _12126_toTpeGen;
              RAST._IType _out6810;
              _out6810 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12126_toTpeGen = _out6810;
              RAST._IExpr _12127_recursiveGen;
              DCOMPUTF16._IOwnership _12128_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12129_recIdents;
              RAST._IExpr _out6811;
              DCOMPUTF16._IOwnership _out6812;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6813;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6811, out _out6812, out _out6813);
              _12127_recursiveGen = _out6811;
              _12128_recOwned = _out6812;
              _12129_recIdents = _out6813;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12127_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12125_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12126_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6814;
              DCOMPUTF16._IOwnership _out6815;
              DCOMPUTF16.COMP.FromOwnership(r, _12128_recOwned, expectedOwnership, out _out6814, out _out6815);
              r = _out6814;
              resultingOwnership = _out6815;
              readIdents = _12129_recIdents;
            }
          } else if (_source440.is_MapBuilder) {
            DAST._IType _12130___mcc_h1334 = _source440.dtor_key;
            DAST._IType _12131___mcc_h1335 = _source440.dtor_value;
            {
              RAST._IType _12132_fromTpeGen;
              RAST._IType _out6816;
              _out6816 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12132_fromTpeGen = _out6816;
              RAST._IType _12133_toTpeGen;
              RAST._IType _out6817;
              _out6817 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12133_toTpeGen = _out6817;
              RAST._IExpr _12134_recursiveGen;
              DCOMPUTF16._IOwnership _12135_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12136_recIdents;
              RAST._IExpr _out6818;
              DCOMPUTF16._IOwnership _out6819;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6820;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6818, out _out6819, out _out6820);
              _12134_recursiveGen = _out6818;
              _12135_recOwned = _out6819;
              _12136_recIdents = _out6820;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12134_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12132_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12133_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6821;
              DCOMPUTF16._IOwnership _out6822;
              DCOMPUTF16.COMP.FromOwnership(r, _12135_recOwned, expectedOwnership, out _out6821, out _out6822);
              r = _out6821;
              resultingOwnership = _out6822;
              readIdents = _12136_recIdents;
            }
          } else if (_source440.is_Arrow) {
            Dafny.ISequence<DAST._IType> _12137___mcc_h1338 = _source440.dtor_args;
            DAST._IType _12138___mcc_h1339 = _source440.dtor_result;
            {
              RAST._IType _12139_fromTpeGen;
              RAST._IType _out6823;
              _out6823 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12139_fromTpeGen = _out6823;
              RAST._IType _12140_toTpeGen;
              RAST._IType _out6824;
              _out6824 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12140_toTpeGen = _out6824;
              RAST._IExpr _12141_recursiveGen;
              DCOMPUTF16._IOwnership _12142_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12143_recIdents;
              RAST._IExpr _out6825;
              DCOMPUTF16._IOwnership _out6826;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6827;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6825, out _out6826, out _out6827);
              _12141_recursiveGen = _out6825;
              _12142_recOwned = _out6826;
              _12143_recIdents = _out6827;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12141_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12139_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12140_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6828;
              DCOMPUTF16._IOwnership _out6829;
              DCOMPUTF16.COMP.FromOwnership(r, _12142_recOwned, expectedOwnership, out _out6828, out _out6829);
              r = _out6828;
              resultingOwnership = _out6829;
              readIdents = _12143_recIdents;
            }
          } else if (_source440.is_Primitive) {
            DAST._IPrimitive _12144___mcc_h1342 = _source440.dtor_Primitive_a0;
            {
              RAST._IType _12145_fromTpeGen;
              RAST._IType _out6830;
              _out6830 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12145_fromTpeGen = _out6830;
              RAST._IType _12146_toTpeGen;
              RAST._IType _out6831;
              _out6831 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12146_toTpeGen = _out6831;
              RAST._IExpr _12147_recursiveGen;
              DCOMPUTF16._IOwnership _12148_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12149_recIdents;
              RAST._IExpr _out6832;
              DCOMPUTF16._IOwnership _out6833;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6834;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6832, out _out6833, out _out6834);
              _12147_recursiveGen = _out6832;
              _12148_recOwned = _out6833;
              _12149_recIdents = _out6834;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12147_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12145_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12146_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6835;
              DCOMPUTF16._IOwnership _out6836;
              DCOMPUTF16.COMP.FromOwnership(r, _12148_recOwned, expectedOwnership, out _out6835, out _out6836);
              r = _out6835;
              resultingOwnership = _out6836;
              readIdents = _12149_recIdents;
            }
          } else if (_source440.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _12150___mcc_h1344 = _source440.dtor_Passthrough_a0;
            {
              RAST._IType _12151_fromTpeGen;
              RAST._IType _out6837;
              _out6837 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12151_fromTpeGen = _out6837;
              RAST._IType _12152_toTpeGen;
              RAST._IType _out6838;
              _out6838 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12152_toTpeGen = _out6838;
              RAST._IExpr _12153_recursiveGen;
              DCOMPUTF16._IOwnership _12154_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12155_recIdents;
              RAST._IExpr _out6839;
              DCOMPUTF16._IOwnership _out6840;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6841;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6839, out _out6840, out _out6841);
              _12153_recursiveGen = _out6839;
              _12154_recOwned = _out6840;
              _12155_recIdents = _out6841;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12153_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12151_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12152_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6842;
              DCOMPUTF16._IOwnership _out6843;
              DCOMPUTF16.COMP.FromOwnership(r, _12154_recOwned, expectedOwnership, out _out6842, out _out6843);
              r = _out6842;
              resultingOwnership = _out6843;
              readIdents = _12155_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _12156___mcc_h1346 = _source440.dtor_TypeArg_a0;
            {
              RAST._IType _12157_fromTpeGen;
              RAST._IType _out6844;
              _out6844 = DCOMPUTF16.COMP.GenType(_8722_fromTpe, true, false);
              _12157_fromTpeGen = _out6844;
              RAST._IType _12158_toTpeGen;
              RAST._IType _out6845;
              _out6845 = DCOMPUTF16.COMP.GenType(_8723_toTpe, true, false);
              _12158_toTpeGen = _out6845;
              RAST._IExpr _12159_recursiveGen;
              DCOMPUTF16._IOwnership _12160_recOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12161_recIdents;
              RAST._IExpr _out6846;
              DCOMPUTF16._IOwnership _out6847;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6848;
              DCOMPUTF16.COMP.GenExpr(_8721_expr, selfIdent, env, expectedOwnership, out _out6846, out _out6847, out _out6848);
              _12159_recursiveGen = _out6846;
              _12160_recOwned = _out6847;
              _12161_recIdents = _out6848;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12159_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from ")), (_12157_fromTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_12158_toTpeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */)")));
              RAST._IExpr _out6849;
              DCOMPUTF16._IOwnership _out6850;
              DCOMPUTF16.COMP.FromOwnership(r, _12160_recOwned, expectedOwnership, out _out6849, out _out6850);
              r = _out6849;
              resultingOwnership = _out6850;
              readIdents = _12161_recIdents;
            }
          }
        }
      }
      return ;
    }
    public static void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMPUTF16._IEnvironment env, DCOMPUTF16._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMPUTF16._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMPUTF16.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source445 = e;
      if (_source445.is_Literal) {
        DAST._ILiteral _12162___mcc_h0 = _source445.dtor_Literal_a0;
        RAST._IExpr _out6851;
        DCOMPUTF16._IOwnership _out6852;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6853;
        DCOMPUTF16.COMP.GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out6851, out _out6852, out _out6853);
        r = _out6851;
        resultingOwnership = _out6852;
        readIdents = _out6853;
      } else if (_source445.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _12163___mcc_h1 = _source445.dtor_Ident_a0;
        Dafny.ISequence<Dafny.Rune> _12164_name = _12163___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _12165_rName;
          _12165_rName = DCOMPUTF16.__default.escapeIdent(_12164_name);
          r = RAST.Expr.create_Identifier(_12165_rName);
          Std.Wrappers._IOption<RAST._IType> _12166_tpe;
          _12166_tpe = (env).GetType(_12165_rName);
          Std.Wrappers._IOption<RAST._IType> _12167_placeboOpt;
          _12167_placeboOpt = (((_12166_tpe).is_Some) ? (((_12166_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
          bool _12168_currentlyBorrowed;
          _12168_currentlyBorrowed = (env).IsBorrowed(_12164_name);
          bool _12169_noNeedOfClone;
          _12169_noNeedOfClone = (env).HasCopySemantics(_12164_name);
          if ((_12167_placeboOpt).is_Some) {
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            _12168_currentlyBorrowed = false;
            _12169_noNeedOfClone = true;
          }
          if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed())) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowedMut())) {
            r = RAST.__default.BorrowMut(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
          } else if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
            if (!(_12169_noNeedOfClone)) {
              r = RAST.__default.Clone(r);
            }
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
          } else if (_12168_currentlyBorrowed) {
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          } else {
            r = RAST.__default.Borrow(r);
            resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12164_name);
          return ;
        }
      } else if (_source445.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12170___mcc_h2 = _source445.dtor_Companion_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12171_path = _12170___mcc_h2;
        {
          RAST._IExpr _out6854;
          _out6854 = DCOMPUTF16.COMP.GenPathExpr(_12171_path);
          r = _out6854;
          RAST._IExpr _out6855;
          DCOMPUTF16._IOwnership _out6856;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6855, out _out6856);
          r = _out6855;
          resultingOwnership = _out6856;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source445.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _12172___mcc_h3 = _source445.dtor_Tuple_a0;
        Dafny.ISequence<DAST._IExpression> _12173_values = _12172___mcc_h3;
        {
          Dafny.ISequence<Dafny.Rune> _12174_s;
          _12174_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(");
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _12175_i;
          _12175_i = BigInteger.Zero;
          while ((_12175_i) < (new BigInteger((_12173_values).Count))) {
            if ((_12175_i).Sign == 1) {
              _12174_s = Dafny.Sequence<Dafny.Rune>.Concat(_12174_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" "));
            }
            RAST._IExpr _12176_recursiveGen;
            DCOMPUTF16._IOwnership _12177___v106;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12178_recIdents;
            RAST._IExpr _out6857;
            DCOMPUTF16._IOwnership _out6858;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6859;
            DCOMPUTF16.COMP.GenExpr((_12173_values).Select(_12175_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6857, out _out6858, out _out6859);
            _12176_recursiveGen = _out6857;
            _12177___v106 = _out6858;
            _12178_recIdents = _out6859;
            _12174_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12174_s, (_12176_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(","));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12178_recIdents);
            _12175_i = (_12175_i) + (BigInteger.One);
          }
          _12174_s = Dafny.Sequence<Dafny.Rune>.Concat(_12174_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          r = RAST.Expr.create_RawExpr(_12174_s);
          RAST._IExpr _out6860;
          DCOMPUTF16._IOwnership _out6861;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6860, out _out6861);
          r = _out6860;
          resultingOwnership = _out6861;
          return ;
        }
      } else if (_source445.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12179___mcc_h4 = _source445.dtor_path;
        Dafny.ISequence<DAST._IType> _12180___mcc_h5 = _source445.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _12181___mcc_h6 = _source445.dtor_args;
        Dafny.ISequence<DAST._IExpression> _12182_args = _12181___mcc_h6;
        Dafny.ISequence<DAST._IType> _12183_typeArgs = _12180___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12184_path = _12179___mcc_h4;
        {
          RAST._IExpr _out6862;
          _out6862 = DCOMPUTF16.COMP.GenPathExpr(_12184_path);
          r = _out6862;
          if ((new BigInteger((_12183_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _12185_typeExprs;
            _12185_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi32 = new BigInteger((_12183_typeArgs).Count);
            for (BigInteger _12186_i = BigInteger.Zero; _12186_i < _hi32; _12186_i++) {
              RAST._IType _12187_typeExpr;
              RAST._IType _out6863;
              _out6863 = DCOMPUTF16.COMP.GenType((_12183_typeArgs).Select(_12186_i), false, false);
              _12187_typeExpr = _out6863;
              _12185_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_12185_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_12187_typeExpr));
            }
            r = (r).ApplyType(_12185_typeExprs);
          }
          r = (r).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocated"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _12188_arguments;
          _12188_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi33 = new BigInteger((_12182_args).Count);
          for (BigInteger _12189_i = BigInteger.Zero; _12189_i < _hi33; _12189_i++) {
            RAST._IExpr _12190_recursiveGen;
            DCOMPUTF16._IOwnership _12191___v107;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12192_recIdents;
            RAST._IExpr _out6864;
            DCOMPUTF16._IOwnership _out6865;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6866;
            DCOMPUTF16.COMP.GenExpr((_12182_args).Select(_12189_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6864, out _out6865, out _out6866);
            _12190_recursiveGen = _out6864;
            _12191___v107 = _out6865;
            _12192_recIdents = _out6866;
            _12188_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_12188_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_12190_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12192_recIdents);
          }
          r = (r).Apply(_12188_arguments);
          RAST._IExpr _out6867;
          DCOMPUTF16._IOwnership _out6868;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6867, out _out6868);
          r = _out6867;
          resultingOwnership = _out6868;
          return ;
        }
      } else if (_source445.is_NewArray) {
        Dafny.ISequence<DAST._IExpression> _12193___mcc_h7 = _source445.dtor_dims;
        DAST._IType _12194___mcc_h8 = _source445.dtor_typ;
        DAST._IType _12195_typ = _12194___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _12196_dims = _12193___mcc_h7;
        {
          BigInteger _12197_i;
          _12197_i = (new BigInteger((_12196_dims).Count)) - (BigInteger.One);
          RAST._IType _12198_genTyp;
          RAST._IType _out6869;
          _out6869 = DCOMPUTF16.COMP.GenType(_12195_typ, false, false);
          _12198_genTyp = _out6869;
          Dafny.ISequence<Dafny.Rune> _12199_s;
          _12199_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_12198_genTyp)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::std::default::Default>::default()"));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          while ((_12197_i).Sign != -1) {
            RAST._IExpr _12200_recursiveGen;
            DCOMPUTF16._IOwnership _12201___v108;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12202_recIdents;
            RAST._IExpr _out6870;
            DCOMPUTF16._IOwnership _out6871;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6872;
            DCOMPUTF16.COMP.GenExpr((_12196_dims).Select(_12197_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6870, out _out6871, out _out6872);
            _12200_recursiveGen = _out6870;
            _12201___v108 = _out6871;
            _12202_recIdents = _out6872;
            _12199_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(::std::cell::RefCell::new(vec!["), _12199_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("; <usize as ::dafny_runtime::NumCast>::from(")), (_12200_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()]))"));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12202_recIdents);
            _12197_i = (_12197_i) - (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(_12199_s);
          RAST._IExpr _out6873;
          DCOMPUTF16._IOwnership _out6874;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6873, out _out6874);
          r = _out6873;
          resultingOwnership = _out6874;
          return ;
        }
      } else if (_source445.is_DatatypeValue) {
        DAST._IDatatypeType _12203___mcc_h9 = _source445.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _12204___mcc_h10 = _source445.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _12205___mcc_h11 = _source445.dtor_variant;
        bool _12206___mcc_h12 = _source445.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _12207___mcc_h13 = _source445.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _12208_values = _12207___mcc_h13;
        bool _12209_isCo = _12206___mcc_h12;
        Dafny.ISequence<Dafny.Rune> _12210_variant = _12205___mcc_h11;
        Dafny.ISequence<DAST._IType> _12211_typeArgs = _12204___mcc_h10;
        DAST._IDatatypeType _12212_datatypeType = _12203___mcc_h9;
        {
          RAST._IExpr _out6875;
          _out6875 = DCOMPUTF16.COMP.GenPathExpr((_12212_datatypeType).dtor_path);
          r = _out6875;
          Dafny.ISequence<RAST._IType> _12213_genTypeArgs;
          _12213_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi34 = new BigInteger((_12211_typeArgs).Count);
          for (BigInteger _12214_i = BigInteger.Zero; _12214_i < _hi34; _12214_i++) {
            RAST._IType _12215_typeExpr;
            RAST._IType _out6876;
            _out6876 = DCOMPUTF16.COMP.GenType((_12211_typeArgs).Select(_12214_i), false, false);
            _12215_typeExpr = _out6876;
            _12213_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_12213_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_12215_typeExpr));
          }
          if ((new BigInteger((_12211_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_12213_genTypeArgs);
          }
          r = (r).MSel(DCOMPUTF16.__default.escapeIdent(_12210_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _12216_assignments;
          _12216_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi35 = new BigInteger((_12208_values).Count);
          for (BigInteger _12217_i = BigInteger.Zero; _12217_i < _hi35; _12217_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs55 = (_12208_values).Select(_12217_i);
            Dafny.ISequence<Dafny.Rune> _12218_name = _let_tmp_rhs55.dtor__0;
            DAST._IExpression _12219_value = _let_tmp_rhs55.dtor__1;
            if (_12209_isCo) {
              RAST._IExpr _12220_recursiveGen;
              DCOMPUTF16._IOwnership _12221___v109;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12222_recIdents;
              RAST._IExpr _out6877;
              DCOMPUTF16._IOwnership _out6878;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6879;
              DCOMPUTF16.COMP.GenExpr(_12219_value, selfIdent, DCOMPUTF16.Environment.Empty(), DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6877, out _out6878, out _out6879);
              _12220_recursiveGen = _out6877;
              _12221___v109 = _out6878;
              _12222_recIdents = _out6879;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12222_recIdents);
              Dafny.ISequence<Dafny.Rune> _12223_allReadCloned;
              _12223_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_12222_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _12224_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_4 in (_12222_recIdents).Elements) {
                  _12224_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_4;
                  if ((_12222_recIdents).Contains(_12224_next)) {
                    goto after__ASSIGN_SUCH_THAT_4;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3035)");
              after__ASSIGN_SUCH_THAT_4: ;
                _12223_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12223_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_12224_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_12224_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _12222_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_12222_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12224_next));
              }
              Dafny.ISequence<Dafny.Rune> _12225_assigned;
              _12225_assigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _12223_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_12220_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _12216_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_12216_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_12218_name), RAST.Expr.create_RawExpr(_12225_assigned))));
            } else {
              RAST._IExpr _12226_recursiveGen;
              DCOMPUTF16._IOwnership _12227___v110;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12228_recIdents;
              RAST._IExpr _out6880;
              DCOMPUTF16._IOwnership _out6881;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6882;
              DCOMPUTF16.COMP.GenExpr(_12219_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6880, out _out6881, out _out6882);
              _12226_recursiveGen = _out6880;
              _12227___v110 = _out6881;
              _12228_recIdents = _out6882;
              _12216_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_12216_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMPUTF16.__default.escapeIdent(_12218_name), _12226_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12228_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _12216_assignments);
          if (DCOMPUTF16.COMP.IsRcWrapped((_12212_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out6883;
          DCOMPUTF16._IOwnership _out6884;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6883, out _out6884);
          r = _out6883;
          resultingOwnership = _out6884;
          return ;
        }
      } else if (_source445.is_Convert) {
        DAST._IExpression _12229___mcc_h14 = _source445.dtor_value;
        DAST._IType _12230___mcc_h15 = _source445.dtor_from;
        DAST._IType _12231___mcc_h16 = _source445.dtor_typ;
        {
          RAST._IExpr _out6885;
          DCOMPUTF16._IOwnership _out6886;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6887;
          DCOMPUTF16.COMP.GenExprConvert(e, selfIdent, env, expectedOwnership, out _out6885, out _out6886, out _out6887);
          r = _out6885;
          resultingOwnership = _out6886;
          readIdents = _out6887;
        }
      } else if (_source445.is_SeqConstruct) {
        DAST._IExpression _12232___mcc_h17 = _source445.dtor_length;
        DAST._IExpression _12233___mcc_h18 = _source445.dtor_elem;
        DAST._IExpression _12234_expr = _12233___mcc_h18;
        DAST._IExpression _12235_length = _12232___mcc_h17;
        {
          RAST._IExpr _12236_recursiveGen;
          DCOMPUTF16._IOwnership _12237___v114;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12238_recIdents;
          RAST._IExpr _out6888;
          DCOMPUTF16._IOwnership _out6889;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6890;
          DCOMPUTF16.COMP.GenExpr(_12234_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6888, out _out6889, out _out6890);
          _12236_recursiveGen = _out6888;
          _12237___v114 = _out6889;
          _12238_recIdents = _out6890;
          RAST._IExpr _12239_lengthGen;
          DCOMPUTF16._IOwnership _12240___v115;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12241_lengthIdents;
          RAST._IExpr _out6891;
          DCOMPUTF16._IOwnership _out6892;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6893;
          DCOMPUTF16.COMP.GenExpr(_12235_length, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6891, out _out6892, out _out6893);
          _12239_lengthGen = _out6891;
          _12240___v115 = _out6892;
          _12241_lengthIdents = _out6893;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_12236_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_12239_lengthGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer.0(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_12238_recIdents, _12241_lengthIdents);
          RAST._IExpr _out6894;
          DCOMPUTF16._IOwnership _out6895;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6894, out _out6895);
          r = _out6894;
          resultingOwnership = _out6895;
          return ;
        }
      } else if (_source445.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _12242___mcc_h19 = _source445.dtor_elements;
        DAST._IType _12243___mcc_h20 = _source445.dtor_typ;
        DAST._IType _12244_typ = _12243___mcc_h20;
        Dafny.ISequence<DAST._IExpression> _12245_exprs = _12242___mcc_h19;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _12246_genTpe;
          RAST._IType _out6896;
          _out6896 = DCOMPUTF16.COMP.GenType(_12244_typ, false, false);
          _12246_genTpe = _out6896;
          BigInteger _12247_i;
          _12247_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _12248_args;
          _12248_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_12247_i) < (new BigInteger((_12245_exprs).Count))) {
            RAST._IExpr _12249_recursiveGen;
            DCOMPUTF16._IOwnership _12250___v116;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12251_recIdents;
            RAST._IExpr _out6897;
            DCOMPUTF16._IOwnership _out6898;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6899;
            DCOMPUTF16.COMP.GenExpr((_12245_exprs).Select(_12247_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6897, out _out6898, out _out6899);
            _12249_recursiveGen = _out6897;
            _12250___v116 = _out6898;
            _12251_recIdents = _out6899;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12251_recIdents);
            _12248_args = Dafny.Sequence<RAST._IExpr>.Concat(_12248_args, Dafny.Sequence<RAST._IExpr>.FromElements(_12249_recursiveGen));
            _12247_i = (_12247_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_12248_args);
          if ((new BigInteger((_12248_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_12246_genTpe));
          }
          RAST._IExpr _out6900;
          DCOMPUTF16._IOwnership _out6901;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6900, out _out6901);
          r = _out6900;
          resultingOwnership = _out6901;
          return ;
        }
      } else if (_source445.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _12252___mcc_h21 = _source445.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _12253_exprs = _12252___mcc_h21;
        {
          Dafny.ISequence<RAST._IExpr> _12254_generatedValues;
          _12254_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _12255_i;
          _12255_i = BigInteger.Zero;
          while ((_12255_i) < (new BigInteger((_12253_exprs).Count))) {
            RAST._IExpr _12256_recursiveGen;
            DCOMPUTF16._IOwnership _12257___v117;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12258_recIdents;
            RAST._IExpr _out6902;
            DCOMPUTF16._IOwnership _out6903;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6904;
            DCOMPUTF16.COMP.GenExpr((_12253_exprs).Select(_12255_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6902, out _out6903, out _out6904);
            _12256_recursiveGen = _out6902;
            _12257___v117 = _out6903;
            _12258_recIdents = _out6904;
            _12254_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_12254_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_12256_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12258_recIdents);
            _12255_i = (_12255_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_12254_generatedValues);
          RAST._IExpr _out6905;
          DCOMPUTF16._IOwnership _out6906;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6905, out _out6906);
          r = _out6905;
          resultingOwnership = _out6906;
          return ;
        }
      } else if (_source445.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _12259___mcc_h22 = _source445.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _12260_exprs = _12259___mcc_h22;
        {
          Dafny.ISequence<RAST._IExpr> _12261_generatedValues;
          _12261_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _12262_i;
          _12262_i = BigInteger.Zero;
          while ((_12262_i) < (new BigInteger((_12260_exprs).Count))) {
            RAST._IExpr _12263_recursiveGen;
            DCOMPUTF16._IOwnership _12264___v118;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12265_recIdents;
            RAST._IExpr _out6907;
            DCOMPUTF16._IOwnership _out6908;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6909;
            DCOMPUTF16.COMP.GenExpr((_12260_exprs).Select(_12262_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6907, out _out6908, out _out6909);
            _12263_recursiveGen = _out6907;
            _12264___v118 = _out6908;
            _12265_recIdents = _out6909;
            _12261_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_12261_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_12263_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12265_recIdents);
            _12262_i = (_12262_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_12261_generatedValues);
          RAST._IExpr _out6910;
          DCOMPUTF16._IOwnership _out6911;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6910, out _out6911);
          r = _out6910;
          resultingOwnership = _out6911;
          return ;
        }
      } else if (_source445.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _12266___mcc_h23 = _source445.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _12267_mapElems = _12266___mcc_h23;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _12268_generatedValues;
          _12268_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _12269_i;
          _12269_i = BigInteger.Zero;
          while ((_12269_i) < (new BigInteger((_12267_mapElems).Count))) {
            RAST._IExpr _12270_recursiveGenKey;
            DCOMPUTF16._IOwnership _12271___v120;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12272_recIdentsKey;
            RAST._IExpr _out6912;
            DCOMPUTF16._IOwnership _out6913;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6914;
            DCOMPUTF16.COMP.GenExpr(((_12267_mapElems).Select(_12269_i)).dtor__0, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6912, out _out6913, out _out6914);
            _12270_recursiveGenKey = _out6912;
            _12271___v120 = _out6913;
            _12272_recIdentsKey = _out6914;
            RAST._IExpr _12273_recursiveGenValue;
            DCOMPUTF16._IOwnership _12274___v121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12275_recIdentsValue;
            RAST._IExpr _out6915;
            DCOMPUTF16._IOwnership _out6916;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6917;
            DCOMPUTF16.COMP.GenExpr(((_12267_mapElems).Select(_12269_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6915, out _out6916, out _out6917);
            _12273_recursiveGenValue = _out6915;
            _12274___v121 = _out6916;
            _12275_recIdentsValue = _out6917;
            _12268_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_12268_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_12270_recursiveGenKey, _12273_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12272_recIdentsKey), _12275_recIdentsValue);
            _12269_i = (_12269_i) + (BigInteger.One);
          }
          _12269_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _12276_arguments;
          _12276_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_12269_i) < (new BigInteger((_12268_generatedValues).Count))) {
            RAST._IExpr _12277_genKey;
            _12277_genKey = ((_12268_generatedValues).Select(_12269_i)).dtor__0;
            RAST._IExpr _12278_genValue;
            _12278_genValue = ((_12268_generatedValues).Select(_12269_i)).dtor__1;
            _12276_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_12276_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _12277_genKey, _12278_genValue, DAST.Format.BinOpFormat.create_NoFormat())));
            _12269_i = (_12269_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_12276_arguments);
          RAST._IExpr _out6918;
          DCOMPUTF16._IOwnership _out6919;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6918, out _out6919);
          r = _out6918;
          resultingOwnership = _out6919;
          return ;
        }
      } else if (_source445.is_MapBuilder) {
        DAST._IType _12279___mcc_h24 = _source445.dtor_keyType;
        DAST._IType _12280___mcc_h25 = _source445.dtor_valueType;
        DAST._IType _12281_valueType = _12280___mcc_h25;
        DAST._IType _12282_keyType = _12279___mcc_h24;
        {
          RAST._IType _12283_kType;
          RAST._IType _out6920;
          _out6920 = DCOMPUTF16.COMP.GenType(_12282_keyType, false, false);
          _12283_kType = _out6920;
          RAST._IType _12284_vType;
          RAST._IType _out6921;
          _out6921 = DCOMPUTF16.COMP.GenType(_12281_valueType, false, false);
          _12284_vType = _out6921;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::MapBuilder::<"), (_12283_kType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_12284_vType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out6922;
          DCOMPUTF16._IOwnership _out6923;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6922, out _out6923);
          r = _out6922;
          resultingOwnership = _out6923;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source445.is_SeqUpdate) {
        DAST._IExpression _12285___mcc_h26 = _source445.dtor_expr;
        DAST._IExpression _12286___mcc_h27 = _source445.dtor_indexExpr;
        DAST._IExpression _12287___mcc_h28 = _source445.dtor_value;
        DAST._IExpression _12288_value = _12287___mcc_h28;
        DAST._IExpression _12289_index = _12286___mcc_h27;
        DAST._IExpression _12290_expr = _12285___mcc_h26;
        {
          RAST._IExpr _12291_exprR;
          DCOMPUTF16._IOwnership _12292___v122;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12293_exprIdents;
          RAST._IExpr _out6924;
          DCOMPUTF16._IOwnership _out6925;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6926;
          DCOMPUTF16.COMP.GenExpr(_12290_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6924, out _out6925, out _out6926);
          _12291_exprR = _out6924;
          _12292___v122 = _out6925;
          _12293_exprIdents = _out6926;
          RAST._IExpr _12294_indexR;
          DCOMPUTF16._IOwnership _12295_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12296_indexIdents;
          RAST._IExpr _out6927;
          DCOMPUTF16._IOwnership _out6928;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6929;
          DCOMPUTF16.COMP.GenExpr(_12289_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6927, out _out6928, out _out6929);
          _12294_indexR = _out6927;
          _12295_indexOwnership = _out6928;
          _12296_indexIdents = _out6929;
          RAST._IExpr _12297_valueR;
          DCOMPUTF16._IOwnership _12298_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12299_valueIdents;
          RAST._IExpr _out6930;
          DCOMPUTF16._IOwnership _out6931;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6932;
          DCOMPUTF16.COMP.GenExpr(_12288_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6930, out _out6931, out _out6932);
          _12297_valueR = _out6930;
          _12298_valueOwnership = _out6931;
          _12299_valueIdents = _out6932;
          r = ((_12291_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12294_indexR, _12297_valueR));
          RAST._IExpr _out6933;
          DCOMPUTF16._IOwnership _out6934;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6933, out _out6934);
          r = _out6933;
          resultingOwnership = _out6934;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_12293_exprIdents, _12296_indexIdents), _12299_valueIdents);
          return ;
        }
      } else if (_source445.is_MapUpdate) {
        DAST._IExpression _12300___mcc_h29 = _source445.dtor_expr;
        DAST._IExpression _12301___mcc_h30 = _source445.dtor_indexExpr;
        DAST._IExpression _12302___mcc_h31 = _source445.dtor_value;
        DAST._IExpression _12303_value = _12302___mcc_h31;
        DAST._IExpression _12304_index = _12301___mcc_h30;
        DAST._IExpression _12305_expr = _12300___mcc_h29;
        {
          RAST._IExpr _12306_exprR;
          DCOMPUTF16._IOwnership _12307___v123;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12308_exprIdents;
          RAST._IExpr _out6935;
          DCOMPUTF16._IOwnership _out6936;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6937;
          DCOMPUTF16.COMP.GenExpr(_12305_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6935, out _out6936, out _out6937);
          _12306_exprR = _out6935;
          _12307___v123 = _out6936;
          _12308_exprIdents = _out6937;
          RAST._IExpr _12309_indexR;
          DCOMPUTF16._IOwnership _12310_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12311_indexIdents;
          RAST._IExpr _out6938;
          DCOMPUTF16._IOwnership _out6939;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6940;
          DCOMPUTF16.COMP.GenExpr(_12304_index, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6938, out _out6939, out _out6940);
          _12309_indexR = _out6938;
          _12310_indexOwnership = _out6939;
          _12311_indexIdents = _out6940;
          RAST._IExpr _12312_valueR;
          DCOMPUTF16._IOwnership _12313_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12314_valueIdents;
          RAST._IExpr _out6941;
          DCOMPUTF16._IOwnership _out6942;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6943;
          DCOMPUTF16.COMP.GenExpr(_12303_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out6941, out _out6942, out _out6943);
          _12312_valueR = _out6941;
          _12313_valueOwnership = _out6942;
          _12314_valueIdents = _out6943;
          r = ((_12306_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_12309_indexR, _12312_valueR));
          RAST._IExpr _out6944;
          DCOMPUTF16._IOwnership _out6945;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6944, out _out6945);
          r = _out6944;
          resultingOwnership = _out6945;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_12308_exprIdents, _12311_indexIdents), _12314_valueIdents);
          return ;
        }
      } else if (_source445.is_SetBuilder) {
        DAST._IType _12315___mcc_h32 = _source445.dtor_elemType;
        DAST._IType _12316_elemType = _12315___mcc_h32;
        {
          RAST._IType _12317_eType;
          RAST._IType _out6946;
          _out6946 = DCOMPUTF16.COMP.GenType(_12316_elemType, false, false);
          _12317_eType = _out6946;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::SetBuilder::<"), (_12317_eType)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">::new()")));
          RAST._IExpr _out6947;
          DCOMPUTF16._IOwnership _out6948;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6947, out _out6948);
          r = _out6947;
          resultingOwnership = _out6948;
          return ;
        }
      } else if (_source445.is_ToMultiset) {
        DAST._IExpression _12318___mcc_h33 = _source445.dtor_ToMultiset_a0;
        DAST._IExpression _12319_expr = _12318___mcc_h33;
        {
          RAST._IExpr _12320_recursiveGen;
          DCOMPUTF16._IOwnership _12321___v119;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12322_recIdents;
          RAST._IExpr _out6949;
          DCOMPUTF16._IOwnership _out6950;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6951;
          DCOMPUTF16.COMP.GenExpr(_12319_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6949, out _out6950, out _out6951);
          _12320_recursiveGen = _out6949;
          _12321___v119 = _out6950;
          _12322_recIdents = _out6951;
          r = ((_12320_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _12322_recIdents;
          RAST._IExpr _out6952;
          DCOMPUTF16._IOwnership _out6953;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6952, out _out6953);
          r = _out6952;
          resultingOwnership = _out6953;
          return ;
        }
      } else if (_source445.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source446 = selfIdent;
          if (_source446.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out6954;
              DCOMPUTF16._IOwnership _out6955;
              DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6954, out _out6955);
              r = _out6954;
              resultingOwnership = _out6955;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _12323___mcc_h273 = _source446.dtor_value;
            Dafny.ISequence<Dafny.Rune> _12324_id = _12323___mcc_h273;
            {
              r = RAST.Expr.create_RawExpr(_12324_id);
              if (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              } else if ((object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_12324_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_12324_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12324_id);
            }
          }
          return ;
        }
      } else if (_source445.is_Ite) {
        DAST._IExpression _12325___mcc_h34 = _source445.dtor_cond;
        DAST._IExpression _12326___mcc_h35 = _source445.dtor_thn;
        DAST._IExpression _12327___mcc_h36 = _source445.dtor_els;
        DAST._IExpression _12328_f = _12327___mcc_h36;
        DAST._IExpression _12329_t = _12326___mcc_h35;
        DAST._IExpression _12330_cond = _12325___mcc_h34;
        {
          RAST._IExpr _12331_cond;
          DCOMPUTF16._IOwnership _12332___v124;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12333_recIdentsCond;
          RAST._IExpr _out6956;
          DCOMPUTF16._IOwnership _out6957;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6958;
          DCOMPUTF16.COMP.GenExpr(_12330_cond, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6956, out _out6957, out _out6958);
          _12331_cond = _out6956;
          _12332___v124 = _out6957;
          _12333_recIdentsCond = _out6958;
          Dafny.ISequence<Dafny.Rune> _12334_condString;
          _12334_condString = (_12331_cond)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _12335___v125;
          DCOMPUTF16._IOwnership _12336_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12337___v126;
          RAST._IExpr _out6959;
          DCOMPUTF16._IOwnership _out6960;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6961;
          DCOMPUTF16.COMP.GenExpr(_12329_t, selfIdent, env, expectedOwnership, out _out6959, out _out6960, out _out6961);
          _12335___v125 = _out6959;
          _12336_tHasToBeOwned = _out6960;
          _12337___v126 = _out6961;
          RAST._IExpr _12338_fExpr;
          DCOMPUTF16._IOwnership _12339_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12340_recIdentsF;
          RAST._IExpr _out6962;
          DCOMPUTF16._IOwnership _out6963;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6964;
          DCOMPUTF16.COMP.GenExpr(_12328_f, selfIdent, env, _12336_tHasToBeOwned, out _out6962, out _out6963, out _out6964);
          _12338_fExpr = _out6962;
          _12339_fOwned = _out6963;
          _12340_recIdentsF = _out6964;
          Dafny.ISequence<Dafny.Rune> _12341_fString;
          _12341_fString = (_12338_fExpr)._ToString(DCOMPUTF16.__default.IND);
          RAST._IExpr _12342_tExpr;
          DCOMPUTF16._IOwnership _12343___v127;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12344_recIdentsT;
          RAST._IExpr _out6965;
          DCOMPUTF16._IOwnership _out6966;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6967;
          DCOMPUTF16.COMP.GenExpr(_12329_t, selfIdent, env, _12339_fOwned, out _out6965, out _out6966, out _out6967);
          _12342_tExpr = _out6965;
          _12343___v127 = _out6966;
          _12344_recIdentsT = _out6967;
          Dafny.ISequence<Dafny.Rune> _12345_tString;
          _12345_tString = (_12342_tExpr)._ToString(DCOMPUTF16.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _12334_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _12345_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _12341_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out6968;
          DCOMPUTF16._IOwnership _out6969;
          DCOMPUTF16.COMP.FromOwnership(r, _12339_fOwned, expectedOwnership, out _out6968, out _out6969);
          r = _out6968;
          resultingOwnership = _out6969;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_12333_recIdentsCond, _12344_recIdentsT), _12340_recIdentsF);
          return ;
        }
      } else if (_source445.is_UnOp) {
        DAST._IUnaryOp _12346___mcc_h37 = _source445.dtor_unOp;
        DAST._IExpression _12347___mcc_h38 = _source445.dtor_expr;
        DAST.Format._IUnOpFormat _12348___mcc_h39 = _source445.dtor_format1;
        DAST._IUnaryOp _source447 = _12346___mcc_h37;
        if (_source447.is_Not) {
          DAST.Format._IUnOpFormat _12349_format = _12348___mcc_h39;
          DAST._IExpression _12350_e = _12347___mcc_h38;
          {
            RAST._IExpr _12351_recursiveGen;
            DCOMPUTF16._IOwnership _12352___v128;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12353_recIdents;
            RAST._IExpr _out6970;
            DCOMPUTF16._IOwnership _out6971;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6972;
            DCOMPUTF16.COMP.GenExpr(_12350_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6970, out _out6971, out _out6972);
            _12351_recursiveGen = _out6970;
            _12352___v128 = _out6971;
            _12353_recIdents = _out6972;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _12351_recursiveGen, _12349_format);
            RAST._IExpr _out6973;
            DCOMPUTF16._IOwnership _out6974;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6973, out _out6974);
            r = _out6973;
            resultingOwnership = _out6974;
            readIdents = _12353_recIdents;
            return ;
          }
        } else if (_source447.is_BitwiseNot) {
          DAST.Format._IUnOpFormat _12354_format = _12348___mcc_h39;
          DAST._IExpression _12355_e = _12347___mcc_h38;
          {
            RAST._IExpr _12356_recursiveGen;
            DCOMPUTF16._IOwnership _12357___v129;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12358_recIdents;
            RAST._IExpr _out6975;
            DCOMPUTF16._IOwnership _out6976;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6977;
            DCOMPUTF16.COMP.GenExpr(_12355_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6975, out _out6976, out _out6977);
            _12356_recursiveGen = _out6975;
            _12357___v129 = _out6976;
            _12358_recIdents = _out6977;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _12356_recursiveGen, _12354_format);
            RAST._IExpr _out6978;
            DCOMPUTF16._IOwnership _out6979;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6978, out _out6979);
            r = _out6978;
            resultingOwnership = _out6979;
            readIdents = _12358_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnOpFormat _12359_format = _12348___mcc_h39;
          DAST._IExpression _12360_e = _12347___mcc_h38;
          {
            RAST._IExpr _12361_recursiveGen;
            DCOMPUTF16._IOwnership _12362_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12363_recIdents;
            RAST._IExpr _out6980;
            DCOMPUTF16._IOwnership _out6981;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6982;
            DCOMPUTF16.COMP.GenExpr(_12360_e, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out6980, out _out6981, out _out6982);
            _12361_recursiveGen = _out6980;
            _12362_recOwned = _out6981;
            _12363_recIdents = _out6982;
            r = ((_12361_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out6983;
            DCOMPUTF16._IOwnership _out6984;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6983, out _out6984);
            r = _out6983;
            resultingOwnership = _out6984;
            readIdents = _12363_recIdents;
            return ;
          }
        }
      } else if (_source445.is_BinOp) {
        DAST._IBinOp _12364___mcc_h40 = _source445.dtor_op;
        DAST._IExpression _12365___mcc_h41 = _source445.dtor_left;
        DAST._IExpression _12366___mcc_h42 = _source445.dtor_right;
        DAST.Format._IBinOpFormat _12367___mcc_h43 = _source445.dtor_format2;
        RAST._IExpr _out6985;
        DCOMPUTF16._IOwnership _out6986;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6987;
        DCOMPUTF16.COMP.GenExprBinary(e, selfIdent, env, expectedOwnership, out _out6985, out _out6986, out _out6987);
        r = _out6985;
        resultingOwnership = _out6986;
        readIdents = _out6987;
      } else if (_source445.is_ArrayLen) {
        DAST._IExpression _12368___mcc_h44 = _source445.dtor_expr;
        BigInteger _12369___mcc_h45 = _source445.dtor_dim;
        BigInteger _12370_dim = _12369___mcc_h45;
        DAST._IExpression _12371_expr = _12368___mcc_h44;
        {
          RAST._IExpr _12372_recursiveGen;
          DCOMPUTF16._IOwnership _12373___v134;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12374_recIdents;
          RAST._IExpr _out6988;
          DCOMPUTF16._IOwnership _out6989;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6990;
          DCOMPUTF16.COMP.GenExpr(_12371_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6988, out _out6989, out _out6990);
          _12372_recursiveGen = _out6988;
          _12373___v134 = _out6989;
          _12374_recIdents = _out6990;
          if ((_12370_dim).Sign == 0) {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(("), (_12372_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").borrow().len())")));
          } else {
            Dafny.ISequence<Dafny.Rune> _12375_s;
            _12375_s = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigInt::from(m.borrow().len())")))._ToString(DCOMPUTF16.__default.IND);
            BigInteger _12376_i;
            _12376_i = BigInteger.One;
            while ((_12376_i) < (_12370_dim)) {
              _12375_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("m.borrow().get(0).map(|m| "), _12375_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"));
              _12376_i = (_12376_i) + (BigInteger.One);
            }
            r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_12372_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".borrow().get(0).map(|m| ")), _12375_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap_or(::dafny_runtime::BigInt::from(0))"))));
          }
          RAST._IExpr _out6991;
          DCOMPUTF16._IOwnership _out6992;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6991, out _out6992);
          r = _out6991;
          resultingOwnership = _out6992;
          readIdents = _12374_recIdents;
          return ;
        }
      } else if (_source445.is_MapKeys) {
        DAST._IExpression _12377___mcc_h46 = _source445.dtor_expr;
        DAST._IExpression _12378_expr = _12377___mcc_h46;
        {
          RAST._IExpr _12379_recursiveGen;
          DCOMPUTF16._IOwnership _12380___v135;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12381_recIdents;
          RAST._IExpr _out6993;
          DCOMPUTF16._IOwnership _out6994;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out6995;
          DCOMPUTF16.COMP.GenExpr(_12378_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6993, out _out6994, out _out6995);
          _12379_recursiveGen = _out6993;
          _12380___v135 = _out6994;
          _12381_recIdents = _out6995;
          readIdents = _12381_recIdents;
          r = ((_12379_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out6996;
          DCOMPUTF16._IOwnership _out6997;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out6996, out _out6997);
          r = _out6996;
          resultingOwnership = _out6997;
          return ;
        }
      } else if (_source445.is_MapValues) {
        DAST._IExpression _12382___mcc_h47 = _source445.dtor_expr;
        DAST._IExpression _12383_expr = _12382___mcc_h47;
        {
          RAST._IExpr _12384_recursiveGen;
          DCOMPUTF16._IOwnership _12385___v136;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12386_recIdents;
          RAST._IExpr _out6998;
          DCOMPUTF16._IOwnership _out6999;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7000;
          DCOMPUTF16.COMP.GenExpr(_12383_expr, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out6998, out _out6999, out _out7000);
          _12384_recursiveGen = _out6998;
          _12385___v136 = _out6999;
          _12386_recIdents = _out7000;
          readIdents = _12386_recIdents;
          r = ((_12384_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out7001;
          DCOMPUTF16._IOwnership _out7002;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7001, out _out7002);
          r = _out7001;
          resultingOwnership = _out7002;
          return ;
        }
      } else if (_source445.is_Select) {
        DAST._IExpression _12387___mcc_h48 = _source445.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _12388___mcc_h49 = _source445.dtor_field;
        bool _12389___mcc_h50 = _source445.dtor_isConstant;
        bool _12390___mcc_h51 = _source445.dtor_onDatatype;
        DAST._IExpression _source448 = _12387___mcc_h48;
        if (_source448.is_Literal) {
          DAST._ILiteral _12391___mcc_h52 = _source448.dtor_Literal_a0;
          bool _12392_isDatatype = _12390___mcc_h51;
          bool _12393_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12394_field = _12388___mcc_h49;
          DAST._IExpression _12395_on = _12387___mcc_h48;
          {
            RAST._IExpr _12396_onExpr;
            DCOMPUTF16._IOwnership _12397_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12398_recIdents;
            RAST._IExpr _out7003;
            DCOMPUTF16._IOwnership _out7004;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7005;
            DCOMPUTF16.COMP.GenExpr(_12395_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7003, out _out7004, out _out7005);
            _12396_onExpr = _out7003;
            _12397_onOwned = _out7004;
            _12398_recIdents = _out7005;
            if ((_12392_isDatatype) || (_12393_isConstant)) {
              r = ((_12396_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12394_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7006;
              DCOMPUTF16._IOwnership _out7007;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7006, out _out7007);
              r = _out7006;
              resultingOwnership = _out7007;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12396_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12394_field));
              RAST._IExpr _out7008;
              DCOMPUTF16._IOwnership _out7009;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7008, out _out7009);
              r = _out7008;
              resultingOwnership = _out7009;
            }
            readIdents = _12398_recIdents;
            return ;
          }
        } else if (_source448.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _12399___mcc_h54 = _source448.dtor_Ident_a0;
          bool _12400_isDatatype = _12390___mcc_h51;
          bool _12401_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12402_field = _12388___mcc_h49;
          DAST._IExpression _12403_on = _12387___mcc_h48;
          {
            RAST._IExpr _12404_onExpr;
            DCOMPUTF16._IOwnership _12405_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12406_recIdents;
            RAST._IExpr _out7010;
            DCOMPUTF16._IOwnership _out7011;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7012;
            DCOMPUTF16.COMP.GenExpr(_12403_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7010, out _out7011, out _out7012);
            _12404_onExpr = _out7010;
            _12405_onOwned = _out7011;
            _12406_recIdents = _out7012;
            if ((_12400_isDatatype) || (_12401_isConstant)) {
              r = ((_12404_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12402_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7013;
              DCOMPUTF16._IOwnership _out7014;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7013, out _out7014);
              r = _out7013;
              resultingOwnership = _out7014;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12404_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12402_field));
              RAST._IExpr _out7015;
              DCOMPUTF16._IOwnership _out7016;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7015, out _out7016);
              r = _out7015;
              resultingOwnership = _out7016;
            }
            readIdents = _12406_recIdents;
            return ;
          }
        } else if (_source448.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12407___mcc_h56 = _source448.dtor_Companion_a0;
          bool _12408_isDatatype = _12390___mcc_h51;
          bool _12409_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12410_field = _12388___mcc_h49;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12411_c = _12407___mcc_h56;
          {
            RAST._IExpr _12412_onExpr;
            DCOMPUTF16._IOwnership _12413_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12414_recIdents;
            RAST._IExpr _out7017;
            DCOMPUTF16._IOwnership _out7018;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7019;
            DCOMPUTF16.COMP.GenExpr(DAST.Expression.create_Companion(_12411_c), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7017, out _out7018, out _out7019);
            _12412_onExpr = _out7017;
            _12413_onOwned = _out7018;
            _12414_recIdents = _out7019;
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_12412_onExpr)._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent(_12410_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("()")));
            RAST._IExpr _out7020;
            DCOMPUTF16._IOwnership _out7021;
            DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7020, out _out7021);
            r = _out7020;
            resultingOwnership = _out7021;
            readIdents = _12414_recIdents;
            return ;
          }
        } else if (_source448.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _12415___mcc_h58 = _source448.dtor_Tuple_a0;
          bool _12416_isDatatype = _12390___mcc_h51;
          bool _12417_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12418_field = _12388___mcc_h49;
          DAST._IExpression _12419_on = _12387___mcc_h48;
          {
            RAST._IExpr _12420_onExpr;
            DCOMPUTF16._IOwnership _12421_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12422_recIdents;
            RAST._IExpr _out7022;
            DCOMPUTF16._IOwnership _out7023;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7024;
            DCOMPUTF16.COMP.GenExpr(_12419_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7022, out _out7023, out _out7024);
            _12420_onExpr = _out7022;
            _12421_onOwned = _out7023;
            _12422_recIdents = _out7024;
            if ((_12416_isDatatype) || (_12417_isConstant)) {
              r = ((_12420_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12418_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7025;
              DCOMPUTF16._IOwnership _out7026;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7025, out _out7026);
              r = _out7025;
              resultingOwnership = _out7026;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12420_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12418_field));
              RAST._IExpr _out7027;
              DCOMPUTF16._IOwnership _out7028;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7027, out _out7028);
              r = _out7027;
              resultingOwnership = _out7028;
            }
            readIdents = _12422_recIdents;
            return ;
          }
        } else if (_source448.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12423___mcc_h60 = _source448.dtor_path;
          Dafny.ISequence<DAST._IType> _12424___mcc_h61 = _source448.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _12425___mcc_h62 = _source448.dtor_args;
          bool _12426_isDatatype = _12390___mcc_h51;
          bool _12427_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12428_field = _12388___mcc_h49;
          DAST._IExpression _12429_on = _12387___mcc_h48;
          {
            RAST._IExpr _12430_onExpr;
            DCOMPUTF16._IOwnership _12431_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12432_recIdents;
            RAST._IExpr _out7029;
            DCOMPUTF16._IOwnership _out7030;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7031;
            DCOMPUTF16.COMP.GenExpr(_12429_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7029, out _out7030, out _out7031);
            _12430_onExpr = _out7029;
            _12431_onOwned = _out7030;
            _12432_recIdents = _out7031;
            if ((_12426_isDatatype) || (_12427_isConstant)) {
              r = ((_12430_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12428_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7032;
              DCOMPUTF16._IOwnership _out7033;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7032, out _out7033);
              r = _out7032;
              resultingOwnership = _out7033;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12430_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12428_field));
              RAST._IExpr _out7034;
              DCOMPUTF16._IOwnership _out7035;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7034, out _out7035);
              r = _out7034;
              resultingOwnership = _out7035;
            }
            readIdents = _12432_recIdents;
            return ;
          }
        } else if (_source448.is_NewArray) {
          Dafny.ISequence<DAST._IExpression> _12433___mcc_h66 = _source448.dtor_dims;
          DAST._IType _12434___mcc_h67 = _source448.dtor_typ;
          bool _12435_isDatatype = _12390___mcc_h51;
          bool _12436_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12437_field = _12388___mcc_h49;
          DAST._IExpression _12438_on = _12387___mcc_h48;
          {
            RAST._IExpr _12439_onExpr;
            DCOMPUTF16._IOwnership _12440_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12441_recIdents;
            RAST._IExpr _out7036;
            DCOMPUTF16._IOwnership _out7037;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7038;
            DCOMPUTF16.COMP.GenExpr(_12438_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7036, out _out7037, out _out7038);
            _12439_onExpr = _out7036;
            _12440_onOwned = _out7037;
            _12441_recIdents = _out7038;
            if ((_12435_isDatatype) || (_12436_isConstant)) {
              r = ((_12439_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12437_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7039;
              DCOMPUTF16._IOwnership _out7040;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7039, out _out7040);
              r = _out7039;
              resultingOwnership = _out7040;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12439_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12437_field));
              RAST._IExpr _out7041;
              DCOMPUTF16._IOwnership _out7042;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7041, out _out7042);
              r = _out7041;
              resultingOwnership = _out7042;
            }
            readIdents = _12441_recIdents;
            return ;
          }
        } else if (_source448.is_DatatypeValue) {
          DAST._IDatatypeType _12442___mcc_h70 = _source448.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _12443___mcc_h71 = _source448.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _12444___mcc_h72 = _source448.dtor_variant;
          bool _12445___mcc_h73 = _source448.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _12446___mcc_h74 = _source448.dtor_contents;
          bool _12447_isDatatype = _12390___mcc_h51;
          bool _12448_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12449_field = _12388___mcc_h49;
          DAST._IExpression _12450_on = _12387___mcc_h48;
          {
            RAST._IExpr _12451_onExpr;
            DCOMPUTF16._IOwnership _12452_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12453_recIdents;
            RAST._IExpr _out7043;
            DCOMPUTF16._IOwnership _out7044;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7045;
            DCOMPUTF16.COMP.GenExpr(_12450_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7043, out _out7044, out _out7045);
            _12451_onExpr = _out7043;
            _12452_onOwned = _out7044;
            _12453_recIdents = _out7045;
            if ((_12447_isDatatype) || (_12448_isConstant)) {
              r = ((_12451_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12449_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7046;
              DCOMPUTF16._IOwnership _out7047;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7046, out _out7047);
              r = _out7046;
              resultingOwnership = _out7047;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12451_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12449_field));
              RAST._IExpr _out7048;
              DCOMPUTF16._IOwnership _out7049;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7048, out _out7049);
              r = _out7048;
              resultingOwnership = _out7049;
            }
            readIdents = _12453_recIdents;
            return ;
          }
        } else if (_source448.is_Convert) {
          DAST._IExpression _12454___mcc_h80 = _source448.dtor_value;
          DAST._IType _12455___mcc_h81 = _source448.dtor_from;
          DAST._IType _12456___mcc_h82 = _source448.dtor_typ;
          bool _12457_isDatatype = _12390___mcc_h51;
          bool _12458_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12459_field = _12388___mcc_h49;
          DAST._IExpression _12460_on = _12387___mcc_h48;
          {
            RAST._IExpr _12461_onExpr;
            DCOMPUTF16._IOwnership _12462_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12463_recIdents;
            RAST._IExpr _out7050;
            DCOMPUTF16._IOwnership _out7051;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7052;
            DCOMPUTF16.COMP.GenExpr(_12460_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7050, out _out7051, out _out7052);
            _12461_onExpr = _out7050;
            _12462_onOwned = _out7051;
            _12463_recIdents = _out7052;
            if ((_12457_isDatatype) || (_12458_isConstant)) {
              r = ((_12461_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12459_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7053;
              DCOMPUTF16._IOwnership _out7054;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7053, out _out7054);
              r = _out7053;
              resultingOwnership = _out7054;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12461_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12459_field));
              RAST._IExpr _out7055;
              DCOMPUTF16._IOwnership _out7056;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7055, out _out7056);
              r = _out7055;
              resultingOwnership = _out7056;
            }
            readIdents = _12463_recIdents;
            return ;
          }
        } else if (_source448.is_SeqConstruct) {
          DAST._IExpression _12464___mcc_h86 = _source448.dtor_length;
          DAST._IExpression _12465___mcc_h87 = _source448.dtor_elem;
          bool _12466_isDatatype = _12390___mcc_h51;
          bool _12467_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12468_field = _12388___mcc_h49;
          DAST._IExpression _12469_on = _12387___mcc_h48;
          {
            RAST._IExpr _12470_onExpr;
            DCOMPUTF16._IOwnership _12471_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12472_recIdents;
            RAST._IExpr _out7057;
            DCOMPUTF16._IOwnership _out7058;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7059;
            DCOMPUTF16.COMP.GenExpr(_12469_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7057, out _out7058, out _out7059);
            _12470_onExpr = _out7057;
            _12471_onOwned = _out7058;
            _12472_recIdents = _out7059;
            if ((_12466_isDatatype) || (_12467_isConstant)) {
              r = ((_12470_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12468_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7060;
              DCOMPUTF16._IOwnership _out7061;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7060, out _out7061);
              r = _out7060;
              resultingOwnership = _out7061;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12470_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12468_field));
              RAST._IExpr _out7062;
              DCOMPUTF16._IOwnership _out7063;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7062, out _out7063);
              r = _out7062;
              resultingOwnership = _out7063;
            }
            readIdents = _12472_recIdents;
            return ;
          }
        } else if (_source448.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _12473___mcc_h90 = _source448.dtor_elements;
          DAST._IType _12474___mcc_h91 = _source448.dtor_typ;
          bool _12475_isDatatype = _12390___mcc_h51;
          bool _12476_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12477_field = _12388___mcc_h49;
          DAST._IExpression _12478_on = _12387___mcc_h48;
          {
            RAST._IExpr _12479_onExpr;
            DCOMPUTF16._IOwnership _12480_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12481_recIdents;
            RAST._IExpr _out7064;
            DCOMPUTF16._IOwnership _out7065;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7066;
            DCOMPUTF16.COMP.GenExpr(_12478_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7064, out _out7065, out _out7066);
            _12479_onExpr = _out7064;
            _12480_onOwned = _out7065;
            _12481_recIdents = _out7066;
            if ((_12475_isDatatype) || (_12476_isConstant)) {
              r = ((_12479_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12477_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7067;
              DCOMPUTF16._IOwnership _out7068;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7067, out _out7068);
              r = _out7067;
              resultingOwnership = _out7068;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12479_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12477_field));
              RAST._IExpr _out7069;
              DCOMPUTF16._IOwnership _out7070;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7069, out _out7070);
              r = _out7069;
              resultingOwnership = _out7070;
            }
            readIdents = _12481_recIdents;
            return ;
          }
        } else if (_source448.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _12482___mcc_h94 = _source448.dtor_elements;
          bool _12483_isDatatype = _12390___mcc_h51;
          bool _12484_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12485_field = _12388___mcc_h49;
          DAST._IExpression _12486_on = _12387___mcc_h48;
          {
            RAST._IExpr _12487_onExpr;
            DCOMPUTF16._IOwnership _12488_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12489_recIdents;
            RAST._IExpr _out7071;
            DCOMPUTF16._IOwnership _out7072;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7073;
            DCOMPUTF16.COMP.GenExpr(_12486_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7071, out _out7072, out _out7073);
            _12487_onExpr = _out7071;
            _12488_onOwned = _out7072;
            _12489_recIdents = _out7073;
            if ((_12483_isDatatype) || (_12484_isConstant)) {
              r = ((_12487_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12485_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7074;
              DCOMPUTF16._IOwnership _out7075;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7074, out _out7075);
              r = _out7074;
              resultingOwnership = _out7075;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12487_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12485_field));
              RAST._IExpr _out7076;
              DCOMPUTF16._IOwnership _out7077;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7076, out _out7077);
              r = _out7076;
              resultingOwnership = _out7077;
            }
            readIdents = _12489_recIdents;
            return ;
          }
        } else if (_source448.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _12490___mcc_h96 = _source448.dtor_elements;
          bool _12491_isDatatype = _12390___mcc_h51;
          bool _12492_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12493_field = _12388___mcc_h49;
          DAST._IExpression _12494_on = _12387___mcc_h48;
          {
            RAST._IExpr _12495_onExpr;
            DCOMPUTF16._IOwnership _12496_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12497_recIdents;
            RAST._IExpr _out7078;
            DCOMPUTF16._IOwnership _out7079;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7080;
            DCOMPUTF16.COMP.GenExpr(_12494_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7078, out _out7079, out _out7080);
            _12495_onExpr = _out7078;
            _12496_onOwned = _out7079;
            _12497_recIdents = _out7080;
            if ((_12491_isDatatype) || (_12492_isConstant)) {
              r = ((_12495_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12493_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7081;
              DCOMPUTF16._IOwnership _out7082;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7081, out _out7082);
              r = _out7081;
              resultingOwnership = _out7082;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12495_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12493_field));
              RAST._IExpr _out7083;
              DCOMPUTF16._IOwnership _out7084;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7083, out _out7084);
              r = _out7083;
              resultingOwnership = _out7084;
            }
            readIdents = _12497_recIdents;
            return ;
          }
        } else if (_source448.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _12498___mcc_h98 = _source448.dtor_mapElems;
          bool _12499_isDatatype = _12390___mcc_h51;
          bool _12500_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12501_field = _12388___mcc_h49;
          DAST._IExpression _12502_on = _12387___mcc_h48;
          {
            RAST._IExpr _12503_onExpr;
            DCOMPUTF16._IOwnership _12504_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12505_recIdents;
            RAST._IExpr _out7085;
            DCOMPUTF16._IOwnership _out7086;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7087;
            DCOMPUTF16.COMP.GenExpr(_12502_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7085, out _out7086, out _out7087);
            _12503_onExpr = _out7085;
            _12504_onOwned = _out7086;
            _12505_recIdents = _out7087;
            if ((_12499_isDatatype) || (_12500_isConstant)) {
              r = ((_12503_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12501_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7088;
              DCOMPUTF16._IOwnership _out7089;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7088, out _out7089);
              r = _out7088;
              resultingOwnership = _out7089;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12503_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12501_field));
              RAST._IExpr _out7090;
              DCOMPUTF16._IOwnership _out7091;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7090, out _out7091);
              r = _out7090;
              resultingOwnership = _out7091;
            }
            readIdents = _12505_recIdents;
            return ;
          }
        } else if (_source448.is_MapBuilder) {
          DAST._IType _12506___mcc_h100 = _source448.dtor_keyType;
          DAST._IType _12507___mcc_h101 = _source448.dtor_valueType;
          bool _12508_isDatatype = _12390___mcc_h51;
          bool _12509_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12510_field = _12388___mcc_h49;
          DAST._IExpression _12511_on = _12387___mcc_h48;
          {
            RAST._IExpr _12512_onExpr;
            DCOMPUTF16._IOwnership _12513_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12514_recIdents;
            RAST._IExpr _out7092;
            DCOMPUTF16._IOwnership _out7093;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7094;
            DCOMPUTF16.COMP.GenExpr(_12511_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7092, out _out7093, out _out7094);
            _12512_onExpr = _out7092;
            _12513_onOwned = _out7093;
            _12514_recIdents = _out7094;
            if ((_12508_isDatatype) || (_12509_isConstant)) {
              r = ((_12512_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12510_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7095;
              DCOMPUTF16._IOwnership _out7096;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7095, out _out7096);
              r = _out7095;
              resultingOwnership = _out7096;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12512_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12510_field));
              RAST._IExpr _out7097;
              DCOMPUTF16._IOwnership _out7098;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7097, out _out7098);
              r = _out7097;
              resultingOwnership = _out7098;
            }
            readIdents = _12514_recIdents;
            return ;
          }
        } else if (_source448.is_SeqUpdate) {
          DAST._IExpression _12515___mcc_h104 = _source448.dtor_expr;
          DAST._IExpression _12516___mcc_h105 = _source448.dtor_indexExpr;
          DAST._IExpression _12517___mcc_h106 = _source448.dtor_value;
          bool _12518_isDatatype = _12390___mcc_h51;
          bool _12519_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12520_field = _12388___mcc_h49;
          DAST._IExpression _12521_on = _12387___mcc_h48;
          {
            RAST._IExpr _12522_onExpr;
            DCOMPUTF16._IOwnership _12523_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12524_recIdents;
            RAST._IExpr _out7099;
            DCOMPUTF16._IOwnership _out7100;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7101;
            DCOMPUTF16.COMP.GenExpr(_12521_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7099, out _out7100, out _out7101);
            _12522_onExpr = _out7099;
            _12523_onOwned = _out7100;
            _12524_recIdents = _out7101;
            if ((_12518_isDatatype) || (_12519_isConstant)) {
              r = ((_12522_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12520_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7102;
              DCOMPUTF16._IOwnership _out7103;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7102, out _out7103);
              r = _out7102;
              resultingOwnership = _out7103;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12522_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12520_field));
              RAST._IExpr _out7104;
              DCOMPUTF16._IOwnership _out7105;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7104, out _out7105);
              r = _out7104;
              resultingOwnership = _out7105;
            }
            readIdents = _12524_recIdents;
            return ;
          }
        } else if (_source448.is_MapUpdate) {
          DAST._IExpression _12525___mcc_h110 = _source448.dtor_expr;
          DAST._IExpression _12526___mcc_h111 = _source448.dtor_indexExpr;
          DAST._IExpression _12527___mcc_h112 = _source448.dtor_value;
          bool _12528_isDatatype = _12390___mcc_h51;
          bool _12529_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12530_field = _12388___mcc_h49;
          DAST._IExpression _12531_on = _12387___mcc_h48;
          {
            RAST._IExpr _12532_onExpr;
            DCOMPUTF16._IOwnership _12533_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12534_recIdents;
            RAST._IExpr _out7106;
            DCOMPUTF16._IOwnership _out7107;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7108;
            DCOMPUTF16.COMP.GenExpr(_12531_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7106, out _out7107, out _out7108);
            _12532_onExpr = _out7106;
            _12533_onOwned = _out7107;
            _12534_recIdents = _out7108;
            if ((_12528_isDatatype) || (_12529_isConstant)) {
              r = ((_12532_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12530_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7109;
              DCOMPUTF16._IOwnership _out7110;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7109, out _out7110);
              r = _out7109;
              resultingOwnership = _out7110;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12532_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12530_field));
              RAST._IExpr _out7111;
              DCOMPUTF16._IOwnership _out7112;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7111, out _out7112);
              r = _out7111;
              resultingOwnership = _out7112;
            }
            readIdents = _12534_recIdents;
            return ;
          }
        } else if (_source448.is_SetBuilder) {
          DAST._IType _12535___mcc_h116 = _source448.dtor_elemType;
          bool _12536_isDatatype = _12390___mcc_h51;
          bool _12537_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12538_field = _12388___mcc_h49;
          DAST._IExpression _12539_on = _12387___mcc_h48;
          {
            RAST._IExpr _12540_onExpr;
            DCOMPUTF16._IOwnership _12541_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12542_recIdents;
            RAST._IExpr _out7113;
            DCOMPUTF16._IOwnership _out7114;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7115;
            DCOMPUTF16.COMP.GenExpr(_12539_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7113, out _out7114, out _out7115);
            _12540_onExpr = _out7113;
            _12541_onOwned = _out7114;
            _12542_recIdents = _out7115;
            if ((_12536_isDatatype) || (_12537_isConstant)) {
              r = ((_12540_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12538_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7116;
              DCOMPUTF16._IOwnership _out7117;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7116, out _out7117);
              r = _out7116;
              resultingOwnership = _out7117;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12540_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12538_field));
              RAST._IExpr _out7118;
              DCOMPUTF16._IOwnership _out7119;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7118, out _out7119);
              r = _out7118;
              resultingOwnership = _out7119;
            }
            readIdents = _12542_recIdents;
            return ;
          }
        } else if (_source448.is_ToMultiset) {
          DAST._IExpression _12543___mcc_h118 = _source448.dtor_ToMultiset_a0;
          bool _12544_isDatatype = _12390___mcc_h51;
          bool _12545_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12546_field = _12388___mcc_h49;
          DAST._IExpression _12547_on = _12387___mcc_h48;
          {
            RAST._IExpr _12548_onExpr;
            DCOMPUTF16._IOwnership _12549_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12550_recIdents;
            RAST._IExpr _out7120;
            DCOMPUTF16._IOwnership _out7121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7122;
            DCOMPUTF16.COMP.GenExpr(_12547_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7120, out _out7121, out _out7122);
            _12548_onExpr = _out7120;
            _12549_onOwned = _out7121;
            _12550_recIdents = _out7122;
            if ((_12544_isDatatype) || (_12545_isConstant)) {
              r = ((_12548_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12546_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7123;
              DCOMPUTF16._IOwnership _out7124;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7123, out _out7124);
              r = _out7123;
              resultingOwnership = _out7124;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12548_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12546_field));
              RAST._IExpr _out7125;
              DCOMPUTF16._IOwnership _out7126;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7125, out _out7126);
              r = _out7125;
              resultingOwnership = _out7126;
            }
            readIdents = _12550_recIdents;
            return ;
          }
        } else if (_source448.is_This) {
          bool _12551_isDatatype = _12390___mcc_h51;
          bool _12552_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12553_field = _12388___mcc_h49;
          DAST._IExpression _12554_on = _12387___mcc_h48;
          {
            RAST._IExpr _12555_onExpr;
            DCOMPUTF16._IOwnership _12556_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12557_recIdents;
            RAST._IExpr _out7127;
            DCOMPUTF16._IOwnership _out7128;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7129;
            DCOMPUTF16.COMP.GenExpr(_12554_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7127, out _out7128, out _out7129);
            _12555_onExpr = _out7127;
            _12556_onOwned = _out7128;
            _12557_recIdents = _out7129;
            if ((_12551_isDatatype) || (_12552_isConstant)) {
              r = ((_12555_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12553_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7130;
              DCOMPUTF16._IOwnership _out7131;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7130, out _out7131);
              r = _out7130;
              resultingOwnership = _out7131;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12555_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12553_field));
              RAST._IExpr _out7132;
              DCOMPUTF16._IOwnership _out7133;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7132, out _out7133);
              r = _out7132;
              resultingOwnership = _out7133;
            }
            readIdents = _12557_recIdents;
            return ;
          }
        } else if (_source448.is_Ite) {
          DAST._IExpression _12558___mcc_h120 = _source448.dtor_cond;
          DAST._IExpression _12559___mcc_h121 = _source448.dtor_thn;
          DAST._IExpression _12560___mcc_h122 = _source448.dtor_els;
          bool _12561_isDatatype = _12390___mcc_h51;
          bool _12562_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12563_field = _12388___mcc_h49;
          DAST._IExpression _12564_on = _12387___mcc_h48;
          {
            RAST._IExpr _12565_onExpr;
            DCOMPUTF16._IOwnership _12566_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12567_recIdents;
            RAST._IExpr _out7134;
            DCOMPUTF16._IOwnership _out7135;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7136;
            DCOMPUTF16.COMP.GenExpr(_12564_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7134, out _out7135, out _out7136);
            _12565_onExpr = _out7134;
            _12566_onOwned = _out7135;
            _12567_recIdents = _out7136;
            if ((_12561_isDatatype) || (_12562_isConstant)) {
              r = ((_12565_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12563_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7137;
              DCOMPUTF16._IOwnership _out7138;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7137, out _out7138);
              r = _out7137;
              resultingOwnership = _out7138;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12565_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12563_field));
              RAST._IExpr _out7139;
              DCOMPUTF16._IOwnership _out7140;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7139, out _out7140);
              r = _out7139;
              resultingOwnership = _out7140;
            }
            readIdents = _12567_recIdents;
            return ;
          }
        } else if (_source448.is_UnOp) {
          DAST._IUnaryOp _12568___mcc_h126 = _source448.dtor_unOp;
          DAST._IExpression _12569___mcc_h127 = _source448.dtor_expr;
          DAST.Format._IUnOpFormat _12570___mcc_h128 = _source448.dtor_format1;
          bool _12571_isDatatype = _12390___mcc_h51;
          bool _12572_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12573_field = _12388___mcc_h49;
          DAST._IExpression _12574_on = _12387___mcc_h48;
          {
            RAST._IExpr _12575_onExpr;
            DCOMPUTF16._IOwnership _12576_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12577_recIdents;
            RAST._IExpr _out7141;
            DCOMPUTF16._IOwnership _out7142;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7143;
            DCOMPUTF16.COMP.GenExpr(_12574_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7141, out _out7142, out _out7143);
            _12575_onExpr = _out7141;
            _12576_onOwned = _out7142;
            _12577_recIdents = _out7143;
            if ((_12571_isDatatype) || (_12572_isConstant)) {
              r = ((_12575_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12573_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7144;
              DCOMPUTF16._IOwnership _out7145;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7144, out _out7145);
              r = _out7144;
              resultingOwnership = _out7145;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12575_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12573_field));
              RAST._IExpr _out7146;
              DCOMPUTF16._IOwnership _out7147;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7146, out _out7147);
              r = _out7146;
              resultingOwnership = _out7147;
            }
            readIdents = _12577_recIdents;
            return ;
          }
        } else if (_source448.is_BinOp) {
          DAST._IBinOp _12578___mcc_h132 = _source448.dtor_op;
          DAST._IExpression _12579___mcc_h133 = _source448.dtor_left;
          DAST._IExpression _12580___mcc_h134 = _source448.dtor_right;
          DAST.Format._IBinOpFormat _12581___mcc_h135 = _source448.dtor_format2;
          bool _12582_isDatatype = _12390___mcc_h51;
          bool _12583_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12584_field = _12388___mcc_h49;
          DAST._IExpression _12585_on = _12387___mcc_h48;
          {
            RAST._IExpr _12586_onExpr;
            DCOMPUTF16._IOwnership _12587_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12588_recIdents;
            RAST._IExpr _out7148;
            DCOMPUTF16._IOwnership _out7149;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7150;
            DCOMPUTF16.COMP.GenExpr(_12585_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7148, out _out7149, out _out7150);
            _12586_onExpr = _out7148;
            _12587_onOwned = _out7149;
            _12588_recIdents = _out7150;
            if ((_12582_isDatatype) || (_12583_isConstant)) {
              r = ((_12586_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12584_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7151;
              DCOMPUTF16._IOwnership _out7152;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7151, out _out7152);
              r = _out7151;
              resultingOwnership = _out7152;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12586_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12584_field));
              RAST._IExpr _out7153;
              DCOMPUTF16._IOwnership _out7154;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7153, out _out7154);
              r = _out7153;
              resultingOwnership = _out7154;
            }
            readIdents = _12588_recIdents;
            return ;
          }
        } else if (_source448.is_ArrayLen) {
          DAST._IExpression _12589___mcc_h140 = _source448.dtor_expr;
          BigInteger _12590___mcc_h141 = _source448.dtor_dim;
          bool _12591_isDatatype = _12390___mcc_h51;
          bool _12592_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12593_field = _12388___mcc_h49;
          DAST._IExpression _12594_on = _12387___mcc_h48;
          {
            RAST._IExpr _12595_onExpr;
            DCOMPUTF16._IOwnership _12596_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12597_recIdents;
            RAST._IExpr _out7155;
            DCOMPUTF16._IOwnership _out7156;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7157;
            DCOMPUTF16.COMP.GenExpr(_12594_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7155, out _out7156, out _out7157);
            _12595_onExpr = _out7155;
            _12596_onOwned = _out7156;
            _12597_recIdents = _out7157;
            if ((_12591_isDatatype) || (_12592_isConstant)) {
              r = ((_12595_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12593_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7158;
              DCOMPUTF16._IOwnership _out7159;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7158, out _out7159);
              r = _out7158;
              resultingOwnership = _out7159;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12595_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12593_field));
              RAST._IExpr _out7160;
              DCOMPUTF16._IOwnership _out7161;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7160, out _out7161);
              r = _out7160;
              resultingOwnership = _out7161;
            }
            readIdents = _12597_recIdents;
            return ;
          }
        } else if (_source448.is_MapKeys) {
          DAST._IExpression _12598___mcc_h144 = _source448.dtor_expr;
          bool _12599_isDatatype = _12390___mcc_h51;
          bool _12600_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12601_field = _12388___mcc_h49;
          DAST._IExpression _12602_on = _12387___mcc_h48;
          {
            RAST._IExpr _12603_onExpr;
            DCOMPUTF16._IOwnership _12604_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12605_recIdents;
            RAST._IExpr _out7162;
            DCOMPUTF16._IOwnership _out7163;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7164;
            DCOMPUTF16.COMP.GenExpr(_12602_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7162, out _out7163, out _out7164);
            _12603_onExpr = _out7162;
            _12604_onOwned = _out7163;
            _12605_recIdents = _out7164;
            if ((_12599_isDatatype) || (_12600_isConstant)) {
              r = ((_12603_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12601_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7165;
              DCOMPUTF16._IOwnership _out7166;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7165, out _out7166);
              r = _out7165;
              resultingOwnership = _out7166;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12603_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12601_field));
              RAST._IExpr _out7167;
              DCOMPUTF16._IOwnership _out7168;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7167, out _out7168);
              r = _out7167;
              resultingOwnership = _out7168;
            }
            readIdents = _12605_recIdents;
            return ;
          }
        } else if (_source448.is_MapValues) {
          DAST._IExpression _12606___mcc_h146 = _source448.dtor_expr;
          bool _12607_isDatatype = _12390___mcc_h51;
          bool _12608_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12609_field = _12388___mcc_h49;
          DAST._IExpression _12610_on = _12387___mcc_h48;
          {
            RAST._IExpr _12611_onExpr;
            DCOMPUTF16._IOwnership _12612_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12613_recIdents;
            RAST._IExpr _out7169;
            DCOMPUTF16._IOwnership _out7170;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7171;
            DCOMPUTF16.COMP.GenExpr(_12610_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7169, out _out7170, out _out7171);
            _12611_onExpr = _out7169;
            _12612_onOwned = _out7170;
            _12613_recIdents = _out7171;
            if ((_12607_isDatatype) || (_12608_isConstant)) {
              r = ((_12611_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12609_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7172;
              DCOMPUTF16._IOwnership _out7173;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7172, out _out7173);
              r = _out7172;
              resultingOwnership = _out7173;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12611_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12609_field));
              RAST._IExpr _out7174;
              DCOMPUTF16._IOwnership _out7175;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7174, out _out7175);
              r = _out7174;
              resultingOwnership = _out7175;
            }
            readIdents = _12613_recIdents;
            return ;
          }
        } else if (_source448.is_Select) {
          DAST._IExpression _12614___mcc_h148 = _source448.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _12615___mcc_h149 = _source448.dtor_field;
          bool _12616___mcc_h150 = _source448.dtor_isConstant;
          bool _12617___mcc_h151 = _source448.dtor_onDatatype;
          bool _12618_isDatatype = _12390___mcc_h51;
          bool _12619_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12620_field = _12388___mcc_h49;
          DAST._IExpression _12621_on = _12387___mcc_h48;
          {
            RAST._IExpr _12622_onExpr;
            DCOMPUTF16._IOwnership _12623_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12624_recIdents;
            RAST._IExpr _out7176;
            DCOMPUTF16._IOwnership _out7177;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7178;
            DCOMPUTF16.COMP.GenExpr(_12621_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7176, out _out7177, out _out7178);
            _12622_onExpr = _out7176;
            _12623_onOwned = _out7177;
            _12624_recIdents = _out7178;
            if ((_12618_isDatatype) || (_12619_isConstant)) {
              r = ((_12622_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12620_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7179;
              DCOMPUTF16._IOwnership _out7180;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7179, out _out7180);
              r = _out7179;
              resultingOwnership = _out7180;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12622_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12620_field));
              RAST._IExpr _out7181;
              DCOMPUTF16._IOwnership _out7182;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7181, out _out7182);
              r = _out7181;
              resultingOwnership = _out7182;
            }
            readIdents = _12624_recIdents;
            return ;
          }
        } else if (_source448.is_SelectFn) {
          DAST._IExpression _12625___mcc_h156 = _source448.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _12626___mcc_h157 = _source448.dtor_field;
          bool _12627___mcc_h158 = _source448.dtor_onDatatype;
          bool _12628___mcc_h159 = _source448.dtor_isStatic;
          BigInteger _12629___mcc_h160 = _source448.dtor_arity;
          bool _12630_isDatatype = _12390___mcc_h51;
          bool _12631_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12632_field = _12388___mcc_h49;
          DAST._IExpression _12633_on = _12387___mcc_h48;
          {
            RAST._IExpr _12634_onExpr;
            DCOMPUTF16._IOwnership _12635_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12636_recIdents;
            RAST._IExpr _out7183;
            DCOMPUTF16._IOwnership _out7184;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7185;
            DCOMPUTF16.COMP.GenExpr(_12633_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7183, out _out7184, out _out7185);
            _12634_onExpr = _out7183;
            _12635_onOwned = _out7184;
            _12636_recIdents = _out7185;
            if ((_12630_isDatatype) || (_12631_isConstant)) {
              r = ((_12634_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12632_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7186;
              DCOMPUTF16._IOwnership _out7187;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7186, out _out7187);
              r = _out7186;
              resultingOwnership = _out7187;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12634_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12632_field));
              RAST._IExpr _out7188;
              DCOMPUTF16._IOwnership _out7189;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7188, out _out7189);
              r = _out7188;
              resultingOwnership = _out7189;
            }
            readIdents = _12636_recIdents;
            return ;
          }
        } else if (_source448.is_Index) {
          DAST._IExpression _12637___mcc_h166 = _source448.dtor_expr;
          DAST._ICollKind _12638___mcc_h167 = _source448.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _12639___mcc_h168 = _source448.dtor_indices;
          bool _12640_isDatatype = _12390___mcc_h51;
          bool _12641_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12642_field = _12388___mcc_h49;
          DAST._IExpression _12643_on = _12387___mcc_h48;
          {
            RAST._IExpr _12644_onExpr;
            DCOMPUTF16._IOwnership _12645_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12646_recIdents;
            RAST._IExpr _out7190;
            DCOMPUTF16._IOwnership _out7191;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7192;
            DCOMPUTF16.COMP.GenExpr(_12643_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7190, out _out7191, out _out7192);
            _12644_onExpr = _out7190;
            _12645_onOwned = _out7191;
            _12646_recIdents = _out7192;
            if ((_12640_isDatatype) || (_12641_isConstant)) {
              r = ((_12644_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12642_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7193;
              DCOMPUTF16._IOwnership _out7194;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7193, out _out7194);
              r = _out7193;
              resultingOwnership = _out7194;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12644_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12642_field));
              RAST._IExpr _out7195;
              DCOMPUTF16._IOwnership _out7196;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7195, out _out7196);
              r = _out7195;
              resultingOwnership = _out7196;
            }
            readIdents = _12646_recIdents;
            return ;
          }
        } else if (_source448.is_IndexRange) {
          DAST._IExpression _12647___mcc_h172 = _source448.dtor_expr;
          bool _12648___mcc_h173 = _source448.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _12649___mcc_h174 = _source448.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _12650___mcc_h175 = _source448.dtor_high;
          bool _12651_isDatatype = _12390___mcc_h51;
          bool _12652_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12653_field = _12388___mcc_h49;
          DAST._IExpression _12654_on = _12387___mcc_h48;
          {
            RAST._IExpr _12655_onExpr;
            DCOMPUTF16._IOwnership _12656_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12657_recIdents;
            RAST._IExpr _out7197;
            DCOMPUTF16._IOwnership _out7198;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7199;
            DCOMPUTF16.COMP.GenExpr(_12654_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7197, out _out7198, out _out7199);
            _12655_onExpr = _out7197;
            _12656_onOwned = _out7198;
            _12657_recIdents = _out7199;
            if ((_12651_isDatatype) || (_12652_isConstant)) {
              r = ((_12655_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12653_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7200;
              DCOMPUTF16._IOwnership _out7201;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7200, out _out7201);
              r = _out7200;
              resultingOwnership = _out7201;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12655_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12653_field));
              RAST._IExpr _out7202;
              DCOMPUTF16._IOwnership _out7203;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7202, out _out7203);
              r = _out7202;
              resultingOwnership = _out7203;
            }
            readIdents = _12657_recIdents;
            return ;
          }
        } else if (_source448.is_TupleSelect) {
          DAST._IExpression _12658___mcc_h180 = _source448.dtor_expr;
          BigInteger _12659___mcc_h181 = _source448.dtor_index;
          bool _12660_isDatatype = _12390___mcc_h51;
          bool _12661_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12662_field = _12388___mcc_h49;
          DAST._IExpression _12663_on = _12387___mcc_h48;
          {
            RAST._IExpr _12664_onExpr;
            DCOMPUTF16._IOwnership _12665_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12666_recIdents;
            RAST._IExpr _out7204;
            DCOMPUTF16._IOwnership _out7205;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7206;
            DCOMPUTF16.COMP.GenExpr(_12663_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7204, out _out7205, out _out7206);
            _12664_onExpr = _out7204;
            _12665_onOwned = _out7205;
            _12666_recIdents = _out7206;
            if ((_12660_isDatatype) || (_12661_isConstant)) {
              r = ((_12664_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12662_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7207;
              DCOMPUTF16._IOwnership _out7208;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7207, out _out7208);
              r = _out7207;
              resultingOwnership = _out7208;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12664_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12662_field));
              RAST._IExpr _out7209;
              DCOMPUTF16._IOwnership _out7210;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7209, out _out7210);
              r = _out7209;
              resultingOwnership = _out7210;
            }
            readIdents = _12666_recIdents;
            return ;
          }
        } else if (_source448.is_Call) {
          DAST._IExpression _12667___mcc_h184 = _source448.dtor_on;
          DAST._ICallName _12668___mcc_h185 = _source448.dtor_callName;
          Dafny.ISequence<DAST._IType> _12669___mcc_h186 = _source448.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _12670___mcc_h187 = _source448.dtor_args;
          bool _12671_isDatatype = _12390___mcc_h51;
          bool _12672_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12673_field = _12388___mcc_h49;
          DAST._IExpression _12674_on = _12387___mcc_h48;
          {
            RAST._IExpr _12675_onExpr;
            DCOMPUTF16._IOwnership _12676_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12677_recIdents;
            RAST._IExpr _out7211;
            DCOMPUTF16._IOwnership _out7212;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7213;
            DCOMPUTF16.COMP.GenExpr(_12674_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7211, out _out7212, out _out7213);
            _12675_onExpr = _out7211;
            _12676_onOwned = _out7212;
            _12677_recIdents = _out7213;
            if ((_12671_isDatatype) || (_12672_isConstant)) {
              r = ((_12675_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12673_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7214;
              DCOMPUTF16._IOwnership _out7215;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7214, out _out7215);
              r = _out7214;
              resultingOwnership = _out7215;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12675_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12673_field));
              RAST._IExpr _out7216;
              DCOMPUTF16._IOwnership _out7217;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7216, out _out7217);
              r = _out7216;
              resultingOwnership = _out7217;
            }
            readIdents = _12677_recIdents;
            return ;
          }
        } else if (_source448.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _12678___mcc_h192 = _source448.dtor_params;
          DAST._IType _12679___mcc_h193 = _source448.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _12680___mcc_h194 = _source448.dtor_body;
          bool _12681_isDatatype = _12390___mcc_h51;
          bool _12682_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12683_field = _12388___mcc_h49;
          DAST._IExpression _12684_on = _12387___mcc_h48;
          {
            RAST._IExpr _12685_onExpr;
            DCOMPUTF16._IOwnership _12686_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12687_recIdents;
            RAST._IExpr _out7218;
            DCOMPUTF16._IOwnership _out7219;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7220;
            DCOMPUTF16.COMP.GenExpr(_12684_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7218, out _out7219, out _out7220);
            _12685_onExpr = _out7218;
            _12686_onOwned = _out7219;
            _12687_recIdents = _out7220;
            if ((_12681_isDatatype) || (_12682_isConstant)) {
              r = ((_12685_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12683_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7221;
              DCOMPUTF16._IOwnership _out7222;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7221, out _out7222);
              r = _out7221;
              resultingOwnership = _out7222;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12685_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12683_field));
              RAST._IExpr _out7223;
              DCOMPUTF16._IOwnership _out7224;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7223, out _out7224);
              r = _out7223;
              resultingOwnership = _out7224;
            }
            readIdents = _12687_recIdents;
            return ;
          }
        } else if (_source448.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12688___mcc_h198 = _source448.dtor_values;
          DAST._IType _12689___mcc_h199 = _source448.dtor_retType;
          DAST._IExpression _12690___mcc_h200 = _source448.dtor_expr;
          bool _12691_isDatatype = _12390___mcc_h51;
          bool _12692_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12693_field = _12388___mcc_h49;
          DAST._IExpression _12694_on = _12387___mcc_h48;
          {
            RAST._IExpr _12695_onExpr;
            DCOMPUTF16._IOwnership _12696_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12697_recIdents;
            RAST._IExpr _out7225;
            DCOMPUTF16._IOwnership _out7226;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7227;
            DCOMPUTF16.COMP.GenExpr(_12694_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7225, out _out7226, out _out7227);
            _12695_onExpr = _out7225;
            _12696_onOwned = _out7226;
            _12697_recIdents = _out7227;
            if ((_12691_isDatatype) || (_12692_isConstant)) {
              r = ((_12695_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12693_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7228;
              DCOMPUTF16._IOwnership _out7229;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7228, out _out7229);
              r = _out7228;
              resultingOwnership = _out7229;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12695_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12693_field));
              RAST._IExpr _out7230;
              DCOMPUTF16._IOwnership _out7231;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7230, out _out7231);
              r = _out7230;
              resultingOwnership = _out7231;
            }
            readIdents = _12697_recIdents;
            return ;
          }
        } else if (_source448.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _12698___mcc_h204 = _source448.dtor_name;
          DAST._IType _12699___mcc_h205 = _source448.dtor_typ;
          DAST._IExpression _12700___mcc_h206 = _source448.dtor_value;
          DAST._IExpression _12701___mcc_h207 = _source448.dtor_iifeBody;
          bool _12702_isDatatype = _12390___mcc_h51;
          bool _12703_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12704_field = _12388___mcc_h49;
          DAST._IExpression _12705_on = _12387___mcc_h48;
          {
            RAST._IExpr _12706_onExpr;
            DCOMPUTF16._IOwnership _12707_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12708_recIdents;
            RAST._IExpr _out7232;
            DCOMPUTF16._IOwnership _out7233;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7234;
            DCOMPUTF16.COMP.GenExpr(_12705_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7232, out _out7233, out _out7234);
            _12706_onExpr = _out7232;
            _12707_onOwned = _out7233;
            _12708_recIdents = _out7234;
            if ((_12702_isDatatype) || (_12703_isConstant)) {
              r = ((_12706_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12704_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7235;
              DCOMPUTF16._IOwnership _out7236;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7235, out _out7236);
              r = _out7235;
              resultingOwnership = _out7236;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12706_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12704_field));
              RAST._IExpr _out7237;
              DCOMPUTF16._IOwnership _out7238;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7237, out _out7238);
              r = _out7237;
              resultingOwnership = _out7238;
            }
            readIdents = _12708_recIdents;
            return ;
          }
        } else if (_source448.is_Apply) {
          DAST._IExpression _12709___mcc_h212 = _source448.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _12710___mcc_h213 = _source448.dtor_args;
          bool _12711_isDatatype = _12390___mcc_h51;
          bool _12712_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12713_field = _12388___mcc_h49;
          DAST._IExpression _12714_on = _12387___mcc_h48;
          {
            RAST._IExpr _12715_onExpr;
            DCOMPUTF16._IOwnership _12716_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12717_recIdents;
            RAST._IExpr _out7239;
            DCOMPUTF16._IOwnership _out7240;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7241;
            DCOMPUTF16.COMP.GenExpr(_12714_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7239, out _out7240, out _out7241);
            _12715_onExpr = _out7239;
            _12716_onOwned = _out7240;
            _12717_recIdents = _out7241;
            if ((_12711_isDatatype) || (_12712_isConstant)) {
              r = ((_12715_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12713_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7242;
              DCOMPUTF16._IOwnership _out7243;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7242, out _out7243);
              r = _out7242;
              resultingOwnership = _out7243;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12715_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12713_field));
              RAST._IExpr _out7244;
              DCOMPUTF16._IOwnership _out7245;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7244, out _out7245);
              r = _out7244;
              resultingOwnership = _out7245;
            }
            readIdents = _12717_recIdents;
            return ;
          }
        } else if (_source448.is_TypeTest) {
          DAST._IExpression _12718___mcc_h216 = _source448.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12719___mcc_h217 = _source448.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _12720___mcc_h218 = _source448.dtor_variant;
          bool _12721_isDatatype = _12390___mcc_h51;
          bool _12722_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12723_field = _12388___mcc_h49;
          DAST._IExpression _12724_on = _12387___mcc_h48;
          {
            RAST._IExpr _12725_onExpr;
            DCOMPUTF16._IOwnership _12726_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12727_recIdents;
            RAST._IExpr _out7246;
            DCOMPUTF16._IOwnership _out7247;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7248;
            DCOMPUTF16.COMP.GenExpr(_12724_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7246, out _out7247, out _out7248);
            _12725_onExpr = _out7246;
            _12726_onOwned = _out7247;
            _12727_recIdents = _out7248;
            if ((_12721_isDatatype) || (_12722_isConstant)) {
              r = ((_12725_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12723_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7249;
              DCOMPUTF16._IOwnership _out7250;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7249, out _out7250);
              r = _out7249;
              resultingOwnership = _out7250;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12725_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12723_field));
              RAST._IExpr _out7251;
              DCOMPUTF16._IOwnership _out7252;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7251, out _out7252);
              r = _out7251;
              resultingOwnership = _out7252;
            }
            readIdents = _12727_recIdents;
            return ;
          }
        } else if (_source448.is_InitializationValue) {
          DAST._IType _12728___mcc_h222 = _source448.dtor_typ;
          bool _12729_isDatatype = _12390___mcc_h51;
          bool _12730_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12731_field = _12388___mcc_h49;
          DAST._IExpression _12732_on = _12387___mcc_h48;
          {
            RAST._IExpr _12733_onExpr;
            DCOMPUTF16._IOwnership _12734_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12735_recIdents;
            RAST._IExpr _out7253;
            DCOMPUTF16._IOwnership _out7254;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7255;
            DCOMPUTF16.COMP.GenExpr(_12732_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7253, out _out7254, out _out7255);
            _12733_onExpr = _out7253;
            _12734_onOwned = _out7254;
            _12735_recIdents = _out7255;
            if ((_12729_isDatatype) || (_12730_isConstant)) {
              r = ((_12733_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12731_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7256;
              DCOMPUTF16._IOwnership _out7257;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7256, out _out7257);
              r = _out7256;
              resultingOwnership = _out7257;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12733_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12731_field));
              RAST._IExpr _out7258;
              DCOMPUTF16._IOwnership _out7259;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7258, out _out7259);
              r = _out7258;
              resultingOwnership = _out7259;
            }
            readIdents = _12735_recIdents;
            return ;
          }
        } else if (_source448.is_BoolBoundedPool) {
          bool _12736_isDatatype = _12390___mcc_h51;
          bool _12737_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12738_field = _12388___mcc_h49;
          DAST._IExpression _12739_on = _12387___mcc_h48;
          {
            RAST._IExpr _12740_onExpr;
            DCOMPUTF16._IOwnership _12741_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12742_recIdents;
            RAST._IExpr _out7260;
            DCOMPUTF16._IOwnership _out7261;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7262;
            DCOMPUTF16.COMP.GenExpr(_12739_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7260, out _out7261, out _out7262);
            _12740_onExpr = _out7260;
            _12741_onOwned = _out7261;
            _12742_recIdents = _out7262;
            if ((_12736_isDatatype) || (_12737_isConstant)) {
              r = ((_12740_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12738_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7263;
              DCOMPUTF16._IOwnership _out7264;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7263, out _out7264);
              r = _out7263;
              resultingOwnership = _out7264;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12740_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12738_field));
              RAST._IExpr _out7265;
              DCOMPUTF16._IOwnership _out7266;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7265, out _out7266);
              r = _out7265;
              resultingOwnership = _out7266;
            }
            readIdents = _12742_recIdents;
            return ;
          }
        } else if (_source448.is_SetBoundedPool) {
          DAST._IExpression _12743___mcc_h224 = _source448.dtor_of;
          bool _12744_isDatatype = _12390___mcc_h51;
          bool _12745_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12746_field = _12388___mcc_h49;
          DAST._IExpression _12747_on = _12387___mcc_h48;
          {
            RAST._IExpr _12748_onExpr;
            DCOMPUTF16._IOwnership _12749_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12750_recIdents;
            RAST._IExpr _out7267;
            DCOMPUTF16._IOwnership _out7268;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7269;
            DCOMPUTF16.COMP.GenExpr(_12747_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7267, out _out7268, out _out7269);
            _12748_onExpr = _out7267;
            _12749_onOwned = _out7268;
            _12750_recIdents = _out7269;
            if ((_12744_isDatatype) || (_12745_isConstant)) {
              r = ((_12748_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12746_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7270;
              DCOMPUTF16._IOwnership _out7271;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7270, out _out7271);
              r = _out7270;
              resultingOwnership = _out7271;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12748_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12746_field));
              RAST._IExpr _out7272;
              DCOMPUTF16._IOwnership _out7273;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7272, out _out7273);
              r = _out7272;
              resultingOwnership = _out7273;
            }
            readIdents = _12750_recIdents;
            return ;
          }
        } else if (_source448.is_SeqBoundedPool) {
          DAST._IExpression _12751___mcc_h226 = _source448.dtor_of;
          bool _12752___mcc_h227 = _source448.dtor_includeDuplicates;
          bool _12753_isDatatype = _12390___mcc_h51;
          bool _12754_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12755_field = _12388___mcc_h49;
          DAST._IExpression _12756_on = _12387___mcc_h48;
          {
            RAST._IExpr _12757_onExpr;
            DCOMPUTF16._IOwnership _12758_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12759_recIdents;
            RAST._IExpr _out7274;
            DCOMPUTF16._IOwnership _out7275;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7276;
            DCOMPUTF16.COMP.GenExpr(_12756_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7274, out _out7275, out _out7276);
            _12757_onExpr = _out7274;
            _12758_onOwned = _out7275;
            _12759_recIdents = _out7276;
            if ((_12753_isDatatype) || (_12754_isConstant)) {
              r = ((_12757_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12755_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7277;
              DCOMPUTF16._IOwnership _out7278;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7277, out _out7278);
              r = _out7277;
              resultingOwnership = _out7278;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12757_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12755_field));
              RAST._IExpr _out7279;
              DCOMPUTF16._IOwnership _out7280;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7279, out _out7280);
              r = _out7279;
              resultingOwnership = _out7280;
            }
            readIdents = _12759_recIdents;
            return ;
          }
        } else {
          DAST._IExpression _12760___mcc_h230 = _source448.dtor_lo;
          DAST._IExpression _12761___mcc_h231 = _source448.dtor_hi;
          bool _12762_isDatatype = _12390___mcc_h51;
          bool _12763_isConstant = _12389___mcc_h50;
          Dafny.ISequence<Dafny.Rune> _12764_field = _12388___mcc_h49;
          DAST._IExpression _12765_on = _12387___mcc_h48;
          {
            RAST._IExpr _12766_onExpr;
            DCOMPUTF16._IOwnership _12767_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12768_recIdents;
            RAST._IExpr _out7281;
            DCOMPUTF16._IOwnership _out7282;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7283;
            DCOMPUTF16.COMP.GenExpr(_12765_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7281, out _out7282, out _out7283);
            _12766_onExpr = _out7281;
            _12767_onOwned = _out7282;
            _12768_recIdents = _out7283;
            if ((_12762_isDatatype) || (_12763_isConstant)) {
              r = ((_12766_onExpr).Sel(DCOMPUTF16.__default.escapeIdent(_12764_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IExpr _out7284;
              DCOMPUTF16._IOwnership _out7285;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7284, out _out7285);
              r = _out7284;
              resultingOwnership = _out7285;
            } else {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!"))).Apply1(_12766_onExpr)).Sel(DCOMPUTF16.__default.escapeIdent(_12764_field));
              RAST._IExpr _out7286;
              DCOMPUTF16._IOwnership _out7287;
              DCOMPUTF16.COMP.FromOwnership(r, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out7286, out _out7287);
              r = _out7286;
              resultingOwnership = _out7287;
            }
            readIdents = _12768_recIdents;
            return ;
          }
        }
      } else if (_source445.is_SelectFn) {
        DAST._IExpression _12769___mcc_h234 = _source445.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _12770___mcc_h235 = _source445.dtor_field;
        bool _12771___mcc_h236 = _source445.dtor_onDatatype;
        bool _12772___mcc_h237 = _source445.dtor_isStatic;
        BigInteger _12773___mcc_h238 = _source445.dtor_arity;
        BigInteger _12774_arity = _12773___mcc_h238;
        bool _12775_isStatic = _12772___mcc_h237;
        bool _12776_isDatatype = _12771___mcc_h236;
        Dafny.ISequence<Dafny.Rune> _12777_field = _12770___mcc_h235;
        DAST._IExpression _12778_on = _12769___mcc_h234;
        {
          RAST._IExpr _12779_onExpr;
          DCOMPUTF16._IOwnership _12780_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12781_recIdents;
          RAST._IExpr _out7288;
          DCOMPUTF16._IOwnership _out7289;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7290;
          DCOMPUTF16.COMP.GenExpr(_12778_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7288, out _out7289, out _out7290);
          _12779_onExpr = _out7288;
          _12780_onOwned = _out7289;
          _12781_recIdents = _out7290;
          Dafny.ISequence<Dafny.Rune> _12782_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _12783_onString;
          _12783_onString = (_12779_onExpr)._ToString(DCOMPUTF16.__default.IND);
          if (_12775_isStatic) {
            _12782_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12783_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMPUTF16.__default.escapeIdent(_12777_field));
          } else {
            _12782_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _12782_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12782_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _12783_onString), ((object.Equals(_12780_onOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _12784_args;
            _12784_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _12785_i;
            _12785_i = BigInteger.Zero;
            while ((_12785_i) < (_12774_arity)) {
              if ((_12785_i).Sign == 1) {
                _12784_args = Dafny.Sequence<Dafny.Rune>.Concat(_12784_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _12784_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12784_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_12785_i));
              _12785_i = (_12785_i) + (BigInteger.One);
            }
            _12782_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12782_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _12784_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _12782_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12782_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), _12777_field), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _12784_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _12782_s = Dafny.Sequence<Dafny.Rune>.Concat(_12782_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _12782_s = Dafny.Sequence<Dafny.Rune>.Concat(_12782_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _12786_typeShape;
          _12786_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _12787_i;
          _12787_i = BigInteger.Zero;
          while ((_12787_i) < (_12774_arity)) {
            if ((_12787_i).Sign == 1) {
              _12786_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_12786_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _12786_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_12786_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _12787_i = (_12787_i) + (BigInteger.One);
          }
          _12786_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_12786_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _12782_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper(::std::rc::Rc::new("), _12782_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _12786_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">)"));
          r = RAST.Expr.create_RawExpr(_12782_s);
          RAST._IExpr _out7291;
          DCOMPUTF16._IOwnership _out7292;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7291, out _out7292);
          r = _out7291;
          resultingOwnership = _out7292;
          readIdents = _12781_recIdents;
          return ;
        }
      } else if (_source445.is_Index) {
        DAST._IExpression _12788___mcc_h239 = _source445.dtor_expr;
        DAST._ICollKind _12789___mcc_h240 = _source445.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _12790___mcc_h241 = _source445.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _12791_indices = _12790___mcc_h241;
        DAST._ICollKind _12792_collKind = _12789___mcc_h240;
        DAST._IExpression _12793_on = _12788___mcc_h239;
        {
          RAST._IExpr _12794_onExpr;
          DCOMPUTF16._IOwnership _12795_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12796_recIdents;
          RAST._IExpr _out7293;
          DCOMPUTF16._IOwnership _out7294;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7295;
          DCOMPUTF16.COMP.GenExpr(_12793_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7293, out _out7294, out _out7295);
          _12794_onExpr = _out7293;
          _12795_onOwned = _out7294;
          _12796_recIdents = _out7295;
          readIdents = _12796_recIdents;
          r = _12794_onExpr;
          BigInteger _12797_i;
          _12797_i = BigInteger.Zero;
          while ((_12797_i) < (new BigInteger((_12791_indices).Count))) {
            if (object.Equals(_12792_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _12798_idx;
            DCOMPUTF16._IOwnership _12799_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12800_recIdentsIdx;
            RAST._IExpr _out7296;
            DCOMPUTF16._IOwnership _out7297;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7298;
            DCOMPUTF16.COMP.GenExpr((_12791_indices).Select(_12797_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7296, out _out7297, out _out7298);
            _12798_idx = _out7296;
            _12799_idxOwned = _out7297;
            _12800_recIdentsIdx = _out7298;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_12798_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12800_recIdentsIdx);
            _12797_i = (_12797_i) + (BigInteger.One);
          }
          RAST._IExpr _out7299;
          DCOMPUTF16._IOwnership _out7300;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7299, out _out7300);
          r = _out7299;
          resultingOwnership = _out7300;
          return ;
        }
      } else if (_source445.is_IndexRange) {
        DAST._IExpression _12801___mcc_h242 = _source445.dtor_expr;
        bool _12802___mcc_h243 = _source445.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _12803___mcc_h244 = _source445.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _12804___mcc_h245 = _source445.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _12805_high = _12804___mcc_h245;
        Std.Wrappers._IOption<DAST._IExpression> _12806_low = _12803___mcc_h244;
        bool _12807_isArray = _12802___mcc_h243;
        DAST._IExpression _12808_on = _12801___mcc_h242;
        {
          RAST._IExpr _12809_onExpr;
          DCOMPUTF16._IOwnership _12810_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12811_recIdents;
          RAST._IExpr _out7301;
          DCOMPUTF16._IOwnership _out7302;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7303;
          DCOMPUTF16.COMP.GenExpr(_12808_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7301, out _out7302, out _out7303);
          _12809_onExpr = _out7301;
          _12810_onOwned = _out7302;
          _12811_recIdents = _out7303;
          readIdents = _12811_recIdents;
          Dafny.ISequence<Dafny.Rune> _12812_methodName;
          _12812_methodName = (((_12806_low).is_Some) ? ((((_12805_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_12805_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _12813_arguments;
          _12813_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source449 = _12806_low;
          if (_source449.is_None) {
          } else {
            DAST._IExpression _12814___mcc_h274 = _source449.dtor_value;
            DAST._IExpression _12815_l = _12814___mcc_h274;
            {
              RAST._IExpr _12816_lExpr;
              DCOMPUTF16._IOwnership _12817___v137;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12818_recIdentsL;
              RAST._IExpr _out7304;
              DCOMPUTF16._IOwnership _out7305;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7306;
              DCOMPUTF16.COMP.GenExpr(_12815_l, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7304, out _out7305, out _out7306);
              _12816_lExpr = _out7304;
              _12817___v137 = _out7305;
              _12818_recIdentsL = _out7306;
              _12813_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_12813_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_12816_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12818_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source450 = _12805_high;
          if (_source450.is_None) {
          } else {
            DAST._IExpression _12819___mcc_h275 = _source450.dtor_value;
            DAST._IExpression _12820_h = _12819___mcc_h275;
            {
              RAST._IExpr _12821_hExpr;
              DCOMPUTF16._IOwnership _12822___v138;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12823_recIdentsH;
              RAST._IExpr _out7307;
              DCOMPUTF16._IOwnership _out7308;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7309;
              DCOMPUTF16.COMP.GenExpr(_12820_h, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7307, out _out7308, out _out7309);
              _12821_hExpr = _out7307;
              _12822___v138 = _out7308;
              _12823_recIdentsH = _out7309;
              _12813_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_12813_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_12821_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12823_recIdentsH);
            }
          }
          r = _12809_onExpr;
          if (_12807_isArray) {
            if (!(_12812_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _12812_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _12812_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _12812_methodName))).Apply(_12813_arguments);
          } else {
            if (!(_12812_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_12812_methodName)).Apply(_12813_arguments);
            }
          }
          RAST._IExpr _out7310;
          DCOMPUTF16._IOwnership _out7311;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7310, out _out7311);
          r = _out7310;
          resultingOwnership = _out7311;
          return ;
        }
      } else if (_source445.is_TupleSelect) {
        DAST._IExpression _12824___mcc_h246 = _source445.dtor_expr;
        BigInteger _12825___mcc_h247 = _source445.dtor_index;
        BigInteger _12826_idx = _12825___mcc_h247;
        DAST._IExpression _12827_on = _12824___mcc_h246;
        {
          RAST._IExpr _12828_onExpr;
          DCOMPUTF16._IOwnership _12829_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12830_recIdents;
          RAST._IExpr _out7312;
          DCOMPUTF16._IOwnership _out7313;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7314;
          DCOMPUTF16.COMP.GenExpr(_12827_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7312, out _out7313, out _out7314);
          _12828_onExpr = _out7312;
          _12829_onOwnership = _out7313;
          _12830_recIdents = _out7314;
          r = (_12828_onExpr).Sel(Std.Strings.__default.OfNat(_12826_idx));
          RAST._IExpr _out7315;
          DCOMPUTF16._IOwnership _out7316;
          DCOMPUTF16.COMP.FromOwnership(r, _12829_onOwnership, expectedOwnership, out _out7315, out _out7316);
          r = _out7315;
          resultingOwnership = _out7316;
          readIdents = _12830_recIdents;
          return ;
        }
      } else if (_source445.is_Call) {
        DAST._IExpression _12831___mcc_h248 = _source445.dtor_on;
        DAST._ICallName _12832___mcc_h249 = _source445.dtor_callName;
        Dafny.ISequence<DAST._IType> _12833___mcc_h250 = _source445.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _12834___mcc_h251 = _source445.dtor_args;
        Dafny.ISequence<DAST._IExpression> _12835_args = _12834___mcc_h251;
        Dafny.ISequence<DAST._IType> _12836_typeArgs = _12833___mcc_h250;
        DAST._ICallName _12837_name = _12832___mcc_h249;
        DAST._IExpression _12838_on = _12831___mcc_h248;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _12839_onExpr;
          DCOMPUTF16._IOwnership _12840___v139;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12841_recIdents;
          RAST._IExpr _out7317;
          DCOMPUTF16._IOwnership _out7318;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7319;
          DCOMPUTF16.COMP.GenExpr(_12838_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipAutoBorrowed(), out _out7317, out _out7318, out _out7319);
          _12839_onExpr = _out7317;
          _12840___v139 = _out7318;
          _12841_recIdents = _out7319;
          Dafny.ISequence<RAST._IType> _12842_typeExprs;
          _12842_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_12836_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi36 = new BigInteger((_12836_typeArgs).Count);
            for (BigInteger _12843_typeI = BigInteger.Zero; _12843_typeI < _hi36; _12843_typeI++) {
              RAST._IType _12844_typeExpr;
              RAST._IType _out7320;
              _out7320 = DCOMPUTF16.COMP.GenType((_12836_typeArgs).Select(_12843_typeI), false, false);
              _12844_typeExpr = _out7320;
              _12842_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_12842_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_12844_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _12845_argExprs;
          _12845_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi37 = new BigInteger((_12835_args).Count);
          for (BigInteger _12846_i = BigInteger.Zero; _12846_i < _hi37; _12846_i++) {
            DCOMPUTF16._IOwnership _12847_argOwnership;
            _12847_argOwnership = DCOMPUTF16.Ownership.create_OwnershipBorrowed();
            if (((_12837_name).is_Name) && ((_12846_i) < (new BigInteger((((_12837_name).dtor_signature)).Count)))) {
              RAST._IType _12848_tpe;
              RAST._IType _out7321;
              _out7321 = DCOMPUTF16.COMP.GenType(((((_12837_name).dtor_signature)).Select(_12846_i)).dtor_typ, false, false);
              _12848_tpe = _out7321;
              if ((_12848_tpe).HasCopySemantics()) {
                _12847_argOwnership = DCOMPUTF16.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _12849_argExpr;
            DCOMPUTF16._IOwnership _12850___v140;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12851_argIdents;
            RAST._IExpr _out7322;
            DCOMPUTF16._IOwnership _out7323;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7324;
            DCOMPUTF16.COMP.GenExpr((_12835_args).Select(_12846_i), selfIdent, env, _12847_argOwnership, out _out7322, out _out7323, out _out7324);
            _12849_argExpr = _out7322;
            _12850___v140 = _out7323;
            _12851_argIdents = _out7324;
            _12845_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_12845_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_12849_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12851_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12841_recIdents);
          Dafny.ISequence<Dafny.Rune> _12852_renderedName;
          _12852_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source451) => {
            if (_source451.is_Name) {
              Dafny.ISequence<Dafny.Rune> _12853___mcc_h276 = _source451.dtor_name;
              Dafny.ISequence<DAST._IFormal> _12854___mcc_h277 = _source451.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _12855_ident = _12853___mcc_h276;
              return DCOMPUTF16.__default.escapeIdent(_12855_ident);
            } else if (_source451.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source451.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source451.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_12837_name);
          DAST._IExpression _source452 = _12838_on;
          if (_source452.is_Literal) {
            DAST._ILiteral _12856___mcc_h278 = _source452.dtor_Literal_a0;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _12857___mcc_h280 = _source452.dtor_Ident_a0;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12858___mcc_h282 = _source452.dtor_Companion_a0;
            {
              _12839_onExpr = (_12839_onExpr).MSel(_12852_renderedName);
            }
          } else if (_source452.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _12859___mcc_h284 = _source452.dtor_Tuple_a0;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12860___mcc_h286 = _source452.dtor_path;
            Dafny.ISequence<DAST._IType> _12861___mcc_h287 = _source452.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _12862___mcc_h288 = _source452.dtor_args;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_NewArray) {
            Dafny.ISequence<DAST._IExpression> _12863___mcc_h292 = _source452.dtor_dims;
            DAST._IType _12864___mcc_h293 = _source452.dtor_typ;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_DatatypeValue) {
            DAST._IDatatypeType _12865___mcc_h296 = _source452.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _12866___mcc_h297 = _source452.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _12867___mcc_h298 = _source452.dtor_variant;
            bool _12868___mcc_h299 = _source452.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _12869___mcc_h300 = _source452.dtor_contents;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Convert) {
            DAST._IExpression _12870___mcc_h306 = _source452.dtor_value;
            DAST._IType _12871___mcc_h307 = _source452.dtor_from;
            DAST._IType _12872___mcc_h308 = _source452.dtor_typ;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SeqConstruct) {
            DAST._IExpression _12873___mcc_h312 = _source452.dtor_length;
            DAST._IExpression _12874___mcc_h313 = _source452.dtor_elem;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _12875___mcc_h316 = _source452.dtor_elements;
            DAST._IType _12876___mcc_h317 = _source452.dtor_typ;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _12877___mcc_h320 = _source452.dtor_elements;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _12878___mcc_h322 = _source452.dtor_elements;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _12879___mcc_h324 = _source452.dtor_mapElems;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_MapBuilder) {
            DAST._IType _12880___mcc_h326 = _source452.dtor_keyType;
            DAST._IType _12881___mcc_h327 = _source452.dtor_valueType;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SeqUpdate) {
            DAST._IExpression _12882___mcc_h330 = _source452.dtor_expr;
            DAST._IExpression _12883___mcc_h331 = _source452.dtor_indexExpr;
            DAST._IExpression _12884___mcc_h332 = _source452.dtor_value;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_MapUpdate) {
            DAST._IExpression _12885___mcc_h336 = _source452.dtor_expr;
            DAST._IExpression _12886___mcc_h337 = _source452.dtor_indexExpr;
            DAST._IExpression _12887___mcc_h338 = _source452.dtor_value;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SetBuilder) {
            DAST._IType _12888___mcc_h342 = _source452.dtor_elemType;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_ToMultiset) {
            DAST._IExpression _12889___mcc_h344 = _source452.dtor_ToMultiset_a0;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_This) {
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Ite) {
            DAST._IExpression _12890___mcc_h346 = _source452.dtor_cond;
            DAST._IExpression _12891___mcc_h347 = _source452.dtor_thn;
            DAST._IExpression _12892___mcc_h348 = _source452.dtor_els;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_UnOp) {
            DAST._IUnaryOp _12893___mcc_h352 = _source452.dtor_unOp;
            DAST._IExpression _12894___mcc_h353 = _source452.dtor_expr;
            DAST.Format._IUnOpFormat _12895___mcc_h354 = _source452.dtor_format1;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_BinOp) {
            DAST._IBinOp _12896___mcc_h358 = _source452.dtor_op;
            DAST._IExpression _12897___mcc_h359 = _source452.dtor_left;
            DAST._IExpression _12898___mcc_h360 = _source452.dtor_right;
            DAST.Format._IBinOpFormat _12899___mcc_h361 = _source452.dtor_format2;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_ArrayLen) {
            DAST._IExpression _12900___mcc_h366 = _source452.dtor_expr;
            BigInteger _12901___mcc_h367 = _source452.dtor_dim;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_MapKeys) {
            DAST._IExpression _12902___mcc_h370 = _source452.dtor_expr;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_MapValues) {
            DAST._IExpression _12903___mcc_h372 = _source452.dtor_expr;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Select) {
            DAST._IExpression _12904___mcc_h374 = _source452.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _12905___mcc_h375 = _source452.dtor_field;
            bool _12906___mcc_h376 = _source452.dtor_isConstant;
            bool _12907___mcc_h377 = _source452.dtor_onDatatype;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SelectFn) {
            DAST._IExpression _12908___mcc_h382 = _source452.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _12909___mcc_h383 = _source452.dtor_field;
            bool _12910___mcc_h384 = _source452.dtor_onDatatype;
            bool _12911___mcc_h385 = _source452.dtor_isStatic;
            BigInteger _12912___mcc_h386 = _source452.dtor_arity;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Index) {
            DAST._IExpression _12913___mcc_h392 = _source452.dtor_expr;
            DAST._ICollKind _12914___mcc_h393 = _source452.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _12915___mcc_h394 = _source452.dtor_indices;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_IndexRange) {
            DAST._IExpression _12916___mcc_h398 = _source452.dtor_expr;
            bool _12917___mcc_h399 = _source452.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _12918___mcc_h400 = _source452.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _12919___mcc_h401 = _source452.dtor_high;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_TupleSelect) {
            DAST._IExpression _12920___mcc_h406 = _source452.dtor_expr;
            BigInteger _12921___mcc_h407 = _source452.dtor_index;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Call) {
            DAST._IExpression _12922___mcc_h410 = _source452.dtor_on;
            DAST._ICallName _12923___mcc_h411 = _source452.dtor_callName;
            Dafny.ISequence<DAST._IType> _12924___mcc_h412 = _source452.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _12925___mcc_h413 = _source452.dtor_args;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _12926___mcc_h418 = _source452.dtor_params;
            DAST._IType _12927___mcc_h419 = _source452.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _12928___mcc_h420 = _source452.dtor_body;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12929___mcc_h424 = _source452.dtor_values;
            DAST._IType _12930___mcc_h425 = _source452.dtor_retType;
            DAST._IExpression _12931___mcc_h426 = _source452.dtor_expr;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _12932___mcc_h430 = _source452.dtor_name;
            DAST._IType _12933___mcc_h431 = _source452.dtor_typ;
            DAST._IExpression _12934___mcc_h432 = _source452.dtor_value;
            DAST._IExpression _12935___mcc_h433 = _source452.dtor_iifeBody;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_Apply) {
            DAST._IExpression _12936___mcc_h438 = _source452.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _12937___mcc_h439 = _source452.dtor_args;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_TypeTest) {
            DAST._IExpression _12938___mcc_h442 = _source452.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12939___mcc_h443 = _source452.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _12940___mcc_h444 = _source452.dtor_variant;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_InitializationValue) {
            DAST._IType _12941___mcc_h448 = _source452.dtor_typ;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_BoolBoundedPool) {
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SetBoundedPool) {
            DAST._IExpression _12942___mcc_h450 = _source452.dtor_of;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else if (_source452.is_SeqBoundedPool) {
            DAST._IExpression _12943___mcc_h452 = _source452.dtor_of;
            bool _12944___mcc_h453 = _source452.dtor_includeDuplicates;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          } else {
            DAST._IExpression _12945___mcc_h456 = _source452.dtor_lo;
            DAST._IExpression _12946___mcc_h457 = _source452.dtor_hi;
            {
              _12839_onExpr = (_12839_onExpr).Sel(_12852_renderedName);
            }
          }
          r = _12839_onExpr;
          if ((new BigInteger((_12842_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_12842_typeExprs);
          }
          r = (r).Apply(_12845_argExprs);
          RAST._IExpr _out7325;
          DCOMPUTF16._IOwnership _out7326;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7325, out _out7326);
          r = _out7325;
          resultingOwnership = _out7326;
          return ;
        }
      } else if (_source445.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _12947___mcc_h252 = _source445.dtor_params;
        DAST._IType _12948___mcc_h253 = _source445.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _12949___mcc_h254 = _source445.dtor_body;
        Dafny.ISequence<DAST._IStatement> _12950_body = _12949___mcc_h254;
        DAST._IType _12951_retType = _12948___mcc_h253;
        Dafny.ISequence<DAST._IFormal> _12952_paramsDafny = _12947___mcc_h252;
        {
          Dafny.ISequence<RAST._IFormal> _12953_params;
          Dafny.ISequence<RAST._IFormal> _out7327;
          _out7327 = DCOMPUTF16.COMP.GenParams(_12952_paramsDafny);
          _12953_params = _out7327;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12954_paramNames;
          _12954_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _12955_paramTypesMap;
          _12955_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi38 = new BigInteger((_12953_params).Count);
          for (BigInteger _12956_i = BigInteger.Zero; _12956_i < _hi38; _12956_i++) {
            Dafny.ISequence<Dafny.Rune> _12957_name;
            _12957_name = ((_12953_params).Select(_12956_i)).dtor_name;
            _12954_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_12954_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_12957_name));
            _12955_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_12955_paramTypesMap, _12957_name, ((_12953_params).Select(_12956_i)).dtor_tpe);
          }
          DCOMPUTF16._IEnvironment _12958_env;
          _12958_env = DCOMPUTF16.Environment.create(_12954_paramNames, _12955_paramTypesMap);
          RAST._IExpr _12959_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12960_recIdents;
          DCOMPUTF16._IEnvironment _12961___v144;
          RAST._IExpr _out7328;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7329;
          DCOMPUTF16._IEnvironment _out7330;
          DCOMPUTF16.COMP.GenStmts(_12950_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _12958_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out7328, out _out7329, out _out7330);
          _12959_recursiveGen = _out7328;
          _12960_recIdents = _out7329;
          _12961___v144 = _out7330;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _12962_allReadCloned;
          _12962_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          while (!(_12960_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _12963_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_5 in (_12960_recIdents).Elements) {
              _12963_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_5;
              if ((_12960_recIdents).Contains(_12963_next)) {
                goto after__ASSIGN_SUCH_THAT_5;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 3475)");
          after__ASSIGN_SUCH_THAT_5: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_12963_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _12962_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(_12962_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let _this = self.clone();\n"));
              }
            } else if (!((_12954_paramNames).Contains(_12963_next))) {
              _12962_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12962_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent(_12963_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), DCOMPUTF16.__default.escapeIdent(_12963_next)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12963_next));
            }
            _12960_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_12960_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12963_next));
          }
          Dafny.ISequence<Dafny.Rune> _12964_paramsString;
          _12964_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          Dafny.ISequence<Dafny.Rune> _12965_paramTypes;
          _12965_paramTypes = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi39 = new BigInteger((_12953_params).Count);
          for (BigInteger _12966_i = BigInteger.Zero; _12966_i < _hi39; _12966_i++) {
            if ((_12966_i).Sign == 1) {
              _12964_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_12964_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              _12965_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_12965_paramTypes, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _12964_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12964_paramsString, DCOMPUTF16.__default.escapeIdent(((_12953_params).Select(_12966_i)).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (RAST.Type.create_Borrowed(((_12953_params).Select(_12966_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
            _12965_paramTypes = Dafny.Sequence<Dafny.Rune>.Concat(_12965_paramTypes, (RAST.Type.create_Borrowed(((_12953_params).Select(_12966_i)).dtor_tpe))._ToString(DCOMPUTF16.__default.IND));
          }
          RAST._IType _12967_retTypeGen;
          RAST._IType _out7331;
          _out7331 = DCOMPUTF16.COMP.GenType(_12951_retType, false, true);
          _12967_retTypeGen = _out7331;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::FunctionWrapper::<::std::rc::Rc<dyn ::std::ops::Fn("), _12965_paramTypes), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> ")), (_12967_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>({\n")), _12962_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new(move |")), _12964_paramsString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| -> ")), (_12967_retTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), (_12959_recursiveGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})})")));
          RAST._IExpr _out7332;
          DCOMPUTF16._IOwnership _out7333;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7332, out _out7333);
          r = _out7332;
          resultingOwnership = _out7333;
          return ;
        }
      } else if (_source445.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12968___mcc_h255 = _source445.dtor_values;
        DAST._IType _12969___mcc_h256 = _source445.dtor_retType;
        DAST._IExpression _12970___mcc_h257 = _source445.dtor_expr;
        DAST._IExpression _12971_expr = _12970___mcc_h257;
        DAST._IType _12972_retType = _12969___mcc_h256;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _12973_values = _12968___mcc_h255;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _12974_paramNames;
          _12974_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _12975_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out7334;
          _out7334 = DCOMPUTF16.COMP.GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_12976_value) => {
            return (_12976_value).dtor__0;
          })), _12973_values));
          _12975_paramFormals = _out7334;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _12977_paramTypes;
          _12977_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12978_paramNamesSet;
          _12978_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi40 = new BigInteger((_12973_values).Count);
          for (BigInteger _12979_i = BigInteger.Zero; _12979_i < _hi40; _12979_i++) {
            Dafny.ISequence<Dafny.Rune> _12980_name;
            _12980_name = (((_12973_values).Select(_12979_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _12981_rName;
            _12981_rName = DCOMPUTF16.__default.escapeIdent(_12980_name);
            _12974_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_12974_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_12981_rName));
            _12977_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_12977_paramTypes, _12981_rName, ((_12975_paramFormals).Select(_12979_i)).dtor_tpe);
            _12978_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_12978_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_12980_name));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<Dafny.Rune> _12982_s;
          _12982_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
          Dafny.ISequence<Dafny.Rune> _12983_paramsString;
          _12983_paramsString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _hi41 = new BigInteger((_12973_values).Count);
          for (BigInteger _12984_i = BigInteger.Zero; _12984_i < _hi41; _12984_i++) {
            if ((_12984_i).Sign == 1) {
              _12983_paramsString = Dafny.Sequence<Dafny.Rune>.Concat(_12983_paramsString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IType _12985_typStr;
            RAST._IType _out7335;
            _out7335 = DCOMPUTF16.COMP.GenType((((_12973_values).Select(_12984_i)).dtor__0).dtor_typ, false, true);
            _12985_typStr = _out7335;
            RAST._IExpr _12986_valueGen;
            DCOMPUTF16._IOwnership _12987___v145;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12988_recIdents;
            RAST._IExpr _out7336;
            DCOMPUTF16._IOwnership _out7337;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7338;
            DCOMPUTF16.COMP.GenExpr(((_12973_values).Select(_12984_i)).dtor__1, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7336, out _out7337, out _out7338);
            _12986_valueGen = _out7336;
            _12987___v145 = _out7337;
            _12988_recIdents = _out7338;
            _12982_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12982_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), DCOMPUTF16.__default.escapeIdent((((_12973_values).Select(_12984_i)).dtor__0).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_12985_typStr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = "));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _12988_recIdents);
            _12982_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12982_s, (_12986_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
          }
          DCOMPUTF16._IEnvironment _12989_newEnv;
          _12989_newEnv = DCOMPUTF16.Environment.create(_12974_paramNames, _12977_paramTypes);
          RAST._IExpr _12990_recGen;
          DCOMPUTF16._IOwnership _12991_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _12992_recIdents;
          RAST._IExpr _out7339;
          DCOMPUTF16._IOwnership _out7340;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7341;
          DCOMPUTF16.COMP.GenExpr(_12971_expr, selfIdent, _12989_newEnv, expectedOwnership, out _out7339, out _out7340, out _out7341);
          _12990_recGen = _out7339;
          _12991_recOwned = _out7340;
          _12992_recIdents = _out7341;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_12992_recIdents, _12978_paramNamesSet);
          _12982_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_12982_s, (_12990_recGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}"));
          r = RAST.Expr.create_RawExpr(_12982_s);
          RAST._IExpr _out7342;
          DCOMPUTF16._IOwnership _out7343;
          DCOMPUTF16.COMP.FromOwnership(r, _12991_recOwned, expectedOwnership, out _out7342, out _out7343);
          r = _out7342;
          resultingOwnership = _out7343;
          return ;
        }
      } else if (_source445.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _12993___mcc_h258 = _source445.dtor_name;
        DAST._IType _12994___mcc_h259 = _source445.dtor_typ;
        DAST._IExpression _12995___mcc_h260 = _source445.dtor_value;
        DAST._IExpression _12996___mcc_h261 = _source445.dtor_iifeBody;
        DAST._IExpression _12997_iifeBody = _12996___mcc_h261;
        DAST._IExpression _12998_value = _12995___mcc_h260;
        DAST._IType _12999_tpe = _12994___mcc_h259;
        Dafny.ISequence<Dafny.Rune> _13000_name = _12993___mcc_h258;
        {
          RAST._IExpr _13001_valueGen;
          DCOMPUTF16._IOwnership _13002___v146;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13003_recIdents;
          RAST._IExpr _out7344;
          DCOMPUTF16._IOwnership _out7345;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7346;
          DCOMPUTF16.COMP.GenExpr(_12998_value, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7344, out _out7345, out _out7346);
          _13001_valueGen = _out7344;
          _13002___v146 = _out7345;
          _13003_recIdents = _out7346;
          readIdents = _13003_recIdents;
          RAST._IType _13004_valueTypeGen;
          RAST._IType _out7347;
          _out7347 = DCOMPUTF16.COMP.GenType(_12999_tpe, false, true);
          _13004_valueTypeGen = _out7347;
          RAST._IExpr _13005_bodyGen;
          DCOMPUTF16._IOwnership _13006___v147;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13007_bodyIdents;
          RAST._IExpr _out7348;
          DCOMPUTF16._IOwnership _out7349;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7350;
          DCOMPUTF16.COMP.GenExpr(_12997_iifeBody, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7348, out _out7349, out _out7350);
          _13005_bodyGen = _out7348;
          _13006___v147 = _out7349;
          _13007_bodyIdents = _out7350;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_13007_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_13000_name))));
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet "), DCOMPUTF16.__default.escapeIdent((_13000_name))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(": ")), (_13004_valueTypeGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), (_13001_valueGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n")), (_13005_bodyGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n}")));
          RAST._IExpr _out7351;
          DCOMPUTF16._IOwnership _out7352;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7351, out _out7352);
          r = _out7351;
          resultingOwnership = _out7352;
          return ;
        }
      } else if (_source445.is_Apply) {
        DAST._IExpression _13008___mcc_h262 = _source445.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _13009___mcc_h263 = _source445.dtor_args;
        Dafny.ISequence<DAST._IExpression> _13010_args = _13009___mcc_h263;
        DAST._IExpression _13011_func = _13008___mcc_h262;
        {
          RAST._IExpr _13012_funcExpr;
          DCOMPUTF16._IOwnership _13013___v148;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13014_recIdents;
          RAST._IExpr _out7353;
          DCOMPUTF16._IOwnership _out7354;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7355;
          DCOMPUTF16.COMP.GenExpr(_13011_func, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7353, out _out7354, out _out7355);
          _13012_funcExpr = _out7353;
          _13013___v148 = _out7354;
          _13014_recIdents = _out7355;
          readIdents = _13014_recIdents;
          Dafny.ISequence<Dafny.Rune> _13015_argString;
          _13015_argString = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
          BigInteger _13016_i;
          _13016_i = BigInteger.Zero;
          while ((_13016_i) < (new BigInteger((_13010_args).Count))) {
            if ((_13016_i).Sign == 1) {
              _13015_argString = Dafny.Sequence<Dafny.Rune>.Concat(_13015_argString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            RAST._IExpr _13017_argExpr;
            DCOMPUTF16._IOwnership _13018_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13019_argIdents;
            RAST._IExpr _out7356;
            DCOMPUTF16._IOwnership _out7357;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7358;
            DCOMPUTF16.COMP.GenExpr((_13010_args).Select(_13016_i), selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7356, out _out7357, out _out7358);
            _13017_argExpr = _out7356;
            _13018_argOwned = _out7357;
            _13019_argIdents = _out7358;
            Dafny.ISequence<Dafny.Rune> _13020_argExprString;
            _13020_argExprString = (_13017_argExpr)._ToString(DCOMPUTF16.__default.IND);
            if (object.Equals(_13018_argOwned, DCOMPUTF16.Ownership.create_OwnershipOwned())) {
              _13020_argExprString = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"), _13020_argExprString);
            }
            _13015_argString = Dafny.Sequence<Dafny.Rune>.Concat(_13015_argString, _13020_argExprString);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _13019_argIdents);
            _13016_i = (_13016_i) + (BigInteger.One);
          }
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_13012_funcExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _13015_argString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("))")));
          RAST._IExpr _out7359;
          DCOMPUTF16._IOwnership _out7360;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7359, out _out7360);
          r = _out7359;
          resultingOwnership = _out7360;
          return ;
        }
      } else if (_source445.is_TypeTest) {
        DAST._IExpression _13021___mcc_h264 = _source445.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13022___mcc_h265 = _source445.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _13023___mcc_h266 = _source445.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _13024_variant = _13023___mcc_h266;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _13025_dType = _13022___mcc_h265;
        DAST._IExpression _13026_on = _13021___mcc_h264;
        {
          RAST._IExpr _13027_exprGen;
          DCOMPUTF16._IOwnership _13028___v149;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13029_recIdents;
          RAST._IExpr _out7361;
          DCOMPUTF16._IOwnership _out7362;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7363;
          DCOMPUTF16.COMP.GenExpr(_13026_on, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7361, out _out7362, out _out7363);
          _13027_exprGen = _out7361;
          _13028___v149 = _out7362;
          _13029_recIdents = _out7363;
          RAST._IType _13030_dTypePath;
          RAST._IType _out7364;
          _out7364 = DCOMPUTF16.COMP.GenPath(_13025_dType);
          _13030_dTypePath = _out7364;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_13027_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_13030_dTypePath).MSel(DCOMPUTF16.__default.escapeIdent(_13024_variant)))._ToString(DCOMPUTF16.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out7365;
          DCOMPUTF16._IOwnership _out7366;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7365, out _out7366);
          r = _out7365;
          resultingOwnership = _out7366;
          readIdents = _13029_recIdents;
          return ;
        }
      } else if (_source445.is_InitializationValue) {
        DAST._IType _13031___mcc_h267 = _source445.dtor_typ;
        DAST._IType _13032_typ = _13031___mcc_h267;
        {
          RAST._IType _13033_typExpr;
          RAST._IType _out7367;
          _out7367 = DCOMPUTF16.COMP.GenType(_13032_typ, false, false);
          _13033_typExpr = _out7367;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_13033_typExpr)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          RAST._IExpr _out7368;
          DCOMPUTF16._IOwnership _out7369;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7368, out _out7369);
          r = _out7368;
          resultingOwnership = _out7369;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source445.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out7370;
          DCOMPUTF16._IOwnership _out7371;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7370, out _out7371);
          r = _out7370;
          resultingOwnership = _out7371;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source445.is_SetBoundedPool) {
        DAST._IExpression _13034___mcc_h268 = _source445.dtor_of;
        DAST._IExpression _13035_of = _13034___mcc_h268;
        {
          RAST._IExpr _13036_exprGen;
          DCOMPUTF16._IOwnership _13037___v150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13038_recIdents;
          RAST._IExpr _out7372;
          DCOMPUTF16._IOwnership _out7373;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7374;
          DCOMPUTF16.COMP.GenExpr(_13035_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7372, out _out7373, out _out7374);
          _13036_exprGen = _out7372;
          _13037___v150 = _out7373;
          _13038_recIdents = _out7374;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13036_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()")));
          RAST._IExpr _out7375;
          DCOMPUTF16._IOwnership _out7376;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7375, out _out7376);
          r = _out7375;
          resultingOwnership = _out7376;
          readIdents = _13038_recIdents;
          return ;
        }
      } else if (_source445.is_SeqBoundedPool) {
        DAST._IExpression _13039___mcc_h269 = _source445.dtor_of;
        bool _13040___mcc_h270 = _source445.dtor_includeDuplicates;
        bool _13041_includeDuplicates = _13040___mcc_h270;
        DAST._IExpression _13042_of = _13039___mcc_h269;
        {
          RAST._IExpr _13043_exprGen;
          DCOMPUTF16._IOwnership _13044___v151;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13045_recIdents;
          RAST._IExpr _out7377;
          DCOMPUTF16._IOwnership _out7378;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7379;
          DCOMPUTF16.COMP.GenExpr(_13042_of, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipBorrowed(), out _out7377, out _out7378, out _out7379);
          _13043_exprGen = _out7377;
          _13044___v151 = _out7378;
          _13045_recIdents = _out7379;
          Dafny.ISequence<Dafny.Rune> _13046_s;
          _13046_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), (_13043_exprGen)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").iter()"));
          if (!(_13041_includeDuplicates)) {
            _13046_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::itertools::Itertools::unique("), _13046_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"));
          }
          r = RAST.Expr.create_RawExpr(_13046_s);
          RAST._IExpr _out7380;
          DCOMPUTF16._IOwnership _out7381;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7380, out _out7381);
          r = _out7380;
          resultingOwnership = _out7381;
          readIdents = _13045_recIdents;
          return ;
        }
      } else {
        DAST._IExpression _13047___mcc_h271 = _source445.dtor_lo;
        DAST._IExpression _13048___mcc_h272 = _source445.dtor_hi;
        DAST._IExpression _13049_hi = _13048___mcc_h272;
        DAST._IExpression _13050_lo = _13047___mcc_h271;
        {
          RAST._IExpr _13051_lo;
          DCOMPUTF16._IOwnership _13052___v152;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13053_recIdentsLo;
          RAST._IExpr _out7382;
          DCOMPUTF16._IOwnership _out7383;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7384;
          DCOMPUTF16.COMP.GenExpr(_13050_lo, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7382, out _out7383, out _out7384);
          _13051_lo = _out7382;
          _13052___v152 = _out7383;
          _13053_recIdentsLo = _out7384;
          RAST._IExpr _13054_hi;
          DCOMPUTF16._IOwnership _13055___v153;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _13056_recIdentsHi;
          RAST._IExpr _out7385;
          DCOMPUTF16._IOwnership _out7386;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out7387;
          DCOMPUTF16.COMP.GenExpr(_13049_hi, selfIdent, env, DCOMPUTF16.Ownership.create_OwnershipOwned(), out _out7385, out _out7386, out _out7387);
          _13054_hi = _out7385;
          _13055___v153 = _out7386;
          _13056_recIdentsHi = _out7387;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::integer_range("), (_13051_lo)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", ")), (_13054_hi)._ToString(DCOMPUTF16.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          RAST._IExpr _out7388;
          DCOMPUTF16._IOwnership _out7389;
          DCOMPUTF16.COMP.FromOwned(r, expectedOwnership, out _out7388, out _out7389);
          r = _out7388;
          resultingOwnership = _out7389;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_13053_recIdentsLo, _13056_recIdentsHi);
          return ;
        }
      }
    }
    public static Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern crate dafny_runtime;\n"));
      BigInteger _13057_i;
      _13057_i = BigInteger.Zero;
      while ((_13057_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _13058_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _13059_m;
        RAST._IMod _out7390;
        _out7390 = DCOMPUTF16.COMP.GenModule((p).Select(_13057_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _13059_m = _out7390;
        _13058_generated = (_13059_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_13057_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _13058_generated);
        _13057_i = (_13057_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _13060_i;
      _13060_i = BigInteger.Zero;
      while ((_13060_i) < (new BigInteger((fullName).Count))) {
        if ((_13060_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMPUTF16.__default.escapeIdent((fullName).Select(_13060_i)));
        _13060_i = (_13060_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMPUTF16

